Proceedings of the Workshop on BioNLP: Shared Task, pages 115?118,Boulder, Colorado, June 2009. c?2009 Association for Computational LinguisticsBiomedical Event Detection using Rules,Conditional Random Fields and Parse Tree DistancesFarzaneh Sarafraz*, James Eales*, Reza Mohammadi?, Jonathan Dickerson?,David Robertson?, Goran Nenadic**School of Computer Science, University of Manchester?Faulty of Life Sciences, University of Manchester?Dept.
of Mathematics and Computer Science, Sharif University of Technologysarafraf@cs.man.ac.uk, g.nenadic@manchester.ac.ukAbstractThis paper reports on a system developed forthe BioNLP'09 shared task on detection andcharacterisation of biomedical events.
Eventtriggers and types were recognised using aconditional random field classifier and a set ofrules, while event participants were identifiedusing a rule-based system that relied on rela-tive distances between candidate entities andthe trigger in the associated parse tree.
The re-sults on previously unseen test data were en-couraging: for non-regulatory events, the F-score was almost 50% (with precision above60%), with the overall F-score of around 30%(49% precision).
The performance on morecomplex regulatory events was poor(F-measure of 7%).
Among the 24 teamssubmitting the test results, our results wereranked 12th for the overall F-score and 8th forthe F-score of non-regulation events.1 IntroductionThe aim of the BioNLP'09 shared task 1 was tocharacterise molecular events being reported in aMedline abstract by identifying the textual trigger,event type and participating entities (Kim et al2009).
Nine event types were considered: geneexpression, transcription, protein catabolism, lo-calisation, phosporylation, binding, regulation,positive regulation, and negative regulation.
De-pending on the event type, the task included theidentification of either one (for the first five eventtypes mentioned above) or more (e.g.
for binding)participating proteins.
Information requested forregulatory events was more complex: in addition toone theme (a protein or another event), theseevents could also have a cause (a protein or an-other event) that needed to be identified.The organisers have distributed a trainingdataset of 800 abstracts, with gene and gene prod-uct mentions pre-annotated in text.
In addition, adevelopment set (150 abstracts) was provided toassess the quality of the extractions during thetraining and development phases.2 MethodsThe system developed for the challenge consists ofthree main modules: (1) event trigger and type de-tection, (2) event participant detection, and(3) post-processing of the results.2.1 Event Trigger and Type DetectionOur view of the event trigger and type detectionsubtask was that each token in a sentence neededto be tagged either as a trigger for one of the nineevent types, or as a non-trigger/event token.
Wetherefore decided to identify event types and trig-gers in a single step by training a conditional ran-dom field (CRF) classifier that assigned one of ten(nine types plus non-trigger) tags to each token.CRFs have been shown to be particularly suitablefor tagging sequential data such as natural lan-guage text, because they take into account featuresand tags of neighbouring tokens when evaluatingthe probability of a tag for a given token.Tokens and their part-of-speech (POS) tagswere recognised using the Genia Tagger (Tsuruokaet al 2005).
Each stemmed token was representedusing a feature vector consisting of the followingfeatures:?
A binary feature indicating whether the to-ken is a protein;?
A binary feature indicating whether the to-ken is a known protein-protein interactionword (we used a pre-complied dictionary of115such words collected from previous studies(Fu et al 2008; Yang et al 2008);?
The token's POS tag;?
The log-frequencies of the token being atrigger for each event type in the trainingdata (nine features);?
The number of proteins in the given sen-tence.Other features (e.g.
separating the known inter-action words according to the nine event types)were explored during the development phase, butwere not included in the final feature list since theyincreased the sparseness of the data and did notimprove the overall results.
The CRF parameterswere adjusted for maximum performance, includ-ing the choice of training algorithms, the numberof training steps, the size of the window withinwhich the tokens can affect any certain token, andthe number of training abstracts used in each train-ing step.
It was interesting to notice that there wereno significant improvements in the performanceafter training on 100, 400 or 800 abstracts from thetraining set (data not shown).2.2 Locating Event ThemesAfter detecting potential triggers and associatedevent types, the next task was to locate possibleparticipants (i.e.
?themes?
and ?causes?)
for eachevent.
It was obvious that participants did not haveto be the nearest to the trigger on the surface level,so our approach was based on distances within theparse trees associated with the sentences contain-ing candidate events.
Parse tree distances havebeen studied previously in clustering and automatictranslation tasks (Emms 2008), so we hypothesisedthat we could use them to identify the most likelyparticipants.
The training data was analysed for theproximities between the triggers and the (correct)event participants in the parse tree of the sentence.1Figure 1 gives a detailed density function of thesedistances (ignoring non-protein nodes).
The analy-sis showed that a theme was usually amongst thenearest proteins to the trigger in terms of parse treedistances: for example, in 60% of all single themeevents (e.g.
localisation, phosphorylation) the cor-rect protein participant was the trigger?s nearest orsecond nearest protein in the parse tree.
A further1The parse trees were produced by the GDep parser (Sagaeand Tsujii, 2007) and supplied by the challenge organisers.analysis demonstrated that it was more likely for atheme to appear in the sub-tree of the correspond-ing trigger, with 70% of all single theme eventshaving a theme which appeared in the sub-tree ofthe trigger.
Furthermore, specific analyses of theparse trees associated to the binding events (whichcan have more than one theme) suggested a linearrelationship between the parse tree distance andbinding event participant number (participant1 isthe nearest, participant2 is the second nearest, etc.
).Figure 1: Probability density function of the distancebetween the trigger and the theme in the parse tree(ignoring the tokens that are not proteins)We used this distributional analysis (derivedfrom the training data) to design a rule-basedmethod for the identification of participatingthemes.
The rules were manually derived for eachof the nine event classes, by defining:?
a threshold for the maximum distance  to thetrigger in the sub-tree for the given eventtype;?
a threshold for the difference between themaximum distance in the whole tree and thegiven sub-tree for the given event type;?
the number of nearest proteins to be re-ported for each trigger.All entities that satisfied a distance-based rulefor a given trigger were selected as the correspond-ing theme(s).
For example, if the event type isbinding, then up to the second closest protein in thesub-tree, and the first closest protein in the rest ofthe tree are reported as themes.116Figure 2 provides an example of the method ap-plied to a sentence with multiple events.
Regulatesand secretion are correctly identified as triggers fora regulation and a localization event in the firstphase.
Using the rules for localization, the themesfor two localization events are correctly recognisedas proteins T2 and T3, whereas T1 was ignoredsince it did not appear in the trigger's sub-tree.Engineering and applying rules for non-regulatory events was relatively straightforward.However, regulatory events can have differentkinds of participants (a protein or an event).
In thecase of an event, we were trying to locate the near-est trigger for the event (being regulated) in theparse tree.
For example, in Figure 2, the nearestoption to the regulation trigger (secretion) was thetrigger of the two localization events, and bothevents should be (correctly) reported as the themesof two regulation events.
Therefore, we require anumber of recursions in the application of the rulesto represent higher-order regulatory dependences.For the purposes of this challenge, only regulationsup to the second ?order?
were detected, allowingother events to act as themes and causes as well asproteins.
Attempts to find more complicated regu-latory events using this method resulted in a de-creased precision and/or F-score.2.3 Post-processing Event ProfilesThe performance of the first two phases wasstudied on the development dataset: we noted anumber of false-positive and false-negative resultsthat were mostly due to a set of recurring triggers.We therefore decided to perform a post-processingstep to improve the identification of event triggersand associated types.
In the first step (improvingthe event trigger and type detection), the output ofthe CRF was overridden in cases where the triggersappeared in a list of negatively discriminated trig-ger words which was collected after the manualanalysis of the false positive results on the trainingand development data.
Similarly, in cases wherethe CRF missed a highly indicative trigger (from amanually collected set) for a given event type, thetrigger was added as part of post-processing.
In thelatter case, the sentence was then processed for theevent theme detection (as described in 2.2).In the second step of the pre-processing phase,we forced highly indicative regulation triggers (ifnot previously identified) to be associated with anFigure 2: The parse tree of sentence Monocyte tetheringby P-selectin regulates monocyte chemotactic protein-1and tumor necrosis factor-alpha secretion.
The triggersare shown in boxes, and the entities are numbered.event by assigning proteins appearing in the sen-tence to them, even when no protein in the sen-tence satisfied the theme or cause criteria describedin Section 2.2.
This was aimed at improving theextremely low recall for regulatory events.Finally, since triggers could consist of more thanone consecutive token, a set of simple rules wereapplied to remove typical false-negative constitu-ents identified by the CRF as part of triggers (e.g.sometimes linking words appeared within triggers).3 Results and discussionThe task 1 assessment was based on the output ofthe system when applied to the test dataset of 260previously unseen abstracts.
An event was countedas a true positive if its type, trigger and all partici-pants had been correctly identified.
The overall F-score for our system was 30.35% with 48.61% pre-cision (approximate span matching, see Table 1).The best performing event types were phosphory-lation (the best F-score and the best recall) andgene expression (the best precision with a reasona-bly good F-measure).
While the results for non-regulatory events were encouraging, they were lowfor regulatory events.
Among the 24 teams submit-ting the test results, our results were ranked 12th forthe overall F-score and 8th for the F-score of non-regulation events.A preliminary analysis of the results was per-formed on the development data (as the test data isnot available), which had around 5% higher overallF-score than the test data (9% for non-regulationevents, see Table 2 for details).117Event Class #Gold R P F-scoreLocalisation 174 44.83 53.06 48.60Binding 347 12.68 40.37 19.30Gene expression 722 52.63 69.34 59.84Transcription 137 15.33 67.74 25.00Protein catabolism 14 42.86 50.00 46.15Phosphorylation 135 78.52 53.81 63.86Non-reg total 1529 41.53 60.82 49.36Regulation 291 3.09 19.15  5.33Positive regulation 983 1.12 8.87 1.99Neg.
regulation 379 12.4 20.52 15.46Regulatory total 1653 4.05 16.75 6.53All total 3182 22.06 48.61 30.35Table 1: Evaluation of the test data (260 abstracts),(approximate span matching; #Gold = the number ofexamples in the gold standard)In order to assess the effects of different stepsin our approach, we evaluated the performance ofthe event trigger and event participant detectionsteps separately.
The results presented in Table 3indicated that the performance of the CRF modulewas not much better than the overall performanceof the system (an F-score of 43% vs. 35%), sug-gesting that the CRF part was mostly responsiblefor the errors, by both missing triggers and falselyreporting them.
This was particularly the case withnon-regulatory events (even for binding).
Con-versely, when considering only those events whosetriggers were correctly identified, their participantswere also correctly recognised in most cases.Overall, the analysis suggested that the parse treedistance method performed reasonable well, de-spite a reduction in recall of approximately 12%.There are a number of possibilities for im-provements.
We believe applying the CRF modelin two stages would be a better approach to detectEvent Class #Gold R P F-scoreLocalisation 40 77.50 47.69 59.05Binding 180 33.33 54.55 41.38Gene expression 282 76.60 58.54 66.36Transcription 68 58.82 18.60 28.27Protein catabolism 19 84.21 88.89 86.49Phosphorylation 40 97.50 81.25 88.64Non-reg total 629 63.91 48.73 55.30Regulation 138 13.04 62.07 21.56Positive regulation 462 13.85 54.24 22.07Neg.
regulation 153 29.41 45.92 35.86All total 1382 38.28 49.44 43.15Table 3: Trigger-only evaluation of the development dataEvent Class #Gold R P F-scoreLocalisation 53 67.92 46.75 55.38Binding 312 21.47 63.81 32.13Gene expression 356 64.61 76.33 69.98Transcription 82 53.66 89.80 67.18Protein catabolism 21 90.48 67.86 77.55Phosphorylation 47 91.49 53.09 67.19Non-reg total 871 50.4 68.44 58.05Regulation 172 5.23 33.33 9.05Positive regulation 632 3.48 21.36 5.99Neg.
regulation 201 9.45 15.08 11.62Regulatory total 1005 4.98 19.53 7.93All total 1876 26.07 54.46 35.26Table 2: Evaluation of the development data (150 abstracts)(approximate span matching; #Gold as in Table 1)events: first identify triggers and then link them toevent classes.
In addition, the rules employed fordetermining themes need to be more specific toreflect both event type and grammatical structure.In the case of regulatory events, however, signifi-cantly better results were noticed in the trigger de-tection part when compared to the overall scores,indicating that it was difficult to identify regulatoryparticipants, as any of those participants could beeither a protein or another event.Overall, the results achieved by our systemsuggest that combining parse tree results, rules andCRFs is a promising approach for the identificationof non-regulatory events in the literature, whilemore work would be needed for regulatory events.ReferencesEmms M. 2008.
Tree-distance and some other Variantsof evalb.
Proc.
of LREC 2008, pp 1373-1379.Fu W. et al 2008.
Human Immunodeficiency Virus type1, Human protein interaction database at NCBI, Nu-cleic Acid Research 2008, D417-D422Kim JD et al 2009.
Overview of BioNLP'09 SharedTask on Event Extraction, Proc.
of BioNLP NAACL2009 Workshop (to appear)Sagae K, Tsujii J.
2007.
Dependency Parsing and Do-main Adaptation with LR Models and Parser Ensem-bles.
Proc.
of the CoNLL 2007 Shared Task, 1044-50Tsuruoka Y. et al 2005.
Developing a Robust Part of-Speech Tagger for Biomedical Text.
Advances in In-formatics, 382?392.Yang H. et al 2008.
Identification of Transcription Fac-tor Contexts in Literature using Machine LearningApproaches.
BMC Bioinformatics, Vol.
9(3):S11.118
