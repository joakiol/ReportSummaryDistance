"Lh\]guistic" Sentences and "Real" SentencesMasaru "l'omlt~Computer Science Department andCenter for Machtne TranslationCarnegie Mellon UniversityThis p~$r Id~ntift~ iwe klr?ds of sentences: "llngulsUc"sentences ~ J  "r~al" a~-ntence~.
"l't~,~ former is a kind of sentel~'~,e~that ar~ often discussed in (cemputatkmal) Ungulstlc literatures,sucll as the:re In i:lgure 1.
The latter, on the other hand, is a kind ofsenteace=~ that appear in practical applications, such as those InFlgu='e 2.
Where~ts both are grammatical English sentences, theyappear' to I:,e significantly different.
In this paper, we discuss thecharacteristi~ of those two kinds of sentences, aud claim that adifferent approach is necessary to parse each Idnd of sentences.John hl~ Mary.Every man who owns a donkey beats It.I saw a man with a telescope.The horse raced past the barn fell.~llme fries like an arrow.Tbe n louse the cat the dog ctlased ate died.John persuaded Mary to expect that he believestl=a't she likes art apple.Flflure 1: "Linguistic" SentencesAll processes (programs) In the daetroyed window (ar Icol~) arekilled (except nahuped wocesgas; see nohup(1) in the t/FLUXIqefer'on,~); therefore, make ~ure you really wish ta destroy awindow or an leon before you petfarm this t~ek.This wit,Jew coldeins an HP-UX shell (either a Bourne ~hell orC-shell, depending on the value of the SHELL.
environmentvariable; for details, uen the "Concepte" section of the "UsingGeminates" ahapter).Figure 2: "Real" SentencesIt seems that problems in parsing sentences can be classified Intotwo categories: linguistically "Interesting" problems and linguistically"uninteresting" problems.
Linguistically "Interesting" problems arethos~ for which there are no obvious solutions, and reasonablysophisticated theories are required to solve them, or those behindwhich there are general linguistic pdnclples, and a small number ofgeneral rules can cope wtth them (e.g., relatlvlzatlmr,causativlzation, ambiguity, movement, garden-path, etc).
On theother hand, linguistically "uninteresting" problems are these forwhich there extst obvious solutions, or those behind which there Isno general linguistic principle, and It Is Just a matter of writing andadding rule,J to cope with these problems (e.g., punctuation, dateand time expressions, Idioms, etc).Ftgures 3 and 4 show example "Interesting" and "uninteresting"problems, respectively.
While she could give an elegantexplanation of why the second sentence In figure 3 18ungramnlatl=;al, there Is no particular reason why "15th July" 18ungram~aatS~a, other tlrau that tt is simply not English.John ~lxpects Mary to kiss herself.
* Johr, expects Mary to kiss himself.John ?~xpects Mary to kiss him.Figure 3: An Interesting Probleulon July 15thon the fifteenth of Julyon 7/15* on I 5th July" In July 15ti~FIqUh'(; 4: An Uninteresting Problem"Linguistic" sentences usually contain one or more linguisticallyInteresting problems, with few or no linguisctically uninterestingproblems.
"Real" sentences, on the other band, contain manyuninteresting problems, but fewer interesting problems.
In(computational) linguistic literatures, uninteresting problems can beIgnored, as long as everybody agrees that there are obvioussolutions for them.
In practical applications, on the other hand, wecannot ignore uninteresting problems, or systems simply do notwork.One of the projects at the Center for Machine Translation atCarnegie-Mellon Unlverslly Is to translate personal computermanuals from English to Japanese and from Japanese to Englisb.In this project, and perhaps in ally other practical projects that haveto deal with "real" sentences, the system's failures are caused by afew Interesting problems and tons of uninteresting problems.
Thereoften exist reasonable approximate solulions to Interesting problemslu practical applications; Ior example, it Is quite acceptable toassume that there are no embedded relative clauses In computermanuals, In order to simplify the (Interesting) problem ofrelatlvizatlon.
On the other band, there are no quick solutions touninteresting problems other than writing a bench of rules.?
We can never anticipate and prepare for all of theseunleteresting problems in advance.
It seems as if therewill be always these problems no matter how carefullyand how many times we test and debug the system andIts grammar.?
The quantity of the knowledge sources (i.e.,grammars/rules) has to be very large; unlike Interestingproblems, rules for uninteresting problems can hardlygeneralized into a smaller number of rules, as each ofthem represents an uninteresting problem with nogeneral linguistic principles behind it.?
It Is more difficult for humans Is test, debug, andmaintain a larger amount of knowledge sourcesaccurately and consistently.~, II Is more difficult for a system to access a largeramount of knowledge sources efficiently.These problems are much more serious than linguistically"Interesting" problems, and directly affect performance of practicalsyste~ns.453
