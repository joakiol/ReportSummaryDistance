Proceedings of the Second Workshop on Computational Linguistics for Literature, pages 9?16,Atlanta, Georgia, June 14, 2013. c?2013 Association for Computational LinguisticsRecognition of Classical Arabic PoemsAbdulrahman Almuhareb Ibrahim Alkharashi  Lama AL Saud  Haya AltuwaijriComputer Research InstituteKACSTRiyadh, Saudi Arabia{muhareb, kharashi, lalsaud, htuwaijri}@kacst.edu.saAbstractThis work presents a novel method for recog-nizing and extracting classical Arabic poemsfound in textual sources.
The method utilizesthe basic classical Arabic poem features suchas structure, rhyme, writing style, and wordusage.
The proposed method achieves a preci-sion of 96.94% while keeping a high recallvalue at 92.24%.
The method was also used tobuild a prototype search engine for classicalArabic poems.1 IntroductionSearching for poetry instances on the web, as wellas identifying and extracting them, is a challengingproblem.
Contributing to the difficulty are the fol-lowing: creators of web content do not usually fol-low a fixed standard format when publishingpoetry content; there is no special HTML tags thatcan be used to identify and format poetry content;and finally poetry content is usually intermixedwith other content published on the web.In this paper, a classical Arabic poetry recog-nition and extraction method has been proposed.The method utilizes poem features and writingstyles to identify and isolate one or more poem textbodies in a given piece of text.
As an implementa-tion of the poetry recognition and extraction me-thod, a prototype Arabic poetry search engine wasdeveloped.The paper is organized as follows.
In Section 2,the related works are briefly discussed.
Section 3gives a general overview of Arabic poems features.Section 4 discusses the methodology used to iden-tify and extract poem content from a given text.
Italso presents the used evaluation method.
In Sec-tion 5, we discuss the experimentation includingthe used dataset and results.
A prototype imple-mentation of the method is presented in Section 6followed by conclusions and future work plans.2 Related WorkTo the best of our knowledge, this work1is the firstattempt to explore the possibility for building anautomated system for recognizing and extractingArabic poems from a given piece of text.
The mostsimilar work related to this effort is the work thathas been done independently by Tizhoosh and Da-ra (2006) and Tizhoosh et al(2008).
The objectiveof Tizhoosh and his colleagues was to define a me-thod that can distinguish between poem and non-poem (prose) documents using text classificationtechniques such as na?ve Bayes, decision trees, andneural networks.
The classifiers were applied onpoetic features such as rhyme, shape, rhythm, me-ter, and meaning.Another related work is by Al-Zahrani and El-shafei (2010) who filed a patent application forinventing a system for Arabic poetry meter identi-fication.
Their invention is based on Al-khalil binAhmed theory on Arabic poetry meters from the 8thcentury.
The invented system accepts spoken orwritten Arabic poems to identify and verify theirpoetic meters.
The system also can be used to as-sist the user in interactively producing poemsbased on a chosen meter.Work on poem processing has been also con-ducted on other topics such as poem style and me-ter classification, rhyme matching, poemgeneration and quality evaluation.
For example, Yi1 Parts of this work are also presented in Patent ApplicationNo.
: US 2012/0290602 A1.9et al(2004) used a technique based on term con-nection for poetry stylistics analysis.
He et al(2007) used Support Vector Machines to differen-tiate bold-and-unconstrained styles from graceful-and-restrained styles of poetry.
Hamidi et al(2009) proposed a meter classification system forPersian poems based on features that are extractedfrom uttered poems.
Reddy and Knight (2011)proposed a language-independent method forrhyme scheme identification.
Manurung (2004)and Netzer et al(2009) proposed two poem gener-ation methods using hill-climbing search and wordassociations norms, respectively.
In a recent work,Kao and Jurafsky (2012) proposed a method toevaluate poem quality for contemporary Englishpoetry.
Their proposed method computes 16 fea-tures that describe poem style, imagery, and senti-ment.
Kao and Jurafsky's result showed thatreferencing concrete objects is the primary indica-tor for professional poetry.3 Features of Classical Arabic PoemsTraditionally, Arabic poems have been used as amedium for recording historical events, transfer-ring messages among tribes, glorifying tribe oroneself, or satirizing enemies.
Classical Arabicpoems are characterized by many features.
Someof these features are common to poems written inother languages, and some are specific to Arabicpoems.
Features of classical Arabic poems havebeen established in the pre-Islamic era and re-mained almost unchanged until now.
Variation forsuch features can be noticed in contemporary (Pao-li, 2001) and Bedouin (Palva, 1993) poems.
In thissection, we describe the Arabic poetic features thathave been utilized in this work.3.1 PresenceInstances of classical Arabic poems, as well asother types of poems, can be found in all sorts ofprinted and electronic documents including books,newspapers, magazines, and websites.
An instanceof classical Arabic poems can represent a completepoem or a poem portion.
A single document cancontain several classical Arabic poem instances.Poems can occur in designated documents bythemselves or intermixed with normal text.
In addi-tion, poems can be found in non-textual media in-cluding audios, videos and images.In the web, Arabic poem instances can be foundin designated websites2.
Only-poem websites nor-mally organize poems in categories and adapt aunified style format that is maintained for the en-tire website.
Hence, poem instances found in suchwebsites are almost carefully written and shouldcontain fewer errors.
However, instances found inother websites such as forums and blogs are writ-ten in all sorts of styles and may contain mistakesin the content, spelling, and formatting.3.2 StructureClassical Arabic poems are written as a set ofverses.
There is no limit on the number of verses ina poem.
However, a typical poem contains be-tween twenty and a hundred verses (Maling, 1973).Arabic poem verses are short in length, comparedto lines in normal text, and of equivalent length.Each verse is divided into two halves called hemis-tiches which also are equivalent in length.3.3 MeterThe meters of classical Arabic poetry were mod-eled by Al-Khalil bin Ahmed in the 8th century.
Al-Khalil's system consists of 15 meters (Al-Akhfash,a student of Al-Khalil, added the 16th meter later).Each meter is described by an ordered set of con-sonants and vowels.
Most classical Arabic poemscan be encoded using these identified meters andthose that can't be encoded are considered un-metrical.
Meters' patterns are applied on the he-mistich level and each hemistich in the same poemmust follow the same meter.3.4 RhymeClassical Arabic poems follow a very strict butsimple rhyme model.
In this model, the last letterof each verse in a given poem must be the same.
Ifthe last letter in the verse is a vowel, then thesecond last letter of each verse must be the same aswell.
There are three basic vowel sounds in Arabic.Each vowel sound has two versions: a long and ashort version.
Short vowels are written as diacriti-cal marks below or above the letter that precedesthem while long vowels are written as whole let-ters.
The two versions of each basic vowel are con-sidered equivalent for rhyme purposes.
Table 12 adab.com is an example for a dedicated website for Arabicpoetry.10shows these vowel sets and other equivalent letters.These simple matching rules make rhyme detectionin Arabic a much simpler task compared to Englishwhere different sets of letter combinations can sig-nal the same rhyme (Tizhoosh & Dara 2006).
Onthe other hand, the fact that, in modern Arabicwriting, short vowels are ignored adds more chal-lenges for the rhyme identification process.
How-ever, in poetry typesetting, typists tend not to omitshort vowels especially for poems written in stan-dard Arabic.Table 1: Equivalent vowels and lettersEquivalent Letters Equivalent Vowelsta, ta marbutah/a/, /a:/ha, ta marbutah/u/, /u://i/, /i:/H1Verse1H2H1Verse2H2H1Verse3H2H1Verse4H2Figure 1: An example of classical Arabic poems withfour verses written in Style 1.
H1 and H2 are the firstand second hemistich.3.5 Writing StylesThere are three predominant writing styles of clas-sical Arabic poems: (1) the poem is written in asingle column with each verse in two rows; (2) thepoem is written in a single column with each versein two rows where the first half of each verse iswritten aligned to the right and the second half ofeach verse is aligned to the left; and (3) the poemis written such that each verse is written as twohalves on the same row and separated by one ormore punctuation marks or spaces.
In some cases,this style can also be written without any separa-tors and the end of the first half and the start of thesecond half have to be guessed by the reader.
Fig-ures 1 to 3 show examples of the three writingstyles of classical Arabic poems.H1Verse1H2H1Verse2H2H1Verse3H2H1Verse4H2Figure 2: An example of classical Arabic poems withfour verses written in Style 2.Hemistich 1Hemistich 2Verse 1Verse 2Verse 3Verse 4Figure 3: An example of classical Arabic poems withfour verses written in Style 3.3.6 Word UsageIt is very noticeable that classical Arabic poets tendnot to use words repetitively in a given poem.
Toevaluate this observation, we analyzed a randomset of 134 poem instances.
We found duplicatestart words (excluding common stop words) in22% of the poems.
Duplicate end words werefound in 31% of the poems.
However, the proba-bility of encountering a verse with a duplicate startin the same poem is only 3% and 4% for a dupli-cate end word.4 MethodThe proposed method for standard Arabic poemrecognition utilizes the poetic features describedpreviously including structure, rhyme, writingstyle, and word usage.
The meter feature was not11literally used in the proposed method and may beused in a future work.
The system operation issummarized by the flowchart shown in Figure 5and described by the following steps:1.
Read input text line by line accepting onlylines with reasonable size (e.g., lines ofsize between 2 and 20 words).2.
Collect consecutive lines that have equiva-lent length: compute the length of the lineby counting the characters in the line.Lines are considered equivalent in length ifthe length difference is below a certainthreshold (e.g., 40%, as has been used inthe experiment discussed below).3.
Identify lines with separators to processStyle 3 candidate verses.
Separators areidentified by searching for a set of whitespaces or punctuations in the middle of theline between two halves.
If identified,transform Style 3 to Style 1 shape for nor-malization.4.
Identify candidate rhymes at the end ofeach line.5.
Identify poems: searching for candidatepoems in a consecutive list of candidatehalf-verses can produce several solutionsbased on rhyme.
Select solution that pro-duces poems with the maximum possiblelengths.
Figure 4 shows an example for amultiple solution case.6.
Repeat steps 1 to 5 until the end of the textbody is reached.Figure 4: An example for multiple solutions based onrhyme.
A list of 10 candidate half-verses indicated bytheir rhymes from A to F. Poem 1 starts at line 2 andends at line 9 with 4 verses and rhyme C. Poem 2 startsat line 3 and ends at line 6 with 2 verses and rhyme D.The proposed method will select Poem 1 instead ofPoem 2 since it has more verses.Following these steps, the proposed method canrecognize instances of classical Arabic poems ofsize at least two verses in any plain text.
Detectinginstances of a single verse is not covered in thiswork because the recognition process is only trig-gered by repetitive patterns that can't occur withinsingle verse instances.Figure 5: A flowchart of the proposed system for Arabicpoems recognition.4.1 Handling ill-formed casesThe proposed method can be applied on plain textfrom any source regardless of formatting and typ-ing quality.
Common formatting and typing mis-takes and ambiguity are resolved as follows:1.
Mismatched and false separators: Mis-matched separators occur when a set ofcandidate verses share the same rhyme butwith different verse separators.
Here, wetreat the separators as if they were similarassuming that the separators were incor-rectly typed.
False separators, on the otherhand, is identified when a set of candidateverses share the same rhyme and one ormore verses were identified as having se-parators and the remaining verses havenot.
In this case, we ignore the identifiedseparators assuming that these misidenti-fied separators are just normal punctuation12marks.
Figure 6 and 7 show real examplesfrom the web for mismatched and false se-parators, respectively.Figure 6: An example of mismatched separators for apoem instance with four verses that share the samerhyme.
The first two verses share the same separatorwhile the third and the forth verses have similar but notexact separators.Figure 7: An example of false separators for a poeminstance with three verses that share the same rhyme.The first half of the first and third verses contain dots(..) at the middle of the line which can mistakenly beidentified as separators.2.
Absence of short vowels: To treat missingshort vowels in rhyme, we, recursively, as-sume the existence of the vowel if missingin a given verse and exists in a neighboringverse.
Here, the last character in the formerverse must match the second last characterin the neighboring verse.
Figure 8 showsan example of this case.Figure 8: An example of short vowels absence for apoem instance with four verses.
The first three versesneglect the short vowel Kasrah that exists at the end ofthe fourth verse.3.
Absence of separators: This case is trig-gered when encountering a set of consecu-tive lines sharing the same rhyme, andhaving line length in words that exceedhalf of the threshold for valid lines, and ofcourse have no identifiable separators.
Theproposed remedy is to locate the closestwhitespace to the center of each line andsplit the lines at those points and generatea verse of two hemistiches from each line.Figure 9 shows an example of this case.Figure 9: An example of absence of separators for apoem instance with five verses.4.2 PruningBased on our observations during the developmentphase of the proposed method, it was noticeablethat the robustness of the method correlates posi-tively with the number of verses in the candidatepoem.
This is because with each additional versethe accumulated evidences are reconfirmed repeti-tively.
This is not the case with few verses candi-dates.
The probability of encountering a falsematching rhyme for example with two or threeverses is much higher.
To resolve these cases andimprove the precision of the proposed method, weintroduce the following pruning tests to be appliedonly to short candidate poems:1.
Reject short candidate instances with lowaverage number of words per half-verses.For example, using a threshold of 3 words.2.
Accept only short candidate instances thathave at least two letters rhymes.3.
Reject short candidate instances whennumber of words per half-verse is notequivalent.4.
Reject short candidate instances with dup-licate starting or ending words that exceeda threshold of 20%, for example.130 2 3 4 4*6065707580859095100Precision Recall F-measurePruning LevelScore(%)4.3 Evaluation MeasureTo evaluate the proposed method, we applied theF-measure (Swets, 1969) based on the precisionand recall measures.
Precision, as shown in Equa-tion 1, is calculated by dividing the total number ofthe correct lines produced by the method over thetotal number of lines in the output.
Given that ourmethod processes the input data and generates out-put as half-verse per line.
Recall, as shown in Equ-ation 2, is computed similarly except that wedivide over the model total number of correct lines.The model resembles the prefect solution for suchinput data.
)2()1(Lines Correct of Number Total ModelLines Correct of Number Total System=RecallLines of Number Total SystemLines Correct of Number Total System=Precision?5 Experiment5.1 DatasetDuring the development phase of the method, weused several development datasets utilizing datadrawn from the web.
For evaluation purposes, weassembled a dataset using text from hundred ran-domly selected HTML web-pages.
The set con-tains 50 HTML pages with classical Arabic poeminstances (positive set) and 50 pages without poeminstances (negative set).
To select the positive set,we randomly chose 5 poets and searched Googleand selected the first 10 pages that contain poeminstances for each poet.
The negative set was simi-larly chosen by selecting the first 50 pages thatcontain no poem instances for an arbitrary query.Text from the selected web-pages was converted toplain text using the Apache Tika toolkit3 and savedin a single large text file.
This resulted in a text filethat contains about 23K non-empty lines including161 classical Arabic poem instances having 4,740half-verses.3 The Apache Tika toolkit can be downloaded fromhttp://tika.apache.org/5.2 ResultThe poem dataset was used to evaluate the pro-posed poem recognition method.
Figure 10 showsthe results using five different pruning levels.
Thelevels indicate the minimum number of verses forthe pruning tests to be applied.
Level 0 shows theperformance without applying any of the pruningtests.
The remaining levels show the results whenthe pruning is applied on candidates with at mosttwo, three, and four verses, respectively.
Level 4*is similar to Level 4 but here the fourth pruningtest (duplicate words test) is applied on every can-didate instance instead of only candidates with atmost four verses.Figure 10: Evaluation results using five different prun-ing levels.6 A Prototype Poem Search EngineIn order to assess the performance of the proposedpoem recognition method in a real-life application,a prototype search engine for Arabic poems wasimplemented4.
The search engine was built using theApache Nutch web crawler and the Solr searchengine to provide regular search engine servicesincluding crawling, parsing, and indexing.
TheHTML parsing plug-in in Nutch was extended us-ing the proposed method to be able to recognizeArabic poems.
Using this scenario, the search en-gine was successfully used to crawl a set of web-sites, identify all poem and non-poem instances,and index poem instances only.
Figure 11 shows asnapshot of the search engine website.4 The Arabic poem prototype search engine can be accessed athttp://naba.kacst.edu.sa14Figure 11:  A snapshot of the prototype poem searchengine7 Conclusions and Future WorkIn this paper, we proposed a method for classicalArabic poem recognition.
The proposed methodwas able to identify Arabic poems in any unstruc-tured text with a very high accuracy.
The methodutilizes the common features of classical Arabicpoems such as structure, writing style, and rhyme;and employs them in the recognition process.
Aspecialized search engine for classical Arabicpoems was implemented as a prototype using theproposed method with promising results.
For thefuture, we plan to enhance the method by introduc-ing the well known meter model for classical Arab-ic poems.
We would also like to extend thecoverage of the method to include other types ofArabic poetry, namely contemporary Arabic.
Forthe specialized search engine, we plan to add morefeatures such as providing different search bounda-ries, for example, within a poem, a verse, or a he-mistich.
Moreover, we would like to findautomatic ways to relate a poem to its poet.AcknowledgmentsThe authors would like to thank Waleed Almutairiand Abdulelah Almubarak from KACST for theirassistance in implementing the prototype poemsearch engine.15ReferencesAl-Zahrani, A.K., Elshafei, M., 2010.
Arabic poetrymeter identification system and method.
Patent Ap-plication US 2010/0185436.Hamidi, S., Razzazi, F., Ghaemmaghami, M.P., 2009.Automatic Meter Classification in Persian PoetriesUsing Support Vector Machines.
Presented at theIEEE International Symposium on Signal Processingand Information Technology (ISSPIT).He, Z.-S., Liang, W.-T., Li, L.-Y., Tian, Y.-F., 2007.SVM-Based Classification Method for Poetry Style.Presented at the Sixth International Conference onMachine Learning and Cybernetics, Hong Kong.Kao, J., Jurafsky, D., 2012.
A Computational Analysisof Style, Affect, and Imagery in Contemporary Poe-try, in: In Proceedings of the NAACL-HLT 2012Workshop on Computational Linguistics for Litera-ture.
Montreal, Canada, pp.
8?17.Maling, J., 1973.
The theory of classical Arabic metrics(dissertation).Manurung, H.M., 2004.
An Evolutionary AlgorithmApproach to Poetry Generation (PhD thesis).Netzer, Y., Gabay, D., Goldberg, Y., Elhadad, M., 2009.Gaiku: Generating Haiku with Word AssociationsNorms.
Presented at the Workshop on ComputationalApproaches to Linguistic Creativity  (CALC ?09).Palva, H., 1993.
Metrical problems of the contemporaryBedouin Qasida: A linguistic approach.
Asian Fol-klore Studies 52, 75?92.Paoli, B., 2001.
Meters and Formulas: The Case of An-cient Arabic Poetry.
Belgian Journal of Linguistics15, 113?136.Reddy, S., Knight, K., 2011.
Unsupervised Discovery ofRhyme Schemes.
Presented at the 49th Annual Meet-ing of the Association for Computational Linguistics,Portland, Oregon, pp.
77?82.Swets, J.A., 1969.
Effectiveness of information retrievalmethods.
American Documentation 20, 72?89.Tizhoosh, H.R., Dara, R.A., 2006.
On Poem Recogni-tion.
Pattern Analysis and Applications, Springer 9,325?338.Tizhoosh, H.R., Sahba, F., Dara, R., 2008.
Poetic Fea-tures for Poem Recognition: A Comparative Study.Journal of Pattern Recognition Research 3.Yi, Y., He, Z.-S., Li, L.-Y., Yu, T., 2004.
Studies onTraditional Chinese Poetry Style Identification.
Pre-sented at the Third International Conference on Ma-chine Learning and Cybernetics, Shanghai.16
