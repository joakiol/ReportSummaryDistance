GENERATI ON_OF SYNTHES I S PROGRA MS I N #OBRJ,.
(ARIANE)FROM STRING-TREE CORRESPONDENCE GRAMMARS..(or aStratcgy for Synthesis in Machinc Translatiol~)gaharin YusoffProjek Terjemahan Melalui KomputerPPS Matematik &S KomputerUniversiti Sains Malaysia11800 PENANGlngroduct ionSpecialised Languages for LinguisticProgramming, or SLLPs (like ROBRA, O-systems, Augmented TransitionNetworks, etc.
), in Machine Translation(MT) systems may be considerablyefficient in terms of processing power,but its procedural nature makes it quitedifficult for linguists to describe naturallanguages in a declarative and naturalway.
Furthermore, the effort can bequite wasteful in the sense that differentgrammars will have to be written foranalysis and for generation, as veil asfor different MT systems, 0n the otherhand, purely linguistic formalisms (likethose for Government and Binding,Lexical Functional Grammars, GeneralPhrase Structure Grammars, etc.)
mayprove to be adequate for naturallanguage description, but it is not quiteclear hey they can be adapted for thepurposes of MT in a natural way.
Besides,MT--specific problems, like appositions,ambiguities, etc., have yet to find theirplace in linguistics.Nevertheless, linguistics has its role inMT, and thus some formalism will haveto be found that is friendly to linguistsand yet be general enough to supportdata structures for problems which arenot terribly 'interesting' to linguists butare essential to MT.
Such a formalismmust not only be adequate for languagedescription, but must also serve as aspecification language for MT programswritten in SLLPS.A formalism designed specifically forthis purpose~is the Static Grammar (SG)\[Vauquois&Chappuy85L which wasfurther refined into the String-TreeCorrespondence Grammar (STCG)\[Zaharin87a\].
As in most grammarformalisms, it is very difficult to arguethat the STCG is adequate for languagedescription, but its declarative naturedoes provide the possibiliW of writing asingle grammar that can be interpretedfor both analysis and generation.
Theformalism also supports data structuresfor the 'non.-linguistic' MT problems, andit is general enough to 'express'different l.inguistic theories, or acombination of them.
In short, the STCGcan serve as a specification language forapplications in various MT systems, as isiUustrated in figure 1.
( Gover'nment"', ..... ~and BindinaFunctional '\[.
I I 0 Linguistic theoriesOrammar ) .... ~ .............................rli orammarformalism(5TC6) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.L~.ngu.ts.t.!c...m.~!...
suitable for MTt ..... t l ...... fA'L sI\ ] .
- -o .
.
.o  .... o .Figure 1 - The STCG as a spocificaUon language for MT.1 425This paper reports on the work done inbuilding a generator of ROBRA programsfor synthesis in MT from grammarswritten in STCG (as indicated in bold infigure I).
Such an effort necessitates aproposal for a general strategy forsynthesis, which we shall discuss now.SynthesisAs discussed in \[Zaharin89\], synthesis inMT is not the same as in generation ofnatural languages, Generation is theprocess of generating all grammaticalsentences in a language from a givenaxiom (here, an axiom may bestructurally more complex than a singlesymbol, depending on the linguisticmodel and grammar formalism adopted).whereas synthesis is the process ofproducing a grammatical sentence fromsome input, which, in the case oftranslation, is the structure obtainedfrom the analysis of the source text (inthe case of an interlingual approach) orsome structure derived from it (in thecase of a transfer approach).
This inputto synthesis may vary from system tosystem, application to application, andstrategy to strategy, but it is certainlynot equivalent to an axiom as understoodin natural language generation.Perhaps, one may view synthesis as partof a path (or a subset of paths) in the setof all possible paths in generation,where the decision on the inputstructure determines the point of entryalong the said path (or paths).
Figure 2gives an illustration,The aim of synthesis in MT is two-fold:one is to generate a sentence in thetarget language which has the same'meaning' as the source sentenceanalysed, and the other is to ensure thatthis sentence is grammatical withrespect to the target language.
In most, ifnot all current MT systems, the firstobjective may have been achieved, butthere is little guar#n~ that the targetsentence is grammatical.
Naturallyguaranteeing such a result must be withrespect to some grammar for thelanguage, which is presumably writtento be interpretable at least forgeneration (whether this grammaradequately defines the natural anguagein question is beside the point).
However,as synthesis is quite different fromgeneration, this grammar cannot bewritten as a SLLP program but is usedonly as a guide to write it.Failures in synthesis (at least in the caseof grammaticality) can be attributed tomissing all valid paths in generation.
Asit is difficult to test whether one iscurrently on a valid path, one way ofproviding this guarantee is .to makecertain that the synthesis process doespass  through the axiom point ofgeneration.
Naturally it is too much.
toask of the transfer phase to output anaxiom, because then the transfer phasewould include some of the monolingualprocesses, which altogether defeats thepurpose of the transfer architecture,However, it is possible to arrange it insuch a way that the first part ofsynthesis (Synthesisl) builds an axiomfrom the output of transfer, and then thetarget sentc.nce is generated from thisaxiom (Synthesis2).
This way, Synthesis2is effectively arestriction of generation,which is thus obtainable directly fromthe grammar specified, henceguaranteeing that the target sentence isgrammatical.
Synthesisl can be based ona comparative study between the outputstructures of transfer and the axioms ofthe target language.TRANSFER i ~grammatical sentences8ENERATIONFigure 2 - Synthesis as opposed to generation.426 2The proposed strategy has an addedadvantage, which is the possibility ofbuilding multilingual systems based onthe transfer approach, namely becausethe axiom point is exactly the output ofanalysis had the target ext been used foranalysis (as suggested in \[Boitet88\]).
Thisis certainly a surer way of buildingmultilingual systems while waiting for agenuine interlingua to be designed, Suchan archktecture is illustrated in figure 3,DesignAt GETA in Grenoble as well as in ourproject, multilevel structures or m-structures \[Zaharin87b\] are used asrepresentation structures for sentences,hence the axioms.
The m-structurescontain four levels of interpretation,corresponding to morpho-syntacticdecomposition.
syntactic functions,logical relations and semantic relations.These actually give rise to four different.structures, but are combined into asingle structure (in the mannerillustrated in figure 4), to show theinter-relation between the various levelsof representation as well as to facilitateprocessing,The set of all valid m-structures in alanguage, as well the respectivemappings or correspondences\[Boitot&Zaharin88\] between thesestructures and the sentences theyrepresent, are descr ibed  by means of theformalism of the STCG.
The result is agrammar for the language which can beinterpreted for both analysis andgeneration.For the purposes of Mr, the logical andsemantic levels of interpretation areconsidered as (almost) universal to alllanguages, while the other two arelanguage dependent.
Thus these twolevels are used as the pivot fortranslation.
However, certain surfacefeatures (pertaining to the morpho-syntactic decomposition and syntacticfunctions, as well as some other featuresanalysable from the source text) are alsotransferred as an aid to translation.
Moreprecisely, they are considered asheuristics which can guide thesynthesis, in particular to find thenecessary path in generation.
\[They arealso used in fail-soft measures in case theanalysis fails, but that is beside thepoint.\]?
.
~aSynthes is  .
.
.
transfer .1  " | - 'transfer ' ^ I " / I long5i_~_ , ,~^_,, =angz- ang~" ~ long2 ~ i ~ ~ l ~ S y n t h e s i  s # t  L' fer.
%, ,a.
4L .......... ~ - "  lango-lang4j a,na!ys)s ~kS~nthesis2 'Figure 3 - A multitingual system based on the transfer approach,Static GrammarString-TreeCorrespondance6rarnrnar?
!
I " \ Structure)" - " - " ' - " '1 ) '  | ~ "".--- -f , .,~ .
.
.
.
.
.
.
.
.
.
~ ,,: r .
jl semnucX,.Structure j/Figure 4 -The linguistic model.3 427With the above in mind, the input tosynthesis is the combination of thelogical and semantic structure, namelythe logico-semantic structure,augmented with certain transferredsurface features (hence expressed interms of the target language) to be usedas heuristics.
Synthesisl is then theprocess of building an axiom in thetarget language from this input, whichis basically retracing the bold path infigure 4, where the process is aided bythe said heuristics (which otherwisewould give a large number ofpossibilities).
Synthesis2 is the process ofgenerating the target sentence from theresulting axiom, hence exactly theopposite of analysis.
Both Synthesisl andSynthesis2 will have to be interpreteddirectly from the grammar rules, which,coupled with the fact that the processpasses through the axiom, ensure thegrammaticality of the generatedsentence.ImplementationIt would not be possible to describe theimplementation in full in a short paper.Furthermore.
one would need to befamiliar with the STCG formalism\[Zaharin87a\]\[Zaharing0\] as well as theROBRA language in ARIANE \[Boitet79\].However.
we shall give a brief outlinehere to indicate the general strategy.STCG is a sot of rules defining thecorrespondence b tween a text and itschosen representation structure (in ourcase a m-structure).
Simplified to theutmost (with tree structures as well ascomplex feature lists being eliminated,which incidentally decreases itscapability of treating discontinuities in anatural way), its rules resemble contextfree rules with references whichfunction to restrict the possiblereferences to other rules (a form ofsubscripts).
Figure 5 shows an exampleof a set of context free rules beingrewritten in this simplified form of STCGrules,On the other hand.
ROBRA contains a setof tree transformational rules whoseapplication is dictated by a controlgraph, where each node contains a set ofrules to be considered for applicationand each arc has conditions on theoutput of the last node.In our implementation, STCG rules aretranslated toROBRA rules (possibly a fewROBRA rules to one STCG rule) while thereferences are interpreted toprovide thecontrol graph.
In Synthesisl, only thetree part (RHS) is considered, whore theordered tree'structure given in tlte STCGrule together with its I%aturespertaining to the logical and semanticinterpretation are used as conditions fortesting and then ordering the nodes andsubtrees in the object tree.
Theassignment of the rest of the features(also in the tree part) is based on theheuristics obtained from the transferphase, which actually form part of therest of the features in the STCG rule, butare in this case used as conditions ofassignment.
The output of Synthesisl isan axiom in the target language.Synthesis2 is exactly the opposite ofanalysis, where the tree part is usedconditions and the string part asassignments.
Figure 6 indicates thecomputation from the various parts of aSTCG rule to the various parts of a ROBRArule, in this case for Synthesis2.context free rulesrl: ,S ~ NP(all) VPr2: NPI ~ nr3:NP2 - - '~  dot NPIr4:NP3 ~ad j  NPll~j NP2rS: YP ~ v NP(8\]I)simplified STCO rulesrl: S ~ NP VPref(all) ref(all)r2: NP ~ nr3: NP ~ det NPref(r I )r4: NP ~ odj NPref(r i ,r2)rS: VP ~ v NPref(all)Figure 5 - An example showing the function of references in STCG rules.428 4As for the control graph in ROBRA,Synthesisl and Synthesis2 have similarcontrol graphs, which we indicate infigure 7.
The main transformationalsystem is standard except for the partindicated, which together with thesubtransformational systems (one foreach syntactic class K) are computedfrom the references in the rules.. ,J~ONTROL 6RAP H"}~ mm~ vZORAF /?
~TRINO ~ TREE ..___.~_.nt er node_condi tion~ZST R I NOZBOTHFa-n-sfer functiOri /IROBRA rule- - -  ~r .Figure 6 - The computation from STCG rules to ROBRA rules for Synthesis2,valida#iom I Z 'ZZ I "~rules ~ &NULaxiomK.i .
,OK ............ q$u&NUL &NULGU_BTRANSFOR, k!AU_QNAL 6)~TEM\[one for ~ach K\].ules with Krulel(i)(K) .......nodes withreferencei# rule l&NUL .,Figure 7 - The control graph generated,5 429Current Situation and Future WorkFor the moment, only the generator, forSynthesis2 has been implemented, Aneditor for the STCG as well as for the SGhave been developed (both with syntaxcheckers), which generate the sameinternal form, from which the generatorof ROBRA synthesis programs (currentlyonly Synthesis2) produces its output.Both the editors as well as the generatorare implemented on the Macintosh usingTURBO PASCAL V. The output ROBRAprogram is a text file which can betransferred to the IBM mainframe (onwhich runs ARIANE) and then compiledunder the ARIANE environment.The next phase in this work will be theimplementation of a generator forSynthesisl, followed by a generater forAnalysis, and perhaps Transfer.
Theultimate aim is to provide anenvironment in which a MT applicationcan be built by means of specifying onlylinguistic rules in a declarative andnatural way, in particular withouthaving to write SLLP programs.However, it .is still not cleax howambiguity and transfer rules cs~t beincorporated automatically.R~ZZ~M(~E3"\[ Boiler79 \] Ch.Boitet, Automaticp:oductiono f CF and CS-#n al::zers using a generaltee t~nsdu~wr, 2 ^  Int.
KolloquiumUber Mashinnelle Ubersetzung,Lexicographie und Analyze,Saarbrucken, November 1979,\[Boiler88 \] Ch.Boitet, Hybrid pivots usingm-structures for mulHlinguMtransfer-basedMT~TsWms, Meeting ofthe Japanese Institute of Electronics,Information and CommunicationEngineers, Tokyo, June 1988.\[Boitet&Zaharin8$\] Ch:Boitet, Zaharin Y.,Repre.,~:ntaHon t:ees o~d string-t~,eecorrespondences, proceedings of the12th International Conference onComputational Linguistics, COLING-88,Budapest, August 1988, pp.59-64.\[V~.u quois&Chappuy85 \] B.Vauquois,S.Chappuy.
Static Gramma~:.
aFornlalism fo: t~e Description ofLinguistic Models, Proceedings of theConference on Theoretical ~ndMethodological Issues in MachineTranslation of Natural Languages,COLGATE University, New York, August1985.\[Zaharin87a\] Zaharin Y., St~'ing-Tree,Correspondence Gamma:.'
adeclara2ive gamma:  formalism fordefining the correspondence betweenstrings of terms and t~we structures,proceedings of the 3rd Conference ofthe European Chapter of theAssociation for ComputationalLinguistics, Copenhagen, April I%7,pp.160-166.\[Zaharin87b\] Zaharin Y., Thelinguistics:proach at GETA, TECHNOLOGOS(langues et artefacts), priatemps 1987,no.4, LISH-CNRS, Paris, pp.93-110.\[Zaharin89\] Zaharin Y., On formalismsand analysis, generation and synthesisin machine translaliom, proceedings ofthe 4th Conference of the EuropeanChapter of the Association forComputational Linguistics, Manchester,April 1989, pp.319-326.\[Zaharin90\] Zaharin Y., Structuredsttin g-t~"ee correspon den ces and theSt~'in g- Ttwe Corres:on den ce Grammar.Projek Terjenmhan Melalui Komputer,Universiti Sains Malaysia, Penang,January 1990.4306
