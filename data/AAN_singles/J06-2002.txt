Generating Referring Expressionsthat Involve Gradable PropertiesKees van Deemter?University of AberdeenThis article examines the role of gradable properties in referring expressions from the perspectiveof natural language generation.
First, we propose a simple semantic analysis of vague de-scriptions (i.e., referring expressions that contain gradable adjectives) that reflects the context-dependent meaning of the adjectives in them.
Second, we show how this type of analysis caninform algorithms for the generation of vague descriptions from numerical data.
Third, we askwhen such descriptions should be used.
The article concludes with a discussion of salience andpointing, which are analyzed as if they were gradable adjectives.1.
Introduction: Vagueness of Gradable Adjectives1.1 Vague DescriptionsVague or gradable expressions pose problems to models of language, caused by theircontext dependence, and by the fact that they are applicable to different degrees.
Thisarticle focuses on gradable adjectives, also called degree adjectives.1 More specifically,we shall explore how referring expressions containing gradable adjectives can be pro-duced by a Natural Language Generation (NLG) program.
Following Pinkal (1979), suchexpressions will be called vague descriptions even though, as we shall see, the vaguenessof the adjective does not extend to the description as a whole.
It will be useful to gen-eralize over different forms of the adjective, covering the superlative form (e.g., largest)and the comparative form (larger), as well as the positive or base form (large) of theadjective.
Vague descriptions are worth studying because they use vagueness in acomparatively transparent way, often combining clarity of reference with indeterminacyof meaning; as a result, they allow us to make inroads into the difficult area of researchon vagueness.
Generation offers an interesting perspective because it forces one to askwhen it is a good idea to use these descriptions, in addition to asking what they mean.Gradability is especially widespread in adjectives.
A search of the British NationalCorpus (BNC), for example, shows at least seven of the ten most frequent adjectives(last, other, new, good, old, great, high, small, different, large) to be gradable.
Children usevague adjectives among their first dozens of words (Peccei 1994) and understand someof their intricacies as early as their 24th month (Ebeling and Gelman 1994).
These?
Computing Science Department, King?s College, University of Aberdeen, United Kingdom, E-mail:kvdeemter@csd.abdn.ac.uk.1 We take such adjectives to be ones that have comparative and superlative forms, and which can bepremodified by intensifiers such as very (Quirk et al 1972, Section 5.4).Submission received: 7 July 2004; revised submission received: 19 October 2005; accepted forpublication: 24 November 2005.?
2006 Association for Computational LinguisticsComputational Linguistics Volume 32, Number 2intricacies include what Ebeling and Gelman call perceptual context dependence, aswhen a set of objects is perceptually available and the adjective is applied to an elementor subset of the set (e.g., Is this hat big or is it little?, when two hats of different sizes arevisible).1.2 Vagueness in NLGSome NLG systems produce gradable adjectives.
The FOG weather-forecast system, forexample, uses numerical input (Rain[Tuesday] = 45 mm) to generate vague output(Heavy rain fell on Tuesday, Goldberg, Driedger, and Kitteridge 1994).
FOG does notappear to have generic rules governing the use of gradable notions: it does not computethe meaning of a vague term based on the context, but uses fixed boundary valuesinstead.
A more flexible approach is used by Reiter and Sripada (2002), where users canspecify boundary values for attributes like rainfall, specifying, for example, rain countsas moderate above 7 mm/h, as heavy above 20 mm/h, and so on.
A third approach wasimplemented in Dial Your Disc (DYD), where the extension of a gradable adjective likefamous was computed rather than specified by hand (van Deemter and Odijk 1997).
Todetermine, for example, whether one of Mozart?s piano sonatas could be called a famoussonata, the system looked up the number x of compact disc recordings of this sonata (aslisted in an encyclopedia) and compared it to the average number y of CD recordings ofeach of Mozart?s sonatas.
The sonata was called a famous sonata if x >> y.
Like DYD, thework reported in this article will abandon the use of fixed boundary values for gradableadjectives, letting these values depend on the context in which the adjective is used.Sometimes we are forced to be vague because the information we have (e.g., based onperception or verbal reports) is itself inexact.
Such cases can be modeled by letting NLGsystems take vague information (e.g., Rain[Wednesday] = heavy) as their input.
Weshall focus on the more challenging case where the output of the generator is less precisethan the input, as is the case in FOG and DYD.
This can be a hazardous affair, since vagueexpressions tend to be interpreted in different ways by different people (Toogood 1980),sometimes in stark contrast with the intention of the speaker/writer (Berry, Knapp,and Raynor 2002).
We shall therefore focus?unlike earlier computational accounts?onvague descriptions, that is, vague expressions in definite descriptions.
Here, the contexttends to obliterate the vagueness associated with the adjective.
Suppose you enter avet?s surgery in the company of two dogs: a big one on a leash, and a tiny one in yourarms.
The vet asks ?Who?s the patient?
?, and you answer ?the big dog.?
This answerwill allow the vet to pick out the patient just as reliably as if you had said ?the one onthe leash?
; the fact that big is a vague term is irrelevant.
You omit the exact size of thedog, just like some of its other properties (e.g., the leash), because they do not improvethe description.
This shows how vague properties can contribute to the precise task ofidentifying a referent.1.3 Plan of This ArticleWe will show how existing algorithms for the generation of referring expressions (GRE)can do justice to gradable properties, whether they originate from the gradable adjec-tives in a vague description, or from some entirely different source (such as the degree ofsalience of the referent).
Considerable attention will be paid to the many open questionsin this area, which will have to be resolved before NLG can be said to contain a propertreatment of vague expressions.
We start with two preliminary sections, containing asemantic analysis of vague descriptions (Section 2) and a version of the Incremental196van Deemter GRE with Gradable PropertiesAlgorithm that generates references to sets (Section 3).
Section 4 describes the core ofone particular algorithm for generating vague descriptions.
Section 5 discusses prag-matic constraints that let such an algorithm avoid descriptions that are semanticallycorrect but clumsy.
Section 6 discusses linguistic realization.
Section 7 summarizessome empirical results.
Section 8 explores non-incremental versions of our algorithm.Section 9 shows how our approach can be extended to include nouns, salience, andpointing.
Section 10 sums up our main findings.2.
The Meaning of Vague Descriptions2.1 Linguistic MotivationWe shall be studying vague descriptions of various forms: They may or may not containa numeral n (positioned before or after the adjective); and the gradable adjective (Adj)may at least be in base (large) or superlative form (largest):(1) The (n) Adj(est) N (singular/plural)(2) The Adj(est) (n) N (singular/plural)If Adj is in the base form, we focus on the word order (1); if Adj is superlative, we focuson (2).
(Little will hinge on this decision.)
We are limiting ourselves to referential uses ofthese expressions, excluding cases like This must be the largest tree in the world, in whichthe expression ascribes a property to an already-identified object.
Likewise, we excludeintensional ones (e.g., Consider the smallest element of this set, in a mathematical proof,when the identity of the element may not be known).Many different analyses are possible of what it means to be large: larger thanaverage, larger than most, larger than some given baseline, and so on.
It is doubtful thatany one of these analyses makes sense for all definite descriptions.
To see this, considera domain of three mice, sized 5, 8, and 10 cm.2 Here one can speak of(3) The large mouse (= the one whose size is 10 cm)(4) The two large mice (= the two whose sizes are 8 and 10 cm)Clearly, what it takes for the adjective to be applicable has not been cast in stone,but is open to fiat: the speaker may decide that 8 cm is enough, or the speaker mayset the standards higher (cf., Kennedy 1999).
The numeral (whether it is implicit, asin (3), or explicit) can be construed as allowing the reader to draw inferences aboutthe standards employed (Kyburg and Morreau 2000; DeVault and Stone 2004): (3), forexample, implies a standard that counts 10 cm as large and 8 cm as not large.
Ourown proposal will abstract away from the effects of linguistic context.
We shall askhow noun phrases like the ones in (3) and (4) can be generated, without asking howthey constrain, and are constrained by, other uses of large and related words.
This willallow us to make the following simplification: In a definite description that expressesonly properties that are needed for singling out a referent, we take the base form of2 The reader is asked to focus on any reasonable size measurement, for example, the maximal horizontal orvertical distance, or some combination of dimensions (Kamp 1975; also Section 8.1 of the present article).197Computational Linguistics Volume 32, Number 2the adjective to be semantically equivalent to the superlative form (and, analogously, thecomparative):The n large mice = The largest n miceThe large mice = The largest miceThe large mouse = The largest mouse.Viewed in this way, gradable adjectives are an extreme example of the ?efficiency oflanguage?
(Barwise and Perry 1983): Far from meaning something concrete like ?largerthan 8 cm?
?a concept that would have very limited applicability?or even somethingmore general like ?larger than the average N,?
a word like large is applicable across awide range of different situations.2.2 Caveat: Full NP AnaphoraHaving said this, there are pragmatic differences between the base form and the superla-tive (Section 5).
For example, the equivalence does not take anaphoric uses into account,such as when the large mouse is legitimized by the fact that the mouse has been calledlarge before, as in(5) I was transfixed by a large mouse on the chimney; then suddenly, dozensof mice were teeming on the ground.
The large mouse was running away.where the mouse on the chimney may be smaller than those on the ground.
We focus onEbeling and Gelman?s (1994) perceptual context dependence (Section 1), pretending thatthe only contextually relevant factor is the ?comparison set?
: those elements of the noundenotation that are perceptually available.
We disregard functional context dependence,as when the small hat is the one too small to fit on your head.2.3 Caveat: Evaluative AdjectivesWhat we said above has also disregarded elements of the ?global?
(i.e., not immediatelyavailable) context.
For some adjectives, including the ones that Bierwisch (1989) calledevaluative (as opposed to dimensional), this is clearly inadequate.
He argued that evalu-ative adjectives (such as beautiful and its antonym ugly; smart and its antonym stupid,etc.)
can be recognized by the way in which they compare with antonyms.
For example(after Bierwisch 1989),(6a) Hans is taller than Fritz ?
Fritz is shorter than Hans.
(6b) Hans is smarter than Fritz ?
Fritz is more stupid than Hans.We could require that the referent of an evaluative description fall into the correctsegment of the relevant dimension.
(For Fritz to be the stupid man, it is not enoughfor him to be the least intelligent male in the local context; he also has to be a fairlystupid specimen in his own right.)
If this is done, it is not evident that dimensionaladjectives should be treated differently: If Hans?s and Fritz?s heights are 210 and198van Deemter GRE with Gradable Properties205 cm, respectively, then it seems questionable to describe Fritz as the short man, even ifHans is the only other man in the local context (but see Sedivy et al 1999, discussed inSection 7.2).
Be this as it may, we shall henceforth focus on local context, assuming thatadditional requirements on the global context can be made if necessary.With these qualifications in place, let us say more precisely what we will assumethe different types of expressions to mean.
For ease of reading, concrete examples (e.g.,large) will replace abstract labels (e.g., ?Adj?
), but the analysis is meant to be general.The largest n mouse/mice; The n large mice.
Imagine a set C of contextually relevantanimals.
Then these noun phrases (NPs) presuppose that there is a subset S of C thatcontains n elements, all of which are mice, and such that (1) C?S =  (i.e., not allelements of C are elements of S) and (2) every mouse in C?S (i.e., every contextuallyrelevant mouse not in S) is smaller than every mouse in S. If such a set S exists then theNP denotes S. The case where n = 1, realized as The large(st) mouse, falls outautomatically.The large(st) mice.
This account can be extended to cover cases of the form the[Adj]-(est) [Npl] (pl = plural), where the numeral n is suppressed: They will be taken tobe ambiguous between all expressions the [Adj]-(est) n [Npl], where n > 1.
Sometimes,this leaves only one possibility.
For instance, in a domain where there are five mice, ofsizes 4, 4, 4, 5, and 6 cm, the only possible value of n is 2, causing the NP to denote thetwo mice of 5 and 6 cm in size.Pragmatic refinements are discussed in Section 5.
Our analysis is limited to NPs thatcontain only one vague adjective.
Doubly-graded descriptions tend to cause ambiguity,since they involve a trade-off between several dimensions.
An NP like the tall fat giraffe,for example, might describe a referent that is neither the tallest nor the fattest giraffe,as long as a combination of height and fatness singles it out.
Some of the problems thatcome up in such cases will be discussed in Section 9.1.3.
Generation of Crisp DescriptionsArguably the most fundamental task in the generation of referring expressions (GRE),content determination (CD) requires finding a set of properties that jointly identify the in-tended referent.
Various CD algorithms have been proposed, most of which approximatethe minimal number of properties that are needed to identify the target.
Approxima-tions differ in terms of their computational complexity and the degree to which theymatch the way in which people use referring expressions (see Dale and Reiter [1995] fora survey).
As we shall see in Section 8, any one of these algorithms could be used asa basis for our task.
For concreteness, we focus here on Dale and Reiter?s IncrementalAlgorithm (IA).
We shall use a form of the IA that can refer to sets as well as individuals,as long as the sets are individuated via their elements (i.e., distributively, as opposed tocollectively, cf., Stone [2000]).
This version of the IA will be called IAPlur.
(For motivationand extensions, see van Deemter 2000, 2002.
)3.1 The Incremental AlgorithmPut simply, IA accumulates semantic properties until the target objects are the only onesin the domain of which all the accumulated properties are true.
This can be done byarranging the properties in a list and by checking, for each property in the list, whetherit is useful (in the sense that it removes one or more distractors); if a property is useful, it199Computational Linguistics Volume 32, Number 2is included in the description, after which the next property is given the same treatment.This process of checking and including goes on until the target objects are the only onesof which all the properties in the list are true (i.e., until there are no distractors left).For reasons that will become apparent later, we complicate matters slightly: Fol-lowing Dale and Reiter, we view each property as consisting of an Attribute (e.g.,color) and a Value (e.g., white), written ?Attribute,Value?.
(Attributes can be viewedas grouping together a number of related properties.)
Attributes are ordered in alist A, and this preference order determines the order in which properties are examined(and possibly added to the description) by the algorithm.
Suppose S is the target set,and C the set of all objects that play a role at a given stage of the algorithm (we callthese the confusables).
The algorithm iterates through A; for each Attribute, it checkswhether, by specifying a Value for it, one can rule out at least one member of C that hasnot yet been ruled out; if so then the Attribute is added to a set L, with the best possibleValue (as determined by FindBestValue).
Confusables that are ruled out are removedfrom C. The expansion of L and the contraction of C continue until C = S:L := C := DomainFor each Ai  A doVi = FindBestValue(S, Ai)If S ?
[[?Ai, Vi?]]
& C ?
[[?Ai, Vi?]]
then doL := L ?
{?Ai, Vi?
}C := C ?
[[?Ai, Vi?
]]If C = S then Return LReturn FailureFindBestValue selects the ?best value?
from among the Values of a given Attribute,assuming that these are linearly ordered in terms of specificity.
The function selects theValue that removes most distractors, but in case of a tie, the least specific contestantis chosen, as long as it is not less specific than the basic-level Value (i.e., the mostcommonly occurring and psychologically most fundamental level, Rosch 1978).
IAPlurcan refer to individuals as well as sets, since reference to a target individual r can bemodeled as reference to the singleton set {r}.3.2 The Existing Treatment of GradablesIAPlur deals with vague properties in essentially the same way as FOG: Attributes likesize are treated as if they were not context dependent: Their Values always apply to thesame objects, regardless of what other properties occur in the description.
In this way,IA could never describe the same animal as the large chihuahua and the small brown dog,for example.
This approach does not do justice to gradable adjectives, whether they areused in the base form, the superlative, or the comparative.
Suppose, for example, one seta fixed quantitative boundary, making the word large true of everything above it, andfalse of everything below it.
Then IA would tend to have little use for this propertyat all since, presumably, every chihuahua would be small and every alsatian large,making each of the combinations {large, chihuahua} (which denotes the empty set) and{large, alsatian} (the set of all alsatians) useless.
In other words, existing treatments ofgradables in GRE fail to take the ?efficiency of language?
into account (Barwise andPerry 1983; see our Section 2).200van Deemter GRE with Gradable Properties4.
The Generation of Vague DescriptionsWe now turn to the question of how vague descriptions may be generated from nu-merical data.
We focus on semantic issues, postponing discussion of pragmatics untilSection 5, and linguistic realization until Section 6.
We shall make occasional referenceto a PROLOG program called VAGUE, designed by Richard Power, which implements aversion of the algorithm described in this section.
Code and documentation for VAGUEcan be found at http://www.csd.abdn.ac.uk/?kvdeemte/vague.html.4.1 Expressing One Vague Property4.1.1 Numerical Properties.
We shall assume that gradable properties are stored inthe Knowledge Base (KB) as Attributes with (decimal) numerical Values, where thenumbers can be the result of physical measurements.
We will sometimes speak ofthese numerical Values as if they represented exact Values even though they typicallyrepresent approximations.3 For concreteness, we shall take them to be of the form n cm,where n is a positive real number.
For example,type = rodent, mousecolor = black, blue, yellowsize = 3 cm, 4 cm, ..., 10 cm.Making use of this KB, the IA is able to generate a description involving a list ofproperties like L = {yellow, mouse, 9 cm}, for example, exploiting the Attribute size.The result could be the NP The 9-cm yellow mouse, for example.
The challenge formulatedin Section 1, however, is to avoid unnecessary precision by avoiding numerical valuesunless they are necessary for the individuation of the target.
This challenge will beanswered using a replacement strategy.
Numerical Values such as 9 cm, in L, will bereplaced by a superlative Value (?being the unique largest element of C?)
whenever alldistractors happen to have a smaller size.
This list can then be realized in several ways,using either the superlative, the comparative, or the base form (e.g., the largest yellowmouse, the larger yellow mouse, or the large yellow mouse).4.1.2 Exploiting Numerical Properties, Singular.
To (almost4) ensure that every descrip-tion contains a property expressible as a noun, we shall assume that the type Attributeis more highly preferred than all others.
Suppose also, for now, that properties relatedto size are less preferred than others.
As a result, all other properties that turn up in theNP are already in the list L when size is added.
Suppose the target is c4:type(c1) = type(c2) = type(c3) = type(c4) = mousetype(p5) = ratsize(c1) = 6 cm3 The degree of precision of the measurement (James et al 1996, Section 1.5) determines which objects canbe described by the GRE algorithm, since it determines which objects count as having the same size.4 To turn this likelihood into a certainty, one can add a test at the end of the algorithm, which adds atype-related property if none is present yet (cf., Dale and Reiter 1995).
VAGUE uses both of these devices.201Computational Linguistics Volume 32, Number 2size(c2) = 10 cmsize(c3) = 12 cmsize(c4) = size(p5) = 14 cmSince gradable properties are (for now at least) assumed to be dispreferred, the firstproperty that makes it into L is ?mouse,?
which removes p5 from the context set.
(Result:C = {c1, ..., c4}.)
Now size is taken into account, and size(x) = 14 cm singles out c4.The resulting list isL = {mouse, 14 cm}This might be considered the end of the matter, since the target has been singled out.
Butwe are interested in alternative lists, to enable later modules to use gradable adjectives.One way in which such a list can be computed is as follows.
Given that 14 cm happens tobe the greatest size of any mouse, size(x) = 14 cm can be replaced, in L, by the propertyof ?being the sole object larger than all other elements of C?
(notation: size(x) = max1;note that C is the set of mice).
Since this property is only applicable because of theproperties earlier-introduced into L, it becomes essential that L is an ordered list:L = ?mouse, size(x) = max1?
(?the largest mouse?
)4.1.3 Exploiting Numerical Properties, Plural.
If plural descriptions were generated us-ing the replacement strategy sketched above, it would be impossible to characterize setswhose elements have different sizes.
To make this possible, we have to use inequalities,that is, Values of the form ?> ??
or ?< ?
?, instead of Values of the form ?= ??.
Therefore,we compile the KB into a more elaborate form by replacing equalities by inequalities ofthe form size(x) > ?
or size(x) < ?.
The new KB can be limited to relevant inequalitiesonly: for every n such that the old KB contains an equality of the form size(x) = n cm,the new KB contains all those inequalities whose truth follows from the equalities in theold KB.
For example,size(c4), size(p5) > 12 cmsize(c3), size(c4), size(p5) > 10 cmsize(c2), size(c3), size(c4), size(p5) > 6 cm,where ?size?
is an Attribute, ?> 12 cm?, ?> 10 cm?, and ?> 6 cm?
are Values, and c2, c3,c4, c5, p5 are domain objects of which a given ?Attribute, Value?
combination is true.
Theprocedure is analogous to the treatment of negations and disjunctions in van Deemter(2002): Properties that are implicit in the KB are made available for GRE.The representation of inequalities is not entirely trivial.
For one thing, it is conve-nient to view properties of the form size(x) < ?
as belonging to a different Attributethan those of the form size(x) > ?, because this causes the Values of an Attribute to belinearly ordered: Being larger than 12 cm implies being larger than 10 cm, and so on.More importantly, it will now become normal for an object to have many Values for thesame Attribute; c4, for example, has the Values > 6 cm, > 10 cm, and > 12 cm.
Each ofthese Values has equal status, so the notion of a basic-level Value cannot play a role (cf.,Dale and Reiter 1995).
If we abstract away from the role of basic-level Values, then Daleand Reiter?s FindBestValue chooses the most general Value that removes the maximal202van Deemter GRE with Gradable Propertiesnumber of distractors, as we have seen.
The problem at hand suggests a simpler ap-proach that will always prefer logically stronger inequalities over logically weaker ones,even when they do not remove more distractors.5 (Thus, size(x) > m is preferred oversize(x) > n iff m > n; conversely, size(x) < m is preferred over size(x) < n iff m < n.)This is reflected by the order in which the properties are listed above: Once a size-related property is selected, later size-related properties do not remove any distractorsand will therefore not be included in the description.Let us return to our example.
Suppose the target set S is {c3, c4}.
The KB modelsits two elements as having different sizes (12 cm and 14 cm, respectively), hence theydo not share a property of the form size(x) = ?.
They do, however, share the propertysize(x) > 10 cm.
This property is exploited by IAPlur to construct the listL1 = ?mouse, >10 cm?,first selecting the property ?mouse,?
then the property size(x) > 10 cm.
(The propertysize(x) > 12 cm is attempted first but rejected.)
Since L succeeds in distinguishingthe two target elements, it follows that they are the only mice greater than 10 cm.Consequently, this inequality can be replaced by the property ?being a set of cardinality2, whose elements are larger than all others?
(notation: size(x) = max2), leading to NPssuch as the largest (two) mice:L2 = ?mouse, size(x) = max2?.Note that size(x) = max2 is true of a pair of mice: Strictly speaking, the step from L1 to L2translates a distributive property (?being larger than 10 cm?)
into a collective one.
Thecase in which the numeral is 1 corresponds with the singular (e.g., the largest mouse).Optionally, we can go a step further and replace size(x) = max2 by the less specifiedproperty size(x) = max, which abbreviates ?being a set of cardinality greater than 1, allof whose elements are larger than all other elements in C.?
The result may be realizedas the largest mice.L3 = ?mouse, size(x) = max?.4.1.4 Ordering of Properties.
Even if comparative properties are at the bottom of thepreference order, while stronger inequalities precede weaker ones, the order is not fixedcompletely.
Suppose, for example, that the KB contains information about height aswell as width, then we have inequalities of the forms (a) height > x, (b) height < x, (c)width > x, and (d) width < x.
Which of these should come first?
Hermann and Deutsch(1976; also reported in Levelt 1989) show that greater differences are most likely to bechosen, presumably because they are more striking.
In experiments involving candlesof different heights and widths, if the referent is both the tallest and the fattest candle,subjects tended to say ?the tall candle?
when the tallest candle is much taller than allothers whereas the same candle is only slightly wider than the others; if the reverse isthe case, the preference switches to ?the fat candle.?
Hermann and Deutsch?s findingsmay be implemented as follows.
First, the Values of the different Attributes should benormalized to make them comparable.
Second, preference order should be calculated5 A statement p is logically stronger than q if p has q as a logical consequence (i.e., p |= q), whereas thereverse is not true (i.e., q |= p).203Computational Linguistics Volume 32, Number 2dynamically (i.e., based on the current value of C, and taking the target into account),preferring larger gaps over smaller ones.
(It is possible, e.g., that width is most suitablefor singling out a black cat, but height for singling out a white cat.)
The rest of thealgorithm remains unchanged.4.1.5 Beyond Content Determination (CD).
Assuming the analysis of Section 2.1, then large mouse/mice is semantically equivalent to the n largest mouse/mice.
Consequently,there is no need to distinguish between the two at the level of CD.
Representations likethe ones in L2 and L3 are neutral between the superlative and the base form.
Pragmaticconstraints determine which of these expressions [the (n) largest, the (n) larger, the (n)large] is most appropriate in a given situation (Section 5).4.1.6 Inference.
The replacement strategy, whereby one list of properties is transformedinto another, is essentially a simple kind of logical inference.
L1 and L2, for instance, areguaranteed to single out the same set, given that exactly two mice are larger than 10 cm;given the content of the KB, the two lists are co-extensive.
Once the numeral is dropped,however, as in L3, there is real loss of information: L3 can be used for characterizinga number of sets, including the one characterized by L2.
In any case, the properties inthese lists are logically distinct, so the choice between them belongs to CD.4.2 Expressing Several Vague PropertiesIf the KB contains several gradable Attributes, a description can make use of several ofthem, as in example (7).
Even if only one gradable Attribute is represented, descriptionsmay contain different adjectives, expressing opposites, as in example (8).
(7) The tallest two of the smallest three mice.
(8) The mice that are taller than 2 cm but shorter than 4 cm.
(The latter may be better expressed as the mice that are between 2 and 4 cm tall.)
Let us seehow the algorithm of the previous sections can be extended to these cases.4.2.1 Descriptions Using (In)equalities.
When opposites are part of the KB, there is noneed for representing equalities separately, since they arise automatically, as combina-tions of opposites.
Every equality of the form ?size(x) = m cm?
is equivalent to the com-bination of a property of the form ?size(x) > i cm?
and one of the form ?size(x) < j cm.
?Given the content of the following KB, for example, saying that the size of an object isbetween 6 and 12 cm amounts to saying that its size is 10 cm, and this is implementedby adding appropriate transformations to the generator.size(c1) < 10 cmsize(c1), size(c2) < 12 cmsize(c1), size(c2), size(c3) < 14 cmsize(c4), size(p5) > 12 cmsize(c3), size(c4), size(p5) > 10 cmsize(c2), size(c3), size(c4), size(p5) > 6 cm204van Deemter GRE with Gradable PropertiesDifferent measures have to be taken when several vague Attributes are involved.
Sup-pose height has these Values:height(c1) = 7 cmheight(p5) = 8 cmheight(c3) = 9 cmheight(c2) = height(c4) = 10 cm.After recompiling these into the form of inequalities (reiterating types):type(c1) = type(c2) = type(c3) = type(c4) = mousetype(p5) = ratheight(c1) < 8 cmheight(c1), height(p5) < 9 cmheight(c1), height(c3), height(p5) < 10 cmheight(c2), height(c4) > 9 cmheight(c2), height(c3), height(c4) > 8 cmheight(c2), height(c3), height(c4), height(p5) > 7 cmSuppose the target set is {c2, c3}.
The algorithm will first select the property mouse,since crisp properties are more preferred than vague ones (Result: C = {c1, c2, c3, c4}).The sequel depends on preference order.
Omitting the property of being a mouse forbrevity, possible results include the following:(a) La = ?size < 14 cm , height > 8 cm?, to be realized as, e.g., the micetaller than 8 cm but smaller than 14 cm.
(b) Lb = ?height > 8 cm, size > 6 cm, < 14 cm?, e.g., the mice that are tallerthan 8 cm and sized between 6 and 14 cm.Analogous to Section 4.1, one might stop here.
But there is scope here for logicalinference, even more so than before; likewise, there are pitfalls, more than before.4.2.2 Adjectives in Superlative and Base Form.
To generate descriptions like the onesin examples (7) and (8), we need to transform a comparative property into a superlativeproperty, moving from properties of the form ?height> x?
to properties of the form ?thetallest n.?
This can be done in different ways.
For example, La may give rise to(i) ?size < 14 cm, height(x) = max2?,(?The tallest two of the mice that are smaller than 14 cm?
)(ii) ?size(x) = min3, height(x) = max2?
(?The tallest two of the smallest three mice?
)205Computational Linguistics Volume 32, Number 2Once we know which of these outcomes is preferable, the algorithm may be fine-tuned.
(If brevity is an issue, e.g., then one might let a generation program vary the preferenceorder used by the IA, then choose the outcome that is shortest.)
The transformationsdescribed so far rest on logical equivalence (modulo the KB).
If numerals are omitted aswell, the result is usually no longer equivalent of course, and the description is at riskof becoming almost entirely uninformative (e.g., L2):L1 = ?size(x) = min3, height(x) = max?L2 = ?size(x) = min, height(x) = max?The algorithm outlined in this and the previous section can be summarized as follows:GRE for Vague Descriptions (using IA):1.
Construct KB using Attributes and Values, assigning numerical Values toGradable Attributes.2.
Recompile the KB, replacing equalities by inequalities, for all gradableAttributes.3.
Determine the preference order between the different groups of Attributes.
(A safe approach is to give all gradable Attributes lower preference thanall nongradable ones.)4.
Run IAPlur (Section 3.2), resulting in a list of properties that jointly identifythe target.5.
Apply inferences to the list of properties.
For example, replacecombinations of inequalities by one exact Value; replace inequalities byproperties that involve a cardinality; and so on.6.
Perform linguistic realization (Section 6).If gradable properties are less preferred than crisp ones (point 3) then this algorithm willonly use gradable properties if an entirely crisp distinguishing description is impossible.This may well cause gradable properties to be underused.
For this and other reasons,we shall consider non-incremental versions of these ideas in Section 8.4.3 Computational ComplexityWe will examine the worst-case complexity of interpretation as well as generation toshed some light on the hypothesis that vague descriptions are more difficult to processthan others because they involve a comparison between objects (Beun and Cremers1998, Krahmer and Theune 2002).
Before we do this, consider the tractability of theoriginal IA.
If the running time of FindBestValue(r, Ai) is a constant times the number ofValues of the Attribute Ai, then the worst-case running time of IA (and IAPlur) is O(nvna),where na equals the number of Attributes in the language and nv the average numberof Values of all Attributes.
This is because, in the worst case, all Values of all Attributesneed to be attempted (van Deemter 2002).
As for the new algorithm, we focus on thecrucial phases 2, 4, and 5.206van Deemter GRE with Gradable PropertiesPhase 2: Recompilation of the KB forces one to compare all domain elements with eachother.
This takes at most quadratic time (i.e., O(n2), where n is the number of elementsin the domain).
This can be done off-line, once and for all.Phase 4: Content Determination.
The initial list of properties, which contains inequal-ities (e.g., L = ?mouse > 5 cm?
), is calculated by IAPlur.
The algorithm has to take moreAttribute/Value pairs into account as a result of the recompilation of the KB, but thisdoes not change its theoretical complexity (using nv and na as variables): It is O(nvna).Phase 5: Inference.
The only inference step described so far replaces an inequality (e.g.,height > n cm) by a ?superlative?
property (e.g., height = max2).
This step requiresno computation to speak of: For any given inequality that appears in the description,the value of m can be read off the input to the generator in O(nd) steps, where nd is thenumber of distractors.
(This comes down to counting the number of elements in theextension of the inequality.)
Therefore, if the number of inequalities in the description isni then the complexity is O(ndni).Thus, the complexity of GRE in the gradable case is determined by three steps: Thefirst is quadratic and can be performed off-line, the second has a worst-case runningtime of O(nvna), and the third one has a worst-case running time of O(ndni).
Thus,gradable GRE takes only polynomial time, and if we focus on the part that cannot bedone off-line, it takes only linear time.
In other words, gradable GRE does take moretime than nongradable GRE, but the difference seems modest.The intuition that vague descriptions are more difficult than others is also confirmed(though again only to a modest extent) when we focus on the hearer.
First, consider anon-vague description consisting of a combination of n properties, P1, ..., Pn.
To discoverits referent, the denotation of the Boolean expression P1 ?
.. ?
Pn needs to be calculated,which takes just n?1 calculations of the formIntersect ?P1?
?
... ?
?Pi?1?
(a set that has been computed already)with ?Pi?
(the extension of the next property in the description).If computing the intersection of two sets takes constant time then this makes the com-plexity of interpreting non-vague descriptions linear: O(nd), where nd is the number ofproperties used.
In a vague description, the property last added to the description iscontext dependent.
Worst case, calculating the set corresponding with such a property,of the form size(x) = maxm, for example, involves sorting the distractors as to theirsize, which may amount to O(n2d) or O(nd log nd) calculations (depending on the sortingalgorithm: cf.
[Aho et al 1983] Chapter 8).
Once again, the most time-consumingpart of the calculation can be performed off-line, since it is the same for all referringexpressions.Thus, the worst-case time complexity of interpretation is as follows: The part that canbe computed off-line takes O(nd log nd) calculations.
The part that has to be computedfor each referring expression separately takes O(nd) calculations.
Once again, there is adifference with the nongradable case, but the difference is modest, especially regardingthe part that cannot be done off-line.
One should bear in mind that worst-case theo-retical complexity is not always a good measure of the time that a program takes inthe kinds of cases that occur most commonly, let alne the difficulty for a person.
Forexample, it seems likely that hearers and speakers will have most difficulty dealing withdifferences that are too small to be obvious (e.g., two mice that are very similar in size).207Computational Linguistics Volume 32, Number 25.
Pragmatic ConstraintsNLG has to do more than select a distinguishing description (i.e., one that unambigu-ously denotes its referent; Dale 1989): The selected expression should also be felicitous.Consider the question, discussed in the philosophical logic literature, of whether it islegitimate, for a gradable adjective, to distinguish between ?observationally indifferent?entities: Suppose two objects x and y, are so similar that it is impossible to distinguishtheir sizes; can it ever be reasonable to say that x is large and y is not?
A positiveanswer would not be psychologically plausible, since x and y are indistinguishable;but a negative answer would prohibit any binary distinction between objects that arelarge and objects that are not, given that one can always construct objects x and y, one ofwhich falls just below the divide while the other falls just above it.
This is the strongestversion of the sorites paradox (e.g., Hyde 2002).Our approach to vague descriptions allows a subtle response: that the offendingstatement may be correct yet infelicitous.
This shifts the problem from asking whenvague descriptions are ?correct?
to the question of when they are used felicitously.Felicity is naturally thought of as a gradable concept.
There is therefore no need for agenerator to demarcate precisely between felicitous and infelicitous expressions, as longas all the utterances generated are felicitous enough.
When in doubt, a generator shouldavoid the expression in question.
If x and y are mice of sizes 10 and 9.9 cm, for example,then it is probably better to describe x as the largest mouse than as the large mouse.Prior to carrying out the experiments to be reported in Section 7, we believed thatthe following constraints should be taken into account:Small Gaps.
Expressions of the form the (n) large [N] are infelicitous when the gapbetween (1) the smallest element of the designated set S (henceforth, s?)
and (2) thelargest N smaller than all elements of S (henceforth, s+) is small in comparison with theother gaps (Thorisson 1994; Funakoshi et al 2004).
If this gap is so small as to make thedifference between the sizes of s?
and s+ impossible to perceive, then the expression isalso infelicitous.Dichotomy.
When separating one single referent from one distractor, the comparativeform is often said to be favored (Use the comparative form to compare two things).
Weexpected this to generalize to situations where all the referents are of one size, and allthe distractors of another.Minimality.
Unless Small Gaps and Dichotomy forbid it, we expected that preferenceshould be given to the base form.
In English, where the base form is morphologicallysimpler than the other two, this rule could be argued to follow from Gricean principles(Grice 1975).To keep matters simple, linguistic realization could choose the base form if and only ifthe gap between s?
and s+ surpasses a certain value, which is specified interactively bythe user.
(This approach was chosen for the VAGUE program.
)As for the presence/absence of the numeral in the description, there appear to bedifferent ?believable?
patterns of linguistic behavior.
A cautious generator might onlyomit the numeral when the pragmatic principles happen to enforce a specific extension(e.g., the large mice, when the mice are sized 3, 2.8, 2.499, and 2.498 cm).
This would allowthe generator to use vague expressions, but only where they result in a description thatis itself unambiguous.We shall see in Section 7 that it has not been easy to confirm the pragmatic con-straints of the present section experimentally.208van Deemter GRE with Gradable Properties6.
Linguistic RealizationSome recent GRE algorithms have done away with the separation between content de-termination and linguistic realization, interleaving the two processes instead (Stone andWebber 1998; Krahmer and Theune 2002).
We have separated the two phases because,in the case of vague descriptions, interleaving would tend to be difficult.
Consider, forinstance, the list of properties L = ?size > 3 cm, size < 9 cm?.
If interleaving forcedus to realize the two properties in L one by one, then it would no longer be possible tocombine them into, for example, the largest mouse but one (if the facts in the KB supportit), or even into the mice between 3 and 9 cm (since size > 3 cm is realized before size< 9 cm).
Clearly, sophisticated use of gradable adjectives requires a separation betweenCD and linguistic realization, unless one is willing to complicate linguistic realizationconsiderably.Having said this, the distinction between CD and linguistic realization is not alwayseasy to draw.
We propose to think of it as separating the language-independent, logicalaspect of referring expressions generation from its language-dependent, linguistic as-pect.
Our algorithm suggests a distinction into three phases, the first two of which canbe thought of as part of CD:1.
CD proper, that is, the production of a distinguishing list of properties L;2.
An inference phase, during which the list L is transformed;3.
A realization phase, during which the choice between base, superlative,and comparative forms is made, among other things.One area of current interest concerns the left-to-right arrangement of premodifyingadjectives within an NP (e.g., Shaw and Hatzivassiloglou 1999; Malouf 2000).
Workin this area is often based on assigning adjectives to a small number of categories(e.g., Precentral, Central, Postcentral, and Prehead), which predict adjectives?
relativeposition.
Interestingly, vague properties tend to be realized before others.
Quirk et al(1985), for example, report that ?adjectives denoting size, length, and height normallyprecede other nonderived adjectives?
(e.g., the small round table is usually preferred tothe round small table).Semantically, this does not come as a surprise.
In a noun phrase of the form the threesmall(-est) [N], for example, the words preceding N select the three smallest elements of[N].
It follows that, to denote the three smallest elements of the set of round tables, theonly option is to say the three small round tables, rather than the three round small tables.The latter would mean something else, namely, the three round ones among the n small(est)tables (where n is not specified).
It actually seems quite possible to say this, but onlywhen some set of small tables is contextually salient (e.g., I don?t mean those small tables,I mean the three round ones).
Given that n is unspecified, the noun phrase would tend tobe very unclear in any other context.The VAGUE program follows Quirk?s rule by realizing gradable properties beforenongradable ones, choosing some simple (and sometimes stilted) syntactic patterns.7.
Empirical GroundingA full validation of a GRE program that generates vague descriptions would addressthe following questions: (1) When is it natural to generate a vague description (i.e., a209Computational Linguistics Volume 32, Number 2qualitative description as opposed to a purely quantitative one)?
(2) Given that a vaguedescription is used, which form of the description is most natural?
and (3) Are thegenerated descriptions properly understood by hearers and readers?
Much is unknown,but we shall summarize the available results in these three areas very briefly, referringreaders to the literature for details.7.1 Human Speakers?
Use of Vague DescriptionsCommon sense (as well as the Gricean maxims; Grice 1975) suggests that vague de-scriptions are preferred by speakers over quantitative ones whenever the additionalinformation provided by a quantitative description is irrelevant to the purpose of thecommunication.
We are not aware of any empirical validation of this idea, but the factthat vague descriptions are frequent is fairly well documented.
Dale and Reiter (1995),for example, discussed the transcripts of a dialogue between people who assemblea piece of garden furniture (originally recorded by Candy Sidner).
They found that,while instructional texts tended to use numerical descriptions like the 3 14 ?
bolt, humanassemblers ?unless they were reading or discussing the written instructions, in all cases usedrelative modifiers, such as the long bolt?
(Dale and Reiter 1995).6Our own experiments (van Deemter 2004) point in the same direction.
In one ex-periment, for example, 34 students at the University of Brighton were shown six piecesof paper, each of which showed two isosceles and approximately equilateral triangles.Triangles of three sizes were shown, with bases of 5, 8, and 16 mm respectively.
Oneach sheet, one of the two triangles had been circled with a pencil.
We asked subjects toimagine themselves on the phone to someone who held a copy of the same sheet, butnot necessarily with the same orientation (e.g., possibly upside down), and to completethe answers in the following:Q: Which triangle on this sheetwas circled?A: The ............ triangle.This setup was used for testing a number of hypotheses.
What is relevant for currentpurposes is that all except one subject used qualitative size-related descriptions (the bigtriangle, the largest triangle, etc.)
in the majority of cases.
As many as 27 of the 34 subjectsused such descriptions in all cases.It seems likely that qualitative descriptions would be less frequent if speakerswere offered an easy way to determine the relevant measurements (e.g., if a ruler wasprovided).
As it was, subjects went for the easy option, relying on a comparison of sizesrather than on an estimation of their absolute values.
Further experiments are neededbefore we can say with more confidence under what circumstances vague descriptionsare favored over absolute ones.It is normally perhaps unlikely that people produce language on the basis of thekind of numerical representations that our algorithm has used as input.
Although psy-chological plausibility is not our aim, it is worth noting that the inequalities computedas step 2 of the algorithm of Section 4 might be psychologically more plausible, sincethey are essentially no more than comparisons between objects.6 Presumably, Beun and Cremers (1998) found vague adjectives to be rare because, in their experiments,referents could always be identified using nongradable dimensions.210van Deemter GRE with Gradable Properties7.2 Testing the Correctness of the Generated ExpressionsSedivy et al (1999) asked subjects to identify the target of a vague description in a visualscene.
Consider the tall cup.
The relevant scene would contain three distractors: (1) a lesstall object of the same type as the target (e.g., a cup that is less tall), (2) a different kindof object that previous studies had shown to be intermediate in height (e.g., a pitcherthat, while being taller than both cups, was neither short nor tall for a pitcher), and (3)a different type of object to which the adjective is inapplicable (e.g., a door key).
Acrossthe different conditions under which the experiment was done (e.g., allowing subjectsto study the domain before or after the onset of speech), it was found not to mattermuch whether the adjective applied ?intrinsically?
to the target object (i.e., whether thetarget was tall for a cup): Hearers identifed the target without problems in both typesof situations.
The time subjects took before looking at the target for the first time wasmeasured, and although these latency times were somewhat greater when the referentwere not intrinsically tall than when they were, the average difference was tiny at 554versus 538 miliseconds.
Since latency times are thought to be sensitive to most of theproblems that hearers may have in processing a text, these results suggest that, fordimensional adjectives, it is forgivable to disregard global context.To get an idea of whether our plural descriptions are understood correctly by humanreaders, we showed subjects sequences of numbers, exactly two of which appeared inbrackets, along with the following instructions:Suppose you want to inform a hearer *which numbers ina given list appear in brackets*, where the hearerknows what the numbers are, but not which of them appearin brackets.
Forexample, the hearer knows that thelist is1 2 1 7 7 1 1 3 1You, as a speaker, know that only the two occurrencesof the number 7 appear in brackets:1 2 1 (7) (7) 1 1 3 1Our question to you is: Would it be *correct* to conveythis information by saying ?
?The two high numbers appearin brackets??
?The outcomes of the experiment suggested that readers understand plural vague de-scriptions in accordance with the semantics of Section 2 (van Deemter 2000).
In otherwords, they judged the description to be correct if and only if the two highest numbersin the sequence appeared in brackets.Assessing the evidence, it seems that vague descriptions are largely unproblematicfrom the point of view of interpretation.7.3 Testing the Felicity of the Generated ExpressionsHow can we choose between the different forms that a vague description can take?Reiter and Sripada (2002) showed that the variation in corpora based on expert authors211Computational Linguistics Volume 32, Number 2can be considerable, especially in their use of vague expressions (e.g., by evening, by lateevening, around midnight).
We confirmed these findings using experiments with humansubjects (van Deemter 2004), focusing on the choice between the different forms of theadjective.
Informally:1.
The dichotomy constraint of Section 5 did not hold up well: Even whencomparing two things, the superlative form was often preferred over thecomparative.2.
When base forms were used, the gap was almost invariably large.3.
Yet, the Minimality constraint of Section 5 turned out to be difficult toconfirm: Even when the gap was large, base forms were often dispreferred.The validity of these results can be debated (van Deemter 2004) but, taking them at facevalue, one could base different generation strategies on them.
For example, one mightuse the superlative all the time, since this was?surprisingly?the most frequent formoverall.
Based on point (2), however, one might also defend using the base form when-ever the gap is large enough (as was done in the VAGUE program).
Future experimentsshould allow us to refine this position, perhaps depending on factors such as genre,communicative goal, and type of audience.8.
Incrementality: Help or Hindrance?The account sketched in Section 4 was superimposed on an incremental GRE algorithm,partly because incrementality is well established in this area (Appelt 1985; Dale andReiter 1995).
But IA may be replaced by any other reasonable7 GRE algorithm, forexample, one that always exactly minimizes the number of properties expressed, orone that always ?greedily?
selects the property that removes the maximum number ofdistractors.
Let G be any such GRE algorithm, then we can proceed as follows:GRE for Vague Descriptions (version not relying on IA):1.
Construct KB using Attributes and Values, assigning numerical Values togradable Attributes.2.
Recompile the KB, replacing equalities by inequalities.3.
Let G deliver an unordered set of properties which jointly distinguish thetarget if such a set exists.
(One or more of these properties may beinequalities.)4.
Impose a linear ordering on the properties produced by (3).
(If one wishesto generate the same descriptions as in Sections 4.1 and 4.2, theninequalities go last.)
Delete any inequalities that do not remove anydistractors.7 Concretely, we require of a reasonable GRE algorithm that it avoid combining logically comparableinequalities, such as size(x) > 10 and size(x) > 20, inside one description.
All GRE algorithmsthat we know of fulfill this requirement.212van Deemter GRE with Gradable Properties5.
Apply inferences (in the style of Section 4.1) to the list of properties.6.
Perform linguistic realization.Imposing a linear order (4) is a necessary preparation for (5) because the super-lative properties resulting from (5), unlike the inequalities resulting from (4), arecontext dependent.
For example, ?mouse, size(x) = max2?
(the largest two mice,{c3, c4}) does not equal ?size(x) = max2, mouse?
(the mouse among the largest twoelements, {c4}).
Deletion of superfluous inequalities avoids saying, for example, theshort(est) black mouse if there is only one black mouse, because this might invite falseimplicatures.8.1 Problems with IncrementalityWhile IA is generally thought to be consistent with findings on human language pro-duction (Hermann and Deutsch 1976; Levelt 1989; Pechmann 1989; Sonnenschein 1982),the hypothesis that incrementality is a good model of human GRE seems unfalsifiableuntil a preference order is specified for the properties on which it operates.
(Wildlyredundant descriptions can result if the ?wrong?
preference order are chosen.)
We shallsee that vague descriptions pose particular challenges to incrementality.One question emerges when the IA is combined with findings on word order andincremental interpretation.
If human speakers and/or writers perform CD incrementally,then why are properties not expressed in the same order in which they were selected?This question is especially pertinent in the case of vague expressions, since gradableproperties are selected last, but realized first (Section 6).
This means that the linguisticrealization cannot start until CD is concluded, contradicting eye-tracking experimentssuggesting that speakers start speaking while still scanning distractors (Pechmann1989).
A similar problem is discussed in the psycholinguistics of interpretation (Sedivyet al 1999): Interpretation is widely assumed to proceed incrementally, but vague de-scriptions resist strict incrementality, since an adjective in a vague description can onlybe fully interpreted when its comparison set is known.
Sedivy and colleagues resolvethis quandary by allowing a kind of revision, whereby later words allow hearers torefine their interpretation of gradable adjectives.
Summarizing the situation in gener-ation and interpretation, it is clear that the last word on incrementality has not beensaid.8.2 Low Preference for Gradable Properties?It has been argued that, in an incremental approach, gradable properties should begiven a low preference ranking because they are difficult to process (Krahmer andTheune 2002).
We have seen in Section 4.3 that generation and interpretation of vaguedescriptions does have a slightly higher computational complexity than that of non-vague descriptions.
Yet, by giving gradable properties a low ranking, we might causethe algorithm to underuse them, for example, in situations where gradable propertiesare highly relevant to the purpose of the discourse (e.g., a fist fight between people ofvery different sizes).
Luckily, there are no semantic or algorithmic reasons for givinggradables a low ranking.
Let us see how things would work if they were ranked morehighly.Suppose comparative properties do not go to the end of the preference list.
Aftertransformation into superlative properties, this alternative preference ranking could213Computational Linguistics Volume 32, Number 2lead to a list like ?mouse, size(x) = min4, brown, weight(x) = max2?, where two or-dinary properties are separated by a superlative one.
A direct approach to realizationmight word this as the two heaviest brown ones among the smallest four mice.
To avoid suchawkward expressions, one can change the order of properties after CD (mirroring step4 above), moving the inequalities to the end of the list before they are transformed intothe appropriate superlatives.
The effect would be to boost the number of occurrences ofgradable properties in generated descriptions while keeping CD incremental.9.
Extensions of the Approach9.1 Relational DescriptionsSome generalizations of our method are fairly straightforward.
For example, considera relational description (cf., Dale and Haddock 1991) involving a gradable adjective, asin the dog in the large shed.
CD for this type of descriptions along the lines of Section 4 isnot difficult once relational descriptions are integrated with a standard GRE algorithm(Krahmer and Theune 2002, Section 8.6.2): Suppose an initial description is generateddescribing the set of all those dogs that are in sheds over a given size (say, size 5); if thisdescription happens to distinguish an individual dog then this legitimizes the use of thenoun phrase the dog in the large shed.
Note that this is felicitous even if the shed is notthe largest one in the domain, as is true for d2 in the following situation (contains-a=bmeans that a is contained by b):type(d1) = type(d2) = dogtype(c) = cattype(s1) = type(s2) = type(s3) = shedsize(d1) = size(d2) = size(c) = 1msize(s1) = 3msize(s2) = 5msize(s3) = 6mcontains-d1 = s1contains-d2 = s2contains-c = s3In other words, the dog in the large shed denotes ?the dog such that there is no other shedthat is equally large or larger and that contains a dog?.
Note that it would be odd, in theabove-sketched situation, to say the dog in the largest shed.9.2 Boolean CombinationsGeneralizations to complex Boolean descriptions involving negation and disjunction(van Deemter 2004) appear to be largely straightforward, except for issues to do with214van Deemter GRE with Gradable Propertiesopposites and markedness.
For example, the generator will have to decide whether tosay the patients that are old or the patients that are not young.9.3 Multidimensionality9.3.1 Combinations of Adjectives.
When objects are compared in terms of severaldimensions, these dimensions can be weighed in different ways (e.g., Rasmusen 1989).Let us focus on references to an individual referent r, starting with a description thatcontains more than one gradable adjective.
The NP the tall fat giraffe, for example,can safely refer to an element b in a situation like the one below, where b is the onlyelement that exceeds all distractors with respect to some dimension (a different onefor a than for c, as it happens) while not being exceeded by any distractors in anydimension:height(a) = 5 mheight(b) = height(c) = 15 mwidth(a) = width(b) = 3 mwidth(c) = 2 mCases like this would be covered if the decision-theoretic property of Pareto optimality(e.g., Feldman 1980) was used as the sole criterion: Formally, an object r ?
C has aPareto-optimal combination of Values V iff there is no other x ?
C such that1.
?Vi ?
V : Vi(x) > Vi(r) and2.
?
?Vj ?
V : Vj(x) < Vj(r)In our example, b is the only object that has a Pareto-optimal combination of Values,predicting correctly that b can be called the tall fat giraffe.
It seems likely, however, thatpeople use doubly graded descriptions more liberally.
For example, if the example ismodified by letting width(a) = 3.1 m, making a slightly fatter than b, then b might stillbe the only reasonable referent of the tall fat giraffe.
Many alternative strategies are pos-sible.
The Nash arbitration plan, for example, would allow a doubly graded descriptionwhenever the product of the Values for the referent r exceeds that of all distractors (Nash1950; cf.
Gorniak and Roy 2003; Thorisson 1994, for other plans).9.3.2 Multidimensional Adjectives (and Color).
Multidimensionality can also slip inthrough the backdoor.
Consider big, for example, when applied to 3D shapes.
If thereexists a formula for mapping three dimensions into one (e.g., length ?
width ?
height)then the result is one dimension (overall-size), and the algorithm of Section 4 can beapplied verbatim.
But if big is applied to a person then it is far from clear that there is onecanonical formula for mapping the different dimensions of your body into one overalldimension, and this complicates the situation.
Similar things hold for multifacetedproperties like intelligence (Kamp 1975).Color terms are a case apart.
If color is modeled in terms of saturation, hue, and lumi-nosity, for instance, then an object a may be classified as greener than b on one dimension(e.g., saturation), but less green than b on another (e.g., hue).
This would considerablycomplicate the application of our algorithm to color terms, which is otherwise mostly215Computational Linguistics Volume 32, Number 2straighforward (Section 9.3).
(The green chair, said in the presence of two greenish chairs,would refer to the one that is closest to prototypical green.)
A further complicationis that different speakers can regard very different values as prototypical, making itdifficult to assess which of two objects is greener even on one dimension (Berlin and Kay1969, pages 10?12).
(Ideally, GRE should also take into account that the meaning of colorwords can differ across different types of referent.
Red as in red hair, e.g., differs fromred as in red chair.
)Different attitudes towards multidimensionality are possible.
One possibility is tobe cautious and to keep aiming for distinguishing descriptions in the strict sense.
Inthis case, the program should limit the use of vague descriptions to situations wherethere exists a referent that has a Pareto-optimal combination of Values.
Alternatively,one could allow referring expressions to be ambiguous.
It would be consistent with thisattitude, for example, to map multiple dimensions into one overall dimension, perhapsby borrowing from principles applied in perceptual grouping, where different perceptualdimensions are mapped into one (e.g., Thorisson 1994).
The empirical basis of this lineof work, however, is still somewhat weak, so the risk of referential unclarity looms large.Also, this attitude would go against the spirit of GRE, where referring expressions havealways been assumed to be distinguishing.9.4 Salience as a Gradable PropertyWe shall see that a natural treatment of salience falls automatically out of our treatmentof vague descriptions.
As we shall see, this will allow us to simplify the structure of GREalgorithms, and it will explain why many definite descriptions that look as if they weredistinguishing descriptions are actually ambiguous.9.4.1 A New Perspective on Salience.
Krahmer and Theune (2002) have argued thatDale and Reiter?s (1995) dichotomy between salient and nonsalient objects (where theobjects in the domain are the salient ones) should be replaced by an account that takesdegrees of salience into account: No object can be too unsalient to be referred to, as longas the right properties are available.
In effect, this proposal (which measured saliencenumerically) analyzes the black mouse as denoting the unique most salient object in thedomain that is both black and a mouse.
Now suppose we let GRE treat salience just likeother gradable Attributes.
Suppose there are ten mice, five of which are black, whosedegrees of salience are 1, 1, 3, 4, and 5 (the last one being most salient), while the otherobjects in the domain (cats, white mice) all have a higher salience.
Then our algorithmmight generate this list of properties:L = ?mouse, black, salience > 4?.This is a distinguishing description for the black mouse whose salience is 5: the mostsalient black mouse.
The simpler description the black mouse can be derived by stipulatingthat the property of being most salient can be left implicit in English.
The salienceAttribute has to be taken into account by CD, however, and this can be ensured in variousways.
For example, instead of testing whether C ?
[[?Ai, Vi?]]
= {r}, one tests whether ris the most salient element of C ?
[[?Ai, Vi?]].
Alternatively, the algorithm might proceedas usual, performing the usual test (involving C ?
[[?Ai, Vi?]]
= {r}) but starting witha reduced domain, consisting of the things that are at least as salient as the target r:216van Deemter GRE with Gradable PropertiesDomain := {x ?
Domain: salience(x) ?
r}.
The two approaches are equivalent in manysituations.9.4.2 Salience + Plurality = Ambiguity.
It is now easy to see why plural descriptionsare often ambiguous.
Taking salience into account as suggested above, the singular theblack mouse can only refer to the most salient mouse.
But the mice can refer to the mostsalient two (sized 5 and 4), the most salient three (sized 5, 4, and 3), or to all of them.
Todisambiguate the description, something like a number can be used (e.g., the two mice),just as in the case of vague descriptions.When salience is combined with other gradable notions, the likelihood of unclarityis even greater.
Consider the large(st) dog.
Our analysis predicts ambiguity when sizeand salience do not go hand in hand.Type: d1 (dog), d2 (dog), d3 (dog), d4 (dog), c5 (cat)Size: d1 (20 cm), d2 (50 cm), d3 (70 cm), d4 (60 cm), c5 (50 cm)Salience: d1 (6), d2 (4), d3 (3), d4 (5), c5 (6).If we are interested in the three most salient dogs (d1, d2, and d4) then the large(est) dogdesignates d4, but if we are interested in the four most salient ones (d1, d2, d3, and d4),then it designates d3, for example.
In other words, the description is ambiguous betweend3 and d4, depending on whether we attach greater importance to salience or size.
Thisis borne out by our generation algorithm.
Consider the simpler of the two treatments ofsalience, for example, which starts out with a reduced domain.
If d4 is the target then thereduced domain (consisting of all things at least as salient as the target) is {d1, d2, d4, c5};dog narrows this down to {d1, d2, d4}, after which size = max1 generates the large dog.But if d3 is the target then the same procedure applies, this time starting with the fulldomain (since no element is less salient that d3) and the same description is generatedto refer to a different animal.
For a reader, clearly, salience and gradable adjectives area problematic combination.
This should come as no surprise, since salience itself is agradable property, and combinations of gradable properties are always problematic, aswe have seen in the previous section.9.4.3 Salience as a Multidimensional Property.
Note that salience itself is multidimen-sional.
Consider two people talking about the railway station, when one railway stationis near but of only minor importance (e.g., only few trains stop there), while another isfurther afield but of greater significance for travel.
In such a situation, it can be unclearwhich of the two railway stations is intended.
Without more empirical research, wecannot know how people combine salience with other dimensions.GRE has usually assumed that distinguishing descriptions are the norm, but oncesalience is taken into account (especially in combination with plurals and/or othergradable dimensions) it becomes difficult to generate descriptions that are immune tobeing misunderstood.9.5 Beyond Vague Descriptions: Nouns, and Pointing9.5.1 Nouns.
Two other generalizations are worth mentioning.
The first involves aclass of descriptions that do not involve any overt gradable adjectives.
Color terms,for example (cf., Section 9.1), are applicable to different degrees, and the same is true217Computational Linguistics Volume 32, Number 2for many other nouns, such as girl, which involves a vaguely defined age.
Similarclaims can be made about less obvious cases.
Consider a gathering containing onefamous professor (a), one junior lecturer (b), one Ph.D. student (c), and a policewoman(e).
Then the word academic might denote (a), but also (b) or (c).
Accordingly, eachof the following referring expressions appears viable, mirroring examples 3 and 4 ofSection 2:1. the academic (Can only refer to a)2. both academics (Can only refer to {a, b})3. the three academics (Can only refer to {a, b, c})These descriptions are easily generated on the basis of a KB that involves Values rep-resenting degrees of being an academic, the more so because our approach generalizesto ordinal measurements (except for Small Gaps (Section 5), which requires an inter-val or ratio scale, since it involves an assessment of the size of the gap betweenValues).
Note that this treatment could cover all those nouns that are used with variousdegrees of strictness.
It is difficult to say how many nouns fall in this category, but thephenomenon is believed to be widespread.
This is, for example, one of the central tenetsof Prototype Theory (Rosch 1975).
An uncomfortable consequence of these observationsis that it is no longer obvious which words denote a crisp property, and which a gradableproperty.
(For example, it is not clear whether GRE should treat academic as gradable.
)9.5.2 Pointing.
To show that vagueness is also inherent in multimodal communication,imagine the same gathering, but with some more people present.
Suppose someonepoints at the centre of the gathering.
(See below, where W denotes women.)
If the distancebetween pointer and pointee is considerable then the boundaries of the region pointedto are not exactly defined: e is definitely pointed at, but d and f might be doubtful:[W] [W] [W] [W]a b c d e f g h i^^^^^^^^^^||||||||||Here, {e} is a possible referent, and so are {d, e, f} and perhaps {c, d, e, f, g}.
The set {d, f}is not, since there is a gap between its two elements.
If precise pointing is representedas a crisp property whose denotation equals the set of elements pointed at (Krahmerand Van der Sluis 2003), then vague pointing can be incorporated in our algorithmby representing it by a gradable property: We let the generator use a KB that involvesnumerical degrees of being pointed at, where this degree is highest for e, next highestfor d and f , and so on.
If this is done, the generator can generate these two women, alongwith a pointing gesture like the one in our example, to refer to {e, f}.
No changes tothe algorithm of Section 4 are necessary.
A variant of this approach arises if pointingis modeled as a way of establishing degrees of salience (i.e., the closer to the center ofpointing, the higher the value for the attribute SALIENCE) in the style of Section 9.2.218van Deemter GRE with Gradable Properties10.
ConclusionIf the usefulness of NLG resides in its ability to present data in human-accessible form,then vagueness must surely be one of its central instruments, because it allows thesuppression of irrelevant detail.
In principle, this might be done by providing the gen-erator with vague input?in which case no special algorithms are needed?but suitablycontextualized vague input is often not available (Mellish 2000).
The only practicalalternative is to provide the generator with ?crisp?
(i.e., quantitative) input, allowing thegenerator to be hooked on to a general-purpose database.
It is this avenue that we haveexplored in this article, in combination with various (incremental and other) approachesto GRE.Far from being a peculiarity of a few adjectives, vagueness is widespread.
Webelieve that our approach can be applied to a variety of situations in which vaguenessaffects referring expressions including, for example, color terms (Section 9.3); nouns that allow different degrees of strictness (Section 9.5); degrees of salience (Section 9.4); and imprecise pointing (Section 9.5).On the other hand, we have also met some considerable obstacles on our way:Expressive choice (Sections 4 and 7).
By enabling the generator to produce morereferring expressions, we have made it harder to choose between them.
For example,when is a qualitative description preferable over a quantitative one?
At a more detailedlevel, the generator must choose between descriptions like the heaviest two of thesmallest three mice, the mice that weigh between 40 and 60 grams, and so on, each of whichmay single out the same individuals.
Section 7.3 has summarized some experimentalevidence related to such choices, focusing on the different forms of the adjective, but theevidence is far from conclusive.
Much is still unknown, differences between speakersabound, and the experimental methodology for advancing the state of the art in thisarea is not without its problems (van Deemter 2004).Architecture (Section 6).
The inference rules that were necessary to convert one listof properties into another do not sit comfortably within the received NLG pipelinemodel (e.g., Reiter and Dale 2000).
An example of such an inference rule is the onethat transforms a list of the form ?mouse, >10 cm?
into one of the form ?mouse,size(x) = max2?
if only two mice are larger than 10 cm.
The same issues also makeit difficult to interleave CD and linguistic realization as proposed by various authors,because properties may need to be combined before they are expressed.Incrementality (Section 8).
Gradable adjectives complicate the notion of incrementality,in generation as well as interpretation.
Focusing on generation, for example, they forceus to reexamine the idea that properties can be put into words more or less as soonas they have been selected by content determination (even apart from the issue notedunder Architecture).219Computational Linguistics Volume 32, Number 2Adjectives and presuppositions (Section 2).
Our generation-oriented perspectivesheds some doubt on Bierwisch?s (1989) claim that dimensional adjectives areinsensitive to standards provided by the global context: If a man?s height is 205 cm,then surely no local context can make it felicitous (as opposed to just humorous) torefer to him as the short man.
A related issue that we have not touched upon is the factthat adjectives are often used partly to pass judgement: One and the same car mightbe designated as the expensive car by a hesitant customer and as the luxury car by aneager salesman: Even if expense and luxury go hand in hand, the two adjectives havedifferent connotations, and this is something that a generator would ideally be aware of.Multidimensionality (Section 9.3).
We know roughly how to deal with one gradabledimension: the short man, for example, is the shortest man around.
But in practice, weoften juggle several dimensions.
This happens, for example, when two adjectives areused (the short thin man), or when salience is taken into account (e.g., the short man,when the shortest man is not the most salient one), threatening to make irrefutablydistinguishing descriptions something of an exception.
(For a study of approaches tomultidimensionality in a different area, see Masthoff 2004.)
At some point, GRE mayhave to abandon the strategy of aiming for unambiguous descriptions in all situations.AcknowledgmentsI thank Hua Cheng, Roger Evans, AlbertGatt, Markus Guhe, Imtiaz Khan, EmielKrahmer, Judith Masthoff, Chris Mellish,Oystein Nilsen, Manfred Pinkal, Paul Piwek,Ehud Reiter, Graeme Ritchie, Ielka van derSluis, Rosemary Stevenson, Matthew Stone,and Sebastian Varges for helpful comments.
Iam especially grateful to Richard Power, forinspiration as well as for implementing theVAGUE program at great speed.
Thanks aredue to four anonymous reviewers for somevery substantial contributions.
This work hasbeen supported by the EPSRC (GR/S13330,TUNA project).ReferencesAho, Alfred V., John E. Hopcroft, and JeffreyD.
Ullman.
1983.
Data Structures andAlgorithms.
Addison-Wesley PublishingCompany, Reading, MA.Appelt, Doug.
Planning English referringexpressions.
Artificial Intelligence, 26:1?33.Reprinted in: B. J. Grosz, K. Sparck Jones,and B. L. Webber, editors (1986).
Readingsin Natural Language Processing.
MorganKaufmann, Los Altos, CA.Barwise, Jon and John Perry.
1983.
Situationsand Attitudes.
MIT Press, Cambridge, MA.Berlin, Brent and Paul Kay.
1969.
Basic ColorTerms.
University of California Press,Berkeley.Berry, Dianne C., Peter R. Knapp, and TheoRaynor.
2002.
Is 15 percent very common?Informing people about the risks ofmedication side effects.
InternationalJournal of Pharmacy Practice, 10:145?151.Beun, Robbert-Jan and Anita Cremers.
1998.Object reference in a shared domain ofconversation.
Pragmatics and Cognition,6(1/2):121?152.Bierwisch, Manfred.
1989.
The semantics ofgradation.
In M. Bierwisch and E. Lang,editors, Dimensional Adjectives.
SpringerVerlag, Berlin, pages 71?261.Dale, Robert.
1989.
Cooking up referringexpressions.
In Proceedings of the 27thAnnual Meeting of the Association forComputational Linguistics (ACL-89),pages 68?75.Dale, Robbert and Nickolas Haddock.
1991.Generating referring expressionscontaining relations.
Proceedings of the 5thConference of the European Chapter of theACL, EACL-91, pages 161?166, Berlin,Germany.Dale, Robbert and Ehud Reiter.
1995.Computational interpretations of theGricean maximes in the generation ofreferring expressions.
Cognitive Science,18:233?263.DeVault, David and Matthew Stone.
2004.Interpreting vague utterances in context.In Proceedings of COLING 2004,pages 1247?1253, Geneva.Ebeling, K. S. and S. A. Gelman.
1994.Children?s use of context in interpreting?big?
and ?little?.
Child Development,65(4):1178-1192.Feldman, Allan M. 1980.
Welfare Economicsand Social Choice Theory.
Kluwer, Boston.220van Deemter GRE with Gradable PropertiesFunakoshi, Kotaro, Satoru Watanabe, NaokoKuriyama, and Takenobu Takunaga.2004.
Generating referring expressionsusing perceptual groups.
In Proceedingsof 3rd International Conference on NaturalLanguage Generation (INLG) 2004,pages 51?60.
Brockenhurst, UK.Gaiffe, Bertrand and Laurent Romary.
1997.Constraints on the use of language,gesture, and speech for multimodaldialogues.
In Proceedings of ACL WorkshopReferring Phenomena in a Multimedia Contextand Their Computational Treatment,pages 94?98, Madrid, Spain.Goldberg, Eli, Norbert Driedger, and RichardKitteridge.
1994.
Using natural-languageprocessing to produce weather forecasts.IEEE Expert, 9(2):45?53.Gorniak, Peter and Deb Roy.
2003.Understanding complex visuallyreferring utterances.
In Proceedings ofHLT-NAACL03 Workshop on LearningWord Meaning from Non-Linguistic Data,pages 14?21.
Edmonton, Canada,May 2003.Grice, Paul.
1975.
Logic and conversation.
InP.
Cole and J. Morgan, editors, Syntax andSemantics, volume 3, Speech Acts.
AcademicPress, New York, pages 43?58.Hermann, Tony and Roland Deutsch.
1976.Psychologie der Objektbenennung.
HuberVerlag, Bern.Hyde, Dominic.
2002.
Sorites Paradox.In Edward Zalta, editor, The StanfordEncyclopedia of Philosophy (Fall 2002Edition), http://plato.stanford.edu/archives/fall2002/entries/sorites-paradox/.James, Glyn, David Burley, Dick Clements,Phil Dyke, John Searl, and Jerry Wright.1996.
Modern Engineering Mathematics,second edition.
Addison-Wesley LongmanLtd., Harlow, UK.Kamp, Hans.
1975.
Two theories aboutadjectives.
In E. Keenan, editor, Semanticsfor Natural Language.
CambridgeUniversity Press, Cambridge, UK.Kennedy, Christopher.
1999.
Projecting theAdjective: The syntax and Semantics ofGradability and Comparison.
Ph.D. thesis,UC Santa Cruz.Krahmer, Emiel and Marie?t Theune.
2002.Efficient context-sensitive generation ofreferring expressions.
In K. van Deemterand R. Kibble, editors, Information Sharing:Reference and Presupposition in LanguageGeneration and Interpretation, CSLIPublications, CSLI, Stanford,pages 223?264.Krahmer, Emiel and Ielka van der Sluis.
2003.A new model for generating multimodalreferring expressions.
In Proceedings of 9thEuropean Workshop on Natural LanguageGeneration (ENLG-2003), pages 47?54,Budapest.Kyburg, Alice and Michael Morreau.2000.
Fitting Words: vague language incontext.
Linguistics and Philosophy,23:577?597.Levelt, William J. M. 1989.
Speaking: FromIntention to Articulation.
MIT Press,Cambridge, MA.Malouf, Rob.
2000.
The order of prenominaladjectives in natural language generation.In Proceedings of ACL-2000, pages 85?92,Hong Kong.Masthoff, Judith.
2004.
Group modeling:Selecting a sequence of television items tosuit a group of viewers.
User Modeling andUser Adapted Interaction, 14:37?85.Mellish, Chris.
2000.
Understandingshortcuts in NLG systems.
In Proceedings ofWorkshop ?Impacts in Natural LanguageGeneration?, pages 43?50, Dagstuhl,Germany.Nash, John.
1950.
The bargaining problem.Econometrica, 18:155?162.Peccei, Jean Stillwell.
1994.
Child Language,Routledge.Pechmann, Thomas.
1989.
Incrementalspeech production and referentialoverspecification.
Linguistics, 27:98?110.Pinkal, Manfred.
1979.
How to refer withvague descriptions.
In R. Ba?uerle, U. Egli,and A. von Stechow, editors, Semanticsfrom Different Points of View.
SpringerVerlag, Berlin, pages 32?50.Quirk, Randolph, Sidney Greenbaum,Geoffrey Leech, and Jan Svartvik.
1972.
AGrammar of Contemporary English.Longman, Harlow, Essex.Quirk, Randolph, Sidney Greenbaum,Geoffrey Leech, and Jan Svartvik.
1985.
AComprehensive Grammar of the English.Longman, Harlow, Essex.Rasmusen, Eric.
1989.
Games and Information:An Introduction to Game Theory.
BlackwellPublishing.Reiter, Ehud and Robert Dale.
2000.
BuildingNatural Language Generation Systems.Cambridge University Press, Cambridge,UK.Reiter, Ehud and Somayajulu (Yaji) Sripada.2002.
Should corpora texts be goldstandards for NLG?
In Proceedings ofSecond International Conference on NaturalLanguage Generation (INLG-2002),pages 97?104, New York.221Computational Linguistics Volume 32, Number 2Rosch, Eleanor.
1975.
Cognitive referencepoints.
Cognitive Psychology, 7:532?547.Rosch, Eleanor.
1978.
Principles ofcategorization.
In E. Rosch and B. Lloyd,editors, Cognition and Categorization,Lawrence Erlbaum, Hillsdale, NJ,pages 27?48.Sedivy, Julie, Michael Tanenhaus, CraigChambers, and Gregory Carlson.
1999.Achieving incremental semanticinterpretation through contextualrepresentation.
Cognition, 71:109?147.Shaw, James and Vasileios Hatzivassiloglou.1999.
Ordering among premodifiers.
InProceedings of ACL99, pages 135?143,University of Maryland, College Park.Sonnenschein, Susan.
1982.
The effects ofredundant communications on listeners:When more is less.
Child Development,53:717?729.Sripada, Yaji, Ehud Reiter, and Ian Davy.2003.
SumTime-Mousam: Configurablemarine weather forecast generator.
ExpertUpdate, 6(3):4?10.Stone, Matthew.
2000.
On identifying sets.
InProceedings of INLG-2000, pages 116?123,Mitzpe Ramon, Israel.Stone, Matthew and Bonnie Webber.
1998.Textual Economy through close couplingof syntax and semantics.
In Proceedings ofINLG-1998, pages 178?187.Tho?risson, Kristinn R. 1994.
Simulatedperceptual grouping: An application tohuman-computer interaction.
InProceedings of 6th Annual Conference of theCognitive Science Society, pages 876?881.Toogood, John H. 1980.
What do we mean by?usually??
Lancet, 1:1094.van Deemter, Kees.
2000.
Generating vaguedescriptions.
In Proceedings of InternationalConference on Natural Language Generation(INLG-2000), pages 179?185, MitzpeRamon, Israel.van Deemter, Kees.
2002.
Generatingreferring expressions: Boolean extensionsof the incremental algorithm.Computational Linguistics, 28(1):37?52.van Deemter, Kees.
2004.
Finetuning anNLG system through experiments withhuman subjects: The case of vaguedescriptions.
In Proceedings of 3rdInternational Conference on NaturalLanguage Generation (INLG-04),pages 31?40, Brockenhurst, UK.van Deemter, Kees and Jan Odijk.
1997.Context modeling and the generation ofspoken discourse.
Speech Communication,21:101?121.222
