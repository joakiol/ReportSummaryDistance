Augmented Dependency Gr~mm~r :A S imple In ter face  between the  Gr~.m~r Rule and the  KnowledgeKazunori MURAKI , ShunJi ICHIYAMAC&C Systems Research LaboratoriesNEC CorporationKawasaki-city,213 JAPAN andYasutomo FUKUMOCHISoftwear development devisionNSIS CorporationKawasaki-city,213 JAPANABSTRACTThis paper describes some operationalaspects of a language comprehension model whichunifies the linguistic theory and the semantictheory in respect to operations.
Thecomputational model, called Augmented DependencyGrammar (ADG), formulates not only thelinguistic dependency structure of sentences butalso the semantic dependency structure using theextended deep case grammar and fleld-orientedfact-knowledge based inferences.
Fact knowledgebase and ADG model clarify the qualitativedifference between what we call semantics andlogical meaning.
From a practrical view point,it provides clear image of syntactic/semanticcomputation for language processing in analysisand synthesis.
It also explains the gap insemantics and logical meaning, and gives a clearcomputaional image of what we call conceptualanalysis.This grammar is used for analysis ofJapanese and synthesis of English, in theJapanese-to-English machine translation systemcalled VEN~S (Vehicle for Natural LanguageUnderstanding and Synthesis) currently developedby NEC.Legato:Crescendo:Basic IdeaThe VENUS analysis model consists of twocomponents, Legato and Crescendo, as shown inFig.
I. Legato based on the ADG framework,constructs semantic dependency structure ofJapanese input sentences by feature-orienteddependency grammar rules as main controlinformation for syntactic analysis, and bysemantic inference mechanism on a object fields'fact knowledge base.
Legato maps syntacticdependency directly to meaningful logicaldependency if possible, or maps it to language-particular semantic dependency if two kinds ofdependencies do not coincide.
The secondcomponent, Crescendo, extracts a conceptualstructure about facts from the semanticdependency structure through logicalinterpretation on the language-particularsemantic dependency using knowledge basedinferences.11 Input SentenceMorphological  alysis i (Lexicon)Word L i s t1P,Dependency structure L /Semantic Dependency /i Structure /I once tual~Str~ - -  " / / C p cture I J  \[ ThesaurusAnalysis F ( KnowledgeBaseConceptual DependencyStructure1Fi~.
I VENUS Analysis Module198A computational comprehension model for theADG is given in Fig.
2.
Three different kindsof information sources other than the lexiconsupport language comprehension, and twoinference functions defined on them extract theinterpretation of input sentences.
The toplevel information is a language structure model.The bottom is a logical(factual/conceptual)interpretation model which determine thepossible logical relations between "OBJECTs andTHINGS".The semantics located between the above twomodels, which has not been clarified in anypaper.
Suppose interpretalon is a process ofdetermining the relation between " OBJECTs andTHINGs ", the ordinary notion of semanticsallows us to determine words' semantics inparticular syntagmatic relations, but notrelational interpretation between concepts.Language ASyntact i c /Semant lc~process 1 /Conceptual proc ISemantics /Language BFi E. 2 Comprehension ModelThe semantics here is defined as informationconcerning the denotation of OBJECTs and THINGs.It interprets the (semantic) relations betweenthem, and must be inducible from the rawsyntagmatic information.
That is to say, itmay sometimes inherits such language particularfeatures as syntactic structure, wording,culture.
The structure representing semanticsmay not be interpretable in terms of pure logic,but may be represented linguistically.I) The ADG defines syntactic dependencystructure, semantic dependencystructure, and descriminates thesemantic dependency from the logicalstructure.2) It functions as the interface betweensyntactic dependency and semanticdependency.The notion of basically binary "dependency"has a primary role to simplify the aboveinterface, just in the sense that eithersyntactic or semantic inference recognizesinterpretable binary relation.
The semantics inthe sense used here may not necessarily beshared among languages, while facts are sharedamong languages.Legato built on the model is syntactic andsemantic analysis module which constructdirectly semantic dependency structure fromsurface structure.
Crescendo is an engine toeliminate non-logical part in semantic structureand induces logical structure with pragmaticinformation deduced from semantics.~mantlo/Logical InterpretationEach word has its own meaning, sometimesplural meanings.
In this paper word meaning isrepresented by a logical symbol called CONCEPTSYMBOL.
The symbol is a representationprimitive for fact knowledge base and internalconceptual representation of sentences.Semantic structure representation is alsodefined on them, but it borrows syntagmaticfunction called dummy symbols which never appearin conceptual representation.The above examples ~ I ,  SEN2 share the samemeaning as shown in FACT1, except pragmatic andtemporal information.
Ordinary analysis of SENIproduces subject-predicate-object syntagmaticinformation, and further case interpretaion ofsubject-predicate,object-predicate relations.However this kind of case interpretation bringsinto difficulties to select case markingambiguities such as GOAl or RESult for the aboveobject-predicate.
SEN2 analysis producesinstantly REAson interpretation between twonominals in terms of "REAson"-markingpreposition "because-of".
This comparisonsupports the case even a verb must beinterpreted in some case as a logical relationand clarifies the standpoint to specify the ADG.I.
Factual(conceptual) information must beindependent of syntagmatic meaning aswell as independent of syntax.2.
Ordinary case marking strategy producesanomaly because it dare to interpretsyntagmatic relations logically even ifthose are purely syntagmatic existence.3.
Fillmore's case is not suitable forconceptual representaion primitive for avariety of syntactic and syntagmaticstructures.On the other hand, syntax is a clue tounderstanding of sentences.
Syntagmaticrelations, in most cases, can be interpretableas in FACTI for SEN2, and linguisticinformation is a sole trigger for human torecognize new notion or new word meaning in asentence.199SENt War resulted in disaster.NOMINAL VERB .
NOMINAL part-of-speechsubject pred object / grammatical f."REAson/ j  ~"~GOAI// /  ordinary caseOBJect RESult semanticsSEN2 Disaster because of warNOMINAL P"~OMINALPOST-NOMINAL modifier grammatical f.DISASTER4-- REAson 4 WARS~I War resulted in disaster.WAR REAson DISASTER"" REAson~ "~'~REAson2 /F&CT1 WAR ?
REAson b DISASTERADG and usual casesemantics coincide withfactual meaningCONCEPT SYMBOLsADG semanticsconceptual representationfor both SENI and SEN2Comprehension of constructing factualinformation is defined by two different levelsunderstanding; I LEGATO semantic analysis (asshown in S~I ,  FACTI for SENI,2 respectively)with direct correspondence to syntagmaticrelation, and 2.
CRESCENDO factual (logical)understanding as in a extraction process ofFACTI from SENt via S~I .The symbols; RF.J~onl,2 as in S\]~1, arecalled dummy relations in the sense thatREAson1(2) has no logical significance becauseREAson1(2) holds in any combination of REAsonand other concept, while REAson in FACTI holdsin the special combination of concepts like WARwith DISASTAR.
They play a role to matchsyntagmatic relation with semantics in terms ofsyntax.
These two processes analize thepragmatic, modal, and temporal information whichis added into the factual structure to producethe conceptual structure.
"Dependency" is 2nd idea, to figure out thatsemantic (dependency) analysis of sentences isexecutable at the same time of syntactic(dependency) analysis.
ADG employs dependencyframework in a different way from the ordinaryone.
It deals with prepositions, postpositions,case inflections, grsmmstical functions, copulaetc., as the functional features for relationalinterpretation.
For example, preposition inEnglish may not be a syntactic governor ('head'in this paper) of its object phrase, copula "be"in front of adjective modifies the syntacticfeature of the adjective as a syntagmatic headpredicate which allows it to have a dependentmarked as a subject, while adjective in itselfhas a function of pre-nominal modifier.
Namely,most of the functional words are dealt like caseinflections.
They add functional features towords or modify their features.The functional features map word-to-worddependency to concept-to-concept semanticdependency.
The figure 3 explains the simpleinterface mechanism.
Functional features such asSUBject, OBJect, BECAUSE-OF corresponds toREAsonl, RF_~son2, REAson respectively.
The ADGsyntactic dependency rules(see ?s below) predictthose semantic relations using the functionalfeatures and word syntax, and at the same timethey trigger fact knowledge base inference tointerpret Concept-to-Concept relations.
Afact(concept) knowledge base is composed of suchbinary pieces as Ss or Cs.
In this figure S andC mean semantic knowledge dependent onlanguages, and conceptual knowledgerespectively.Word/Concept Function/Relation Word/Concept?
war subject result-inS WAR REAsonl REAson?
war object result-inS WAR RF_~Lson2 RK&son?
war BECAUSE-OF disasterC WAR REAson DISASTERFig.
3 Syntactic dependency r dummy/conceptual dependency200definitionDI.
FEATURE describes morphological,syntactic, semantic, and conceptual information, and is used for describing the lexicon,semantic structure, conceptual structure and ADGrules.
Feature is formalized as :Feature ~ .
~Feature Value} .
{ Context}Dependency function, one of the syntacticfeatures for a particle , is described asfollows.LD.LNULL ) .~A~ LH.
{NULL1.
tA Ino word on the left depends on aparticle, it depends on no word on theleftRD.
INOM I.
A RH.
INULLI.
Ait depends on NOMinal on the rightetc.D2.
CONCEPTUAL SYMBOL(C3) is a large set ofintensional symbols standing for meaningsconveyed by words.
CONCEPTUAL SYMBOL includesthose symbols such as NOTION, COMPUTER, GIVE,COLOR, BEAUTIFUL, SUP-SUB, PARTOF, AGT and soon.
CS is one of the features included inFEATURE.D3.
THESAURUS is a system defined as asubset of:CONCEPTUAL S~L ~ x SUF-SUB(PARTOF) relationD4.
FTABLE is a system defined as a subsetof:CONCEPTUAL S~L x CONCEPTUAL/dummy F~LATION~Relation symbols in PTABLE consist of 45CONCEPTUAL relations except for SUP-SUBrelation, and dummy relations such as REAsonl,REAson2, LOCI, etc.
CONCEPTUAL RELATION is asubset of CONCEPTUAL SYMBOL: AGT relation , OBJrelation .
POSSess relation, LOC relation andthe other 41 relations.Relations are directed binary relationsincluding logical ones such as REAson, CAUSAL,PARTOF, SUP-SUB, etc.
and deep case relationssuch as AGT, OBJ, LOC, etc., and severallanguage dependent dummy relations such as LOCI,LOC2 ,CNTI, REAsonl etc.The THESAURUS and the FTABLE, which isdescribed interms of semantic dependency andconceptual information, compose the factknowledge base.
The former forms directednetwork called an abstraction hierarchy forconcept generalization.CONCEPT SYMBOLThe CS(CONCEPT SYMBOL) differs from that ofSchank's primitives in many respects.
Thenumber of CSs grows in proportion to the sizeof vocaburary as human cultivates new ideas andnotions.
The meaning of each CS isintensionally defined by LambdaCSCOOCURR(CS,CSi,CRj).
This model does notrequire to explain the reason why these CSsmay be primitives and set up lexical rules formapping Sehank's semantic primitives to thecorresponding words.
That is to say, human canperceive the word concept only through observingwhich CSs and CRs CO-OCURR with logical andpragmatic functions.
Each description ofC00CURR(CSI,CS2,CS3) in the world model, whereone C,$i can be interpreted as CR, specifies themeaning LambdaCSi.ADG rules are defined as feature-oriented.DL.
ADG: dependency rule for Legato.
(FEATUREI) + (FEATURE2) ~(FEATURE3)Head Se lec t ionFeature InheritanceConceptual Relation PredictionTriggering Thesaurus/PTABLE._g~mn-tio Dependency Const ruct ionI)6. contextual rule for Crescendo.IPA  1 * i PA ;PATH : FEATURE (dep/hed FEATURE)(dep/hed :a dependency direction)D7.
Network s t ruc ture  is used for INTERNALREPRES~TATION: semantic dependency structureand conceptual structure.
Network S t~eture  isdefined as a subset of:CONCEPTUAL 3YMBO~x~45 conceptua l  relations,dummy relations }I)8.
Each lexical entry has its KEY andCONTENT.
The KEY consists of WORD spelling andCS.
The CONTENT is a set of FEATUREs .
CS maybe one piece of those conceptual FEATUREs .Atomic formula in  FTABLE and THESAURUSKnowledge Base consists of LEXICON,THESAURUS and FTABLE.The case grammar, as a basis of internalrepresentation, which is constructed with thecombination of binary case relations, fits thedependency grammar very well, since bothdependency and case relation are basicallybinary.
The dependency analysis also correlatesto the atomic formula adopted for fact modelspecification.
The formula has the followingform, but not the ordinary predicate convention.The formula tells only the fact that three CSs(one may be CR) coocurr logically.cooc~R ( c~sl , c.sj , c~ )201This convention also implies some order-freecalculation.
The following example illustratesthis kind of flexible function.$11 An Apple existed on the table.APPLE LOCation TABLE - - -FILOC(APPLE,TABLE).$12 The location of an apple was the table.LOC APPLE TABLEeq (TABLE, LOC of APPLE) - - - F2TABLE (LOC , APPLE) - - - F3$22 Tom processed data.HUMAN PROCESS DATA - - - F4PROCESS(HUMAN , DATA)$22 The agent of process was TOM.
(TOM is a process-or).AGT PROCESS HUMANeq ( HUMAN, AGT of PROCESS) - - -F5HUMAN ( AGT , PROCESS ) - - - F6Many kinds of formula can be set up forrepresenting the above propositions In ourframework, the following unique representationformat resolves the higher order difficulties,such asFI&F3 : LOC(APPLE,TABLE(LOC,APPLE).F4&F6 :PROCESS(HUMAN(AGT,PROCESS),DATA).by using alternativesCOOCURR( APPLE, TABLE).COOCURR(PROCESS,HUMAN,AGT).COOCURR(PROCESS,DATA,OBJ).Dependency grammar framework has beenaugmented as follows:ADG funotlonsI.
detects a possible pair of syntactichead and its dependent based on theirFEATUREs,2.
predicts a set of permissible conceptualrelations between them, using their pro-or post-positional features, phrasestructural features, case structuralfeatures and so on,3.
triggers the knowledge base inferencemechanism using their CSs in theirconceptual information and the predictedpermissible relations,4.
constructs their dependency structureusing their FEATUREs if the knowledgebase returns consistent semanticinterpretation; in other words, if theconsistent conceptual relation betweentheir CSs is found.Legato ImplementationLegato is a bottom-up dependency analysisengine (a kind of shift-reduce mechanism) basedon the non-deterministic push-down automaton 2, which is extended by devising context holdingmechanism (context stack) to deal withexceptional dependencies (to be mentionedlater).The binary (augmented) dependency rule has astructure shown in Fig.
2.
If the focused word(called FOCUS) and the word on the top of thepush-down stack (called Pd-TOP) have theFEATUREs specified by the rule, a new HEAD withthe derived FEATUREs is created by the action inthe rule.F O C U S + P d T O P - - -~  A C T I O Nfeature feature actionsconditions conditionsfor the focus for the push downword stack top wordFig.
4 Legato rule formIn the case of Japanese,I.
Japanese sentences satisfy the non-crossing condition in syntacticdependency relation.2.
Moreover, the syntactic dependencyrelation coincides with the semantic andconceptual dependency relation in mostcases.However, the semantic dependency sometimesdoesn't coincide with the syntactic dependency.In a worse case, even the non-crossing conditiondoes not hold.
The sample sentences in Fig.
5exemplify such a linguistic phenomenon.The non-crossing condition does not holdsemantically in Ex.
2 and Ex.
3.
Here in thisfigure, the solid lines indicate a syntacticdependency and the dotted lines indicate asemantic dependency.
The arrows run from thehead word to the dependent word.A case of non-correspondence betweensyntactic and semantic dependency is shown inEx.
2 (al & a2).
although, w4 is recognized asw3's syntactic head, the true semantic head ofw3 can be found among the words (wl and w2)syntactically dependent on the word, w3.
That isthe word, wl.
Furthermore, the crossing of a2and a3 violates the non-crossing condition.The context stack is a small push-down stackfor keeping sub-context associated with thedependent words , and it is attatched to the202newly generated HEAD in order to bridge the gapbetween both kinds of dependencies.
WhenLegato creates a new HEAD from Pd-TOP and HEAD,the context associated with Pd-TOP is stacked uponto the context stack in the new HEAD.
At thesame time, the semantic dependency isconstructed between Fd-TOP and HEAD if it ispermissible.
Legato refers to the context inthe context stack if needed, and then constructsthe semantic dependency if the word which has asemantic dependency relation to the word storedwithin a context in the context stack can beidentified.This enables the analysis mechanism toeasily deal with the sister dependency, whichcannot done with in the traditional dependencygrammar framework.C~eseendo implementationThe conceptual structure to be extracted asthe final result of the comprehension processmust be independent of the surface expression,while the semantic structure given by Legato mayretain the inherited characteristics from thesurface expression in the source language.
IfEx.
IEx.
2Ex.
3Fi~.
5ihu m an.The sentence?
%analysis ~ easyI ,*% t qiicomputers ~A/2 the laboratory in W3 three W~ use.
.
.
.
.
.
- - L.instead of car-S Robot maket I' ?
-T I  iA ,AI.
JExamples of the gap between syntactic and semantic dependencya.
Input sentenceX is an ele m ent of the set A.<ELe Men ~~I  ~LM2Jb.
Crescendo inferenceCSs: 'ELeMent', 'SET', 'N A M E' , ('A' and 'x')Conceptual Relations: 'N A M E' and 'ELeMent'.dum my relations: 'ELMI , 'ELM2'c.
Contextual Rule<ELeMent~ *XI ) .
~e~e~tFi~.6 Crescendo diaLra m203the surface sentences express the same concepts,th?y must be organized into the same conceptualdependency structure.In the semantic structure example given onthe left in Fig.
6.b, the CS "ELeMent", whichusually has two meanings ( an object concept anda membership relation concept), functions as anobject concept.
It is reasonable, from a logicalpoint of view, to regard the CS as a relationname in the conceptual structure , as shown onthe right in Fig.6.b because 'SET -ELeMent - X'is easily deduced from the two propositions of'ELeMent -ELM2 - X' and 'ELeMent - ELMI - SET'.That is to say, the two sentences, like "The setA includes X" and "X is an element in the setA," must have the same conceptual structure.Crescendo controls this kind of logicaldeduction neccessary for concluding theconceptual structure from the semanticstructure.
Besides conceptual and logicalinference rules, it has causal inference rulesamong the facts for determing consistent causalchains.Figure 6.c shows an example of the logicalinference rules.
It infers the right conceptualstructure in Fig.
6.b from the left semanticstructure.
The knowledge based inference alsoassures the consistency of the deducedconceptual structures.Conluding RemarkThis paper has introduced a languagecomprehension model ADG to determine linguisticand semantic structures in sentences with asimple binary operation framework.
The proposeddependency structure analysis engine (Legato)and the conceptual structure extraction engine(Crescendo) have been implemented.
The ADGsucceeded in constructively formalizingsyntactic specification and semanticinterpretation, using the knowledge base of aset of conceptual relations and the inferencemechanism on it, defined only by simple binaryoperations.Legato and Crescendo were incorporated inVENUS Japanese-to-English machine translationsystem.
The experiments have proved itsoperational efficacy, fitness and Justification.The ADG points out anomaly in usual casesystems, and resolves it by introducing theconcept of dummy relation which can not and mustnot be interpreted logically.
This extensionputs the semantics of a linguistic theory inthe correct position.ReferencesI.
Gaifman, H., "Dependency System andPhrase Structure Systems, "Informationand Control 8,304-337(1965).2.
Aho, A.V., Hopcroft, J.E.
and Ullman,J.D., "The Design and Analysis ofComputer Algorithms," Addison-WesleyPublishing Co.(1974).204
