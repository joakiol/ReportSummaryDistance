Disambiguation of Proper Names in TextNina Wacho lder"CR IACo lumbia  Un ivers i tyNew York ,  NY  10027nina@cs, columbia, eduYael Ravin Misook ChoiT J  Watson  Research  Center  T J  Watson  Research  CenterIBM IBMYorktown Heights ,  NY  10598 York town He ights ,  NY  10598yaelCwat son.
ibm.
com machoi@wat son.
ibm.
tomAbst ractIdentifying the occurrences of propernames in text and the entities they refer tocan be a difficult task because of the many-to-many mapping between ames and theirreferents.
We analyze the types of ambi-guity - -  structural and semantic - -  thatmake the discovery of proper names dif-ficult in text, and describe the heuristicsused to disambiguate names in Nomina-tor, a fully-implemented module for propername recognition developed at the IBMT.J.
Watson Research Center.1 P roper  Name Ident i f i ca t ion  inNatura l  Language Process ingText processing applications, uch as machine trans-lation systems, information retrieval systems ornatural-language understanding systems, need toidentify multi-word expressions that refer to propernames of people, organizations, places, laws andother entities.
When encountering Mrs. Candy Hillin input text, for example, a machine translationsystem should not attempt o look up the transla-tion of candy and hill, but should translate Mrs. tothe appropriate personal title in the target languageand preserve the rest of the name intact.
Similarly,an information retrieval system should not attemptto expand Candy to all of its morphological variantsor suggest synonyms (Wacholder et al 1994).The need to identify proper names has two as-pects: the recognition of known names and the dis-covery of new names.
Since obtaining and maintain-ing a name database requires ignificant effort, manyapplications need to operate in the absence of sucha resource.
Without a database, names need to bediscovered in the text and linked to entities they re-fer to.
Even where name databases exist, text needsto be scanned for new names that are formed whenentities, such as countries or commercial companies,are created, or for unknown names which becomeimportant when the entities they refer to become202topical.
This situation is the norm for dynamic ap-plications uch as news providing services or Internetinformation indexing.The next Section describes the different ypes ofproper name ambiguities we have observed.
Sec-tion 3 discusses the role of context and world knowl-edge in their disambiguation; Section 4 describes theprocess of name discovery as implemented in Nomi-nator, a module for proper name recognition devel-oped at the IBM T.J. Watson Research Center.
Sec-tions 5-7 elaborate on Nominator's disambiguationheuristics.2 The  Ambigu i ty  o f  P roper  NamesName identification requires resolution of a subset ofthe types of structural and semantic ambiguities en-countered in the analysis of nouns and noun phrases(NPs) in natural anguage processing.
Like commonnouns, ((Jensen and Binot 1987), (Hindle and Rooth1993) and (Brill and Resnick 1994)), proper namesexhibit structural ambiguity in prepositional phrase(PP) attachment and in conjunction scope.A PP may be attached to the preceding NP andform part of a single large name, as in NP\[MidwestCenter PP\[for NP\[Computer Research\]\]\].
Alterna-tively it may be independent of the preceding NP,as in NP\[Carnegie Hall\] PP\[for NP\[Irwin Berlin\]\],where for separates two distinct names, CarnegieHall and Irwin Berlin.As with PP-attachment of common oun phrases,the ambiguity is not always resolved, even in hu-man sentence parsing (cf.
the famous example I sawthe girl in the park with the telescope).
The loca-tion of an organization, for instance, could be partof its name (City University of New York) or anattached modifier (The Museum of Modern Art inNew York City).
Without knowledge of the officialname, it is sometimes difficult to determine the ex-act boundaries of a proper name.
Consider examplessuch as Western Co. of North America, Commod-ity Ezchange in New York and Hebrew University inJerusalem, Israel.Proper names contain ambiguous conjoinedphrases.
The components of Victoria and AlbertMuseum and IBM and Bell Laboratories look identi-cal; however, and is part of the name of the museumin the first example, but a conjunction joining twocomputer company names in the second.
Althoughthis problem is well known, a seazch of the computa-tional literature shows that few solutions have beenproposed, perhaps because the conjunct ambiguityproblem is harder than PP attachment (though see(Agarwal and Boggess 1992) for a method of con-junct identification that relies on syntactic ategoryand semantic label).Similar structural ambiguity exists with respectto the possessive pronoun, which may indicate a re-lationship between two names (e.g., Israel's ShimonPeres) or may constitute a component of a singlename (e.g., Donoghue's Money Fund Report).The resolution of structural ambiguity such asPP attachment and conjunction scope is requiredin order to automatical ly establish the exact bound-aries of proper names.
Once these boundaries havebeen established, there is another type of well-knownstructural ambiguity, involving the internal struc-ture of the proper name.
For example, Professor ofFar Eastern Art John Blake is parsed as \[\[Professor\[of Fax Eastern Art\]\] John Blake\] whereas ProfessorArt Klein is \[\[Professor\] Art Klein\].Proper names also display semantic ambiguity.Identification of the type of proper nouns resem-bles the problem of sense disambiguation for com-mon nouns where, for instance, state taken out ofcontext may refer either to a government body orthe condition of a person or entity.
A name varianttaken out of context may be one of many types, e.g.,Ford by itself could be a person (Gerald Ford), anorganization (Ford Motors), a make of car (Ford),or a place (Ford, Michigan).
Entity-type ambiguityis quite common, as places are named after famouspeople and companies are named after their ownersor locations.
In addition, naming conventions aresometimes disregarded by people who enjoy creatingnovel and unconventional names.
A store named Mr.Tall and a woman named April Wednesday (McDon-ald 1993) come to mind.Like common ouns, proper nouns exhibit system-atic metonymy: United States refers either to a geo-graphical area or to the political body which governsthis area; Wall Street Journal refers to the printedobject, its content, and the commercial entity thatproduces it.In addition, proper names resemble definite nounphrases in that their intended referent may be am-biguous.
The man may refer to more than one maleindividual previously mentioned in the discourse orpresent in the non-linguistic ontext; J. Smith maysimilarly refer to more than one individual namedJoseph Smith, John Smith, Jane Smith, etc.
Se-mantic ambiguity of names is very common becauseof the standard practice of using shorter names to203stand for longer ones.
Shared knowledge and con-text are crucial disambiguation factors.
Paris, usu-ally refers to the capital of France, rather than acity in Texas or the Trojan prince, but in a particu-lar context, such as a discussion of Greek mythology,the presumed referent changes.Beyond the ambiguities that proper names sharewith common ouns, some ambiguities are particularto names: noun phrases may be ambiguous betweena name reading and a common noun phrase, as inCandy, the person's name, versus candy the food, orThe House as an organization versus a house refer-ring to a building.
In English, capitalization usuallydisambiguates the two, though not at sentence be-ginnings: at the beginning of a sentence, the compo-nents and capitalization patterns of New Coke andNew Sears are identical; only world knowledge in-forms us that New Coke is a product and Sears is acompany.Furthermore, capitalization does not always dis-ambiguate names from non-names because whatconstitutes a name as opposed to a 'non-name isnot always clear.
According to (Quirk et al 1972)names, which consist of proper nouns (classified intopersonal names like Shakespeare, temporal nameslike Monday, or geographical names like Australia)have 'unique' reference.
Proper nouns differ in theirlinguistic behavior from common ouns in that theymostly do not take determiners or have a pluralform.
However, some names do take determiners,as in The New York Times; in this case, they "areperfectly regular in taking the definite article sincethey are basically prernodified count nouns... Thedifference between an ordinary common noun andan ordinary common noun turned name is that theunique reference of the name has been institution-alized, as is made overt in writing by initial capitalletter."
Quirk et al's description of names seems toindicate that capitalized words like Egyptian (an ad-jective) or Frenchmen (a noun referring to a set ofindividuals) are not names.
It leaves capitalized se-quences like Minimum Alternative Taz, Annual Re-port, and Chairman undetermined as to whether ornot they are names.All of these ambiguities must be dealt with ifproper names are to be identified correctly.
Inthe rest of the paper we describe the resourcesand heuristics we have designed and implementedin Nominator and the extent to which they resolvethese ambiguities.3 D isambiguat ion  ResourcesIn general, two types of resources are available fordisambiguation: context and world knowledge.
Eachof these can be exploited along a continuum, from'cheaper' to computationally and manually more ex-pensive usage.
'Cheaper' models, which includeno context or world knowledge, do very little dis-ambiguation.
More 'expensive' models, which usefull syntactic parsing, discourse models, inferenceand reasoning, require computational nd human re-sources that may not always be available, as whenmassive amounts of text have to be rapidly processedon a regular basis.
In addition, given the currentstate of the art, full parsing and extensive worldknowledge would still not yield complete automaticambiguity resolution.In designing Nominator, we have tried to achieve abalance between high accuracy and speed by adopt-ing a model which uses minimal context and worldknowledge.
Nominator uses no syntactic ontextualinformation.
It applies a set of heuristics to a listof (multi-word) strings, based on patterns of capi-talization, punctuation and location within the sen-tence and the document.
This design choice differ-entiates our approach from that of several similarprojects.
Most proper name recognizers that havebeen reported on in print either take as input texttagged by part-of-speech (e.g., the systems of (Paiket al 1993) and (Mani et al 1993)) or perform syn-tactic and/or morphological analysis on all words,including capitalized ones, that are part of candi-date proper names (e.g., (Coates-Stephens 1993) and(McDonald 1993)).
Several (e.g., (McDonald 1993),(Mani et al 1993), (Paik et al 1993) and (Cowieet al 1992)) look in the local context of the candi-date proper name for external information such asappositives (e.g., in a sequence such as Robin Clark,presiden~ of Clark Co.) or for human-subject verbs(e.g., say, plan) in order to determine the categoryof the candidate proper name.
Nominator does notuse this type of external context.Instead, Nominator makes use of a different kindof contextual information - -  proper names co-occuring in.
the document.
It is a fairly standardconvention in an edited document for one of the firstreferences to an entity (excluding a reference in thetitle) to include a relatively full form of its name.In a kind of discourse anaphora, other references tothe entity take the form of shorter, more ambiguousvariants.
Nominator identifies the referent of the fullform (see below) and then takes advantage of thediscourse context provided by the list of names toassociate shorter more ambiguous name occurrenceswith their intended referents.In terms of world knowledge, the most obvious re-source is a database of known names.
In fact, this iswhat many commercially available name identifica-tion applications use (e.g., Hayes 1994).
A reliabledatabase provides both accuracy and efficiency, iffast look-up methods are incorporated.
A databasealso has the potential to resolve structural ambigu-ity; for example, if IBM and Apple Computers arelisted individually in the database but IBM and Ap-ple Computers i not, it may indicate a conjunctionof two distinct names.
A database may also con-tain default world knowledge information: e.g., withno other over-riding information, it may be safe toassume that the string McDonald's refers to an or-ganization.
But even if an existing database is reli-able, names that are not yet in it must be discoveredand information in the database must be over-riddenwhen appropriate.
For example, if a new name suchas IBM Credit Corp. occurs in the text but not inthe database, while IBM exists in the database, au-tomatic identification of IBM should be blocked infavor of the new name IBM Credi~ Corp.If a name database exists, Nominator can takeadvantage of it.
However, our goal has been to de-sign Nominator to function optimally in the absenceof such a resource.
In this case, Nominator con-sults a small authority file which contains informa-tion on about 3000 special 'name words' and theirrelevant lexical features.
Listed are personal titles(e.g., Mr., King), organizational identifiers (includ-ing strong identifiers such as Inc. and weaker do-main identifiers such as Arts) and names of largeplaces (e.g., Los Angeles, California, but not Scars-dale, N.Y.).
Also listed are exception words, suchas upper-case lexical items that are unlikely to besingle-word proper names (e.g., Very, I or TV) andlower-case lexical items (e.g., and and van) that canbe parts of proper names.
In addition, the authorityfile contains about 20,000 first names.Our choice of disambiguation resources makesNominator fast and robust.
The precision and re-call of Nominator, operating without a database ofpre-existing proper names, is in the 90's while theprocessing rate is over 40Mg of text per hour on aRISC/6000 machine.
(See (Ravin and Wacholder1996) for details.)
This efficient processing has beenachieved at the cost of limiting the extent to whichthe program can 'understand' the text being ana-lyzed and resolve potential ambiguity.
Many word-sequences that are easily recognized by human read-ers as names are ambiguous for Nominator, given therestricted set of tools available to it.
In cases whereNominator cannot resolve an ambiguity with rela-tively high confidence, we follow the principle that'noisy information' is to be preferred to data omit-ted, so that no information is lost.
In ambiguouscases, the module is designed to make conservativedecisions, such as including non-names or non-nameparts in otherwise valid name sequences.
It assignsweak types such as ?HUMAN or fails to assign atype if the available information is not sufficient.4 The  Name D iscovery  P rocessIn this section, we give an overview of the processby which Nominator identifies and classifies propernames.
Nominator's first step is to build a list ofcandidate names for a document.
Next, 'splitting'heuristics are applied to all candidate names for thepurpose of breaking up complex names into smallerones.
Finally, Nominator groups together name vari-204ants that refer to the same entity.
After informationabout names and their referents has been extractedfrom individual documents, an aggregation processcombines the names collected from all the documentsinto a dictionary, or database of names, representa-tive of the document collection.
(For more detailson the process, see (Ravin and Wacholder 1996)).We illustrate the process of name discovery withan excerpt taken from a Wall Street Journal articlein the T IPSTER CD-ROM collection (NIST 1993).Paragraph breaks are omitted to conserve space.. .
.
The professional conduct of lawyers in otherjurisdictions is guided by American Bar Associationrules or by state bar ethics codes, none of whichpermit non-lawyers to be partners in law firms.
TheABA has steadfastly reserved the title of partner andpartnership erks (which include getting a stake ofthe firm's profit) for those with law degrees.
ButRobert Jordan, a partner at Steptoe & Johnson whotook the lead in drafting the new district bar code,said the ABA's rules were viewed as "too restrictive"by lawyers here.
"The practice of law in Washing-ton is very different from what it is in Dubuque,"he said .
.
.
.
Some of these non-lawyer employees arepaid at partners' levels.
Yet, not having the part-ner title "makes non-lawyers working in law firmssecond-class citizens," said Mr. Jordan of Steptoe &Johnson .
.
.
.Before the text is processed by Nominator, it isanalyzed into tokens - -  sentences, words, tags, andpunctuation elements.
Nominator forms a candidatename list by scanning the tokenized document andcollecting sequences of capitalized tokens (or words)as well as some special lower-case tokens, such asconjunctions and prepositions.The list of candidate names extracted from thesample document contains:American Bar AssociationRobert JordanSteptoe &= JohnsonABAWashingtonDubuqueMr.
Jordan of Steptoe & JohnsonEach candidate name is examined for the presenceof conjunctions, prepositions or possessive 's.
A setof heuristics is applied to determine whether eachcandidate name should be split into smaller inde-pendent names.
For example, Mr. Jordan of SteptoeJohnson is split into Mr. Jordan and Steptoe 8JJohnson.Finally, Nominator links together variants thatrefer to the same entity.
Because of standardEnglish-language naming conventions, Mr. Jordanis grouped with Robert Jordan.
ABA is groupedwith American Bar Association as a possible abbre-viation of the longer name.
Each linked group iscategorized by an entity type and assigned a 'canon-ical name' as its identifier.
The canonical name isthe fullest, least ambiguous label that can be usedto refer to the entity.
It may be one of the variantsfound in the document or it may be constructed fromcomponents ofdifferent ones As the links are formed,each group is assigned a type.
In the sample outputshown below, each canonical name is followed by itsentity type and by the variants linked to it.American Bar Association (ORG) : ABASteptoe & Johnson (ORG)Washington (PLACE)Dubuque (PLACE)Robert Jordan (PERSON) : Mr. JordanAfter the whole document collection has beenprocessed, linked groups are merged across docu-ments and their variants combined.
Thus, if inone document President Clinton was a variant ofWilliam Clinton, while in another document Gover-nor Clinton was a variant of William Clinton, bothare treated as variants of an aggregated WilliamClinton group.
In this minimal sense, Nominatoruses the larger context of the document collectionto 'learn' more variants for a given name.In the following sections we describe how ambigu-ity is resolved as part of the name discovery process.5 Reso lu t ion  o f  S t ruc tura lAmbigu i tyWe identify three indicators of potential structuralambiguity, prepositions, conj unctions and possessivepronouns, which we refer to as 'ambiguous oper-ators'.
In order to determine whether 'splitting'should occur, a name sequence containing an am-biguous operator is divided into three segments - -the operator, the substring to its left and the sub-string to its right.
The splitting process applies aset of heuristics based on patterns of capitalization,lexical features and the relative 'scope' of operators(see below) to name sequences containing these op-erators to determine whether or not they should besplit into smaller names.We can describe the splitting heuristics as deter-mining the scope of ambiguous operators, by analogyto the standard linguistic treatment of quantifiers.From Nominator's point of view, all three operatortypes behave in similar ways and often interact whenthey co-occur in the same name sequence, as in NewYork's MOMA and the Victoria and Albert Museumin London.The scope of ambiguous operators also interactswith the 'scope' of NP-heads, if we define the scopeof NP-heads as the constituents they dominate.
Forexample, in Victoria and Albert Museum, the con-junction is within the scope of the lexical headMuseum because Museum is a noun that can takePP modification (Museum of Natural History) and205hence pre-modification (Natural History Museum).Since pre-modifiers can contain conj unctions (Japan-ese Painting and Printing Museum), the conjunctionis within the scope of the noun, and so the nameis not split.
Although the same relationship holdsbetween the lexical head Laboratories and the con-junction and in IBM and Bell Laboratories, anotherheuristic takes precedence, one whose condition re-quires splitting a string if it contains an acronymimmediately to the left or to the right of the am-biguous operator.It is not possible to determine relative scopestrength for all the combinations of different opera-tors.
Contradictory examples abound: Gates of Mi-crosoft and Gerstner of IBM suggests stronger scopeof and over o k The Department of German Lan-guages and Literature suggests the opposite.
Sinceit is usually the case that a right-hand operatorhas stronger scope over a left-hand one, we evalu-ate strings containing operators from right to left.To illustrate, New York's MOMA and the Victoriaand Albert Museum in London is first evaluated forsplitting on in.
Since the left and right substringsdo not satisfy any conditions, we proceed to the nextoperator on the left - -  and.
Because of the strongscope of Museum, as mentioned above, no splittingoccurs.
Next, the second and from the right is eval-uated.
It causes a split because it is immediatelypreceded by an all-capitalized word.
We have foundthis simple typographical heuristic to be powerfuland surprisingly accurate.Ambiguous operators form recursive structuresand so the splitting heuristics apply recursively toname sequences until no more splitting conditionshold.
New York's MOMA is further split a t ' s  be-cause of a heuristic that checks for place names onthe left of a possessive pronoun or a comma.
Victo-ria and Albert Museum in London remains intact.Nominator 's  other heuristics resemble those dis-cussed above in that they check for typographicalpatterns or for the presence of particular name typesto the left or right of certain operators.
Some heuris-tics weigh the relative scope strength in the sub-strings on either side of the operator.
If the scopestrength is similar, the string is split.
We have ob-served that this type of heuristic works quite well.Thus, the string The Natural History Museum andThe Board of Education is split at and because achof its substrings contains a strong-scope NP-head (aswe define it) with modifiers within its scope.
Thesetwo substrings are better balanced than the sub-strings of The Food and Drug Administration wherethe left substring does not contain a strong-scopeNP-head while the right one does (Administration).Because of the principle that noisy data is prefer-able to loss of information, Nominator does not splitnames if relative strength cannot be determined.
Asa result, there occur in Nominator's output certain'names' such as American Television ~ Commu-nications and Houston Industries Inc. or Dallas'sMCorp and First RepublicBank and Houston's FirstCity Bancorp.
of Tezas.6 Reso lu t ion  o f  Ambigu i ty  a tSentence  Beg inn ingsSpecial treatment is required for words in sentence-initial position, which may be capitalized becausethey are part of a proper name or simply becausethey are sentence initial.While the heuristics for splitting names are lin-guistically motivated and rule-governed, the heuris-tics for handling sentence-initial names are based onpatterns of word occurrence in the document.
Whenall the names have been collected and split, namescontaining sentence-initial words are compared toother names on the list.
If the sentence-initial candi-date name also occurs as a non-sentence-initial nameor as a substring of it, the candidate name is as-sumed to be valid and is retained.
Otherwise, it isremoved from the list.
For example, if White occursat sentence-initiai position and also as a substringof another name (e.g., Mr. White) it is kept.
If itis found only in sentence-initial position (e.g., Whitepaint is ...), White is discarded.A more difficult situation arises when a sentence-initial candidate name contains a valid name thatbegins at the second word of the string.
If the pre-ceding word is an adverb, a pronoun, a verb or apreposition, it can safely be discarded.
Thus a sen-tence beginning with Yesterday Columbia yields Co-lumbia as a name.
But cases involving other partsof speech remain unresolved.
If they are sentence-initial, Nominator accepts as names both New Searsand New Coke; it also accepts sentence-initial FiveReagan as a variant of President Reagan, if the twoco-occur in a document.7 Reso lu t ion  o f  Semant ic  Ambigu i tyIn a typical document, a single entity may be re-ferred to by many name variants which differ in theirdegree of potential ambiguity.
As noted above, Parisand Washington are highly ambiguous out of con-text but in well edited text they are often disam-biguated by the occurrence of a single unambiguousvariant in the same document.
Thus, Washington islikely to co-occur with either President Washingtonor Washington, D.C., but not with both.
Indeed, wehave observed that if several unambiguous variantsdo co-occur, as in documents that mention both theowner of a company and the company named afterthe owner, the editors refrain from using a variantthat is ambiguous with respect to both.To disambiguate highly ambiguous variants then,we link them to unambiguous ones occurring withinthe same document.
Nominator cycles through thelist of names, identifying 'anchors', or variant names206that unambiguously refer to certain entity types.When an anchor is identified, the list of name candi-dates is scanned for ambiguous variants that couldrefer to the same entity.
They are linked to the an-chor.Our measure of ambiguity is very pragmatic.
It isbased on the confidence scores yielded by heuristicsthat analyze a name and determine the entity typesit can refer to.
If the heuristic for a certain entitytype (a person, for example) results in a high con-difence score (highly confident hat this is a personname), we determine that the name unambiguouslyrefers to this type.
Otherwise, we choose the highestscore obtained by the various heuristics.A few simple indicators can unambiguously deter-mine the entity type of a name, such as Mr. for aperson or Inc. for an organization.
More commonly,however, several pieces of positive and negative vi-dence are accumulated in order to make this judge-ment.We have defined a set of obligatory and optionalcomponents for each entity type.
For a human name,these components include a professional title (e.g.,Attorney General), a personal title (e.g., Dr.), a firstname, middle name, nickname, last name, and suffix(e.g., Jr.).
The combination of the various compo-nents is inspected.
Some combinations may result ina high negative score - -  highly confident hat thiscannot be a person name.
For example, if the namelacks a personal title and a first name, and its lastname is listed as an organization word (e.g., Depart-ment) in the authority list, it receives a high negativescore.
This is the case with Justice Department orFrank Sinatra Building.
The same combination butwith a last name that is not a listed organizationword results in a low positive score, as for JusticeJohnson or Frank Sinatra.
The presence or absenceof a personal title is also important for determiningconfidence: If present, the result is a high confidencescore (e.g., Mrs. Ruth Lake); No personal title witha known first name results in a low positive confi-dence score (e.g'., Ruth Lake, Beverly Hills); and nopersonal title with an unknown first name results ina zero score (e.g., Panorama Lake).By the end of the analysis process, Justice De-partmen~ has a high negative score for person anda low positive score for organization, resulting in itsclassification as an organization.
Beverly Hills, bycontrast, has low positive scores both for place andfor person.
Names with low or zero scores are firsttested as possible variants of names with high posi-tive scores.
However, if they are incompatible withany, they are assigned a weak entity type.
Thus inthe absence of any other evidence in the document,Beverly Hills is classified as a ?PERSON.
(?PER-SON is preferred over ?PLACE as it tends to be thecorrect choice most of the time.)
This analysis ofcourse can be over-ridden by a name database list-ing Beverly Hills as a place.Further disambiguation may be possible duringaggregation across documents.
As mentioned be-fore, during aggregation, linked groups from differ-ent documents are merged if their canonical formsare identical.
As a rule, their entity types shouldbe identical as well, to prevent a merge of Boston(PLACE) and Boston (ORG).
Weak entity types,however, are allowed to merge with stronger entitytypes.
Thus, Jordan Hills (?PERSON) from onedocument is aggregated with Jordan Hills (PER-SON) from another, where there was sufficient evi-dence, such as Mr. Hills, to make a firmer decision.8 Evaluat ionAn evaluation of an earlier version of Nominator,was performed on 88 Wall Street Journal documents(NIST 1993) that had been set aside for testing.
Wechose the Wall Street Journal corpus because it fol-lows standard stylistic conventions, especially capi-talization, which is essential for Nominator to work.Nominator's performance deteriorates if other con-ventions are not consistently followed.A linguist manually identified 2426 occurrencesof proper names, which reduced to 1354 unique to-kens.
Of these, Nominator correctly identified theboundaries of 91% (1230/1354).
The precision ratewas 92% for the 1409 names Nominator identified(1230/1409).
In terms of semantic disambiguation,Nominator failed to assign an entity type to 21%of the names it identified.
This high percentage isdue to a decision not to assign a type if the confi-dence measure is too low.
The payoff of this choiceis a very high precision rate - -  99 % - -  for the as-signment of semantic type to those names that weredisambiguated.
(See (Ravin and Wacholder 1996)for details.The main reason that names remain untyped isinsufficent evidence in the document.
If IBM, forexample, occurs in a document without Interna-tional Business Machines, Nominator does not typeit; rather, it lets later processes inspect the localcontext for further clues.
These processess formpart of the Talent tool set under development atthe T.:\].
Watson Research Center.
They take astheir input text processed by Nominator and fur-ther disambiguate untyped names appearing in cer-tain contexts, such as an appositive, e.g., presidentof CitiBank Corp.Other untyped names, such as Star BelliedSneetches or George Melloan's Business World, areneither people, places, organizations nor any of theother legal or financial entities we categorize into.Many of these uncategorized names are titles of ar-ticles, books and other works of art that we currentlydo not handle.2079 ConclusionAmbiguity remains one of the main challenges inthe processing of natural anguage text.
Efforts toresolve it have traditionally focussed on the devel-opment of full-coverage parsers, extensive lexicons,and vast repositories of world knowledge.
For somenatural-language applications, the tremendous ef-fort involved in developing these tools is still re-quired, but in other applications, uch as informa-tion extraction, there has been a recent trend to-wards favoring minimal parsing and shallow knowl-edge (Cowie and Lehnert 1996).
In its minimal useof resources, Nominator follows this trend: it relieson no syntactic information and on a small seman-tic lexicon - an authority list which could easily bemodified to include information about new domains.Other advantages of using limited resources are ro-bustness and execution speed, which are importantin processing large amounts of text.In another sense, however, development of a mod-ule like Nominator still requires considerable hu-man effort to discover eliable heuristics, particu-larly when only minimal information is used.
Theseheuristics are somewhat domain dependent: dif-ferent generalizations hold for names of drugs andchemicals than those identified for names of peopleor organizations.
In addition, as the heuristics de-pend on linguistic conventions, they are languagedependent, and need updating when stylistic con-ventions change.
Note, for example, the recent pop-ularity of software names which include exclamationpoints as part of the name.
Because of these dif-ficulties, we believe that for the forseeable future,practical applications to discover new names in textwill continue to require the sort of human effort in-vested in Nominator.Re ferencesAgarwal R. and L. Boggess, 1992.
A simple butuseful approach to conjunct identification I  Pro-ceedings of the 30th Annual Meeting of the ACL,pp.15-21, Newark, Delaware, June.Brill E. and P. Resnick, 1994.
A rule-based ap-proach to prepositional phrase disambiguation,URL: http://xxx.lanl.gov/list/cmp.lg/9410026.Coates-Stephens S., 1993.
The analysis and acquisi-tion of proper names for the understanding of freetext, In Computers and the Humanities, Vol.26,pp.441-456.Cowie J. and W.
Lehnert., 1996.
InformationExtraction In Communications of the ACM ,Vol.39(1), pp.83-92.Cowie J., L. Guthric, Y. Wilks, J. Pustejovsky andS.
Waterman, 1992.
Description of the SolomonSystem as used for MUC-4 In Proceedings ofthe Fourth Message Understanding Conference,pp.223-232.Jensen K. and Binot J-L, 1987.
Disambiguatingprepositional phrase attachments byusing on-linedefinitions, In Computational Linguistics, Vol.
13,3-4, pp.251-260.Hayes P., 1994.
NameFinder: Software that findsnames in text, In Proceedings of RIAO 94,pp.762-774, New York, October.Hindle D. and M.
Rooth., 1993.
Structural am-biguity and lexical relations, In ComputationalLinguistics, Vol.19, i, pp.103-119.Mani I., T.R.
Macmillan, S. Luperfoy, E.P.
Lusher,and S.J.
Laskowski, 1993.
Identifying unknownproper names in newswire text.
In B. Boguraevand J. Pustejovsky, eds., Corpus Processing forLexical Acquisition, pp.41-54, MIT Press, Cam-bridge, Mass.McDonald D.D., 1993.
Internal and external evi-dence in the identification and semantic atego-rization of proper names.
In B. Boguraev andJ.
Pustejovsky, eds, Corpus Processing for Lezi-cal Acquisition, pp.61-76, MIT Press, Cambridge,Mass.NIST 1993.
TIPSTER Information-Retrieval TextResearch Collection, on CD-ROM, published byThe National Institute of Standards and Technol-ogy, Gaithersburg, Maryland.Paik W., E.D.
Liddy, E. Yu, and M. McKenna, 1993.Categorizing and standardizing proper nouns forefficient information retrieval, In B. Boguraev andJ.
Pustejovsky, eds, Corpus Processing for Lezi-cal Acquisition, pp.44-54, MIT Press, Cambridge,Mass.Quirk R., S. Greenbaum, G. Leech and J. Svar-tik, 1972.
A Grammar of Contemporary English,Longman House, Harlow, U.K.Ravin Y. and N. Wacholder, 1996.
ExtractingNames from Natural-Language T xt, IBM Re-search Report 20338.Wacholder N., Y. Ravin and R.J. Byrd, 1994.
Re-trieving information from full text using linguis-tic knowledge, In Proceedings of the FifteenthNational Online Meeting, pp.441-447, New York,May.208
