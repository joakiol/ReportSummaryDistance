Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 49?56,Prague, Czech Republic, June 2007. c?2007 Association for Computational LinguisticsDomain Adaptation with Active Learning for Word Sense DisambiguationYee Seng Chan and Hwee Tou NgDepartment of Computer ScienceNational University of Singapore3 Science Drive 2, Singapore 117543{chanys, nght}@comp.nus.edu.sgAbstractWhen a word sense disambiguation (WSD)system is trained on one domain but ap-plied to a different domain, a drop in ac-curacy is frequently observed.
This high-lights the importance of domain adaptationfor word sense disambiguation.
In this pa-per, we first show that an active learning ap-proach can be successfully used to performdomain adaptation of WSD systems.
Then,by using the predominant sense predicted byexpectation-maximization (EM) and adopt-ing a count-merging technique, we improvethe effectiveness of the original adaptationprocess achieved by the basic active learn-ing approach.1 IntroductionIn natural language, a word often assumes differentmeanings, and the task of determining the correctmeaning, or sense, of a word in different contextsis known as word sense disambiguation (WSD).
Todate, the best performing systems in WSD use acorpus-based, supervised learning approach.
Withthis approach, one would need to collect a text cor-pus, in which each ambiguous word occurrence isfirst tagged with its correct sense to serve as trainingdata.The reliance of supervised WSD systems on an-notated corpus raises the important issue of do-main dependence.
To investigate this, Escuderoet al (2000) and Martinez and Agirre (2000) con-ducted experiments using the DSO corpus, whichcontains sentences from two different corpora,namely Brown Corpus (BC) and Wall Street Jour-nal (WSJ).
They found that training a WSD systemon one part (BC or WSJ) of the DSO corpus, andapplying it to the other, can result in an accuracydrop of more than 10%, highlighting the need to per-form domain adaptation of WSD systems to new do-mains.
Escudero et al (2000) pointed out that oneof the reasons for the drop in accuracy is the dif-ference in sense priors (i.e., the proportions of thedifferent senses of a word) between BC and WSJ.When the authors assumed they knew the sense pri-ors of each word in BC and WSJ, and adjusted thesetwo datasets such that the proportions of the differ-ent senses of each word were the same between BCand WSJ, accuracy improved by 9%.In this paper, we explore domain adaptation ofWSD systems, by adding training examples from thenew domain as additional training data to a WSDsystem.
To reduce the effort required to adapt aWSD system to a new domain, we employ an ac-tive learning strategy (Lewis and Gale, 1994) to se-lect examples to annotate from the new domain ofinterest.
To our knowledge, our work is the first touse active learning for domain adaptation for WSD.A similar work is the recent research by Chen et al(2006), where active learning was used successfullyto reduce the annotation effort for WSD of 5 Englishverbs using coarse-grained evaluation.
In that work,the authors only used active learning to reduce theannotation effort and did not deal with the porting ofa WSD system to a new domain.Domain adaptation is necessary when the train-ing and target domains are different.
In this paper,49we perform domain adaptation for WSD of a set ofnouns using fine-grained evaluation.
The contribu-tion of our work is not only in showing that activelearning can be successfully employed to reduce theannotation effort required for domain adaptation ina fine-grained WSD setting.
More importantly, ourmain focus and contribution is in showing how wecan improve the effectiveness of a basic active learn-ing approach when it is used for domain adaptation.In particular, we explore the issue of different sensepriors across different domains.
Using the sensepriors estimated by expectation-maximization (EM),the predominant sense in the new domain is pre-dicted.
Using this predicted predominant sense andadopting a count-merging technique, we improve theeffectiveness of the adaptation process.In the next section, we discuss the choice of cor-pus and nouns used in our experiments.
We thenintroduce active learning for domain adaptation, fol-lowed by count-merging.
Next, we describe an EM-based algorithm to estimate the sense priors in thenew domain.
Performance of domain adaptation us-ing active learning and count-merging is then pre-sented.
Next, we show that by using the predom-inant sense of the target domain as predicted bythe EM-based algorithm, we improve the effective-ness of the adaptation process.
Our empirical resultsshow that for the set of nouns which have differentpredominant senses between the training and targetdomains, we are able to reduce the annotation effortby 71%.2 Experimental SettingIn this section, we discuss the motivations for choos-ing the particular corpus and the set of nouns to con-duct our domain adaptation experiments.2.1 Choice of CorpusThe DSO corpus (Ng and Lee, 1996) contains192,800 annotated examples for 121 nouns and 70verbs, drawn from BC and WSJ.
While the BC isbuilt as a balanced corpus, containing texts in var-ious categories such as religion, politics, humani-ties, fiction, etc, the WSJ corpus consists primarilyof business and financial news.
Exploiting the dif-ference in coverage between these two corpora, Es-cudero et al (2000) separated the DSO corpus intoits BC and WSJ parts to investigate the domain de-pendence of several WSD algorithms.
Following thesetup of (Escudero et al, 2000), we similarly madeuse of the DSO corpus to perform our experimentson domain adaptation.Among the few currently available manuallysense-annotated corpora for WSD, the SEMCOR(SC) corpus (Miller et al, 1994) is the most widelyused.
SEMCOR is a subset of BC which is sense-annotated.
Since BC is a balanced corpus, and sinceperforming adaptation from a general corpus to amore specific corpus is a natural scenario, we focuson adapting a WSD system trained on BC to WSJ inthis paper.
Henceforth, out-of-domain data will re-fer to BC examples, and in-domain data will refer toWSJ examples.2.2 Choice of NounsThe WordNet Domains resource (Magnini andCavaglia, 2000) assigns domain labels to synsets inWordNet.
Since the focus of the WSJ corpus is onbusiness and financial news, we can make use ofWordNet Domains to select the set of nouns havingat least one synset labeled with a business or financerelated domain label.
This is similar to the approachtaken in (Koeling et al, 2005) where they focus ondetermining the predominant sense of words in cor-pora drawn from finance versus sports domains.1Hence, we select the subset of DSO nouns that haveat least one synset labeled with any of these domainlabels: commerce, enterprise, money, finance, bank-ing, and economy.
This gives a set of 21 nouns:book, business, center, community, condition, field,figure, house, interest, land, line, money, need, num-ber, order, part, power, society, term, use, value.2For each noun, all the BC examples are used asout-of-domain training data.
One-third of the WSJexamples for each noun are set aside as evaluation1Note however that the coverage of the WordNet Domainsresource is not comprehensive, as about 31% of the synsets aresimply labeled with ?factotum?, indicating that the synset doesnot belong to a specific domain.225 nouns have at least one synset labeled with the listeddomain labels.
In our experiments, 4 out of these 25 nouns havean accuracy of more than 90% before adaptation (i.e., trainingon just the BC examples) and accuracy improvement is less than1% after all the available WSJ adaptation examples are addedas additional training data.
To obtain a clearer picture of theadaptation process, we discard these 4 nouns, leaving a set of21 nouns.50Dataset No.
of MFS No.
of No.
ofsenses acc.
training adaptationBC WSJ (%) examples examples21 nouns 6.7 6.8 61.1 310 4069 nouns 7.9 8.6 65.8 276 416Table 1: The average number of senses in BC andWSJ, average MFS accuracy, average number of BCtraining, and WSJ adaptation examples per noun.data, and the rest of the WSJ examples are desig-nated as in-domain adaptation data.
The row 21nouns in Table 1 shows some information aboutthese 21 nouns.
For instance, these nouns have anaverage of 6.7 senses in BC and 6.8 senses in WSJ.This is slightly higher than the 5.8 senses per verb in(Chen et al, 2006), where the experiments were con-ducted using coarse-grained evaluation.
Assumingwe have access to an ?oracle?
which determines thepredominant sense, or most frequent sense (MFS),of each noun in our WSJ test data perfectly, andwe assign this most frequent sense to each noun inthe test data, we will have achieved an accuracy of61.1% as shown in the column MFS accuracy of Ta-ble 1.
Finally, we note that we have an average of310 BC training examples and 406 WSJ adaptationexamples per noun.3 Active LearningFor our experiments, we use naive Bayes as thelearning algorithm.
The knowledge sources we useinclude parts-of-speech, local collocations, and sur-rounding words.
These knowledge sources were ef-fectively used to build a state-of-the-art WSD pro-gram in one of our prior work (Lee and Ng, 2002).In performing WSD with a naive Bayes classifier,the sense s assigned to an example with featuresf1, .
.
.
, fn is chosen so as to maximize:p(s)n?j=1p(fj |s)In our domain adaptation study, we start with aWSD system built using training examples drawnfrom BC.
We then investigate the utility of addingadditional in-domain training data from WSJ.
In thebaseline approach, the additional WSJ examples arerandomly selected.
With active learning (Lewis andGale, 1994), we use uncertainty sampling as shownDT ?
the set of BC training examplesDA ?
the set of untagged WSJ adaptation examples??
WSD system trained on DTrepeatpmin ?
?for each d ?
DA dobs?
word sense prediction for d using ?p ?
confidence of prediction bsif p < pmin thenpmin ?
p, dmin ?
dendendDA ?
DA ?
dminprovide correct sense s for dmin and add dmin to DT??
WSD system trained on new DTendFigure 1: Active learningin Figure 1.
In each iteration, we train a WSD sys-tem on the available training data and apply it on theWSJ adaptation examples.
Among these WSJ ex-amples, the example predicted with the lowest con-fidence is selected and removed from the adaptationdata.
The correct label is then supplied for this ex-ample and it is added to the training data.Note that in the experiments reported in this pa-per, all the adaptation examples are already pre-annotated before the experiments start, since allthe WSJ adaptation examples come from the DSOcorpus which have already been sense-annotated.Hence, the annotation of an example needed duringeach adaptation iteration is simulated by performinga lookup without any manual annotation.4 Count-mergingWe also employ a technique known as count-merging in our domain adaptation study.
Count-merging assigns different weights to different ex-amples to better reflect their relative importance.Roark and Bacchiani (2003) showed that weightedcount-merging is a special case of maximum a pos-teriori (MAP) estimation, and successfully used itfor probabilistic context-free grammar domain adap-tation (Roark and Bacchiani, 2003) and languagemodel adaptation (Bacchiani and Roark, 2003).Count-merging can be regarded as scaling ofcounts obtained from different data sets.
We letc?
denote the counts from out-of-domain trainingdata, c?
denote the counts from in-domain adapta-tion data, and p?
denote the probability estimate by51count-merging.
We can scale the out-of-domain andin-domain counts with different factors, or just use asingle weight parameter ?:p?
(fj |si) = c?
(fj , si) + ?c?
(fj , si)c?
(si) + ?c?
(si) (1)Similarly,p?
(si) = c?
(si) + ?c?
(si)c?+ ?c?
(2)Obtaining an optimum value for ?
is not the focusof this work.
Instead, we are interested to see if as-signing a higher weight to the in-domain WSJ adap-tation examples, as compared to the out-of-domainBC examples, will improve the adaptation process.Hence, we just use a ?
value of 3 in our experimentsinvolving count-merging.5 Estimating Sense PriorsIn this section, we describe an EM-based algorithmthat was introduced by Saerens et al (2002), whichcan be used to estimate the sense priors, or a prioriprobabilities of the different senses in a new dataset.We have recently shown that this algorithm is effec-tive in estimating the sense priors of a set of nouns(Chan and Ng, 2005).Most of this section is based on (Saerens et al,2002).
Assume we have a set of labeled data DLwith n classes and a set of N independent instances(x1, .
.
.
,xN ) from a new data set.
The likelihood ofthese N instances can be defined as:L(x1, .
.
.
,xN ) =N?k=1p(xk)=N?k=1[ n?i=1p(xk, ?i)]=N?k=1[ n?i=1p(xk|?i)p(?i)](3)Assuming the within-class densities p(xk|?i), i.e.,the probabilities of observing xk given the class ?i,do not change from the training set DL to the newdata set, we can define: p(xk|?i) = pL(xk|?i).
Todetermine the a priori probability estimates p?
(?i) ofthe new data set that will maximize the likelihood of(3) with respect to p(?i), we can apply the iterativeprocedure of the EM algorithm.
In effect, throughmaximizing the likelihood of (3), we obtain the apriori probability estimates as a by-product.Let us now define some notations.
When we ap-ply a classifier trained on DL on an instance xkdrawn from the new data set DU , we get p?L(?i|xk),which we define as the probability of instance xkbeing classified as class ?i by the classifier trainedon DL.
Further, let us define p?L(?i) as the a pri-ori probability of class ?i in DL.
This can be esti-mated by the class frequency of ?i in DL.
We alsodefine p?
(s)(?i) and p?
(s)(?i|xk) as estimates of thenew a priori and a posteriori probabilities at step sof the iterative EM procedure.
Assuming we initial-ize p?
(0)(?i) = p?L(?i), then for each instance xk inDU and each class ?i, the EM algorithm providesthe following iterative steps:p?
(s)(?i|xk) =p?L(?i|xk) bp(s)(?i)bpL(?i)?nj=1 p?L(?j |xk) bp(s)(?j)bpL(?j)(4)p?
(s+1)(?i) = 1NN?k=1p?
(s)(?i|xk) (5)where Equation (4) represents the expectation E-step, Equation (5) represents the maximization M-step, and N represents the number of instances inDU .
Note that the probabilities p?L(?i|xk) andp?L(?i) in Equation (4) will stay the same through-out the iterations for each particular instance xkand class ?i.
The new a posteriori probabilitiesp?
(s)(?i|xk) at step s in Equation (4) are simply thea posteriori probabilities in the conditions of the la-beled data, p?L(?i|xk), weighted by the ratio of thenew priors p?
(s)(?i) to the old priors p?L(?i).
The de-nominator in Equation (4) is simply a normalizingfactor.The a posteriori p?
(s)(?i|xk) and a priori proba-bilities p?
(s)(?i) are re-estimated sequentially dur-ing each iteration s for each new instance xk andeach class ?i, until the convergence of the estimatedprobabilities p?
(s)(?i), which will be our estimatedsense priors.
This iterative procedure will increasethe likelihood of (3) at each step.6 Experimental ResultsFor each adaptation experiment, we start off with aclassifier built from an initial training set consisting52525456586062646668707274760  5  10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100WSDAccuracy (%)Percentage of adaptation examples added (%)a-cara-truePriorFigure 2: Adaptation process for all 21 nouns.of the BC training examples.
At each adaptation iter-ation, WSJ adaptation examples are selected one ata time and added to the training set.
The adaptationprocess continues until all the adaptation examplesare added.
Classification accuracies averaged over3 random trials on the WSJ test examples at eachiteration are calculated.
Since the number of WSJadaptation examples differs for each of the 21 nouns,the learning curves we will show in the various fig-ures are plotted in terms of different percentage ofadaptation examples added, varying from 0 to 100percent in steps of 1 percent.
To obtain these curves,we first calculate for each noun, the WSD accuracywhen different percentages of adaptation examplesare added.
Then, for each percentage, we calculatethe macro-average WSD accuracy over all the nounsto obtain a single learning curve representing all thenouns.6.1 Utility of Active Learning andCount-mergingIn Figure 2, the curve r represents the adaptationprocess of the baseline approach, where additionalWSJ examples are randomly selected during eachadaptation iteration.
The adaptation process usingactive learning is represented by the curve a, whileapplying count-merging with active learning is rep-resented by the curve a-c.
Note that random selec-tion r achieves its highest WSD accuracy after allthe adaptation examples are added.
To reach thesame accuracy, the a approach requires the additionof only 57% of adaptation examples.
The a-c ap-proach is even more effective and requires only 42%of adaptation examples.
This demonstrates the ef-fectiveness of count-merging in further reducing theannotation effort, when compared to using only ac-tive learning.
To reach the MFS accuracy of 61.1%as shown earlier in Table 1, a-c requires just 4% ofthe adaptation examples.To determine the utility of the out-of-domain BCexamples, we have also conducted three active learn-ing runs using only WSJ adaptation examples.
Us-ing 10%, 20%, and 30% of WSJ adaptation exam-ples to build a classifier, the accuracy of these runsis lower than the active learning a curve and pairedt-tests show that the difference is statistically signif-icant at the level of significance 0.01.6.2 Using Sense Priors InformationAs mentioned in section 1, research in (Escudero etal., 2000) noted an improvement in accuracy whenthey adjusted the BC and WSJ datasets such thatthe proportions of the different senses of each wordwere the same between BC and WSJ.
We can simi-larly choose BC examples such that the sense priorsin the BC training data adhere to the sense priors inthe WSJ evaluation data.
To gauge the effectivenessof this approach, we first assume that we know thetrue sense priors of each noun in the WSJ evalua-tion data.
We then gather BC training examples fora noun to adhere as much as possible to the sensepriors in WSJ.
Assume sense si is the predominantsense in the WSJ evaluation data, si has a sense priorof pi in the WSJ data and has ni BC training exam-ples.
Taking ni examples to represent a sense priorof pi, we proportionally determine the number of BCexamples to gather for other senses s according totheir respective sense priors in WSJ.
If there are in-sufficient training examples in BC for some sense s,whatever available examples of s are used.This approach gives an average of 195 BC train-ing examples for the 21 nouns.
With this new setof training examples, we perform adaptation usingactive learning and obtain the a-truePrior curve inFigure 2.
The a-truePrior curve shows that by en-suring that the sense priors in the BC training dataadhere as much as possible to the sense priors in theWSJ data, we start off with a higher WSD accuracy.However, the performance is no different from the a53curve after 35% of adaptation examples are added.A possible reason might be that by strictly adheringto the sense priors in the WSJ data, we have removedtoo many BC training examples, from an average of310 examples per noun as shown in Table 1, to anaverage of 195 examples.6.3 Using Predominant Sense InformationResearch by McCarthy et al (2004) and Koeling etal.
(2005) pointed out that a change of predominantsense is often indicative of a change in domain.
Forexample, the predominant sense of the noun interestin the BC part of the DSO corpus has the meaning?a sense of concern with and curiosity about some-one or something?.
In the WSJ part of the DSO cor-pus, the noun interest has a different predominantsense with the meaning ?a fixed charge for borrow-ing money?, which is reflective of the business andfinance focus of the WSJ corpus.Instead of restricting the BC training data to ad-here strictly to the sense priors in WSJ, another alter-native is just to ensure that the predominant sense inBC is the same as that of WSJ.
Out of the 21 nouns,12 nouns have the same predominant sense in bothBC and WSJ.
The remaining 9 nouns that have dif-ferent predominant senses in the BC and WSJ dataare: center, field, figure, interest, line, need, order,term, value.
The row 9 nouns in Table 1 gives someinformation for this set of 9 nouns.
To gauge theutility of this approach, we conduct experiments onthese nouns by first assuming that we know the truepredominant sense in the WSJ data.
Assume that theWSJ predominant sense of a noun is si and si has niexamples in the BC data.
We then gather BC exam-ples for a noun to adhere to this WSJ predominantsense, by gathering only up to ni BC examples foreach sense of this noun.
This approach gives an av-erage of 190 BC examples for the 9 nouns.
This ishigher than an average of 83 BC examples for these9 nouns if BC examples are selected to follow thesense priors of WSJ evaluation data as described inthe last subsection 6.2.For these 9 nouns, the average KL-divergence be-tween the sense priors of the original BC data andWSJ evaluation data is 0.81.
This drops to 0.51 af-ter ensuring that the predominant sense in BC is thesame as that of WSJ, confirming that the sense priorsin the newly gathered BC data more closely follow44464850525456586062646668707274767880820  5  10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100WSDAccuracy (%)Percentage of adaptation examples added (%)a-truePriora-truePredaFigure 3: Using true predominant sense for the 9nouns.the sense priors in WSJ.
Using this new set of train-ing examples, we perform domain adaptation usingactive learning to obtain the curve a-truePred in Fig-ure 3.
For comparison, we also plot the curves aand a-truePrior for this set of 9 nouns in Figure 3.Results in Figure 3 show that a-truePred starts offat a higher accuracy and performs consistently bet-ter than the a curve.
In contrast, though a-truePriorstarts at a high accuracy, its performance is lowerthan a-truePred and a after 50% of adaptation ex-amples are added.
The approach represented by a-truePred is a compromise between ensuring that thesense priors in the training data follow as closelyas possible the sense priors in the evaluation data,while retaining enough training examples.
These re-sults highlight the importance of striking a balancebetween these two goals.In (McCarthy et al, 2004), a method was pre-sented to determine the predominant sense of a wordin a corpus.
However, in (Chan and Ng, 2005),we showed that in a supervised setting where onehas access to some annotated training data, the EM-based method in section 5 estimates the sense priorsmore effectively than the method described in (Mc-Carthy et al, 2004).
Hence, we use the EM-basedalgorithm to estimate the sense priors in the WSJevaluation data for each of the 21 nouns.
The sensewith the highest estimated sense prior is taken as thepredominant sense of the noun.For the set of 12 nouns where the predominant5443 4445 4647 4849 5051 5253 5455 5657 5859 6061 6263 6465 6667 6869 7071 7273 7475 7677 7879 8081 820  5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95  100WSDAccuracy (%)Percentage of adaptation examples added (%)a-c-estPreda-truePreda-estPredarFigure 4: Using estimated predominant sense for the9 nouns.Accuracy % adaptation examples neededr a a-estPred a-c-estPred50%: 61.1 8 7 (0.88) 5 (0.63) 4 (0.50)60%: 64.5 10 9 (0.90) 7 (0.70) 5 (0.50)70%: 68.0 15 12 (0.80) 9 (0.60) 6 (0.40)80%: 71.5 23 16 (0.70) 12 (0.52) 9 (0.39)90%: 74.9 46 24 (0.52) 21 (0.46) 15 (0.33)100%: 78.4 100 51 (0.51) 38 (0.38) 29 (0.29)Table 2: Annotation savings and percentage of adap-tation examples needed to reach various accuracies.sense remains unchanged between BC and WSJ, theEM-based algorithm is able to predict that the pre-dominant sense remains unchanged for all 12 nouns.Hence, we will focus on the 9 nouns which havedifferent predominant senses between BC and WSJfor our remaining adaptation experiments.
For these9 nouns, the EM-based algorithm correctly predictsthe WSJ predominant sense for 6 nouns.
Hence, thealgorithm is able to predict the correct predominantsense for 18 out of 21 nouns overall, representing anaccuracy of 86%.Figure 4 plots the curve a-estPred, which is simi-lar to a-truePred, except that the predominant senseis now estimated by the EM-based algorithm.
Em-ploying count-merging with a-estPred produces thecurve a-c-estPred.
For comparison, the curves r, a,and a-truePred are also plotted.
The results showthat a-estPred performs consistently better than a,and a-c-estPred in turn performs better than a-estPred.
Hence, employing the predicted predom-inant sense and count-merging, we further improvethe effectiveness of the active learning-based adap-tation process.With reference to Figure 4, the WSD accuraciesof the r and a curves before and after adaptationare 43.7% and 78.4% respectively.
Starting fromthe mid-point 61.1% accuracy, which represents a50% accuracy increase from 43.7%, we show inTable 2 the percentage of adaptation examples re-quired by the various approaches to reach certainlevels of WSD accuracies.
For instance, to reachthe final accuracy of 78.4%, r, a, a-estPred, and a-c-estPred require the addition of 100%, 51%, 38%,and 29% adaptation examples respectively.
Thenumbers in brackets give the ratio of adaptation ex-amples needed by a, a-estPred, and a-c-estPred ver-sus random selection r. For instance, to reach aWSD accuracy of 78.4%, a-c-estPred needs only29% adaptation examples, representing a ratio of0.29 and an annotation saving of 71%.
Note that thisrepresents a more effective adaptation process thanthe basic active learning a approach, which requires51% adaptation examples.
Hence, besides showingthat active learning can be used to reduce the annota-tion effort required for domain adaptation, we havefurther improved the effectiveness of the adaptationprocess by using the predicted predominant senseof the new domain and adopting the count-mergingtechnique.7 Related WorkIn applying active learning for domain adapta-tion, Zhang et al (2003) presented work on sen-tence boundary detection using generalized Win-now, while Tur et al (2004) performed languagemodel adaptation of automatic speech recognitionsystems.
In both papers, out-of-domain and in-domain data were simply mixed together withoutMAP estimation such as count-merging.
For WSD,Fujii et al (1998) used selective sampling for aJapanese language WSD system, Chen et al (2006)used active learning for 5 verbs using coarse-grainedevaluation, and H. T. Dang (2004) employed activelearning for another set of 5 verbs.
However, theirwork only investigated the use of active learning toreduce the annotation effort necessary for WSD, but55did not deal with the porting of a WSD system toa different domain.
Escudero et al (2000) used theDSO corpus to highlight the importance of the issueof domain dependence of WSD systems, but did notpropose methods such as active learning or count-merging to address the specific problem of how toperform domain adaptation for WSD.8 ConclusionDomain adaptation is important to ensure the gen-eral applicability of WSD systems across differentdomains.
In this paper, we have shown that activelearning is effective in reducing the annotation ef-fort required in porting a WSD system to a new do-main.
Also, we have successfully used an EM-basedalgorithm to detect a change in predominant sensebetween the training and new domain.
With thisinformation on the predominant sense of the newdomain and incorporating count-merging, we haveshown that we are able to improve the effectivenessof the original adaptation process achieved by thebasic active learning approach.AcknowledgementYee Seng Chan is supported by a Singapore Millen-nium Foundation Scholarship (ref no.
SMF-2004-1076).ReferencesM.
Bacchiani and B. Roark.
2003.
Unsupervised lan-guage model adaptation.
In Proc.
of IEEE ICASSP03.Y.
S. Chan and H. T. Ng.
2005.
Word sense disambigua-tion with distribution estimation.
In Proc.
of IJCAI05.J.
Chen, A. Schein, L. Ungar, and M. Palmer.
2006.An empirical study of the behavior of active learn-ing for word sense disambiguation.
In Proc.
ofHLT/NAACL06.H.
T. Dang.
2004.
Investigations into the Role of Lex-ical Semantics in Word Sense Disambiguation.
PhDdissertation, University of Pennsylvania.G.
Escudero, L. Marquez, and G. Rigau.
2000.
Anempirical study of the domain dependence of super-vised word sense disambiguation systems.
In Proc.
ofEMNLP/VLC00.A.
Fujii, K. Inui, T. Tokunaga, and H. Tanaka.
1998.Selective sampling for example-based word sense dis-ambiguation.
Computational Linguistics, 24(4).R.
Koeling, D. McCarthy, and J. Carroll.
2005.
Domain-specific sense distributions and predominant sense ac-quisition.
In Proc.
of Joint HLT-EMNLP05.Y.
K. Lee and H. T. Ng.
2002.
An empirical evaluation ofknowledge sources and learning algorithms for wordsense disambiguation.
In Proc.
of EMNLP02.D.
D. Lewis and W. A. Gale.
1994.
A sequential algo-rithm for training text classifiers.
In Proc.
of SIGIR94.B.
Magnini and G. Cavaglia.
2000.
Integrating subjectfield codes into WordNet.
In Proc.
of LREC-2000.D.
Martinez and E. Agirre.
2000.
One sense percollocation and genre/topic variations.
In Proc.
ofEMNLP/VLC00.D.
McCarthy, R. Koeling, J. Weeds, and J. Carroll.
2004.Finding predominant word senses in untagged text.
InProc.
of ACL04.G.
A. Miller, M. Chodorow, S. Landes, C. Leacock, andR.
G. Thomas.
1994.
Using a semantic concordancefor sense identification.
In Proc.
of HLT94 Workshopon Human Language Technology.H.
T. Ng and H. B. Lee.
1996.
Integrating multipleknowledge sources to disambiguate word sense: Anexemplar-based approach.
In Proc.
of ACL96.B.
Roark and M. Bacchiani.
2003.
Supervised and unsu-pervised PCFG adaptation to novel domains.
In Proc.of HLT-NAACL03.M.
Saerens, P. Latinne, and C. Decaestecker.
2002.
Ad-justing the outputs of a classifier to new a priori prob-abilities: A simple procedure.
Neural Computation,14(1).D.
H. Tur, G. Tur, M. Rahim, and G. Riccardi.
2004.Unsupervised and active learning in automatic speechrecognition for call classification.
In Proc.
of IEEEICASSP04.T.
Zhang, F. Damerau, and D. Johnson.
2003.
Updat-ing an NLP system to fit new domains: an empiricalstudy on the sentence segmentation problem.
In Proc.of CONLL03.56
