A surface-based approach to identifyingdiscourse markers and elementary textual unitsin unrestricted textsDaniel MarcuInformation Sciences InstituteUniversity of  Southern California4676 Admiralty Way, Suite 1001Marina del Rey, CA 90292---6695marcu @ isi.eduAbstractI present a surface-based algorithm that employsknowledge of cue phrase usages in order to deter-mine automatically clause boundaries and discoursemarkers in unrestricted natural anguage texts.
Theknowledge was derived from a comprehensive cor-pus analysis.1 MotivationThe automatic identification of discourse segmentsand discourse markers in unrestricted texts is cru-cial for solving many outstanding problems in nat-ural language processing, which range from syn-tactic and semantic analysis, to anaphora resolutionand text summarization.
Most of the algorithmicresearch in discourse segmentation focused on seg-ments of coarse granularity (Grosz and Hirschberg,1992; Hirschberg and Litman, 1993; Passonneauand Litman, 1997; Hearst, 1997; Yaari, 1997).These segments were defined intentionally in termsof Grosz and Sidner's theory (1986) or in terms ofan intuitive notion of "topic".However, in case of applications such as anaphoraresolution, discourse parsing, and text summariza-tion, even sentences might prove to be too largediscourse segments.
For example, if we are to de-five the discourse structure of texts using an RST-like representation (Mann and Thompson, 1988), wewill need to determine the elementary textual unitsthat contribute rhetorically to the understanding ofthose texts; usually, these units are clause-like units.Also, if we want to select he most important partsof a text, sentences might prove again to be too largesegments (Marcu, 1997a; Teufel and Moens, 1998):in some cases, only one of the clauses that make upa sentence should be selected for summarization.In this paper, I present a surface-based algorithmthat uses cue phrases (connectives) in order to de-terrnine not only the elementary textual units of textbut also the phrases that have a discourse function.The algorithm is empirically grounded in an exten-sive corpus analysis of cue phrases and is consis-tent with the psycholinguistic position advocated byCaron (1997, p. 70).
Caron argues that "'rather thanconveying information about states of things, con-nectives can be conceived as procedural instructionsfor constructing a semantic representation".
Amongthe three procedural functions of segmentation, in-tegration, and inference that are used by Noordmanand Vonk (1997) in order to study the role of connec-tives, I will concentrate here primarily on the first.l2 A corpus analysis of  cue phrasesI used previous work on coherence and cohesion tocreate an initial set of more than 450 potential dis-course markers (cue phrases).
For each cue phrase,I then used an automatic procedure that extractedfrom the Brown corpus a random set of text frag-ments that each contained that cue.
On average, Iselected approximately 17 text fragments per cuephrase, having few texts for the cue phrases thatdo not occur very often in the corpus and up to 60for cue phrases, such as and, that I considered tobe highly ambiguous.
Overall, I randomly selectedmore than 7600 texts.
Marcu (1997b) lists all cuephrases that were used to extract ext fragments fromthe Brown corpus, the number of occurrences ofeach cue phrase in the corpus, and the number of textfragments that were randomly extracted for each cuephrase.All the text fragments associated with a poten-tial discourse marker were paired with a set of slotsin which I described, among other features, thefollowing: 1.
The orthographic environment thatcharacterized the usage of the potential discoursemarker.
This included occurrences of periods, com-mas, colons, semicolons, etc.
2.
The type of us-age: Sentential, Discourse, or Pragmatic.
3.
TheI Marcu (1997b)studies the other two functions as well.position of the marker in the textual unit to whichit belonged: Beginning, Medial, or End.
4.
Theright boundary of the textual unit associated with themarker.
5.
A name of an "action" that can be usedby a shallow analyzer in order to determine the el-ementary units of a text.
The shallow analyzer as-sumes that text is processed in a left-to-fight fashionand that a set of flags monitors the segmentation pro-cess.
Whenever a cue phrase is detected, the shallowanalyzer executes an action from a predeterminedset, whose effect is one of the following: create anelementary textual unit boundary in the input textstream; or set a flag.
Later, if certain conditions aresatisfied, the flag setting may lead to the creation ofa textual unit boundary.
Since a discussion of the ac-tions is meaningless in isolation, I will provide it inconjunction with the clause-like unit boundary andmarker-identification algorithm.The algorithm described in this paper elies on theresults derived from the analysis of 2200 of the 7600text fragments and on the intuitions developed ur-ing the analysis.3 The clause-like unit boundary andmarker-identif ication algorithm3.1 Determining the potential discoursemarkersThe corpus analysis discussed above provides infor-mation about the orthographic environment of cuephrases and the function that they have in texts.A cue phrase was assigned a sentential role, whenit had no function in structuring the discourse; adiscourse role, when it signalled a discourse rela-tion between two textual units; or a pragmatic role,when it signalled a relationship between a linguis-tic or nonlinguistic onstruct hat pertained to theunit in which the cue phrase occurred and the be-liefs, plans, intentions, and/or communicative goalsof the speaker, hearer, or some character depicted inthe text.
In this case, the beliefs, plans, etc., did nothave to be explicitly stated in discourse; rather, itwas the role of the cue phrase to help the reader inferthem.
2Different orthographic environments often corre-late with different discourse functions.
For exam-ple, if the cue phrase Besides occurs at the begin-ning of a sentence and is not followed by a comma,2This definition of pragmatic connective was first proposedby Fraser (1996).
it should not be confused with the defini-tion proposed by van Dijk (1979), who calls a connective"prag-matic" if it relates two speech acts and not two semantic units.2as in text (1), it usually signals a rhetorical relationthat holds between the clause-like unit that containsit and the clause that comes after.
However, if thesame cue phrase occurs at the beginning of a sen-tence and is immediately followed by a comma, asin text (2), it usually signals a rhetorical relation thatholds between the sentence to which Besides be-longs and a textual units that precedes it.
(1) \[Besides the lack of an adequate thical dimen-sion to the Governor's case,\] \[one can ask seriouslywhether our lead over the Russians in quality andquantity of nuclear weapons is so slight as to makethe tests absolutely necessary.\](2) \[For pride's sake, I will not say that the coy andleering vade mecum of those verses insinuated it-self into my soul.\] \[Besides, that particular messagedoes no more than weakly echo the roar in all freshblood.\]I have taken each of the cue phrases in the corpusand evaluated its potential contribution i  determin-ing the elementary textual units and discourse func-tion for each orthographic environment that charac-terized its usage.I used the cue phrases and the orthographic en-vironments that characterized the cue phrases thatplayed a discourse role in most of the text fragmentsin the corpus in order to manually develop a set ofregular expressions that can be used to recognizepotential discourse markers in naturally occurringtexts.
If a cue phrase had different discourse func-tions in different orthographic environments, aswasthe case with Besides, I created one regular expres-sion for each function.
I ignored the cue phrasesthat played a sentential role in a majority of the textfragments and the cue phrases for which I was notable to infer straightforward rules that would allow ashallow algorithm to discriminate between their dis-course and sentential usages.
Because orthographicmarkers, such as commas, periods, dashes, para-graph breaks, etc., play an important role in thesurface-based approach to discourse processing thatI present here, I included them in the list of potentialdiscourse markers as well.3.2 From the corpus analysis to the elementarytextual units of a textDuring the corpus analysis, I generated a set ofeleven actions that constitutes the foundation of analgorithm to determine automatically the elementaryunits of a text.
The algorithm processes a text givenas input in a left-to-right fashion and "executes" theactions that are associated with each potential dis-course marker and each punctuation mark that oc-curs in the text.
Because the algorithm does not useany traditional parsing or tagging techniques, I callit a "shallow analyzer".The names and the intended semantics of the ac-tions used by the shallow analyzer are:?
Action NOTHING instructs the shallow ana-lyzer to treat the cue phrase under considera-tion as a simple word.
That is, no textual unitboundary is normally set when a cue phraseassociated with such an action is processed.For example, the action associated with the cuephrase accordingly is NOTHING.?
Action NORMAL instructs the analyzer to in-sert a textual boundary immediately before theoccurrence of the marker.
Textual boundariescorrespond to elementary unit breaks.?
Action COMMA instructs the analyzer to inserta textual boundary immediately after the occur-rence of the first comma in the input stream.
Ifthe first comma is followed by an and or an or,the textual boundary is set after the occurrenceof the next comma.
If no comma is found be-fore the end of the sentence, a textual boundaryis created at the end of the sentence.?
Action NORMAL_THEN_COMMA instructs theanalyzer to insert a textual boundary imme-diately before the occurrence of the markerand another textual boundary immediately afterthe occurrence of the first comma in the inputstream.
As in the case of the action COMMA, ifthe first comma is followed by an and or an or,the textual boundary is set after the occurrenceof the next comma.
If no comma is found be-fore the end of the sentence, a textual boundaryis created at the end of the sentence.?
Action END instructs the analyzer to inserta textual boundary immediately after the cuephrase.?
Action MATCH_PAREN instructs the analyzer toinsert extual boundaries both before the occur-rence of the open parenthesis that is normallycharacterized by such an action, and after theclosed parenthesis that follows it.?
Action COMMA_PAREN instructs the analyzerto insert extual boundaries both before the cuephrase and after the occurrence of the nextcomma in the input stream.?
Action MATCH_DASH instructs the analyzer toinsert a textual boundary before the occurrenceof the cue phrase.
The cue phrase is usually adash.
The action also instructs the analyzer toinsert a textual boundary after the next dash inthe text.
If such a dash does not exist, the tex-tual boundary is inserted at the end of the sen-tence.The preceding three actions, MATCH_PAREN,COMMA_PAREN, and MATCH_DASH, are usuallyused for determining the boundaries of parenthet-ical units.
These units, such as those shown initalics in (3) and (4) below, are related only to thelarger units that they belong to or to the units thatimmediately precede them.
(3) \[With its distant orbit {-- 50 percent farther fromthe sun than the Earth --} and slim atmosphericblanket.l \[Mars experiences frigid weather condi-tions.\](4) \[Yet, even on the summer pole, {where the sun re-mains in the sky all day long, } temperatures neverwarm enough to melt frozen water.\]Because the deletion of parenthetical units does notaffect he readability of a text, in the algorithm that Ipresent here I do not assign them an elementary unitstatus.
Instead, I will only determine the boundariesof parenthetical units and record, for each elemen-tary unit, the set of parenthetical units that belong toit.?
Actions SET_AND (SET_OR) instructs the an-alyzer to store the information that the inputstream contains the lexeme and (or).?
Action DUAL instructs the analyzer to insert atextual boundary immediately before the cuephrase under consideration if there is no othercue phrase that immediately precedes it.
Ifthere exists such a cue phrase, the analyzer willbehave as in the case of the action COMMA.The action DUAL is usually associated withcue phrases that can introduce some expecta-tions about he discourse (Cristea and Webber,1997).
For example, the cue phrase although intext (5) signals a rhetorical relation of CONCES-SION between the clause to which it belongsand the previous clause.
However, in text (6),where although is preceded by an and, it sig-nals a rhetorical relation of CONCESSION be-tween the clause to which it belongs and thenext clause in the text.
(5) \[I went o the theater\] \[although I had a terribleheadache.\](6) \[The trip was fun,\] \[and although we werebadly bitten by blackflies,\] \[Ido not regret it.\]3.3 The clause-like unit and discourse-markeridentification algorithmOn the basis of the information derived from the cor-pus, I have designed an algorithm that identifies el-ementary textual unit boundaries in sentences andcue phrases that have a discourse function.
Figure 1shows only its skeleton and focuses on the variablesand steps that are used in order to determine the el-ementary units.
Due to space constraints, the stepsthat assert he discourse function of a marker arenot shown; however, these steps are mentioned inthe discussion of the algorithm that is given below.Marcu (1997b) provides a full description of the al-gorithm.The algorithm takes as input a sentence S and thearray markers\[n\] of cue phrases (potential discoursemarkers) that occur in that sentence; the array is pro-duced by a trivial algorithm that recognizes regu-lar expressions ( ee section 3.1).
Each element inmarkers\[n\] is characterized by a feature structurewith the following entries:?
the action associated with the cue phrase;?
the position in the elementary unit of the cuephrase;?
a flag has_discourse.funct ion that is initially setto "no".The clause-like unit and discourse-marker identi-fication algorithm traverses the array of cue phrasesleft-to-right (see the loop between lines 2 and 20)and identifies the elementary textual units in the sen-tence on the basis of the types of the markers thatit processes.
Crucial to the algorithm is the vari-able "status", which records the set of markers thathave been processed earlier and that may still in-fluence the identification ofclause and parentheticalunit boundaries.The clause-like unit identification algorithm hastwo main parts: lines 10--20 concern actions that areexecuted when the "status" variable is NIL.
Theseactions can insert extual unit boundaries or modifythe value of the variable "status", thus influencingthe processing of further markers.
Lines 3-9 con-cem actions that are executed when the "status" vari-able is not NIL.
We discuss now in turn each of theseactions.Lines 3-4 of the algorithm treat parentheticalinformation.
Once an open parenthesis, a dash,4or a discourse marker whose associated action isCOMMA_PAREN has been identified, the algorithmignores all other potential discourse markers untilthe element that closes the parenthetical unit is pro-cessed.
Hence, the algorithm searches for the firstclosed parenthesis, dash, or comma, ignoring allother markers on the way.
Obviously, this imPle-mentation does not assign a discourse usage to dis-course markers that are used within a span that is par-enthetic.
However, this choice is consistent with thedecision discussed in section 3.2, to assign paren-thetical information o elementary textual unit sta-tus.
Because of this, the text shown in italics intext (7), for example, is treated as a single paren-thetical unit, which is subordinated to "Yet, even onthe summer pole, temperatures never warm enoughto melt frozen water".
In dealing with parentheti-cal units, the algorithm avoids setting boundaries incases in which the first comma that comes after aCOMMA_PAREN marker is immediately followed byan or or and.
As example (7) shows, taking the firstcomma s boundary of the parenthetical unit wouldbe inappropriate.
(7) \[Yet, even on the summer pole, {where the sun re-mains in the s~ ~ all day long, and where winds arenot as strong as at the Equator. }
temperatures neverwarm enough to melt frozen water.\]Obviously, one can easily find counterexamplesto this rule (and to other ules that are employed bythe algorithm).
For example, the clause-like unit anddiscourse-marker identification algorithm will pro-duce erroneous results when it processes the sen-tence shown in (8) below.
(8) \[I gave John a boat,\] \[which e liked, and a duck,\]\[which e didn't.\]Nevertheless, the evaluation results discussed insection 4 show that the algorithm produces correctresults in the majority of the cases.If the "status" variable contains the actionCOMMA, the occurrence of the first comma that isnot adjacent to an and or or marker determines theidentification of a new elementary unit (see lines5-7 in figure 1).Usually, the discourse role of the cue phrases andand or is ignored because the surface-form algo-rithm that we propose is unable to distinguish accu-rately enough between their discourse and senten-tial usages.
However, lines 8-9 of the algorithmconcern cases in which their discourse function canbe unambiguously determined.
For example, in ourInput:Output:A sentence S.The array of n potential discourse markers markers\[n\] that occur in S.The clause-like units, parenthetical units, and discourse markers of S.1.
status := N IL ; .
.
.
;2. for i from l to  n3.
i f  MATCH_PAREN E status V MATCH_DASH E status V COMMA_PAREN E status4.
(deal with parenthetical information)5. if COMMA E status A markerTextEqual(i,",") A6.
NextAdjacentMarkerlsNotAnd0 A NextAdjacentMarkerlsNotOr07.
(insert extual boundary after comma)8. i f  (SET_AND E status V SET_OR E status) A markerAdjacent(i - 1, i)9.
(deal with adjacent markers)10. switch(getActionType(i)) {11. case DUAL: (deal with DUAL markers)12. case NORMAL: (insert extual boundary before marker)13. case COMMA: status := status U {COMMA};14. case NORMAL_THEN_COMMA: (insert extual boundary before marker)15 status := status U {COMMA};16. case NOTHING: (assign discourse usage)~17.
case MATCH_PAREN, COMMA_PAREN, MATCH_DASH: status := status U {getActionType(i)};18. case SET_AND, SET_OR: status := status U {getActionType(i)};19.
}20. end for21.
finishUpParentheticalsAndClauses0;Figure 1 : The skeleton of the clause-like unit and discourse-marker identification algorithmcorpus, whenever and and or immediately precededthe occurrence of other discourse markers (functionmarkerAdj acent( i -  1, i) returns true), they had a dis-course function.
For example, in sentence (9), andacts as an indicator of a JOINT relation between thefirst two clauses of the text.
(9) \[Although the weather on Mars is cold\] \[and al-though it is very unlikely that water exists,\] [scien-tists have not dismissed yet the possibility of life onthe Red Planet.\]I f  a discourse marker is found that immediately fol-lows the occurrence of an and (or an or) and if theleft boundary of the elementary unit under consider-ation is found to the left of the and (or the or), a newelementary unit is identified whose right boundary isjust before the and (or the or).
In such a case the and(or the or) is considered to have a discourse functionas well, so the flag has_discourse function is set to"yes".If any of the complex conditions in lines 3, 5, or 8in figure 1 is satisfied, the algorithm not only insertstextual boundaries as discussed above, but it also re-sets the "status" variable to NIL.Lines 10-19 of  the algorithm concern the casesin which the "status" variable is NIL.
If the type ofthe marker is DUAL, the determination of the tex-tual unit boundaries depends on the marker underscrutiny being adjacent o the marker that precedesit.
If it is, the "status" variable is set such that thealgorithm will act as in the case of a marker of typeCOMMA.
If the marker under scrutiny is not adja-cent to the marker that immediately preceded it, atextual unit boundary is identified.
This implemen-tation will modify, for example, the variable "status"to COMMA when processing the marker although inexample (10), but only insert a textual unit boundarywhen processing the same marker in example (11).The final textual unit boundaries that are assigned bythe algorithm are shown using square brackets.
(10) \[John is a nice guy,\] \[but although is colleaguesdo not pick on him,\] \[they do not invite him to gocamping with them.\](11) \[John is a nice guy,\] \[although he made a couple ofnasty remarks last night.\]Line 12 of the algorithm concerns the most fre-quent marker type.
The type NORMAL determinesthe identification of a new clause-like unit bound-ary just before the marker under scrutiny.
Line 13concerns the case in which the type of the markeris COMMA.
If the marker under scrutiny is adja-cent to the previous one, the previous marker isconsidered to have a discourse function as well.Either case, the "status" variable is updated suchthat a textual unit boundary will be identified at thefirst occurrence of a comma.
When a marker oftype NORMAL_THEN_COMMA is processed, the al-gorithm identifies a new clause-like unit as in thecase of a marker of type NORMAL, and then up-dates the variable "status" such that a textual unitboundary will be identified at the first occurrence ofa comma.
In the case a marker of type NOTHING isprocessed, the only action that might be executed isthat of assigning that marker a discourse usage.Lines 7-8 of the algorithm concern the treatmentof markers that introduce xpectations with respectto the occurrence of parenthetical units: the effect ofprocessing such markers is that of updating the "'sta-tus" variable according to the type of the action as-sociated with the marker under scrutiny.
The sameeffect is observed in the cases in which the markerunder scrutiny is an and or an or.After processing all the markers, it is possible thatsome text will remain unaccounted for: this text usu-ally occurs between the last marker and the end ofthe sentence.
The procedure "finishUpParentheti-calsAndClausesO" in line 21 of figure 1 flushes thistext into the last clause-like unit that is under consid-eration.4 EvaluationTo evaluate a C++ implementation f the clause-likeunit and discourse-marker identification algorithm,I randomly selected three texts, each belonging toa different genre: an expository text of 5036 wordsfrom Scientific American; amagazine article of 1588words from Time; and a narration of 583 words fromthe Brown Corpus.
No fragment of any of the threetexts was used during the corpus analysis.
Threeindependent judges, graduate students in computa-tional linguistics, broke the texts into elementaryunits.
The judges were given no instructions aboutthe criteria that they were to apply in order to de-termine the clause-like unit boundaries; rather, theywere supposed to rely on their intuition and pre-ferred definition of clause.
The locations in textsthat were labelled as clause-like unit boundaries byat least wo of the three judges were considered tobe"valid elementary unit boundaries".
I used the validelementary unit boundaries assigned by judges as in-dicators of discourse usages of cue phrases and I de-terrnined manually the cue phrases that signalled adiscourse relation.
For example, if an and was usedin a sentence and if the judges agreed that a textualunit boundary existed just before the and, I assignedthat and a discourse usage.
Otherwise, I assigned ita sentential usage.
Hence, although the corpus anal-ysis was carried out by only one person, the valida-tion of the actions and of the algorithm depicted infigure 1 was carried out against unseen texts, whichwere manually labelled by multiple subjects.Once the "gold-standard" textual unit boundariesand discourse markers were manually identified, Iapplied the algorithm in figure I on the same texts.The algorithm found 80.8% of the discourse mark-ers with a precision of 89.5% (see Marcu (1997b)for details), a result that outperforms Hirschbergand Litman's (1993) and its subsequent improve-ments (Litman, 1996; Siegel and McKeown, 1994).The algorithm correctly identified 81.3% of theclause-like unit boundaries, with a precision of90.3%.
I am not aware of any surface-form algo-rithms that achieve similar results.
Still, the clause-like unit and discourse-marker identification algo-rithm has its limitations.
These are primarily dueto the fact that the algorithm relies entirely on cuephrases and orthographic features that can be de-tected by shallow methods.
For example, suchmethods are unable to classify correctly the sen-tential usage of but in example (12); as a conse-quence, the algorithm incorrectly inserts a textualunit boundary before it.
(12) \[The U.S. has\] \[but a slight chance to win a medalin Atlanta,\] [because the championship eastern Eu-ropean weight-lifting programs have endured in thenewly independent countries that survived the frac-turing of the Soviet bloc.\]65 ConclusionIn this paper, I have shown how by adopting a proce-dural view of cue phrases, one can determine auto-matically the elementary units and discourse mark-ers of texts, with recall and precision figures in therange Of 80 and 90% respectively, when comparedto humans.
The main advantage of the proposed al-gorithm is its speed: it is linear in the size of the in-put.
It is the purpose of future research to improvethe algorithm described here and to investigate thebenefits of using more sophisticated methods, suchas part of speech tagging and syntactic parsing.Acknowledgements.
I am grateful to Graeme Hirstfor the advice he gave me during this work and toMelanie Baljko, Phil Edmonds, and Stephen Greenfor their help with the experimental work.This research was conducted while I was at theUniversity of Toronto, and was supported by theNatural Sciences and Engineering Research Councilof Canada.ReferencesJean Caron.
1997.
Toward a procedural approachof the meaning of connectives.
In Jean Coster-mans and Michel Fayol, editors, Processing In-terclausal Relationships.
Studies in the Produc-tion and Comprehension of Text, pages 53-74.Lawrence Erlbaum Associates.Dan Cristea and Bonnie L. Webber.
1997.
Ex-pectations in incremental discourse processing.In Proceedings of the 35th Annual Meeting ofthe Association for Computational Linguistics(ACL/EACL-97), pages 88-95, Madrid, Spain,July 7-12.Bruce Fraser.
1996.
Pragmatic markers.
Pragmat-ics, 6(2): 167-190.Barbara Grosz and Julia Hirschberg.
1992.
Someintonational characteristics of discourse structure.In Proceedings of the International Conferenceon Spoken Language Processing.Barbara J. Grosz and Candace L. Sidner.
1986.
At-tention, intentions, and the structure of discourse.Computational Linguistics, 12(3): 175-204, July-September.Marti A. Hearst.
1997.
TextTiling: Segmenting textinto multi-paragraph subtopic passages.
Compu-tational Linguistics, 23(1 ):33--64, March.Julia Hirschberg and Diane Litman.
1993.
Empiri-cal studies on the disambiguation f cue phrases.Computational Linguistics, 19(3):501-530.Diane J. Litman.
1996.
Cue phrase classification us-ing machine learning.
Journal of Artificial Intel-ligence Research, 5:53-94.William C. Mann and Sandra A. Thompson.
1988.Rhetorical structure theory: Toward a functionaltheory of text organization.
Text, 8(3):243-281.Daniel Marcu.
1997a.
From discourse struc-tures to text summaries.
In Proceedings of theACL'97/EACL'97 Workshop on Intelligent Scal-able Text Summarization, pages 82-88, Madrid,Spain, July 11.Daniel Marcu.
1997b.
The rhetorical parsing, sum-marization, and generation of natural anguagetexts.
Ph.D. thesis, Department of Computer Sci-ence, University of Toronto, December.Leo G.M.
Noordman and Wietske Vonk.
1997.Toward a procedural approach of the meaningof connectives.
In Jean Costermans and MichelFayol, editors, Processing Interclausal Relation-ships.
Studies in the Production and Comprehen-sion of Text, pages 75-93.
Lawrence Erlbaum As-sociates.Rebbeca J. Passonneau and Diane J. Litman.
1997.Discourse segmentation byhuman and automatedmeans.
Computational Linguistics, 23(1):103-140, March.Eric V. Siegel and Kathleen R. McKeown.
1994.Emergent linguistic rules from inducing decisiontrees: Disambiguating discourse clue words.
InProceedings of the Twelfth National Conferenceon Artificial Intelligence (AAAI-94), volume 1,pages 820--826, Seattle, July 31 - August 4.Simone Teufel and Marc Moens.
1998.
Sentenceextraction and rhetorical classification for flex-ible abstracts.
In Working Notes of the AAA1-98 Spring Symposium on Intelligent Text Summa-rization, Stanford, March 23-25.Teun A. van Dijk.
1979.
Pragmatic onnectives.Journal of Pragmatics, 3:447--456.Yaakov Yaari.
1997.
Segmentation of exposi-tory texts by hierarchical agglomerative cluster-ing.
In Proceedings of the Conference on Re-cent Advances in Natural Language Processing(RANLP-97), Bulgaria.
