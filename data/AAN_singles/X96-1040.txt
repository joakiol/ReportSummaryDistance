THE ARCHITECTURE DEMONSTRATION SYSTEMTIPSTER SE/CMtipster@tipster, o gTHE ARCHITECTUREDEMONSTRATION PROGRAMThe TIPSTER demonstration softwareprogram shows how the Architecture can meetthe TIPSTER goals and requirements.
Thedemonstration :Supports document detection,information extraction and documentmanagementi Allows the interchange of componentsfrom different contractorsi" Uses sharable components interfacedthrough standard protocolsAllows document detection andinformation extraction to work togetherby using standardized linguisticannotationsi" Supports foreign language text displayand processingThe program had two versions, known asthe "6-month demo" and the current "12-monthdemo".
The basic object of the program was toshowcase the way that different vendorcomponents could work together under theArchitecture.The participants who produced the 12month demo are:i" BBN - text extractioni" HNC Software - document detection~" Lockheed Martin - text extraction andextraction database~" New Mexico State University (NMSU)- document manager and GUIi' SRI - text extraction~" TRW - document detection outputi' University of Massachusetts (UMass) -document detectionThe demonstration program is not "canned"but allows the various components o operate ina manner similar to an actual application.A variety of document collections inEnglish, Spanish and Arabic are available underthe Document Manager to support the variouscomponents.
All components use the commonDocument Manager and common viewers forcollection lists, document lists, documents,Detection Needs and Annotations in theGraphical Users Interface(GU1).
The GUI is notpart of the Architecture but the use of only oneGUI illustrates the standardization f componentoutputs and is another example of the sharing ofcommon facilities by diverse components.DOCUMENT DETECT IONDocument Detection includes the selectionof documents from a corpus, with the outputrated by relevance, and the routing of documentsto users, based upon Detection Need profiles.
Inthe first case a Detection Need is passed againstthe entire corpus.
In the routing case the corpusis passed against a group of Detection Needs.Routing is not supported in the demonstration.The Detection Need format supports naturallanguage queries as well as Boolean keywordsand fuzzy queries.
A unique capability ofspecifying the Detection Need is the ability toaccept sample documents that represent therelevant documents or sample documents whichrepresent the non-relevant documents (so calledQuery-by-Example).
Even TREC-type topicscan be used as a Detection Need.A document Collection may be selected, aDetection Need created or selected from a libraryand these items sent to the detection engine ofchoice, HNC Software or UMass, each of whichuse entirely different algorithms for detection.The resulting list of documents are rankordered by best match.
After examining theresults from the query process the Detection Need217may be modified for a new run.
After the resultsof the previous run are examined, sample relevantor non-relevant documents are typically selectedfrom the run and used to modify a DetectionNeed so as to improve the query.Each of the detection engines uses entirelydifferent methods to obtain their output, but bothcan accept he same Detection Need and bothproduce TIPSTER compatible output.The results of a Detection Need may beviewed as a list of relevant documents.
Thespecific document text may also be viewed andin some cases the text that contributed to thedocument being selected as relevant can behighlighted.INFORMATION EXTRACTIONInformation Extraction (IE) is theidentification and output of specific types of dataelements and relationships, from free text.
At thebasic level of name-spotting, the typical elementsidentified are person and organization ames,cities, countries, dates, and numeric expressionssuch as monetary figures.
These data elementsare highlighted in color in the documents onscreen.
Relationships represent more complexextraction techniques.
This processingnecessitates linking; e.g., person P withcompany X, and showing that company X hasentered into a joint venture agreement withcompany Y to manufacture a product R throughX's subsidiary, company Z.
The results of thisprocessing are output in a relational template.In the Demonstration, name-spottingcapability is shown by the SRI, BBN, and LMsystems.
SRI's FASTUS system can alsorecognize tables embedded in text.Annotations are the mechanism forcollecting extracted information from a documentincluding the actual data, the type of data andany relationships for the data.
All the extractioncomponents produce annotations in the samestructure and format.
Thus, annotations withextracted information or linguistic informationmay easily be passed between components thatneed the information and a common viewer maybe used to examine the annotations on adocument, regardless of which component didthe extraction.
Typically, extracted informationis used to build domain databases.BBN and LM both provide template viewersfor displaying the extraction of relationships thatare comprised of multiple annotations, each ofwhich can then be examined in detail.
Todemonstrate how extraction technology can beintegrated with that of detection, the LMtemplate viewer also provides the means fordesignating any of the extraction output andgenerating automatically a query whichincorporates the selected output as constituentelements of the query.
Transparent to the user,the query runs in SQL against a hand-craftedOracle database of joint venture articles andretrieves relevant documents.The current version of the demonstrationtook four months to build and operates on aSUN/UNIX system.218
