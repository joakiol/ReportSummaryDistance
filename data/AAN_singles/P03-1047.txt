Bridging the Gap Between Underspecification Formalisms:Minimal Recursion Semantics as Dominance ConstraintsJoachim NiehrenProgramming Systems LabUniversita?t des Saarlandesniehren@ps.uni-sb.deStefan ThaterComputational LinguisticsUniversita?t des Saarlandesstth@coli.uni-sb.deAbstractMinimal Recursion Semantics (MRS) isthe standard formalism used in large-scaleHPSG grammars to model underspecifiedsemantics.
We present the first provablyefficient algorithm to enumerate the read-ings of MRS structures, by translatingthem into normal dominance constraints.1 IntroductionIn the past few years there has been considerableactivity in the development of formalisms for un-derspecified semantics (Alshawi and Crouch, 1992;Reyle, 1993; Bos, 1996; Copestake et al, 1999; Egget al, 2001).
The common idea is to delay the enu-meration of all readings for as long as possible.
In-stead, they work with a compact underspecified rep-resentation; readings are enumerated from this rep-resentation by need.Minimal Recursion Semantics (MRS) (Copes-take et al, 1999) is the standard formalism for se-mantic underspecification used in large-scale HPSGgrammars (Pollard and Sag, 1994; Copestake andFlickinger, ).
Despite this clear relevance, the mostobvious questions about MRS are still open:1.
Is it possible to enumerate the readings ofMRS structures efficiently?
No algorithm hasbeen published so far.
Existing implementa-tions seem to be practical, even though theproblem whether an MRS has a reading is NP-complete (Althaus et al, 2003, Theorem 10.1).2.
What is the precise relationship to other un-derspecification formalism?
Are all of them thesame, or else, what are the differences?We distinguish the sublanguages of MRS netsand normal dominance nets, and show that theycan be intertranslated.
This translation answers thefirst question: existing constraint solvers for normaldominance constraints can be used to enumerate thereadings of MRS nets in low polynomial time.The translation also answers the second ques-tion restricted to pure scope underspecification.
Itshows the equivalence of a large fragment of MRSsand a corresponding fragment of normal dominanceconstraints, which in turn is equivalent to a largefragment of Hole Semantics (Bos, 1996) as provenin (Koller et al, 2003).
Additional underspecifiedtreatments of ellipsis or reinterpretation, however,are available for extensions of dominance constraintonly (CLLS, the constraint language for lambdastructures (Egg et al, 2001)).Our results are subject to a new proof tech-nique which reduces reasoning about MRS struc-tures to reasoning about weakly normal dominanceconstraints (Bodirsky et al, 2003).
The previousproof techniques for normal dominance constraints(Koller et al, 2003) do not apply.2 Minimal Recursion SemanticsWe define a simplified version of Minimal Recur-sion Semantics and discuss differences to the origi-nal definitions presented in (Copestake et al, 1999).MRS is a description language for formulas offirst order object languages with generalized quanti-fiers.
Underspecified representations in MRS consistof elementary predications and handle constraints.Roughly, elementary predications are object lan-guage formulas with ?holes?
into which other for-mulas can be plugged; handle constraints restrict theway these formulas can be plugged into each other.More formally, MRSs are formulas over the follow-ing vocabulary:1.
Variables.
An infinite set of variables rangedover by h. Variables are also called handles.2.
Constants.
An infinite set of constants rangedover by x,y,z.
Constants are the individual vari-ables of the object language.3.
Function symbols.
(a) A set of function symbols written as P.(b) A set of quantifier symbols ranged overby Q (such as every and some).
Pairs Qxare further function symbols (the variablebinders of x in the object language).4.
The symbol ?
for the outscopes relation.Formulas of MRS have three kinds of literals, thefirst two are called elementary predications (EPs)and the third handle constraints:1. h :P(x1, .
.
.
,xn,h1, .
.
.
,hm) where n,m ?
02. h :Qx(h1,h2)3. h1 ?
h2Label positions are to the left of colons ?:?
and argu-ment positions to the right.
Let M be a set of literals.The label set lab(M) contains those handles of Mthat occur in label but not in argument position.
Theargument handle set arg(M) contains the handles ofM that occur in argument but not in label position.Definition 1 (MRS).
An MRS is finite set M ofMRS-literals such that:M1 Every handle occurs at most once in label andat most once in argument position in M.M2 Handle constraints h1 ?
h2 in M always relateargument handles h1 to labels h2 of M.M3 For every constant (individual variable) x in ar-gument position in M there is a unique literal ofthe form h :Qx(h1,h2) in M.We call an MRS compact if it additionally satisfies:M4 Every handle of M occurs exactly once in anelementary predication of M.We say that a handle h immediately outscopes ahandle h?
in an MRS M iff there is an EP E in M suchthat h occurs in label and h?
in argument position ofE .
The outscopes relation is the reflexive, transitiveclosure of the immediate outscopes relation.everyxstudentxreadx,ysomeybooky{h1 : everyx(h2,h4),h3 : student(x),h5 : somey(h6,h8),h7 : book(y),h9 : read(x,y),h2 ?
h3,h6 ?
h7}Figure 1: MRS for ?Every student reads a book?.An example MRS for the scopally ambiguoussentence ?Every student reads a book?
is given inFig.
1.
We often represent MRSs by directed graphswhose nodes are the handles of the MRS. Elemen-tary predications are represented by solid edges andhandle constraints by dotted lines.
Note that wemake the relation between bound variables and theirbinders explicit by dotted lines (as from everyx toreadx,y); redundant ?binding-edges?
that are sub-sumed by sequences of other edges are omitted how-ever (from everyx to studentx for instance).A solution for an underspecified MRS is called aconfiguration, or scope-resolved MRS.Definition 2 (Configuration).
An MRS M is a con-figuration if it satisfies the following conditions.C1 The graph of M is a tree of solid edges: handlesdon?t properly outscope themselves or occur indifferent argument positions and all handles arepairwise connected by elementary predications.C2 If two EPs h :P(.
.
.
,x, .
.
.)
and h0 :Qx(h1,h2)belong to M, then h0 outscopes h in M (so thatthe binding edge from h0 to h is redundant).We call M a configuration for another MRS M?
ifthere exists some substitution ?
: arg(M?)
7?
lab(M?
)which states how to identify argument handles of M?with labels of M?, so that:C3 M = {?
(E) | E is EP in M?
}, andC4 ?
(h1) outscopes h2 in M, for all h1 ?
h2 ?
M?.The value ?
(E) is obtained by substituting all ar-gument handles in E , leaving all others unchanged.The MRS in Fig.
1 has precisely two configura-tions displayed in Fig.
2 which correspond to the tworeadings of the sentence.
In this paper, we presentan algorithm that enumerates the configurations ofMRSs efficiently.everyxstudentx someybooky readx,ysomeybooky everyxstudentx readx,yFigure 2: Graphs of Configurations.Differences to Standard MRS. Our version de-parts from standard MRS in some respects.
First,we assume that different EPs must be labeled withdifferent handles, and that labels cannot be identi-fied.
In standard MRS, however, conjunctions areencoded by labeling different EPs with the samehandle.
These EP-conjunctions can be replaced ina preprocessing step introducing additional EPs thatmake conjunctions explicit.Second, our outscope constraints are slightly lessrestrictive than the original ?qeq-constraints.?
Ahandle h is qeq to a handle h?
in an MRS M, h =q h?,if either h = h?
or a quantifier h :Qx(h1,h2) occursin M and h2 is qeq to h?
in M. Thus, h =q h?
im-plies h ?
h?, but not the other way round.
We believethat the additional strength of qeq-constraints is notneeded in practice for modeling scope.
Recent workin semantic construction for HPSG (Copestake etal., 2001) supports our conjecture: the examples dis-cussed there are compatible with our simplification.Third, we depart in some minor details: weuse sets instead of multi-sets and omit top-handleswhich are useful only during semantics construction.3 Dominance ConstraintsDominance constraints are a general framework fordescribing trees, and thus syntax trees of logical for-mulas.
Dominance constraints are the core languageunderlying CLLS (Egg et al, 2001) which adds par-allelism and binding constraints.3.1 Syntax and SemanticsWe assume a possibly infinite signature ?
of func-tion symbols with fixed arities and an infinite set Varof variables ranged over by X ,Y,Z.
We write f ,g forfunction symbols and ar( f ) for the arity of f .A dominance constraint ?
is a conjunction ofdominance, inequality, and labeling literals of thefollowing forms where ar( f ) = n:?
::= X/?Y | X 6= Y | X : f (X1, .
.
.
,Xn) | ???
?Dominance constraints are interpreted over finiteconstructor trees, i.e.
ground terms constructed fromthe function symbols in ?.
We identify ground termswith trees that are rooted, ranked, edge-ordered andlabeled.
A solution for a dominance constraint con-sists of a tree ?
and a variable assignment ?
thatmaps variables to nodes of ?
such that all constraintsare satisfied: a labeling literal X : f (X1, .
.
.
,Xn) is sat-isfied iff the node ?
(X) is labeled with f and hasdaughters ?
(X1), .
.
.
,?
(Xn) in this order; a domi-nance literal X/?Y is satisfied iff ?
(X) is an ancestorof ?
(Y ) in ?
; and an inequality literal X 6=Y is satis-fied iff ?
(X) and ?
(Y ) are distinct nodes.Note that solutions may contain additional mate-rial.
The tree f (a,b), for instance, satisfies the con-straint Y :a?Z :b.3.2 Normality and Weak NormalityThe satisfiability problem of arbitrary dominanceconstraints is NP-complete (Koller et al, 2001) ingeneral.
However, Althaus et al (2003) identify anatural fragment of so called normal dominanceconstraints, which have a polynomial time satisfia-bility problem.
Bodirsky et al (2003) generalize thisnotion to weakly normal dominance constraints.We call a variable a hole of ?
if it occurs in argu-ment position in ?
and a root of ?
otherwise.Definition 3.
A dominance constraint ?
is normal(and compact) if it satisfies the following conditions.N1 (a) each variable of ?
occurs at most once in thelabeling literals of ?.
(b) each variable of ?
occurs at least once in thelabeling literals of ?.N2 for distinct roots X and Y of ?, X 6=Y is in ?.N3 (a) if X C?
Y occurs in ?, Y is a root in ?.
(b) if X C?
Y occurs in ?, X is a hole in ?.A dominance constraint is weakly normal if it satis-fies all above properties except for N1(b) and N3(b).The idea behind (weak) normality is that the con-straint graph (see below) of a dominance constraintconsists of solid fragments which are connectedby dominance constraints; these fragments may notproperly overlap in solutions.Note that Definition 3 always imposes compact-ness, meaning that the heigth of solid fragments is atmost one.
As for MRS, this is not a serious restric-tion, since more general weakly normal dominanceconstraints can be compactified, provided that dom-inance links relate either roots or holes with roots.Dominance Graphs.
We often represent domi-nance constraints as graphs.
A dominance graph isthe directed graph (V,/?unionmulti/).
The graph of a weaklynormal constraint ?
is defined as follows: The nodesof the graph of ?
are the variables of ?.
A labelingliteral X : f (X1, .
.
.
,Xn) of ?
contributes tree edges(X ,Xi) ?
/ for 1 ?
i ?
n that we draw as X Xi;we freely omit the label f and the edge order in thegraph.
A dominance literal X/?Y contributes a dom-inance edge (X ,Y ) ?
/?
that we draw as X Y .Inequality literals in ?
are also omitted in the graph.fagFor example, the constraint graphon the right represents the dominanceconstraint X : f (X ?
)?Y :g(Y ?
)?X ?/?Z?Y ?/?Z?Z :a?X 6=Y ?X 6=Z?Y 6=Z.A dominance graph is weakly normal or a wnd-graph if it does not contain any forbidden subgraphs:Dominance graphs of a weakly normal dominanceconstraints are clearly weakly normal.Solved Forms and Configurations.
The main dif-ference between MRS and dominance constraintslies in their notion of interpretation: solutions versusconfigurations.Every satisfiable dominance constraint has in-finitely many solutions.
Algorithms for dominanceconstraints therefore do not enumerate solutions butsolved forms.
We say that a dominance constraint isin solved form iff its graph is in solved form.
A wnd-graph ?
is in solved form iff ?
is a forest.
The solvedforms of ?
are solved forms ??
that are more spe-cific than ?, i.e.
?
and ??
differ only in their dom-inance edges and the reachability relation of ?
ex-tends the reachability of ??.
A minimal solved formof ?
is a solved form of ?
that is minimal with re-spect to specificity.The notion of configurations from MRS appliesto dominance constraints as well.
Here, a configu-ration is a dominance constraint whose graph is atree without dominance edges.
A configuration of aconstraint ?
is a configuration that solves ?
in theobvious sense.
Simple solved forms are tree-shapedsolved forms where every hole has exactly one out-going dominance edge.L1L2L3 L4L2L1L4L3Figure 3: A dominance constraint (left) with a mini-mal solved form (right) that has no configuration.Lemma 1.
Simple solved forms and configurationscorrespond: Every simple solved form has exactlyone configuration, and for every configuration thereis exactly one solved form that it configures.Unfortunately, Lemma 1 does not extend to min-imal as opposed to simple solved forms: there areminimal solved forms without configurations.
Theconstraint on the right of Fig.
3, for instance, has noconfiguration: the hole of L1 would have to be filledtwice while the right hole of L2 cannot be filled.4 Representing MRSsWe next map (compact) MRSs to weakly normaldominance constraints so that configurations arepreserved.
Note that this translation is based on anon-standard semantics for dominance constraints,namely configurations.
We address this problem inthe following sections.The translation of an MRS M to a dominance con-straint ?M is quite trivial.
The variables of ?M are thehandles of M and its literal set is:{h : Px1,...,xn(h1, .
.
.)
| h :P(x1, .
.
.
,xn,h1, .
.
.)
?
M}?
{h : Qx(h1,h2) | h :Qx(h1,h2) ?
M}?
{h1/?h2 | h1 ?
h2 ?
M}?
{h/?h0 | h :Qx(h1,h2),h0 :P(.
.
.
,x, .
.
.)
?
M}?{h6=h?
| h,h?
in distinct label positions of M}Compact MRSs M are clearly translated into (com-pact) weakly normal dominance constraints.
Labelsof M become roots in ?M while argument handlesbecome holes.
Weak root-to-root dominance literalsare needed to encode variable binding condition C2of MRS.
It could be formulated equivalently throughlambda binding constraints of CLLS (but this is notnecessary here in the absence of parallelism).Proposition 1.
The translation of a compact MRSM into a weakly normal dominance constraint ?Mpreserves configurations.This weak correctness property follows straight-forwardly from the analogy in the definitions.5 Constraint SolvingWe recall an algorithm from (Bodirsky et al, 2003)that efficiently enumerates all minimal solved formsof wnd-graphs or constraints.
All results of this sec-tion are proved there.The algorithm can be used to enumerate config-urations for a large subclass of MRSs, as we willsee in Section 6.
But equally importantly, this algo-rithm provides a powerful proof method for reason-ing about solved forms and configurations on whichall our results rely.5.1 Weak ConnectednessTwo nodes X and Y of a wnd-graph ?
= (V,E) areweakly connected if there is an undirected path fromX to Y in (V,E).
We call ?
weakly connected if allits nodes are weakly connected.
A weakly connectedcomponent (wcc) of ?
is a maximal weakly con-nected subgraph of ?.
The wccs of ?
= (V,E) formproper partitions of V and E .Proposition 2.
The graph of a solved form of aweakly connected wnd-graph is a tree.5.2 FreenessThe enumeration algorithm is based on the notion offreeness.Definition 4.
A node X of a wnd-graph ?
is calledfree in ?
if there exists a solved form of ?
whosegraph is a tree with root X .A weakly connected wnd-graph without freenodes is unsolvable.
Otherwise, it has a solved formwhose graph is a tree (Prop.
2) and the root of thistree is free in ?.Given a set of nodes V ?
?V , we write ?|V ?
for therestriction of ?
to nodes in V ?
and edges in V ?
?V ?.The following lemma characterizes freeness:Lemma 2.
A wnd-graph ?
with free node X satis-fies the freeness conditions:F1 node X has indegree zero in graph ?, andF2 no distinct children Y and Y ?
of X in ?
that arelinked to X by immediate dominance edges areweakly connected in the remainder ?|V\{X}.5.3 AlgorithmThe algorithm for enumerating the minimal solvedforms of a wnd-graph (or equivalently constraint) isgiven in Fig.
4.
We illustrate the algorithm for theproblematic wnd-graph ?
in Fig.
3.
The graph of ?is weakly connected, so that we can call solve(?
).This procedure guesses topmost fragments in solvedforms of ?
(which always exist by Prop.
2).The only candidates are L1 or L2 since L3 andL4 have incoming dominance edges, which violatesF1.
Let us choose the fragment L2 to be topmost.The graph which remains when removing L2 is stillweakly connected.
It has a single minimal solvedform computed by a recursive call of the solver,where L1 dominates L3 and L4.
The solved form ofthe restricted graph is then put below the left hole ofL2, since it is connected to this hole.
As a result, weobtain the solved form on the right of Fig.
3.Theorem 1.
The function solved-form(?)
com-putes all minimal solved forms of a weakly normaldominance graph ?
; it runs in quadratic time persolved form.6 Full TranslationNext, we explain how to encode a large class ofMRSs into wnd-constraints such that configurationscorrespond precisely to minimal solved forms.
Theresult of the translation will indeed be normal.6.1 Problems and ExamplesThe naive representation of MRSs as weakly nor-mal dominance constraints is only correct in a weaksense.
The encoding fails in that some MRSs whichhave no configurations are mapped to solvable wnd-constraints.
For instance, this holds for the MRS onthe right in Fig 3.We cannot even hope to translate arbitrary MRSscorrectly into wnd-constraints: the configurabilityproblem of MRSs is NP-complete, while satisfia-bility of wnd-constraints can be solved in polyno-mial time.
Instead, we introduce the sublanguagesof MRS-nets and equivalent wnd-nets, and show thatthey can be intertranslated in quadratic time.solved-form(?)
?Let ?1, .
.
.
,?k be the wccs of ?
= (V,E)Let (Vi,Ei) be the result of solve(?i)return (V,?ki=1Ei)solve(?)
?precond: ?
= (V,/unionmulti/?)
is weakly connectedchoose a node X satisfying (F1) and (F2) in ?
else failLet Y1, .
.
.
,Yn be all nodes s.t.
X /YiLet ?1, .
.
.
,?k be the weakly connected components of ?|V?
{X ,Y1,...,Yn}Let (Wj,E j) be the result of solve(?
j), and X j ?Wj its rootreturn (V,?kj=1E j ?/?/?1?/?2) where/?1 = {(Yi,X j) | ?X ?
: (Yi,X ?)
?
/?
?X ?
?Wj},/?2 = {(X ,X j) | ?
?X ?
: (Yi,X ?)
?
/?
?X ?
?Wj}Figure 4: Enumerating the minimal solved-forms of a wnd-graph.......(a) strong.......(b) weak.......(c) islandFigure 5: Fragment Schemas of Nets6.2 Dominance and MRS-NetsA hypernormal path (Althaus et al, 2003) in a wnd-graph is a sequence of adjacent edges that doesnot traverse two outgoing dominance edges of somehole X in sequence, i.e.
a wnd-graph without situa-tions Y1 X Y2.A dominance net ?
is a weakly normal domi-nance constraint whose fragments all satisfy one ofthe three schemas in Fig.
5.
MRS-nets can be de-fined analogously.
This means that all roots of ?
arelabeled in ?, and that all fragments X : f (X1, .
.
.
,Xn)of ?
satisfy one of the following three conditions:strong.
n ?
0 and for all Y ?
{X1, .
.
.
,Xn} there ex-ists a unique Z such that Y C?
Z in ?, and there existsno Z such that X C?
Z in ?.weak.
n ?
1 and for all Y ?
{X1, .
.
.
,Xn?1,X} thereexists a unique Z such that Y C?
Z in ?, and thereexists no Z such that Xn C?
Z in ?.island.
n = 1 and all variables in {Y | X1 C?
Y} areconnected by a hypernormal path in the graph of therestricted constraint ?|V?
{X1}, and there exists no Zsuch that X C?
Z in ?.The requirement of hypernormal connections inislands replaces the notion of chain-connectednessin (Koller et al, 2003), which fails to apply to dom-inance constraints with weak dominance edges.For ease of presentation, we restrict ourselves toa simple version of island fragments.
In general, weshould allow for island fragments with n > 1.6.3 Normalizing Dominance NetsDominance nets are wnd-constraints.
We next trans-late dominance nets ?
to normal dominance con-straints ??
so that ?
has a configuration iff ??
is sat-isfiable.
The trick is to normalize weak dominanceedges.
The normalization norm(?)
of a weakly nor-mal dominance constraint ?
is obtained by convert-ing all root-to-root dominance literals X C?
Y as fol-lows:X C?
Y ?
Xn C?
Yif X roots a fragment of ?
that satisfies schemaweak of net fragments.
If ?
is a dominance net thennorm(?)
is indeed a normal dominance net.Theorem 2.
The configurations of a weakly con-nected dominance net ?
correspond bijectivelyto the minimal solved forms of its normalizationnorm(?
).For illustration, consider the problematic wnd-constraint ?
on the left of Fig.
3. ?
has two minimalsolved forms with top-most fragments L1 and L2 re-spectively.
The former can be configured, in contrastto the later which is drawn on the right of Fig.
3.Normalizing ?
has an interesting consequence:norm(?)
has (in contrast to ?)
a single minimalsolved form with L1 on top.
Indeed, norm(?)
cannotbe satisfied while placing L2 topmost.
Our algorithmdetects this correctly: the normalization of fragmentL2 is not free in norm(?)
since it violates propertyF2.The proof of Theorem 2 captures the rest of thissection.
We show in a first step (Prop.
3) that the con-figurations are preserved when normalizing weaklyconnected and satisfiable nets.
In the second step,we show that minimal solved forms of normalizednets, and thus of norm(?
), can always be configured(Prop.
4).Corollary 1.
Configurability of weakly connectedMRS-nets can be decided in polynomial time; con-figurations of weakly connected MRS-nets can beenumerated in quadratic time per configuration.6.4 Correctness ProofMost importantly, nets can be recursively decom-posed into nets as long as they have configurations:Lemma 3.
If a dominance net ?
has a configurationwhose top-most fragment is X : f (X1, .
.
.
,Xn), thenthe restriction ?|V?
{X ,X1,...,Xn} is a dominance net.Note that the restriction of the problematic net ?by L2 on the left in Fig.
3 is not a net.
This does notcontradict the lemma, as ?
does not have a configu-ration with top-most fragment L2.Proof.
First note that as X is free in ?
it cannot haveincoming edges (condition F1).
This means that therestriction deletes only dominance edges that departfrom nodes in {X ,X1, .
.
.
,Xn}.
Other fragments thusonly lose ingoing dominance edges by normalitycondition N3.
Such deletions preserve the validityof the schemas weak and strong.The island schema is more problematic.
We haveto show that the hypernormal connections in thisschema can never be cut.
So suppose that Y : f (Y1) isan island fragment with outgoing dominance edgesY1 C?
Z1 and Y1 C?
Z2, so that Z1 and Z2 are con-nected by some hypernormal path traversing thedeleted fragment X : f (X1, .
.
.
,Xn).
We distinguishthe three possible schemata for this fragment:...(a) strong....(b) weak....(c) islandFigure 6: Traversals through fragments of free rootsstrong: since X does not have incoming dominanceedges, there is only a single non-trival kind of traver-sal, drawn in Fig.
6(a).
But such traversals contradictthe freeness of X according to F2.weak: there is one other way of traversing weakfragments, shown in Fig.
6(b).
Let X C?
Y be theweak dominance edge.
The traversal proves that Ybelongs to the weakly connected components of oneof the Xi, so the ?
?Xn C?
Y is unsatisfiable.
Thisshows that the hole Xn cannot be identified with anyroot, i.e.
?
does not have any configuration in con-trast to our assumption.island: free island fragments permit one single non-trivial form of traversals, depicted in Fig.
6(c).
Butsuch traversals are not hypernormal.Proposition 3.
A configuration of a weakly con-nected dominance net ?
configures its normalizationnorm(?
), and vice versa of course.Proof.
Let C be a configuration of ?.
We show thatit also configures norm(?).
Let S be the simplesolved form of ?
that is configured by C (Lemma 1),and S?
be a minimal solved form of ?
which is moregeneral than S.Let X : f (Y1, .
.
.
,Yn) be the top-most fragment ofthe tree S. This fragment must also be the top-mostfragment of S?, which is a tree since ?
is assumed tobe weakly connected (Prop.
2).
S?
is constructed byour algorithm (Theorem 1), so that the evaluation ofsolve(?)
must choose X as free root in ?.Since ?
is a net, some literal X : f (Y1, .
.
.
,Yn) mustbelong to ?.
Let ??
= ?|{X ,Y1,...,Yn} be the restrictionof ?
to the lower fragments.
The weakly connectedcomponents of all Y1, .
.
., Yn?1 must be pairwise dis-joint by F2 (which holds by Lemma 2 since X is freein ?).
The X -fragment of net ?
must satisfy one ofthree possible schemata of net fragments:weak fragments: there exists a unique weak domi-nance edge X C?
Z in ?
and a unique hole Yn withoutoutgoing dominance edges.
The variable Z must be aroot in ?
and thus be labeled.
If Z is equal to X then?
is unsatisfiable by normality condition N2, whichis impossible.
Hence, Z occurs in the restriction ?
?but not in the weakly connected components of anyY1, .
.
., Yn?1.
Otherwise, the minimal solved form S?could not be configured since the hole Yn could notbe identified with any root.
Furthermore, the root ofthe Z-component must be identified with Yn in anyconfiguration of ?
with root X .
Hence, C satisfiesYn C?
Z which is add by normalization.The restriction ??
must be a dominance net byLemma 3, and hence, all its weakly connected com-ponents are nets.
For all 1 ?
i ?
n?
1, the compo-nent of Yi in ??
is configured by the subtree of C atnode Yi, while the subtree of C at node Yn configuresthe component of Z in ??.
The induction hypothesisyields that the normalizations of all these compo-nents are configured by the respective subconfigura-tions of C. Hence, norm(?)
is configured by C.strong or island fragments are not altered by nor-malization, so we can recurse to the lower fragments(if there exist any).Proposition 4.
Minimal solved forms of normal,weakly connected dominance nets have configura-tions.Proof.
By induction over the construction of min-imal solved forms, we can show that all holes ofminimal solved forms have a unique outgoing dom-inance edge at each hole.
Furthermore, all minimalsolved forms are trees since we assumed connect-edness (Prop.2).
Thus, all minimal solved forms aresimple, so they have configurations (Lemma 1).7 ConclusionWe have related two underspecification formalism,MRS and normal dominance constraints.
We havedistinguished the sublanguages of MRS-nets andnormal dominance nets that are sufficient to modelscope underspecification, and proved their equiva-lence.
Thereby, we have obtained the first provablyefficient algorithm to enumerate the readings of un-derspecified semantic representations in MRS.Our encoding has the advantage that researchersinterested in dominance constraints can benefit fromthe large grammar resources of MRS.
This requiresfurther work in order to deal with unrestricted ver-sions of MRS used in practice.
Conversely, one cannow lift the additional modeling power of CLLS toMRS.ReferencesH.
Alshawi and R. Crouch.
1992.
Monotonic semanticinterpretation.
In Proc.
30th ACL, pages 32?39.E.
Althaus, D. Duchier, A. Koller, K. Mehlhorn,J.
Niehren, and S. Thiel.
2003.
An efficient graphalgorithm for dominance constraints.
Journal of Algo-rithms.
In press.Manuel Bodirsky, Denys Duchier, Joachim Niehren, andSebastian Miele.
2003.
An efficient algorithm forweakly normal dominance constraints.
Available atwww.ps.uni-sb.de/Papers.Johan Bos.
1996.
Predicate logic unplugged.
In Amster-dam Colloquium, pages 133?143.Ann Copestake and Dan Flickinger.
An open-source grammar development environment and broad-coverage English grammar using HPSG.
In Confer-ence on Language Resources and Evaluation.Ann Copestake, Dan Flickinger, Ivan Sag, and Carl Pol-lard.
1999.
Minimal Recursion Semantics: An Intro-duction.
Manuscript, Stanford University.Ann Copestake, Alex Lascarides, and Dan Flickinger.2001.
An algebra for semantic construction inconstraint-based grammars.
In Proceedings of the39th ACL, pages 132?139, Toulouse, France.Markus Egg, Alexander Koller, and Joachim Niehren.2001.
The Constraint Language for Lambda Struc-tures.
Logic, Language, and Information, 10:457?485.Alexander Koller, Joachim Niehren, and Ralf Treinen.2001.
Dominance constraints: Algorithms and com-plexity.
In LACL?98, volume 2014 of LNAI, pages106?125.Alexander Koller, Joachim Niehren, and Stefan Thater.2003.
Bridging the gap between underspecificationformalisms: Hole semantics as dominance constraints.In EACL?03, April.
In press.Carl Pollard and Ivan Sag.
1994.
Head-driven PhraseStructure Grammar.
University of Chicago Press.Uwe Reyle.
1993.
Dealing with ambiguities by under-specification: Construction, representation and deduc-tion.
Journal of Semantics, 10(1).
