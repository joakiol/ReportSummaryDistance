Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, pages 399?408,Berlin, Germany, August 7-12, 2016. c?2016 Association for Computational LinguisticsGrapheme-to-Phoneme Models for (Almost) Any LanguageAliya Deri and Kevin KnightInformation Sciences InstituteDepartment of Computer ScienceUniversity of Southern California{aderi, knight}@isi.eduAbstractGrapheme-to-phoneme (g2p) models arerarely available in low-resource languages,as the creation of training and evaluationdata is expensive and time-consuming.
Weuse Wiktionary to obtain more than 650kword-pronunciation pairs in more than 500languages.
We then develop phoneme andlanguage distance metrics based on phono-logical and linguistic knowledge; apply-ing those, we adapt g2p models for high-resource languages to create models forrelated low-resource languages.
We pro-vide results for models for 229 adapted lan-guages.1 IntroductionGrapheme-to-phoneme (g2p) models convertwords into pronunciations, and are ubiquitous inspeech- and text-processing systems.
Due to thediversity of scripts, phoneme inventories, phono-tactic constraints, and spelling conventions amongthe world?s languages, they are typically language-specific.
Thus, while most statistical g2p learningmethods are language-agnostic, they are trained onlanguage-specific data?namely, a pronunciationdictionary consisting of word-pronunciation pairs,as in Table 1.Building such a dictionary for a new language isboth time-consuming and expensive, because it re-quires expertise in both the language and a notationsystem like the International Phonetic Alphabet,applied to thousands of word-pronunciation pairs.Unsurprisingly, resources have been allocated onlyto the most heavily-researched languages.
Global-Phone, one of the most extensive multilingual textand speech databases, has pronunciation dictionar-ies in only 20 languages (Schultz et al, 2013)1.1We have been unable to obtain this dataset.lang word pronunciationeng anybody e?
n i?
b ?
d i?pol ?o?
?dka z?
o w o n?
t ?
k aben ???
s ?
?
k t ?
?heb ??????
?
a l o m o tTable 1: Examples of English, Polish, Bengali,and Hebrew pronunciation dictionary entries, withpronunciations represented with the InternationalPhonetic Alphabet (IPA).word eng deu nldgift ?
?
f t?
?
?
f t ?
?
f tclass k?
l ?
s k l a?
s k l ?
ssend s e?
n d z ?
n t s ?
n tTable 2: Example pronunciations of English wordsusing English, German, and Dutch g2p models.For most of the world?s more than 7,100 lan-guages (Lewis et al, 2009), no data exists and themany technologies enabled by g2p models are in-accessible.Intuitively, however, pronouncing an unknownlanguage should not necessarily require largeamounts of language-specific knowledge or data.A native German or Dutch speaker, with no knowl-edge of English, can approximate the pronuncia-tions of an English word, albeit with slightly differ-ent phonemes.
Table 2 demonstrates that Germanand Dutch g2p models can do the same.Motivated by this, we create and evaluate g2pmodels for low-resource languages by adapting ex-isting g2p models for high-resource languages us-ing linguistic and phonological information.
To fa-cilitate our experiments, we create several notabledata resources, including a multilingual pronunci-ation dictionary with entries for more than 500 lan-guages.The contributions of this work are:399?
Using data scraped from Wiktionary, weclean and normalize pronunciation dictionar-ies for 531 languages.
To our knowledge, thisis the most comprehensive multilingual pro-nunciation dictionary available.?
We synthesize several named entities corporato create a multilingual corpus covering 384languages.?
We develop a language-independent distancemetric between IPA phonemes.?
We extend previous metrics for language-language distance with additional informationand metrics.?
We create two sets of g2p models for ?highresource?
languages: 97 simple rule-basedmodels extracted from Wikipedia?s ?IPAHelp?
pages, and 85 data-driven models builtfrom Wiktionary data.?
We develop methods for adapting these g2pmodels to related languages, and describe re-sults for 229 adapted models.?
We release all data and models.2 Related WorkBecause of the severe lack of multilingual pro-nunciation dictionaries and g2p models, differentmethods of rapid resource generation have beenproposed.Schultz (2009) reduces the amount of exper-tise needed to build a pronunciation dictionary, byproviding a native speaker with an intuitive rule-generation user interface.
Schlippe et al (2010)crawl web resources like Wiktionary for word-pronunciation pairs.
More recently, attempts havebeen made to automatically extract pronunciationdictionaries directly from audio data (Stahlberg etal., 2016).
However, the requirement of a na-tive speaker, web resources, or audio data specificto the language still blocks development, and thenumber of g2p resources remains very low.
Ourmethod avoids these issues by relying only on textdata from high-resource languages.Instead of generating language-specific re-sources, we are instead inspired by research oncross-lingual automatic speech recognition (ASR)by Vu and Schultz (2013) and Vu et al (2014),who exploit linguistic and phonetic relationshipsin low-resource scenarios.
Although these worksfocus on ASR instead of g2p models and rely onaudio data, they demonstrate that speech technol-ogy is portable across related languages.g2phwordtraininghpronh Mh?l pronl(a)g2ph?lwordMh?ltraininghpronl(b)Figure 1: Strategiesfor adapting existinglanguage resourcesthrough output map-ping (a) and trainingdata mapping (b).3 MethodGiven a low-resource language l without g2p rulesor training data, we adapt resources (either anexisting g2p model or a pronunciation dictio-nary) from a high-resource language h to createa g2p for l. We assume the existence of twomodules: a phoneme-to-phoneme distance metricphon2phon, which allows us to map between thephonemes used by h to the phonemes used by l,and a closest language module lang2lang, whichprovides us with related language h.Using these resources, we adapt resources fromh to l in two different ways:?
Output mapping (Figure 1a): We use g2phtopronounce wordl, then map the output to thephonemes used by l with phon2phon.?
Training data mapping (Figure 1b): We usephon2phon to map the pronunciations inh?s pronunciation dictionary to the phonemesused by l, then train a g2p model using theadapted data.The next sections describe how we collectdata, create phoneme-to-phoneme and language-to-language distance metrics, and build high-resource g2p models.4 DataThis section describes our data sources, which aresummarized in Table 3.4.1 PhoiblePhoible (Moran et al, 2014) is an online reposi-tory of cross-lingual phonological data.
We use400Phoible Wiki IPA Help tables Wiktionary1674 languages 97 languages 531 languages2155 lang.
inventories 24 scripts 49 scripts2182 phonemes 1753 graph.
segments 658k word-pron pairs37 features 1534 phon.
segments Wiktionary train Wiktionary testNE data 3389 unique g-p rules 85 languages 501 languages384 languages 42 scripts 45 scripts36 scripts 629k word-pron pairs 26k word-pron pairs9.9m NEsTable 3: Summary of data resources obtained from Phoible, named entity resources, Wikipedia IPA Helptables, and Wiktionary.
Note that, although our Wiktionary data technically covers over 500 languages,fewer than 100 include more than 250 entries (Wiktionary train).two of its components: language phoneme inven-tories and phonetic features.4.1.1 Phoneme inventoriesA phoneme inventory is the set of phonemesused to pronounce a language, represented in IPA.Phoible provides 2156 phoneme inventories for1674 languages.
(Some languages have multipleinventories from different linguistic studies.
)4.1.2 Phoneme feature vectorsFor each phoneme included in its phoneme in-ventories, Phoible provides information about37 phonological features, such as whether thephoneme is nasal, consonantal, sonorant, or a tone.Each phoneme thus maps to a unique feature vec-tor, with features expressed as +, -, or 0.4.2 Named Entity ResourcesFor our language-to-language distance metric, it isuseful to have written text in many languages.
Themost easily accessible source of this data is multi-lingual named entity (NE) resources.We synthesize 7 different NE corpora: Chinese-English names (Ji et al, 2009), Geonames (Vatantand Wick, 2006), JRC names (Steinberger et al,2011), corpora from LDC2, NEWS 2015 (Banchset al, 2015), Wikipedia names (Irvine et al,2010), and Wikipedia titles (Lin et al, 2011);to this, we also add multilingual Wikipedia titlesfor place names from an online English-languagegazetteer (Everett-Heath, 2014).
This yields a listof 9.9m named entities (8.9 not including Englishdata) across 384 languages, which include the En-2LDC2015E13, LDC2015E70, LDC2015E82,LDC2015E90, LDC2015E84, LDC2014E115, andLDC2015E91glish translation, named entity type, and script in-formation where possible.4.3 Wikipedia IPA Help tablesTo explain different languages?
phonetic notations,Wikipedia users have created ?IPA Help?
pages,3which provide tables of simple grapheme exam-ples of a language?s phonemes.
For example, onthe English page, the phoneme z has the examples?zoo?
and ?has.?
We automatically scrape thesetables for 97 languages to create simple grapheme-phoneme rules.Using the phon2phon distance metric and map-ping technique described in Section 5, we cleaneach table by mapping its IPA phonemes to the lan-guage?s Phoible phoneme inventory, if it exists.
Ifit does not exist, we map the phonemes to validPhoible phonemes and create a phoneme inventoryfor that language.4.4 Wiktionary pronunciation dictionariesIronically, to train data-driven g2p models forhigh-resource languages, and to evaluate ourlow-resource g2p models, we require pronunci-ation dictionaries for many languages.
A com-mon and successful technique for obtaining thisdata (Schlippe et al, 2010; Schlippe et al,2012a; Yao and Kondrak, 2015) is scraping Wik-tionary, an open-source multilingual dictionarymaintained by Wikimedia.
We extract uniqueword-pronunciation pairs from the English, Ger-man, Greek, Japanese, Korean, and Russian sitesof Wiktionary.
(Each Wiktionary site, while writ-ten in its respective language, contains word en-tries in multiple languages.
)3https://en.wikipedia.org/wiki/Category:International_Phonetic_Alphabet_help401Since Wiktionary data is very noisy, we ap-ply length filtering as discussed by Schlippe etal.
(2012b), as well as simple regular expression fil-ters for HTML.
We also map Wiktionary pronun-ciations to valid Phoible phonemes and languagephoneme inventories, if they exist, as discussed inSection 5.
This yields 658k word-pronunciationpairs for 531 languages.
However, this data is notuniformly distributed across languages?German,English, and French account for 51% of the data.We extract test and training data as follows: Foreach language with at least 1 word-pron pair witha valid word (at least 3 letters and alphabetic), weextract a test set of a maximum of 200 valid words.From the remaining data, for every language with50 or more entries, we create a training set with theavailable data.Ultimately, this yields a training set with 629kword-pronunciation pairs in 85 languages, and atest set with 26k pairs in 501 languages.5 Phonetic Distance MetricAutomatically comparing pronunciations acrosslanguages is especially difficult in text form.
Al-though two versions of the ?sh?
sound, ???
and ?
?,?sound very similar to most people and very dif-ferent from ?m,?
to a machine all three charactersseem equidistant.Previous research (?zbal and Strapparava,2012; Vu and Schultz, 2013; Vu et al, 2014) hasaddressed this issue by matching exact phonemesby character or manually selecting comparison fea-tures; however, we are interested in an automaticmetric covering all possible IPA phoneme pairs.We handle this problem by using Phoible?sphoneme feature vectors to create phon2phon, adistance metric between IPA phonemes.
In thissection we also describe how we use this met-ric to clean open-source data and build phoneme-mapping models between languages.5.1 phon2phonAs described in Section 4.1.2, each phoneme inPhoible maps to a unique feature vector; eachfeature value is +, -, or 0, representing whethera feature is present, not present, or not applica-ble.
(Tones, for example, can never be syllabic orstressed.
)We convert each feature vector into a bit repre-sentation by mapping each value to 3 bits.
+ to 110,- to 101, and 0 to 000.
This captures the idea thatlang word scraped cleanedces j?d ?jo?d j o dpus ????
t?sa?lor t s a l o rkan ???
bh?rata b h a ?
a t ?
ahye ??????
ot???p??
o?
t ??
a p a l ?ukr ??????
t?r??
?n t ?
a r ?
h a n?Table 4: Examples of scraped and cleaned Wik-tionary pronunciation data in Czech, Pashto, Kan-nada, Armenian, and Ukrainian.Data: all phonemes P , scraped phoneme setS, language inventory TResult: Mapping table Minitialize empty table M ;for psin S doif ps/?
P and ASCII(ps) ?
P thenps= ASCII(ps);endpp= min?pt?T(phon2phon(ps, pt));add ps?
ppto M ;endAlgorithm 1: A condensed version of our pro-cedure for mapping scraped phoneme sets fromWikipedia and Wiktionary to Phoible languageinventories.
The full algorithm handles segmen-tation of the scraped pronunciation and heuristi-cally promotes coverage of the Phoible inventory.the features + and - are more similar than 0.We then compute the normalized Hamming dis-tance between every phoneme pair p1,2with fea-ture vectors f1,2and feature vector length n as fol-lows:phon2phon(p1, p2) =?ni=11, iff i1?= fi2n5.2 Data cleaningWe now combine phon2phon distances andPhoible phoneme inventories to map phonemesfrom scraped Wikipedia IPA help tables andWiktionary pronunciation dictionaries to Phoiblephonemes and inventories.
We describe a con-densed version of our procedure in Algorithm 1,and provide examples of cleaned Wiktionary out-put in Table 4.5.3 Phoneme mapping modelsAnother application of phon2phon is to transformpronunciations in one language to another lan-guage?s phoneme inventory.
We can do this by402lang avg phon scriptEnglish German Latin FrenchHindi Gujarati Bengali SanskritVietnamese Indonesian Sindhi PolishTable 5: Closest languages with Wikipedia ver-sions, based on lang2lang averaged metrics, pho-netic inventory distance, and script distance.creating a single-state weighted finite-state trans-ducer (wFST) W for input language inventory Iand output language inventory O:?pi?I,po?OW.add(pi, po, 1?
phon2phon(pi, po))W can then be used to map a pronunciation toa new language; this has the interesting effect ofmodeling accents by foreign-language speakers:think in English (pronounced "?
?
?
k?")
becomes"s ?
?
?
k" in German; the capital city Dhaka (pro-nounced in Bengali with a voiced aspirated "??")
be-comes the unaspirated "d ?
k?
?"
in English.6 Language Distance MetricSince we are interested in mapping high-resourcelanguages to low-resource related languages, animportant subtask is finding the related languagesof a given language.The URIEL Typological Compendium (Littellet al, 2016) is an invaluable resource for this task.By using features from linguistic databases (in-cluding Phoible), URIEL provides 5 distance met-rics between languages: genetic, geographic, com-posite (a weighted composite of genetic and ge-ographic), syntactic, and phonetic.
We extendURIEL by adding two additional metrics, provid-ing averaged distances over all metrics, and addingadditional information about resources.
This cre-ates lang2lang, a table which provides distancesbetween and information about 2,790 languages.6.1 Phoneme inventory distanceAlthough URIEL provides a distance metric be-tween languages based on Phoible features, it onlytakes into account broad phonetic features, such aswhether each language has voiced plosives.
Thiscan result in some non-intuitive results: based onthis metric, there are almost 100 languages pho-netically equivalent to the South Asian languageGujarati, among them Arawak and Chechen.To provide a more fine-grained phonetic dis-tance metric, we create a phoneme inventory dis-tance metric using phon2phon.
For each pair oflanguage phoneme inventories L1,2in Phoible, wecompute the following:d(L1, L2) =?p1?L1minp2?L2(phon2phon(p1, p2))and normalize by dividing by?id(L1, Li).6.2 Script distanceAlthough Urdu is very similar to Hindi, its dif-ferent alphabet and writing conventions wouldmake it difficult to transfer an Urdu g2p modelto Hindi.
A better candidate language would beNepali, which shares the Devanagari script, or evenBengali, which uses a similar South Asian script.A metric comparing the character sets used by twolanguages is very useful for capturing this relation-ship.We first use our multilingual named entity datato extract character sets for the 232 languages withmore than 500 NE pairs; then, we note that Uni-code character names are similar for linguisticallyrelated scripts.
This is most notable in South Asianscripts: for example, the Bengali?, Gujarati ?, andHindi ?
have Unicode names BENGALI LETTERKA, GUJARATI LETTER KA, and DEVANAGARILETTER KA, respectively.We remove script, accent, and form identifiersfrom the Unicode names of all characters in ourcharacter sets, to create a set of reduced characternames used across languages.
Then we create a bi-nary feature vector f for every language, with eachfeature indicating the language?s use of a reducedcharacter (like LETTER KA).
The distance betweentwo languages L1,2can then be computed with aspatial cosine distance:d(L1, L2) = 1?f1?
f2?f1?2?f2?26.3 Resource informationEach entry in our lang2lang distance table alsoincludes the following features for the second lan-guage: the number of named entities, whether it isin Europarl (Koehn, 2005), whether it has its ownWikipedia, whether it is primarily written in thesame script as the first language, whether it has anIPA Help page, whether it is in our Wiktionary testset, and whether it is in our Wiktionary training set.Table 5 shows examples of the closest languagesto English, Hindi, and Vietnamese, according todifferent lang2lang metrics.4030 2000 4000 6000 8000 10000# training word-pronunciation pairs0102030405060PERzhoengtglrushbsFigure 2: Training data size vs.
PER for 85 mod-els trained from Wiktionary.
Labeled languages:English (eng), Serbo-Croatian (hbs), Russian (rus),Tagalog (tgl), and Chinese macrolanguage (zho).7 Evaluation MetricsThe next two sections describe our high-resourceand adapted g2p models.
To evaluate these models,we compute the following metrics:?
% of words skipped: This shows the coverageof the g2p model.
Some g2p models do notcover all character sequences.
All other met-rics are computed over non-skipped words.?
word error rate (WER): The percent of incor-rect 1-best pronunciations.?
word error rate 100-best (WER 100): Thepercent of 100-best lists without the correctpronunciation.?
phoneme error rate (PER): The percent of er-rors per phoneme.
A PER of 15.0 indicatesthat, on average, a linguist would have to edit15 out of 100 phonemes of the output.We then average these metrics across all lan-guages (weighting each language equally).8 High Resource g2p ModelsWe now build and evaluate g2p models for the?high-resource?
languages for which we have ei-ther IPA Help tables or sufficient training data fromWiktionary.
Table 6 shows our evaluation of thesemodels on Wiktionary test data, and Table 7 showsresults for individual languages.8.1 IPA Help modelsWe first use the rules scraped from Wikipedia?sIPA Help pages to build rule-based g2p models.We build a wFST for each language, with a pathfor each rule g ?
p and weight w = 1/count(g).This method prefers rules with longer graphemesegments; for example, for the word tin, the output"?
n" is preferred over the correct "t?
?
n" because ofthe rule ti??.
We build 97 IPA Help models, buthave test data for only 91?some languages, likeMayan, do not have any Wiktionary entries.As shown in Table 6, these rule-based modelsdo not perform very well, suffering especially froma high percentage of skipped words.
This is be-cause IPA Help tables explain phonemes?
relation-ships to graphemes, rather than vice versa.
Thus,the English letter x is omitted, since its compositephonemes are better explained by other letters.8.2 Wiktionary-trained modelsWe next build models for the 85 languages inour Wiktionary train data set, using the wFST-based Phonetisaurus (Novak et al, 2011) andMITLM (Hsu and Glass, 2008), as described byNovak et al(2012).
We use a maximum of 10kpairs of training data, a 7-gram language model,and 50 iterations of EM.These data-driven models outperform IPA Helpmodels by a considerable amount, achieving aWER of 44.69 and PER of 15.06 averaged acrossall 85 languages.
Restricting data to 2.5k or moretraining examples boosts results to a WER of 28.02and PER of 7.20, but creates models for only 29languages.However, in some languages good results are ob-tained with very limited data; Figure 2 shows thevarying quality across languages and data avail-ability.8.3 Unioned modelsWe also use our rule-based IPA Help tables to im-prove Wiktionary model performance.
We accom-plish this very simply, by prepending IPA helprules like the German sch??
to the Wiktionarytraining data as word-pronunciation pairs, thenrunning the Phonetisaurus pipeline.Overall, the unioned g2p models outperformboth the IPA help and Wiktionary models; how-ever, as shown in Table 7, the effects vary acrossdifferent languages.
It is unclear what effect lan-guage characteristics, quality of IPA Help rules,and training data size have on unioned model im-provement.404model # langs % skip WER WER 100 PERipa-help 91 21.49 78.13 59.18 35.36wiktionary 85 4.78 44.69 23.15 15.06unioned 85 3.98 44.17 21.97 14.70ipa-help 56 22.95 82.61 61.57 35.51wiktionary 56 3.52 40.28 20.30 13.06unioned 56 2.31 39.49 18.51 12.52Table 6: Results for high-resource models.
The top portion of the table shows results for all models; thebottom shows results only for languages with both IPA Help and Wiktionary models.lang ben tgl tur deu# train 114 126 2.5k 10kipa-help 100.0 64.8 69.0 40.2wikt 85.6 34.2 39.0 32.5unioned 66.2 36.2 39.0 24.5Table 7: WER scores for Bengali, Tagalog,Turkish, and German models.
Unioned modelswith IPA Help rules tend to perform better thanWiktionary-only models, but not consistently.9 Adapted g2p ModelsHaving created a set of high-resource modelsand our phon2phon and lang2lang metrics, wenow explore different methods for adapting high-resource models and data for related low-resourcelanguages.
For comparable results, we restrict theset of high-resource languages to those covered byboth our IPA Help and Wiktionary data.9.1 No mappingThe simplest experiment is to run our g2p modelson related low-resource languages, without adap-tation.
For each language l in our test set, wedetermine the top high-resource related languagesh1,2,...according to the lang2lang averaged met-ric that have both IPA Help and Wiktionary dataand the same script, not including the language it-self.
For IPA Help models, we choose the 3 mostrelated languages h1,2,3and build a g2p modelfrom their combined g-p rules.
For Wiktionaryand unioned models, we compile 5k words fromthe closest languages h1,2,...such that each h con-tributes no more than one third of the data (addingIPA Help rules for unioned models) and train amodel from the combined data.For each test word-pronunciation pair, we triv-ially map the word?s letters to the characters usedin h1,2,...by removing accents where necessary; wethen use the high-resource g2p model to producea pronunciation for the word.
For example, ourCzech IPA Help model uses a model built from g-prules from Serbo-Croatian, Polish, and Slovenian;the Wiktionary and unioned models use data andrules from these languages and Latin as well.This expands 56 g2p models (the languages cov-ered by both IPA Help and Wiktionary models) tomodels for 211 languages.
However, as shown inTable 8, results are very poor, with a very highWER of 92% using the unioned models and a PERof more than 50%.
Interestingly, IPA Help modelsperform better than the unioned models, but this isprimarily due to their high skip rate.9.2 Output mappingWe next attempt to improve these results by creat-ing a wFST that maps phonemes from the inven-tories of h1,2...to l (as described in Section 5.3).As shown in Figure 1a, by chaining this wFST toh1,2...?s g2p model, we map the g2p model?s outputphonemes to the phonemes used by l. In each basemodel type, this process considerably improves ac-curacy over the no mapping approach; however,the IPA Help skip rate increases (Table 8).9.3 Training data mappingWe now build g2p models for l by creating syn-thetic data for the Wiktionary and unioned mod-els, as in Figure 1b.
After compiling word-pronunciation pairs and IPA Help g-p rules fromclosest languages h1,2,..., we then map the pronun-ciations to l and use the new pronunciations astraining data.
We again create unioned models byadding the related languages?
IPA Help rules to thetraining data.This method performs slightly worse in accu-racy than output mapping, a WER of 87%, but hasa much lower skip rate of 7%.405method base model # langs % skip WER WER 100 PERipa-help 211 12.46 91.57 78.96 54.84no mapping wikt 211 8.99 93.15 80.36 57.07unioned 211 8.54 92.38 79.26 57.21ipa-help 211 12.68 85.45 67.07 47.94output mapping wikt 211 15.00 86.48 66.20 46.84unioned 211 11.72 84.82 63.63 46.25training data mapping wikt 211 8.55 87.40 70.94 48.89unioned 211 7.19 87.36 70.75 47.48rescripted wikt +10 15.94 93.66 81.76 56.37unioned +10 14.97 94.45 80.68 57.35final wikt/unioned 229 6.77 88.04 69.80 48.01Table 8: Results for adapted g2p models.
Final adapted results (using the 85 languages covered by Wik-tionary and unioned high-resource models, as well as rescripting) cover 229 languages.lang method base model rel langs word gold hypeng no mapping ipa-help deu, nld, swe fuse f j u?
z f ?
s ?arz output mapping unioned fas, urd ?????
b ??
n?
?
u?
b a n?
d?
?
u?afr training mapping unioned nld, lat, isl dood d ?
t d u?
tsah training mapping unioned rus, bul, ukr ???????
k a t ?
?
r ?
?
k k a t ?
i r ?
i kkan rescripted unioned hin, ben ?????
d?
u ?
??
a d??
u?
?
?
?guj rescripted unioned san, ben, hin ????????
k ?
o e ?
?
a k ?
??
?
?
?
aTable 9: Sample words, gold pronunciations, and hypothesis pronunciations for English, Egyptian Arabic,Afrikaans, Yakut, Kannada, and Gujarati.9.4 RescriptingAdaptation methods thus far have required that hand l share a script.
However, this excludes lan-guages with related scripts, like Hindi and Bengali.We replicate our data mapping experiment, butnow allow related languages h1,2,...with differentscripts from l but a script distance of less than 0.2.We then build a simple ?rescripting?
table based onmatching Unicode character names; we can thenmap not only h?s pronunciations to l?s phonemeset, but also h?s word to l?s script.Although performance is relatively poor, re-scripting adds 10 new languages, including Telugu,Gujarati, and Marwari.9.5 DiscussionTable 8 shows evaluation metrics for all adaptationmethods.
We also show results using all 85 Wik-tionary models (using unioned where IPA Help isavailable) and rescripting, which increases the to-tal number of languages to 229.
Table 9 providesexamples of output with different languages.In general, mapping combined with IPA Helprules in unioned models provides the best results.Training data mapping achieves similar scores asoutput mapping as well as a lower skip rate.
Wordskipping is problematic, but could be lowered bycollecting g-p rules for the low-resource language.Although the adapted g2p models make manyindividual phonetic errors, they nevertheless cap-ture overall pronunciation conventions, without re-quiring language-specific data or rules.
Specificpoints of failure include rules that do not exist inrelated languages (e.g., the silent ?e?
at the end of?fuse?
and the conversion of "d??"
to "?"
in Egyp-tian Arabic), mistakes in phoneme mapping, andoverall ?pronounceability?
of the output.9.6 LimitationsAlthough our adaptation strategies are flexible,several limitations prevent us from building a g2pmodel for any language.
If there is not enoughinformation about the language, our lang2langtable will not be able to provide related high-resource languages.
Additionally, if the language?sscript is not closely related to another language?sand thus cannot be rescripted (as with Thai and Ar-menian), we are not able to adapt related g2p dataor models.40610 ConclusionUsing a large multilingual pronunciation dic-tionary from Wiktionary and rule tables fromWikipedia, we build high-resource g2p modelsand show that adding g-p rules as training datacan improve g2p performance.
We then lever-age lang2lang distance metrics and phon2phonphoneme distances to adapt g2p resources for high-resource languages for 229 related low-resourcelanguages.
Our experiments show that adaptingtraining data for low-resource languages outper-forms adapting output.
To our knowledge, theseare the most broadly multilingual g2p experimentsto date.With this publication, we release a number ofresources to the NLP community: a large multilin-gual Wiktionary pronunciation dictionary, scrapedWikipedia IPA Help tables, compiled named entityresources (including a multilingual gazetteer), andour phon2phon and lang2lang distance tables.4Future directions for this work include furtherimproving the number and quality of g2p mod-els, as well as performing external evaluations ofthe models in speech- and text-processing tasks.We plan to use the presented data and methods forother areas of multilingual natural language pro-cessing.11 AcknowledgementsWe would like to thank the anonymous re-viewers for their helpful comments, as well asour colleagues Marjan Ghazvininejad, JonathanMay, Nima Pourdamghani, Xing Shi, and AshishVaswani for their advice.
We would also like tothank Deniz Yuret for his invaluable help withdata collection.
This work was supported in partby DARPA (HR0011-15-C-0115) and ARL/ARO(W911NF-10-1-0533).
Computation for the workdescribed in this paper was supported by the Uni-versity of Southern California?s Center for High-Performance Computing.ReferencesRafael E Banchs, Min Zhang, Xiangyu Duan, HaizhouLi, and A Kumaran.
2015.
Report of NEWS 2015machine transliteration shared task.
In Proc.
NEWSWorkshop.4Instructions for obtaining this data are available at the au-thors?
websites.John Everett-Heath.
2014.
The Concise Dictionary ofWorld Place-Names.
Oxford University Press, 2ndedition.Bo-June Paul Hsu and James R Glass.
2008.
Iterativelanguage model estimation: efficient data structure& algorithms.
In Proc.
Interspeech.Ann Irvine, Chris Callison-Burch, and Alexandre Kle-mentiev.
2010.
Transliterating from all languages.In Proc.
AMTA.Heng Ji, Ralph Grishman, Dayne Freitag, MatthiasBlume, John Wang, Shahram Khadivi, Richard Zens,and Hermann Ney.
2009.
Name extraction andtranslation for distillation.
Handbook of Natu-ral Language Processing and Machine Translation:DARPA Global Autonomous Language Exploitation.Philipp Koehn.
2005.
Europarl: A parallel corpus forstatistical machine translation.
In Proc.
MT Summit.M Paul Lewis, Gary F Simons, and Charles D Fennig.2009.
Ethnologue: Languages of the world.
SILinternational, Dallas.Wen-Pin Lin, Matthew Snover, and Heng Ji.
2011.
Un-supervised language-independent name translationmining from Wikipedia infoboxes.
In Proc.
Work-shop on Unsupervised Learning in NLP.Patrick Littell, David Mortensen, and Lori Levin.2016.
URIEL.
Pittsburgh: Carnegie Mellon Uni-versity.
http://www.cs.cmu.edu/~dmortens/uriel.html.
Accessed: 2016-03-19.Steven Moran, Daniel McCloy, and Richard Wright, ed-itors.
2014.
PHOIBLE Online.
Max Planck Institutefor Evolutionary Anthropology, Leipzig.Josef R Novak, D Yang, N Minematsu, and K Hirose.2011.
Phonetisaurus: A WFST-driven phoneticizer.The University of Tokyo, Tokyo Institute of Technol-ogy.Josef R Novak, Nobuaki Minematsu, and Keikichi Hi-rose.
2012.
WFST-based grapheme-to-phonemeconversion: open source tools for alignment, model-building and decoding.
In Proc.
International Work-shop on Finite State Methods and Natural LanguageProcessing.G?zde ?zbal and Carlo Strapparava.
2012.
A compu-tational approach to the automation of creative nam-ing.
In Proc.
ACL.Tim Schlippe, Sebastian Ochs, and Tanja Schultz.2010.
Wiktionary as a source for automatic pronun-ciation extraction.
In Proc.
Interspeech.Tim Schlippe, Sebastian Ochs, and Tanja Schultz.2012a.
Grapheme-to-phoneme model generation forIndo-European languages.
In Proc.
ICASSP.Tim Schlippe, Sebastian Ochs, Ngoc Thang Vu, andTanja Schultz.
2012b.
Automatic error recovery forpronunciation dictionaries.
In Proc.
Interspeech.407Tanja Schultz, Ngoc Thang Vu, and Tim Schlippe.2013.
GlobalPhone: A multilingual text & speechdatabase in 20 languages.
In Proc.
ICASSP.Tanja Schultz.
2009.
Rapid language adaptation toolsand technologies for multilingual speech processingsystems.
In Proc.
IEEE Workshop on AutomaticSpeech Recognition.Felix Stahlberg, Tim Schlippe, Stephan Vogel, andTanja Schultz.
2016.
Word segmentation andpronunciation extraction from phoneme sequencesthrough cross-lingual word-to-phoneme alignment.Computer Speech & Language, 35:234 ?
261.Ralf Steinberger, Bruno Pouliquen, Mijail Kabadjov,and Erik Van der Goot.
2011.
JRC-Names: A freelyavailable, highly multilingual named entity resource.In Proc.
Recent Advances in Natural Language Pro-cessing.Bernard Vatant and Marc Wick.
2006.
Geonames on-tology.Online at http://www.geonames.org/ontology.Ngoc Thang Vu and Tanja Schultz.
2013.
Multilingualmultilayer perceptron for rapid language adaptationbetween and across language families.
In Proc.
In-terspeech.Ngoc Thang Vu, David Imseng, Daniel Povey,Petr Motlicek Motlicek, Tanja Schultz, and Herv?Bourlard.
2014.
Multilingual deep neural networkbased acoustic modeling for rapid language adapta-tion.
In Proc.
ICASSP.Lei Yao and Grzegorz Kondrak.
2015.
Joint generationof transliterations from multiple representations.
InProc.
NAACL HLT.408
