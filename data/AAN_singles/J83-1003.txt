Technical CorrespondenceQuest ion ing  the  Need for  ParsingI l l - formed InputsParsing of ill-formed input may be an important issuein the design of robust natural language systems, aspointed out by Eastman and McLean 1981.
The un-predictable range of user input in natural languagerequires a mechanism to deal with unacceptable syn-tactic constructs.
However, human behavior is compli-cated, and the capacity to adapt our mode of expres-sion to the varying contexts in which we communicateshould not be overlooked.
Because of our adaptabili-ty, particularly in patterns of speech, the ability toparse ill-formed inputs may not be a critical require-ment for all natural anguage systems.For example, we conducted an experiment hatsimulated a voice-driven office automation system,where subjects were provided with a tutorial and askedto solve simple problems using voice commands.
1 Thepurpose of the experiment was to test the usefulnessof our proposed system and to gather data for thedesigners of the natural anguage processor we plannedto implement (Biermann et al 1983).The subjects in the experiment were seated in frontof a terminal display with a microphone and were in-structed to speak their commands using discretespeech (about one word per second) or slow connect-ed speech.
The monitor sat in a separate room, listedto their requests on earphones, and typed the corre-sponding commands to the system.
In this way, sub-jects experienced a system that responded to spokenEnglish sentences.
If a command was not judged tobe recognizable by our voice recognition system orparsable by our implemented grammar, the subjectreceived an error message and was forced to rephrasethe request.The surprising result of this experiment was thatthe subjects consistently spoke well-formed sentenceswhen forced into the regimen of slow methodicalspeech and had very few inputs rejected on the basisof improper syntax.
We had expected to find frequentoccurrences of the three classes of ill-formed inputdescribed by McLean 1981, yet none of our subjectsexhibited such errors to a significant degree.Out of more than 1600 sentences poken by our 15subjects, only 10 utterances were rejected as ungram-matical inputs.
Five of the ill-formed sentences con-tained incomplete noun phrases not processed by oursystem (e.g., "Combine the first paragraph with thesecond \[paragraph\].
"),  and the remainder involvedskipped articles (e.g., "Remove period.
", rather than"Remove the period.").
We also found that relativelysimple syntax was used, with a total of only six sen-tences containing conjunctions and with a notableabsence of relative clauses.The subjects were required to begin each utterancewith an imperative verb and to use words from a listof recognized vocabulary (in this case, some 50 wordsfrom the office domain).
These constraints may havecontributed to the lack of syntactic complexity wenoted, but it is still remarkable that during an hour-long session, under the pressures of problem-solving,subjects routinely managed to form grammaticallyacceptable inputs.As a consequence of these observations, we havepractically discontinued our efforts to parse ill-formedsentences.
For pragmatic reasons, our work in thatarea has become a low priority in the overall develop-ment of a voice-driven atural anguage system.Linda FinemanDepartment of Computer ScienceDuke UniversityDurham, NC 27706ReferencesBiermann, A., Rodman, R., Ballard, B., Betaneourt, T., Bilbro, G.,Deas, H., Fineman, L., Fink, P., Gilbert, K., Gregory, D., andHeidlage, F. 1983 Interactive natural language problem solv-ing: a pragmatic approach.
Paper presented at the Conferenceon Applied Natural Language Processing, Santa Monica, CA(February).Eastman, C.M.
and McLean, D.S.
1981 On the need for parsingill-formed input.
AJCL 7 4 (October-December), TechnicalCorrespondence.McLean, D.S.
1981 METASZK: a natural language front end toSystem 2000.
M.S.
thesis.
Department of Mathematics andComputer Science, Florida State University, Tallahassee, FL(March).1 This work is supported by the IBM Corporation under GSDagreement o.
260880.22 American Journal of Computational Linguistics, Volume 9, Number 1, January-March 1983
