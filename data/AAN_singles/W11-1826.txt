Proceedings of BioNLP Shared Task 2011 Workshop, pages 164?172,Portland, Oregon, USA, 24 June, 2011. c?2011 Association for Computational LinguisticsFrom Graphs to Events: A Subgraph Matching Approachfor Information Eextraction from Biomedical TextHaibin Liu, Ravikumar Komandur, Karin VerspoorCenter for Computational PharmacologyUniversity of Colorado School of MedicinePO Box 6511, MS 8303, Aurora, CO, 80045 USAAbstractWe participated in the BioNLP Shared Task 2011,addressing the GENIA event extraction (GE) andthe Epigenetics and Post-translational Modifica-tions (EPI) tasks.
A graph-based approach isemployed to automatically learn rules for detect-ing biological events in the life-science literature.The event rules are learned by identifying thekey contextual dependencies from full syntacticparsing of annotated text.
Event recognition isperformed by searching for an isomorphism be-tween event rules and the dependency graphs ofsentences in the input texts.
While we exploredmethods such as performance-based rule rank-ing to improve precision, we merged rules acrossmultiple event types in order to increase recall.We achieved a 41.13% F-score in detecting eventsof nine types in the Task 1 of the GE task, and a52.67% F-score in identifying events across fif-teen types in the core task of the EPI task.
Ourperformance on both tasks is comparable to thestate-of-the-art systems.
Our approach does notrequire any external domain-specific resources.The consistent performance on the two tasks sup-ports the claim that the method generalizes wellto extract events from different domains wheretraining data is available.1 IntroductionRecent research in information extraction in the biolog-ical domain has focused on extracting semantic eventsinvolving genes or proteins, such as binding events orpost-translational modifications.
To date, most of thebiological knowledge about these events has only beenavailable in the form of unstructured text in scientificarticles (Abulaish and Dey, 2007; Ananiadou et al,2010).When a biological event is described in text, it canbe analyzed by recognizing its type, the trigger that sig-nals the event, and one or more event arguments.
TheBioNLP-ST 2009 (Kim et al, 2009) focused on therecognition of semantically typed, complex events inthe biological literature.
Although the best-performingsystem achieved a 51.95% F-score in identifying eventsacross nine types, only 4 of the rest 23 participatingteams obtained an F-score in the 40% range.
This sug-gests that the problem of biological event extraction isdifficult and far from solved.Graphs provide a powerful primitive for modelingbiological data such as pathways and protein interac-tion networks (Tian et al, 2007; Yan et al, 2006).
Morerecently, the dependency representations obtained fromfull syntactic parsing, with its ability to reveal long-range dependencies, has shown an advantage in bi-ological relation extraction over the traditional PennTreebank-style phrase structure trees (Miyao et al,2009).
Since the dependency representation mapsstraightforwardly onto a directed graph, operations ongraphs can be naturally applied to the problem of bio-logical event extraction.We participated in the BioNLP-ST 2011 (Kim et al,2011a), and applied a graph matching-based approach(Liu et al, 2010) to tackling the Task 1 of the GE-NIA event extraction (GE) task (Kim et al, 2011b), andthe core task of the Epigenetics and Post-translationalModifications (EPI) task (Ohta et al, 2011), two maintasks of the BioNLP-ST 2011.
Event recognition isperformed by searching for an isomorphism betweendependency representations of automatically learnedevent rules and complete sentences in the input texts.This process is treated as a subgraph matching problem,which corresponds to the search for a subgraph isomor-phic to a rule graph within a sentence graph.
Whilewe explored methods such as performance-based ruleranking to improve the precision of the GE and EPItasks, we merged rules across multiple event types inorder to increase the recall of the EPI task.The rest of the paper is organized as follows: In Sec-tion 2, we introduce the BioNLP Shared Task 2011.Section 3 describes the subgraph matching-based eventextraction method.
Section 4 and Section 5 elabo-164rate the implementation details and our performancerespectively.
Finally, Section 6 summarizes the paperand introduces future work.2 BioNLP Shared Task 2011The BioNLP-ST 2011 is the extension of the BioNLP-ST 2009 that focused on the recognition of events in thebiological literature.
The BioNLP-ST 2011 extends theprevious task in three directions: the type of the inves-tigated text, the domain of the subject, and the targetedevent types.
As a result, the shared task was organizedinto four independent tasks: GENIA Event ExtractionTask (GE), Epigenetics and Post-translational Modifi-cations Task (EPI), Infectious Diseases Task (ID) andBacteria Track.The definition of the GE task remained the same asthe BioNLP-ST 2009.
However, additional annotatedtexts that come from full papers were provided togetherwith the dataset of the 2009 task to generalize the taskfrom PubMed abstracts to full text articles.
The pri-mary task of the GE task was to detect biological eventsof nine types such as protein binding and regulation,given the annotation of protein names.
It was requiredto extract type, trigger, and primary arguments of eachevent.
This task is an example of extraction of seman-tically typed, complex events for which the argumentscan also be other events.
Such embedding results in anested structure that captures the underlying biologicalstatements more accurately.Different from the subject domain of the GE task ontranscription factors in human blood cells, the EPI taskfocused on events related to epigenetic change, includ-ing DNA methylation and histone modification, as wellas other common post-translational protein modifica-tions.
The core task followed the definition for Phos-phorylation event extraction in the 2009 task, and ex-tended that basic event type to a total of fifteen typesincluding both positive and negative variants, for ex-ample Acetylation and Deacetylation.
The task datasetwas prepared from relevant PubMed abstracts, withadditional evidence sentences from databases such asPubMeth (Ongenaert et al, 2007).
Given the annota-tion of protein names, the core task required to extracttype, trigger, and primary arguments of each event.We focused on the primary task of GE and the coretask of EPI, and tackled the event extraction problem inboth cases using a graph matching-based method.inhibit-2/VBPInterferons-1/NNSnsubjactivation-3/NNdobjinducing-12/VBGprepc_byBIO_Entity-5/NNP(STAT6)prep_ofBIO_Entity-7/NNP(interleukin 4)prep_bymonocytes-10/NNSprep_inhuman-9/JJamodexpression-15/NNdobjBIO_Entity-13/NNP(SOCS-1)nngene-14/NNnnFigure 1: Dependency Graph Example3 Subgraph Matching-based Event Extraction3.1 Dependency RepresentationThe dependency representation of a sentence is formedby tokens in the sentence and binary relations betweenthem.
A single dependency relation is representedas relation(governor, dependent), where governor anddependent are tokens, and relation is a type of thegrammatical dependency relation.
This representationis essentially a labeled directed graph, which is nameddependency graph and defined as follows:Definition 1.
A dependency graph is a pair of setsG = (V,E), where V is a set of nodes that correspondto the tokens in a sentence, and E is a set of directededges, for which the edge labels are types of depen-dency relations between the tokens, and the edge direc-tion is from governor to dependent node.Figure 1 illustrates the dependency graph for the sen-tence: ?Interferons inhibit activation of STAT6 by in-terleukin 4 in human monocytes by inducing SOCS-1gene expression.?
(MEDLINE: 10485906).
The tokennumber in the sentence is appended to each token inorder to differentiate identical tokens that co-occur in asentence.
All the protein names in the sentence havebeen replaced with a unified tag ?BIO Entity?.
ThePOS tag of each token is noted.
?BIO Entity?
tokensare uniformly tagged as proper nouns.3.2 Event Rule InductionThe premise of our work is that there is a set of fre-quently occurring event rules that match a majority of165stated events about protein biology.
We consider thatan event rule encodes the detailed description and char-acterizes the typical contextual structure of a group ofbiological events.
The rules are learned from labeledtraining sentences using a graph-based rule inductionmethod (Liu et al, 2010), and we briefly describe thealgorithm as follows.Starting with the dependency graph of each trainingsentence, edge directions are first removed so that thedirected graph is transformed into an undirected graph,where a path must exist between any two nodes sincethe graph is always connected.
For each gold event, theshortest dependency path in the undirected graph con-necting the event trigger nodes to each event argumentnode is selected.
The union of all shortest dependencypaths is then computed, and the original directed de-pendency representation of the path union is retrievedand used as the graph representation of the event.For multi-token event triggers, the shortest depen-dency path connecting the node of every trigger tokento the node of each event argument is selected, and theunion of the paths is then computed for each trigger.For regulation events, when a sub-event is used as anargument, only the type and the trigger of the sub-eventare preserved as the argument of the main events.
Theshortest dependency path is extracted so as to connectthe trigger nodes of the main event to the trigger nodesof the sub-event.
In case that there exists more thanone shortest path, all of the paths are considered.
As aresult, each gold event is transformed into the form ofa biological event rule.
The algorithm is elaborated inmore detail in (Liu et al, 2010).
The obtained rules arecategorized in terms of the event types of the tasks.3.3 Sentence MatchingWe attempted to match event rules to each testing sen-tence to extract events from the sentence using a sen-tence matching approach.
Since the event rules and thesentences all possess a dependency graph, the matchingprocess is a subgraph matching problem, which cor-responds to the search for a subgraph isomorphic toan event rule graph within the graph of a testing sen-tence.
The subgraph matching problem is also calledsubgraph isomorphism, defined in this work as follows:Definition 2.
An event rule graph Gr = (Vr, Er)is isomorphic to a subgraph of a sentence graph Gs =(Vs, Es), denoted by Gr ?= Ss ?
Gs, if there is aninjective mapping f : Vr ?
Vs such that, for everydirected pair of nodes vi, vj ?
Vr, if (vi, vj) ?
Er then(f(vi), f(vj)) ?
Es, and the edge label of (vi, vj) isthe same as the edge label of (f(vi), f(vj)).The subgraph isomorphism problem is NP-complete(Cormen et al, 2001).
A number of algorithms havebeen designed to tackle the problem of subgraph iso-morphism in different applications (Ullmann, 1976;Cordella et al, 2004; Pelillo et al, 1999).
Consideringthat the graphs of rules and sentences involved in thematching process are small, a simple subgraph match-ing algorithm using a backtracking approach (Liu etal., 2010) was used in this work.
It is named ?Injec-tive Graph Embedding Algorithm?
and designed basedon the Huet?s graph unification algorithm (Huet, 1975).The formalized algorithm and the detailed descriptionare given in (Liu et al, 2010).When matching between graphs, different combina-tions of matching features can be applied, resulting indifferent matching criteria.
The features include edgefeatures (E) which are edge label and edge direction,and node features which are POS tags (P), trigger to-kens (T), and all tokens (A), ranging from the least spe-cific matching criterion, E, to the much stricter crite-rion, A.
For each sentence, the algorithm returns all thematched rules together with the corresponding injec-tive mappings from rule nodes to sentence tokens.
Bio-logical events are then extracted by applying the eventdescriptions of tokens in each matched rule consistingof the type, the trigger and the arguments to the corre-sponding tokens of the sentence.4 Implementation4.1 PreprocessingThe same preprocessing steps as in (Liu et al, 2010)are completed on the datasets of the GE and the EPItasks before performing text mining strategies.
Theseinclude sentence segmentation and tokenization, Part-of-Speech tagging, and sentence parsing.The Stanford unlexicalized natural language parser(version 1.6.5), which includes Genia Treebank 1.0(Ohta et al, 2005) as training material, is used to ana-lyze the syntactic structure of the sentences.
The parserreturns a dependency graph for each sentence.4.2 Rule Induction and Sentence MatchingFor each gold event, the shortest path in the undirectedgraph connecting the event trigger to each event argu-ment is extracted using Dijkstra?s algorithm (Cormenet al, 2001) with equal weight for edges.Sentence matching is performed and the raw match-ing results are then postprocessed based on the specifi-cations of the shared task, such as event trigger cannot166be a protein name or another event.5 Results and EvaluationThis section presents our results on the GE and the EPItasks (Kim et al, 2011b; Ohta et al, 2011) respectively.Different experimental methods in processing the ob-tained event rules are described for the purpose of im-proving the precision of both tasks and increasing therecall of the EPI task.5.1 GE task5.1.1 Preprocessing ResultsFor training data, only sentences that contain at leastone protein and one event are considered candidatesfor further processing.
For testing data, candidate sen-tences contain at least one protein.
Our event recog-nition method focuses on extracting events from sen-tences.
Therefore, only sentence-based events are con-sidered in this work.
Table 1 presents some statistics ofthe preprocessed datasets.Attributes Counted Training Dev.
TestingAbstracts&Full articles 908 259 347Total sentences 8,759 2,954 3,437Candidate sentences 3,615 1,989 2,353Total events 10,287 3,243 4,457Sentence-based events 9,583 3,058 hiddenTable 1: Statistics of GE datasetWe were able to build event rules for 9,414 goldevents.
Gold events in which the event trigger andan event argument are not connected by a path in theundirected dependency graph of the sentence could notbe transformed into a biological event rule.
After re-moving duplicate rules, we obtained 8,677 event rules,which are distributed over nine event types.
The rulesthat are isomorphic to each other in terms of their graphrepresentation are not filtered at this stage as the dupli-cate events they produce will be removed eventually toprepare the annotations for the shared task.5.1.2 Probability-based rule refiningWe observed that some event rules of an event typeoverlap with rules of other event types.
For instance, aTranscription rule is isomorphic to a Gene expressionrule in terms of the graph representation and they alsoshare a same event trigger token.
In fact, tokens like?gene expression?
and ?induction?
are used as eventtrigger of both Transcription and Gene expressionin training data.
Therefore, the detection of someGene expression events is always accompanied by cer-tain Transcription events.
This will have detrimen-tal effects on the precision of both Transcription andGene expression event types.As transcription is the first step leading to gene ex-pression (Ananiadou and Mcnaught, 2005), there ex-ist some correlations or associations between the twoevent types.
In tackling this problem, we processedthe overlapping rules based on a conditional probabilityP (t|E), where t stands for an event trigger and E repre-sents one of the event types.
Eq.
(1) is used to estimatethe value of P (ti|E).P (ti|E) = f(ti, E)?i f(ti, E), (1)where f(ti, E) is the frequency of the event trigger tiof the event type E in the training data, and?i f(ti, E)calculates the total frequency of all event triggers of theevent type E in the training data.P (ti|E) evaluates the degree of the importance of atrigger to an event type.
When the dependency graphsof two rules of different event types are isomorphic toeach other, and two rules share a same event trigger,we examine the P (ti|E) of each event type, and onlyretain the rule for which the P (ti|E) is higher.Compared to the ?once a trigger, always a trigger?method employed in other work (Buyko et al, 2009;Kilicoglu and Bergler, 2009), triggers are treated in amore flexible way in our work.
A token is not neces-sarily always a trigger unless it appears in the appropri-ate context.
Also, the same token can serve as triggerfor different event types as long as it appears in the dif-ferent context.
A trigger will only be classified into afixed event type when it could serve as trigger for dif-ferent event types in the same context.5.1.3 Performance-based rule rankingIn addition to the process of refining rules acrossevent types, we proposed a performance-based ruleranking method to evaluate each rule under one eventtype.
We matched each rule to sentences in the de-velopment set using the subgraph matching approach.For rules that produce at least one event prediction, weranked them by PRC(ri), the precision of each rule ri,which is computed via Eq.
(2).PRC(ri) = #correctly predicted events by ri#predicted events by ri (2)167We manually examined the rules with low rank.
Inour experiments, the PRC(ri) ratio of these rules isbigger than 4:1.
We removed the ones that are either in-correct or ambiguous in semantics and syntactics basedon our domain knowledge.
Our assumption is that theserules will keep producing false positive events on thetesting data if they are retained in the rule set.
Forrules that do not make any predictions on the develop-ment data, we keep them in the set in the hope that theymay contribute to the event recognition from the testingdata.
Without affecting much on the recall, this processhelps to improve the precision of the events extractedfrom the development data.5.1.4 GE Results on Development SetIn our previous work (Liu et al, 2010), the match-ing criteria, ?E+P+T?
and and ?E+P+A?, achieved thehighest F-score and the highest precision respectivelyamong all the investigated matching criteria.
?E+P+T?requires that edge directions and labels of all edges (E)be identical, POS tags (P) of all tokens be identical, andtokens of only event triggers (T) be identical for theedges and the nodes of a rule and a sentence to matchwith each other.
?E+P+A?
requires that edges (E), POStags (P) and all tokens (A) be exactly the same.
In thiswork, we focused on these two criteria and exploredto extend them for graph matching between event rulesand sentences.We attempted to relax the matching criterion of POStags for nouns and verbs.
For nouns, the plural form ofnouns is allowed to match with the singular form, andproper nouns are allowed to match with regular nouns.For verbs, past tense, present tense and base presentform are allowed to match with each other.Next, letters of each token are transformed into lowercase, and tokens containing hyphens are normalizedinto non-hyphenated forms.
Lemmatization is then per-formed on every pair of tokens to be matched usingWordNet (Fellbaum, 1998) as the lemmatizer to al-low tokens that share a same lemma to match.
SinceWordNet is a lexical database only for the general Eng-lish language, the lemma of a fair amount of domain-specific vocabulary cannot be found in WordNet, suchas ?Phosphorylation?
and ?Methylation?.
In this case,a backup process is invoked to stem the tokens totheir root forms using the Porter?s stemming algorithm(Porter, 1997) allowing the tokens derived from a sameroot word to match.To further generalize event rules, we extendedthe matching criteria ?E+P*+A*?
to ?E+P*+A*S?to allow tokens to match if their lemmatized formshave a common synonym in terms of the synsetsof WordNet.
Since WordNet will relate verbs suchas ?induce?
and ?receive?
together as they sharea synonym ?have?, and allow nouns like ?expres-sion?
and ?aspect?
to match as they share a syn-onym ?face?, we limited this extension to only ad-jective tokens to avoid too many false positive eventsand allow tokens like ?crucial?
and ?critical?
to match.Table 2 shows the event extraction results on thedevelopment data based on different matching cri-teria.
The performance is evaluated by ?Approxi-mate Span Matching/Approximate Recursive Match-ing?, the primary evaluation measure of the shared task.
?E+P*+T*?, ?E+P*+A*?
and ?E+P*+A*S?
demon-strate the performance of the extended criteria.Feature Recall(%) Prec.
(%) F-score(%)E+P+A 28.03 66.74 39.48E+P+T 31.17 52.38 39.09E+P*+A* 31.45 63.51 42.07E+P*+T* 35.71 46.26 40.31E+P*+A*S 31.51 63.32 42.08Table 2: GE results on development set using differentmatching criteriaAs the strictest matching criteria, ?E+P+A?
performsbetter than ?E+P+T?
in both precision and F-score.
Al-though ?E+P+T?
achieves a better recall, when relax-ing the matching criteria from all tokens being the sameto only event trigger tokens having to be identical, theprecision of ?E+P+T?
is decreased by a large margin,nearly 14%.
This indicates that a certain number of bi-ological events are described in very similar ways inthe literature, involving same grammatical structuresand identical contextual contents.
While producingmore incorrect events, ?E+P*+A*?
and ?E+P*+T*?significantly improve the recall, leading to a betterF-score over ?E+P+A?
and ?E+P+T?.
This confirmsthe effectiveness of the POS relaxation and the to-ken lemmatization on the generalization of event rules.?E+P*+A*S?
obtains a comparable performance with?E+P*+A*?
with only a 0.06% increase in recall and a0.2% drop in precision.5.1.5 GE Results on Testing SetTable 3 shows our results of ?E+P*+A*?
on the test-ing data using the official metric.
We are listed asteam ?CCP-BTMG?.
Ranked by F-score, our perfor-mance ranked 10th out of 15 participating groups.
It168is worth noting that our result on the event type ?Pro-tein catabolism?
ranked 1st.Event type Rec.
(%) Prec.
(%) F(%)Gene expression 58.68 75.77 66.14Transcription 39.08 51.91 44.59Protein catabolism 66.67 83.33 74.07Phosphorylation 63.78 85.51 73.07Localization 29.32 91.80 44.44Binding 22.61 49.12 30.96Regulation 12.99 46.73 20.33Positive regulation 21.90 44.51 29.35Negative regulation 15.76 40.18 22.64All total 31.57 58.99 41.13Table 3: GE results of ?E+P*+A*?
on testing set by ?Ap-proximate Span /Approximate Recursive Matching?The performance of our system on the testing setis consistent with that of the development set.
Weachieved a comparable precision with the top systemsand ranked 6th by precision.
However, our recall waslower, ranking 11th.
This adversely impacted the over-all F-score.
The lower recall is not surprising becausethe graph matching criteria ?E+P*+A*?
strictly de-mand that every lemmatized token in the patterns, otherthan protein names represented as?BIO Entity?, has tofind its exact match in the input sentences.
The detailedanalysis on the recall problem is presented in the ?ErrorClassification?
section.While examining the false positives, we found thatfor many cases our result matched the gold annotationbut for the trigger word.
We believe that event type andtheir arguments are more important biologically thanthe trigger.
We consulted some domain experts whoreinforced our intuition in many cases that differentwords could be considered as trigger for the event inquestion.
Following this we contacted organizers andthey agreed to release a new evaluation scheme to ig-nore the trigger match requirement in order to supportevaluation of the event extraction itself.Table 4 shows our results of ?E+P*+A*?
evaluatedby other official evaluation metrics of the task.
Thestrict matching scheme requires exact trigger span aswell as all its nested events to be recursively correctfor an event to be considered correctly extracted.
OurF-score in terms of the strict matching is only 2.65%lower than the relaxed, primary measure, indicatingthat most of the detected triggers are captured with cor-rect text span.
The organizers also provided the eval-uation results on PubMed abstracts and PMC full textarticles separately.
Our system performs consistentlyon both abstracts and full papers and the difference be-tween F-scores is less than 1% (41.39% vs. 40.47%)mostly due to the small recall loss on full texts.Measures R(%) P(%) F(%)Strict Matching 29.55 55.13 38.48Appr.
SpanNoTrigger/Recur.
33.68 62.17 43.69Appr.
Span/Recur./Decomp.
32.56 66.20 43.65Appr.
Sp.
No T./Recur./Decomp.
34.96 69.87 46.60Appr.
Span/Recur.
(Abstract) 31.87 59.02 41.39Appr.
Span/Recur.
(Full paper) 30.82 58.92 40.47Table 4: GE results on testing set by other evaluation measures5.2 EPI task5.2.1 Preprocessing ResultsTable 5 presents some statistics of the datasets.
Wewere able to build event rules for 1598 gold events.
Af-ter removing duplicate rules, we obtained 1,562 eventrules distributed over fifteen event types.Attributes Counted Training Dev.
TestingAbstracts 600 200 440Total sentences 6,411 2,218 4,640Candidate sentences 1,054 1,241 2,839Total events 1,738 582 1,194Sentence-based events 1,643 536 hiddenTable 5: Statistics of EPI datasetWe processed the obtained rules following thesame rule refining and ranking processes of the GEtask.
We experimented with two graph matchingcriteria for extracting EPI events, ?E+P*+T*?
and?E+P*+A*?.
From the preliminary results, we ob-served that ?E+P*+A*?
achieves a high precision over80% but a lower recall around 33%.
Compared tothe GE task results, ?E+P*+T*?
achieves a better re-call against a small tradeoff for precision.
We considerthat this is because the event triggers themselves forthe EPI task such as ?acetylation?, ?deglycosylation?and ?demethylation?
are powerful enough to differen-tiate among event types without the need to resort tomore contextual content of the patterns.
Therefore, wefocused on using ?E+P*+T*?
to extract events.5.2.2 Recall-oriented rule mergingSince all the event types except Catalysis,DNA methylation and DNA demethylation in the169EPI task involve addition or removal of biochemicalfunctional groups at a particular amino acid residue ofa protein (Hunter, 2009), common syntactic structuresof expressing the protein PTM events might be sharedacross event types.
To further improve the recall, weproposed a rule merging strategy to take advantage ofthe syntactic structures of rules across event types.We first experimented with a ?pairwise flip?
ap-proach which combines rules of the pairwise, positiveand negative event types by flipping the type and thetrigger of event rules.
For instance, the event rulesof Phosphorylation and Dephosphorylation are mergedtogether and then used to detect events of the two typesrespectively.Next, the ?pairwise flip?
approach was extended toan ?all in one?
method.
For one event type, the rulesof all other PTM event types are processed and mergedinto the rules of the current type if the trigger of rulesof other types contains one of these 12 morphemes:?acetyl?, ?glycosyl?, ?hydroxyl?, ?methyl?, ?phospho-ryl?, ?ubiqui?, ?deacetyl?, ?deglycosyl?, ?dehydroxyl?,?demethyl?, ?dephosphoryl?, ?deubiqui?.
We considerthat event rules involving these morphemes in triggerare more likely to discuss representative protein post-translational modifications.5.2.3 EPI Results on Development SetTable 6 shows the event extraction results on the de-velopment data using different matching criteria andrule merging methods.
The performance is evaluatedby the primary evaluation measure.Feature Recall(%) Prec.
(%) F(%)E+P*+A* 32.65 79.83 46.34E+P*+T* 38.14 73.51 50.23E+P*+A*(pairwise) 35.22 80.39 48.98E+P*+T*(pairwise) 40.89 77.52 53.54E+P*+T*(all in one) 46.39 63.08 53.47Table 6: EPI results on development setThe two rule merging methods using ?E+P*+T*?outperform others in terms of F-score.
The ?pairwiseflip?
method achieves higher precision as the syntac-tic structures of rules to describe the pairwise, positiveand negative events tend to be highly similar.
However,when merging all the rules across PTM event types,although more events are captured, rules that involvesyntactic structures for expressing very specific eventsof certain types may not generalize well on some othertypes, resulting in incorrect events.
Thus, the ?all inone?
approach significantly improves the recall whileproducing many false positive events, leading to a F-score comparable with the ?pairwise flip?
method.5.2.4 EPI Results on Testing SetWe conducted two runs on the testing data in termsof ?E+P*+T*(pairwise)?
and ?E+P*+T*(all in one)?.Since the two rule merging methods achieve compara-ble F-scores, we decided to submit a run with higherrecall.
Table 7 shows our results of ?E+P*+T*?
usingthe ?all in one?
approach on the official metrics.
Only7 teams participated in this task.
For the core task, ourperformance ranked 7th, only 0.16% lower in F-scorethan the 6th team.
When evaluating our results in termsof the full task, we ranked 6th.Feature Recall(%) Prec.
(%) F(%)E+P*+T*(core task) 45.06 63.37 52.67E+P*+T*(full task) 23.44 37.93 28.97Table 7: EPI results on testing setCompared to the top teams, our F-score is mostly af-fected by the lower recall.
Although the run we submit-ted achieves the highest recall among all our runs, ourrecall is about 20% less than the best performing sys-tem.
Considering that most of the event types of the EPItask tend to use tokens containing only a small fixedset of domain-specific morphemes as triggers, the re-call deficit is assumed to be lack of event rules that de-scribe syntactic structures of expressing a fair amountof EPI events.5.3 Error ClassificationSince the gold event annotation of the testing data ishidden, we examined the event extraction results of thedevelopment data to analyze the underlying errors.
Thedetailed analysis is reported in terms of false negativeand false positive events.5.3.1 False negativesIt is shown that false negative events have a substan-tial impact on the performance of all 15 participatingteams of the GE task.
The best recall, 49.56%, cap-tures less than half of the gold events in the testing set.In our work, three major causes of false negatives aredetermined for both tasks.
(1) Low coverage of rule set: For the GE task, thegraph matching criteria ?E+P*+A*?
strictly asks everylemmatized token in the patterns to find its exact matchin the input sentences.
Although maintaining the pre-cision at a high level, this directly limits the contextual170structure and content around the proteins and thus pre-vents the recall from being higher.Lemmatization helps to detect more events, however,further generalization needs to be performed on the ex-isting rules to relax the token matching requirement.For instance, when ?lysine?
appears in an event rule,knowing that ?lysine?
is an amino acid, the rule mightbe further generalized to allow all amino acids to matchwith each other in order to recognize more events.For the EPI task, although ?E+P*+T*?
requires to-kens of only event triggers to be identical, we capturedless than half of the gold events.
We noticed that manytrigger tokens in the development sentences do not ap-pear as triggers in the training set.
This leads to thefailure of extracting the corresponding events.
Sincethe training data is the only source of triggers in ourwork, the coverage of triggers limits the generalizationpower of event rules.For both tasks, we found that many gold events aredescribed in grammatical structures that are not cov-ered by the existing rules induced from the training sen-tences.
These structures tend to be more complex, in-volving a long dependency path from the trigger to ar-guments in the graphs of sentences.
Events that consistof these structures are not recognized as no matchedrules will be returned from the subgraph matching.In order to further improve the recall, some post-processing steps are necessary to be performed on theraw dependency graphs of both rules and sentences in-stead of using them in the graph matching directly.
Byeliminating semantically unimportant nodes and group-ing lexically connected nodes together, the rules canbe generalized to retain only their skeleton structureswhile complex sentences can be syntactically simpli-fied to allow event rules to match them.
(2) Compound error effect: In both tasks, reg-ulation and catalysis event types can take sub-eventsas arguments.
Therefore, if the nested sub-events arenot correctly identified, the main events will not be ex-tracted due to the compound error effect.
(3) Anaphora and coreference: Since our systemfocuses on extracting events from sentences, events thatcontain protein names spanning multiple sentences willnot be captured.
Recognition of these events requiresthe ability to do anaphora and coreference resolution inbiological text (Gasperin and Briscoe, 2008).5.4 False positivesThree major causes of false positives are generalizedfrom our analysis.
(1) Assignment of overlapping event rules: Theconditional probability-based method to assign over-lapped rules of different event types effectively reducesthe number of event candidates but leads to errors.
Forinstance, ?methylation?
is used as the trigger for twooverlapping rules of DNA methylation and Methyla-tion.
Based on the P (ti|E), ?methylation?
is classifiedinto DNA methylation.
An erroneous DNA methylationevent is then detected from a development sentence in-stead of the gold Methylation event.
Although the trig-ger and the participant are all identified correctly, theevent type is assigned wrongly.In fact, the same contextual structure and con-tent appear in both DNA methylation and Methylationevents in the training data.
According to the EPItask (Ohta et al, 2011), Methylation is to abbreviatefor ?protein methylation?
and thus is different fromDNA methylation.
In this case, the only way to dis-tinguish between the two types is to identify that thebiological entity mentioned in the sentence is a gene forDNA methylation and a protein for Methylation.
Sincegenes and their products are uniformly annotated as?Protein?
in the task, it is not possible to assign a cor-rect event type in this case from the perspective of theevent extraction itself.
(2) Lack of postprocessing rules: Some misiden-tified events require customized postprocessing rules.For instance, a Gene expression event is detected fromthe phrase ?Tax expression vector?
of a developmentsentence.
However, since ?Tax expression?
is onlyused as an adjective to describe ?vector?
in this context,the identified Gene expression event is not appropriate.Likewise, ?Sp1 transcription?
should not be identifiedas an event in the context of ?Sp1 transcription factors?.
(4) Inconsistencies in gold annotation: Some ex-tracted events are considered biologically meaningfulbut evaluated as false positives due to the inconsisten-cies in the gold annotation.
In Table 4, the 3.2% in-crease in precision of the no-trigger evaluation measureover the primary evaluation scheme indicates that theinconsistent gold annotations of event triggers.6 Conclusion and future workWe used dependency graphs to automatically inducebiological event rules from annotated events.
We ex-plored methods such as performance-based rule rank-ing to improve the accuracy of the obtained rules, andwe merged rules across multiple event types in order toincrease the coverage of the rules.
The event extractionprocess is treated as a subgraph matching problem to171search for the graph of an event rule within the graph ofa sentence.
We tackled two main tasks of the BioNLPShared Task 2011.
We achieved a 41.13% F-score indetecting events across nine types in the Task 1 of theGE task, and a 52.67% F-score in identifying eventsacross fifteen types in the core task of the EPI task.In future work, we would like to explore the ap-proaches of generalizing the raw dependency graphs ofboth event rules and sentences in order to improve therecall of our event extraction system.
We also plan toextend our system to tackle the other sub-tasks in GEand EPI tasks, such as to extract events with additionalarguments like site and location, and to recognize nega-tions and speculations regarding the extracted events.ReferencesMuhammad Abulaish and Lipika Dey.
2007.
Biological re-lation extraction and query answering from medline ab-stracts using ontology-based text mining.
Data & Knowl-edge Engineering, 61(2):228?262.Sophia Ananiadou and John Mcnaught.
2005.
Text Miningfor Biology And Biomedicine.
Artech House Publishers.Sophia Ananiadou, Sampo Pyysalo, Jun?ichi Tsujii, andDouglas B. Kell.
2010.
Event extraction for systems bi-ology by text mining the literature.
Trends in Biotechnol-ogy, 28(7):381?390.Ekaterina Buyko, Erik Faessler, Joachim Wermter, and UdoHahn.
2009.
Event extraction from trimmed dependencygraphs.
In BioNLP ?09: Proceedings of the Workshop onBioNLP, pages 19?27, Morristown, NJ, USA.
Associa-tion for Computational Linguistics.Luigi P. Cordella, Pasquale Foggia, Carlo Sansone, andMario Vento.
2004.
A (sub)graph isomorphism algo-rithm for matching large graphs.
IEEE Trans.
PatternAnal.
Mach.
Intell., 26(10):1367?1372.Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest,and Clifford Stein.
2001.
Introduction to Algorithms.The MIT Press.Christiane Fellbaum.
1998.
WordNet: An Electronic LexicalDatabase.
Bradford Books.Caroline Gasperin and Ted Briscoe.
2008.
Statisticalanaphora resolution in biomedical texts.
In COLING?08: Proceedings of the 22nd International Conference onComputational Linguistics, pages 257?264, Morristown,NJ, USA.
Association for Computational Linguistics.Ge?rard P. Huet.
1975.
A unification algorithm for typedlambda-calculus.
Theor.
Comput.
Sci., 1(1):27?57.Lawrence Hunter.
2009.
The Processes of Life: An Intro-duction to Molecular Biology.
The MIT Press.Halil Kilicoglu and Sabine Bergler.
2009.
Syntactic de-pendency based heuristics for biological event extraction.In Proceedings of the Workshop on Current Trends inBiomedical Natural Language Processing: Shared Task,BioNLP ?09, pages 119?127.Jin-Dong Kim, Yoshinobu Kano Tomoko Ohta,Sampo Pyysalo, and Jun?ichi Tsujii.
2009.
Overview ofbionlp?09 shared task on event extraction.
In Proceedingsof the NAACL-HLT 2009 Workshop on Natural LanguageProcessing in Biomedicine (BioNLP?09), pages 1?9.ACL.Jin-Dong Kim, Sampo Pyysalo, Tomoko Ohta, RobertBossy, and Jun?ichi Tsujii.
2011a.
Overview of BioNLPShared Task 2011.
In Proceedings of the BioNLP 2011Workshop Companion Volume for Shared Task, Portland,Oregon, June.
Association for Computational Linguistics.Jin-Dong Kim, Yue Wang, Toshihisa Takagi, and AkinoriYonezawa.
2011b.
Overview of the Genia Event task inBioNLP Shared Task 2011.
In Proceedings of the BioNLP2011 Workshop Companion Volume for Shared Task, Port-land, Oregon, June.
Association for Computational Lin-guistics.Haibin Liu, Vlado Keselj, and Christian Blouin.
2010.
Bio-logical event extraction using subgraph matching.
In Pro-ceedings of the 4th International Symposium on SemanticMining in Biomedicine (SMBM-2010), October.Yusuke Miyao, Kenji Sagae, Rune Saetre, Takuya Mat-suzaki, and Jun?ichi Tsujii.
2009.
Evaluating contribu-tions of natural language parsers to protein?protein inter-action extraction.
Bioinformatics, 25(3):394?400.Tomoko Ohta, Yuka Tateisi, and Junichi Tsujii.
2005.
Syn-tax annotation for the genia corpus.
In Proceedings of theIJCNLP 2005, pages 222?227.Tomoko Ohta, Sampo Pyysalo, and Jun?ichi Tsujii.
2011.Overview of the Epigenetics and Post-translational Mod-ifications (EPI) task of BioNLP Shared Task 2011.
InProceedings of the BioNLP 2011 Workshop CompanionVolume for Shared Task, Portland, Oregon, June.
Associ-ation for Computational Linguistics.Mate Ongenaert, Leander Van Neste, Tim De Meyer, Ger-ben Menschaert, Sofie Bekaert, and Wim Van Criekinge.2007.
Pubmeth: a cancer methylation database combin-ing text-mining and expert annotation.
Nucleic Acids Re-search, pages 1?5.Marcello Pelillo, Kaleem Siddiqi, and Steven W. Zucker.1999.
Matching hierarchical structures using associa-tion graphs.
IEEE Trans.
Pattern Anal.
Mach.
Intell.,21(11):1105?1120.M.
F. Porter.
1997.
An algorithm for suffix stripping.
pages313?316.Yuanyuan Tian, Richard C. Mceachin, Carlos Santos,David J.
States, and Jignesh M. Patel.
2007.
Saga: asubgraph matching tool for biological graphs.
Bioinfor-matics, 23(2):232?239.J.
R. Ullmann.
1976.
An algorithm for subgraph isomor-phism.
J. ACM, 23(1):31?42.Xifeng Yan, Feida Zhu, Jiawei Han, and Philip S. Yu.
2006.Searching substructures with superimposed distance.
InICDE ?06: Proceedings of the 22nd International Con-ference on Data Engineering, page 88, Washington, DC,USA.
IEEE Computer Society.172
