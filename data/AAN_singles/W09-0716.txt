Proceedings of the EACL 2009 Workshop on Language Technologies for African Languages ?
AfLaT 2009, pages 112?120,Athens, Greece, 31 March 2009. c?2009 Association for Computational LinguisticsAn Ontology for Accessing Transcription Systems (OATS)Steven MoranUniversity of WashingtonSeattle, WA, USAstiv@u.washington.eduAbstractThis paper presents the Ontology for Ac-cessing Transcription Systems (OATS), aknowledge base that supports interopera-tion over disparate transcription systemsand practical orthographies.
The knowl-edge base includes an ontological descrip-tion of writing systems and relations formapping transcription system segmentsto an interlingua pivot, the IPA.
It in-cludes orthographic and phonemic inven-tories from 203 African languages.
OATSis motivated by the desire to query data inthe knowledge base via IPA or native or-thography, and for error checking of dig-itized data and conversion between tran-scription systems.
The model in this paperimplements these goals.1 IntroductionThe World Wide Web has emerged as the pre-dominate source for obtaining linguistic field dataand language documentation in textual, audio andvideo formats.
A simple keyword search on thenearly extinct language Livonian [liv]1 returns nu-merous results that include text, audio and videofiles.
As data on the Web continue to increase, in-cluding material posted by native language com-munities, researchers are presented with an idealmedium for the automated discovery and analysisof linguistic data, e.g.
(Lewis, 2006).
However,resources on the Web are not always accessible tousers or software agents.
The data often exist inlegacy or proprietary software and data formats.This makes them difficult to locate and access.Interoperability of linguistic resources has theability to make disparate linguistic data accessibleto researchers.
It is also beneficial for data aggre-gation.
Through the use of ontologies, applica-1ISO 639-3 language codes are in [].tions can be written to perform intelligent search(deriving implicit knowledge from explicit infor-mation).
They can also interoperate between re-sources, thus allowing data to be shared across ap-plications and between research communities withdifferent terminologies, annotations, and notationsfor marking up data.OATS is a knowledge base, i.e.
a data sourcethat uses an ontology to specify the structure ofentities and their relations.
It includes generalknowledge of writing systems and transcriptionsystems that are core to the General Ontology ofLinguistic Description (GOLD)2 (Farrar and Lan-gendoen, 2003).
Other portions of OATS, in-cluding the relationships encoded for relating seg-ments of transcription systems, or the computa-tional representations of these elements, extendGOLD as a Community of Practice Extension(COPE) (Farrar and Lewis, 2006).
OATS providesinteroperability for transcription systems and prac-tical orthographies that map phones and phonemesin unique relationships to their graphemic repre-sentations.
These systematic mappings thus pro-vide a computationally tractable starting point forinteroperating over linguistic texts.
The resourcesthat are targeted also encompass a wide array ofdata on lesser-studied languages of the world, aswell as low density languages, i.e.
those with fewelectronic resources (Baldwin et al, 2006).This paper is structured as follows: in section2, linguistic and technological definitions and ter-minology are provided.
In section 3, the theoreti-cal and technological challenges of interoperatingover heterogeneous transcriptions systems are de-scribed.
The technologies used in OATS and itsdesign are presented in section 4.
In section 5,OATS?
implementation is illustrated with linguis-tic data that was mined from the Web, thereforemotivating the general design objectives taken into2http://linguistics-ontology.org/112account in its development.
Section 6 concludeswith future research goals.2 Conventions and Terminology2.1 ConventionsStandard conventions are used for distinguishingbetween graphemic < >, phonemic / / and pho-netic representations [ ].3 For character data infor-mation, I follow the Unicode Standard?s notationalconventions (The Unicode Consortium, 2007).Character names are represented in small capi-tal letters (e.g.
LATIN SMALL LETTER SCHWA)and code points are expressed as ?U+n?
where nis a four to six digit hexadecimal number (e.g.U+0256), which is rendered as <@>.2.2 Linguistic definitionsIn the context of this paper, a transcription sys-tem is a system of symbols and rules for graphi-cally transcribing the sounds of a language variety.A practical orthography is a phonemic writingsystem designed for practical use by speakers al-ready competent in the language.
The mapping re-lation between phonemes and graphemes in prac-tical orthographies is purposely shallow, i.e.
thereis a faithful mapping from a unique sound to aunique symbol.4 The IPA is often used by fieldlinguists in the development of practical orthogra-phies for languages without writing systems.
Anorthography specifies the symbols, punctuation,and the rules in which a language is correctly writ-ten in a standardized way.
All orthographies arelanguage specific.Practical orthographies and transcription sys-tems are both kinds of writing systems.
A writingsystem is a symbolic system that uses visible ortactile signs to represent a language in a systematicway.
Differences in the encoding of meaning andsound form a continuum for representing writingsystems in a typology whose categories are com-monly referred to as either logographic, syllabic,phonetic or featural.
A logographic system de-notes symbols that visually represent morphemes(and sometimes morphemes and syllables).
Asyllabic system uses symbols to denote syllables.A phonetic system represents sound segments as3Phonemic and phonetic representations are given in theInternational Phonetic Alphabet (IPA).4Practical orthographies are intended to jump-start writtenmaterials development by correlating a writing system withits sound units, making it easier for speakers to master andacquire literacy.symbols.
Featural systems are less common andencode phonological features within the shapes ofthe symbols represented in the script.The term script refers to a collection of sym-bols (or distinct marks) as employed by a writ-ing system.
The term script is confused with andoften used interchangeably with ?writing system?.A writing system may be written with differentscripts, e.g.
the alphabet writing system can bewritten in Roman and Cyrillic scripts (Coulmas,1999).
A grapheme is the unit of writing thatrepresents a particular abstract representation of asymbol employed by a writing system.
Like thephoneme is an abstract representation of a distinctsound in a language, a grapheme is a contrastivegraphical unit in a writing system.
A graphemeis the basic, minimally distinctive symbol of awriting system.
A script may employ multiplegraphemes to represent a single phoneme, e.g.
thegraphemes <c> and <h> when conjoined in En-glish represent one phoneme in English, <ch>pronounced /?/ (or /k/).
The opposite is also foundin writing systems, where a single grapheme rep-resents two or more phonemes, e.g.
<x> in En-glish is a combination of the phonemes /ks/.A graph is the smallest unit of written language(Coulmas, 1999).
The electronic counterpart ofthe graph is the glyph.
Glyphs represent the varia-tion of graphemes as they appear when rendered ordisplayed.
In typography glyphs are created usingdifferent illustration techniques.
These may resultin homoglyphs, pairs of characters with shapesthat are either identical or are beyond differenti-ation by swift visual inspection.
When renderedby hand, a writer may use different styles of hand-writing to produce glyphs in standard handwriting,cursive, or calligraphy.
When rendered computa-tionally, a repertoire of glyphs makes up a font.A final distinction is needed for interoperatingover transcription systems.
The term scriptemeis used for the use of a grapheme within a writ-ing system with the particular semantics (i.e., pro-nunciation) it is assigned within that writing sys-tem.
The notion scripteme is needed becausegraphemes may be homoglyphic across scripts andlanguages, and the semantics of a grapheme is de-pendent on the writing system using it.
For ex-ample, the grapheme <p> in Russian represents adental or alveolar trill; /r/ in IPA.
However, <p> isrealized by English speakers as a voiceless bilabialstop /p/.
The defining of scripteme is necessary113for interoperability because it provides a level formapping a writing system specific grapheme to thephonological level, allowing the same graphemeto represent different sounds across different tran-scription and writing systems.2.3 Technological definitionsA document refers to an electronic document thatcontains language data.
Each document is associ-ated with metadata and one or more transcriptionsystems or practical orthographies.
A document?scontent is comprised of a set scriptemes from itstranscription system.
A mapping relation is anunordered pair of a scripteme in a transcriptionsystem and its representation in IPA.OATS first maps scriptemes to their graphemeequivalent(s).
Graphemes are then mapped totheir character equivalents.
A character in OATSis a computational representation of a grapheme.Character encodings represent a range of inte-gers known as the code space.
A code point isa unique integer, or point, within this code space.An abstract character is then mapped to a uniquecode point and rendered as an encoded charac-ter and typographically defined by the font usedto render it.
A set of encoded characters is a char-acter set and different character encodings en-code characters as numbers via different encodingschemes.3 Interoperating Over TranscriptionSystemsSection 3.1 uses the Sisaala languages to illus-trate interoperability challenges posed by linguis-tic data.
Section 3.2 addresses technological is-sues including encoding and ambiguity.3.1 Linguistic challengesThree genetically related languages spoken inNorthern Ghana, Sisaala Pasaale [sig], SisaalaTumulung [sil] and Sisaala Western [ssl], differslightly in their orthographies for two reasons:they have slightly divergent phonemic inventoriesand their orthographies may differ graphemicallywhen representing the same phoneme.
See Table1.The voiceless labial-velar phoneme /kp/ appearsin both Sisaala Tumulung and Sisaala Pasaale, buthas been lost in Sisaala Western.
There is a con-vergence of the allophones [d] and [r] into oneTable 1: Phoneme-to-grapheme relations/kp/ d /?/ /I/ /U/ Tonesig kp d, r ky ?
V not markedsil kp d ch i u accentsssl - d ky I U accentsphoneme /d/ in Sisaala Pasaale (Toupin, 1995).5These three orthographies also differ because oftheir authors?
choices in assigning graphemes tophonemes.
In Sisaala Pasaale and Sisaala West-ern, the phonemes /?/ and /?/ are written as <ky>and <gy>.
In Sisaala Tumulung, however, thesesounds are written <ch> and <j>.
Orthographydevelopers may have made these choices for prac-tical reasons, such as ease of learnability or tech-nological limitations (Bodomo, 1997).
During thedevelopment of practical orthographies for SisaalaPasaale and Sisaala Western, the digraphs <ky>and<gy>were chosen because children learn Da-gaare [dga] in schools, so they are already famil-iar with their sounds in the Dagaare orthography(Mcgill et al, 1999) (Moran, 2008).Another difference lies in the representation ofvowels.
Both Sisaala Pasaale and Sisaala West-ern represent their full sets of vowels orthograph-ically.
These orthographies were developed rela-tively recently, when computers, character encod-ings, and font support, have become less problem-atic.
In Sisaala Tumulung, however, the phonemes/i/ and /I/ are collapsed to <i>, and /u/ and /U/ to<u> (Blass, 1975).
Sisaala Tumulung?s orthog-raphy was developed in the 1970s and technologi-cal limitations may have led its developers to col-lapse these phonemes in the writing system.
Forexample, the Ghana Alphabet Committee?s 1990Report lacks an individual grapheme <N> for thephoneme /N/ for Dagaare.
This difficulty of render-ing unconventional symbols on typewriters onceposed a challenge for orthography development(Bodomo, 1997).Tone is both lexically and grammatically con-trastive in Sisaala languages.
In Sisaala Pasaale?sofficial orthography tone is not marked and is notused in native speaker materials.
On the otherhand, in linguistic descriptions that use this or-thography, tone is marked to disambiguate tonal5The phoneme /d/ has morphologically conditioned al-lographs <d> (word initial) or <r> (elsewhere) (McGill,2004).114minimal pairs in lexical items and grammaticalconstructions (McGill, 2004).
In the Sisaala(Tumulung)-English dictionary, tone is markedonly to disambiguate lexical items (Blass, 1975).In linguistic descriptions of Sisaala Western, non-contrastive tone is marked.
When tone is marked,it appears as acute (high tone) and grave (low tone)accents over vowels or nasals.Language researchers would quickly pick up onthese minute differences in orthographies.
How-ever, what first seem to be trivial differences, illus-trate one issue of resource discovery on the Web ?without methods for interoperability, even slightlydivergent resources are more difficult to discover,query and compare.
How would someone re-searching a comparative analysis of /?/ sounds oflanguages in Northern Ghana discover that it isrepresented as <ky> and <ch> without first lo-cating the extremely sparse grammatical informa-tion available on these languages?
Furthermore,automatic phonetic research is possible on lan-guages with shallow orthographies (Zuraw, 2006),but crosslinguistic versions of such work requireinteroperation over writing systems.3.2 Technological challengesThe main technological challenges in interoperat-ing over textual electronic resources are: encod-ing multilingual language text in an interoperableformat and resolving ambiguity between mappingrelations.
These are addressed below.Hundreds of character encoding sets for writ-ing systems have been developed, e.g.
ASCII,GB 180306 and Unicode.
Historically, differentstandards were formalized differently and for dif-ferent purposes by different standards commit-tees.
A lack of interoperability between char-acter encodings ensued.
Linguists, restricted tostandard character sets that lacked IPA supportand other language-specific graphemes that theyneeded, made their own solutions (Bird and Si-mons, 2003).
Some chose to represent unavailablegraphemes with substitutes, e.g.
the combinationof <ng> to represent <N>.
Others redefined se-lected characters from a character encoding to maptheir own fonts to.
One linguist?s redefined char-acter set, however, would not render properly onanother linguist?s computer if they did not sharethe same font.
If two character encodings defined6Guo?jia?
Bia?ozhu?, the national standard character set forthe People?s Republic of Chinatwo character sets differently, then data could notbe reliably and correctly displayed.To circumvent these problems, OATS uses theUnicode Standard7 for multilingual character en-coding of electronic textual data.
Unicode en-codes 76 scripts and includes the IPA.8 In principlethis allows OATS to interoperate over IPA and allscripts currently encoded in Unicode.
However,writing systems, scripts and transcriptions are of-ten themselves encoded ambiguously.Unicode encodes characters, not glyphs, inscripts and sometimes unifies duplicate charactersacross scripts.
For example, IPA characters ofGreek and Latin origin, such as <B> and <k>are not given a distinct position within Unicode?sIPA character block.
The Unicode code spaceis subdivided into character blocks, which gener-ally encode characters from a single script, but asis illustrated by the IPA, characters may be dis-persed across several different character blocks.This poses a challenge for interoperation, particu-larly with regard to homographs.
Why shouldn?t aspeaker of Russian use the<a> CYRILLIC SMALLLETTER A at code point U+0430 for IPA transcrip-tion, instead of <a> LATIN SMALL LETTER A atcode point U+0061, when visually they are indis-tinguishable?Homoglyphs come in two flavors: linguistic andnon-linguistic.
Linguists are unlikely to distin-guish between the <@> LATIN SMALL LETTERSCHWA at code point U+0259 and <@> LATINSMALL LETTER TURNED E at U+01DD.
And non-linguists are unlikely to differentiate any seman-tic difference between an open back unroundedvowel <A>, the LATIN SMALL LETTER ALPHAat U+0251, and the open front unrounded vowel<a>, LATIN SMALL LETTER A at U+0061.Another challenge is how to handle ambigu-ity in transcription systems and orthographies.
InSerbo-Croatian, for example, the digraphs <lj>,<nj> and <dz> represent distinct phonemes andeach are comprised of two graphemes, whichthemselves represent distinct phonemes.
Wordslike <nadzivjeti> ?to outlive?
are composed ofthe morphemes <nad>, a prefix, and the verb<zivjeti>.
In this instance the combination of<d> and <z> does not represent a single digraph<dz>; they represent two neighboring phonemesacross a morpheme boundary.
Likewise in En-7ISO/IEC 10648http://www.unicode.org/Public/UNIDATA/Scripts.txt115glish, the grapheme sequence <sh> can be botha digraph as well as a sequence of graphemes,as in <mishmash> and <mishap>.
When pars-ing words like <mishit> and <mishear> bothdisambiguations are theoretically available.
An-other example is illustrated by <h>, <t>, and<th>.
How should <t> be interpreted be-fore <h> when English gives us both /tOm@s/?Thomas?
and /Tioudor/ ?Theodore??
The SisaalaWestern word <niikyuru> ?waterfall?
could beparsed as /niik.yuru/ instead of /nii.
?uru/ to speak-ers unfamiliar with the <ky> digraph of orthogra-phies of Northwestern Ghana.These ambiguities are due to mapping relationsbetween phonemes and graphemes.
Transcrip-tion systems and orthographies often have com-plex grapheme-to-phoneme relationships and theyvary in levels of phonological abstraction.
Thetransparency of the relation between spelling andphonology differ between languages like Englishand French, and say Serbo-Croatian.
The formerrepresent deep orthographic systems where thesame grapheme can represent different phonemesin different contexts.
The latter, a shallow or-thography, is less polyvalent in its grapheme-to-phoneme relations.
Challenges of ambiguity reso-lution are particularly apparent in data conversion.4 Ontological Structure and Design4.1 TechnologiesIn Philosophy, Ontology is the study of existenceand the meaning of being.
In the Computer andInformation Sciences, ontology has been co-optedto represent a data model that represents conceptswithin a certain domain and the relationships be-tween those concepts.
At a low level an ontol-ogy is a taxonomy and a set of inference rules.At a higher-level, ontologies are collections of in-formation that have formalized relationships thathold between entities in a given domain.
This pro-vides the basis for automated reasoning by com-puter software, where content is given meaningin the sense of interpreting data and disambiguat-ing entities.
This is the vision of the SemanticWeb,9 a common framework for integrating andcorrelating linked data from disparate resourcesfor interoperability (Beckett, 2004).
The Gen-eral Ontology for Linguistic Description (GOLD)is grounded in the Semantic Web and providesa foundation for the interoperability of linguistic9http://www.w3.org/2001/sw/annotation to enable intelligent search across lin-guistic resources (Farrar and Langendoen, 2003).Several technologies are integral to the architec-ture of the Semantic Web, including Unicode,XML,10 and the Resource Description Framework(RDF).11 OATS has been developed with thesetechnologies and uses SPARQL12 to query theknowledge base of linked data.The Unicode Standard is the standard textencoding for the Web, the recommended best-practice for encoding linguistic resources, and theunderlying encoding for OATS.
XML is a gen-eral purpose specification for markup languagesand provides a structured language for data ex-change (Yergeau, 2006).
It is the most widelyused implementation for descriptive markup, andis in fact so extensible that its structure does notprovide functionality for encoding explicit rela-tionships across documents.
Therefore RDF isneeded as the syntax for representing informa-tion about resources on the Web and it is itselfwritten in XML and is serializable.
RDF de-scribes resources in the form subject-predicate-object (or entity-relationship-entity) and identi-fies unique resources through Uniform ResourceIdentifiers (URIs).
In this manner, RDF encodesmeaning in sets of triples that resemble subject-verb-object constructions.
These triples form agraph data structure of nodes and arcs that arenon-hierarchical and can be complexly connected.Numerous algorithms have been written to accessand manipulate graph structures.
Since all URIsare unique, each subject, object and predicate areuniquely defined resources that can be referredto and reused by anyone.
URIs give users flex-ibility in giving concepts a semantic representa-tion.
However, if two individuals are using differ-ent URIs for the same concept, then a procedureis needed to know that these two objects are in-deed equivalent.
A common example in linguis-tic annotation is the synonymous use of genitiveand possessive.
By incorporating domain specificknowledge into an ontology in RDF, disambigua-tion and interoperation over data becomes pos-sible.
GOLD addresses the challenge of inter-operability of disparate linguistic annotation andtermsets in morphosyntax by functioning as an in-terlingua between them.
In OATS, the interlingua10http://www.w3.org/XML/11http://www.w3.org/RDF/12http://www.w3.org/TR/rdf-sparql-query/116between systems of transcription is the IPA.4.2 IPA as interlinguaOATS uses the IPA as an interlingua (or pivot)to which elements of systems of transcription aremapped.
The IPA was chosen for its broad cov-erage of the sounds of the world?s languages, itsmainstream adoption as a system for transcriptionby linguists, and because it is encoded (at leastmostly) in Unicode.
The pivot component residesat the Character ID entity, which is in a one-to-onerelationship with a Unicode Character.
The Char-acter ID entity is provided for mapping charactersto multiple character encodings.
This is useful formapping IPA characters to legacy character encod-ing sets like IPA Kiel and SIL IPA93, allowingfor data conversion between character encodings.The IPA also encodes phonetic segments as smallfeature bundles.
Phonological theories extend theidea and interpretation of proposed feature sets,an area of debate within Linguistics.
These issuesshould be taken into consideration when encodinginteroperability via an interlingua, and should beleveraged to expand current theoretical questionsthat can be asked of the knowledge base.
Charac-ter semantics also require consideration (Gibbonet al, 2005).
Glyph semantics provide implicit in-formation such as a resource?s language, its lan-guage family assignment, its use by a specific so-cial or scientific group, or corporate identity (Trip-pel et al, 2007).
Documents with IPA charactersor in legacy IPA character encodings provide se-mantic knowledge regarding the document?s con-tent, namely, that it contains transcribed linguisticdata.4.3 Ontological designOATS consists of the following ontologicalclasses: Character, Grapheme, Document, Map-ping, MappingSystem, WritingSystem, andScripteme.
WritingSystem is further subdividedinto OrthographicSystem and TranscriptionSys-tem.
Each Document is associated with theOLAC Metadata Set,13 an extension of the DublinCore Type Vocabulary14 for linguistic resources.This includes uniquely identifying the languagerepresented in the document with its ISO 639-3three letter language code.
Each Document is alsoassociated with an instance of WritingSystem.13http://www.language-archives.org/OLAC/metadata.html14http://dublincore.org/usage/terms/dcmitype/Each TranscriptionSystem is a set of instancesof Scripteme.
Every Scripteme instance is in aMapping relation with its IPA counterpart.
TheMappingSystem contains a list of Transcription-System instances that have Scripteme instancesmapped to IPA.
The Grapheme class providesthe mapping between Scripteme and Character.The Character class is the set of Unicode char-acters and contains the Unicode version number,character name, HTML entity and code point.5 Implementation5.1 DataThe African language data used in OATS weremined from Syste`mes alphabe?tiques des languesafricanies,15 an online database of Alphabets deslangues africaines (Hartell, 1993).
Additionallanguages were added by hand.
Currently, OATSincludes 203 languages from 23 language families.Each language contains its phonemic and ortho-graphic inventories.5.2 QueryLinguists gain unprecedented access to linguisticresources when they are able to query across dis-parate data in standardized notations regardless ofhow the data in those resources is encoded.
Cur-rently OATS contains two phonetic notations forquerying: IPA and X-SAMPA.
To illustrate thequerying functionality currently in place, the IPAis used to query the knowledge base of Africanlanguage data16 for the occurrence of two seg-ments.
The first is the voiced palatal nasal /?/.
Theresults are captured in table 2.Table 2: Occurrences of voiced palatal nasal /?/Grapheme Languages % of Data<ny> 114 84%<n?> 11 8%<?> 8 6%<N> 2 1%<ni> 1 .05%The voiced palatal nasal /?/ is accounted forin 136 languages, or roughly 67% of the 203languages queried.
Orthographically the voicedpalatal nasal /?/ is represented as <ny>, <n?>,15http://sumale.vjf.cnrs.fr/phono/16For a list of these languages, see http://phoible.org117<?>, <ni>, and interestingly as <N>.
The twolanguages containing <N>, Koonzime [ozm] andAkoose [bss] of Cameroon, both lack a phonemic/N/.
In these languages?
orthographies, both <ny>and <N> are used to represent the phoneme /?/.With further investigation, one can determine ifthey are contextually determined allographs likethe <d> and <r> in Sisaala Pasaale.The second simple query retrieves the occur-rence of the voiced alveo-palatal affricate /?/.
Ta-ble 3 displays the results from the same sample oflanguages.Table 3: Occurrences of voiced alveo-palatal af-fricate /?/Grapheme Languages % of Data<j> 84 92%<dz> 2 2%<gy> 2 2%<dj> 1 1%<?> 1 1%<g?> 1 1%The voiced alveo-palatal affricate /?/ is ac-counted for in 92 languages, or 45%, of the 203languages sampled.
The majority, over 92%, usethe same grapheme <j> to represent /?/.
Othergraphemes found in the language sample include<dz>, <gy>, <dj>, <?>, and <g?>.
The <g?>stands out in this data sample.
Interestingly, itcomes from Sudanese Arabic, which uses Latin-based characters in its orthography.
It contains thephonemes /g/, /G/, and /?/, which are gramphemi-cally represented as <g>, <gh> and <g?>.These are rather simplistic examples, but thegraph data structure of RDF, and the power ofSPARQL provides an increasingly complex sys-tem for querying any data stored in the knowledgebase and relationships as encoded by its ontologi-cal structure.
For example, by combining queriessuch as ?which languages have the phoneme /gb/?and ?of those languages which lack its voicelesscounterpart /kp/?, 11 results are found from thissample of African languages, as outlined in Table4.5.3 Querying for phonetic data viaorthographyThe ability to query the knowledge base via alanguage-specific orthography is ultimately theTable 4: Occurrence of /gb/ and lack of /kp/Code Language Name Genetic Affiliationemk Maninkakan Mandekza Karaboro Gurlia Limba Atlanticmif Mofu-Gudur Chadicsld Sissala Gurssl Sisaala Gursus Susu Mandeted Krumen Krutem Themne Atlantictsp Toussian Gursame task as querying the knowledge base viathe pivot.
In this case, however, a mapping rela-tion from the language-specific grapheme to IPAis first established.
Since all transcription systems?graphemes must have an IPA counterpart, this re-lationship is always available.
A query is thenmade across all relevant mapping relations fromIPA to languages within the knowledge base.For example, a user familiar with the SisaalaWestern orthography queries the knowledge basefor languages with <ky>.
Initially, the OATSsystem establishes the relationship between <ky>and its IPA counterpart.
In this case, <ky> repre-sents the voiceless alveo-palatal affricate /?/.
Hav-ing retrieved the IPA counterpart, the query nextretrieves all languages that have /?/ in their phone-mic inventories.
In the present data sample, thisquery retrieves 99 languages with the phonemicvoiceless alveo-palatal affricate.
If the user thenwishes to compare the graphemic distributions of/?/ and /?/, which was predominately <j>, theseresults are easily provided.
They are displayed inTable 5.The 97 occurrences of /?/ account for five morethan the 92 languages sampled in section 5.2 thathad its voiced alveo-palatal affricate counterpart.Such information provides statistics for phonemedistribution across languages in the knowledgebase.
OATS is a powerful tool for gathering suchknowledge about the world?s languages.5.4 CodeThere were two main steps in the implementationof OATS.
The first was the design and creation ofthe OATS RDF model.
This task was undertaken118Table 5: Occurrences of voiceless alveo-palatal af-fricate /?/Grapheme Languages % of Data<c> 60 62%<ch> 28 29%<ts> 3 3%<ky> 2 2%<?> 1 1%<tS > 1 1%<j> 1 1%<c?> 1 1%using Protege,17 an open source ontology editordeveloped by Stanford Center for Biomedical In-formatics Research.
The use of Protege was pri-marily to jump start the design and implementa-tion of the ontology.
The software provides a userinterface for ontology modeling and development,and exports the results into RDF.
After the archi-tecture was in place, the second step was the de-velopment of a code base in Python18 for gather-ing data and working with RDF.
This code baseincludes two major pieces.
The first was the de-velopment of a scraper, which was used to gatherphonemic inventories off of the Web by download-ing Web pages and scraping them for relevant con-tents.
Each language was collected with its ISO639-3 code, and its orthographic inventory andthe mapping relation between these symbols andtheir IPA phonemic symbols.
The second chunk ofthe code base provides functionality for workingwith the RDF graph and uses RDFLib,19 an RDFPython module.
The code includes scripts that addall relevant language data that was scraped fromthe Web to the OATS RDF graph, it fills the graphwith the Unicode database character tables, andprovides SPARQL queries for querying the graphas illustrated above.
There is also Python code forusing OATS to convert between two character sets,and for error checking of characters within a doc-ument that are not in the target set.6 Conclusion and Future WorkOATS is a knowledge base that supports interop-eration over disparate transcription systems.
Byleveraging technologies for ontology description,17http://protege.stanford.edu/18http://python.org19http://rdflib.net/query, and multilingual character encoding, OATSis designed to facilitate resource discovery andintelligent search over linguistic data.
The cur-rent knowledge base includes an ontological de-scription of writing systems and specifies rela-tions for mapping segments of transcription sys-tems to their IPA equivalents.
IPA is used as theinterlingua pivot that provides the ability to queryacross all resources in the knowledge base.
OATS?data source includes 203 African languages?
or-thographic and phonemic inventories.The case studies proposed and implemented inthis paper present functionality to use OATS toquery all data in the knowledge base via stan-dards like the IPA.
OATS also supports query viaany transcription system or practical orthographyin the knowledge base.
Another outcome of theOATS project is the ability to check for incon-sistencies in digitized lexical data.
The systemcould also test linguist-proposed phonotactic con-straints and look for exceptions in data.
Datafrom grapheme-to-phoneme mappings, phonotac-tics and character encodings can provide an ortho-graphic profile/model of a transcription or writingsystem.
This could help to bootstrap software andresource development for low-density languages.OATS also provides prospective uses for docu-ment conversion and development of probabilisticmodels of orthography-to-phoneme mappings.AcknowledgementsThis work was supported in part by the Max-Planck-Institut fu?r evolutiona?re Anthropologieand thanks go to Bernard Comrie, Jeff Good andMichael Cysouw.
For useful comments and re-views, I thank Emily Bender, Scott Farrar, SharonHargus, Will Lewis, Richard Wright, and threeanonymous reviewers.ReferencesTimothy Baldwin, Steven Bird, and Baden Hughes.2006.
Collecting Low-Density Language Materialson the Web.
In Proceedings of the 12th AustralasianWorld Wide Web Conference (AusWeb06).David Beckett.
2004.
RDF/XML Syntax Specification(Revised).
Technical report, W3C.Steven Bird and Gary F. Simons.
2003.
Seven Di-mensions of Portability for Language Documenta-tion and Description.
Language, 79(3):557?582.Regina Blass.
1975.
Sisaala-English, English-SisaalaDictionary.
Institute of Linguistics, Tamale, Ghana.119Adams Bodomo.
1997.
The Structure of Dagaare.Stanford Monographs in African Languages.
CSLIPublications.Florian Coulmas.
1999.
The Blackwell Encyclopediaof Writing Systems.
Blackwell Publishers.Scott Farrar and Terry Langendoen.
2003.
A Linguis-tic Ontology for the Semantic Web.
GLOT, 7(3):97?100.Scott Farrar and William D. Lewis.
2006.
The GOLDCommunity of Practice: An Infrastructure for Lin-guistic Data on the Web.
In Language Resourcesand Evaluation.Dafydd Gibbon, Baden Hughes, and Thorsten Trip-pel.
2005.
Semantic Decomposition of Charac-ter Encodings for Linguistic Knowledge Discovery.In Proceedings of Jahrestagung der Gesellschaft fu?rKlassifikation 2005.Rhonda L. Hartell.
1993.
Alphabets des languesafricaines.
UNESCO and Socie?te?
Internationale deLinguistique.William D. Lewis.
2006.
ODIN: A Model for Adapt-ing and Enriching Legacy Infrastructure.
In Pro-ceedings of the e-Humanities Workshop, held in co-operation with e-Science 2006: 2nd IEEE Interna-tional Conference on e-Science and Grid Comput-ing.Stuart Mcgill, Samuel Fembeti, and Mike Toupin.1999.
A Grammar of Sisaala-Pasaale, volume 4 ofLanguage Monographs.
Institute of African Studies,University of Ghana, Legon, Ghana.Stuart McGill.
2004.
Focus and Activation in Paasaal:the particle rE.
Master?s thesis, University of Read-ing.Steven Moran.
2008.
A Grammatical Sketch of Isaalo(Western Sisaala).
VDM.The Unicode Consortium.
2007.
The Unicode Stan-dard, Version 5.0.
Boston, MA, Addison-Wesley.Mike Toupin.
1995.
The Phonology of Sisaale Pasaale.Collected Language Notes, 22.Thorsten Trippel, Dafydd Gibbon, and Baden Hughes.2007.
The Computational Semantics of Characters.In Proceedings of the Seventh International Work-shop on Computational Semantics (IWCS-7), pages324?329.Francois Yergeau.
2006.
Extensible Markup Language(XML) 1.0 (Fourth Edition).
W3C Recommenda-tion 16 August 2006, edited in place 29 September2006.Kie Zuraw.
2006.
Using the Web as a PhonologicalCorpus: a case study from Tagalog.
In Proceedingsof the 2nd International Workshop on Web as Cor-pus.120
