Arabic Finite-State Morphological Analysis and GenerationKenneth  R .
Bees leyRank  Xerox  Research Cent reGrenob le  LaboratoryLe Quar tz6, chemin  de Mauper tu is3824O MEYLANFranceken.
beesley@xerox, frAbstractThis paper describes a large-scale sys-tem that performs morphological anal-ysis and generation of on-line Arabicwords represented in the standard or-thography, whether fully voweled, par-tially voweled or unw)weled.
Analysesdisplay the root, pattern and all otheraffixes together with feature tags in-dicating part of speech, person, num-ber, mood, voice, aspect, etc.
Thesystem is based on lexicons and rulesfrom an earlier KIMMO-style two-levelmorphological system, reworked exten-sively using Xerox Finite-State Morphol-ogy tools.
The result is an Arabic Finite-State Lexical Transducer that is appliedwith the same runtime code used forEnglish, French, German, Spanish, Por-tuguese, Dutch and Italian lexical tran~ducers.1 In t roduct ion1.1 Chal lenges of  Arab ic  Morpho logySemitic languages like Arabic present unusualchallenges to automatic morphological analysisand generation.
The first challenge is morpho-tactic: whereas most languages construct wordsout of morphemes which are just concatenatedone after another, as in un-t-fail+ing-t-ly, an Arabics tem like daras (&,3.~) 1 is traditionally analyzedas consisting of a three-consonant root ,  transliter-ated as drs (0~ .~ ~), which is interdigitated witha pat tern  CaCaC, where C represents a slot for aroot consonant, sometimes termed a radical ;  var-ious prefixes and suffixes can then concatenate othe stem in the familiar way.
See Figure 1.Similarly, the root klb (~,.
c.~ "-J) interdigitateswith the same pattern to form katab ( .~;  and1The Arabic examples in this paper were producedusing the ArabTeX package for TEX and ~:I'EX by:Professor Klaus Lagally.Abstract lexical evel:CaCaCwa+ +atd r sAbstract intersected level:wa+daras+atFigure 1: Abstract wa-l-daras-l-at ("and shelearned/studied")the root brj (.~ j ~.)
iuterdigitates with the pat-tern taCaC-aC to form the stein tabar-aj (~.~.
:).There are perhaps 5000 Arabic roots in commonusage, and about 400 phonologically distinct pat-terns, most of which are ambiguous.
Each rootcan legally combine with only a small subset ofthe phonologically distinct patterns, an averageof about seventeen or eighteen, and this decid-edly derivational process must be controlled byold-fashioned lexicography.The second challenge is that standard Arabicsurface orthography seldom represents short vow-els, distinctive consonant length, and other po-tentially helpful details.
The wa+daras+at exam-pie could conceivably be written fully roweled aswadarasal (~.aSJ~) , but it is much more likely toappear ms tile unvoweled wdrst (,~.., p_~).
The re-suiting incompleteness of the surface orthographymakes written text unusually ambiguous, with anaverage of ahnost five valid morphological anal-yses per word.
Finally, Arabic orthography dis-plays an idiosyncratic mix of deep morphophono-logical elements carried to the surface, resultingin silent letters, and more surfacy representationsof epenthesis, deletion and assimilation.1.2 ChMlenges of  Arab ic  Lexical  LookupStandard Arabic dictionaries like the Wehr-Cohenare organized by root headwords like drs (&, j ~)and ktb (~.
~ a).
In fact the roots by themselves89are not valid words, nor are they even pronounce-able until they are combined with a pattern.
Be-cause in orthographical words these root conso-nants or radicals are usually surrounded, and evensplit up, by other consonant letters, and becausethe radicals themselves may be modified by assim-ilation or even deleted entirely in a written word,root identification and dictionary lookup are sig-nificant challenges for learners and native speakersalike.2 GoalsTo be interesting in our applications, the Ara-bic morphology system had to have the followingqualities:1.
It had to deal with real Arabic surface orthog-raphy, as represented on-line in standardssuch as ASMO 449 or the Macintosh Arabiccode page (ISO8859-6).
While it is possible todevise strict roman transliterations of Arabicorthography that are unambiguously convert-ible back and forth into real Arabic orthogra-phy, most existing romanizations are in facttranscriptions that contain more or less in-formation than the original and so representdifferent orthographical systems.2.
It had to be able to analyze Arabic wordsas they appear in real texts.
This meanstimt input words may be fully voweled ordiacriticized (i.e.
supplied with full diacrit-ical markings, a style of writing found onlyin religious texts, poetry, and writings in-tended for children and other learners), par-tially diacriticized or undiacriticized, which isthe normal case.
A single system had to han-dle undiacriticized words and yet be able totake advantage of any diacritics that mightbe present.3.
To facilitate lookup of words in printed andon-line dictionaries, and for pedagogical pur-poses, the system had to return the root as aneasily distinguished part of the analysis.
Aneasier to build, but less useful, system wouldsimply deal with complete stems rather thanroots and patterns.4.
The system had to be large and open-ended,with each root coded to restrict the patternswith which it can in fact co-occur.5.
It had to be efficient and accurate, suc-cessfully analyzing hundreds or thousandsof words per second on commonly availableworkstations and higher-end PCs.6.
It had to perform efficient and accurate gen-eration of valid surface forms when suppliedwith the component root and relevant fea-ture tags.
Analysis and generation had tobe straightforward inverse operations.Forest of Lexicon "Letter Trees"Trees are connected by "continuation classesYA letter path through the trees is an abstract word.Rules hand-compiled into FSTsThe intersection of the rules is simulated in code.Rules allow and control the discrepancies between theabstract words in the lexicon and the surface words beinganalyzed.Figure 2: Traditional Kimmo-Style System Archi-tecture3 H is toryIn 1989 and 1990, with colleagues at ALPNET(Beesley, 1989; Beesley, Buckwalter and New-toil, 1989; Buckwalter, 1990; Beesley, 1990), Ibuilt a large two-level morphological nalyzer forArabic using a slightly enhanced implementationof KIMMO-style two-level morphology (Kosken-niemi, 1983, 1984; Gajek, 1983; Karttunen, 1983).Traditional two-level morphology (see Figure 2),as in the publicly available PC-KIMMO imple-mentation (Antworth, 1990), allows only concate-nation of morphemes in the morphotacties.
Lex-icons are stored and manipulated at runtime asa forest of letter trees, with each trec typicallycontaining a single class of morphemes, with theleaves connected to subsequent morpheme treesvia a system of "continuation classes".
A letterpath through the lexieal trees from a legal start-ing state to a final leaf defines an abstract or "lexi-cal" string.
The various two-level rules, which hadto be hand-compiled into finite-state transducers,were run in parallel by code that simulated theirintersection.
The rules allowed and controlled thevariations between the lexical strings and the sur-face strings being analyzed: thus the Arabic sur-face word wdrsl (~5,~ja ~) could be matched withthe lexical string wa+daras+al, among others, viaappropriate rules.In the ALPNET Arabic system, roots and pat=terns were stored in separate trees in the lexicalforest, and an algorithm, called Detouring, per-formed the interdigitation of semitic roots andpatterns into stems at runtime.
The other chal-90lenges of Arabic morphological w~riation and or-thography, including varying amounts of diacriti-cal marking, all succmnbed to rather complex butconq)letely traditional two-level rules.
Whih" theresulting system was successfidly sold and is alsocurrently being used as the morphological engineof an Arabic project at the University of Mary-land, it suffers from many well-known limitationsof traditional two-level morphology.1.
As there was no automatic rulc compileravailable to us, the rules had to bc compiledinto tinite-state transducers t)y hand, a te-dious task that often influences the linguistto simplify the rules by postulating a rathersurfacy lexical level.
Hand-compilation of acomplex rule, which can easily take hours, isa real disincentive to change and experimen-tation.2.
Because there was no algorithm to intersectthe rule transduccrs, over 100 of them inthe ALPNET system, thcy are stored sepa-rately and must each be consulted separatelyat each step of the analysis.
As the time nec-essary to move a rule transduccr to a newstate is usually independent of its size, mov-ing 100 transducers at runtimc cat, be 100times slower than moving a single intersectedtransducer.3.
Because the lexical letter trccs in a tra-ditional Kimmo-style system are dccoratcdwith glosses, features and other miscellaneousinformation on the leaves, they are not purcfinite-state machines, cannot bc combinedinto a single fsm, cannot be composed withthe rules, and have to be storcd and run asseparate data structures.4.
Various diacritical fcatures inscrted into thelexical strings to insurc proper analyses madethis and other KIMMO-stylc systems awk-ward or in,practical for generation.5.
Finally, in the enhanced ALPNI,;T implemen-tation, the storage of almost 5000 roots andhundreds of patterns it, separate sul)lcxiconssaved memory space, but the l)etouring op-eration that interdigitatcd them in rcaltimewas inherently inelficient, building and thenthrowing away many superficially plausiblesterns that were not sahctioned by the lexi-con codings.
(Any Arabic root (:at, combinelegally with only a small subset of the possi-ble patterns.)
With building phantom stemsand the unavoidable backtracking caused bythe overall deficiency and ambiguity of writ-ten Arabic words, the resulting system wasrather slow, analyzing about 2 words per sec-ond on a small IBM mainframe.Abstract lcxical level:\[ drs & CaCaC \]Abstract intersected Icvcl:darasFigure 3: Intersection of Lexically ConsecutiveRoot and PattcrnAbstract Icxical lcvcl:\[ drs & CVCVC & aa \]Abstract intcrscctcd level:darasFigure 4: Intersection of Lexically ConsecutiveRoot, CV-Template, and Voweling4 Re implementat ionWork began in 1995 to convert he analysis to thcXerox fst format.
The ALPNET lexicons werefirst converted into the format of lexc, the lexi-con c()mpiler (Karttnnen and Beesley, 1992).
Al-thongil lexc by itself is largely limited to concatc-native morphotactics, just like traditional two-level morphology, it was noted that the interdig-itation of semitic roots and patterns is nothingmore or less than their intersection, an operationsupported in the Xerox finite-state calculus.
Thusif ?
represents any letter, and C represents anyradical (consonant), the root drs (tY' -) ~) can beinterpreted as ?*d?*r?*s?
*.The intersection of this root with the patternCaCaC yields the stem daras (ty,55).
See Figure3.In s()mc analyses (e.g.
McCarthy, 1981), thevoweling of the pattern is also abstracted out,leaving pattern templatcs like CVCVC and a vo-calic element hat cat, bc formalized as ?*a?*a?
*.If V represents a vowel, then the intersection ofthe root, ten,plate and vocalic elements yields thesame result.
See Figure 4.Using standard Ol)crations availablc throughthe lexc compiler and other finite-state tools, theanalysis can be constructed according to the tasteand necds of the linguists.Because the upper-side string is returned as theresult of an anMysis, it is often more helpful todefine the upper-side string as a baseform (herea root) folh,wed by a set of symbol tags designedto represent relevant morphosyntactic features ofthe attalysis.
For examph', daras (O,)~) happensto be the Form 1 perfect active stem based on theroot drs ( tY )  a, with CVCVC being the Form91Abstract lexical evel:drs+FormI+Perfect+ActiveAbstract intermediate level:drs+CVCVC+aaAbstract intersected level:darasFigure 5: Root drs with CVCVC Template andActive VowelingAbstract lexical level:drs+Forml+Perfect+PassiveAbstract intermediate l vel:drs+CVCVC+uiAbstract intersected level:durisFigure 6: Root drs with CVCVC Template andPassive VowelingI pattern and the vocal element aa representingactive voice.
The stem duris (~.r,9.~), using thepassive voweling ui is the parallel passive xample.If +FormI, +Perfect, +Active and +Passive aredefined as single symbols, and if +FormI+Perfectmaps to CVCVC, and if +Active maps to aa and+Passive to ui, the analyses can be constructed asin Figures 5 and 6.After composition of the relevant ransducers,the intermediate l vels disappear, resulting in adirect mapping between the upper and lower levelsshown.
The resulting single transducer is calledthe lexicon transducer.All valid stems, currently about 85,000 of them,are automatically intersected, at compile time, atone level of the analysis.
Suitable prefixes andsuffixes are also present in the lexicon transducer,added in the normal concatenative ways.Stems like davas (t.r,33) and duris (tg4~),and especially those like banay (~.')
based on"weak" roots, are still quite abstract and idealizedcompared to their ultimate surface realizations.Finite-state rules rules map the idealized stringsinto surface strings, handling all kinds of epenthe-ses, deletions and assimilations.
The twolc rulecompiler (Karttunen and Beesley, 1992) is ablenot only to recompile the rules automatically butto intersect hem into a single rule fst.
This rulefst is then composed on the bottom of the lexi-Lexicon FST*O.Rule FSTLexical TransducerFigure 7: Composition of Lexicon and Rule FSTsinto a Single Lexical TransducerLexical evel:drs+FormI+Perfect+Active+3P+Fem+SgSurface level:drstFigure 8: Typical Transduction from LexicalString to Unvoweled Surface String c.,~_)~con fst, yielding a single Lexical Transducer.
Thesymbol .o.
in Figure 7 indicates composition.Another transducer is also composed on top ofthe lexicon fst to map various rule-triggering fea-tures, no longer needed, into epsilon and to enforcevarious long-distance morphotactic restrictions.All intermediate l vels disappear in the compo-sitions, and one is left with a single two-level lexi-cal transducer that contains urface strings on timbottom and lexical strings, including roots andtags, on the top.
A typical transduction is shownin Figure 8, where the final t (~)  is the surfacerealization of the third-person feminine singularsuffix -at.
Fully voweled, the surface string forthis reading would be darasat ( -,~a33 ).
Becauseshort vowels are seldom written in surface words,dvst is also analyzed as the Form I perfect pas-sive third-person singular, which would be fullyroweled as dnrisat ( " ,~  ~.~), and as several otherforms.At runtime, strings being analyzed are simplymatched along paths on the bottom side of the lex-ical transducer, and the solution strings are readoff of the matching top side.
Like all finite-statetransducers, it also generates as easily as it ana-lyzes, literally by running the transducer "back-92Lexical CleanupTransduceroO*Lexicon Transducer.o.Rules that GenerateFuily-Voweled FormsoO.Rules Generating fromFully Voweled Forms toAll Surface VariationsFigure 9: Full System with Two Levels of R,uleswards  ~ .The Arabic system runs in exactly the sameway, using the same runtime code, a~ the lcxi-cal transducers for other languages like English,French and Spanish.
The Arabic system is, how-ever, substantially slower than the.
other lan-guages, t)ecause the ambiguity of the surfacewords forces many dead-end analysis paths to beexplored and because more valid solutions haveto be found and returned.
The mismatch betweenthe concatenated root and pattern on the lexicalside and the intersected stem on the lower sidealso creates an Arabic system that is substantiallylarger than the other languages.5 Generat ionA single underlying Arabic word may be spelledmany ways on the surface, depending on how coin-plctely the writer specilies the diacritics.
Becausethe system described above recognizes all possiblewritten forms of a word, with varying degrees ofdiacritical marking, it also generates all the possi-ble surface forms of a word, which may be lessthan useful in many applications, q'yi)ically, auser wants to see only the fidly vowcled form dur-ing generation.The Arabic rules have now been modilied towork in two steps, lirst to generate the fully vow-eled form, and then to generate the various par-tially roweled forms and the unvoweled form.Where desired, the lexicon fst can be composedwith only the upper set of rules to make a lexicaltransducer that gencratcs (and recognizes) onlyfully-roweled surface forms, l,'or general recogni-tion, both sets of rules, a.s shown in Figure 9, arecomposed.
The result is equivalent to the originallexical transducer described in Figure 7.6 Conc lus ionArabic morphology, though considerably more dif-ficult than the morphology found in the commonlystudied European languages, is fully susceptibleto finitc-state analysis techniques, either in an en-hanced two-level morphology or in the mathemat-ically equiwdent but much more cornputationallyefficient Xerox finite-state format.
We hope to ex-tend our tinite-state techniques to cover Ilebrewand <)ther languages with exotic morphology.Re ferencesAntworth, Evan L. 1990.
PC-KIMMO: A Two-level Processor for Morphological Analysis.
Occa-sional Publications in Academic Computing No.16.
Dallas: Summer Institute of Linguistics.Beesley, Kenneth R. 1989.
Computer Analy-sis of Arabic Morphology: A Two-Level Approachwith Detours.
Read at the Third Annual Sympo-sium on Arabic I,inguistics, University of Utah,Salt Lake City, Utah, 3-4 March 1989.
Publishedin Bernard Comrie and Mushira Eid (eds.
), Per-spectives on Arabic Linguistics 111: l'apers fromthe Third Anuual Symposium on Arabic Linguis-tics, Amsterdam: John Benjamins, pp.
155-172.Beesley, Kcnneth R.; Buckwalter, Tim; andNewton, Stuart N. 1989.
Two-Level Finite-StateAnalysis of Arabic Morphology.
In Proceedingsof the Seminar on Bilingual Computing in Arabicand English, Cambridge, England, 6-7 Sept 1989.No pagination.Beesley, Kenneth R.. 1990.
Finite-State De-scription of Arabic Morphology.
In Proceedingsof the Second Cambridge Conference on BilingualComputing in Arabic and English, 5-7 Sept 1990.No pagination.Beeston, A.F.L.
1968.
Written Arabic: an ap-proach to the basic structures.
Cambridge: Cam-bridge University Press.Buckwalter, Timothy A.
1990.
LexicographicNotation of Arabic Noun Pattern Morphemes andTheir Inflectional Features.
In Proceedings of theSecond Cambridge Conference on Bilingual Com-puting in Arabic and English, 5-7 Sept 1990.
Nopagination.Gajek, Oliver el al.
1983.
LISP lmplcmenta-tion.
Texas Linguistic Forum 22 ed.
by 1)alrym-pie et al Austin: Linguistics Department.
Uni-versity of Texas, pp.
187-202Kaplan, Ronald M. and Kay, Martin.
1981.l)honological rules and linite-state transducers\[Abstract\].
Linguistic Society of America Meeting93Handbook.
Fifty-Sixth Annual Meeting, Decem-ber 27-30, 1981.
New York.Kaplan, Ronald M. and Kay, Martin.
1994.Regular Models of Phonological Rule Systems.Computational Linguistics.
20:3, pp.
331-378.Karttunen, Lauri.
1983.
A General Morpholog-ical Processor.
Texas Linguistic Forum 22 ed.
byDalrumple t al.
Austin: Linguistics Department,University of Texas, pp.
165-186.Karttunen, Lauri.
1991.
Finite-State Con-straints.
In the Proceedings of the InternationalConference on Current Issues in ComputationalLinguistics.
June 10-14, 1991.
Penang:UniversitiSains Malaysia.Karttunen, Lauri; Kaplan, Ronald M.; and Za-enen, Annie.
1992.
Two-Level Morphology withComposition.
COLING 92, pp.
141-148.Karttunen, Lauri.
1993.
Finite-State LexiconCompiler.
Technical Report.
ISTL-NLTT-1993-04-02.
Xerox Palo Alto Research Center.
PaloAlto, California.Koskenniemi, Kimmo.
1983.
Two-Level Mor-phology: A General Computational Model forWord-Form Recognition and Production.
Publi-cation No.
11.
Helsinki: Department of GeneralLinguistics, University of Helsinki.Koskenniemi, Kimmo.
1984.
A General Com-putational Model for Word-Form Recognition andProduction.
COLING 84, pp.
178-181.Karttunen, Lauri and Beesley, Kenneth R.1992.
Two-Level Rule Compiler.
Technical Re-port.
ISTL-1992-2.
Xerox Palo Alto ResearchCenter.
Palo Alto, California.McCarthy, J.
1981.
A Prosodic Theory of Non-concatenative Morphology.
Linguistic Inquiry,12(3), pp.
373-418.Wehr, Hans.
1976.
A Dictionary of ModernWritten Arabic.
Third edition, ed.
by J. MiltonCowan.
Ithaca, N.Y.:Spoken Language Services,Inc.94
