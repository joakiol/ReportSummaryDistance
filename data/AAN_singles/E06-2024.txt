A Suite of Shallow Processing Tools for Portuguese:LX-SuiteAnto?nio BrancoDepartment of InformaticsUniversity of Lisbonahb@di.fc.ul.ptJoa?o Ricardo SilvaDepartment of InformaticsUniversity of Lisbonjsilva@di.fc.ul.ptAbstractIn this paper we present LX-Suite, a setof tools for the shallow processing of Por-tuguese.
This suite comprises severalmodules, namely: a sentence chunker, atokenizer, a POS tagger, featurizers andlemmatizers.1 IntroductionThe purpose of this paper is to present LX-Suite,a set of tools for the shallow processing of Por-tuguese, developed under the TagShare1 project bythe NLX Group.2The tools included in this suite are a sentencechunker; a tokenizer; a POS tagger; a nominal fea-turizer; a nominal lemmatizer; and a verbal featur-izer and lemmatizer.These tools were implemented as autonomousmodules.
This option allows to easily replace anyof the modules by an updated version or even by athird-party tool.
It also allows to use any of thesetools separately, outside the pipeline of the suite.The evaluation results mentioned in the nextsections have been obtained using an accuratelyhand-tagged 280, 000 token corpus composed ofnewspaper articles and short novels.2 Sentence chunkerThe sentence chunker is a finite state automaton(FSA), where the state transitions are triggeredby specified character sequences in the input, andthe emitted symbols correspond to sentence (<s>)and paragraph (<p>) boundaries.
Within thissetup, a transition rule could define, for example,1http://tagshare.di.fc.ul.pt2NLX?Natural Language and Speech Group, at the De-partment of Informatics of the University of Lisbon, Facultyof Sciences: http://nlx.di.fc.ul.ptthat a period, when followed by a space and a cap-ital letter, marks a sentence boundary:??
?
?.
A?
?
??
?
??
?
?.</s><s>A?
?
?
?Being a rule-based chunker, it was tailored tohandle orthographic conventions that are specificto Portuguese, in particular those governing dia-log excerpts.
This allowed the tool to reach a verygood performance, with values of 99.95% for re-call and 99.92% for precision.33 TokenizerTokenization is, for the most part, a simple task,as the whitespace character is used to mark mosttoken boundaries.
Most of other cases are alsorather simple: Punctuation symbols are separatedfrom words, contracted forms are expanded and cl-itics in enclisis or mesoclisis position are detachedfrom verbs.
It is worth noting that the first ele-ment of an expanded contraction is marked witha symbol (+) indicating that, originally, that tokenoccurred as part of a contraction:4um, dois ?|um|,|dois|da ?|de+|a|viu-o ?|viu|-o|In what concerns Portuguese, the non-trivial as-pects of tokenization are found in the handling ofambiguous strings that, depending on their POStag, may or may not be considered a contrac-tion.
For example, the word deste can be tok-enized as the single token |deste| if it occursas a verb (Eng.
: [you] gave) or as the two tokens|de+|este| if it occurs as a contraction (Eng.
:of this).3For more details, see (Branco and Silva, 2004).4In these examples the | symbol will be used to marktoken boundaries more clearly.179It is worth noting that this problem is not a mi-nor issue, as these strings amount to 2% of the cor-pus that was used and any tokenization error willhave a considerable negative influence on the sub-sequent steps of processing, such as POS tagging.To resolve the issue of ambiguous strings, atwo-stage tokenization strategy is used, where theambiguous strings are not immediately tokenized.Instead, the decision counts on the contribution ofthe POS tagger: The tagger must first be trainedon a version of the corpus where the ambiguousstrings are not tokenized, and are tagged with acomposite tag when occurring as a contraction (forexample P+DEM for a contraction of a prepositionand a demonstrative).
The tagger then runs overthe text and assigns a simple or a composite tag tothe ambiguous strings.
A second pass with the to-kenizer then looks for occurrences of tokens witha composite tag and splits them:deste/V?|deste/V|deste/P+DEM?|de+/P|este/DEM|This approach allowed us to successfully re-solve 99.4% of the ambiguous strings.
This is amuch better value than the baseline 78.20% ob-tained by always considering that the ambiguousstrings are a contraction.54 POS taggerFor the POS tagging task we used Brant?s TnT tag-ger (Brants, 2000), a very efficient statistical tag-ger based on Hidden Markov Models.For training, we used 90% of a 280, 000 tokencorpus, accurately hand-tagged with a tagset of ca.60 tags, with inflectional feature values left aside.Evaluation showed an accuracy of 96.87% forthis tool, obtained by averaging 10 test runs overdifferent 10% contiguous portions of the corpusthat were not used for training.The POS tagger we developed is currently thefastest tagger for the Portuguese language, and itis in line with state-of-the-art taggers for other lan-guages, as discussed in (Branco and Silva, 2004).5 Nominal featurizerThis tool assigns feature value tags for inflection(Gender and Number) and degree (Diminutive,Superlative and Comparative) to words from nom-inal morphosyntactic categories.5For further details see (Branco and Silva, 2003).Such tagging is typically done by a POS tagger,by using a tagset where the base POS tags havebeen extended with feature values.
However, thisincrease in the number of tags leads to a lower tag-ging accuracy due to the data-sparseness problem.With our tool, we explored what could be gainedby having a dedicated tool for the task of nominalfeaturization.We tried several approaches to nominal featur-ization.
Here we report on the rule-based approachwhich is the one that better highlights the difficul-ties in this task.For this tool, we built on morphological regular-ities and used a set of rules that, depending on theword termination, assign default feature values towords.
Naturally, these rules were supplementedby a list of exceptions, which was collected by us-ing an machine readable dictionary (MRD) that al-lowed us to search words by termination.Nevertheless, this procedure is still not enoughto assign a feature value to every token.
Themost direct reason is due to the so-called invari-ant words, which are lexically ambiguous with re-spect to feature values.
For example, the CommonNoun ermita (Eng.
: hermit) can be masculine orfeminine, depending on the occurrence.
By simplyusing termination rules supplemented with excep-tions, such words will always be tagged with un-derspecified feature values:6ermita/?STo handle such cases the featurizer makes use offeature propagation.
With this mechanism, wordsfrom closed classes, for which we know their fea-ture values, propagate their values to the wordsfrom open classes following them.
These words,in turn, propagate those features to other words:o/MS ermita/MS humilde/MSEng.
: the-MS humble-MS hermit-MSbuta/FS ermita/FS humilde/FSEng.
: the-FS humble-FS hermit-FSSpecial care must be taken to avoid that featurepropagation reaches outside NP boundaries.
Forthis purpose, some sequences of POS categoriesblock feature propagation.
In the example below,a PP inside an NP context, azul (an ?invariant?6Values: M:masculine, F:feminine, S:singular, P:pluraland ?
:undefined.180adjective) might agree with faca or with the pre-ceding word, ac?o.
To prevent mistakes, propaga-tion from ac?o to azul should be blocked.faca/FS de ac?o/MS azul/FSEng.
: blue (steel knife)orfaca/FS de ac?o/MS azul/MSEng.
: (blue steel) knifeFor the sake of comparability with other pos-sible similar tools, we evaluated the featurizeronly over Adjectives and Common Nouns: It has95.05% recall (leaving ca.
5% of the tokens withunderspecified tags) and 99.05% precision.76 Nominal lemmatizerNominal lemmatization consists in assigning toAdjectives and Common Nouns a normalizedform, typically the masculine singular if available.Our approach uses a list of transformation rulesthat helps changing the termination of the words.For example, one states that any word ending inta should have that ending transformed into to:gata ([female] cat)?
gato ([male] cat)There are, however, exceptions that must be ac-counted for.
The word porta, for example, is afeminine common noun, and its lemma is porta:porta (door, feminine common noun)?
portaRelevant exceptions like the one above werecollected by resorting to a MRD that allowed tosearch words on the basis of their termination.
Be-ing that dictionaries only list lemmas (and not in-flected forms), it is possible to search for wordswith terminations matching the termination of in-flected words (for example, words ending in ta).Any word found by the search can thus be consid-ered as an exception.A major difficulty in this task lies in the list-ing of exceptions when non-inflectional affixes aretaken into account.
As an example, lets con-sider again the word porta.
This word is anexception to the rule that transforms ta into to.As expected, this word can occur prefixed, asin superporta.
Therefore, this derived word7For a much more extensive analysis, including a compar-ison with other approaches, see (Branco and Silva, 2005a).should also appear in the list of exceptions to pre-vent it from being lemmatized into superportoby the rule.
However, proceeding like this for ev-ery possible prefix leads to an explosion in thenumber of exceptions.
To avoid this, a mechanismwas used that progressively strips prefixes fromwords while checking the resulting word formsagainst the list of exceptions:supergata-----gata (apply rule)?
supergatobutsuperporta-----porta (exception)?
superportaA similar problem arises when tackling wordswith suffixes.
For instance, the suffix -zinhoand its inflected forms (-zinha, -zinhos and-zinhas) are used as diminutives.
These suf-fixes should be removed by the lemmatization pro-cess.
However, there are exceptions, such as theword vizinho (Eng.
: neighbor) which is not adiminutive.
This word has to be listed as an excep-tion, together with its inflected forms (vizinha,vizinhos and vizinhas), which again leadsto a great increase in the number of exceptions.
Toavoid this, only vizinho is explicitly listed as anexception and the inflected forms of the diminu-tive are progressively undone while looking for anexception:vizinhas (feminine plural)vizinha (feminine singular)vizinho (exception)?
vizinhoTo ensure that exceptions will not be over-looked, when both these mechanisms work in par-allel one must follow all possible paths of affix re-moval.
An heuristic chooses the lemma as beingthe result found in the least number of steps.8To illustrate this, consider the word antena(Eng.
: antenna).
Figure 1 shows the paths fol-lowed by the lemmatization algorithm when it isfaced with antenazinha (Eng.
: [small] an-tenna).
Both ante- and -zinha are possibleaffixes.
In a first step, two search branches areopened, the first where ante- is removed andthe second where -zinha is transformed into8This can be seen as following a rationale similar to Karls-son?s (1990) local disambiguation procedure.181antenazinhanazinha antenazinhonazinho nazinho antenananonano01234Figure 1: Lemmatization of antenazinha-zinho.
The search proceeds under each branchuntil no transformation is possible, or an exceptionhas been found.
The end result is the ?leaf node?with the shortest depth which, in this example, isantena (an exception).This branching might seem to lead to a greatperformance penalty, but only a few words haveaffixes, and most of them have only one, in whichcase there is no branching at all.This tool evaluates to an accuracy of 94.75%.97 Verbal featurizer and lemmatizerTo each verbal token, this tool assigns the corre-sponding lemma and tag with feature values forMood, Tense, Person and Number.The tool uses a list of rules that, depending onthe termination of the word, assign all possiblelemma-feature pairs.
The word diria, for exam-ple, is assigned the following lemma-feature pairs:diria?
?dizer,Cond-1ps??
?dizer,Cond-3ps??
?diriar,PresInd-3ps??
?diriar,ImpAfirm-2ps?Currently, this tool does not attempt to disam-biguate among the proposed lemma-feature pairs.So, each verbal token will be tagged with all itspossible lemma-feature pairs.The tool was evaluated over a list with ca.800, 000 verbal forms.
It achieves 100% preci-sion, but at 50% recall, as half of those formsare ambiguous and receive more than one lemma-feature pair.9For further details, see (Branco and Silva, 2005b).8 Final RemarksSo far, LX-Suite has mostly been used in-housefor projects being developed by the NLX Group.It is being used in the GramaXing project,where a computational core grammar for deep lin-guistic processing of Portuguese is being devel-oped under the Delphin initiative.10In collaboration with CLUL,11 and under theTagShare project, LX-Suite is being used to helpin the building of a corpus of 1 million accuratelyhand-tagged tokens, by providing an initial, high-quality tagging which is then manually corrected.It is also used for the QueXting project, whoseaim is to make available a question answering sys-tem on the Portuguese Web.There is an on-line demo of LX-Suite locatedat http://lxsuite.di.fc.ul.pt.
Thison-line version of the suite is a partial demo,as it currently only includes the modules up tothe POS tagger.
By the end of the TagShareproject (mid-2006), all the other modules de-scribed in this paper are planned to have beenincluded.
Additionally, the verbal featurizer andlemmatizer can be tested as a standalone tool athttp://lxlemmatizer.di.fc.ul.pt.Future work will be focused on extending thesuite with new tools, such as a named-entity rec-ognizer and a phrase chunker.ReferencesBranco, Anto?nio and Joa?o Ricardo Silva.
2003.
Con-tractions: breaking the tokenization-tagging circu-larity.
LNAI 2721. pp.
167?170.Branco, Anto?nio and Joa?o Ricardo Silva.
2004.
Evalu-ating Solutions for the Rapid Development of State-of-the-Art POS Taggers for Portuguese.
In Proc.
ofthe 4th LREC.
pp.
507?510.Branco, Anto?nio and Joa?o Ricardo Silva.
2005a.
Ded-icated Nominal Featurization in Portuguese.
ms.Branco, Anto?nio and Joa?o Ricardo Silva.
2005b.
Nom-inal Lemmatization with Minimal Word List.
ms.Brants, Thorsten.
2000.
TnT - A Statistical Part-of-Speech Tagger.
In Proc.
of the 6th ANLP.Karlsson, Fred 1990.
Constraint Grammar as aFramework for Parsing Running Text.
In Proc.
ofthe 13th COLING.10http://www.delph-in.net11Linguistics Center of the University of Lisbon182
