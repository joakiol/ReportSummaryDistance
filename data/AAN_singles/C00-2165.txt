KCAT : A Korean Corpus Annotating Tool Minimizing HumanInterventionWon-He Ryu, Jin-Dong Kim, l ine-Chang RimDept.
of Computer Science & Engineering,Natural Language Processing Lab,Korea UniversityAnam-dong 5-ga, Seongbuk-gu, Seoul, Koreawhryu, jin, rim @nlp.korea.ac.krAbstractWhile large POS(part-of-speech) annotatedcorpora play an important role in naturallanguage processing, the annotated corpusrequires very high accuracy and consistency.To build such an accurate and consistentcorpus, we often use a manual taggingmethod.
But the manual tagging is verylabor intensive and expensive.
Furthernaore,it is not easy to get consistent results fromthe humari experts.
In this paper, we presentan efficient tool lbr building large accurateand consistent corpora with minimal humanlabor.
The proposed tool supports semi-automatic tagging.
Using disambiguationrules acquired from human experts, itminimizes the human intervention in boththe manual tagging and post-editing steps.1.
IntroductionThe POS annotated corpora are veryimportant as a resource of usefiil information tbrnatural language processing.
A problem forcorpus annotation is tile trade-off betweenefficiency and accuracy.Although manual POS ta,,<,in,,==  is veryreliable, it is labor intcnsive and hard to make aconsistent POS tagged corpus.
On the other hand,automatic ta,-,in,,>~  is prone to erroi-s Ibrinfrequently occurring words duo to tile lack el"overall linguistic information.
At present, it isahnost impossible to construct a highly accuratecorptls by usin<,~ an automatic taggcr~ alone./ks a consequence, a semi-autonmtic ta,,,,in,~==method is proposed IBi corpus annotation.
InHeui-.Seok LiraInformation Communications Department,Natural Language Processing Lab,Chonan University85-1, Anseo-Dong, Chonan City,ChungChong-NamDo Province, Koreatimhs@inli~com.chonan.ac.krordiriary semi-automatic tagging, an automatictagger tags each word and human experts correctthe rots-tagged words in the post-editing step.But, in the post-editing step, as the human expertcannot know which word has been annotatedincorrectly, he must check every word in thewhole corpus.
And he lnust do the same workagain and again for the same words in the samecontext.
This situation causes as Inuchlabor-intensive work as in manual ta<+<qlwIn this paper, we propose a semi-automatictagging method that can reduce the human laborand guarantee the consistent tagging.2o System Requivemer~tsTo develop ari efficient tool that attempts tobuild a large accurately armotated corpus withminimal human labor~ we must consider thefollowing requirements:?
In order to minimize human labor, the samehuman intervention to tag and to correct thesame word in tile same context should not berepeated.
* There may be a word which was taggedinconsistently in the same context becatlse itwas tagged by different human experts or at adifferent ask time.
As an elticient tool, it canprevent tile inconsistency of tile annotated( I  results and ~uarantec the consistency of theannotated results.
* It must provide an effective annotatingcapability lbr many unknown words in thewhole corpus.10963.
Proposed POS Tagging ToohKCATThe proposed POG tagging tool is used tocombine the manual tagging method and theautomatic tagging method.
They are integratedto increase the accuracy o\[" the automatic taggingmethod and to minimize the amount of tilehuman labor of thc manual tagging method.Figure 1 shows the overall architecture of theproposed tagging tool :KCAT.I .
.
.
.
.
.
.
.
.
I I I ~ I P I Raw (..rpus ILIPos t -Fn Jcess  ~t  I re - l rocess( ' c J r rec t  an  ~ .
.
.
.
.
.
.
.
.
.
.
:~  ; .
.
.
.
,R  s " " .
.
.
.
.
.
.
.
.
.- -7 - -~ i - -g~____~ " : .i ~'f::: 2aa' :ii,:n~ ......Figure 1.
System Architecture of KCATAs shown in figm'e 1, KCAT consists ofthree modules: the pre-processing module, theautomatic tagging module, and thepost-processing module.
In the prcoprocessingmodule, the disambiguation rules are acquiredI%m human experts.
The candidate words areIhe target words whose disambiguation rules areacquired.
The candidate words can be unknownwords and also very frequent words.
In addition,the words with problematic ambiguity for tlleautomatic tagger can become candidates.l)lsamblguation rules are acquired with minimalhuman labor using tile tool t:n'oposed in(Lee, 1996).
In the automatic tagging naodule, thedisambiguation rules resolve the ambiguity of{,'very word to which they can be applied.I lowever, tile rules are certainly not sufficient oresolve all the ambiguity of the whole words infile corpus.
The proper tags are assigned to theremaining ambiguous words by a stochastic< t~"  c, hL l l l l an  lagger.
After the automatic t, m~, aexpert corrects tile onors o\[ the stochastic ta,me,The system presents the expert with the resultsof the stochastic tagger.
If the result is incorrect,tile hulllan expel1 corrects the error andgenerates a disambiguation rule ~br the word.The rule is also saved in the role base in order tobc used later.3.
I. l.exical Rules for DisambiguationThere are many ambiguous words that areextremely difficult to resolve alnbiguities byusing a stochastic tagger.
Due to the problematicwords, manual tagging and manual correctionmust be done to build a correct coqms.
Suchhuman intervention may be repeated again andagain to tag or to correct tile same word in thesame context.For example, a human expert should assign'Nal(flying)/Verb+Neun/Ending' to every'NaNemf repeatedly in the following sentences:" Keu-Nyeo-Neun Ha-Neul-Eul Na-NeunPi-Haeng-Ki-Reul Port Ceok-i Iss-Ta."
(she hasseen a flying plane)"Keu-Netm lht-Nc'ul-Eul NaoNeunt'i-Itaeng--Ki-Reul Port Ceok-i Eops-Ta."
(he hasnever seen a flying phme)"Keu-Netm tta-Ne,tl-Eul Na-NeunPi--ttaeng--Ki-Reul Pal-Myeong-tlaess- Ta."
(heinvented a flying plane)In the above sentences, human experts canresolve the word, 'Na-Nemf with only theprevious and ttle next lexical information:'fla-Neul-Eul' and 'Pi-tlaeng- Ki-Reul'.
In otherwords, tile human expert has to waste time ontagging the same word in tile same contextrepeatedly.
This inefficiency can also behappened in the manual correction of thentis-tagged words.
So, if the human expert canmake a rule with his disambiguation knowledgeand use it for tile same words in tile samecontext, such inefficiency can be minimized.
Wedefine the disambiguation rule as a lexical rule.Its template is as follows.\[P:N\] \[Current Word\] \[Context\] = \[TaggingP, esuh\]Context ?
Previous words?p * Next Words?,,Ill tile above template, p and n mean tileprevious and the next context size respectively.For the present, p and n are limited to 3.
'*'1097represents the separating mark between theprevious and next context.
For example, tile rule\[1:1\] \[Na-,'\:lten\] \[Ha-Neul-Eld * Pi-Haeng-Ki-Reul\] = \[Na/(flying)/Verb i- Neun/Ending \]saysthe tag 'Nal(flying)/Verb +Neun/Ending' shouldbe assigned to the word 'Na-Neun' when theprevious word and the next word is'Ha-Neul-Eul' and 'Pi-Haeng-Ki-Reul'.Although these lexical rules cannot alwayscorrectly disambiguate all Korean words, theyare enough to cover many problematicambignous words.
We can gain some advantagesof using the lexical rule.
First, it is very accuratebecause it refers to the very specific lexicalinformation.
Second, the possibility of ruleconflict is very little even though the number ofthe rules is increased.
Third, it can resolveproblematic ambiguity that cannot be resolvedwithout semantic inf'onnation(Lim, 1996).3.2.
Lexicai Rule AcquisitionLexical rules are acquired for the unknownwords and the problematic words that are likelyto be tagged erroneously by an automatic tagger.Lexical rule acquisition is perlbrmed byfollowing steps:1.
The system builds a candidate list ofwords li)r which the lexical rules would beacquired.
The candidate list is the collectionof all examples of unknown words andproblematic words for an automatic tagger.2.
A human expert selects a word from thelist and makes a lexical rule for the word.3.
The system applies tile lexical rule to allexamples of the selected word with samecontext and also saves the lexical rule in therule base.4.
P, epeat tile steps 2 and 3 until allexamples of the candidate words can betagged by the acquired lexical rules.3.3.
Automatic Ta,,, in,,In the automatic ta,,~dn-oo ~ phase, words aredisambiguated by using the lexical rules and astochastic tagger.
To armotate a word in a rawcorpus, the rule-based tagger first searches thelexical rule base to find a lexical rule that can benlatched with tile given context.
If a matchingrnle is found, the system assigns the result of therule to the word.
According to the correspondingrule, a proper tag is assigned to a word.
With tilelexical rules~ a very precise tag can be assignedto a word.
However, because the lexical rules donot  resolve all the ambiguity of the whole corpus,we must make use of a stochastic tagger.
Weemploy an HMM--based POS tagger for thispurpose(Kim,1998).
The stochastic taggerassigns the proper tags to the ambiguous wordsafier the rule application.Alter disambiguating the raw corpus usingthe lexical rules and the atttomatic tagger, wearrive at the frilly disambiguated result.
But theword tagged by the stochastic tagger may have achance to be mis-tagged.
Therefore, thepost-processing for error correction is requiredfor the words tagged by the stochastic tagger.3.4.
Error CorrectionThe human expert carries out the errorcorrection task for the words tagged by astochastic tagger.
This error correction alsorequires tile repeatecl human labor as in themanual tagging.
We employ the similar way ofthe rule acquisition to reduce the human laborneeded for manual error cmTection.
The resultsof the automatic tagger are marked to bedistinguished from tile results of the rule-basedtagger.
The human expert checks the markedwords only.
If an error is found, the ht/manexpert assigns a correct tag to the word.
Whentile expert corrects the erroneous word, tilesystem automatically generates a lexicat rule andstores it in tile rnle base.
File newly acquiredrule is autoinatically applied to the rest of tilecorpus.
Thus, the expert does not need to correctthe repeated errors.1098B ........A .
.
.
J:~ ,?
"~; ~ ~'J ~'Y,I .:'l~ll,k!
G'~(~ ~:)':'fl,q !
!
!~l))L" , l ' ) l  ,q';'.%ll.q !ll~ ~.
"?1 )~:d~:':} 'k L '  ~i~ tl ?
r31 ,31 ?2 :~ '2'.'
:~ ,:,i\[ .~ YZ.
"?!
:'J q l :'112j X,"~ ?t ) I -@ ~!
?
I".
'.20 t~'~tJ 2: .c Ul I '3t3b!:!
I ~ :~ '~ (IM{3tl *,1 N ~ :31 ,'q ~?i ::i ; '  ?,,3 ~ :~ ~J g~ "JH Gr.NwO}.lx* I '?v?et~a5 : !~31 W~'gf f l l  Y '~a!
t l t~0 l  adlTll ' , lLr'9~.r ,~ wU,t.l:<t E : '?t:S eft ~1:"E(';'.hTF ~ I '~ t,iH,'.t CH.q',~'~ Ncrs icTc~, : ' I~L .
IOF ' , I~qEA ~x~.
'qlOL }~M~?-"-- '?I I~ "~.=i~I  'q:" Gt~i!~} 5"3~d~/t,\]HP*~:}IJ'2J, kt21 ~t X}el/tlt'l!3 ?
N,,'JF O:" h!T;UIHOII !,~T?~I'I/f'g'dG.OII/JC:.
*.
;9 E ,~;.,V~.,*?.L.
'EP* /EF -  GF~.~n ~ 7;/I, iN p .
~,,d X:, ~la~ At ~I"~INhII\]-.Lt/JFB> @~(~,~ .. @~iNNP- ( /SS ,~ ' I /SH.g~ ~ 11 t,'(I ~J L~ .~,!/N N P ?
Ilt Xl ~I/ JK G> ZI~01 M XI~/NN,-~*OtlM/Ji:B?H ;~?I  01 ~/NN,5 .
~I,/.JK6G' Xtl ~ 7?
.~tl / r,~ N 6 ?
~ ,/o K o " - .
_ "> ~'\[?8101 gd,l> ~t' *~alDN G-0~/J> ~.~.
$t lVV*92/EP-~niEF - zSPi'~ 92XI g, ol  S'!gMtaNG.XI%VNN,3.
?I/.> ~Xl2 J~ ~XI?
J /NN?
'~ I JF .O~ )I a~ IJ}:?_k ~ ) I /NNG -8 }/XSV-OHjLnt; ~.E}.
8t/VV*?
)\[EP.E~/EF*/SF\] ~,J '_'6&}; .3} .~4j~q <?Jr 't ~r~?
j  ~.II?41~.L ~> k12I > 3~t?ItG'?3 )ldlt ~"/q'41'lG.
?l ', KG.
.
.
.
.
.
.
.
.
21 x oH,~t'~011:,11 ~,,ki~_~ ~HYj9 : ; ' .3o  x ~,-a4 ~,i1,,'i~bJ 3* /SP  ?.
.
.
.
2\[_ '.
f~ l _  ___ -~-~A Xll, ) lge.
131Ct1~21 2N.~gJ ~,{~0"IIM)~- .
.
.
.
.
.
.
.
.
.
.
.
.
I .
.
.
.
.
.
.
.
.
.
;111~ J::,~2!
;,7~,-~ -~.
,~, ,~.~.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~ ,~_  .
.
.
.
.
.Figure 2.
Bu i ld ing  Annotated  Corpus Usiug KCAT4.
Application to Build Large CorporaBased on the proposed method~ we haveimrdemented, a corpus--annotating tool forKoreart which is named as KCAT(KoreanCorpus Annotating 'Fool).
The process ofbuilding large corpora with KCAT is as lbllows:1.
The lexical roles in the rule base areapplied to a raw corpu::,.
If the rule base i!
;empty, nothing will be done.2.
The sy,~;tem akes a candidate li';t.3.
Ilunmn expert produces the lexical 1.ulesfor the words in the candidate list.4.
The .~;ystem tags the corpus by using thelexical rHles and a stochastic t,l~,~.c~.5.
Hunmn manually con?cots errors caused bythe stochastic tagger, and lexical rules forthose errors are also stored in therole--base.6.
For other corpus, repeat the steps 1through 5.Figure 2 shows a screenshot f KCAT.
In thisfigure, "A' window represents the list of rawcorpus arm a "B' window contains the contcnt ofthe selected raw corpus in the window A. Thetagging result is displayed in the window 'C'.Words beginning with ">' are tagged by astocha,,;tic la-<,e, and the other words are ta~Eedby lexical rules.We can -et the more lexical rules as theta,,,,itw process is prom-esscd.
Therefore, we canexpect that the aecunu-y and the reduction rateCof human htbor are increased a~ long as thetagging process is corltilmed.5.
Experimental ResultsIn order to estimate tim experimental resultsof our system, we collected the highlyambiguous words and frequently occurringwords in our test corpus with 50,004 words.\]able I shows reductions in human interventionrequired to armotate the raw coums when we uselexical rules lbr the highly ambiguous words andthe frequently occurring words respectively.
Thesecond colurnn shows that we examined the4,081 OCCLirrences of 2,088 words with tagchoices above 7 and produced 4,081 lexicalrules covering 4,832 occurrences of the corpl_lS.In this case, the reduction rate of humanintervention is 1.5%.
~ The third column showsthat we exalnined thc 6,845 occurrences of 511words with ficqucncy above 10 and produced6,845 lexical rules covering 15,4 l 8 occurrencesof the corpus.
In tiffs case, the reduction rate ofhuman intervention is 17%.
2The last row in the table shows howintbrnmtive the rules are.
We measured it by theinq-~iovement rate of stochastic tagging ;_!.l'l.el- therules arc applied.
From these experimentalresult.~;, wc can judge that rule-acquisition fromflcquelatly occurring words is preferable.i (4,~., _4,(),v; l ) / 50,004~.
( 15,41 x-6,g~b ) / 50,0041099Table 1.
Reduction in human InterventionI Type of wordlbr ruleacquisitionNumber ofwordsAmbiguouswords (_>7)Frequentlyoccurringwords (_>10)4832(9.6?/,,) 15418(30%)Number of 408 l 6845lexical rulesDecrement of 1.5% 17%h u lll a 11interventionhnprovement 1.6% 3.7%of taggingaccttracy (94.1-92.5%) (95.2-92.5%)Table 2 shows the results of our experiments ontile applicability of lexical rules.
We measure itby the improyement rate of stochastic taggingalter the rules acquired from other corpus areapplied.The third row shows that we annotate a trainingcorpus with 10,032 words and produce 631lexieal rules, which can be applied to anothertest corpus to reduce tile number of thestochastic ta-,,in,, errors frorn 697 to 623.
3The ~brth and fifth row show that as the numberof lexical rules is increased, the number of theerrors of the tagger is decreased on the testcorpus.These experilnental results demonstrate tilepromise of gradual decrement of humanintervention and improvement of taggingaccuracy in annotating corpora.Table 2.
Applicability of Lexical RulesSize of tile The nunaber The number ofcorpus of lexical stochasticroles errors0 0 69710,032 631 62.320,047 136l 565_~( ,049 2091 5386.
ConclusionThe main goal of our work is to dcvelop anefficiclat tool which supports to build a very3 Our test corpus includes 10,015 wordsaccurately and consistently POS annotatedcorpus with nlinilnal hunmn labor.
To achievethe goal, we have proposed a POS ta,,-in- toolnamed KCAT which can use human linguisticknowledge as a lexical rule form.
Once a lexicalrole is acquired, the hutnan expert doesn't needto spend titne in tagging the same word in thesame context.
By using the lexical roles, wecould have very accurate and consistent resultsas well its reducing the amount of the hurnanlabor.It is obvious that the more lexical roles thetool acquires the higher accuracy andconsistency it achieves.
But it still requires a lotof human labor and cost to acquire many lexicalrules.
And, as the number of the lexical rules isincreased, the speed of rule application isdecreased.
To overcome the barriers, we try tofind a way of rule generalization and a moreefficient way of rule encoding scheme like thefinite-state atttomata(Roche, 1995).Furthermore, we will use the distance of thebest and second tag's probabilities to classifyreliable automatic tagging result and unreliableta,,,,in,, result(Brants, 1999).Refere\[IcesBrants~ T. Skut, W. and Uszkoreit, H. (1999)A),ntac'tic /hmotatio/1 of  a German N~.-*lri'Spal)e\]"Coums.
In "Jourrlees ATALA", pp.69?76.Kim, J. D. Lira, H. S. and Rim, H. C. (1998)Morl)henle-Unit POS Tagging Mode/Considering Eojeol-Spacing.
In "Proc.
of the10th ttangul and Korean InformationProcessing Conference", pp.3-8.Lee, J. K. (1996) Eojeol-tmit rule Based POStag~in?~ with minimal human intervention.
M.S dissertation, Dept.
of Computer Science andEngineering, Korea Univ.Lira, H. S. Kim, J. D. and Rim, H. C. (1996) .4Korean 1)'an.
@)rmation-I~axed POS Taggerwith Lexical h!fi)rmation ojmi.vtag,4ed Eojeo\[.In "Proc.
of the 2nd Korea-China JointSymposium on Oriental LanguageComputing", pp.
119-124.Roche, E. and Schabes, Y.
(1995)Determini.s'ticPart-o.f-St)eect~ Taggi/Ig with Fi//te-State7?aHsduc'er.
Computational Linguistics, 21/2,pp.
227-253.1100
