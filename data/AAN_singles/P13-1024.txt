Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 239?249,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsLinking Tweets to News: A Framework to Enrich Short Text Data inSocial MediaWeiwei Guo?
and Hao Li?
and Heng Ji?
and Mona Diab?
?Department of Computer Science, Columbia University?Computer Science Department and Linguistic Department,Queens College and Graduate Center, City University of New York?Department of Computer Science, George Washington Universityweiwei@cs.columbia.edu, {haoli.qc,hengjicuny}@gmail.com, mtdiab@gwu.eduAbstractMany current Natural Language Process-ing [NLP] techniques work well assum-ing a large context of text as input data.However they become ineffective whenapplied to short texts such as Twitter feeds.To overcome the issue, we want to finda related newswire document to a giventweet to provide contextual support forNLP tasks.
This requires robust model-ing and understanding of the semantics ofshort texts.The contribution of the paper is two-fold:1. we introduce the Linking-Tweets-to-News task as well as a dataset of linkedtweet-news pairs, which can benefit manyNLP applications; 2. in contrast to previ-ous research which focuses on lexical fea-tures within the short texts (text-to-wordinformation), we propose a graph basedlatent variable model that models the in-ter short text correlations (text-to-text in-formation).
This is motivated by the ob-servation that a tweet usually only cov-ers one aspect of an event.
We show thatusing tweet specific feature (hashtag) andnews specific feature (named entities) aswell as temporal constraints, we are able toextract text-to-text correlations, and thuscompletes the semantic picture of a shorttext.
Our experiments show significant im-provement of our new model over base-lines with three evaluation metrics in thenew task.1 IntroductionRecently there has been an increasing interest inlanguage understanding of Twitter messages.
Re-searchers (Speriosui et al, 2011; Brody and Di-akopoulos, 2011; Jiang et al, 2011) were in-terested in sentiment analysis on Twitter feeds,and opinion mining towards political issues orpoliticians (Tumasjan et al, 2010; Conover et al,2011).
Others (Ramage et al, 2010; Jin et al,2011) summarized tweets using topic models.
Al-though these NLP techniques are mature, theirperformance on tweets inevitably degrades, due tothe inherent sparsity in short texts.
In the caseof sentiment analysis, while people are able toachieve 87.5% accuracy (Maas et al, 2011) on amovie review dataset (Pang and Lee, 2004), theperformance drops to 75% (Li et al, 2012) ona sentence level movie review dataset (Pang andLee, 2005).
The problem worsens when someexisting NLP systems cannot produce any resultsgiven the short texts.
Considering the followingtweet:Pray for Mali...A typical event extraction/discovery system (Jiand Grishman, 2008) fails to discover the warevent due to the lack of context information (Ben-son et al, 2011), and thus fails to shed light on theusers focus/interests.To enable the NLP tools to better understandTwitter feeds, we propose the task of linking atweet to a news article that is relevant to the tweet,thereby augmenting the context of the tweet.
Forexample, we want to supplement the implicit con-text of the above tweet with a news article such asthe following entitled:State of emergency declared in Maliwhere abundant evidence can be fed into an off-the-shelf event extraction/discovery system.
Tocreate a gold standard dataset, we download tweetsspanning over 18 days, each with a url linking to anews article of CNN or NYTIMES, as well as allthe news of CNN and NYTIMES published duringthe period.
The goal is to predict the url referrednews article based on the text in each tweet.1 We1The data and code is publicly available at www.cs.239believe many NLP tasks will benefit from this task.In fact, in the topic modeling research, previouswork (Jin et al, 2011) already showed that by in-corporating webpages whose urls are containedin tweets, the tweet clustering purity score wasboosted from 0.280 to 0.392.Given the few number of words in a tweet (14words on average in our dataset), the traditionalhigh dimensional surface word matching is lossyand fails to pinpoint the news article.
This con-stitutes a classic short text semantics impediment(Agirre et al, 2012).
Latent variable models arepowerful by going beyond the surface word leveland mapping short texts into a low dimensionaldense vector (Socher et al, 2011; Guo and Diab,2012b).
Accordingly, we apply a latent variablemodel, namely, the Weighted Textual Matrix Fac-torization [WTMF] (Guo and Diab, 2012b; Guoand Diab, 2012c) to both the tweets and the newsarticles.
WTMF is a state-of-the-art unsupervisedmodel that was tested on two short text similar-ity datasets: (Li et al, 2006) and (Agirre et al,2012), which outperforms Latent Semantic Anal-ysis [LSA] (Landauer et al, 1998) and LatentDirichelet Allocation [LDA] (Blei et al, 2003) bya large margin.
We employ it as a strong baselinein this task as it exploits and effectively models themissing words in a tweet, in practice adding thou-sands of more features for the tweet, by contrastLDA, for example, only leverages observed words(14 features) to infer the latent vector for a tweet.Apart from the data sparseness, our dataset pro-poses another challenge: a tweet usually coversonly one aspect of an event.
In our previous ex-ample, the tweet only contains the location Maliwhile the event is about French army participatedin Mali war.
In this scenario, we would like to findthe missing elements of the tweet such as French,war from other short texts, to complete the seman-tic picture of Pray in Mali tweet.
One drawbackof WTMF for our purposes is that it simply mod-els the text-to-word information without leverag-ing the correlation between short texts.
Whilethis is acceptable on standard short text similaritydatasets (data points are independently generated),it ignores some valuable information characteristi-cally present in our dataset: (1) The tweet specificfeatures such as hashtags.
Hashtags prove to bea direct indication of the semantics of tweets (Ra-mage et al, 2010); (2) The news specific featurescolumbia.edu/?weiweisuch as named entities in a document.
Named en-tities acquired from a news document, typicallywith high accuracy using Named Entity Recog-nition [NER] tools, may be particularly informa-tive.
If two texts mention the same entities thenthey might describe the same event; (3) The tem-poral information in both genres (tweets and newsarticles).
We note that there is a higher chanceof event description overlap between two texts iftheir time of publication is similar.In this paper, we study the problem of min-ing and exploiting correlations between texts us-ing these features.
Two texts may be consideredrelated or complementary if they share a hash-tag/NE or satisfies the temporal constraints.
Ourproposed latent variable model not only modelstext-to-word information, but also is aware of thetext-to-text information (illustrated in Figure 1):two linked texts should have similar latent vec-tors, accordingly the semantic picture of a tweet iscompleted by receiving semantics from its relatedtweets.
We incorporate this additional informationin the WTMF model.
We also show the differ-ent impact of the text-to-text relations in the tweetgenre and news genre.
We are able to achieve sig-nificantly better results than with a text-to-wordsWTMF model.
This work can be regarded as ashort text modeling approach that extends previ-ous work however with a focus on combining themining of information within short texts coupledwith utilizing extra shared information across theshort texts.2 Task and DataThe task is given the text in a tweet, a system aimsto find the most relevant news article.
For goldstandard data, we harvest all the tweets that have asingle url link to a CNN or NYTIMES news arti-cle, dated from the 11th of Jan to the 27th of Jan,2013.
In evaluation, we consider this url-referrednews article as the gold standard ?
the most rele-vant document for the tweet, and remove the urlfrom the text of the tweet.
We also collect all thenews articles from both CNN and NYTIMES fromRSS feeds during the same timeframe.
Each tweetentry has the published time, author, text; eachnews entry contains published time, title, newssummary, url.
The tweet/news pairs are extractedby matching urls.
We manually filtered ?trivial?tweets where the tweet content is simply the newstitle or news summary.
The final dataset results in240(a)?t1?
t2?n2?n1?t3?w1?
w2?
w3?
w4?
w5?
w6?
w7?
w8?t1?
t2?n2?n1?t3?w1?
w2?
w3?
w4?
w5?
w6?
w7?
w8?#healthcare?
Obama?temporal?
(b)?Figure 1: (a) WTMF.
(b) WTMF-G: the tweet nodes t and news nodes n are connected by hashtags, named entities ortemporal edges (for simplicity, the missing tokens are not shown in the figure)34,888 tweets and 12,704 news articles.It is worth noting that the news corpus is notrestricted to current events.
It covers various gen-res and topics, such as travel guides.
e.g.
World?smost beautiful lakes, and health issues, e.g.
Theimportance of a ?stop day?, etc.2.1 Evaluation metricFor our task evaluation, ideally, we would likethe system to be able to identify the news arti-cle specifically referred to by the url within eachtweet in the gold standard.
However, this is verydifficult given the large number of potential can-didates, especially those with slight variations.Therefore, following the Concept Definition Re-trieval task in (Guo and Diab, 2012b) and (Steck,2010) we use a metric for evaluating the rankingof the correct news article to evaluate the systems,namely, ATOPt, area under the TOPKt(k) recallcurve for a tweet t. Basically, it is the normal-ized ranking ?
[0, 1] of the correct news articleamong all candidate news articles: ATOPt = 1means the url-referred news article has the highestsimilarity value with the tweet (a correct NARU);ATOPt = 0.95 means the similarity value withcorrect news article is larger than 95% of the can-didates, i.e.
within the top 5% of the candidates.ATOPt is calculated as follows:ATOPt =?
10TOPKt(k)dk (1)where TOPKt(k) = 1 if the url referred news arti-cle is in the ?top k?
list, otherwise TOPKt(k) = 0.Here k ?
[0, 1] is the relative position (whenk = 1, it means all the candidates).We also include other metrics to examine if thesystem is able to rank the url referred news arti-cle in the first few returned results: TOP10 recallhit rate to evaluate whether the correct news is inthe top 10 results, and RR, Reciprocal Rank= 1/r(i.e., RR= 1/3 when the correct news article isranked at the 3rd highest place).3 Weighted Textual Matrix FactorizationThe WTMF model (Guo and Diab, 2012a) hasbeen successfully applied to the short text simi-larity task, achieving state-of-the-art unsupervisedperformance.
This can be attributed to the fact thatit models the missing tokens as features, therebyadding many more features for a short text.
Themissing words of a sentence are defined as all thevocabulary of the training corpus minus the ob-served words in a sentence.
Missing words serveas negative examples for the semantics of a shorttext: the short text should not be related to themissing words.As per (Guo and Diab, 2012b), the corpus isrepresented in a matrix X , where each cell storesthe TF-IDF values of words.
The rows of X arewords and columns are short texts.
As in Figure2, matrix X is approximated by the product of aK?M matrix P and a K?N matrix Q. Accord-ingly, each sentence sj is represented by a K di-mensional latent vector Q?,j .
Similarly a word wiis generalized by P?,i.
Therefore, the inner productof a word vector P?,i and a short text vector Q?,j isto approximate the cell Xij (shaded part in Figure2).
In this way, the missing words are modeled byrequiring the inner product of a word vector andshort text vector to be close to 0 (the word and theshort text should be irrelevant).Since 99% cells in X are missing tokens (0value), the impact of observed words is signifi-cantly diminished.
Therefore a small weight wmis assigned for each 0 cell (missing tokens) in thematrix X in order to preserve the influence of ob-served words.
P andQ are optimized by minimizethe objective function:241Figure 2: Weighted Textual Matrix Factorization?i?jWij (P?,i ?Q?,j ?Xij)2 + ?||P ||22 + ?||Q||22Wi,j ={1, if Xij 6= 0wm, if Xij = 0(2)where ?
is a regularization term.4 Creating Text-to-text Relations viaTwitter/News FeaturesWTMF exploits the text-to-word information in avery nuanced way, while the dependency betweentexts is ignored.
In this Section, we introduce howto create text-to-text relations.4.1 Hashtags and Named EntitiesHashtags highlight the topics in tweets, e.g., The#flu season has started.
We believe two tweetssharing the same hashtag should be related, hencewe place a link between them to explicitly informthe model that these two tweets should be similar.We find only 8,701 tweets out of 34,888 includehashtags.
In fact, we observe many hashtag wordsare mentioned in tweets without explicitly beingtagged with #.
To overcome the hashtag sparse-ness issue, one can resort to keywords recommen-dation algorithms to mine hashtags for the tweets(Yang et al, 2012).
In this paper, we adopt a sim-ple but effective approach: we collect all the hash-tags in the dataset, and automatically hashtag anyword in a tweet if that word appears hashtagged inany other tweets.
This process resulted in 33,242tweets automatically labeled with hashtags.
Foreach tweet, and for each hashtag it contains, weextract k tweets that contain this hashtag, assum-ing they are complementary to the target tweet,and link the k tweets to the target tweet.
If thereare more than k tweets found, we choose the topk ones that are most chronologically close to thetarget tweet.
The statistics of links can be found intable 2.Named entities are some of the most salient fea-tures in a news article.
Directly applying NamedEntity Recognition (NER) tools on news titles ortweets results in many errors (Liu et al, 2011) dueto the noise in the data, such as slang and capital-ization.
Accordingly, we first apply the NER toolon news summaries, then label named entities inthe tweets in the same way as labeling the hash-tags: if there is a string in the tweet that matchesa named entity from the summaries, then it is la-beled as a named entity in the tweet.
25,132 tweetsare assigned at least one named entity.2 To createthe similar tweet set, we find k tweets that alsocontain the named entity.4.2 Temporal RelationsTweets published in the same time interval havea larger chance of being similar than those arenot chronologically close (Wang and McCallum,2006).
However, we cannot simply assume anytwo tweets are similar only based on the times-tamp.
Therefore, for a tweet we link it to thek most similar tweets whose published time iswithin 24 hours of the target tweet?s timestamp.We use the similarity score returned by WTMFmodel to measure the similarity of two tweets.We experimented with other features such as au-thorship.
We note that it was not a helpful feature.While authorship information helps in the task ofnews/tweets recommendation for a user (Corso etal., 2005; Yan et al, 2012), the authorship infor-mation is too general for this task where we targeton ?recommending?
a news article for a tweet.4.3 Creating Relations on NewsWe extract the 3 subgraphs (based on hash-tags, named entities and temporal) on news ar-ticles.
However, automatically tagging hashtagsor named entities leads to much worse perfor-mance (around 93% ATOP values, a 3% decreasefrom baseline WTMF).
There are several reasonsfor this: 1.
When a hashtag-matched word ap-pears in a tweet, it is often related to the centralmeaning of the tweet, however news articles aregenerally much longer than tweets, resulting inmany more hashtags/named entities matches eventhough these named entities may not be closely re-lated.
2.
The noise introduced during automaticNER accumulates much faster given the largenumber of named entities in news data.
There-fore we only extract temporal relations for newsarticles.2Note that there are some false positive named entitiesdetected such as apple.
We plan to address removing noisynamed entities and hashtags in future work2425 WTMF on GraphsWe propose a novel model to incorporate the linksgenerated as described in the previous section.If two texts are connected by a link, it meansthey should be semantically similar.
In the WTMFmodel, we would like the latent vectors of twotext nodes Q?,j1 , Q?,j2 to be as similar as possible,namely that their cosine similarity to be close to 1.To implement this, we add a regularization term inthe objective function of WTMF (equation 2) foreach linked pairs Q?,j1 , Q?,j2 :?
?
( Q?,j1 ?Q?,j2|Q?,j1 ||Q?,j2 |?
1)2 (3)where |Q?,j | denotes the length of vectorQ?,j .
Thecoefficient ?
denotes the importance of the text-to-text links.
A larger ?
means we put more weightson the text-to-text links and less on the text-to-word links.
We refer to this model as WTMF-G(WTMF on graphs).5.1 InferenceAlternating Least Square [ALS] is used for in-ference in weighted matrix factorization (Srebroand Jaakkola, 2003).
However, ALS is no longerapplicable here with the new regularization term(equation 3) involving the length of text vectors|Q?,j |, which is not in quadratic form.
Thereforewe approximate the objective function by treatingthe vector length |Q?,j | as fixed values during theALS iterations:P?,i =(QW?
(i)Q> + ?I)?1QW?
(i)X?,iQ?,j =(PW?
(j)P> + ?I + ?L2(j)Q?,s(j)diag(L2(s(j)))Q>?,s(j))?1(PW?
(j)X>j,?
+ ?L(j)Q?,s(j)Ln(j))(4)We define n(j) as the linked neighbors of shorttext j, and Q?,n(j) as the set of latent vectors ofj?s neighbors.
The reciprocal of length of thesevectors in the current iteration are stored in Ls(j).Similarly, the reciprocal of the length of the shorttext vector Q?,j is Lj .
W?
(i) = diag(W?,i) is anM ?M diagonal matrix containing the ith row ofweight matrixW .
Due to limited space, the detailsof the optimization are not shown in this paper;they can be found in (Steck, 2010).6 Experiments6.1 Experiment SettingCorpora: We use the same corpora as in (Guoand Diab, 2012b): Brown corpus (each sentence istreated as a document), sense definitions of Wik-tionary and Wordnet (Fellbaum, 1998).
The tweetsand news articles are also included in the cor-pus, generating 441,258 short texts and 5,149,122words.
The data is tokenized, POS-tagged byStanford POS tagger (Toutanova et al, 2003),and lemmatized by WordNet::QueryData.pm.
Thevalue of each word in matrixX is its TF-IDF valuein the short text.Baselines: We present 4 baselines: 1.
Informa-tion Retrieval model [IR], which simply treats atweet as a document, and performs traditional sur-face word matching.
2.
LDA-?
with Gibbs Sam-pling as inference method.
We use the inferredtopic distribution ?
as a latent vector to representthe tweet/news.
3.
LDA-wvec.
The problem withLDA-?
is the inferred topic distribution latent vec-tor is very sparse with only a few non-zero val-ues, resulting in many tweet/news pairs receivinga high similarity value as long as they are in thesame topic domain.
Hence following (Guo andDiab, 2012b), we first compute the latent vectorof a word by P (z|w) (topic distribution per word),then average the word latent vectors weighted byTF-IDF values to represent the short text, whichyields much better results.
4.
WTMF.
In thesebaselines, hashtags and named entities are simplytreated as words.To curtail variation in results due to random-ness, each reported number is the average of 10runs.
For WTMF and WTMF-G, we assign thesame initial random values and run 20 iterations.In both systems we fix the missing words weightas wm = 0.01 and regularization coefficient at?
= 20, which is the best condition of WTMFfound in (Guo and Diab, 2012b; Guo and Diab,2012c).
For LDA-?
and LDA-wvec, we run GibbsSampling based LDA for 2000 iterations and aver-age the model over the last 10 iterations.Evaluation: The similarity between a tweet anda news article is measured by cosine similarity.
Anews article is represented as the concatenation ofits title and its summary, which yields better per-formance.3As in (Guo and Diab, 2012b), for each tweet,we collect the 1,000 news articles published priorto the tweet whose dates of publication are clos-est to that of the tweet.
4 The cosine similarity3While these are separated, WTMF receive ATOP95.558% for representing news article as titles and 94.385%for representing news article as summaries4Ideally we want to include all the news articles published243Models Parameters ATOP TOP10 RRdev test dev test dev testIR - 90.795% 90.743% 73.478% 74.103% 46.024% 46.281%LDA-?
?
= 0.05, ?
= 0.05 81.368% 81.251% 32.328% 31.207% 13.134% 12.469%LDA-wvec ?
= 0.05, ?
= 0.05 94.148% 94.196% 53.500% 53.952% 28.743% 27.904%WTMF - 95.964% 96.092% 75.327% 76.411% 45.310% 46.270%WTMF-G k = 3, ?
= 3 96.450% 96.543% 76.485% 77.479% 47.516% 48.665%WTMF-G k = 5, ?
= 3 96.613% 96.701% 76.029% 77.176% 47.197% 48.189%WTMF-G k = 4, ?
= 3 96.510% 96.610% 77.782% 77.782% 47.917% 48.997%Table 1: ATOP Performance (latent dimension D = 100 for LDA/WTMF/WTMF-G)0 1 2 3 49696.296.496.696.8ATOP?devtest(a) ATOP0 1 2 3 47575.57676.57777.578TOP10?devtest(b) TOP100 1 2 3 44546474849RR?devtest(c) RRFigure 3: Impact of ?
(D = 100, k = 4)score between the url referred news article and thetweet is compared against the scores of these 1,000news articles to calculate the metric scores.
1/10 ofthe tweet/news pairs are used as development set,based on which all the parameters are tuned.
Themetrics ATOP, TOP10 and RR are used to evaluatethe performance of systems.6.2 ResultsTable 1 summarizes the performance of the base-lines and WTMF-G at latent dimension D = 100.All the parameters are chosen based on the de-velopment set.
For WTMF-G, we try differentvalues of k (the number of neighbors linked to atweet/news for a hashtag/NE/time constraint) and?
(the weight of link information).
We choose tomodel the links in four subgraphs: (a) hashtagsin tweet; (b) named entities in tweet; (c) time intweet; (d) time in news article.
For LDA we tunethe hyperparameter ?
(Dirichlet prior for topic dis-tribution of a document) and ?
(Dirichlet prior forword distribution given a topic).
It is worth notingthat ATOP measures the overall ranking in 1000samples while TOP10/RR focus on whether thealigned news article is in the first few returned re-sults.Same as reported in (Guo and Diab, 2012b),LDA-?
has the worst results due to directly usingprior to the tweet, however, that will give a bias to sometweets, since the latter tweets have a larger candidate set thanthe earlier onesthe inferred topic distribution of a text ?.
The in-ferred topic vector has only a few non-zero values,hence a lot of information is missing.
LDA-wvecpreserves more information by creating a dense la-tent vector from the topic distribution of a wordP (z|w), and thus does much better in ATOP.It is interesting to see that IR model has avery low ATOP (90.795%) and an acceptable RR(46.281%) score, in contrast to LDA-wvec witha high ATOP (94.148%) and a low RR(27.904%)score.
This is caused by the nature of the two mod-els.
LDA-wvec is able to identify global coarsegrained topic information (such as politics vs. eco-nomics), hence receiving a high ATOP by exclud-ing the most irrelevant news articles, however itdoes not distinguish fine grained difference suchas Hillary vs. Obama.
IR model exerts the oppo-site influence via word matching.
It ranks a cor-rect news article very high if overlapping wordsexist (leading to a high RR), or the news article isranked very low if no overlapping words (hence alow ATOP).We can conclude WTMF is a very strong base-line given that it achieves high scores with threemetrics.
As a latent variable model, it is able tocapture global topics (+1.89% ATOP over LDA-wvec); moreover, by explicitly modeling missingwords, the existence of a word is also encoded inthe latent vector (+2.31% TOP10 and ?0.011%RR over IR model).24450 75 100 125 1509595.59696.597ATOPDWTMFWTMF?G(a) ATOP50 75 100 125 150707274767880TOP10DWTMFWTMF?G(b) TOP1050 75 100 125 150404244464850RRDWTMFWTMF?G(c) RRFigure 4: Impact of latent dimension D (k = 4)Conditions Links ATOP TOP10 RRdev test dev test dev testhashtags tweets 375,371 +0.397% +0.379% +1.015% +1.021% +0.504% +0.641%NE tweets 164,412 +0.141% +0.130% +0.598% +0.479% +0.278% +0.294%time tweet 139,488 +0.126% +0.136% +0.512% +0.503% +0.241% +0.327%time news 50,008 +0.036% +0.026% +0.156% +0.256% +1.890% +1.924%full model (all 4 subgraphs) 573,999 +0.546% +0.518% +1.556% +1.371% +2.607% +2.727%full model minus hashtags tweets 336,963 +0.288% +0.276% +1.129% +1.037% +2.488% +2.541%full model minus NE tweets 536,333 +0.528% +0.503% +1.518% +1.393% +2.580% +2.680%full model minus time tweet 466,207 +0.457% +0.426% +1.281% +1.145% +2.449% +2.554%full model minus time news 523,991 +0.508% +0.490% +1.300% +1.190% +0.632% +0.785%author tweet 21,318 +0.043% +0.042% +0.028% +0.057% ?0.003% ?0.017%full model plus author tweet 593,483 +0.575% +0.545% +1.465% +1.336% +2.415% +2.547%Table 2: Contribution of subgraphs when D = 100, k = 4, ?
= 3 (gain over baseline WTMF)With WTMF being a very challenging baseline,WTMF-G can still significantly improve all 3 met-rics.
In the case k = 4, ?
= 3 compared to WTMF,WTMF-G receives +1.371% TOP10, +2.727%RR, and +0.518% ATOP value (this is a signifi-cant improvement of ATOP value considering thatit is averaged on 30,000 data points, at an alreadyhigh level of 96% reducing error rate by 13%).
Allthe improvement of WTMF-G over WTMF is sta-tistically signicant at the 99% condence level witha two-tailed paired t-test.We also present results using different numberof links k in WTMF-G in table 1.
We experi-ment with k = {3, 4, 5}.
k = 4 is found tobe the optimal value (although k = 5 has a bet-ter ATOP).
Figure 3 demonstrates the impact of?
= {0, 1, 2, 3, 4} on each metric when k = 4.Note when ?
= 0 no link is used, which is thebaseline WTMF.
We can see using links is alwayshelpful.
When ?
= 4, we receive a higher ATOPvalue but lower TOP10 and RR.Figure 4 illustrates the impact of dimensionD = {50, 75, 100, 125, 150} on WTMF andWTMF-G (k = 4) on the test set.
The trendshold in different D values with a consistent im-provement.
Generally a larger D leads to a betterperformance.
In all conditions WTMF-G outper-forms WTMF.6.3 Contribution of SubgraphsWe are interested in the contribution of each fea-ture subgraph.
Therefore we list the impact ofindividual components in table 2.
The impact ofeach subgraph is evaluated in two conditions: (a)the subgraph-only; (b) the full-model-minus thesubgraph.
The full model is the combination of the4 subgraphs (which is also the best model k = 4in table 1).
In the last two rows of table 2 we alsopresent the results of using authorship only and thefull model plus authorship.
The 2nd column liststhe number of links in the subgraph.
To highlightthe difference, we report the gain of each modelover the baseline model WTMF.We have several interesting observations fromtable 2.
It is clear that the hashtag sub-graph on tweets is the most useful subgraph:with hashtag tweet it has the best ATOP andTOP10 values among subgraph-only condition(ATOP: +0.379% vs. 2nd best +0.136%, TOP10:+1.021% vs. 2nd best +0.503%), while in thefull-model-minus condition, minus hashtag hasthe lowest ATOP and TOP10.
Observing that italso contains the most links, we believe the cover-age is another important reason for the great per-formance.It seems the named entity subgraph helps theleast.
Looking into the extracted named entitiesand hashtags, we find many popular named enti-245ties are covered by hashtags.
That said, addingnamed entity subgraph into final model has a pos-itive contribution.It is worth noting that the time news subgraphhas the most positive influence on RR.
This is be-cause temporal information is very salient in newsdomain: usually there are several reports to de-scribe an event within a short period, therefore thenews latent vector is strengthened by receiving se-mantics from its neighbors.At last, we analyze the influence of author-ship of tweets.
Adding authorship into the fullmodel greatly hurts the scores of TOP10 and RR,whereas it is helpful to ATOP.
This is understand-able since by introducing author links betweentweets, to some degree we are averaging the la-tent vectors of tweets written by the same per-son.
Therefore, for a tweet whose topic is vagueand hard to detect, it will get some prior knowl-edge of topics through the author links (hence in-crease ATOP), whereas this prior knowledge be-comes noise for the tweets that are already handledvery well by the model (hence decrease TOP10and RR).6.4 Error AnalysisWe look closely into ATOP results to obtain an in-tuitive feel for what is captured and what is not.For example, the ATOP score of WTMF for thetweet-news pair below is 89.9%:Tweet: ...stoked growing speculation that Pak-istan?s powerful military was quietly supportingmoves... @declanwalshNews: Pakistan Supreme Court Orders Arrest ofPrime MinisterBy identifying ?Pakistan?
and ?Supreme Court?as hashtags/named entity, WTMF-G is able topropagate the semantics from the following twoinformative tweets to the original tweet, henceachieving a higher ATOP score of 91.9%.#Pakistan Supreme Court orders the arrest of thePM on corruption charges.A discouraging sign from a tumultuous politicalsystem: Pakistan?s Supreme Court ordered the ar-rest of PM Ashraf today.Below is an example that shows the deficiency ofboth WTMF and WTMF-G:Tweet: Another reason to contemplate moving: anearly deathNews: America flunks its health examIn this case WTMF and WTMF-G achieve alow ATOP of 69.8% and 75.1%, respectively.
Theonly evidence the latent variable models rely onis lexical items (WTMF-G extract additional text-to-text correlation by word matching).
To pin-point the url referred news articles, other advancedNLP features should be exploited.
In this case, webelieve sentiment information could be helpful ?both tweet and the news article contain a negativepolarity.7 Related WorkShort Text Semantics: The field of short text se-mantics has progressed immensely in recent years.Early work focus on word pair similarity in thehigh dimensional space.
The word pair similarityis either knowledge based (Mihalcea et al, 2006;Tsatsaronis et al, 2010) or corpus based (Li etal., 2006; Islam and Inkpen, 2008), where co-occurrence information cannot be efficiently ex-ploited.
Guo and Diab (2012b; 2012a; 2013) showthe superiority of the latent space approach in theWTMF model achieving state-of-the-art perfor-mance on two datasets.
However, all of them onlyreply on text-to-word information.
In this paper,we focus on modeling inter-text relations inducedby Twitter/news features.
We extend the WTMFmodel and adapt it into tweets modeling, achiev-ing significantly better results.Modeling Tweets in a Latent Space: Ramageet al (2010) also use hashtags to improve the la-tent representation of tweets in a LDA framework,Labeled-LDA (Ramage et al, 2009), treating eachhashtag as a label.
Similar to the experiments pre-sented in this paper, the result of using Labeled-LDA alone is worse than the IR model, due to thesparseness in the induced LDA latent vector.
Jin etal.
(2011) apply an LDA based model on cluster-ing by incorporating url referred documents.
Thesemantics of long documents are transferred to thetopic distribution of tweets.News recommendation: A news recommen-dation system aims to recommend news articlesto a user based on the features (e.g., key words,tags, category) in the documents that the user likes(hence these documents form a training set) (Clay-pool et al, 1999; Corso et al, 2005; Lee and Park,2007).
Our paper resembles it in searching for arelated news article.
However, we target on rec-ommending news article only based on a tweet,which is a much smaller context than the set offavorite documents chosen by a user .246Research on Tweets: In (Duan et al, 2010), urlavailability is an important feature for tweets rank-ing.
However, the number of tweets with an ex-plicit url is very limited.
Huang et al (2012) pro-pose a graph-based framework to propagate tweetranking scores, where relevant web documents isfound to be helpful to discover informative tweets.Both work can take advantage of our work to ei-ther extract potential url features or retrieve topi-cally similar web documents.
(Sankaranarayanan et al, 2009) aims at captur-ing tweets that correspond to late breaking news.However, they cluster tweets and simply choosea url referred news in those tweets as the relatednews for the whole cluster (the urls are visibleto the systems).
(Abel et al, 2011) is most re-lated work to our paper, however their focus is theuser profiling task, therefore they do not providea paired tweet/news data set and have to conductmanual evaluation.8 ConclusionWe propose a Linking-Tweets-to-News task,which potentially benefits many NLP applicationswhere off-the-shelf NLP tools can be applied tothe most relevant news.
We also collect a goldstandard dataset by crawling tweets each with a urlreferring to a news article.
We formalize the link-ing task as a short text modeling problem, and ex-tract Twitter/news specific features to extract text-to-text relations, which are incorporated into a la-tent variable model.
We achieve significant im-provement over baselines.AcknowledgementsThis work was supported by the U.S. Army Re-search Laboratory under Cooperative AgreementNo.
W911NF- 09-2-0053 (NS-CTA), the U.S.NSF CAREER Award under Grant IIS-0953149,the U.S. NSF EAGER Award under Grant No.
IIS-1144111, the U.S. DARPA FA8750-13-2-0041 -Deep Exploration and Filtering of Text (DEFT)Program and CUNY Junior Faculty Award.
Theviews and conclusions contained in this documentare those of the authors and should not be inter-preted as representing the official policies, eitherexpressed or implied, of the U.S. Government.The U.S. Government is authorized to reproduceand distribute reprints for Government purposesnotwithstanding any copyright notation here on.ReferencesFabian Abel, Qi Gao, Geert-Jan Houben, and Ke Tao.2011.
Semantic enrichment of twitter posts for userprofile construction on the social web.
In Proceed-ings of the 49th Annual Meeting of the Associationfor Computational Linguistics.Eneko Agirre, Daniel Cer, Mona Diab, and AitorGonzalez-Agirre.
2012.
Semeval-2012 task 6: Apilot on semantic textual similarity.
In First JointConference on Lexical and Computational Seman-tics (*SEM).Edward Benson, Aria Haghighi, and Regina Barzilay.2011.
Event discovery in social media feeds.
InProceedings of the 49th Annual Meeting of the Asso-ciation for Computational Linguistics: Human Lan-guage Technologies.David M. Blei, Andrew Y. Ng, and Michael I. Jordan.2003.
Latent dirichlet alocation.
Journal of Ma-chine Learning Research, 3.Samuel Brody and Nicholas Diakopoulos.
2011.Cooooooooooooooollllllllllllll!!!!!!!!!!!!!!
usingword lengthening to detect sentiment in microblogs.In Proceedings of the 2011 Conference on EmpiricalMethods in Natural Language Processing.Mark Claypool, Anuja Gokhale, Tim Miranda, PavelMurnikov, Dmitry Netes, and Matthew Sartin.
1999.Combining content-based and collaborative filters inan online newspaper.
In In Proceedings of the ACMSIGIR Workshop on Recommender Systems.Michael Conover, Jacob Ratkiewicz, Matthew Fran-cisco, Bruno Gonc?alves, Filippo Menczer, andAlessandro Flammini.
2011.
Political polarizationon twitter.
In ICWSM.Gianna M. Del Corso, Antonio Gulli, and FrancescoRomani.
2005.
Ranking a stream of news.
InWWW, pages 97?106.Yajuan Duan, Long Jiang, Tao Qin, Ming Zhou, andHeung-Yeung Shum.
2010.
An empirical study onlearning to rank of tweets.
In COLING.Christiane Fellbaum.
1998.
WordNet: An ElectronicLexical Database.
MIT Press.Weiwei Guo and Mona Diab.
2012a.
Learning the la-tent semantics of a concept by its definition.
In Pro-ceedings of the 50th Annual Meeting of the Associa-tion for Computational Linguistics.Weiwei Guo and Mona Diab.
2012b.
Modeling sen-tences in the latent space.
In Proceedings of the50th Annual Meeting of the Association for Compu-tational Linguistics.Weiwei Guo and Mona Diab.
2012c.
Weiwei: A sim-ple unsupervised latent semantics based approachfor sentence similarity.
In First Joint Conference onLexical and Computational Semantics (*SEM).247Weiwei Guo and Mona Diab.
2013.
Improving lexicalsemantics for sentential semantics: Modeling selec-tional preference and similar words in a latent vari-able model.
In The 2013 Conference of the NorthAmerican Chapter of the Association for Computa-tional Linguistics: Human Language Technologies.Hongzhao Huang, Arkaitz Zubiaga, Heng Ji, HongboDeng, Dong Wang, Hieu Le, Tarek Abdelzather, Ji-awei Han, Alice Leung, John Hancock, and ClareVoss.
2012.
Tweet ranking based on heterogeneousnetworks.
In Proceedings of the 24th InternationalConference on Computational Linguistics.Aminul Islam and Diana Inkpen.
2008.
Semantic textsimilarity using corpus-based word similarity andstring similarity.
ACM Transactions on KnowledgeDiscovery from Data, 2.Heng Ji and Ralph Grishman.
2008.
Refining event ex-traction through cross-document inference.
In Pro-ceedings of ACL-08: HLT.Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, andTiejun Zhao.
2011.
Target-dependent twitter sen-timent classification.
In Proceedings of the 49th An-nual Meeting of Association for Computational Lin-guistics.Ou Jin, Nathan N. Liu, Kai Zhao, Yong Yu, and QiangYang.
2011.
Transferring topical knowledge fromauxiliary long texts for short text clustering.
In Pro-ceedings of the 20th ACM international conferenceon Information and knowledge management.Thomas K Landauer, Peter W. Foltz, and Darrell La-ham.
1998.
An introduction to latent semantic anal-ysis.
Discourse Processes, 25.H.
J. Lee and Sung Joo Park.
2007.
Moners: Anews recommender for the mobile web.
Expert Syst.Appl., 32(1):143?150.Yuhua Li, David McLean, Zuhair A. Bandar, James D.O?Shea, and Keeley Crockett.
2006.
Sentence simi-larity based on semantic nets and corpus statistics.IEEE Transaction on Knowledge and Data Engi-neering, 18.Hao Li, Yu Chen, Heng Ji, Smaranda Muresan, andDequan Zheng.
2012.
Combining social cognitivetheories with linguistic features for multi-genre sen-timent analysis.
In In Proceedings of the 26th Pa-cific Asia Conference on Language, Information andComputation.Xiaohua Liu, Shaodian Zhang, Furu Wei, and MingZhou.
2011.
Recognizing named entities in tweets.In The Semanic Web: Research and Applications.Andrew L. Maas, Raymond E. Daly, Peter T. Pham,Dan Huang, Andrew Y. Ng, and Christopher Potts.2011.
Learning word vectors for sentiment analysis.In Proceedings of the 49th Annual Meeting of theAssociation for Computational Linguistics: HumanLanguage Technologies.Rada Mihalcea, Courtney Corley, and Carlo Strappa-rava.
2006.
Corpus-based and knowledge-basedmeasures of text semantic similarity.
In Proceed-ings of the 21st National Conference on Articial In-telligence.Bo Pang and Lillian Lee.
2004.
A sentimental educa-tion: Sentiment analysis using subjectivity summa-rization based on minimum cuts.
In Proceedings ofthe 42nd Meeting of the Association for Computa-tional Linguistics.Bo Pang and Lillian Lee.
2005.
Seeing stars: Exploit-ing class relationships for sentiment categorizationwith respect to rating scales.
In Proceedings of the43rd Annual Meeting of the Association for Compu-tational Linguistics.Daniel Ramage, David Hall, Ramesh Nallapati, andChristopher D. Manning.
2009.
Labeled lda: A su-pervised topic model for credit attribution in multi-labeled corpora.
In Proceedings of the 2009 Con-ference on Empirical Methods in Natural LanguageProcessing.Daniel Ramage, Susan Dumais, and Dan Liebling.2010.
Characterizing microblogs with topic mod-els.
In Proceedings of the Fourth International AAAIConference on Weblogs and Social Media.Jagan Sankaranarayanan, Hanan Samet, Benjamin E.Teitler, Michael D. Lieberman, and Jon Sperling.2009.
Twitterstand: news in tweets.
In Proceedingsof the 17th ACM SIGSPATIAL International Confer-ence on Advances in Geographic Information Sys-tems.Richard Socher, Eric H. Huang, Jeffrey Pennington,Andrew Y. Ng, and Christopher D. Manning.
2011.Dynamic pooling and unfolding recursive autoen-coders for paraphrase detection.
In Proceedingsof Advances in Neural Information Processing Sys-tems.Michael Speriosui, Nikita Sudan, Sid Upadhyay, andJason Baldridge.
2011.
Twitter polarity classifica-tion with label propagation over lexical links and thefollower graph.
In Proceedings of the 2011 Con-ference on Empirical Methods in Natural LanguageProcessing.Nathan Srebro and Tommi Jaakkola.
2003.
Weightedlow-rank approximations.
In Proceedings of theTwentieth International Conference on MachineLearning.Harald Steck.
2010.
Training and testing of rec-ommender systems on data missing not at random.In Proceedings of the 16th ACM SIGKDD Inter-national Conference on Knowledge Discovery andData Mining.Kristina Toutanova, Dan Klein, Christopher D. Man-ning, and Yoram Singer.
2003.
Feature-rich part-of-speech tagging with a cyclic dependency network.In HLT-NAACL.248George Tsatsaronis, Iraklis Varlamis, and MichalisVazirgiannis.
2010.
Text relatedness based on aword thesaurus.
Journal of Articial Intelligence Re-search, 37.Andranik Tumasjan, Timm Oliver Sprenger, Philipp G.Sandner, and Isabell M. Welpe.
2010.
Predictingelections with twitter: What 140 characters revealabout political sentiment.
In ICWSM.Xuerui Wang and Andrew McCallum.
2006.
Top-ics over time: a non-markov continuous-time modelof topical trends.
In In Proceedings of the 12thACM SIGKDD international conference on Knowl-edge discovery and data mining.Rui Yan, Mirella Lapata, and Xiaoming Li.
2012.Tweet recommendation with graph co-ranking.
InProceedings of the 24th International Conference onComputational Linguistics.Lei Yang, Tao Sun, Ming Zhang, and Qiaozhu Mei.2012.
We know what @you #tag: does the dual roleaffect hashtag adoption?
In Proceedings of the 21stinternational conference on World Wide Web.249
