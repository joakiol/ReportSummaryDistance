Generating Patent Claims From Interactive Input?
Svetlana Sheremetyeva I Sergei Nirenburg 1 Irene Nlrenburg-lana@crl.nmsu.edu sergei@crl.nmsu.edu nirenburg@cgi.comlComputing Research Laboratory, New Mexico State University, Las Cruces, NM 88003, (505) 646-54662Carnegie Group, Inc., 5 PPG Place, Pittsburgh, PA 15222AbstractPatent claims are the subject of legal protection.
They must be formulated according to a set of precisesyntactic, lexical and stylistic guidelines.
Composing patent claims is a complex task, even for experts.
Inthis paper we report about an tmplemented system for supporting authoring claims for patents describingapparatuses.
The system generates claim texts from the input specified partly by the stored conceptual textschemata and partly by the input from the user.
The result of the interactive content acquisition stage is ashaUow-level representation which can be considered a draft to be automatically revised into the final textof the claim.Subject Keywords: interactive, automatic, generation, conceptual schema, template, patent claim611 IntroductionPatent law guidelines impose rather rigid con-stra~ats on the structural composition of the text ofthe informationally central and legally crucial partof a patent disclosure, the claim.
Figure 1 illus-trates a rather simple claim text (claims can be overa page long).
The claim must consist of a single,albeit possibly very complex, sentence with a well-specified conceptual, syntactic and stylistic/rhetori-cal structure.
For instance, if the invention is anapparatus it must be described in a static state,without reference to its operation.A cassette for holding excess lengths of light waveguides in asplice area comprisinga cover part and a pot-shaped bottom part having a bot-tom disk and a rim extendingperpendicular to said bottom disk, said cover andbottom parts are superimposed toenclosejointly an area forming a magazine for excesslengths of waveguides, aid cover part beingrotatable in said bottom part.two guide slots formed in said cover part.
said slots beingapproximately radially directed,guide members disposed on said cover part,a splice holder mounted on said cover part to form arotatable splice holder.Figure 1.
The text of the example claim generated bythe system.As can be seen from the figure, composing claimscan be a difficult task even for a patent expert, letalone an inventor who is typically an engineer andnot a technical writer.
Note that the difficulty of thetask is not constrained to syntax and style.
A claimmust be composed so as to make patent infringe-ment difficult.
We have developed a system whichhelps an inventor to compose patent claims.
Thesystem has an interactive and an automatic ompo-nents.
Knowledge about the invention is elicitedfrom the inventor interactively.
Most of text plan-ning and realization is carried out automatically.Superficially, the architecture of our system con-forms to the standard emerged in natural anguagegeneration (NLG) (as expressed, for instance inReiter, 1994) in that it includes the stages of con-tent specification, text planning and surface gener-ation (realization).
However, there are someimportant differences.
Unlike the typical contentspecification modules (e.g., Kukich, 1983; Kit-tredge et al 1986), our system relies on an author-ing workstation environment equipped with aknowledge elicitation scenario for joint human-computer content specification (see Sheremetyevaet al, submitted 1996, for the details of the knowl-edge elicitation scenario).
Lexical selection andsome other text planning tasks are interleaved withthe process of content specification.
The latterresults in the production of a "draft" claim.
Thisdraft, while not yet an English text, is a list of prop-osition-level structures ("templates") specifyingthe proposition head and case role values filled byPOS-tagged word strings.
The draft is then submit-ted to an automatic text planner which outputs anhierarchical structure of templates which is orderedaccording to rhetorical and stylistic requirements.This process resembles revision-oriented genera-tion (Meteer, 1991, Robin, 1994, Gabriel, 1988,Inui et al, 1992).
Using the set of distinctions byRobin, our approach is content-preserving (noextra content is added) and performs revisions on ashallow representation.
The realization stage lin-earizes the plan and takes care of the ellipsis, con-joined structures, punctuation and morphologicalforms.
The architecture of the system is illustratedin Figure 2.
In what follows we describe ach stageof our system in turn and illustrate it with a singleexample of generating the claim of Figure 1.2 Content SpecificationThe input to our system is quite unlike the inputs toother generators.
McDonald (1993) lists severalkinds of possible inputs -- numerical data, struc-tured objects used by a reasoning system or logicalformulae based on lexical predicates (p. 191).
Alarge part of our input is, in fact, in the mind of theinventor.
The system simply helps the inventorexpress this input.
In this intent, this system is sim-ilar to the DRAFTER system (e.g., Paris et al,1995).62~,~/ / / / /  Content Draft claim textSpecification & ~ ~Srol~ots?ltfion_leve I ~ Text PlanningLexical Selection templates ~ ~l tlai t as/ / / ~ ~Mo~holo~ica l  / forest of templates/, / Text ~ M~r~ot~ls~goirC_m /t..onceptual / Rep/esentat ionF~.~7 , , , ,~.
.
.
.
7,. , , ,Schema / "Language 117~?1='%~1 /.
.
.
.
~Lex!conl ~ / ~ Realization r~.now~eoge ~ g /  ~,, .Elicitation ~/  Z 1.
LineanzatxonScenario ~ / / 2.
Grarnmaticalization q0Claim TextFigure 2.
The architectureContent specification i our system is a process ofinteractive traversal of a conceptual schema of pat-ents about apparatuses.
We built a representation fthis schema based on our study of a training corpusof U.S. patents.
Patent law prescribes that an inven-tion is described by specifying, in order, a) the titleof invention; b) its components (and componentsof components, as required); c) properties("attributes") of components (shape, material,dimensions, etc.
); and d) relations among the com-ponents (spatial, connection, purpose, etc.).
Ingraphical terms, this schema can be represented asa tree, with nodes representing invention compo-nents and arcs, the basic meronymic ("has-as-part") relations.
Every concrete invention is repre-sented as an instance of the general schema.
Theschema for our example invention is illustrated inFigure 3.cover part bottom/~bot tom par t - .~  ?
diskca?~,~tt~ ~?.-" ~ nm.
.
.
.
.
.
~two guide slots~gu ide  members"~ splice holderFigure 3.
Instance of the conceptual schema tree.of the patent claim generator.Using common graphical user interface tools (suchas dialogue boxes, menus, templates, slide barsetc.
), the system guides the user through the pacesof describing every essential feature of the inven-tion.
Language support is provided through accessto vocabularies of suggested verbs and terminolog-ical nominal compounds.
The inclusion of a humaninto the process implifies the task of the system.Notably, it allows us to avoid using a deep knowl-edge representation language for describing theinvention.
It is easier for users to manipulate natu-ral and not artificial anguage.
The knowledge lic-itation scenario consists in the system requestingthe user, in English, to supply information aboutthe invention, its components, their properties andrelations among them.
The user-supplied informa-tion is recorded using a simple text representationlanguage:text ::= (template}{template}*template ::= (label predicate-classpredicate ({case-role}(case-role}*)case-role ::= (rank ((label-string)value))where label is a unique identifier of the template(by convention, marked by the number of its predi-63cate), predicate-class is the label of a synonym setof predicate-type words, see below, predicate is astring corresponding tOone of the predicates fromthe system lexicon, case roles are ranked 1based ontheir frequency of cooccurrence with each predi-cate in the training corpus 2 and value is the stringwhich fills a case role.
A label-string consists of agrammatical class symbol (see Table 1) and aunique ordinal number for each distinct string.Labels are assigned by a morphological nalysismodule to strings in input templates and nodes inconceptual schema instances.
(see Figure 4 andcompare it with Figure 3).Figure 5 illustrates an input template.
The labelsare used so that we can operate with words andphrases irrespective of the actual inflectional formin which they appear in the user-supplied input orwill appear in the final text.
All manipulations atthe text planning stage are performed on labels.
Itis at the realization stage that we reintroduce theactual strings and determine their required inflec-tional forms.In order to assign label strings to case role values,the values must be analyzed morphologically.
As aresult of morphological analysis, The interactiveinput specification (knowledge licitation) stageprovides information about the boundaries of caserole values, which makes it possible to use specialsimplifying morphological rules (thus, forinstance, if the filler of the theme case role consistsof a single word, it must be a noun).
The output ofthe morphological nalysis involves the assignmentof the word class and an inflectional form.ClassLabelAdjNumDAdvAdvQuantlnfGerPrepNEClass Composition ExamplesPredicates: finite mount, is mounted,forms of verbs and mountingparticiples in pred-icative usesAll nouns except device, assembly, cam-NE (see below) shaft, cageAdjectives, partici- horizontal, each.
mov-pies, ordinal numer- ing, secondals (in attributiveuses)Cardinal numerals twoDiscourse-relatedadverbsDomain-relatedadverbsQuanti tiersInfinitival expres-sionsGerundive xpres-sionsPrepositionsNominal eventsonly, at leastpivotally, coaxiallyone of, each ofto coverfor movingin, on, insidemovement, rotationTable 1: Lexical Categories in theSublanguage of Patent ClaimsN2 N3 J v  N4 N10N4 N3 ~ N11N1 Numl  N5 N6N5 N7N8 N91.
Case roles are labeled in the lexicon entry for a particu-lar predicate and the correspondence b tween the la-bel and the rank for this word is established there, seedescription of lexicon entry below.
The list of caseroles for the sublanguage is as follows: agent,theme, co-theme, place, manner, purpose, means, con-dition, time.2.
A training corpus of over 1,000 U.S. patents wasused in this work.Figure 4.
Labeling the conceptual schema tree.Every question in the knowledge licitation sce-nario is connected to one of the 11 synonym sets ofEnglish predicates, arranged in the decreasingorder of their frequency of occurrence in the train-ing corpus.
The appropriate list is presented to theuser for selecting the most appropriate realization64of the content o be conveyed.
Once a predicate isselected, the system proceeds requesting informa-tion about he values of the case roles of this predi-cate.
The values of these case roles are supplied bythe user.l This division of labor makes our systemimmediately practical, because it need not rely on avery large lexicon of terminological terms in thesubject area.
The internal lexicon of the systemmust include only a detailed specification of pred-icative words (mostly, verbs) and some closed-class items, such as prepositions and conjunctions.The following considerations guided our lexiconwork.
(P6 3 "is mounted"(1 ((N8 N9) "the splice holder"))(2 ((Prep2 N2 N3) "on the cover part"))(4 ((Infl Adjl N8 N9) "to form a rotatable spliceholder")))Figure 5.
A sample template using "mounted:'The patent sublanguage is a union of a legal sub-language and a sublanguage of the domain of theinvention.
Our system is devoted to patents aboutapparatuses.
Therefore, its technological sublan-guage is that of machines and mechanisms.
Thesublanguage for such a system has two crucialpeculiarities.
First, the number of senses for eachlexeme is, on average, much smaller than in lan-guage as a whole.
This is a property of any sublan-guage.
The second peculiarity seems inherent onlyto the legal sublanguage.
So as best to protect herights of the inventor, it is desirable to use lexicalunits whose meanings are as broad as possible(see, e.g., Lawson, 1983) without making untruestatements about the invention.
Therefore, at thelexical selection stage of the generation of a patentclaim the system must be able to choose that mem-ber of the synonym set of candidates whose mean-ing is the broadest, For our system we determinedthe breadth of meaning of word senses by calculat-ing the relative occurrence frequencies of everyword sense the training corpus.
Our hypothesis wasthat this measure is appropriate because the patentswere written by expert patent specialists who actu-1.
The system includes a number of additional knowl-edge sources to help the user in the choice of theresponses, including access to a world model, orontology (see Mahesh et al, 1995).ally used the words with broadest senses.
Thesefrequencies are marked in the system's dictionaryonly for verbs and take the form of the verb's rankin its semantic lass.
For example, if the synonymset for lexical selection is as follows: engage, hold,attach, lock, join, clamp, fasten, the system willpresent his list to the user in the descending orderof frequencies, with the idea that the user wouldprefer to select he first applicable word on the list.Verb entries in the system's lexicon consist of anumber of zones as follows:?
Zone I lists all morphological forms of theverb in which it is expected to occur in patenttexts.
The most frequent form is marked.?
Zone 2 contains the verb's semantic lasslabel.
The classes defined for claims aboutapparatuses include: meronymy, spatial,connection, change-state, change-location,apply-force, purpose and others.?
Zone 3 lists the verb's frequency rank in thelist of all the verbs belonging to its semanticclass.
It is necessary to motivate the order ofverb realization in the text at the generationstage.?
Zone 4 contains the correspondence b tweenthe verb's case frame labels and their ranks.?
Zone 5 contains a frequency-ordered listoflinearized cooccurrences of the verb with aparticular subset of case roles.
Thus, in Figure4 the linearization pattern (1 * 2 4) (where I,2 and 4 are case role ranks and "*" shows theposition of the predicate) will match, forexample, the following phrase from an actualclaim: (1: the splice holder) is mounted (2: onthe cover part) (4: to form a rotatable spliceholder).A sample lexicon entry is illustrated in Figure 6.MOUNTED 2Zone 1: MOUNTED(*), IS MOUNTED, ARE MOUNTED,BEING MOUNTEDZone 2: spatialZone 3:1Zone 4: I agent; 2 place; 3 manner; 4 purpose; 5 means2.
To simplify the processing, it was decided to con-sider active and passive forms of verbs as sepa-rate dictionary entries.65Zone 5: (l * 2), (13 * 2), (1* 2 4), (l * 2 3), (l * 3), (l * 4),(1 *25)Figure 6.
The lexicon entry for "mounted.
"The output of the content specification stage (andinput into the generation stage) consists of a list offilled templates in which the templates with thetitle of the invention in their subject slot aremarked.
A subset of the templates created for ourexample is given in Figure 7.
The set of templatescan be considered a draft text of the patent claim.
Ifan English version is generated directly, it will pro-duce a list of individual sentences describing theinvention.
In fact, our system performs this kind ofgeneration for the purposes of allowing the user tocheck the draft before it is submitted to the claimgeneration stage (in this way it is guaranteed thatthe list of templates contains all the required infor-mation).
However, we do not use this list of simplesentences in our generation (or revision).
This situ-ation is akin to the one described by Meteer (1990)in her Spokesman system design.
We use the draftas the input to the process of stylistic and rhetoricaltext planning and realization.
(pl 2 "comprises"(1 ((NI)"A cassette for holding excesslengths of light waveguides in a splice area"))(2 ((N2 N3) "a cover part")((N4 N3) "a bottom part")((Num 1 N5 N6 ) "two guide slots")((N5 N7)"guide members")((N8 N9) "a splice holder")))(p21 "is pot-shaped"(1 ((N4 N3) "the bottom part")))(p33 "are directed"(1 ((Numl N5 N6) "the two guide slots"))(3 ((Advl Adv2) "approximately radially")))(p47 "is rotatable"(1 ((N2 N3) "the cover part"))(2 ((Prepl N4 N3)"in the bottom part")))(p52 "'has"(1 ((N4 N3)"the bottom part"))(2 ((N4 N10) "a bottom disk")((N11) "and a rim")))(p63 "is mounted"(1 ((N8 N9) "the splice holder"))(2 ((Prep2 N2 N3) "on the cover part"))(4 ((Infl Adj I N8 N9) "to form a rotatablesplice holder")))(p73 "extends"(1 ((NI 1) "the rim"))(3 ((Adv3 N4 N10) "perpendicular to thebottom disk")))(p83 "'are superimposed"(1 ((N2 N3) "the cover part")((N4 N3) "the bottom part"))(2 ((Adv4 Inf2 N12) " to jointly enclosean area")))(p9 11 "'forms"(1 ((NI2) "the area"))(2 ((N13)"'a magazine")))(pl010 "for"(1 ((N 13) "'the magazine"))(2 ((Adj2 N 14 Prep3 N 15) "excess lengthsof waveguides")))(pl I 3 "'are disposed"(I ((N5 N7) "the guide members"))(2 ((Prep2 N2 N3) "on the cover part")))(pI23 "are formed"(1 ((Numl N5 N6) "the two guide slots"))(2 ((Prepl N2 N3) "in the cover part")))Figure 7.
The templates  for the example  claim.3 Claim Text PlanningThe planning stage is guided both by constraints onthe patent claim sublanguage and the general con-straints on style.
The former determines the globalordering of the claim text while the latter dealswith local text coherence.
The global structure ofthe claim text plan follows the structure of the con-ceptual schema of a claim, with one important dif-ference.
The conceptual schema tree has inventioncomponents as nodes, whereas the claim text planhas in its nodes clusters of templates whichdescribe the corresponding invention components.The plan structure is obtained by first clusteringinput templates according to the conceptualschema node to which they belong, building anhierarchical structure (a tree or a forest) for tem-plates in each cluster and, finally, hierarchicallyconnecting all such structures.663.1 Clustering templates at conceptualschema nodesThis step is not straigtltforward because a templatecan be connected to its conceptual schema throughmore than one case role value string, so that a pref-erence method must be suggested for these cases.For instance, Template P4 (see Figure 7) can beconnected to its corresponding node of the concep-tual schema, realized as Template P1, eitherthrough case role value (N2 N3) or case role value(N4 N3).
We define four levels of preference, basedon the quality of match between the node label anda string in a template case role (case roles can havea set of strings as their values; such values arecalled compound).
(In the description below thetemplate for which linking is attempted is referredto as "current.")?
Quality I match occurs when a) the string inthe tree node is identical to a case-role stringin the current emplate and b) the rank of thecase role in the current emplate is I;?
Quality II match occurs when a) the twostrings have a nonempty intersection whichincludes the last element of the string 1 and b)the rank of the case role in the currenttemplate is 1 (if the procedure finds more thanone match of Quality II, it will select he onewith the largest intersection);?
Quality III match occurs when a) the twostrings are identical and b) the rank of thecase role in the current emplate is not I;?
Quality IV match occurs when a) the twostrings have a nonempty intersection, as inQuality II match, and b) the rank of the caserole in the current emplate is not 1.The procedure applies to simple case role values orto components of the compound case role values.The latter can occur both in the conceptual schematree nodes and in the values of the template slots.If there is a single candidate, the procedure finds it.If there is more than one candidate, the procedurefinds the best one.
If no match is possible with con-ceptual schema node labels, the procedure matches1.
In our system the last word in a string is practicallyalways the syntactic head of the phrase.the candidate template case role not with a concep-tual schema tree node label but rather with caseroles of templates in each cluster, in turn.
Thisactivity is based on the expectation that the exposi-tion in a patent claim is one coherent entity, with-out a possibility of unconnected threads.3.2 From the Conceptual Schema to a TextPlanThis stage marks the shift from the concelStual tothe rhetorical.
The conceptual schema tree is trans-formed into a text plan tree representing the rhetor-ical structure of the claim text.
The nodes in thetext plan tree are labeled with the input templates,not invention components.
We transform every,node from the conceptual schema tree into a sub-tree whose nodes are templates and whose struc-ture is determined by stylistic and rhetoricalconsiderations typical of text planning.
The sub-trees are connected into the text plan tree followingthe links established in the conceptual schema tree,only these links will be between case role values inthe templates which are the content of the nodes inthe text plan tree.The cluster-level subtrees of the text plan tree areorganized by grouping the templates into what willbecome sets of siblings at different levels in thetext plan tree.
Templates which were assigned to acluster through a match against the same string(either the label of the conceptual schema node or acase role in one of the templates inside the cluster) 2are grouped into sets of siblings.
The hierarchicalstructure among these sets is established based onthe position in the tree of the template againstwhich this match occurred.
For example (see Fig-ure 7), the templates P4 and P8 are siblingsbecause they contain a case role value (N2 N3)which represents a node in the conceptual schema(see Figures 4 and 3).Next, the procedure orders the siblings left to right,in preparation for eventual linearization.
The sort-ing function used for ordering is based on heuris-tics such as: "the statement which describes more2.
To be precise, in the case of compound case rolevalues the match may have occurred with thesame component of the case role value.67than one component of the invention should appearas early as possible," "if a content element isdescribed by a single template, it might be amena-ble to realization as a prenominal modifier; suchelements should appear as early as possible," etc.
Afull set of heuristics ee in Sheremetyeva et al,1996.After the initial sorting, the procedure checks foroccurrence in the sibling templates of the samepredicates.
If found, they are all moved to form acontinuous tring at the position of the rightmostoccurrence.
This is done in expectation of an ellip-tical realization.
The procedure also moves all tem-plates whose predicates are prepositions to theleffmost positions in the string, in order to facilitatetheir realization without introducing a full clause.The actual text plan tree for our example is illus-tratzd in Figure 8.P1 - -- P8- P4- P2-P5-P3-P12-P l l-P6P9~P10P7Figure 8.
The text plan tree for our example.The final step of the creation of the text plan tree isto test this tree for complexity and depth.
The rea-soning behind this is stylistic and syntactic, asclaim texts must be both legible and syntacticallyunambiguous.
If either the nesting depth or thenumber of potentially conjoined structuresbecomes excessive, the procedure reorders the sub-trees of the text plan tree to produce te of accept-able-length and complexity output text chunks.The "counter" of complexity is incremented duringthe linearization stage and a text chunk is "wrappedup" at the point when the counter eaches a maxi-mum and linearization starts a new text chunk.4 Realization4.1 Traversa l  and  l inear i za t ion  of  the treesThis stage takes as input a forest of templates andresults in the production of a bracketed string ofpredicate and case role symbols.
Two proceduresare involved.
First, every template is linearized,that is an order of appearance its predicate and caseroles is established.
Second, the order of templatesin the output string is established.
The text plantree is traversed in a top-down, depth-first fashion.Templates can be concatenated to the end of thestring which resulted from the linearization processof the template processed immediately before thecurrent one or inserted into the string correspond-ing to its parent emplate, immediately followingthe case role of the parent emplate on which thechild is linked.
In the final string, the boundariesbetween the templates are retained (the string isbracketed).
The result of linearization for ourexample is illustrated in Figure 9.\[ I:N1 P1 2:N2N3 2:N4N3\[ P2 I:N4N3\]\[ l:N4N3 P5 2:N4NI0 2:N11\[ I:N11 P7/3:ADV3N4NI0\]\]\[ I :N2N3 I:N4N3 P8 2:INF2ADV4N12\[ l:Nl2 P9 2:N13\[ l:NI3 P10 2:ADJ2N14PREP3N15\]\[ 1 :N2N3 P4 2:PREP1N4N3\]\]\] 2:NUM1N5N6\[ 1 :NUM1N5N6 P12 2:PREP1N2N3\]\[ I:NUM1N5N6 P3 3:ADVIADV2 P3\] 2:N5N7\[ 1 :N5N7 P l l  2:PREP2N2N3\] 2:N8N9\[ 1 :N8N9 P6 2:PREP2N2N34:INF1ADJINSN9\]\]Figure 9.
A l inearized tree for a claim text.
Thenumbers marked with colons are case roles ranks.4 .2  Grammat ica l i za t ionThe input to this stage is the bracketed string ofEnglish strings.
In order to produce cohesive text,it will be necessary to a) select inflectional formsof predicates to facilitate continuity of exposition(e.g., using a participial form instead of a regularfinite form to connect wo phrases); b) to treat co-reference issues by either pronominalization or68ellipsis (our system does not use definite descrip-tions); and c) to realize discourse relations throughinserting punctuation, and conjunctions.
Corre-spondingly, the right-'hand sides of the realizationrules include instructions to carry out the abovetypes of actions.Realization is carried out left to right segment bysegment.
A segment is a substring between any twobrackets, whether opening or closing.
The propertydetermining realization is adjacency, not hierarchi-cal relations; therefore, the orientation of thebrackets and their nesting is immaterial.
In fact, thefirst action of this procedure is to substitute demar-cation points for any cluster of brackets in thestring.
Realization of a segment (So) depends on itssimilarities to its preceding segment S.i (occasion-ally, two preceding segments, S.l and S.2) as wellas on the actual realization of the preceding seg-ment(s).
The first segment is realized in a standardfashion --- the predicate is always realized as thepresent participle and no pronominalization orellipsis occurs.The left-hand sides of the realization rules contain:I. contextual constraints in the form of patternsfor two (seldom, three) consecutive segmentsof linearized trees, a context  of the rule (forinstance, the case role values at the end of onesegment and at the beginning of the other areidentical);2. lexical constraints in the form of knowledgefrom dictionary entries for predicates (forinstance, that the most frequent form of apredicate is a present participle); and3.
control constraints in the form of knowledgeabout he system's prior decisions (forinstance, that the predicate processedimmediately before the current one wasrealized as a past participle).The contexts are characterized by a) existence ofmatching elements in the two segments; b) qualityof the match; c) the position in the segments of thematching elements and d) the relative position ofpartially matched strings.
Ten distinct contexttypes were defined for English.
A few sample rulesare illustrated below.Rule 1 :Contextual Constraint:Lexical Constraint:Control Constraint:Action:Rule 2:Contextual Constraint:Lexical Constraint:Control Constraint:Action:the segments S O and S. t do not havecase roles with identical valuesthe most frequent form of the currentpredicate is present simple, passivevoicenonerealize the predicate as a verb inpresent simple, passive voicethe first case role value of segment S Omatches, at Quality I, the last caserole value of segment S. tthe most frequent form of the currentpredicate is past participlethere is no conjunction and betweenS.
2 and S.irealize the predicate as a past partici-ple: remove brackets between the seg-ments and delete the matching caserole value in the current segment5 Conclusion and FutureDevelopmentsWe have described an implemented generation sys-tem with an interactive content specification stagewhich operates in a conceptually and stylisticallyconstrained environment.
Text planning in this sys-tem can be considered as content-preserving revi-sion of a shallow "draft" representation producedby content specification.
Lexical choice is interac-tively carried out during content specification, withthe system offering the user several kinds of aid inthe choice of terminological entities and the lexicalrealization of relations among them.A distinguishing feature of this system is its par-tially interactive character.
Borrowing a type dis-tinction from the area of machine translation (MT),we can classify this system as that of human-aidedNLG as opposed to fully-automatic NLG.We intend to a) extend the system into multilingualgeneration (we have already acquired a lexicon andgrammar of Russian for the patent disclosure sub-language).
Another direction of work is developingthe interactive authoring support with human-com-puter interaction in a variety of languages (thiscould be called "software localization"); b)develop a patent search facility on the basis of thepatent disclosure sublanguage and the information69retrieval and extraction infrastructure developed inthe TIPSTER project (Grishman, 1995); and c)combine the claim tex.t generator with the analysismc 5ules of the MikroKosmos project (Onishkevichet al, 1994) to develop a system of automatictranslation of patent claims.ReferencesGabriel, R. 1988.
Deliberate writing.
In D.D.
McDonaldand Bolc L., editors, Natural Language Generation Sys-terns.
Springer-Verlag, New york, NY.Grishman, R. 1995.
Tipster Phase II ArchitectureDesign Document, version 1.52, TIPSTERArchitecture Working Group.Inui, K., Tokunaga, T., and Tanaka, H. 1992.
Text revi-sion: amodel and its implementation.
I  Dale, R., Hovy,E., Roesner, D., and O.
Stock, editors, Aspects of Auto-mated Natural Language generation, pages 215-230.Springer-Verlag.Kittredge, R., Polguere, A., and Goldberg, E. 1986.
Syn-thesizing weather forecasts from formatted data.
In Pro-ceedings of the 11th International Conference onComputational Linguistics, pages 563-565.
COLING.Lawson, V. The Language of Patents.
1983.
A Typologyof Patents, with Particular Reference to Machine Trans-lation.
In Lebende Sprachen Nr.2, pages 58-61.McDonald, D. 1993 Issues in the Choice of a Source forNatural Language generation.
In Computational Lin-guistics (19)I, pages 191-197.March 1993.Kukich, K. 1983.
Knowledge-Based report generation:a knowledge engineering approach to natural anguagereport generation.
Ph.D. thesis, University of Pitts-burgh.Mahesh, K. and Nirenburg, S. 1995.
A situated ontologyfor practical NLP.
In Proceedings of the Workshop onBasic Ontological Issues in Knowledge Sharing, Inter-national Joint Conference on Artificial Intelligence(IJCAI-95), Montreal, Canada, August 1995.Meteer, M.W.
1990.
The generation gap: the problem ofexpressibility in text planning.
Ph.D. thesis, Universityof Massachusetts at Amherst.
Also available as BBNtechnical report No.
7347.Meteer, M.W.
1991.
The implications of revisions fornatural Language generation.
In Paros, C., Swartout.
W.,and Mann, C., editors, Natural Language Generation iArtificial Intelligence and Computational Linguistics.Kluwer Academic Publishers, Boston.Onyshkevych, B., and Nirenburg S. The Lexicon in theScheme of KBMT Things.
Thecnical Report MCCS-94-227.
US Delzartment of Defense and Carnegie MellonUniversity.
Computing Research Laboratory.
New Mex-ico State UniversityParis, C., K. Vander Linden, M.Fischer, A.Hartley,L.Pemberton, R.Power and D.Scott.
1995.
A SupportTool for Writing Multilingual Instircutions.
Proceedingsof IJCAI-95, pages 1398 - 1404.Reiter, E.B.
1994.
Has a consensus natural languagegeneration architecture appeared and is it psycholinguis-tically plausible?
In Proceedings of the 7th InternationalWorkshop on Natural Language Generation, pages 163-170.Robin, J.
1994.
Revision-Based Generation of NaturalLanguage Summaries Providing Historical Background.Corpus-Based Analysis, Design, Implementation a dEvaluation.
Technical Report CUCS-034-94.Sheremetyeva, S., and Nirenburg S. 1996.
InteractiveKnowledge Elicitation in a Patent Expert's Workstation.Submitted to International Journal of Corpus Linguis-tics.Sheremetyeva, S., and Nirenburg S. 1996.
Semi-Auto-matic Authoring of Patent Claims.
Technical ReportMCCS-96-290.
Computing Research Laboratory.
NewMexico State University.70
