Proceedings of the ACL Workshop on Building and Using Parallel Texts, pages 115?118,Ann Arbor, June 2005. c?Association for Computational Linguistics, 2005Aligning words in English-Hindi parallel corporaNiraj Aswani Robert GaizauskasDepartment of Computer Science Department of Computer ScienceUniversity of Sheffield University of SheffieldRegent Court 211, Portobello Street Regent Court 211, Portobello StreetSheffield S1 4DP, UK Sheffield S1 4DP, UKN.Aswani@dcs.shef.ac.uk R.Gaizauskas@dcs.shef.ac.ukAbstractIn this paper, we describe a wordalignment algorithm for English-Hindiparallel data.
The system was developedto participate in the shared task on wordalignment for languages with scarceresources at the ACL 2005 workshop, on?Building and using parallel texts: datadriven machine translation and beyond?.Our word alignment algorithm is based ona hybrid method which performs localword grouping on Hindi sentences anduses other methods such as dictionarylookup, transliteration similarity, expectedEnglish words and nearest alignedneighbours.
We trained our system on thetraining data provided to obtain a list ofnamed entities and cognates and to collectrules for local word grouping in Hindisentences.
The system scored 77.03%precision and 60.68% recall on the sharedtask unseen test data.1 IntroductionThis paper describes a word alignment systemdeveloped as a part of shared task on wordalignment for languages with scarce resources atthe ACL 2005 workshop on ?building and usingparallel texts: data driven machine translation andbeyond?.
Participants in the shared task wereprovided with common sets of training data,consisting of English-Inuktitut, Romanian-English,and English-Hindi parallel texts and theparticipating teams could choose to evaluate theirsystem on one, two, or all three language pairs.Our system is for aligning English-Hindi paralleldata at the word level.
The word-alignmentalgorithm described here is based on a hybrid ?multi-feature approach, which groups Hindi wordslocally within a Hindi sentence and uses dictionarylookup (DL) as the main method of aligning wordsalong with other methods such as TransliterationSimilarity (TS), Expected English Words (EEW)and Nearest Aligned Neighbors (NAN).
We usedthe training data supplied to derive rules for localword grouping in Hindi sentences and to findNamed Entities (NE) and cognates using our TSapproach.
In the following sections we brieflydescribe our approach.2 Training DataThe training data set was composed ofapproximately 3441 English-Hindi parallelsentence pairs drawn from the EMILLE (EnablingMinority Language Engineering) corpus (Baker etal., 2004).
The data was pre-tokenized.
For theEnglish data, a token was a sequence of charactersthat matches any of the ?Dr.
?, ?Mr.
?, ?Hon.?,?Mrs.
?, ?Ms.
?, ?etc.
?, ?i.e.
?, ?e.g.
?, ?
[a-zA-Z0-9]+?, words ending with apostrophe and all specialcharacters except the currency symbols ?
and $.Similarly for the Hindi, a token consisted of asequence of characters with spaces on both endsand all special characters except the currencysymbols ?
and $.3 Word AlignmentGiven a pair of parallel sentences, the task of wordalignment can be described as finding one-to-one,one-to-many, and many-to-many correspondences115between the words of source and target sentences.It becomes more complicated when aligningphrases of one language with the correspondingwords or phrases in the target language.
For somewords, it is also possible not to find any translationin the target language.
Such words are aligned tonull.The algorithm presented in this paper, is a blend ofvarious methods.
We categorize words of a Hindisentence into one of four different categories anduse different techniques to deal with each of them.These categories include: 1) NEs and cognates 2)Hindi words for which it is possible to predict theircorresponding English words 3) Hindi words thatmatch certain pre-specified regular expressionpatterns specified in a rule file (explained insection 3.3.)
and finally 4) words which do not fitin any of the above categories.
In the followingsections we explain different methods to deal withwords from each of these categories.3.1 Named Entities and CognatesAccording to WWW1, the Named Entity Task isthe process of annotating expressions in the textthat are ?unique identifiers?
of entities (e.g.Organization, Person, Location etc.).
For example:?Mr.
Niraj Aswani?, ?United Kingdom?, and?Microsoft?
are examples of NEs.
In most textprocessing systems, this task is achieved by usinglocal pattern-matching techniques e.g.
a word thatis in upper initial orthography or a Title followedby the two adjacent words that are in upper initialor in all upper case.
We use a Hindi gazetteer listthat contains a large set of NEs.
This gazetteer listis distributed as a part of Hindi Gazetteerprocessing resource in GATE (Maynard et al,2003).
The Gazetteer list contains various NEsincluding person names, locations, organizationsetc.
It also contains other entities such as timeunits ?
months, dates, and number expressions.Cognates can be defined as two words having acommon etymology and thus are similar oridentical.
In most cases they are pronounced in asimilar way or with a minor change.
For example?Bungalow?
in English is derived from the word???????
in Hindi, which means a house in theBengali style (WWW2).
We use our TS method tolocate such words.
Section 3.2 describes the TSapproach.3.2 Transliteration SimilarityFor the English-Hindi alphabets, it is possible tocome up with a table consisting ofcorrespondences between the letters of the twoalphabets.
This table is generated based on thevarious sounds that each letter can produce.
Forexample a letter ?c?
can be mapped to two lettersin Hindi, ???
and ???.
This mapping is notrestricted to one-to-one but also includes many-to-many correspondences.
It is also possible to map asequence of two or more characters to a singlecharacter or to a sequence two or more characters.For example ?tio?
and ?sh?
in English correspondto the character ???
in Hindi.Prior to executing our word alignment algorithm,we use the TS approach to build a table of NEs andcognates.
We consider one pair of parallelsentences at a time and for each word in a Hindisentence, we generate different English wordsusing our TS table.
We found that beforecomparing words of two languages, it is moreaccurate to eliminate vowels from the wordsexcept those that appear at the start of words.
Weuse a dynamic programming algorithm called?edit-distance?
to measure the similarity betweenthese words (WWW3).
We calculate the similaritymeasure for each word in a Hindi sentence bycomparing it with each and every word of anEnglish sentence.
We come up with an m x nmatrix, where m and n refer to the number ofwords in Hindi and English respectively.
Thismatrix contains a similarity measure for each wordin a Hindi sentence corresponding to each word ina parallel English sentence.
From our experimentsof comparing more than 100 NE and cognate pairs,we found that the word pairs should be consideredvalid matches only if the similarity is greater than75%.
Therefore, we consider only those pairswhich have the highest similarity among the otherpairs with similarity greater than 75%.
Thefollowing example shows how TS is used tocompare a pair of English-Hindi words.
Forexample consider a pair ?aswani  ????????
andthe TS table entries as shown below:116A?,  S?,  SS?,  V?,  W?
and N?We remove vowels from both words: ?aswn ????
?, and then convert the Hindi word intopossible English words.
This gives four differentcombinations: ?asvn?, ?assvn?, ?aswn?
and?asswn?.
These words are then compared with theactual English word ?aswn?.
Since we are able tolocate at least one word with similarity greater than75%, we consider ?aswani  ????????
as a NE.Once a list of NEs and cognates is ready, weswitch to our next step: local word grouping,where all words in Hindi sentences, either thoseavailable in the gazetteer list or in the list derivedusing TS approach, are aligned using TS approach.3.3 Local Word GroupingHindi is a partially free order language (i.e.
theorder of the words in a Hindi sentence is not fixedbut the order of words in a group/phrase is fixed).Unlike English where the verbs are used indifferent inflected forms to indicate differenttenses, Hindi uses one or two extra words after theverb to indicate the tense.
Therefore, if the Englishverb is not in its base form, it needs to be alignedwith one or more words in a parallel Hindisentence.
Sometimes a phrase is aligned withanother phrase.
For example ?customer benefits?aligns with ?????
??
??????.
In this example thefirst word ?customer?
aligns with the first word??????
and the second word ?benefits?
aligns withthe third word ???????.
Considering ?customersatisfaction?
and ?????
??
??????
as phrases to bealigned with each other, ????
is the word thatindicates the relation between the two words??????
and ??????
?, which means the ?benefits ofcustomer?
in English.
These words in a phraseneed to be grouped together in order to align themcorrectly.
In the case of certain prepositions,pronouns and auxiliaries, it is possible to predictthe respective Hindi postpositions, pronouns andother words.
We derived a set of more than 250rules to group such patterns by consulting theprovided training data and other grammarresources such as Bal Anand (2001).
The rule filecontains the following information for each rule:1) Hindi Regular Expression for a word orphrase.
This must match one or more words inthe Hindi sentence.2) Group name or a part-of-speech category.3) Expected English word(s) that this Hindi wordgroup may align to.4) In case a group of one or more English wordsaligns with a group of one or more Hindiwords, information about the key words inboth groups.
Key words must match eachother in order to align English-Hindi groups.5) A rule to convert Hindi word into its baseform.We list some of the derived rules below:1) Group a sequence of [X + Postposition], whereX can be any category in the above list exceptpostposition or verb.
For example: ?For X?
=?X ??
????
?, where ?For?
= ???
????
?.2) Root Verb + (??
?, ???
or ??)?
+ (PH).
Presentcontinuous tense.
We use ?PH?
as anabbreviation to refer to the present/past tenseconjunction of the verb ??????
- ?,?
?
?, ?,?
?
?, etc.3) Group two words that are identical to eachother.
For example: "???
???
", which means?different?
in English.
Such bi-grams arecommon in Hindi and are used to stress theimportance of a word/activity in a sentence.Once the words are grouped in a Hindi sentence,we identify those word groups which do not fit inany of the TS and EEW categories.
Such wordsare then aligned using the DL approach.3.3 Dictionary lookupSince the most dictionaries contain verbs in theirbase forms, we use a morphological analyzer toconvert verbs in their base forms.
The English-Hindi dictionary is obtained from (WWW4).
Thedictionary returns, on average, two to four Hindiwords referring to a particular English word.
Theformula for finding the lemma of any Hindi verbis: infinitive = root verb + ????.
Since in mostcases, our dictionary contains Hindi verbs in theirinfinitive forms, prior to comparing the word withthe unaligned words, we remove the word ???
?from the end of it.
Due to minor spelling mistakesit is also possible that the word returned fromdictionary does not match with any of the words in117a Hindi sentence.
In this case, we use edit-distancealgorithm to obtain similarity between the twowords.
If the similarity is greater than 75%, weconsider them similar.
We use EEW approach forthe words which remain unaligned after the DLapproach.3.4 Expected English wordsCandidates for the EEW approach are the Hindiword groups (HWG) that are created by our Hindilocal word grouping algorithm (explained insection 3.3).
The HWGs such as postpositions,number expressions, month-units, day-units etc.are aligned using the EEW approach.
Forexample, for the Hind word ??????
in a Hindisentence, which means ?fifty two?
in English, thealgorithm tries to locate ?fifty two?
in its parallelEnglish sentence and aligns them if found.
For theremaining unaligned Hindi words we use the NANapproach.3.5 Nearest Aligned NeighborsIn certain cases, words in English-Hindi phrasesfollow a similar order.
The NAN approach workson this principle and aligns one or more wordswith one of the English words.
Considering oneHWG at a time, we find the nearest Hindi wordthat is already aligned with one or more Englishword(s).
Aligning a phrase ?customer benefits?with ?????
??
??????
(example explained in section3.3) is an example of NAN approach.
Similarlyconsider a phrase ?tougher controls?, where for itsequivalent Hindi phrase ?????
??????
?, thedictionary returns a correct pair ?controls ??????
?, but fails to locate ?tougher  ?????.
Foraligning the word ?tougher?, NAN searches for thenearest aligned word, which, in this case, is?controls?.
Since the word ?controls?
is alreadyaligned with the word ???????
?, the NAN methodaligns the word ?tougher?
with the nearestunaligned word ?????
?.4 Test Data resultsWe executed our algorithm on the test dataconsisting of 90 English-Hindi sentence pairs.
Weobtained the following results for non-nullalignment pairs.Word Alignment EvaluationEvaluation of SURE alignmentsPrecision = 0.7703Recall    = 0.6068F-measure = 0.6788Evaluation of PROBABLE alignmentsPrecision = 0.7703Recall    = 0.6068F-measure = 0.6788AER       = 0.3212ReferencesBal Anand, 2001, Hindi Grammar Books forstandard 5 to standard 10, Navneet Press, India.Baker P., Bontcheva K., Cunningham H.,Gaizauskas R., Hamza O., Hardie A., JayaramB.D., Leisher M., McEnery A.M., Maynard D.,Tablan V., Ursu C., Xiao Z., 2004, Corpuslinguistics and South Asian languages: Corpuscreation and tool development, Literary andLinguistic Computing, 19(4), pp.
509-524.Maynard D., Tablan V., Bontcheva K.,Cunningham H., 2003, Rapid customisation ofan Information Extraction system for surpriselanguages, ACM Transactions on AsianLanguage Information Processing, Special issueon Rapid Development of LanguageCapabilities: The Surprise Languages.WWW1, Named Entity Task Definition,http://www.cs.nyu.edu/cs/faculty/grishman/NEtask20.book_2.html#HEADING1 [15/04/2005]WWW2, Britannica Online Encyclopaedia,http://www.britannica.com/eb/article?tocId=9018081 [15/04/2005]WWW3, Dynamic Programming Algorithm (DPA)for Edit-Distance,http://www.csse.monash.edu.au/~lloyd/tildeAlgDS/Dynamic/Edit/ [22/03/05]WWW4, English-Hindi dictionary source,http://sanskrit.gde.to/hindi/dict/eng-hin_guj.itx[22/03/05].118
