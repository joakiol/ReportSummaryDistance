Proceedings of NAACL-HLT 2013, pages 306?314,Atlanta, Georgia, 9?14 June 2013. c?2013 Association for Computational LinguisticsDevelopment of a Persian Syntactic Dependency TreebankMohammad Sadegh RasooliDepartment of Computer ScienceColumbia UniversityNew York, NYrasooli@cs.columbia.eduManouchehr KouhestaniDepartment of LinguisticsTarbiat Modares UniversityTehran, Iranm.kouhestani@modares.ac.irAmirsaeid MoloodiDepartment of LinguisticsUniversity of TehranTehran, Irana.moloodi@ut.ac.irAbstractThis paper describes the annotation processand linguistic properties of the Persian syn-tactic dependency treebank.
The treebankconsists of approximately 30,000 sentencesannotated with syntactic roles in addition tomorpho-syntactic features.
One of the uniquefeatures of this treebank is that there are al-most 4800 distinct verb lemmas in its sen-tences making it a valuable resource for ed-ucational goals.
The treebank is constructedwith a bootstrapping approach by means ofavailable tagging and parsing tools and man-ually correcting the annotations.
The data issplitted into standard train, development andtest set in the CoNLL dependency format andis freely available to researchers.1 Introduction1The process of manually annotating linguistic datafrom a huge amount of naturally occuring texts is avery expensive and time consuming task.
Due to therecent success of machine learning methods and therapid growth of available electronic texts, languageprocessing tasks have been facilitated greatly.
Con-sidering the value of annotated data, a great deal ofbudget has been allotted to creating such data.Among all linguistic datasets, treebanks play animportant role in the natural language processingtasks especially in parsing because of its applica-1This research is done while working in Dadegan ResearchGroup, Supreme Council of Information and CommunicationsTechnology (SCICT), Tehran, Iran.
The project is fully fundedby SCICT.tions in tasks such as machine translation.
Depen-dency treebanks are collections of sentences withtheir corresponding dependency trees.
In the lastdecade, many dependency treebanks have been de-veloped for a large number of languages.
There areat least 29 languages for which at least one depen-dency treebank is available (Zeman et al 2012).Dependency trees are much more similar to the hu-man understanding of language and can easily rep-resent the free word-order nature of syntactic rolesin sentences (Ku?bler et al 2009).Persian is a language with about 110 millionspeakers all over the world (Windfuhr, 2009), yet interms of the availability of teaching materials andannotated data for text processing, it is undoubt-edly a low-resourced language.
The need for morelanguage teaching materials together with an ever-increasing need for Persian-language data process-ing has been the incentive for the inception of ourproject which has defined the development of thesyntactic treebank of Persian as its ultimate aim.
Inthis paper, we review the process of creating the Per-sian syntactic treebank based on dependency gram-mar.
In this treebank, approximately 30,000 sen-tences from contemporary Persian-language textsare manually tokenized and annotated at morpholog-ical and syntactic levels.
One valuable aspect of thetreebank is its containment of near 5000 distinct verblemmas in its sentences making it a good resourcefor educational goals.
The dataset is developed af-ter the creation of the syntactic valency lexicon ofPersian verbs (Rasooli et al 2011c).
This treebankis developed with a bootstrapping approach by au-tomatically building dependency trees based on the306I?
@?@ QK.
??JJ.?
?K@ rootP?st PAn b?r mobt?ni Pinis that on based itV PR PP ADJ PRrootSBJMOSAJPPPOSDEP(a) A simple projective dependencytree for a Persian sentence: ?It is basedon that??.
?@ QK.I?
@ ??JJ.?
?K@ rootPAn b?r P?st mobt?ni Pinthat on is based itPR PP V ADJ PRrootSBJMOSAJPPPOSDEP(b) A simple non-projective depen-dency tree for a Persian sentence: ?Itis based on that?.Figure 1: Examples of Persian sentences with thedependency-based syntactic trees.
1(a) and 1(b) are ex-amples of a projective and a non-projective dependencytree, respectively.
The first lines show the original wordsin Persian.
The pronunciation and their meanings areshown in the second line and the third line respectively.
Inthe fourth line, the part of speech (POS) tags of the wordsare presented.
Note that the words are written from rightto left (the direction of Perso-Arabic script).
The depen-dency relations are described in Table 2.
The relation isshown with an arc pointing from the head to the depen-dent.previous annotated trees.
In the next step, automaticannotation is corrected manually.The remainder of this paper is as follows.
In Sec-tion 2, we briefly review the challenges in Persianlanguage processing.
In Sections 3 and 4, the de-tails about the annotation process, linguistic and sta-tistical information about the data and the annotatoragreement are reported.
In Section 5, the conclusionand suggestions for future research are presented.2 Persian Language Processing ChallengesPersian is an Indo-European language that is writ-ten in Arabic script.
There are lots of problemsin its orthography such as encoding problems, hid-den diacritics and writing standards (Kashefi et al2010).
A number of challenges such as the free or-Raw SentenceEncoding andSpell CorrectionTokenization andPOS TaggingVerb AnalysisDependencyParsing Parsing ModelManual ErrorCorrection(TreebankAnnotation)DependencyTreebankNeed toUpdate theParsingModel?Retrain theParserInsertAdd to the TreebankYesUpdate ModelFigure 2: Diagram of bootstrapping approach in the de-velopment of the dependency treebank.der of words, the existence of colloquial texts, thepro-drop nature of the Persian language and its com-plex inflections (Shamsfard, 2011) in addition to thelack of efficient annotated linguistic data have madethe processing of Persian texts very difficult; e.g.there are more than 100 conjugates and 2800 de-clensions for some word forms in Persian (Rasooliet al 2011b), some words in the Persian languagedo not have a clear word category (i.e.
the lexicalcategory ?mismatch?)
(Karimi-Doostan, 2011a) andmany compound verbs (complex predicates) can beseparable (i.e.
the non-verbal element may be sepa-rated from the verbal element by one or more otherwords) (Karimi-Doostan, 2011b).After the development of the Bijankhan corpus(Bijankhan, 2004) with the annotation of word cat-egories, other kinds of datasets have been createdto address the need for Persian language process-ing.
Among them, a Persian parser based on linkgrammar (Dehdari and Lonsdale, 2008), a compu-tational grammar based on GPSG (Bahrani et al2011), syntactic treebank based on HPSG (Ghay-oomi, 2012) and Uppsala dependency treebank (Ser-aji et al 2012) are the efforts to satisfy the need for307syntactic processing in the Persian language.?XQ?
?K AK.
?XAKP ?A?
IJ.
m?
rootk?rd?m to bA zijAdi sohb?thAjedid (1st, sing) you with a lot speaking(s)V PR PP ADJ NrootNVENPOSTMODNPPPOSDEP(a) A simple dependency tree with compound verbfor a Persian sentence: ?I spoke with you a lot?.The NVE is a relation between a light verb and itsnonverbal element.
As shown in the tree, not onlythe nonverbal element is not near the light verb, butalso it is inflected for plurality (i.e.
speakings).??P??
?KAg 	?K@P@ ?P@X rootmir?v?m xAne Pin P?z dAr?mgo (pres.cont., 1st sing.)
house this from have (pres., 1st sing.
)V N PREM PP VrootPROGVPPPOSDEPNPREMOD(b) A simple dependency tree for a Persian sentence with a pro-gressive auxiliary: ?I am going from this house?.
The PROG is arelation between a verb and its progressive auxiliary.I ????@?m'QK.
?K Ag 	?K@ ?K.
rootbarn?xAh?m g?St xAne Pin bereturn (future, neg., 1st sing.)
house this toV N PREM PProotVPPPOSDEPNPREMOD(c) A simple dependency tree for a Persian sen-tence with a an inflected form of a prefixed verb?I will not return to this house.?.
The word QK.
isthe prefix, the word ??
@?m' is the auxiliary for thefuture and the word I ??
is the main verb.
Noticethat the prefix is attached to the auxiliary withoutany space and the remaining part of the verb is sep-arated by a space.Figure 3: Examples of Persian sentences with thedependency-based syntactic trees.
The format of the rep-resentation is the same as Figure 1.3 Persian Dependency Treebank3.1 MotivationWith the creation of the Virastyar spell checker soft-ware (Kashefi et al 2010), many open-source li-braries were released for Persian word processingsuch as POS tagging, encoding refinement, tok-enization, etc.
Regarding the need for syntactic anal-ysis of Persian texts, we decided to prepare a valu-able linguistic data infrastructure for Persian syn-tax.
In the first step, there was a need for choosingfrom the existing theories of grammar that best suitsPersian.
Among grammatical theories, we decidedto choose the dependency grammar.
In dependencygrammar, syntactic relations are shown with depen-dencies between the words.
In computational de-pendency grammar, each word has one head and thehead of the sentence is the dependent of an artificialroot word (Ku?bler et al 2009).
A sample depen-dency tree is shown in Figure 1(a) for a Persian sen-tence.
Note that Persian sentences are written fromright to left.There are several reasons for the preference ofdependency grammar to grammars such as phrase-based structure grammars.
Although in both of therepresentations, one can show the syntactic analy-sis of a sentence, dependency representation has thepower to account for the free word order of manylanguages such as Turkish (Oflazer et al 2003) andCzech (Hajic, 1998) and also Persian.
As an exam-ple, a sample non-projective dependency tree for thePersian language is shown in Figure 1(b).
The re-cent advances in very fast dependency parsing mod-els (e.g.
(Nivre, 2009; Bohnet and Nivre, 2012)),has made the syntactic processing task very popularin the recent decade.In the Persian language, in addition to the abun-dance of crossings of the arcs, another problem oc-curs with compound verbs and verbs in the progres-sive aspect: compound and progressive verbs aremulti-word expressions that may be separated de-pending on the context.
Persian compound verbsconsist of a light verb and a non-verbal element andthe non-verbal element can be a noun, an adjective(in rare cases) or a sequence of a preposition anda noun (Dabir-Moghaddam, 1997).
In addition, thenonverbal elements can also be inflected.
The dis-tance between the nonverbal element and the light308verb on the one hand and the possibility of the non-verbal element being inflected on the other handhave made the task of compound verb identificationvery difficult.
For example, in Bijankhan (Peykare)corpus (Bijankhan et al 2011), approximately 9%of nonverbal elements of compound verbs are placedaway from the light verb for the compound verbswith the light verb 	?XQ?
/k?rd?n/ (to do) (Rasooliet al 2011a).
A group of Persian progressive verbsare composed of two words, the first being the sim-ple past or the simple present form derived fromthe infinitive 	??
@X /dASt?n/ (to have) and the sec-ond being the past continuous or the present contin-uous form of the main verb.
The first verb (an auxil-iary) agrees with the second in number and person.The problem is that the progressive auxiliary can beaway from the main verb.
The sample trees withcompound verbs and progressive auxiliary verbs areshown in Figures 3(a) and 3(b) respectively.3.2 Representation and Dependency RelationIn this treebank, we followed the format of theCoNLL tab-separated format for dependency pars-ing (Buchholz and Marsi, 2006).
In addition tothe lemma, we annotated part of speech tags (bothcoarse and fine grained) and person, number andtense-mood-aspect (only for verbs) of words in sen-tences.
The details of the part of speech tags andother morphosyntactic features and dependency re-lations are shown in Tables 1 and 2, respectively.The part of speech tag set in this treebank is notthe same as that of Bijankhan (Peykare) corpus (Bi-jankhan et al 2011) and it is essential to convert thetagset in Peykare corpus to the tagset in this tree-bank, in order to use both datasets2.
We also triedto use the writing standard of the Academy of Per-sian Language and Literature except for the caseswhere for a word there were several standards all ofwhich were used in Persian written texts (e.g.
?m'@and ?k?@ /PAntSe/ (whatever)).We also prepared two representations for objectsaccompanied by the accusative case marker.
In thefirst representation (done manually), we assume theaccusative case marker @P /rA/ as the head of the two-2It is important to note that the conversion between thecoarse-grained POS tags is straightforward and does not needany special effort.
?YK @?k ????
??
@P ?G.AJ?
rootxAnd?m gofti ke rA ketAbiread (past, 1st, sing.)
said (2nd, sing.)
that acc.
the bookV V SUBR POSTP NrootOBJPREDEPNCLPOSDEP(a) ?I read the book that you mentioned.?.
?YK @?k ????
??
@P ?G.AJ?
rootxAnd?m gofti ke rA ketAbiread (past, 1st, sing.)
said (2nd, sing.)
that acc.
the bookV V SUBR POSTP NrootOBJACC-CASENCLPOSDEP(b) ?I read the book that you mentioned.
?Figure 4: A sample sentence with two kinds of repre-sentations of object-verb relation.
The first one is donemanually and the second automatically by converting thedependencies in the first representation.word sequence object plus rA.
The second represen-tation, that is the automatic conversion of the first,is the reverse order of the first one in which the ac-cusative case marker is the dependent of the directobject and the direct object is considered as the headof the aforementioned sequence.
In the first rep-resentation, objects are much easier to find by theparser (because of the uniqueness of the accusativecase marker in Persian and less distance of it fromthe verb as its head) but it may increase the num-ber of non-projective arcs to the syntactic tree.
Weprepared both of the representations in two separatedata packs.
A sample comparison between the twostructures is shown in Figure 4.In the treebank, all words are single word forms(without spaces).
There is only one exception forsimple verb inflections where even multi-word to-kens of simple verbs are shown as only one unit.
Thereason is that for many cases such as the case of in-flections for prefixed verbs it is more straightforwardto analyze the whole part instead of analyzing each309Morphosyntactic features in the Persian dependency treebankCPOS FPOS Person Number TMAADJ (adjective)AJP (positive)AJCM (comparitive)AJSUP (superlative)ADR (address term) PRADR (pre-noun)POSADR (post-noun)ADV (adverb) SADV (genuine)CONJ (coordinating conjunction) CONJ (conjunction)IDEN (title) IDEN (title)N (noun)ANM (animate) SING (singular)IANM (inanimate) PLUR (plural)PART (particle) PART (particle)POSNUM (post-noun modifier) POSNUM (post-noun modifier)POSTP (postposition) POSTP (postposition)PR (pronoun)SEPER (separate personal)JOPER (enclitic personal)DEMON (demonstrative) 1 SING (singular)INTG (interogative) 2 PLUR (plural)CREFX (common reflexive) 3UCREFX (noncommon reflexive)RECPR (reciprocal)PREM (pre-modifier)EXAJ (exclamatory)QUAJ (interrogative)DEMAJ (demonstrative)AMBAJ (ambiguous)PRENUM (pre-noun numeral) PRENUM (pre-noun numeral)PREP (preposition) PREP (preposition)PSUS (pseudo-sentence) PSUS (pseudo-sentence)PUNC (punctuation) PUNC (punctuation)V (verb)ACT (active) 1 SING (singular) See Table 3PAS (passive) 2 PLUR (plural)MOD (modal) 3SUBR (subordinating clause) SUBR (subordinating clause)Table 1: Morphosyntactic features in the Persian dependency treebank.
Empty cells indicate that the mentionedfeature is not present for the POS.
TMA stands for Tense/Mood/Aspect, CPOS for Coarse grained POS and FPOS forFine grained POS.
There is also another feature for representing the typographical connectedness of words that areseparated into two or more tokens with the values ISO (isolated word), NXT (attached to the next token) and PRV(attached to the previous token).part separately3.
In Table 3, possible types of thePersian verb inflections are shown.
As seen in Table3, 6 forms of 14 inflection types of Persian verbs aremulti-word tokens and for passive verbs they maybe composed of more words than their active coun-terparts (since for passive verbs an auxiliary formderived from the infinitive 	?Y ?
/Sod?n/ is used).
InFigure 3(c), a sample tree with a multi-token pre-3In (Seraji et al 2012), multi-token verbs are considered asseparate words.fixed verb is shown.
As shown in the case of col-ored tokens, it seems more beneficial to put all mor-phemes of the word together before parsing.
Fur-thermore, with the available Persian verb analyzer itis very easy to first preprocess the verbs4.4If it is needed to respect the exact format of CoNLL, spacesbetween the verb tokes should be replaced by a character such asunderscore.
Regarding the special fine-grained morphologicaltags for the verb such as tense-mood-aspect, it is also straight-forward to separate all of the multi-word verbs and add newdependency relations between their words.310Abbreviation Description Abbreviation DescriptionACL Complement Clause of Adjective ADV AdverbADVC Adverbial Complement of Verb AJCONJ Conjunction of AdjectiveAJPP Prepositional Complement of Adjective AJUCL Adjunct ClauseAPOSTMOD Adjective Post-Modifer APP AppositionAPREMOD Adjective Pre-Modifier AVCONJ Conjunction of AdverbCOMPPP Comparative Preposition ENC Enclitic Non-Verbal ElementLVP Light Verb Particle MESU MeasureMOS Mosnad MOZ Ezafe DependentNADV Adverb of Noun NCL Clause of NounNCONJ Conjunction of Noun NE Non-Verbal Element of InfinitiveNEZ Ezafe Complement of Adjective NPOSTMOD Post-Modifer of NounNPP Preposition of Noun NPREMOD Pre-Modifier of NounNPRT Particle of Infinitive NVE Non-Verbal ElementOBJ Object OBJ2 Second ObjectPARCL Participle Clause PART Interrogative ParticlePCONJ Conjunction of Preposition POSDEP Post-DependentPRD Predicate PREDEP Pre-DependentPROG Progressive Auxiliary PUNC Punctuation MarkROOT Sentence Root SBJ SubjectTAM Tamiz VCL Complement Clause of VerbVCONJ Conjunction of Verb VPP Prepositional Complement of VerbVPRT Verb Particle ACC-CASE Accusative Case Marker (2nd.
Rep.)Table 2: Dependency relations in the Persian dependency treebankTense/Aspect/Mood Abbreviation Examples 	?XP?
k xord?n: to eat, 1st, sing.Imperative HA P?m'.
/boxor/Indicative Future AY XP?
k ??@?
k /xAh?m xord/Indicative Imperfective Perfect GNES ?
@ ?XP?
k??
/mixordeP?m/Indicative Imperfective Pluperfect GBES ?X?K.
?XP?k??
/mixorde bud?m/Indicative Imperfective Preterite GES ?XP?
k??
/mixord?m/Indicative Perfect GN ?
@ ?XP?
k /xordeP?m/Indicative Pluperfect GB ?X?K.
?XP?k /xorde bud?m/Indicative Present H ?P?
k??
/mixor?m /Indicative Preterite GS ?XP?
k /xord?m/Subjunctive Imperfective Pluperfect GBESE ???AK.
?X?K.
?XP?k??
/mixorde bude bAS?m/Subjunctive Imperfective Preterite GESEL ???AK.
?XP?k??
/mixorde bAS?m/Subjunctive Pluperfect GBEL ???AK.
?X?K.
?XP?k /xorde bude bAS?m/Subjunctive Present HEL ?P?m'.
/boxor?m/Subjunctive Preterite GEL ???AK.
?XP?k /xorde bAS?m/Table 3: Tense/Mood/Aspect Types in Persian verbs3.3 Annotation ProcessThe annotation process consists of several consecu-tive steps.
In Figure 2, a summary of the bootstrap-ping approach in the annotation process is shown.At first, a collection of independent sentences havebeen collected randomly from the web.
For the first5000 sentences, we crawled Persian news texts andrandomly sampled the sentences.
For the remain-ing sentences, we first listed the absent verb lem-mas in the 5000 sentences based on the verb list ex-311tracted from the valency lexicon of Persian verbs(Rasooli et al 2011c) and collected random sen-tences that included the absent verb lemmas in theirwords.
We listed all possible inflections and per eachverb lemma, sampled at most 8 sentences from theweb.
These sentences had to contain at least onepresent tense, one past tense, one passive voice andone future tense inflection unless we could not findthem and were obliged to reduce the number.
Thesentences were not shortened and were kept withtheir original length and words.
Finally, we manu-ally removed sentences containing colloquial words.However, we did not remove loan words or cases ofcode-switching between latin-script words and Per-sian words in the sentences.
The raw sentences werefed to the encoding and spell checking module.
Af-ter spell correction, all sentences were tokenized andtagged with part of speech tags.
All of the wordprocessing steps were done using Virastyar library(Kashefi et al 2010).
After tokenization and POStagging, the tokenized sentences were fed to the Per-sian verb analyzing tool (Rasooli et al 2011a).
Inthe next step, the preprocessed sentences were givento the dependency parser.
We used MST parser (Mc-Donald et al 2005) for parsing the sentences.In the final step, annotators corrected the errorsof tokenization, POS tagging and parsing.
In aboutevery one to two weeks, the parser model was up-dated by training on the new version of the treebank.This process lasted 9 months and the number of an-notators increased by time to speed up the process.In the first 6 months, we used 8 annotators and forthe next 5 months, we hired 6 more annotators tospeed up the process.
The annotators and linguisticexperts consisted of 1 PhD graduate (linguistics), 4PhD candidates (linguistics), and 9 MA graduates orgraduate students (7 linguistics, 1 Persian languageand literature and 1 computational linguistics).
Allof the annotators were native Persian speakers.After finalizing the annotation of all raw sen-tences, we applied a rule-based potential error finderto find the potentially erroneous sentences.
The ruleswere gradually collected in the process of the an-notation by the annotators.
All the potentially er-roneous sentences were given to the annotators tobe checked for potential errors.
In Section 4.1, thestatistics about the changes after the correction isreported.
One of the main reasons for the doublechecking phase in the process is that based on ourmanual investigations of the annotations, we foundsome inevitable mistakes by annotators that could besolved by manual rules.
Mistakes such as scrollingthe drop-down list unintentionally and changing thepart of speech tag or dependency relation and mis-takes caused by tiredness and lack of concentrationin addition to some of the changes of the linguisticconventions in the annotation.
Since all cases of de-pendency relations in this treebank may be usuallyeither a left-branching relation or a right-branchingone and most of the relations are restricted to cer-tain types of parts of speech, it is easy to capturethe potential errors in the annotations based on therules mentioned and to keep track of the changesin the linguistic conventions by searching the cuesfor those conventions (most of the changed conven-tions were made to very rare relations in the syntac-tic structure).In (Dligach and Palmer, 2011), it is concludedthat although doubly annotated corpora are more re-liable, annotating more sentences only once is morebeneficial; i.e.
annotating each sentence only onceis less time-consuming and more cost-effective.
Weannotated all the sentences only once (with an ad-ditional checking phase) except for the 5% of thesentences in order to estimate the quality of our lin-guistic conventions and agreement among the anno-tators.
The statistics about the annotators agreementis reported in Section 4.1.4 Statistics of the TreebankFinally, 29,982 sentences were manually annotated.The details about the statistics is shown in Ta-ble 4.
It is worth mentioning that 39.24% of thewords in the treebank are tagged as noun, 12.62%as verb, 11.64% as preposition and 7.39% as adjec-tive.
The most frequent dependency relations arepost-dependent (15.08%) and Ezafeh construction(10.17%).
As shown in Table 5, the number of non-projective arcs in the second representation is a littlebit less than the first.
As mentioned earlier, the mainreason is the dependencies between the direct objectand words after the accusative case marker such asthe example in Figure 4.
The change percentage af-ter the correction of the potential errors is shown inTable 6.
It seems that the rules for finding the poten-312Number of Sentences 29,982Number of Words 498,081Average Sentence Length 16.61Number of Distinct Words 37,618Number of Distinct Lemmas 22,064Number of Verbs 60,579Number of Verb Lemmas 4,782Average Frequency of Verb Lemmas 12.67Table 4: Statistics about the frequency of words in thePersian dependency treebank.# Non-Projective 1st Rep. 2nd Rep.Number of Arcs 9639 9091Percent of Arcs 0.019 0.018Number of Sentences 5540 5095Percent of Sentences 1.85 1.70Table 5: Statistics about non-projective relations in thePersian dependency treebank for both of the representa-tions.tial errors were useful for correcting the errors.4.1 Annotators AgreementThe statistics about the agreement among the an-notators is shown in Table 7.
We can also use theKappa (Cohen, 1960) to measure the quality of theannotation based on the agreement among the anno-tators (pr(a) in Eq.
1) and the expected agreement orprobability of chance (pr(e) in Eq.
1).
If we considerthe accuracy of the parser on the raw text withoutgold POS tags (approximately 75% labeled and 80%unlabeled accuracy based on our experience duringthe bootstrapping) and the POS tagger that we usedduring the annotation process (approximately 94%)as the probability of chance, we see that for all ofthe tasks in Table 7, the quality of the annotaion ismore than 0.81 and is considered as almost perfectaccording to (Landis and Koch, 1977).k =pr(a)?
pr(e)1?
pr(e)(1)5 ConclusionAs mentioned earlier, Persian is a language withits own challenges.
We tried to overcome someof those challenges by preparing valuable linguisticChanges to Unlabeled Relations 4.91%Changes to Labeled Relations 6.29%Changes to POS Tags 4.23%Table 6: Statistics about changes in the treebank after themanual correction of the potential errors.Unlabeled Relations 97.06%Labeled Relations 95.32%POS Tags 98.93%Table 7: Statistics about agreements among the annota-tors.datasets5.
In addition to the preparation of the tree-bank, we prepared some useful desktop and web-based tools for searching in the dataset, obtainingstatistics and viewing syntactic structures graphi-cally.
We hope to report more details about the lin-guistic aspects and the findings of the project in ad-dition to our detailed experiments on the parsing taskin future publications.
We believe that this treebankis just the very first step to satisfy the need for Per-sian language processing.
Our future aim is to add asemantic level to the annotation.AcknowledgmentsThe project is funded by Iran Supreme Coun-cil of Information and Communication Technology(SCICT).
We really appreciate the linguists whohelped us in annotating: Farzaneh Bakhtiary, Pari-naz Dadras, Maryam Faal-Hamedanchi, SaeedehGhadrdoost-Nakhchi, Mostafa Mahdavi, AzadehMirzaei, Sahar Oulapoor, Neda Poormorteza-Khameneh, Morteza Rezaei-Sharifabadi, Sude Re-salatpoo, Akram Shafie, and Salimeh Zamani;and the programmers who helped us in the pro-cess of the development of the treebank: SeyedMahdi Hoseini, Alireza Noorian, Yasser Souri, andMohsen Hossein-Alizadeh; and also our colleagueswho helped us find linguistic sources from theweb: Azadeh Abbasi Abyaneh, Shima Zamanpoor,Narmin Ghaderi, Houra Nouri and Seyedeh ManeliHashemian; and other colleagues especially MahdiBehniafar.
We thank Nizar Habash for his supportof this paper and Weiwei Guo and three anonymousreviewers for their useful comments on the paper.5A comprehensive description of the syntactic relations andmorphosyntactic features is reported in the treebank official re-port (Dadegan Research Group, 2012) in the treebank packageboth in Persian and English.313ReferencesMohammad Bahrani, Hossein Sameti, and Mehdi HafeziManshadi.
2011.
A computational grammar for Per-sian based on GPSG.
Language Resources and Eval-uation, 45(4):387?408.Mahmood Bijankhan, Javad Sheykhzadegan, Moham-mad Bahrani, and Masood Ghayoomi.
2011.
Lessonsfrom building a persian written corpus: Peykare.
Lan-guage resources and evaluation, 45(2):143?164.Mahmood Bijankhan.
2004.
The role of the corpus inwriting a grammar: An introduction to a software.
Ira-nian Journal of Linguistics, 19(2).Bernd Bohnet and Joakim Nivre.
2012.
A transition-based system for joint part-of-speech tagging and la-beled non-projective dependency parsing.
In EMNLP-CoNLL, pages 1455?1465.Sabine Buchholz and Erwin Marsi.
2006.
CoNLL-Xshared task on multilingual dependency parsing.
InProceeding of the Tenth Conforence on ComputationalNatural Language Learning (CoNLL).Jacob Cohen.
1960.
A coefficient of agreement for nom-inal scales.
Educational and psychological measure-ment, 20(1):37?46.Mohammad Dabir-Moghaddam.
1997.
Compoundverbs in Persian.
Studies in the Linguistic Sciences,27(2):25?59.Dadegan Research Group.
2012.
Persian Depen-dency Treebank, Annotation manual and user guide.Supreme Council of Information and CommunicationTechnology (SCICT), Tehran, Iran.Jon Dehdari and Deryle Lonsdale.
2008.
A link grammarparser for Persian.
Aspects of Iranian Linguistics, 1.Dmitriy Dligach and Martha Palmer.
2011.
Reducing theneed for double annotation.
In Proceedings of the 5thLinguistic Annotation Workshop, pages 65?69.Masood Ghayoomi.
2012.
Bootstrapping the develop-ment of an HPSG-based treebank for Persian.
Lin-guistic Issues in Language Technology, 7(1).Jan Hajic.
1998.
Building a syntactically annotated cor-pus: The Prague dependency treebank.
Issues of va-lency and meaning, pages 106?132.Gholamhossein Karimi-Doostan.
2011a.
Lexical cate-gories in Persian.
Lingua, 121(2):207?220.Gholamhossein Karimi-Doostan.
2011b.
Separability oflight verb constructions in Persian.
Studia Linguistica,65(1):70?95.Omid Kashefi, Mitra Nasri, and Kamyar Kanani.2010.
Automatic Spell Checking in Persian Language.Supreme Council of Information and CommunicationTechnology (SCICT), Tehran, Iran.Sandra Ku?bler, Ryan McDonald, and Joakim Nivre.2009.
Dependency Parsing.
Synthesis Lectures onHuman Language Technologies.
Morgan & ClaypoolPublishers.J.
Richard Landis and Gary G. Koch.
1977.
The mea-surement of observer agreement for categorical data.Biometrics, pages 159?174.Ryan McDonald, Koby Crammer, and Fernando Pereira.2005.
Online large-margin training of dependencyparsers.
In Proceedings of the 43rd Annual Meetingon Association for Computational Linguistics (ACL),pages 91?98, Sydney, Australia.Joakim Nivre.
2009.
Non-projective dependency parsingin expected linear time.
In Proceedings of the JointConference of the 47th Annual Meeting of the ACLand the 4th International Joint Conference on NaturalLanguage Processing, pages 351?359.Kemal Oflazer, Bilge Say, Dilek Zeynep Hakkani-Tu?r,and Go?khan Tu?r.
2003.
Building a Turkish treebank.Treebanks, pages 261?277.Mohammad Sadegh Rasooli, Heshaam Faili, andBehrouz Minaei-Bidgoli.
2011a.
Unsupervised iden-tification of Persian compound verbs.
In Proceedingsof the Mexican international conference on artificialintelligence (MICAI), pages 394?406, Puebla, Mexico.Mohammad Sadegh Rasooli, Omid Kashefi, and BehrouzMinaei-Bidgoli.
2011b.
Effect of adaptive spellchecking in Persian.
In 7th International Confer-ence on Natural Language Processing and KnowledgeEngineering (NLP-KE), pages 161?164, Tokushima,Japan.Mohammad Sadegh Rasooli, Amirsaeid Moloodi,Manouchehr Kouhestani, and Behrouz Minaei-Bidgoli.
2011c.
A syntactic valency lexicon forPersian verbs: The first steps towards Persian de-pendency treebank.
In 5th Language & TechnologyConference (LTC): Human Language Technologies asa Challenge for Computer Science and Linguistics,pages 227?231, Poznan?, Poland.Mojgan Seraji, Bea?ta Magyesi, and Joakim Nivre.
2012.Bootstrapping a Persian dependency treebank.
Lin-guistic Issues in Language Technology, 7(1).Mehrnoosh Shamsfard.
2011.
Challenges and openproblems in Persian text processing.
In 5th Language& Technology Conference (LTC): Human LanguageTechnologies as a Challenge for Computer Scienceand Linguistics, pages 65?69, Poznan?, Poland.Gernot Windfuhr.
2009.
The Iranian Languages.
Rout-ledge.Daniel Zeman, David Marec?ek, Martin Popel, Lo-ganathan Ramasamy, Jan S?te?pa?nek, Zedne?ckZ?abokrtsky`, and Jan Hajic?.
2012.
Hamledt: Toparse or not to parse.
In Proceedings of the EighthConference on International Language Resources andEvaluation (LREC?12), Istanbul, Turkey.314
