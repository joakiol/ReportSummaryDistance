OPTIMIZATION ALGORITHMS OF DECIPHERING AS THE ELEMENTS OF A LINGUISTIC ~HEORYB.V.SUKHOTINInstitute of the Russian Language%2~ 0~9, Volkhonka ~8/2, Moscow, USSRAbstractThis paper presents an outline of thelinguistic theory which may be identifiedwith the partially ordered set of optimi-zation algorithms of deciphering.
Analgorith~L of deciphering is the operationaldefinition of a given linguistic phenomenonwhich ha~, the following three components:a set of admissible solutions, an objectivefunction and a proaodure which finds outthe mini,4~m or the maximum of the objectivefunction.The p~er  contains the description ofthe four algorithms of the proposed type:~.
The algorithm which classifies theletters into vowels and consonants.2.
The ~Lgorithm which identifies themorphemes in the text without the boundariesbetween words.3.
The algorithm which finds out thedependency tree of a sentence.4.
The algorithm which finds out the mappingof the letters of an unknown language intothe letters of a known one.The forties and the first half of thefifties were marked by the pronouncedinterest of the linguists to the so-called"discove~r procedures".
These investigationswere not very successful at that time.
TheChomskyan~'criticism also hindered theprogress in this direction.There is no reason to revive the olddiscussions.
We will try to show furtherthat the optimization algorithms we proposecombine the theoretical generality on theone hand with the practical usefulness onthe  o ther .
Moreover  i t  appears  that  themethods o f  the  generat ive  grammar theoryand those  o f  the  d i scovery  procedures  areeven not  at  a l l  cont rad ic tory .
For example,in  a recent  work o f  M.Remmel the set  o f  theadmiss ib le  so lu t ions  i s  determined  as a se to f  the  generat ive  grammars o f  N.Ohomsky.In  th i s  paper  we pre fer  to  use the  term"dec ipher ing  procedures  (a lgor i thms~"ins tead  o f  "d i scovery  procedures" ,  becausethe  la t te r  imp l ies  the  operat ions  which arenot  necessar i l y  fo rmal .An a lgor i thm of  l ingu is t i c  dec ipher ingi s  a fo rmal  p rocedure  aimed at  the recogn i -t~nn of linguistic objects in a text whoselanguage is not known to the investigator.Assuming that any deciphering proceduremay serve as a definition of the respectivelinguistic object we may vow the set ofsuch procedures as a certain linguistictheory which has the following properties:I) A greatdegree of generalization,because its definitions should be validboth for the known and unknown languages.2) Formality, because naturally enough,the deciphering procedures should bepresented in.the shape of algorithms.3) Constructivity, i.e.
the possibilityof identifying a certain linguistic objectwith the help of a deciphering procedurewithin a reasonable time interval.645To identify a linguistic object adeciphering algorithm makes use of a setof its features.
It seems obvious that alinguistic object cannot be defined bymeans of binary features alone.
Thefollowing scheme seems to be betterfounded:I. Binary features are used todetermine the general type of certainlinguistic objects.
The objects belongingto that type form the set of admissiblesolutions of a deciphering problem.2.
An objective function which estim-ates the quality of each solution isintroduced on the set of admissiblesolutions.
The values of the objectivefunction are calculated with the help ofthe investigated text.
They reflect theindividuality of the given language.
Amaximum or a minimum of the objectivefunction should correspond to the linguist-ic object which is to be defined.3.
It follows that a deciphering pro-cedure should be an optimization algorithmwhich finds "the best" admissible solution- from the point of vow of the objectivefunction.Thus, the set of admissible solutions,the objective function and the optimiza-tion algorithm constitute the definitionof a linguistic object which may be usedfor the purposes of deciphering; adefinition of this kind will be furtherreferred to as a deciphering algorithm,or simply, an algorithm.There is a natural hierarchy of de-ciphering algorithms.
An algorithm B issenior to an algorithm A if the formermakes use of the information provided bythe latter.
If A and B work alternativelyeach time improving the output, then theseniority is determined by the firstiteration.
Taking into account the factthat the set of essentially differentalgorithms should be finite, it appearsthat there must exist "zero" algorithmswhich use no information produced by anyother deciphering algorithms.Zero algorithmz should be differentdue to the fact that the physical sub-stances of different languages may bedifferent too.
Thus the zero algorithmfor the analysis of the written form oflanguages should be able to discriminatebetween a dark spot and a light one andto identify the place of each spot on thepage; it should discover the set of alpha-betic symbols of the language.
A similaralgorithm adjusted to the analysis ofaudible speech should produce the alpha-bet of phonemes, exploiting its capacityto discern certain minimal differences ofsonation.
The plurality of zero algorithmsmay be reduced by converting signals ofdifferent nature into a set of curves.
Asit is well known such algorithms are thegoal of pattern recognition theory.Senior algonithms should be used forthe analysis of grammar; the highest levelscorrespond to the problems of semanticsand translation.~any algorithms of different levelsdisplay great similarity and sometimeseven identity, their only difference con-sisting in the linguistic material whichserves as the input.
The following typesof the algorithms may be pointed out:I. Algorithms of classification, whichdivide the set of investigated objects646into sew~ral subsets.2.
Algorithms of aggregation whichform larger units from smaller ones?3.
Algorithms of connection whichfind out some relation of partialordering.4.
Algorithms of mapping the elementsof an unknown language into the elementsof a known one.The most simple classification algorithmis that which classifies the set of lettersA = ~ i~ into vowels and consonants.In this case an admissible solution isa division, vu  C=A,The objective function reflects the factthat letters of the same class co-occurrather rarely whereas letters of differentclasses co-occur relatively more often;it is formulated as follows:Here f(li,1 j) denotes the frequency ofletters I i and lj.
The maximum of Q(D)corresponds to the optimal classification.An appropriate optimization procedurereduces the amount of divisions that shouldbe evaluated to a reasonable number.
Thisalgoritl~ has been thoroughly tested inanumber of computer experiments and inevery case yielded almost entirely correctresults?The most important algorithm ofaggregation is the morpheme identificationalgorithm.
Apart from identifying morphemesthis algorithm discovers an IC graph whichshows the way in which morphemes arecombined into words?
An admissible solutionin this case is a sequence of divisionsD~,...,D n of the text, each class of D~E+~being included in a certain class of D i.A morpheme m is the string of letters atleast one occurrence of which should be anelement of a certain class of D i.The sequence DT,...,D n determines theset of morphemes in a unic way.
Theobjective function is set up by ascribingto each morpheme a certain number q(m)which is great when m consists of theletters which predict each other strongerthan they predict the letters of theneighbouring morphemes.
A number of sx--periments have been carried out; the bestresults have been obtained with the help ofthe following function:f2(aXb)q(m) = q(aXb) =max(f(ax), f(Xb))- max(f(slbx), f(yaXb))x,yHere f denotes the frequency of a string,a is the initial, b is the final letter ofm, y is a letter which precedes m, x is aletter which follows it, X is a string.The best solution should correspond tothe maximum of Q(M) = ~ q(mi) , whereM = ~mi~.
A Russian text of IOOOO letterswas chosen for the experiments.
Here isan extract of the analysed text:((~exoBe)z) c ( (a~mTZ)O~) (.Pop,K) OZ(yzop~s~)(eHHo) ycMex ((Hy~)c2)Representative of the algorithms of thethird type is the algorithm of finding thedependency graph of a sentence.
For thispurpose the words of the language shouldbe classified into syntactical classesso that we may consider a word v to beincluded in a class K v. The conditionalprobability P(Kv/Kw) of occurrence of K vnear K w is calculated with the help of thetext.647The set of admissible solutions is theset of all possible dependency trees whichmay be ascribed to a given sentence.
Theconditional probabilities provide theweights for the arcs of the tree.
Thequality of a tree is the sum (or the mean)of the weights of all arcs.
The optimaltree presumably has the maximum quality.A great number of the algorithms of thistype have been tested in computer experi-ments; the best ones correctly identifiedmore than 80% of connections.
Here is atypical example taken from an experimentwhich was carried out for a Russian textof ~0000 words:O~Ha~u zrpa~B ~ap~ yA~v.
Verb Prep.
Acc.Sub.
Prep.Algorithms of this type may be used forthe purposes of machine translation, inwhich case a greater amount of the inputinformation is needed.A typical example of an algorithm whichobtains the mapping M = ~E i -+ E~ ~(E ibeing some elements of the unknown language,E~ - the respective elements of the knownone) is furnished by the algorithm whichdiscovers the pronunciation of letters.It is based on the ~ypothesis thatletters of two different languages whichhave similar pronunciation possess similarcombinatory power as well.The oombinatory power of the letter i imay be described by the vector ofconditional probabilities G i = P(li/ix)which characterizes the occurrences of I iin the neighbourhood of Ix.I~ the sameway, the vector C i = P(li/Ix) characterizesthe combinatory power of i~.64BThe quality of a mapping may beestimated by the formula:Q?~) = ~ d(ci,c~) = ~ ?
l i , l i )Here d denotes the distance (e.g.Euclidean) between the vectors C i and C~.All pairs li-~l~, lx-->l ~ belong to themapping M, so that d may be calculatedby the formula:d(~i,1 ~) = V~x(P(l?/l x) - P(Z~/l~)) ~The minimum of Q(M) corresponds to theoptimal mapping.
Some algorithms of thistype have been tested with interestingresults.
It is obvious that a similarEoHHor~ap~e~a H pyMosaGen.
Sub.
Gen. Sub.algorithm will be able to compile abilingual dictionary with the entries inthe unknown language, although the latterproblem is, naturally, far more difficult.ReferencesCyXOT~H B.B.
(1962).
"3I{cr~ep~MeHT~HOe B~-~e~e.He ~accoB dyF~ c nOMO~L~ 3BM".
IIpo-6~e~ cTpy~TypHo~ ~HrB~CT~KH, M.CyxoTaH B.B.
(I975) "0nT~Hsan~oH.~ea~ropMT~u ~HrS~oT~ecsoI ~e~po~-~".
HT~, cep.2, ~5.CyxoT~H B.B.
(1976) "0nTa~sai~oHH~eMeTo~H ~OoJIe~oBaHMH H3NKa".
M.CyXOTaH B.B.
(1984) "B~e~eH~e ~op~eMB TeKCTSX 6e3 npo6e~oB Me~y c~oBa~m"M.FM~c ~.M., Kar~a~ C.A., Kap~ame~H.C., HaHoBzaH B.H., Cy~OT~H B.B.,XoBaHoB F.M.
(I969) "BHe3eMHueI~HB~38II~".
M.
