Generating 'Distributed' Referring Expressions:an Initial ReportBarbara Di Eugenio*Computat iona l  LinguisticsDepartment  of Phi losophyCarnegie Mellon UniversityPittsburgh, PA, 15213, USAd ieugen i0andrew,  cmu.
eduJohanna D. MooreDepartment of Computer  Science, andLearning Research and Development CenterUniversity of P i t tsburghPittsburgh, PA, 15260, USAjmooreOcs,  p i t t .
eduCarolyn Penstein Ros~Computat ional  LinguisticsDepartment of Phi losophyCarnegie Mellon UniversityPittsburgh, PA, 15213, USACarolyn_.Penstein_Rose0cs.
cmu.
edu1 In t roduct ionConsider some possible ways in which S (theSpeaker) may ask H (the Hearer) to bring her anironing board that is located in the basement:(la) Bring me the ironing board in the base-ment.
(1t)) Bring me the ironing board ffom the base-ment.
(lc) Co down to the basement and bring methe iwning board.Arguably, only in (la) is the location ?
of theironing board (the basement) included in theNP whose head is ironing board.
1 In (lb), ?is a modifier to the verb, from the basement.In (lc), ?
is just an expectation, derived fromknowledge about performing a bring action, andfrom the relation between the two actions - -  go?
Di Eugenio and Penstein Ros6 were partially sup-ported by Carnegie Mellon Faculty Development Fund# 1-13709.LIn the appropriate context, (la) could also be inter-preted as asking H to bring the ironing board into thebasement, where S is (or will be, at the time H executesthe action).
We currently neglect this possibility.down to the basement is a substep in the planthat achieves bring S the ironing board.In these examples, the referring expression ithe NP is not sufficient o uniquely identify theintended referent, but it is its linguistic ontextthat adds other necessary constraints.
This isthe reason why we call these referring expres-sions distributed.
To our knowledge, while manyresearchers have worked on generating refer-ring expressions, e.g.
\[Appelt, 1985\], \[Kronfeld,1990\], \[Dale, 1992\], \[Pattabhiraman d Cer-cone, 1990\], 2 distributed referring expressionshave not been addressed yet.Note that the whole linguistic context mustbe taken into account while generating (lc):this is shown by the redundant and infelicitous(2) Go down to the basement and bring me theironing board in the basement.Besides planning knowledge about the actionthat a certain verb denotes; lexical knowledgeabout that verb also comes into play.
Consider2Space \[infitations don't allow us to discuss other re-searchers' approaches.33the contrast between (lc), (3a) aald (3b):(3a) Go down to the basement and take theironing board uJith you(3b) Go down to the basement and put the iron-ing board awayArguably the same abstract plan - -  that we'llrefer to as Fetch - -  may achieve bring x to y,take x to y and put x (away) into y: namely,go to where x is, get hold of it, and take it toy.
However, these verbs differ from a lexicalsemantics point of view, and different expecta-tions are generated in the three cases.
In (lc) Hexpects the ironing board to be in the basement:the expectation is strong enough that even if asecond ironing board is either in sight or salientill the discourse when S utters (lc), H won'tground a the referent of tile NP the ironing boardto the one in sight (although e may presumablyask "Isn't that tile one you need?").
In (3a), theNP the ironing board must refer in the currentcontext, by being either visible or salient in thediscourse.
(3b) is yet a different (:ase: H willeither ground the NP the ironing board to thesalient one, if there is one, otherwise he will de-lay such grounding until he is in tile basement.ill this paper, we describe our first steps to-ward generating such referring expressions.
Tileimplementation and experimentation are cur-rently underway.2 Towards  a so lu t ionOur solution is based on the integration ofa principled discourse planner, LONGBOW\[Young and Moore, 1994; Young et al, 1994\],with a formalism that represents both lexicalsemantic knowledge about verbs and planningknowledge about tim actions that the verbs de-note \[Di Eugenio, 1993: Di Eugenio and Web-ber, 1996\].LONGBOW is an extension to partial-ordercausal link (POCL) planners, in which a plan3Note the difference between referring and grounding:an NP refers in the discourse, but it is grounded to anentity in the world.is represented as a set of partially-ordered stepsconnected by caalsal inks.
LONGBOW extendsPOCL planners by introducing action decompo-sition.
The representation of a plan operator isdivided into an action operator, that capturespreconditions and effects, and a possibly emptyset of decomposition operators: each decompo-sition operator epresents a single layer expan-sion of a composite step, that provides a partialspecification for tile subplan that achieves theparent step's effects given its preconditions.Representation Formalism.
Di Eugenio'ssystem is able to interpret examples such as(lc): it infers the relation between the actions intile two conjuncts 4 and the expectations underwhich tile relation holds.
Di Eugenio's systemis crucially based on a formalism composed oftwo KBs.
Tile first, the action taxonomy, storeslexical semantic knowledge about verbs - -  thesemantic primitives are derived from Concep-tual Structures \[.lackendoff, 1990\]; the second,tim plan library, contains recipes \[Pollack, 1986\],i.e.
common sense planning knowledge aboutthe actions that tile verbs in the action taxon-omy refer to.
Both are implemented in CLAS-SiC \[Brachman et al, 1991\], a description logicbased system: the terms defined in the actiontaxonomy are used in tile recipes in the planlibrary.
Among the defined recipes is Fetch.Advantages of the two systems.First, LONGBOW keeps clear track of depen-dencies among steps by means of causal links.if stepl establishes an effect which is a precon-dition P2,i for step2, a causal link is createdbetween step1 and step2.
If a third step stepahas a precondition p.%j which is identical to P~,i,and if no intervening step has undone p2,i, 5 thenanother causal link will be established betweenstepl and stepa, thus keeping (:lear track of de-pendencies among steps.
This (:larity can be ex-ploited e.g., to awfid generating the redundant4Di Eugenio's algorithm actually works on purposeclauses, rather than on p~posive conjunctions.
'~LONGBOW, being based on UCPOP, is able to re-solve such threats when they arise.34(2), as discussed below.Second, LONGBOW allows to distinguish be-tween intended and.
side effects: an effect is in-tended if it plays a causal role in a plan \[Youngand Moore, 1994\].
This is very important froma discourse planning point of view: first, the in-tentions of the speaker have been widely recog-nized ms flmdaanental in both discourse interpre-tation and production \[Grosz and Sidner, 1986:Moore aald Pollack, 1993\].
Second, if H revealsthat an intended effect of previous discourse wasnot achieved, S should try to achieve that effectagain; this is not the case for side effects.Third, Di Eugenio's KR system allows ex-pressing subtle lexical distinctions ms the onesunderlying bring and take.
It also maintainsa well specified connection between lexical def-initions and the pertinent planning knowledge.Finally, there is a natural mapping of Di Eu-genio's recipe representation to LONGBOW's.which facilitates their integration.3 The  generat ion  processExamples such as (lc), (an) and (3b) can begenerated by assuming that the first conjunct isa step in a plan to achieve the second conjunct.
6Here, we focus on (lc) and on intensional de-scriptions of parameters: the expectation i (h:)arises because in the Fetch recipe, the initial lo-cation of the object to be moved, the basementin our examples, is defined only intensionally.The parameter depend in INFORM-REF inFig.
1 - -  one of the discourse operators weare experimenting with - -  is used when a pa-rameter is described intensionally.
If no suchdependency exists, a simpler INFORM-REFoperator is invoked.
In tile Action operatorof INFORaM-REF, the actual description forparam is computed by the flmction unique-desc.The description will be a conjunction of descrip-tors d/; if a di consists of a unary predicate ap-plied to param (SIMPLE(d/)), no recursive (:allto INFORM-REF is necessary; however, if di is6We haven't addressed yet wh~l the system decides toexpand the domain plan in this way.COMPLEX, i.e.
describes a relation REL be-tween param and other objects, INFORM-REFmust be recursively called to provide a descrip-tion for OTHER-PARAM (di).
7INFORaM-REF establishes two effects: thatthe agent is able to identify param, and alsoable to identify depend.
Thus, when the plan-ner generates the first conjunct ct = Go downto the basement, in the context of the planfor \[3 = bring S the ironing board.
INFORM-REFa, s is invoked to generate the descriptionthe basement: it establishes that the agent isable to identify tile basement, and also thatthe agent recognizes tile dependency betweenthe basement and the object to be moved.When planning to generate f3, INFORM-REF,&is called to generate the description the iron-ing board in the basement, and thus, INFOR_M-REFz2 is recursively called to establish the ef-fects that the agent identifies the basement, andthe locational dependency between basementand ironing board.
However, such effects havealready been established, so this step won't beexpanded; rather, the appropriate causal rinkwill be generated, 9 thus "explaining" why theexpectation that the ironing board is in thebasement comes about.
Thus, no redundant de-scription of tile kind illustrated in (2) will begenerated.
Note that out method doesn't reston 0/being generated before \[3: if the order werereversed, INFORM-REFo2 would be expanded,and INFORM-REFa wouldn't.
However, theappropriate causal links would still be estab-lished.4 Conc lus ionsWe see our work ms synthesizing several themes:tile generation of referring expressions; the spe-t in this case, we must avoid infinite regress, that mayarise when using relations in deriving referring expres-sions, as discussed by \[Dale and Haddock, 1991\].8The subscript is meant to distinguish different in-stantiations of INFORM-lZEF in the plan.
'aThe new causal ink will link INFORM-REF~ andwhatever other step would have been using INFORM-R.EFz~'s effects as preconditions.35ActionHeader: INFORM-REF(S, H, param, depend)Preconditions: ~ ABLE(H, idendfy(param))Effects: ABLE(H, identify(param)) A ABLE (H, identify (depend))DecompositionHeader:Constraints:Steps:INFORM-REF(S, H, param, depend)3 unique-desc(H, param, depend, dlA...Ad~)Start, '4 d,, SIMPLE(d~): INFORM(S, H, d,),'?
d~, COMPLEX(d~): INFORM(S, H, REL(d,)),INFORM-REF(S, H, OTHER-PARAM(d~), d~),Final,Figure 1: The INFORM-REF  operatorcific demands  of instructional text: and issuesof Knowledge Representat ion,  among which theneed to represent both  lexical and planningknowledge about  action verbs.We still have quite some work to do.
The inte-grat ion of the two systems is current ly raider-way, and so is the imp lementat ion  and refine-ment  of the discourse operators  (some of thedomain operators,  are those a lready defined inDi Eugenio's  KR  system).
We also have to ;~ddbring and take to the a~:tion taxonomy.References\[Appelt, 1985\] Douglas Appelt.
Planning English Sen-tences.
Studies in Natural Language Processing.
Cam-bridge University Press, 1985.\[Brachman etal., 1991\] Ronald Brachman, DeborahMcGuinness, Peter Patel-Schneider, Lori AlperinResnick, and Alexander Borgida.
Living with CLAS-SIC: When and How to Use a KL-ONE-like Language.In .John F. Sowa, editor, Principles of Semantic Net-works -- Explorations in the Representation f Knowl-edge, pages 401-456.
Morgan Kaufmann, 1991.\[Dale and Haddock, 1991\] Robert Dale and Nichol~LsHaddock.
Content determination i the generationof referring expressions.
Computational Intelligence,7(4):252--265, 1991.\[Dale, 1992\] Robert Dale.
Generating Referrin 9Expres-sions.
ACL-MIT Series in Natural Language Process-ing.
The MIT Press, 1992.\[Di Eugenio and Webber, 1996\] Barbara Di Eugenioand Bonnie Lynn Webber.
Pragmatic Overloading inNatural Language Instructions.
International Journalof Expert Systems, Special Issue on Knowledge Rep-resentation and Reasoning for Natural Language Pro-cessing, 9(2), March 1996.
To appear.\[Di Eugenio, 1993\] Barbara Di Eugenio.
UnderstandingNatural Language Instructions: a Computational Ap-proach to Purpose Clauses.
PhD thesis, University ofPennsylvania, December 1993.
Technical Report MS-CIS-93-91.\[Grosz and Sidner, 1986\] Barbara Grosz and CandaceSidner.
Attention, Intentions, and the Structure ofDiscourse.
Computational Linguistics, 12:175-204,1986.\[Jackendoff, 1990\] Ray Jackendoff.
Semantic Structures.Current Studies in Linguistics Series.
The MIT Press,1990.\[Kronfeld, 1990\] Amichai Kronfeld.
Reference and Com-putation.
Studies in Natural Language Processing.Cambridge University Press, 1990.\[Moore and Pollack, 1993\] Johanna Moore and MarthaPollack.
A Problem \['or RST: the Need tbr Multi-Level Discourse Analysis.
Computational Linguistics,18(4):537-544, 1993.\[Pattabhiraman and Cercone, 1990\] T. Pattabhiramanand Nick Cercone.
Selection: Salience, relevanceand the coupling between domain-level tasks and textplanning.
In Proceedings of the Fifth InternationalWorkshop on Natural Language Generation, Pitts-burgh, Pennsylvania, pages 79-86, 1990.\[Pollack, 1986\] Martha Pollack.
Inferring Domain Plansin Question-Answering.
PhD thesis, University ofPennsylvania, 1986.\[Young and Moore, 1994\] R. Michael Young and Jo-hanna D. Moore.
DPOCL: A Principled Approach toDiscourse Planning.
In Seventh International Work-shop on Natural Language Generation, pages 13-20,Kennebuakport, Maine, 1994.\[Young et al, 1994\] R. Michael Young, Martha E. Pol-lack, and Johanna D. Moore.
Decomposition andcausality in partial order planning.
In Second Interna-tional Conference on Artificial Intelligence and Plan-ning Systems, 1994.36
