Inher i t ing  Verb A l te rnat ionsAdam KilgarriffLongman DictionariesBurnt MillHarlow, Essex CM20 2JEEnglandAbstractThe paper shows how the verbal exicon canbe formalised in a way that captures andexploits generalisations about the alterna-tion behaviour of verb classes.
An alter-nation is a pattern in which a number ofwords share the same relationship between?
a pair of senses.
The alternations capturedare ones where the different senses spec-ify different relationships between syntacticcomplements and semantic arguments, asbetween bake in "John is baking the cake"and "The cake is baking".
The formal lan-guage used is DATR.
The lexical entries itbuilds are as specified in HPSG.
The com-plex alternation behaviour shared betweenfamilies of verbs is elegantly represented ina way that makes generalisations explicit,avoids redundancy, and offers practical ben-efits to computational lexicographers.1 In t roduct ionThe paper shows how the verbal lexicon can be for-malised in a way that captures and exploits gener-alisations about the alternation behaviour of verbclasses.
An alternation is a pattern in which a num-ber of words share the same relationship between apair of senses.
The kinds of alternations to be cap-tured are ones where the different senses pecify dif-ferent relationships between syntactic omplementsand semantic arguments, as in the relation betweenbake in "John is baking the cake" and "John is bak-ing", or between melt in "the chocolate melted" and*I would like to thank Gerald Gazdar and Roger Evansfor their many valuable comments, and SERC for thegrant under which the work wasundertaken.
"Mary melted the chocolate" .1 Given that compact-ness and non-redundancy are a desideratum of theo-retical descriptions, the different usage-types for bakeand wipe should not require us to introduce differentprimitives into the lexicon.
Moreover, as the alter-nations are shared with other verbs, they should bedescribed at some general node in a hierarchicallyorganised lexicon, and inherited.DATR is a formal anguage in which the such rela-tionships and generalisations can be simply stated.Much has been written about verb alternationsand their syntactic corollaries.
Here we do notadd to the evidence or construct new theory, butsimply formalise other people's accounts: those of\[Atkins et al, 1986\] and \[Levin and Rappoport Ho-vav, 1991\].
The first investigates the range of al-ternations between transitive and intransitive formsof verbs.
The second, titled Wiping the Slate Clean,explores the relations between meaning and subcate-gorisation possibilities for 'wipe' verbs, 'clean' verbs,and related groupings.
The language used is DATR,.a default inheritance formalism designed for lexicalrepresentation.
We follow Levin and Rappoport Ho-vav in taking a distinct subcategorisation frame asdefining a distinct word sense, and also in work-ing with commonsense v rb classes uch as 'cookingverbs', since classes uch as this serve to predict thealternations a verb participates in with some accu-racy.An important constraint is that the lexical entriesare of a kind specified by a grammar formalism, socan be used for parsing and semantic interpretation.The formalism chosen in this paper is HPSG \[Pollard~The morphosyntactic d stinctions between, for exam-ple, bake and is baking are not addressed here.
ExtensiveDATR treatments of morphology are provided in variouspapers in \[Evans and Gazdar, 1990\].213and Sag, 1987\].Below we present detailed formal accounts foralternations involving cooking verbs and physicabprocess verbs.
After motivating the DATR treatmentand considering related work, we describe how verbentries appear in HPSG, then represent alternationsas mappings between HPSG lexical entries, then in-troduce the main constructs of DATR and define atranslation from HPSG notation to DATR.
Finallywe build a DATR inheritance network which repre-sents the alternate verb forms by inference, withoutthe lexicographer having to explicitly say anythingabout them.The analysis presented in this paper is a part 'ofa larger lexicon fragment which describes a furtherfive alternations relating seven verb classes and for-malises much of the structure described in both ar-ticles.
The complete fragment, illustrated in Fig.
1.is presented in full in \[Kilgarriff, 1992\].WORD-CLASSV\]~BUNS?
Xo ??
PH'Y~PR(JC "IRANSrrlVR, / /  , / I  \ ~ 'X \ I ~ u ~  ~ ~.C-OF-S DITRANSrrlvB SURP-Cq~NTCOOK.INO-VB i OIVI~ \[ ~ WH~'B/ &..." I \ ,-..!
"w,.Cook " ' ' -  ~ RHMO~ ~...a PluckBakB I ..r ~ Prunel l~n  Ih~: defer  ~ .Broken Ibis: ~ label an l~lic~f rows  po\[mt from ,.,b!na, e~a to panm~.Figure 1: Verb taxonomy1.1 Why DATR?As 'lexicalism' - -  the doctrine that the bulk of theinformation about the behaviour of words should belocated in the lexicon - -  has become popular in com-putational and theoretical linguistics, so formalismsfor expressing lexicM information have been devel-oped.
The syntax, semantics and morphology ofmost words is shared with that of many others, sothe first desideratum for any such formalism is toprovide a mechanism for stating information justonce, in such a way that it is defined for large num-bers of words.
Inheritance networks erve this pur-pose.
If words are arranged into a taxonomy or someother form of network, then a fact which appliesto a class of words can be stated at a nonterminalnode in the network and inherited by the words towhich it applies.
Work in knowledge representationhas addressed questions of different kinds of network,and the kinds of machinery needed to retrieve inher-ited information, in detail (see, e.g., \[Brachman dLevesque, 1985\]).The next requirement is that exceptions and sub-regularities can be expressed.
It must be possible todescribe concisely the situation where a word or classof words are members of some superclass, and sharethe regular characteristics of the superclass in mostrespects, but have different values for some feature orcluster of features.
SeverM lexical representation for-malisms addressing these desiderata have been pro-posed, e.g.
DATR \[Evans and Gazdar 1989a, 1989b,1990\]; LRL \[Copestake, 1992\]; \[Russell et al 1991\].The work described here uses DATR.DATR has certain desirable formM and computa-tional properties.
It is a formal language with adeclarative semantics.
Retrieving values for queriesinvolves no search.
Multiple inheritance specifica-tions are always orthogonal, so a word may inheritfrom more than one place, but any fact about thatword has the place it is to be inherited from uniquelyspecified.
The problem of different ancestors provid-ing contradictory values, often associated with mul-tiple default inheritance, is thereby avoided, yet thekinds of generalisation most often associated withthe lexicon can still be simply stated.
To dateit has been used to express yntactic, morphologi-cal, phonological and a limited amount of seman-tic lexical information \[Evans and Gazdar, 1990;Cahill and Evans, 1990; Gibbon, 1990; Cahill, 1993\].Verb alternations have not previously received aDATR treatment.1.2 Related workThe work described here is at the meeting-point oflexical representation la guages (as discussed above),lexical semantics (as in Atkins et al and Levin andRappoport Hovav; see also \[Levin, 1991\]) and for-mal accounts of alternations ( ee particularly \[Dowty,1979\]).Recent work which aims to bring these threethreads together in relation to the lexical repre-sentation of nouns includes \[Briscoe et ai., 1990;Pustejovsky, 1991; Copestake and Briscoe, 1991;Kilgarriff, 1993 forthcoming; Kilgarriff and Gazdar,1993 forthcoming\].
(The latter two are companionpapers to this, also using DATR in similar ways.)
Apaper addressing verbs is \[Sanfilippo and Poznanski,1992\].This covers some of the same alternations as this214paper, and has similar goals.
The formalism it usesis LRL, the typed default unification formalism of\[Copestake, 1992\].
Unlike DATR, this is both a lex-ical representation language and a grammar formal-ism.
Whereas, in this paper, we represent the lexiconin DATR and then construct HPSG lexical entries,Sanfilippo and Poznanski need deal with only oneformalism.
This has a prima facie advantage butalso a cost: the formalism must do two jobs.
DATRis designed specifically for one, and offers more flexi-bility in the representation f exceptions and subreg-ularities.
In LRL, multiple default inheritance is re-stricted to the cases where there is no clash, with thecondition enforced by a checking procedure, in con-trast to DATR where the orthogonal nature of inheri-tance required by the syntax means that the problemdoes not arise.
Also, LRL default inheritance mustoperate within the constraints of a type hierarchy,and the formalism requires two kinds of inheritance,default and non-default.
In DATR, inheritance is notconstrained by a type hierarchy, and inheritance, de-fault or otherwise, invokes a single mechanism.2 An  HPSG-s ty le  lex iconThe alternations to be addressed in detail here arethe ones relating the transitive, which we treat as thebase form, to the ergative ("The cake baked") and tothe unspecified object ("John baked").WORD bakeMAJSYN SUBCATSEMRELNBAKERBAKEDV(NP\[NOM\]NP\[ACC\] SEM )Figure 2: AVM for transitive bake.Fig.
2 shows a simplified version of the HPSG lex-ical entry for transitive bake, in attribute-value ma-trix (AVM) notation.
NP abbreviations and angle-bracket list notation, where a comma separates listelements and there is no separator between the con-i uncts of a feature-structure within a list, is as in Pollard and Sag, 1987\].
The boxed variables indi-cate the roles the semantic arguments play in thesyntactic structure.For ergative bake, the same BAKE relation holdsas in the base form, but now between an unspecifiedBAKER and a BAKED which is the subject of thesentence.
The unspecified role filler is not 'bound'to a complement (i.e.
any item on the SUBCAT list)but is existentially quantified (EX-Q).
The ergativeform is intransitive so has only one item on its SUB-CAT list and the SEM of that item unifies with theBAKED, so the AVM for ergative bake will be as inFig.
3.
For unspecified-object bake in "John wasWORD bake\[MAJ V \] SYN SUBCAT (NP\[NOM\] SEMIS\]) \[RELN BAKE\]SEM BAKER EX-QBAKED \['i-\]Figure 3: AVM for ergative bake.baking", the subject is matched to the BAKER andit is the BAKED which is unspecified, so existentiallyquantified, as in Fig.
4.WORD bake\[MAJ V \] SYN SUBCAT (NP\[NOM\] SEM \ [~ )SEM BAKERBAKED -QFigure 4: AVM for unspecified-object bake.For bake and other cooking verbs, we are able torepresent the extended senses directly in terms of thesame predicate that applied in the base sense.
Wenow move on to a case where this does not hold.For melt, the intransitive ("The ice melted") is ba-sic and the transitive ("Maria melted the ice") is ex-tended, and it is not possible to define the extendedsense directly in terms of the base.
The transitivecan be paraphrased using cause, "Maria caused theice to melt" and we call the alternation 'causative'.
Itis clearly closely related to the ergative, and it wouldbe possible to treat the transitive form as basic, withthe ergative alternation applying.
That route hasnot been followed for two reasons.
Firstly, melt is amember of a class of physical-process verbs, also in-cluding evaporate, freeze, dissolve, sublime and coa-lesce.
They all clearly have intransitive senses.
Theyall might, in the right setting, be used transitively,but in cases such as coalesce the transitive is not astandard use and it would patently be inappropriatefor it to be treated as a base form.
If we are to standby the intuition that these verbs form a class, andall participate in the same alternation, then all musthave an intransitive base form.Secondly, transitive melt introduces an aspect ofmeaning, call it CAUSE, which is not in any sensepresent in the intransitive.
For bake, CAUSE is al-ready a component of the meaning, whether or notthe verb is being used ergatively.
A default en-tailment of CAUSE is that its first argument, heCAUSER, has proto-agent properties \[Dowty, 1991\].If intransitive melt were treated like ergative bake,215CAUSE would be a component ofthe meaning of in-transitive melt.
Its semantics would have an existen-tially quantified MELTER argument, which wouldhe a CAUSER and which we would expect o haveagent-like properties.
Ifi ergative uses of bake, thebaking scenario still includes an agent who is doingthe baking and fills the BAKER role, even thoughthey are not mentioned.
(We concern ourselves hereonly with cooking bake, not '~rhe stones baked in thesun" and other usage-types where bake is behaving asa physical process verb.)
In '?the ice melted" there isusually no agent involved.
While it might always bepossible to assign a filler to the MELTER slot, per-haps "the hot temperature" or "the warm climate",they do not fit readily into the agent, CAUSER role.So we do not treat causatives as ergatives.A standard analysis of causatives after \[Dowty,1979\] as presented by \[Chierchia nd McConnell-Ginet, 1990, chapter 8\], isAyAzM ELT/2(z, y) = Ay)~zCAU SE(z, M ELT/I(y) ).The semantics of the causative has the predi-cate CAUSE, with MELT/1 re-appearing as its sec-ond argument.
In addition to intransitive melt asshown in Fig.
5 we have causative melt as shown inFig.
6.
(The relation between lambda expressionsand feature structures i discussed in \[Moore, 1989;Kilgarriff, 1992\].
)WORDSYNSEMmeltMAJ V \]SUBCAT (NP\[NOM\] SEM ~\] )RELN MELT/I \]MELTED E\]Figure 5: AVM for intransitive melt.WORDSYNSEMmeltSUBCAT (NP\[NOM\] SEM ,NP\[ACC\] SEM )OA SER  \]REL  MELT/,O USED L MEL EDF1Figure 6: AVM for causative melt.3 DATR: a gent le  in t roduct ionA simple DATR equation has, on its lhs, a node anda path, and, on its rhs, either a value:Node l :<a b c> Iffi va lue .or an inheritance specification.
Nodes start with cap-ital letters, paths are sequences enclosed in angle-brackets, anything on the rhs that is not a node or apath is a value.
The primary operation on a DATRdescription is the evaluation of a query, that is, thedetermination f a value associated with a given pathat a given node.
Where a value is not given directly,it may be inherited by following a trail: the inheri-tance specification on the dis at step n becomes thelhs for step a-/-l.
The specifications may state bothnode and path, node only or path only.
They mayalso be local or global.
Where they are local, theunstated node or path is as it was on the lhs, so ifwe have the node:Node1: <a> - -  Node2: <x><b> ~,  Node3<c> B <y>.thenNode1: <a> inherits from Node2: <x>Node1: <b> inherits from Mode3: <b>Node1: <c> inherits from Node1: <y>.
(Where a number of node-path specifications for agiven node are stated together, the node need notbe re-iterated.
The full stop is delimiter for either asingle equation or such a cluster of equations.
)Where inheritance specifications are global, withthe node or path on the rhs in double quotes:Node4: <a> - -  "NodeS"<b)  Im "<Z>".then the 'global context' node or path is picked upto complete the specification.
For the purposes ofthis paper, the global context node and path are theinitial query node and path.When there is no lhs to exactly match a node-pathpair to be evaluated, the mechanism which gives riseto DATR's nonmonotonicity comes into play.
This isthe 'longest leading subpath' principle.
The node-path pair inherits according to the equation at thenode which matches the longest leading subpath.Thus, with Node1 as defined above,Node l :<a ax ay> inher i ts  f rom Node2:<x ax ay>Node1 : <b bx by> inher i ts  f rom Node3 : <b bx by>Node1: <c  cx cy> inher i ts  f rom Node1: <y  cx cy>If there were any more specific paths defined atNode 1, for<a ax>,<a ax ay>,<b bx>, etc.,then these inheritances would be overridden.
Notethat the match must be with the longest leading sub-path.
In this fragment, he queriesNode 1 : <d>,Node1 : <ax  a>, andNode1 : <>216all fail to match and are undefined.
(The otherqueries may also be undefined, if the trail of inher-itance specifications terminates without reaching avalue at some later stage, but they are not found tobe undefined at this stage.
)Two particular cases of inheritance used in the pa-per are:NodeS: <> == Node6<e> == Node7:<>.In the first, the leading subpath to be matched isnull, so this is a default of defaults: no queries willterminate at this point, since any query which doesnot make a more specific match will match this lineand get passed on from Node5 to }lode6, path un-changed.
This is the simplest form of inheritance,usually used to specify the basic taxonomy in a DATRtheory.
In the second, path element e is 'chopped'from the beginning of the path, so:Node5 :<e ex  ey> inherits f rom Node7:  <ex ey>.4 Translations into DATRNow we move on from describing the alternations,and describing the inheritance formalism, to repre-senting the alternations within the formalism.
TheDATR translation is straightforward: AVMs can berewritten as sets of equations which then become setsof DATR equations.
DATR paths must be associatedwith nodes, so a node for the paths to be located at isintroduced.
F IRST  and REST have been shortenedto fi and re.
DATR is not a unification formalism,and all the theory will do in relation to re-entrancieswill be to mark them with matched pairs of variables,here vl, v2 etc., to be interpreted as re-entrant pairsoutside DATR.
We introduce the feature binding forthe variables to be the value of.
2 In order that gener-alisations covering BAKERs ,  COOKERs  and FRY-ERs  can be stated, we replace verb-specific namessuch as BAKER for slots on a semantic args list.
(This does not represent a change in the semantics:the first member  of the argument list of the bakepredicate will continue to be the BAKER whateverlexical entry it occurs in.
It simply allows us to ex-press generalisations.)
We use pred for the predi-cate rather than RELN.
Following these changes, the(simplified) DATR lexical entry for transitive bake is:Bake : <word> = bake<syn maj> = v<syn subcat fi sem binding> = v l<syn subcat re fi sem binding> = v2<syn subcat re re> = nil<sem pred> = bake<sere args fi b inding> = v l2The feature also makes it possible to use the fact thata semantic argument has an existential-quantification(ex-q) binding to override the default that it is boundto a complement.<sere args re fi b inding> = v2<sem args fi b inding> ffi nil.5 An inheritance hierarchyThe next task is to place the verbs in a hierarchy sogeneralisations eed stating only once.
DATR allowsdifferent kinds of information to be inherited fromdifferent places, and also allows generalisations to beoverridden by either idiosyncratic facts or subregu-larities.
The hierarchy is illustrated in Fig.
1.
Atthe top of the tree is WORD-CLASS, then VERB, fromwhere all verbs inherit.
They all have a subject, andby default his unifies with the first item on the axgslist.
There will be no call for an INTRANSITIVE nodebecause all the positive information that might bestated there is true of all verbs so can be stated atthe VERB node, and the negative information thatintransitive verbs do not have direct objects is ex-pressed by the termination of the subcat list afterits first item at VERB (via ARG and NIL; see below).TRANSITIVE inherits from VERB, adding the defaultbinding between second complement and second ar-gument.VERB: <>  f f i  WORD-CLASS<syn maj> == verb<syn subcat f i  sere binding> == vl<sere args fi b inding> == vl.TRANSITIVE: <> == VERB<eyn subcat re f i  sere binding> - v2<sere args re f i  b inding> == v2.List termination involves a measure of ingenuity, inorder that n i l  is the value of <syn subzat  re> and<sem args re> at VERB and <syn subcat  re re>and <sere args re re> at TRANSITIVE,  but nowhereelse: 3VERB: <sere args> == ARG: <><syn subcat> ffi= COMP:<>.<syn subcat fi syn case> ffi= nom<sem args fi semfeats> = AGENT:<>.TRANSITIVE: <syn subcat re> =ffi COMP:<><sem args re> ffi= ARG:<>.ARG: <f i semf eats> == PATIENT: <><re> ffi= NIL:<>.COMP:<fi syn> == NP:<><re> == NIL:<>.NIL:<> == nil<fi> == UNDEF<re> ffi= UNDEF.The COMP and ARG nodes provide a location for de-fault information about syntactic omplements andsemantic arguments.
Complements are, by default,accusative noun phrases.
Following \[Dowry, 1991\],we have a default expectation that subjects will have'proto-agent' semantic features and objects, 'proto-patient' ones.
The role of Dowty's approach in thisanalysis is that it gives us a way of marking the dif-ference between agents and patients which says more3This treatment is due to Roger Evans.217than simply using the labels 'agent' and 'patient',and has the potential for subtler distinctions, withdifferent subsets of proto-agent and proto-patientfeatures applying to subjects and objects of differentverb classes.
AGENT and PATIENT set up the expectedvalues for four of the characteristics Dowty discusses.NP:<maj> == n<case> == ace.AGENT:<vo l i t ion> == yes<sent ient> == yes.PAT IENT:  <changes-s ta te> == yes<causa l ly -a f fec ted> == yes.The default accusative case and proto-patient seman-tic features must be overridden in the case of thesubject:VERB:<syn subcat  f i  syn case> == nom<sam args  f i  semfeats> == AGENT:<>.To this skeleton, we add some smaller classesbased on meanings.
Once we introduce them wecan start expressing generalisations about alterna-tion behaviour.
To distinguish alternate forms frombase forms, we introduce the alt prefix.
To re-quest information about a non-base form, we startthe query path with alt x, where x is a label identi-fying the alternation under consideration.
We adopta convention whereby all-upper-case nodenames areused for nodes for classes of words, such as cook-ing verbs, while lexical nodes have only initial letterscapitalised.Bake:<> == C00KING-VB<word> ffi bake<sam pred> ffi bake .C00KING-VB:<> ffi C -OF-S<sam arSS  re  f i  semfeats  ed ib le> = yes .C-0F-S:  <> == TRANSIT IVE<alt  erg> = PHYS-PROC:<><al t  erg sam> =ffi "<sere>"<al t  erg  sam args  f i  b ind ing> == ex-q<al t  e rg  sam args  re  f i  binding> ffi v l .Bake is a cooking verb, and cooking verbs are, inthe base case, transitive change-of-state v rbs.
ThusBake inherits, by default, from C00KING-VB whichinherits from C-0F-S (for 'change of state') and thenfrom TRANSITIVE, so acquiring the default specifica-tions for semantic features for its subject and object,and the re-entrancies between subject and first argu-ment, and object and second argument.
The DATRfragment now represents all the information in theDATR lexical entry for bake presented above, andcase and proto-agent and proto-patient specificationsin addition.The first generalisation about alternations thatwe wish to capture is that change-of-state ransi-tives such as bake undergo the ergative alternationto become change-of-state intransitives, or 'physicalprocess' verbs.
We access the lexical entries for theergative forms of verbs with DATR queries with thepath prefix a l t  erg, which work as follows.
Thesemantics of the ergative will be the same predicate-argument structure as the base form, and this is im-plemented in the third line of the ?-0F-S node whichtells us, with the double-quotes, to inherit the erga-tive's semantics from the semantics of the node forthe base form of the verb.
The two further speci-fications for ergatives are that the first argument isexistentially quantified, and the second unifies withthe first complement via vl .In all other matters, as the second line of theC-0F-S node tells us, the ergative form is divertedto inherit from a node for physical-process intransi-tives:PHYS-PR0C:<> == VERB<sam args  f i  semfeats> = PAT IENT:<>.The first semantic argument of a physical-process in-transitive has proto-patient semantic features andotherwise inherits from VERB.
This is a case wherethe default - that first semantic arguments (realisedas subjects in the base case) have proto-agent fea-tures - has been overridden, but the reader will notethat this has been entirely straightforward toexpressin DATR.We now have almost all the information eeded tobuild the lexical entry for ergative bake.
One item wedo not yet have is the intuitively obvious fact thatthe word for the alternate form is the word for theoriginal.
This is true by definition for all alternateforms.
All alternate forms will eventually have theira l t  x prefix (or prefixes) stripped and inherit fromWORD-CLASS at the top of the tree.
So we add thefollowing line:NORD-CLASS:<word> == "<word>" .Now all alternate forms will inherit their .o rd  fromthe word at the global context node, which will al-ways be the node for the base form.Many cooking verbs undergo the 'unspecified ob-ject' alternation, for which we shall use the labelunspe?.
All information relating to this form is gath-ered at an UNSPEC node:UNSPEC: <> == VERB<sam> == "<sam>"<sam args  re  f i  b ind ing> :ffi ex-q.This simply states that the form is a standard intran-sitive, with the semantics of the base form exceptthat the second argument is existentially quantified.Cooking verbs with a l t  unspec prefixes are divertedhere by the addition of:C00KING-VB:<a l t  unspec> ffi UNSPEC:<>.Now we move on to melt, a physical-process verbwith a causative form.
The ergative alternation ledfrom C-0F-S to PIIYS-PROC.
This makes a similarjourney in the opposite direction, from PIIYS-PROCto CAUSE and then TRANSITIVE.
The alternation la-bel is cause .218Mel t :<> == PHYS-PROC<sem pred> == melt<cord> == melt .PHYS-PROC:<> == VERB<al t  cause> -= CAUSE:<><alt  cause  sem args  re  f i> == "<sem>"<alt  cause sen ares  re  f iares  f i  b ind ing> == v2.CAUSE:<> == TRANSIT IVE<sem pred> == cause.Causative melt, with the a l t  cause prefix, isa regular verb of causing, and inherits its syntaxand most of its semantics including the predicatecause/2 from CAUSE.
Its first argument will have theusual characteristics of a CAUSER, and its second,the predicate-argument structure of the base form ofthe verb.
As the predicate melt is now identified asthe second argument of cause, the item that meltsis identified as the first argument of the second ar-gument of the causative form of the verb, and it isthis which is re-entrant with the second item on thesubcat list, as specified in the final line of PHYS-PR0C.The reward for this superstructure is that lexicalentries can now be very concise.
By adding a three-line entry, e.g.,Bake:  <> == COOKING-VB<gord> == bake<sem pred> == bake.to the lexicon, we make available, for cooking verbssuch as bake, a set of eighteen specifications for thebase form, and fifteen each for the ergative andunspecified-object, and for physical process verbs, fif-teen for the base and eighteen for the causative, allcomplete with case, subcategorisation, proto-agent,proto-patient and re-entrancy specifications, as be-low:Bake:Bake:Bake :Bake: <synBake: <synBake: <synBake: <synBake : <synBake : <synBake: <synBake : <semBake: <semBake: <semBake : <semBake: <senBake : <se lBake:Bake:<lex ica l> = true.<eord> ffi bake.<synmaj> = verb.<sem<semsubcatsubcatsubcatsubcatsubcatsubcatf i  syn  maj> = n.fi syn case> = nom.fi sen  b ind ing> = vl .re  f i  syn  ~a j> = n.re  f i  syn  case> =acc .re  f i  sem b ind ing> - v2.subcat  re  re> = ni l .pred> = bake  /2 .a rgs  f i  b ind ing> = v l .a res  f ia res  f ia res  rea res  rea res  rea res  resemfeats  vo l i t ion> = yes .semfeats  sent ient> = yes .fi binding> = v2.f i  semfeatschanges -s ta te> = yes .f i  semfeatscausa l ly -a f fec ted> - yes.re> = ni l .6 Summary  and  d i scuss ionFirst, HPSG-style verbal lexical entries, and themappings between them corresponding to alterna-tions, were described.
But at this stage, the gener-alisations were not captured.
So then these entrieswere translated into DATR, and arranged into a tax-onomy so an alternation only needed expressing once,at a non-terminal node from which the verbs to whichit applied would inherit.
Information about syntax,semantics, and patterns of polysemy was conciselyexpressed in a manner both theoretically and com-putationally appealing.The lexicon fragment described in detail is partof a larger fragment which also formalises the rela-tions holding between transitives and intransitivesof 'care' verbs such as wash, where the intransitivemeans the same as the reflexive; between transi-tive, intransitive, and two ditransitive forms of the'clear' verbs ("clear the desk"; "the skies cleared";"clear the desk of papers"; "clear the papers off thedesk"); and between transitive and ditransitive formsof 'wipe' verbs ("wipe the shelf"; "wipe the dust offthe shelf").
The complete fragment thus covers anumber of the common transitivity alternations ofEnglish.The paper aims to present both a study of lexicalstructure and an approach to practical lexicography.On the latter score, the ideal to which the paper con-tributes ees the lexicographer only ever needing toexplicitly enter information that is idiosyncratic toa word and inheritance specifications, as everythingthat is predictable about a word's behaviour will beinferred.
Maintaining consistency in the lexical rep-resentation, and updating and revising it, will also bequicker if a generalisation is located just at one placein the lexicon rather than at every word to which itapplies.Transitivity alternations defy classification as ei-ther syntactic or semantic phenomena.
They areclearly both.
The generalisations are associated withsemantic lasses of verbs, and have both syntacticand semantic onsequences.
The verb taxonomy ofFig.
1 may be used for conveying specifically linguis-tic information, as explored in this paper, but alsopotentially forms part of an encyclopedic knowledgebase, with knowledge about any type of cooking heldat the COOKI~G-VB node and knowledge specificallyabout frying and baking at the Fry and Bake nodes.It might be argued that this is to confuse two differ-ent kinds of information, but, as illustrated in thispaper and argued in \[Kilgarriff, 1992\], the lexiconof English holds both the syntax and semantics oflexical items.
The approach offered here indicateshow linguistic and encyclopedic generalisations maybe attached to the same taxonomic structure.\[Boguraev and Levin, 1990\] show that an expres-sively adequate model for the lexicon must incorpo-rate productive rules so that novel but rulebounduses of words can be captured.
Thus "the her-219ring soused" is interpretable by any English speakerwho has come across soused herring, but intransitivesouse will not be added by any lexicographer to anydictionary: it is most unlikely that any corpus willprovide any evidence for the form, and if it did, itwould be of insufficient frequency to justify explicittreatment.
The ergative form of souse must there-fore be in the lexicon implicitly.
Its availability tospeakers and hearers of English can be inferred fromknowledge of the kind of verb which souse is and thekinds of processes, or alternations, that verbs of thatclass can undergo.
The DATR analysis demonstrateshow such implicit availability of verb forms can beformalised.6.1 Further  workA further question that the question of productivityinvites is this: how are we to represent which verbsundergo which alternations?
First, we might wishto develop devices within DATR or a related formal-ism for identifying which alternations apply where,and two such mechanisms are presented in \[Kilgar-rift, 1992\].
But as we look closer, and consider thedifficulty of placing many verbs in a semantic lass,or the role of metaphor, analogy, and simple familiar-ity in determining which alternations are applicablein a given context of language-use, so the idea of ayes/no answer to questions of the form, "does thisverb undergo this alternation?"
loses plausibility.This reasoning applies also to verb classes.
Theanalysis offers an account of verb behaviour whichis premised on verb classes, but their only justifica-tion has been by appeal to commonsense and an ill-defined notion of their ability to predict which alter-nations averb participates in.
Nothing has been saidabout how the classes might be identified, or howdecisions regarding where a verb should be placedmight be made.The questions, "what class does a verb belongto?
", "what are the relative frequencies of the dif-ferent patterns it occurs in?
", and "is this patterngrammaticalT' are intimately connected.
Alterna-tion behaviour is a major source of evidence as tohow a verb should be classified, and grammaticalityjudgements are premised upon the patterns a com-petent speaker has frequently encountered in theirexperience of the language.
The further develop-ment of computational lexical semantics of the kinddescribed in this paper requires foundational workon the relation of corpus-based statistical findings toformal knowledge representation.References\[Atkins et al, 1986\] B. T. S. Atkins, Judy Kegl, andBeth Levin.
Explicit and implicit information in?
dictionaries.
In Advances in Lexicography: Proc.Second Ann.
Conf.
of the UW Centre for the NewOED, pages 45-65, Waterloo, Canada, 1986.\[Boguraev and Levin, 1990\] Branimir K. Boguraevand Beth Levin.
Models for lexical knowledgebases.
In Electronic Text Research: Proc.
SixthAnn.
Conf.
of the UW Centre for the New OED,pages 65-78, Waterloo, Canada, 1990.\[Brachman d Levesque, 1985\] Ronald J. Brach-man and Hector J. Levesque, editors.
Readingsin Knowledge Representation.
Morgan Kaufmann,Los Altos, California, 1985.\[Briscoe t al., 1990\] Edward J. Briscoe, Ann A.Copestake, and Branimir K. Boguraev.
Enjoy thepaper: Lexical semantics via lexicology.
In COL-ING 90, volume 2, pages 42-47, Helsinki, 1990.\[Cahill and Evans, 1990\] Lynne J. Cahill and RogerEvans.
An application of DATR: The TIC lexicon.In Proc.
ECAI-90, pages 120-125, 1990.\[Cahill, 1993\] Lynne J. Cahill.
Morphonology in thelexicon.
In ACL Proceedings, 6th European Con-ference, Utrecht, 1993.\[Chierchia and McConnell-Ginet, 1990\]Gennaro Chierchia and Sally McConnell-Ginet.Meaning and Grammar.
An Introduction to Se-mantics.
MIT Press, Cambridge, Mass., 1990.\[Copestake and Briscoe, 1991\] Ann A. Copestakeand Edward J. Briscoe.
Lexical operations ina unification-based framework.
In James Puste-jovsky and Sabine Bergler, editors, Lexical seman-tics and knowledge representation: ACL SIGLEXWorkshop, Berkeley, California, 1991.\[Copestake, 1992\] Ann Copestake.
The ACQUILEXLKB: representation issues in semi-automatic a -quisition of large lexicons.
In Proc.
Third Conf.
onApplied Natural Language Processing, pages 88-95, Trento, Italy, 1992.
Association of Computa-tional Linguistics.\[Dowty, 1979\] David R. Dowty.
Word Meaning inMontague Semantics.
Reidel, Dordrecht, 1979.\[Dowty, 1991\] David R. Dowty.
Thematic proto-roles and argument selection.
Language,67(3):547-619, 1991.\[Evans and Gazdar, 1989a\] Roger Evans and GeraldGazdar.
Inference in DATR.
In ACL Proceedings,4th European Conference, pages 1-9, Manchester,1989.\[Evans and Gazdar, 1989b\] Roger Evans and Ger-ald Gazdar.
The semantics of DATR.
In An-thony G. Cohn, editor, Proe.
Seventh Conferenceof the AISB, pages 79-87, Falmer, Sussex, 1989.\[Evans and Gazdar, 1990\] Roger Evans and GeraldGasdar.
The DATR papers.
Technical ReportCSRP 139, School of Cognitive and ComputingSciences, University of Sussex, Falmer, Sussex,1990.\[Gibbon, 1990\] Dafydd Gibbon.
Prosodic associa-tion by template inheritance.
In Proc.
Workshop220on Inheritance in Natural Language Processing,pages 65-81, Tilburg, 1990.
ITK.\[Kilgarriff and Gazdar, 1993 forthcoming\] AdamKilgarriff and Gerald Gazdnr.
Polysemous rela-tions.
In Frank R. Palmer, editor, Festschrifl orSir John Lyons.
CUP, Cambridge, England, 1993,forthcoming.\[Kilgarriff, 1992\] Adam Kilgarriff.
Polysemy.
PhDthesis, University of Sussex, CSRP 261, School ofCognitive and Computing Sciences, 1992.\[Kilgarriff, 1993 forthcoming\] Adam Kilgarriff.
In-heriting polysemy.
In Patrick St. Dizier and Eve-lyne Viegas, editors, Computational Lexical Se-mantics.
CUP, 1993, fortheoming.\[Levin and Rappoport Hovav, 1991\] Beth Levin andMalka Rnppoport Hovav.
Wiping the slate clean:A lexieal semantic exploration.
Cognition, 41:123-151, 1991.\[Levin, 1991\] Beth Levin.
Building a lexicon: Thecontribution of linguistics.
International Journalof Lezicography, 4(3):205-226, 1991.\[Moore, 1989\] Robert C. Moore.
Unification-basedsemantic nterpretation.
I  A CL Proceedings, P7thAnnual Meeting, pages 33--41, Vancouver, 1989.\[Pollard and Sag, 1987\] Carl Pollard and Ivan A.Sag.
An Information-Based Approach to Syntaxand Semantics.
Volume I: Fundamentals.
CSLILecture Notes, No.
13.
Chicago University Press,Chicago, 1987.\[Pustejovsky, 1991\] James Pustejovsky.
The gen-erative lexicon.
Computational Linguistics,17(4):409-441, 991.\[Russell et al, 1991\] Graham Russell, Afzal Ballim,John Carroll, and Susan Armstrong-Warwick.
Apractical approach to multiple default inheritancefor unification-based lexicons.
In Edward J.Briseoe, Ann A. Copestake, and Valeria de Paiva,editors, Proc.
ACQUILEX workshop on default in-heritance in the lezicon, Tech.
report 238, Univer-sity of Cambridge Computer Laboratory, 1991.\[Sanfilippo and Poznanski, 1992\] Antonio Sanfil-ippo and Victor Poznanski.
The acquisition of lex-ieal knowledge from combined machine-readabledictionary sources.
In Proc.
Third Conf.
on Ap-plied Natural Language Processing, pages 80-87,Trento, Italy, 1992.
Association of ComputationalLinguistics.221
