ANAPHORA RESOLUTION IN SLOT GRAMMARShalom Lappin and Michael McCordIBM T. J. Watson Research CenterP.O.B.
704Yorktown Heights, NY 10598We present three algorithms for resolving anaphora in Slot Grammar: (1) an algorithm for interpretingelliptical VPs in antecedent-contained deletion structures, subdeletion constructions, and intersententialcases; (2) a syntactic filter on pronominal coreference; and (3) an algorithm for identifying the binder of ananaphor (reflexive pronoun or the reciprocal phrase "each other").
These algorithms operate on the output ofa Slot Grammar parser, and, like the parser, they run in Prolog.
The VP anaphora algorithm implements anS-structure analysis of VP ellipsis that we argue provides a more unified and empirically motivated treatmentof VP anaphora resolution than analyses that attempt to interpret elliptical VPs at a level of logical form.Each algorithm can operate independently of the others, and we have incorporated each into an integratedanaphora resolution component.
The interpreted elliptical VP structures that the VP anaphora algorithmproduces provide the input to the two NP anaphora resolution procedures.
The integrated anaphoraresolution component provides a powerful syntactically driven module for generating partially interpretedrepresentations that can serve as input to semantic and discourse interpretation systems.1 INTRODUCTIONIn this paper 1we present algorithms for handling threedifferent sorts of anaphora within Slot Grammar (McCord1980, 1989b, 1990).
These algorithms are second-passprocedures that operate on the output of a Slot Grammarparser.
The parser and the algorithms constituting theanaphora resolution component run in Prolog.
In Section 2we present abrief overview of Slot Grammar and the parserthat implements it.
This section also includes a descriptionof an alternative network representation f parser outputon which the algorithms operate.
In Section 3 we proposean analysis of VP anaphora that involves applying rules ofinterpretation directly to S-structure (parsed surface struc-ture) rather than to LF (logical form), as required byseveral recent accounts.
We provide in Section 3.1 theoreti-cal motivation for preferring our analysis to an LF treat-ment.
In Section 3.2 we present a schematic statement ofthe algorithm that implements his analysis in Slot Gram-mar, and illustrate the algorithm with examples of itsoutput.
Section 4 is devoted to a syntactic filter on pronom-inal anaphora that identifies noncoreferential NP-pronounpairs within a sentence.
A more detailed presentation f thefilter algorithm is given in Lappin and McCord (1990).Section 5 contains a rule for locating possible NP anteced-ents for anaphors (reflexive pronouns and reciprocals).
Theconjunction of the latter two algorithms has roughly thesame extension as Chomsky's (1981, 1986a) binding the-ory.
However, while the conditions of the binding theoryare stated in terms of the configurational relation of c-com-mand, the coreference filter and anaphor binding algorithmemploy the head-complement structures defined by SlotGrammar.
2The three algorithms that make up the anaphora resolu-tion component ofSlot Grammar are fully modular in thatthey apply independently of each other.
Any two algo-rithms in this set can be conjoined.
Moreover, both thepronominal noncoreference filter and anaphor binding algo-rithms have been combined with the VP anaphora lgo-rithm to construct an integrated system of anaphora resolu-tion in which the two NP anaphora rules apply to theresults of VP anaphora interpretation) In Section 6 weillustrate the operation of the integrated system with exam-ples of the representations it generates.2 SLOT GRAMMARThe original work on Slot Grammar was done around1976-1978 and appeared in McCord (1980).
Recently, anew version (McCord 1989b, 1990) was developed in alogic programming framework, inconnection with the ma-chine translation system LMT (McCord 1989a, 1989c,1989d).Slot Grammar is lexicalist and is dependency oriented.Every phrase has a head word (with a given word sense andmorphosyntactic features).
The constituents of a phrasebesides the head word, also called the modifiers of the head,are obtained by "filling" slots associated with the head.Slots are symbols like subi, obi, and iobi representinggrammatical relations, and are associated with a wordComputational Linguistics Volume 16, Number 4, December 1990 197Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar(sense) in two ways.
The lexical entry for the word specifiesa set of complement slots, corresponding to logical argu-ments of the word sense, and the grammar specifies a set ofadjunct slots for each part of speech.
4 A complement slotcan be filled at most once, and an adjunct slot can bydefault be filled any number of times.The phenomena treated by augmented phrase structurerules in some grammatical systems are treated modularlyby several different ypes of rules in Slot Grammar.
Themost important type of rule is the (slot) filler rule, whichgives conditions (expressed largely through unification) onthe filler phrase and its relations to the higher phrase.Filler rules are stated (normally) without reference toconditions on order among constituents.
But there areseparately stated ordering rules.5 Slot~head ordering rulesstate conditions on the position (left or right) of the slot(filler) relative to the head word.
Slot~slot ordering rulesplace conditions on the relative left-to-right order of (thefillers of) two slots.A slot is obligatory (not optional) if it must be filled,either in the current phrase or in a raised position throughleft movement or coordination.
Adjunct slots are alwaysoptional.
Complement slots are optional by default, butthey may be specified to be obligatory in a particular lexicalentry, or they may be so specified in the grammar byobligatory slot rules.
Such rules may be unconditional orbe conditional on the characteristics of the higher phrase.They also may specify that a slot is obligatory relative tothe filling of another slot.
For example, the direct objectslot in English may be declared obligatory on the conditionthat the indirect object slot is filled by a noun phrase.One aim of Slot Grammar is to develop a powerfullanguage-independent module, a "shell," which can beused together with language-dependent modules, reducingthe effort of writing grammars for new languages.
The SlotGrammar shell module includes the parser, which is abottom-up chart parser.
It also includes most of the treat-ment of coordination, unbounded ependencies, controlledsubjects, and punctuation.
And the shell contains a systemfor evaluating parses, extending Heidorn's (1982) parsemetric.
The Slot Grammar evaluator is used not only forranking final parses, as with Heidorn's, but also for pruningaway unlikely partial analyses during parsing, thus reduc-ing the problem of parse space explosion.
Parse evaluationexpresses preferences for close attachment, for choice ofcomplements over adjuncts, and for parallelism in coordina-tion.Although the shell contains most of the treatment of theabove phenomena (coordination, etc.
), a small part of theirtreatment is necessarily anguage dependent.
A (language-specific) grammar can include for instance (1) rules forcoordinating feature structures that override the defaults inthe shell; (2) declarations of slots (called extraposer slots)that allow left extraposition ofother slots out of their fillers;(3) language-specific rules for punctuation that overridedefaults; and (4) language-specific controls over parse eval-uation that override defaults.Currently, Slot Grammars are being developed for En-glish, (ESG) by McCord, for Danish (DSG) by ArendseBernth, and for German (GSG) by Ulrike Schwall.
ESGuses two lexicons: (1) a hand-coded lexicon of about 3,700common words, and (2) the UDICT lexicon (Byrd 1983;Klavans and Wacholder 1989) having over 60,000 lemmas,with a heuristic interface that produces Slot Grammar-style entries.Our anaphora lgorithms apply in a second pass to theparse output; the remainder of this section describes SlotGrammar syntactic analysis tructures.A syntactic structure is a tree; each node of the treerepresents a phrase in the sentence and has a unique headword.
Formally, a phrase is represented by a termphrase(X,H, Senso,Features,glotFramo,E~,Mods),where the components are as follows.
(I) X is a logicalvariable called the marker of the phrase.
Unifications ofthe marker play a crucial role in the anaphora algorithms.
(2) H is an integer representing the position of the headword of the phrase.
This integer identifies the phraseuniquely, and is used in the anaphora algorithms as the wayof referring to phrases.
(3) Sense is the word sense of thehead word.
(4) Features is the feature structure of the headword and of the phrase.
It is a logic term (not an attribute-value list), which is generally rather sparse in information,showing mainly the part of speech and inflectional featuresof the head word.
(5) SlotFrame is the list of complementslots, each slot being in the internal form slot(Slot,Ob,X),where Slot is the slot name, Ob shows whether it is anobligatory form of Slot, and X is the slot marker.
The slotmarker is unified (essentially) with the marker of the fillerphrase when the slot is filled, even remotely, as in leftmovement or coordination.
Such unifications are importantfor the anaphora algorithms.
(6) Ext is the list of slots thathave been extraposed or raised to the level of the currentphrase.
(7) The last component Mods  represents the modi-fiers (daughters) of the phrase, and is of the formmods(LMods,RMods) where LMods  and RMods  are thelists of left modifiers and right modifiers, respectively.
Eachmember of a modifier list is of the form Slot:Phrase whereSlot is a slot and Phrase is a phrase that fills Slot.
Modifierlists reflect surface order, and a given slot may appear morethan once (if it is an adjunct).
Thus modifier lists are notattribute-value lists.Figure I shows a sample parse produced by ESG for thesentence Who did John say wanted to try to find him?
Thetree is displayed by a procedure that uses only one line pernode and exhibits tree structure lines on the left.
In thisdisplay, each line (representing a node) shows (1) the treeconnection lines, (2) the slot filled by the node, (3) the wordsense predication, and (4) the feature structure.
The fea-ture structure is abbreviated here by a display option,showing only the part of speech.
The word sense predica-tion consists of the sense name of the head word with the198 Comimtational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot GrammarWho did John say wanted to try to find him?Isubj(n)tosugj(n)auxcmp(binf)obj(fln)prelnfcomp(inf)prelnfobj(inf)obj(fin)who(X2) .dol(Xi,X3,X4)John(X3)say(X4,X3,X9,u) .want(Xg,X2sX2,Xl2)preinf(Xl2) .hry(Xl2,X2sXl3)prelnf(Xl3)find(Xl3,X2,Xl4,u,u)he(X14)nounverbnounverbverbpreinfverbpreinfverbnounFigure Ifollowing arguments.
The first argument is the markervariable for the phrase (node) itself; it is like an event orstate variable for verbs.
The remaining arguments are themarker variables of the slots in the complement slot frame(u signifies "unbound").
As can be seen in the display, thecomplement arguments are unified with the marker vari-ables of the filler complement phrases.
Note that in theexample the marker X2 of the 'who' phrase is unified withthe subject variables of "want," "try," and "find."
(Thereare also some unifications created by adjunct slot filling,which will not be described here.
)For the operation of our anaphora lgorithms, there is apreliminary step in which pertinent information about theparse tree is represented in a more convenient way for thealgorithms.
As indicated above, nodes (phrases) themselvesare represented by the word numbers of their head words.Properties of phrases and relations between them are repre-sented by unit clauses (predications) involving these inte-gers (and other data), which are asserted into the Prologworkspace.
Because of this "dispersed" representation witha collection of unit clauses, the original phrase structurefor the whole tree is first grounded (variables are bound tounique constants) before the unit clauses are created.As an example of this clausal representation, the clausehasarg(P,X) says that phrase P has X as one of its argu-ments; i.e., X is the slot marker variable for one of thecomplement slots of P. For the above sample parse, then,we would get clauseshasarg(S,'X2'), hasarg(5,'X12').as information about he 'want' node (5).As another example, the clause phmarker(P,X) is addedwhen phrase P has marker X.
Thus for the above sample,we would get the unit clausephmarker(1,'X2').An important predicate for our algorithms is pharg,defined bypharg(P, Q) ~ phmarker(P,X) & hasarg(Q,X).This says that phrase P is an argument of phrase Q. Thisincludes remote arguments and controlled subjects, be-cause of the unifications of marker variables performed bythe Slot Grammar parser.
Thus for the above parse, wewould getpharg(l,5), pharg(1,7), pharq(1,9).showing that "who" is an argument of "want," "try," and"find.
"3 VP  ANAPHORA3.1.
THE RESOLUTION OF VP ANAPHORA ATS-STRUCTUREBefore presenting our algorithm for the interpretation ofVP anaphora structures, we will provide motivation for thegeneral view of VP anaphora that the algorithm imple-ments.
We characterize VP anaphora s a relation betweenthe head V and selected arguments and adjuncts of astructured empty, or partially empty, elliptical VP, and thehead A and corresponding adjuncts of an antecedent VP.This relation is identified on S-structure parse representa-tions.
The VP anaphora interpretation procedure copies thehead A of the antecedent VP into the position of the head ofthe elliptical VP, and specifies which arguments and ad-juncts of the antecedent A are inherited by the elliptical V.In this way, it provides an interpretation of the ellipticalVP.
It is important to recognize that this procedure oper-ates on S-structure representations rather than on a moreabstract level of LF.Let us briefly consider the case for an LF-based ap-proach to VP anaphora resolution.
The elliptical VP in therelative clause of the object NP in 1 is contained in thematrix VP, which is its antecedent.1.
Dulles suspected everyone who Angelton did.As May (1985) observes, if we copy the matrix VP into theposition of the empty VP at S-structure, an interpretiveregress results.
The empty VP will reappear in the copiedmatrix VP.
May proposes to solve this problem by applyingthe operation of quantifier raising (QR) to the object NP in1.
QR adjoins the quantified NP to the matrix sentence toderive the LF representation 2.
6Computational Linguistics Volume 16, Number 4, December 1990 199Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar2.
\[W'\[NP, everyone who 1 Angelton did\[vp\] \] \[ip Dulles \[vp suspected h\]\]The matrix VP of the IP in 2 is assigned to the empty VP ofthe adjoined NP to obtain 3, the desired interpretation f 1.3.
\[IP'\[NP, everyone who Angelton \[vp suspected h\]\]\[w Dulles \[vp suspected t l\] \] \]May concludes that antecedent-contained d letion (ACD)structures can only be interpreted by a VP copying rulethat applies at LF.There are at least two serious difficulties with May'sanalysis of ACD structures.
7 First, as Haik (1987) pointsout, the wh-phrase in the relative clause of an ACD sen-tence such as 1 is constrained by subjacency.4a.
John read everything which Bill believes he did.b.
*John read everything which Bill believes the claimthat he did.On May's analysis, the VP in the relative clause in 1 and4a-b is empty at S-structure, and the wh-phrase binds atrace only after VP copying has applied to the LF producedby the movement of the object NP.
But it is generallyagreed that subjacency isa condition that constrains opera-tor-trace binding chains only at S-structure.
8 Given May'saccount, there is no trace at S-structure for the wh-operatorto bind in 1 and 4a-b.
Therefore, it is unclear how, on thisanalysis, subjacency can constrain wh-movement in ACDstructures.May (in press) seeks to avoid this problem by suggestingthat subjacency does, in fact, apply at LF.
The examples in5 indicate that this is not the case.5a.
At least one critic reviewed Mary's biography of eachauthor.b.
Who did at least one critic review\[Npa biography of t\]c. *Who did at least one critic review\[NeMary's biography of t\]5a permits two scope readings for "each author" relative to"at least one critic."
On the narrow scope reading, a singlecritic reviewed all of Mary's biographies.
When "eachauthor" receives wide scope, there is at least one (possiblydifferent) critic for each of Mary's biographies of an au-thor.
If we accept May's view that the scope of a quantifiedNP is, in part, defined in terms of the constituent to which itis adjoined by QR, the fact that "each author" can takewide scope relative to "at least one critic" indicates thatQR can move the former NP out of the NP "Mary'sbiography of each author."
But 5b-c shows that the latterNP defines a syntactic island for wh-movement.
I  seems,then, that subjacency does constrain binding chains visibleat S-structure, but not scope assignment.The fact that antecedent-contained VP anaphora exhib-its subjacency effects strongly suggests that the ellipticalVP in these cases is not necessarily empty at S-structure,but may contain a trace bound by a wh-phase (or otherope:rator).Second, May's analysis does not extend to the subdele-tion variety of ACD, where arguments and adjuncts of anempty verb are realized within the partially elliptical VPthat it heads, as in the sentences in 6.
96a.
John writes more books than Bill does articles.b.
The university gives more money to the library forbooks than the city does to the orchestra for instru-ments.c.
The university gives more money to the library forperiodicals than it does for books.d.
John wrote more articles for the journal about politicsthan he did about linguistics.e.
John showed everything to Mary which he did to Bill.f.
Mary argues about politics with everyone who shedoes about linguistics.g.
Mary arrived in London before Sam did in NewYork.h.
John reviewed the play for The New York Timesshortly after Bill did for The Washington Post.As these examples illustrate, subdeletion occurs in avariel:y of syntactic environments, including comparativeNPs (6a-d), relative clauses (6e-f), and adverbial phrases(6g-h).
Given that May's analysis treats VP anaphora s aglobal relation between an empty VP and an antecedentVP, :it does not cover subdeletion, where an anaphoricrelation holds between the head and selected constituents ofan elliptical VP and its antecedent.
But the full and subde-letion varieties of ACD are closely related phenomena, ndan analysis that provides aunified explanation of both typesof V\]?
anaphora is clearly preferable to an account hathandles only one type of antecedent-contained anaphora.I:~.
is possible to capture the properties of ACD structuresthat create problems for May's LF analysis if we assumethat the empty VP of a VP anaphora environment isstructured, and may contain arguments or adjuncts of thehead.
l?
The arguments appearing in a partially emptyelliptical VP can be lexically realized, or they may be traces(or their counterparts in Slot Grammar).
If we apply thisanalysis to 1, we obtain 7a as its S-structure.7a.
Dulles suspected \[Nr\[N,everyone \[cpwhol Angeltondid \[ve\[v\] \[Nph\]\]\]\]\]b. Dulles suspected \[NP\[N,everyone \[cpwhol Angelton\[vP\[vsuspected\] \[NPh\]\] \] \]In 7a, the object of the head of the elliptical VP is realizedas a 'trace, and the VP is interpreted by copying only thehead, "suspected," ofthe antecedent VP into the position ofthe empty head to yield 7b.
Therefore, the interpretiveregress is avoided without QR.
Moreover, subjacency viola-tions can be identified at S-structure by computing therelation between the wh-phrase and the trace that it binds.Our proposal handles subdeletion in a natural andstraightforward way.
The only difference between the sub-deletion structures in 6 and the ACD structure in 7a is that200 Computational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammararguments and adjuncts of the elliptical verbs in 6 arelexically realized, while the object of the elliptical verb in7a is not.
The interpretation procedure is the same for thetwo cases.
The head of the antecedent VP is copied into thehead of the elliptical VP.
If any arguments or adjuncts aremissing in the elliptical VP and corresponding argumentsor adjuncts are realized in the antecedent VP, the latter areinherited by the head of the former.This approach can be extended to intersentential VPanaphora cases like 8.118.
John arrived yesterday, and Mary did too.We simply treat the anaphoric relation in these cases asholding between the head and constituents of a structuredempty VP, and the head and counterpart constituents of afull VP in another conjunct or sentence.Subdeletion is generally marginal with intersententialVP anaphora when arguments are left in the elliptical VP.9a.
?
?John writes articles, and Bill does books.b.
?Mary spoke to Max, but Sam won't to Lucy.However, subdeletion with adjuncts in these structures iconsiderably better.10a.
John arrived today, and Bill did yesterday.b.
Max spoke after Mary, and Sam will before Lucy.The fact that adjuncts can remain in partially empty VPs inthese cases provides motivation for applying the structured(partially) empty VP analysis to intersentential VP ana-phora.3.2.
AN ALGORITHM FOR VP ANAPHORAINTERPRETATIONWe define the predicate P is contained in Q recursively asfollows.
A phrase P is immediately contained in a head Qiff (i) P is an argument of Q, or (ii) P is an adjunct ofQ.
P iscontained in Q iff (i) P is immediately contained in Q, or(ii) P is immediately contained in a head R, and (the phrasewith head) R is contained in Q.
The following is a sche-matic description of our algorithm for VP anaphora resolu-tion.VP ANAPHORA ALGORITHMA.
Identify an elliptical verb-antecedent verb pair (V,A)as follows.1.
An elliptical verb V is identified by the presence ofan auxiliary verb or the infinitival complementizer"to," where the auxiliary verb or the complemen-tizer does not have a realized verb complement.2.
A candidate A for an antecedent ofV is a verb that isnot elliptical and not an auxiliary verb with a real-ized complement.3.
Check that A and V stand in at least one of thefollowing relations:a. V is contained in the clausal complement of asubordinate conjunction SC, and the SC-phraseis either (i) an adjunct of A, or (ii) an adjunct of anoun N and N heads an NP argument of A, or Nheads the NP argument of an adjunct of A.b.
V is contained in a relative clause that modifies ahead noun N, N is contained in A, and, if a verbA' is contained in A and N is contained in A', thenA' is an infinitival complement of A or of a verbcontained in A.c. V is contained in the right conjunct of a sententialconjunction S, and A is contained in the leftconjunct of S.B.
Generate a new tree in which A is substituted for V asthe head of the elliptical verb phrase VP' that V heads,and A is assigned the agreement features required bythe head of VP'.
(We will refer to this new occurrence ofA as A').C.
Consider in sequence ach argument slot Sloti in theargument frame of A.1.
If Slot i is filled by a phrase C, thena.
If there is a phrase C' in VP' that is of theappropriate type for filling Slot i, then fill Slot i inthe argument frame of A' with the marker vari-able of C'.
Else,b.
Fill Slot i in A' with the marker variable of C, andlist C as a new argument of A'.2.
If Slot i is empty in the frame of A, it remains emptyin the frame of A'.D.
For each adjunct Adj of A, if there is no adjunct of thesame type as Adj in VP', then list Adj as a new adjunctof A'.Part A of the algorithm specifies the procedures foridentifying pairs whose first element is the head of anantecedent VP and whose second element is the head of anelliptical VP.
Elliptical VPs are identified by the presenceof a bare auxiliary verb or the bare complementizer "to.
"In fact, for reasons of convenience, we take bare auxiliariesand bare complementizers as standing for the head of anelliptical VP, and so the algorithm treats them as surrogateVP heads.
A.3 defines the structural relations that holdbetween the head of an elliptical VP and the head of apossible antecedent VP.
12Part B describes the operation of generating a newinterpreted VP anaphora tree in which the head of theantecedent VP is substituted for the head of the ellipticalVP, and the features of the new head of the interpretedelliptical VP are adjusted in accordance with the require-ments of this VP.Part C characterizes a procedure for filtering the argu-ments of the antecedent verb to determine which of themare inherited by the head of the interpreted elliptical VP.Similarly, Part D describes the filtering process that givesthe adjuncts of the antecedent verb that are inherited bythe interpreted elliptical verb.
The combination of the newverb heading the elliptical VP and the lists of argumentsand adjuncts it inherits from the antecedent verb providethe interpretation f the elliptical VP.To illustrate the Prolog implementation f this algorithmComputational Linguistics Volume 16, Number 4, December 1990 201Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammaron the basis of the network representation, wewill give theclauses pertinent o A.3.b, which identifies the case inwhich the elliptical verb V is contained in a relative clause.The top-level predicate for testing that A is an anteced-ent of an elliptical verb V (used for implementing A.3) isanaph(A,V).
The clauses for this predicate relevant oA.3.b areanaph(A,V) ~-- arel(A,V).arel(A,V)A =/V  & relcont(V,N) &(pharg(N,A) I pharg(N,T) & phadjunct(T,A)).
(Here A =/B  means "A is not equal to B" in IBM Prolog.
)The relation relcont(V,N) holds if V is contained in arelative clause adjunct of noun N. The predicate pharg(P,Q), which says that P is an argument of Q, was definedin Section 2 in terms of the network representation.
Therelation phadjunet(P,Q) says that P is an adjunct of Q, andis also straightforwardly efined in terms of the network.Let us consider several examples of the VP algorithm'sresults.
The system produces the following output.
For eachESG analysis of the input sentence, the parse tree is dis-played, and then all pairs (antecedent verb, elliptical verb)found by the algorithm are displayed.
Then, for each suchpair, the following three things are displayed: (1) the newarguments inherited by the interpreted elliptical verb fromits antecedent; (2) the new adjuncts inherited by the inter-preted elliptical verb from its antecedent; and (3) theinterpreted VP anaphora tree, as a modification of theoriginal parse tree.1 \] in Figure 2 shows the output for May's ACD example1.
In the parse tree, variable X5 in the object slot of thecomplement frame for the auxiliary "did" unifies with thephrase marker of the head of the relative "everyone" (andthat of the wh-phrase "who").
Moreover, this variable ismarked as a trace in the internal representation of thephrase structure from which the tree is projected.
(Such atrace is marked in the feature structure of the verb---although it is not shown in the following abbreviated dis-play.)
Hence, the parse tree corresponds tothe S-structuregiven in 7a.
The VP anaphora algorithm identifies"suspected" as the antecedent of the elliptical verb (repre-sented by the auxiliary), and substitutes it for the auxiliaryin the interpreted VP anaphora tree.
No arguments oradjuncts are inherited from the antecedent verb.
The inter-pretecl VP anaphora tree in 11 is the SG counterpart of theinterpreted S-structure 7b.A similar ACD case involving an elliptical VP thatfollows a bare occurrence of the complementizer "to" isgiven in 12 in Figure 3.
Here, the interpreted verb "write"inherits the object argument "notes," while its indirectobject argument is a trace bound by the wh-phrase corre-sponding to the head of the relative clause.In the following examples, we give the output in anabbreviated way in order to save space.
The uninterpretedtree is not shown, and the analysis resulting from theii.
Dulles suspected everyone who Angelton did.Syntactic analysis time = 87 msec.I sub3 Dulles(X4) noun(prop,nom.X2:,nwh): top suspect(XI,X4,X5) verb(Ein~pers3,X2,past,X3))u-r--- ob\] everyone(X5) noun(pron(all),,acc.sg,X6)l V- ob).
who(X5) .
noun(pron(wh),Xl0.sg~wh)I \[- SUD~ Anqelton(X9) noun(prop,nom.XS,nwh)~-~-nre?
do(X7,X9,X5) verb(~in~pers3,~\[8,past,dep:dcl:wh))Antecedent verb-elliptical verb pairs: suspect.2 - do.6Elliptical verb-new argument pairs: noneElliptical verb-new adjunct pairs: noneInterpreted VP anaphora tree:subj Dulles(X4) noun(prop,nom.X2,nwh)top suspect(Xl,X4,X5) verb(~in~pers3,X2,past,X3)) ~ OD~ everyone(X5) noun(pron~all),acc.sg,X6) ob who(~5) .
_ noun(pron(wh),Xl0.sg/wh) sug  Angelton(Xg) .
noun(prop,nom.XS,nwh)nrel suspect(X7,X9,X5) verb(~in~pers3,~i8,past,dep:dcl:wh))Anaphora analysis time = 69 msec.Figure 2202 Computational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar12.
John wrote notes to everyone who asked him to.subjtopob", ip~j ~ oD)prep SUD~ nrelobjL_ compJohn(X3 ) nounlwrite(Xi,X3,X4,X5,u) verb~note(X4) nounlto(X7,X5) prepqeveryone(X5) nounqwho(X5) nounlask(Xg,XS,XII,XI2) verbqhe(Xll~ nounqpreinf(Xl2) preizprop,nom.sg,nwh)~in(pers3,sg,past,X2))cn,acc.pl,nwh)to,XS,e(X5))pron(all),acc.sg,XS)pron(wh),Xl3.sg,wh)~in(Xl0,sg,past,dep:dcl:wh))t~ron(defprn),acc.sg,nwh)Antecedent verb-elliptical verb pairs: write.2 - preinf.9Elliptical verb-new argument pairs: preinf.9 - note.3Elliptical verb-new adjunct pairs: noneInterpretedIVP anaphora tree:subj John(X3) noun(prop,nom.sg,nwh)top write(Xi,X3,X4,X5,u) verb(~in(pers3,sg,past,X2))ob'3 no%e~X4) noun(cn,acc.pl,nwh)iob\] to(X7,X5~ prep~to,X8,e(X5))ob~prep everyone(X5) noun(pron(all),acc.sg,X8)~ i  who(X5) noun(Dron(wh),Xl3.sg,wh)ask(X9,X5,XII,XI2) verb(~in(Xl0,sg,pas?,dep:dcl:wh))obj he(Xll} L noun(pron(defprn),acc.sg,nwh)comp preinf(Xl2) preinfauxcmp writel(Xl5,Xll,X4,X5) verb(inf(bare))Figure 3algorithm is shown in an abbreviated linear form, consist-ing simply of head words and their arguments.In 13, both "promise" and its infinitival complement"read" satisfy the condition given in A.3.b on the anteced-ent of an elliptical verb in a relative clause.
Therefore, thealgorithm correctly generates two possible interpreted VPanaphora trees.
Tree 1 gives the reading on which "promise"is taken as the antecedent of the head of the empty VP inthe relative clause, and the infinitival clause headed by"read" is inherited as a new argument of the interpretedverb.
Tree 2 specifies the interpretation where "read" issubstituted for the head of the empty verb, and the trace ofthe relative operator "which" is its (noninherited) argu-ment.
The algorithm correctly excludes "said" as a possibleantecedent of the empty verb in the relative clause in 14.This is because it has a tensed rather than an infinitivalcomplement that contains the verb that contains the nounmodified by the relative clause.
Therefore, the algorithmproduces only two possible interpretations for 14, which arerepresented by the two interpreted VP anaphora trees thatit generates.13.
John promised to read everything which Mary did.Antecedent verb-elliptical verb pairs:promise.2 - do.8, read.4 - do.8Elliptical verb-new argument pairs:promise.8 - preinf.3, promise.8 - read.4Elliptical verb-new adjunct pairs: noneInterpreted VP anaphora treel:John(X3) promise(X 1,X3,X4,u) preinf(X4)read(X4,X3,X7,u) everything(X7)which(X7) Mary(Xg) promise(X8,X9,X4)Interpreted VP anaphora tree2:John(X3) promise(X 1,X3,X4,u) preinf(X4)read(X4,X3,X7,u) everything(X7)which(X7) Mary(X9) read(X8,X9,X7)14.
John said that Mary promised to read everythingwhich Max has.Antecedent verb-elliptical verb pairs:promise.5 - have.
11, read.7 - have.
11Elliptical verb-new argument pairs:have.11 - preinf.6, have.11 - read.7Elliptical verb-new adjunct pairs: noneInterpreted VP anaphora treel.John(X3) say(X 1, X3, X4,u, u) thatconj(X4, X9)Mary(X 10) promise(X9, X 10, X 11,u)preinf(X11) read(X11,X10,X12,u)everything(X 12) which(X 12) Max(X 14)have(X13,X14,X12) promise(X18,X14,X11)Interpreted VP anaphora tree2:John(X3) say(X1,X3,X4,u,u) thatconj(X4,Xg)Computational Linguistics Volume 16, Number 4, December 1990 203Shalom Lappin and Michael McCord Anaphora Resolution in Slot GrammarMary(X 10) promise 1(X9,X 10, X 11,u)preinf(X 11) read(X11,X10,X12,u)everything(X 12) which(X 12) Max(X14)have(X13,X14,X12) read(X18,X14,X12)15 is a subdeletion case in which all of the arguments ofthe elliptical verb are filled locally within the elliptical VP.Hence, the algorithm substitutes the antecedent verb"write" for the auxiliary, and fills the direct and indirectargument slots in its frames with "notes" and "to Bill,"respectively.
It should be pointed out that the algorithmcorrects ESG's parse of "to Bill" as a PP adjunct of "notes"in the original tree.
This misparse is due to the fact that"do" does not allow an indirect object in its frame.
Thealgorithm recognizes this adjunct as a possible filler for theindirect object slot in the frame of "write," and uses it to fillthe slot when "write" is substituted for "do" in the inter-preted tree.15.
Max writes more letters to Sam than Mary does notesto Bill.Antecedent verb-elliptical verb pairs:write.2 - do.9Elliptical verb-new argument pairs: noneElliptical verb-new adjunct pairs: noneInterpreted VP anaphora tree:Max(X3) write(X1,X3,X4,X5,u)more(X14) letter (X4) to l(X12,X5) Sam(XS)than(X 1,XT) Mary(X8) write(XT, X8, X9,X 10)note(Xg) to(Xg,x 10) Bill(X 10)In 16, the indirect object slot of the interpreted verb"write" is filled locally by "to Bill," but "letters" is inher-ited from the antecedent.
The algorithm also corrects themisparse of "to Bill" as a PP zdjunct of the elliptical verb inthe original tree by a strategy similar to the one used tocorrect he parse of the PP in 1516.
Max writes more letters to Sam than Mary does toBill.Antecedent verb-elliptical verb pairs:write.2 - do.9Elliptical verb-new argument pairs:write.9 - letter.4Elliptical verb-new adjunct pairs: noneInterpreted VP anaphora tree:Max(X3) write(X 1, X3, X4, X 5,u) more~X 13)letter(X4) to 1 (X 11,X5) Sam(X5)than(X1,X7) Mary(X8) write(X7,X8,X4,X9)to(X7,Xg) BIll(X9)Both the direct object "letters" and the indirect object"Sam" are inherited by the interpreted verb "write" in thefully empty ACD structure in 17.17.
Max writes more letters to Sam than Mary does.Antecedent verb-elliptical verb pairs:write.2 - do.9Elliptical verb-new argument pairs:wTite.9 - letter.4, write.9 - Sam.6Elliptical verb-new adjunct pairs:n oneInterpreted VP anaphora tree:Max(X3) write(X1,X3,X4,X5,u) more(X11)letter(X4) to(X9,X5) Sam(X5)than(X1,X7) Mary(X8) write(X7,X8,X4,X5)18 and 19 show the operation of argument filtering in anACID passive case.
13 As in 13 and 14, the algorithm correctsthe misparse, in the original tree, of the second "by"  phraseas a PP adjunct.
It raises it to the status of the agent (deepsubject) argument of the head of the new verb in theinterpreted tree.18.
John was interviewed by Bill before Mary couldhave been by Max.Antecedent verb-elliptical verb pairs:interview.3 - be.
10Elliptical verb-new argument pairs: noneE\]~tiptical verb-new adjunct pairs: noneInte:rpreted VP anaphora tree:John(X3) be(X 1, X3, X4) interview(X4,X 13,X3)by(X 14,X 13) Bill(X 13) before(X 1, X 5)Mary(X6) can(X5,X6,X7) have perf(XT,X6,X8)be(X8,X6,u) interview(X 12,X 10,X6)b:z(X8,X 10) Max(X 10)19.
John was interviewed by Bill before Mary couldhave been.Antecedent verb-elliptical verb pairs:interview.3 - be.
10E\]2iptical verb-new argument pairs:be.
10 - Bill.5El'tiptical verb-new adjunct pairs:Inte:rpreted VP anaphora tree:John(X3) be(X1,X3,X4) interview(X4,X11,X3)bT(X12,X11) Bill(X 11) before(X1,X5) Mary(X6)can(X5,X6,X7) have perf(X7,X6,X8) be(X8,X6,u)interview(X 10, X 11,X6)20 and 21 illustrate the adjunct filtering procedure of thealgorithm in an intersentential case of VP anaphora.
Theadverbial "yesterday" is inherited in 20, but not in 21.20.
John arr ived yesterday, and Mary did too.Antecedent verb-elliptical verb pairs:arrive.2 - do.7Elliptical verb-new argument pairs:noneElliptical verb-new adjunct pairs:arrive.7 - yesterday.3Interpreted VP  anaphora tree:Jchn(X9) arrive(X8, Xg,u) yesterday(X I 1 )and(XI,X8,X13)Mary(X14) arrive(Xl3,Xl4,u) too(Xl3)204 Com'p~ttational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar21.
John arrived yesterday,  and Mary will tomorrow.Antecedent verb-elliptical verb pairs:arrive.2 - will.7Elliptical verb-new argument pairs:noneElliptical verb-new adjunct pairs:noneInterpreted VP anaphora tree:John(X9) arrive(X8,Xg,u) yesterday(X 11)and(X1,X8,X13)Mary(X14) will(X13,X14,u) arrive(X19,X14,u)tomorrow(X17)22 and 23 exhibit he effects of adjunct filtering of a morecomplex variety in an ACD structure.
Both the adverb"briefly" and the PP adjunct "with Bill" are inherited bythe interpreted verb "walked" in 22, but only "briefly" isinherited in 23.22.
John walked briefly with Bill before Mary did.Antecedent verb-elliptical verb pairs:walk.2 - dol.8Elliptical verb-new argument pairs:noneElliptical verb-new adjunct pairs:walk.8 - briefly.3, walk.8 - with.4Interpreted VP  anaphora tree.John(X3) walk(X l,X3,u, u) briefly(X I )with(XI,X I O) Bill(X I0)before(X l,X6) Ma~/(X7) walk(X6,X7,u)23.
John  wa lked  briefly with Bill before Mary  d id withMax.Antecedent verb-elliptical verb pairs:walk.2 - doi.8Elliptical verb-new argument pairs:noneElliptical verb-new adjunct pairs:walk.8 - briefly.3Interpreted VP  anaphora tree.John(X3) walk(XI,X3,u,u) briefly(X1)with(XI,Xl 2) Bill(X 12)before(X 1,X6) Mary(X7) walk(X6,X7,u)with(X6,X 10) Max(X 10)4 A SYNTACTIC FILTER ON PRONOMINALANAPHORAThe filter consists of six conditions for NP-pronoun non-coreference within a sentence.
To state these conditions, weuse the following terminology.
The agreement features ofan NP are its number, person, and gender features.
We willsay that a phrase P is in the argument domain of a phraseN iff P and N are both arguments of the same head.
Wewill say that P is in the adjunct domain of N iff N is anargument of a head H, P is the object of a prepositionPREP, and PREP is an adjunct of H. P is the NP domain ofN iff N is the determiner of a noun Q and (i) P is anargument of Q, or (ii) P is the object of a preposition PREPand PREP is an adjunct of Q.4.1 FILTER ON PRONOMINAL ANAPHORAA pronoun P is noncoreferential with a (nonreflexive ornonreciprocal) noun phrase N if any of the followingconditions hold.I.
P and N have incompatible agreement features.II.
P is in the argument domain of N.III.
P is in the adjunct domain of N.IV.
P is an argument of a head H, N is not a pronoun, andN is contained in H.V.
P is in the NP domain of N.VI.
P is a determiner of a noun Q, and N is contained in Q.Condition I rules out coreference between a pronoun andan NP with incompatible agreement features.
It will iden-tify the co-indexed expressions in 24a-c as noncoreferen-tial.24a.
*He i said that they i came.b.
*The woman i said that he i is funny.c.
*I i believe that she i is competent.The filter treats ("he," "they") as a noncoreferring pair,which entails only that the intended denotation of "he"cannot be taken as identical to that of "they."
The referentof "he" can, of course, be a part of the referent of "they,"and, in appropriate contexts, a discourse interpretationsystem, like the LODUS system of Bernth (1988, 1989),should be able to recognize this possibility.Condition II covers cases in which a pronoun and an NPare arguments of the same head, and so it rules out corefer-ence between the coindexed expressions in 25a-d.25a.
*Mary i likes her i.b.
*She i likes her i.c.
*John i seems to want to see him i.d.
*This is the girl i Mary said she i saw.It is important o note that the conditions of the filterapply to pronouns and NPs regardless of whether they arelexically realized in argument position (25a-b), or bind theargument slots which they fill in their heads at a distancethrough control (25c) and unbounded ependency relations(25d).
This is due to the fact that the variable that fills anargument slot is unified with the phrase marker of the headof the phrase to which it corresponds.
Therefore, it is notnecessary to incorporate mpty categories uch as tracesand PRO into the parse output, and compute appropriatebinding chains for these categories in order for the algo-rithm to handle noncoreference in cases involving controland wh-movement.
Mechanisms of this kind are requiredfor implementations of Chomsky's binding theory in Gov-ernment Binding-based parsers, such as those described inCorrea (1988) and Ingria and Stallard (1989).Computational Linguistics Volume 16, Number 4, December 1990 205Shalom Lappin and Michael McCord Anaphora Resolution in Slot GrammarCondition I I I  rules out coreference between an argumentof a verb V and the object of a prepositional djunct of V, asin 26a-bJ  426a.
*Mary i arrived with her i.b.
*Who i did John say wants to sit near himi?Condition IV prevents coreference between a pronounthat is an argument of a head H, and a nonpronominal NPcontained in H, as in 27a-c.27a.
*Who i did she i say Mary i kissed?b.
*This is the man i he i said Max i wrote about.c.
*He i likes Johni's mother.The filter does permit coreference in 28a-b.
"His" in 28a isnot an argument of "likes," and so ("his," " John") do notsatisfy Condition IV (or any other condition of the filter).An ordering constraint attached to Condition IV requiresthat a possessive adjunct of a noun contained in a head Hfollow a pronominal argument of H for this condition toapply to the pair.28a.
His i mother likes John i.b.
Johni's mother likes him i.Finally, V and VI in effect apply conditions II and II I ,respectively, to NP internal cases.
They prevent corefer-ence in 29a-c, while allowing it in 29d.29a.
*His i portrait of John i is interesting.b.
*Johni's portrait of him i is interesting.c.
*His i description of the portrait by John i is interest-ing.d.
Johni's description of the portrait by him i is interest-ing.The filter on pronominal anaphora restricts the searchspace that a discourse system of anaphora resolution mustconsider.
Bernth has integrated the filter into LODUS(Bernth 1988, 1989), which resolves pronominal anaphoraand NP denotation through semantic and pragmatic rulesof inference.
The anaphora resolution component ofLOI)US applies only to the pronoun-NP pairs that thesyntactic filter has not identified as noncoreferential.An example of the filter algorithm's output is given in 30in Figure 4.
The list of noncoreferential pronoun-NP pairsappears after the parse tree.
Ulrike Schwall has success-fully implemented the algorithm in German Slot Grammar30.
This is the girl who she wanted Mary to talk to.I subj this(X3) top be(XI,X3,X4)ndet the(X7)predcmp girl(X4)ob~prep who(X4)want(X8,X9,XlO,Xll)?
Mary(X lO)  .nf prelnf(Xll)halk(Xll,Xl0,X4,u)pob~ to(Xl6,X4)noun Dron(defDrn),nom.sq,nwh)verb ~in(pers3,sg,pres,~2))det(g,de~)noun cn,X5.sg,X6)noun pron(wh),Xl3.sg,wh)noun pron(defDrn),nom.sq,nwh)verb ~in(pers3,sg,past,dep:dcl:wh))nount~rop,acc.sg,nwh)preinzverb(inf(full))prep(to,Xl7,e(X4))Non-coreferential pronoun-NP pairs:she.6 - girl.4, she.6 - who.5, she.6 - Mary.831.
paul gab Peter das Buch, um ihn zu beeindrucken.
(Paul gave Peter the book to impress him.
)subj Paul(X2).
- -  to geb(Xl,X2,X3,X4,u)io~j Peter{X3)ndet d(Xl3)F obj buch(X4)F-- seppreumzu prfumzu(X7) F-r- obj er(X8).\[- preinf preinf(X7)umzu beeindruck(X7,X2,X8,u)noun(prop,nom.sg.m.nda.X6,nwh)verb(Ein(pers3,sg,past~ind:dcl:nwh))noun(prop,dat.sg.Xl4.nda.Xl5,nwh)det(naNS,def)noun(cn,acc.sg.nt.na.nrflx,nwh)separatorpreumzunoun(~ron(pers3),acc.sg.m.kda.Xl2,nwh)preinrverb(inf(ufull,a))Non-coreferential pronoun-NP pairs: er.8 Paul.lFigure 4206 Computational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar(GSG).
An example of its output for GSG is given in 31 inFigure 4.5 AN ANAPHOR-BINDING ALGORITHMWe take the set of anaphors to include reflexive pronounsand the reciprocal NP "each other."
The notion higherargument slot used in the formulation of the algorithm isdefined by the hierarchy of argument slots given in 32.32. subj > agent > obj > (iobj I pobj)subj is the surface subject slot, agent is the deep subject slotof a verb heading a passive VP, obj is the direct object slot,iobj is the indirect object slot, and pobj is the object of a PPcomplement of a verb, as in "put NP on NP."
We assumethe definitions of argument domain, adjunct domain, andNP domain given in Section 4.5.1 ANAPHOR-BINDING ALGORITHMA noun phrase N is a possible antecedent binder for ananaphor A iff N and A do not have incompatible agreementfeatures, and one of the following five conditions holds.I.
A is in the argument domain of N, and N fills a higherargument slot than A.II.
A is in the adjunct domain of N.III.
A is in the NP domain of N.IV.
N is an argument of a verb V, there is an NP Q in theargument domain or the adjunct domain of N suchthat Q has no noun determiner, and A is (i) anargument of Q, or (ii) A is an argument of a preposi-tion PREP and PREP is an adjunct of Q.V.
A is a determiner of a noun Q, and (i) Q is in theargument domain of N and N fills a higher argumentslot than Q, or (ii) Q is in the adjunct domain of N.Conditions I and II cover anaphoric binding in cases like33-34, respectively.33a.
They i wanted to see themselvesi.b.
Mary knows the people i who John introduced to eachother i.34a.
He i worked by himself i.b.
Which friends i plan to travel with each otheri?Condition III handles binding of an anaphor inside anNP by the determiner ofthe NP, as in 35, and IV deals withNP internal anaphors which are bound from outside of theNP, as in 36.35.
John liked Billi's portrait of himself i.36.
They i told stories about hemselves i.Condition V applies to cases in which a reciprocal deter-miner is bound by an argument in the same clause as theNP containing the reciprocal.
37 is an example of thisbinding relation, and 38 illustrates the combined effect ofIV and V.37.
\[John and Mary\]i like each otheri's portraits.38.
\[John and Mary\]i like each otheri's portraits of them-selves i.An example of the anaphor binding algorithm's output ispresented in 39 in Figure 5.
Notice that the sentence in thisexample isambiguous concerning antecedents for "himself,"and the algorithm correctly identifies both "who" and"John" as possible binders of the reflexive.
When a dis-course interpretation system makes use of this algorithm, itmust, of course, constrain the interpetation of anaphors byrequiring that exactly one binding pair be selected from thelist of pairs that the algorithm provides for any givenanaphor, relative to the clause in which it appears.Ulrike Schwall has implemented the algorithm in GSG,and 40 in Figure 5 illustrates its output for a Germansentence.6 AN INTEGRATED SYSTEM FOR ANAPHORARESOLUTIONAny two of the algorithms described in Sections 4-6 canoperate in conjunction with each other.
Examples of theresults provided by such combinations are given in 41-44(see Figure 6 for 41).
In 45, both the filter and anaphorbinding algorithms have been integrated into the VP ana-phora algorithm, and operate on the interpreted VP ana-phora tree it generates.6.1 VP ANAPHORA ALGORITHM WITHPRONOMINAL ANAPHORA FILTER42.
John talked to him, and Bill did too.Antecedent verb-elliptical verb pairs:talk.2 - dol.8Elliptical verb-new argument pairs:talk.8 - he.4Elliptical verb-new adjunct pairs:noneInterpreted VP  anaphora tree:John(X9 ) talk(X8,X9, X I 0, u) to(X 12, X 10)he(XlO) and(XI,X8,Xl4)Bill(X I S) talk(X 14, X 15,u, X 10) too2(X 14)Noncoreferential pronoun-NP pairs:he.4 - John.
I, he.4 - Bill.743.
Mary  sent John to everyone who he did.Antecedent verb--elliptical verb pairs:send.2 - do2.8Elliptical verb-new argument pairs:send.8 - John.3Elliptical verb-new adjunct pairs:noneInterpreted VP  anaphora tree:Mary(X3) send(X I,X3,X4,X5) John(X4)to(X6,XS) everyone(X5) who(XS)he(X9) send(X8,X9,X4,X5)Computational Linguistics Volume 16, Number 4, December 1990 207Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar39.
Who did John talk to about himself?l objprep who(X2) noun(pron(wh),X7.sg,wh)~ j  do(XI,X3,X4) verb(~in(pers3,sg,past,ind\]:wh))John(X3) noun(prop,nom.sg,nwh)~ auxcmp talk(X4,X3,X2,u) verb(lnf~bare))pobj to(Xll,X2) ?
prep(to,Xl2,e(X2))L -~vprep about(X4,Xl0) prep(about,X9.e(Xl0))oDjprep himself(Xl0) noun(pron(ref!prn),acc.sg,X9)~ntecedent NP-Anaphor Binding Pairs: who.l - himself.7, John.3 - himself.740.
Dies ist der Mann, der ueber sich sprechen soll.
(This is the man who should speak about himself.
)subj die?
(X2)top sei(Xl,X2,X3,u)ndet d(X8~predcmp mann(X3)pob3 ueber(Xl6,XI5)objprep reflex(Xl5)auxcmp sprech(Xll,X3,u,Xl5)nrel soll(Xg,X3,Xll)noun(Dron(defDrn),nom.sg.X5.na.X6,nwh)verb(~in(pers3,sg,pres,lnd:dcl nwh))det(nMgdFSgP,def) .
.
.
.noun(cn,nom.sg.m.w.A/,nwn)separatorrelproprep(uber.acc,nwh,e(Xl5))noun(pron(reflprn),acc.sg.Xl7.XlS.xlg,n whverb(inf(bare,a))verb(fin(pers3,sg,pres,dep:dcl:wh))Antecedent NP-reflexive pairs: mann.4 - reflex.8Figure 5Noncoreferential pronoun-NP pairs:he.7 - Mary.
1, he.7 - John.3,he.7 - everyone.5, he.7 - who.66.2 VP ANAPHORA ALGORITHM WITH ANAPHORBINDING ALGORITHM44.
The girl  will write a book about herself, and  Marymight too.Antecedent verb-elliptical verb pairs:write.4 - may.
12Elliptical verb-new argument pairs:may.
12 - book.6, may.
12 - about.7Elliptical verb-new adjunct pairs:noneInterpreted VP anaphora tree:the(X 11) girl(Xg) will(X8,Xg,X 10)write(X10,X9,X12,u,u) a(X15) book(X12)about(X 12,X 16) hersell(X 16)and(X1,X8,X18) Maryl(X19) mayl(X18,X19,u)write(X24,X 19, X 12 ) too(X 18)Antecedent NP-reflexive pairs:girl.
2 - herself.8, Mary.
11 - herself.86.3 VP ANAPHORA ALGORITHM WITH THEPRONOMINAL ANAPHORA FILTER AND ANAPHORBINDING ALGORITHM45.
They d iscussed each other's portraits of themselvesbefore John and Mary did.Antecedent verb-elliptical verb pairs:discuss.2 - dol.
12Elliptical verb-new argument pairs:discuss.
12 - portrait.5El\].iptical verb-new adjunct pairs:noneInterpreted VP anaphora tree:they(X3) discuss(X 1,X3,X4)each.other(X10) 's portrait(X4,Xg)o!
(X 11,X9) themselves(X9)before(X1,X5) John(X7) and(X6,X7,X8)Mary(X8) discuss(X5,X6,X4)Noncoreferential pronoun-NP pairs:th.ey.
1- portrait.
5, they.
1 - John.9,they.
1 - coord(and, John, Mary).
10,they.
1 - Mary.
11Antecedent NP-anaphor pairs:they.
1 - (each.other).3,(each.other).3 - themselves.7,coord(and, John, Mary).
10 - (each.other).3Our integrated system for anaphora resolution is syntac-tically based, and it must be supplemented by additionalsemantic procedures to yield fully adequate interpretationsof e!iliptical VP structures.
This can be seen quite clearly byconsidering the interpreted VP anaphora tree of 42.
Here"him,," the indirect object of "talk," is inherited by theinterpreted verb in the second conjunct, and its marker208 Computational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot GrammarPronominal Anaphora Filter with Anaphor Binding Algorithm41.
This is the man who he asked to talk about himself.. subj this(?
top be(Xll ndet the(Xpredcmp man(Xw o(xhe(X9nrel ask(Xpreinf Drelncomp halk(ipobj aboutobjprep h imsel~,x4)I,X9,X4,XIO)~(xl0)II0,X4,usXI5)XI6,X15)f(x15)Non-coreferential pronoun-NP pairs: he.6 - man.4, he.6 -Antecedent NP-reflexive pairs: man.4 - himself.ll, who.5noun(pron(defprn),nom.sa,nwh)yerb(~in(pers3,sg,pres,X2))det(sg,de~)noun(cn,X5.sq,X6)noun(pron(wh~,Xll.Xl2,wh)noun(pron(defDrn),nom.sg,nwh)verb(~in(pers3,sg,past,dep:dcl:wh)prelnrverb(inf(full))prep(about,Xl7,e(Xl5))noun(pron(ref!prn),acc.XlS,Xl7 )who.5- himself.llFigure 6variable X10 is unified with the marker of the indirectobject slot in the argument frame of this verb.
Therefore,the interpreted VP anaphora tree correctly represents hefact that the second conjunct in 42 must be understood asasserting that Bill spoke to the same person as John did.The list of noncoreferential pronoun-NP pairs specifies that"him" is distinct in reference from both "John" and "Bill.
"However, in its present form, the VP anaphora lgorithmunifies the marker variables of all inherited arguments withthe appropriate slots in the frame of an interpreted verb.This will yield incorrect results for a sentence like 46, where"a book" is the inherited argument.46.
John read a book, and Mary did too.On at least one possible reading of the sentence, John andMary read distinct books.
To complete the interpretation felliptical VPs, it will be necessary to add procedures forsubstituting new marker variables for the occurrence ofinherited arguments and adjuncts in the interpreted VP,when these expressions need not be taken as having thesame denotations that they receive as arguments and ad-juncts of the antecedent verb.A related problem concerns cope assignment in sen-tences like 47.47.
Mary spoke to everyone after Max did.Dalrymple, Shieber, and Pereira (1990) point out that 47 isambiguous between a narrow scope reading on which Maryspoke to everyone after Max spoke to everyone, and a widescope reading according to which everyone is such thatMary spoke to him/her after Max spoke to him/her.
Atthis point, the VP anaphora lgorithm generates only theformer eading, as "everyone" is inherited as an argumentby the interpreted head of the ellided VP.We could capture the wide scope reading by modifyingour S-structure copying analysis of VP anaphora to allowcopying to apply to more abstract semantic representations.This approach involves adopting an interpolated copyingtheory of VP ellipses on which copying is permitted not onlyat the level of S-structure, but also after the antecedentclause has been assigned a partial or full semantic interpre-tation.
In the case of 47, copying could apply after"everyone" has been assigned scope through the operationof NP storage and a semantic variable appears in itsplace) 5 The result of such copying would be an interpreta-tion on which "everyone" would have wide scope by virtueof the fact that it binds variables in both the antecedent andinterpreted VPs.
The interpolated copying analysis couldbe implemented within Slot Grammar by permitting eitherexpressions or simply their marker variables to be inher-ited.
The former case corresponds toS-structure copying ofa constituent, the latter to copying at a level of representa-tion to which interpretation has already applied.
If "every-one" is inherited in 47, it is, in effect, copied, and the nar-row scope reading of the sentence results.
When only itsmarker variable is inherited, the semantic variable within itsscope is copied, which yields the wide scope interpretation.
1643 is particularly interesting.
The sentence isa variant ofan example that May (in press) claims provides evidencefor this QR treatment of ACD structures.
He maintainsthat only after QR has been applied to "everyone who hedid" and the matrix VP "sent John to t" copied into theempty VP in the relative clause, can Principle C of Chom-sky's binding theory rule out coreference between "he" and"John."
In fact, the application of our filter to the inter-preted VP anaphora tree provides the correct results forthis case.
This is due to the fact that the VP algorithmidentifies "John" as the inherited object of the verb that itComputational Linguistics Volume 16, Number 4, December 1990 209Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammarsubstitutes for the ell iptical verb in the new tree.
ConditionII  of the filter a lgor i thm is then satisfied by ( "he , "" John") .
z7 This example provides strong support for ourtreatment of VP anaphora.In the interpreted VP anaphora tree of 44, the substi-tuted verb "writes" inherits "hersel f"  as a new argument,and so we capture the "sloppy" reading of this sentence, onwhich each occurrence of the reflexive is bound by thesubject of the clause in which it occurs.
To obtain the"str ict"  interpretation, according to which "hersel f"  isbound only by "the girl ," it will be necessary to allowcopying of the marker  variable associated with "herself ," inthe manner  required for the wide scope reading of"everyone" in 47 (see footnote 16).The fully integrated algorithm provides the desired re-sults for the sentence in 45.
"They"  is identified as nonco-referential with any of the NPs contained in the head ofwhich it is the subject.
"They"  binds "each other" in thematr ix clause, and " John and Mary"  binds "each other" asthe determiner of the inherited argument "portra i t"  in theadverbial  phrase.
"Each other" binds "themselves," and so,by transit ivity of binding, " they" binds "themselves" in itsoccurrence in the object NP  headed by "portra i t"  in thematr ix clause, and " John and Mary"  binds "themselves" inits occurrence in this NP  as the inherited object of thesubstituted verb in the adverbial  phrase.7 CONCLUSIONWe have presented three implemented algorithms for ana-phora resolution in Slot Grammar .
The conjunction of thetwo NP  anaphora rules covers approximately the samephenomena s Chomsky's binding theory, but these rulesdo not require empty categories and the definition of bind-ing chains in parse output.
The VP anaphora algorithmimplements an S-structure analysis of VP ellipsis that weargue offers a more unified and principled explanation ofdifferent sorts of VP anaphora than recent LF-based ac-counts.
The success of the algorithm in providing appropri-ate representations for the VP anaphora cases that we usedto motivate our theoretical approach supports this view.The combination of the three algorithms constitutes apowerful syntactical ly driven system for anaphora resolu-tion in Slot Grammar .
This system reduces the burden onmodules of semantic and discourse interpretation by supply-ing part ial ly interpreted representations to which the rulesof the latter can apply.REFERENCESBernth, A.
(1989).
"Discourse understanding in logic."
In Proceedings ofthe North American Conference on Logic Programming.
MIT Press.755-771.Bernth, A.
(1988 ).
Computational discourse semantics.
Doctoral disserta-tion, University of Copenhagen and IBM Research.Bresnan, J.
(1975).
"Comparative deletion and constraints ontransformations."
Linguistic Analysis, 1: 25-74.Byrd, 17,.
J.
(1983).
"Word formation in natural anguage processingsystems."
Proceedings of the 8th International Joint Conference onAr,ffficial Intelligence, 704-706.Corrca.
N. (1988).
"A binding rule for government-binding parsing.
"COLING '88, Budapest: 123-129.Chomsky, N. (1986a).
Knowledge of Language: Its Nature, Origin, andUse.
Praeger.Choms3cy, N. (1986b).
Barriers.
MIT Press.Chomsky, N. (1981).
Lectures on Government and Binding.
Foris.Chomsky, N. (1977).
"On wh-movement."
In Formal Syntax, P. Culi-cover, T. Wasow, and A. Akmajian, edited by Academic Press.Dalryrnple, M.; Shieber, S; and Pereira, F. (1990).
"Ellipsis and higher-order unification."
SRI, Harvard University, and AT&T Bell Laborato-ries, unpublished ms.Gazdar, G.; Klein, E.; Pullum, G.; and Sag, I.
(1985).
Generalized PhraseStructure Grammar.
Blackwell.Haik, I.
(1987).
"Bound VP's that need to be."
Linguistics and Philoso-phy 11: 503-530.Heidorn, G. E. (1982).
"Experience with an easily computed metric forranking alternative parses."
Proceedings ofthe 20th Annual Meeting ofthe Association of Computational Linguistics, 1982: 82-84.Hirshbuhler.
(1982).
"VP deletion and across-the-board quantifier scope.
"Proceedings of NELS 12, edited by J. Pustejovsky and P. Sells.
GLAS.Klawtns, J. L. and Wacholder, N. (1989).
"Documentation of featuresand attributes in UDICT."
Research Report RC14251, IBM T. J.Wat:~on Research Center.Ingria, R. and Stallard, D. (1989).
"A computational mechanism forpronominal reference."
In Proceedings ofthe 27th Annual Meeting ofthe Association of Computational Linguistics, Vancouver: 262-271.Jensen, K. (1986).
"PEG: A broad-coverage computational syntax ofEnglish."
Technical Report, IBM T. J. Watson Research Center.Jensen,.
K. and Heidorn, G. (1990).
"Post-syntactic processing of argu-ments and anaphora."
Technical Report, IBM.Lappin, S. (1984).
"VP anaphora, quantifier scope, and logical form.
"Linguistic Analysis 13:273-315.Lappi~., S. In press.
"Concepts of logical form in linguistics andphilosophy."
In The Chomskyian Turn, edited by A. Kasher.
Black-well.Lappin, S. and McCord, M. (1990).
"A syntactic filter on pronominalanaphora in slot grammar."
In Proceedings, 28th Annual Meeting ofthe Association for Computational Linguistics: 135-142.Lappin, S.; Golan, I.; and Rimon, M. (1989).
"Computing GrammaticalFunctions from Configurational Parse Trees."
Technical report 88.268,IBM Scientific Center, Haifa.Larson, R. (1988).
"Scope and comparatives."
Linguistics and Philoso-phy, 11: 1-26.Larson, R. (1987).
"Missing prepositions and the analysis of English freerelatives."
Linguistic Inquiry, 13:273-315.McCord, M. C. (1990).
"SLOT GRAMMAR: A system for simplerconstruction of practical natural language grammars."
To appear inNatural Language and Logic, International Scientific Symposium,edited by R. Studer, Lecture Notes in Computer Science, SpringerVerlag, 118-145.McC.ord, M. C. (1989a).
"Design of LMT: A prolog-based machinetran:dation system."
Computational Linguistics, 15: 33-52.McC, ord, M. C. (1989b).
"A new version of slot grammar."
Researchreport RC 14506, IBM Research Division, Yorktown Heights, NY10598.McCord, M. C. (1989c).
"A new version of the machine translationsystem LMT."
Journal of Literary and Linguistic Computing, 4:218-229.McC.ord, M. C. (1989d).
"LMT."
In Proceedings ofthe MT Summit II,Deutsche Gesellschaft fiir Dokumentation, Frankfurt, 94-99.McCord, M. C. (1988).
"A multi-target machine translation system."
InProceedings, International Conference on Fifth Generation ComputerSystems, 1988, Institute for New Generation Computer Technology,Tokyo, Japan, 1141-1149.McCord, M. C. (1987).
"Natural anguage processing in prolog."
In210 Comp~ltational Linguistics Volume 16, Number 4, December 1990Shalom Lappin and Michael McCord Anaphora Resolution in Slot GrammarKnowledge Systems and Prolog: .4 Logical Approach to Expert Sys-tems and Natural Language Processing, edited by A. Walker, M. C.McCord, J. F. Sowa, and W. G. Wilson, Addison-Wesley.McCord, M. C. (1986).
"Design of a prolog-based machine translationsystem."
In Proceedings of the Third International Logic Program-ming Conference, Springer-Verlag, Berlin, 350-374.McCord, M. C. (1985).
"Modular logic grammars."
InProceedings, 23rdAnnual Meeting of the Association for Computational Linguistics,104-117.McCord, M. C. (1984).
"Semantic interpretation for the EPISTLEsystem."
In Proceedings, Second International Logic ProgrammingConference, Uppsala, Sweden, 65-76.McCord, M. C. (1982).
"Using slots and modifiers in logic grammars fornatural language."
Artificial Intelligence, 18: 327-367.McCord, M. C. (1980).
"Slot grammars."
Computational Linguistics,6: 31-43.May, R. In press.
"Syntax, semantics, and logical form."
In The Chomsky-ian Turn, edited by A. Kasher.
Blackwell.May, R. (1985).
Logical Form: Its Structure and Derivation.
The MITPress, Cambridge, MA.Reinhart, T. (1984).
Anaphora.
Croom Helm.Reinhart, T. (1981).
"Definite NP anaphora nd c-command domains.
"Linguistic Inquiry, 12: 605~35.Reinhart, T. (1976).
The syntactic domain ofanaphora.
Doctoral disser-tation, MIT, Cambridge, MA.Sag, I.
(1976).
Deletion and logical form.
Doctoral dissertation, MIT,Cambridge, MA.Walker, A.; McCord, M. C.; Sowa, J. F.; and Wilson, W. G. (1987).Knowledge Systems and Prolog: ,4 Logical Approach to Expert Sys-tems and Natural Language Processing.
Addison-Wesley.Wasow, T. (1972).
Anaphora in generative grammar.
Doctoral disserta-tion, MIT, Cambridge, MA.Webber, B.
(1978).
A formal approach to discourse anaphora.
Doctoraldissertation, Harvard University, Cambridge, MA.Williams, E. (1977).
"Discourse and logical form."
Linguistic Inquiry,8" 107-139.NOTES1.
Earlier versions of the paper were presented to the SRI naturallanguage group at Menlo Park, CA in June, 1990, and to the AT&TBell Laboratories natural language and speech generation group atMurray Hill, NJ in July, 1990.
We are grateful to the participants ofthese two forums for their comments.
We thank Mori Rimon fordetailed and useful comments on an earlier version of the paper.
Wealso very much appreciate he careful reading of the paper and thesuggestions ofthree anonymous referees.
We would particularly iketo express our thanks to Fernando Pereira nd Mary Dalrymple forextended discussion of this paper and the problems involved in VPanaphora resolution.
Their own work in this area has provided uswith considerable stimulation and insight.2.
See Reinhart (1976, 1981, 1984), and Chomsky (1981, 1986b) foralternative definitions of c-command, and discussions of the role ofc-command in determining the possibilities for anaphora.
See Lap-pin and McCord (1990) for comparisons between the pronominalanaphora filter in Slot Grammar and recent implementations ofChomsky's binding theory in GB-based parsers.3.
Shortly after we designed and implemented these three algorithmsin Slot Grammar, Karen Jensen constructed three alternative proce-dures for anaphora resolution in the PEG grammar (see Jensen 1986for a general description of PEG).
Moreover, George Heidorn hasimplemented a version of our filter on pronominal naphora in PEG.Jensen's procedures and Heidorn's implementation f our filteralgorithm rely on and apply after a set of socond-pass operations thatcomprise a module referred to as PEGASUS.
This module computesdeep grammatical roles from the surface configurational structuresconstituting the PEG parse.
(See Jensen and Heidorn 1990 for abrief description ofPEGASUS and an outline of Jensen's anaphoraresolution procedures.)
Bycontrast, inSlot Grammar deep grammat-ical roles are obtained irectly in the course of parsing, through theunification of complement "marker variables" with variables in theargument frames of their heads.
While PEGASUS reconstructsdeep grammatical role information (primarily) from surface config-urational relations, the representation f these roles in Slot Gram-mar is lexically driven and is an integral part of the parsing process.Therefore, where Jensen's anaphora resolution procedures operateon the output of a second-pass module (they are, in effect, third-passrules), our algorithms are formulated in terms of the head-complement s ructures provided directly by the Slot Grammarparser.
See McCord (1984) and Lappin et al (1989) for earliersystems that compute deep grammatical roles from PEG's surfaceparse structures.4.
The list of complement slots in the argument frame of a verbincludes its subject.
Therefore, SG represents argument s ructure ina manner analogous to that of LFG in that it makes no structuraldistinction between the subject as an external argument of a VP andthe internal arguments of the verb, as does Government Bindingtheory.5.
The distinction between slot filler rules and ordering constraintsparallels the difference between immediate dominance rules andlinear precedence rules in GPSG.
See Gazdar et al (1985) for acharacterization of ID and LP rules in GPSG.
See McCord (1989b)for more discussion of the relation of Slot Grammar to othersystems.6.
IP is an inflectional phrase, the category to which sentences corre-spond in current versions of X' theory.
See Chomsky (1986b) fordetails of the IP analysis of sentences.7.
May's QR-based analysis of VP anaphora extends everal of theideas concerning the interaction ofquantified NPs and VP anaphoraoriginally proposed in Sag (1976).
Webber (1978) adopts andmodifies Sag's approach to VP anaphora within a computationallyoriented framework.
See Lappin (1984) for discussion of some of thedifficulties that arise with Sag's original analysis.
Lappin (in press)presents more detailed criticism of May's account, and of a variantof this analysis proposed in Haik (1987).
This paper also deals withLarson's (1987, 1988) extension of May's account in ACD struc-tures in adverbial phrases.
Other treatments of VP anaphora rediscussed, and motivation isgiven for the S-structure interpretationview adopted here.
In the following, we limit ourselves to a briefpresentation f two main arguments against the LF approach to VPanaphora resolution, and a summary of the S-structure alternativethat we propose.8.
See Chomsky 1981 and 1986b for formulations of subjacency andarguments o the effect hat it is an S-structure constraint.
Haikpresents an LF analysis of VP anaphora that classifies an emptyantecedent-contained VP as a variable bound by a wh-(or empty)operator at S-structure.
While Haik's account permits ubjacency toconstrain ACD structures, it requires that the VP variable bereanalyzed as an NP trace at LF in order to obtain a structure like 3.This is an ad hoc and otherwise unmotivated device.
See Lappin (inpress) for more detailed iscussion of Haik's proposal.9.
See Bresnan (1975) and Chomsky (1977) for the classical discussionof subdeletion.10.
The idea that empty VPs are structured was initially proposed inWasow (1972) and adopted in Williams (1977).11.
See Lappin (1984) and the references cited there for discussions ofintersentential VP anaphora.12.
The VP anaphora lgorithm identifies an elided VP by the presenceof a bare auxiliary or infinitival complementizer.
Therefore, it willnot deal with elided VPs that are not introduced by auxiliaries or thecomplementizer "to," as in (i)a-b.(i)a.
John wrote more papers than Mary.b.
Bill arrived before Lucy.Complex syntactic and semantic factors must be invoked to distin-Computational Linguistics Volume 16, Number 4, December 1990 211Shalom Lappin and Michael McCord Anaphora Resolution in Slot Grammar13.14.guish "bare" VP ellipsis cases of this sort from structurally similarsentences that do not contain elided VPs, such as (ii)a-b.(ii)a.
John gave more papers than books to Mary.b.
Bill arrived before the beginning of the concert.Extending the algorithm to cover "bare" VP ellipsis is clearly anontrivial task, which is beyond the scope of our current work.
Wehope to take up this matter in future research.Unlike the examples where the elliptical verb is identified by theauxiliary "do," the elliptical verb in 19 is represented by theauxiliary "be" rather than the antecedent verb in the list of ellipticalverb-new argument pairs.
This is due to the fact that with auxiliariesother than "do" the algorithm copies the elliptical verb immediatelyafter the auxiliary in the interpreted tree, while in the case of "do"the antecedent is substituted for the auxiliary.
The filtering compo-nent of the algorithm applies after the antecedent has been insertedinto the new tree, and so it identifies the antecedent with theelliptical verb for purposes of listing new arguments and adjunctswhen the antecedent replaces the auxiliary, but not otherwise.Unfortunately, Condition III also incorrectly blocks coreference incases like (i)a-b, (discussed in, for example, Reinhart (1981)) when"near him" is taken as an adverb modifying the head verb "saw."(i)a.
Dani saw a snake near him i.b.
Near him~, Dan i saw a snake.The problem with the cases of this kind is that the possibilities forpronominal coreference are notoriously susceptible to lexical varia-tion, as indicated by (ii)-(iii).(ii)a.
John~ took a book with him~.b.
*John i took a walk with him~.(iii)a.
Maryi heard music near herl.b.
?
?Mary~ played music near her~.A variety of syntactic and lexical semantic factors seem to beinvolved in determining the possibility of coreference in these cases.However, when no complement intervenes between the subject of averb and the pronominal object of its PP adjunct, coreference isalways excluded.
In light of this fact and the lexically governedcomplexity of the coreference patterns in structures like (i)-(iii), weh~tve decided to retain Condition III in its present general form.Clearly, it would be desirable to refine it to allow for the distinctionsillustrated in the examples given here.15.
Dalrymple, Shieber, and Pereira (1990) obtain both scope readingsfi~r 47 by permitting interaction between storage and an equationalprocedure for ellipsis resolution.
This procedure involves olving anequation in which the interpretation f the source clause appears onone side and a predication containing a higher order propertywxiable corresponding to the ellided VP is on the other.
Therepresentation f the source clause in the equation can contain eithera released or an unreleased stored NP interpretation.
Lappin (1984)employs an analogous free interaction between NP storage andinterpretation to derive both the globally wide and locally (conjunct)wide readings of "many windows" in (i).
Sentences of this kind wereoriginally discussed in Hirshbuhler (1982).
(i) A Canadian flag was hanging in front of many windows, and anAmerican flag was too.16.
It will be necessary to constrain copying at all levels by the filter onpronominal naphora, as the possibilities for pronominal coreferencein ellided VPs are restricted by the conditions that the filter imple-ments.
Thus, even if only the marker variable of a pronoun isinherited by an interpreted verb, it will be identified as the (denota-tion) marker variable of a pronoun, and subject o the pronominalcoreference filter within the VP that the interpreted verb heads.Similarly, copying of reciprocal NPs must be restricted by theanaphor binding algorithm at every level of copying.
The situationwith respect to reflexives i  less clear, given the possibility of strict aswell as sloppy readings for reflexives in the interpretation of ana-phoric VPs.17.
The variable of the wh-phrase (which unifies with that of the headnoun of the relative clause) fills the object slot in the frame of theelliptical (auxiliary) verb in the original tree.
It is correctly reana-lyzed as filling the indirect object slot of the substituted verb.212 Computtational Linguistics Volume 16, Number 4, December 1990
