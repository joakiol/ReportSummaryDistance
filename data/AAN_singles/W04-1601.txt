Computer Processing of Arabic Script-based Languages:Current State and Future DirectionsAli FarghalySYSTRAN Software, Inc.9333 Genesee  AveSan Diego, CA 92121, USAalifarghaly@aol.comArabic script-based languages do not belong to a single language family, and therefore   exhibitdifferent linguistic properties.
To name just a few:  Arabic is primarily a VSO languagewhereas Farsi  is an SVO  and  Urdu is an SOV language.
Both Farsi and Urdu have light verbswhereas Arabic does not.
Urdu and Arabic have grammatical gender while Farsi does not.There are, however, linguistic and non-linguistic factors that bring these languages together.
Onthe linguistic side it is the use of the Arabic script, the right to left direction, the absence ofcharacters representing short vowels  and the complex word structure.
Non-linguistic commonproperties that bind the majority of speakers of these languages include:  the Qur?an that everyMoslem has to recite in Arabic,  proximity of the countries speaking these languages,  commonhistory and, to a large extent, a common culture and historical influx .
It is not surprising, then,that the surge of interest in the study of these languages and the sudden availability for fundingto support the development of  computational applications to process data in these languagescome for all these languages at the same time.This also occurs at crucial period in the field of Natural Language Processing (NLP).
It isbecoming increasingly evident that statistical and corpus-based approaches, though necessary,are not sufficient to address all issues involved in building viable applications in NLP.
Arabicscript-based languages share in different degrees an explosion of  homograph and word senseambiguity.
The absence of the representation of short vowels in normal texts dramaticallyincreases the number of ambiguities.
At SYSTRAN, the average number of ambiguities of atoken in many languages is 2.3, whereas in Modern Standard Arabic, it reaches 19.2.
Dealingwith such a problem represents a real challenge to NLP systems.
Resolving ambiguity in NLPrequires representation not only of linguistic and contextual knowledge but also of domain andworld knowledge.
It is not clear how number crunching of linguistic data could address thisproblem.
Ambiguity in Arabic is enormous at every level: lexical, morphological andsyntactic.
Another serious problem is tokenization.
It is extremely common in Arabic to find atoken such as  ??????????????
which is actually a sentence consisting of a conjunction, a verb, asubject, an object in that order.
Moreover, within the verb itself,  there is tense, number andgender and mood.
Within the object, which is only two alphabet letters, there is number, genderand case.
The complexity of tokens and the abstractness of information, such as the meaningsof   prosodic templates (McCarthy, 1981), present challenges in the processing of Arabicscript?based languages.There has been steady progress in computational processing of Arabic  script-based languagesin the last few years.
The greatest leap since the pioneering   efforts made in the early 1980s inArabic computational linguistics (Hlal, 1985;Ali 1985, 1987, 1988; Geith 1988; Farghaly,1987), is the availability of  Buckwalter?s morphological analyzer and dictionary which hasrecently given a boost  in that area.
The great work at the LDC in the creation of a corpus ofwritten and spoken Arabic as well as the Arabic tree bank is another important  resource  to thepractitioners in the field.
What is urgently needed in future research is work on syntacticanalysis and ambiguity resolution.
