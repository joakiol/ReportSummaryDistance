Proceedings of EACL '99Repair Strategies for Lexicalized Tree GrammarsPatrice LopezLORIA,BP239, 54500 Vandoeuvre,FRANCElopez@loria.frAbstractThis paper presents a framework for thedefinition of monotonic repair rules onchart items and Lexicalized Tree Gram-mars.
We exploit island representationsand a new level of granularity for thelinearization of a tree called connectedroutes.
It allows to take into account hetopology of the tree in order to triggeradditional rules.
These local rules coverellipsis and common extra-grammaticalphenomena such as self-repairs.
First re-sults with a spoken language corpora represented.IntroductionIn the context of spoken task-oriented man-machine and question-answering dialogues, one ofthe most important problem is to deal with spon-taneous and unexpected syntactical phenomena.Utterances can be very incomplete and difficultto predict which questions the principle of gram-maticality.
Moreover large covering rammars aregenerally dedicated to written text parsing andit is not easy to exploit such a grammar for theanalysis of spoken language ven if complex syn-tax does not occur.For such sentences, robust parsing techniquesare necessary to extract a maximum of informa-tion from the utterance ven if a Complete parsingfails (at least all possible constituents).
Consid-ering parsing of word-graphs and the large searchspace of parsing algorithms in order to compute allpossible ambiguities, the number of partial parsescan be very important.
A robust semantic pro-cessing on these partial derivations would result ina prohibitive number of hypotheses.
We argue inthis paper that appropriate syntactical constraintsexpressed in a Lexicalized Tree Grammar (LTG)can trigger efficient repair rules for specific oralphenomena.First results of a classical grammatical parsingare presented, they show that robust parsing needto cope with oral phenomena.
We argue then thatextended omain of locality and lexicalization ofLTG can be exploited in order to express repairlocal rules for these specific spoken phenomena.First results of this approach are presented.1 LTG parsing and repairingstrategy1.1 Exper imenta l  resultsTable 1 presents parsing test results of the Go-cad corpora.
This corpora contains 861 utterancesin French of transcribed spontaneous spoken lan-guage collected with a Wizard of Oz experiment(Chapelier et al, 1995).
We used a bottom-upparser (Lopez, 1998b) for LTAG.
The size of thegrammar was limited compared with (Candito,1999) and corresponds to the sublanguage used inthe Gocad application.
However designing princi-ples of the grammar was close to the large coveringFrench LTAG grammar just including additionalelementary trees (for example for unexpected ad-verbs which can modify predicative nouns) and anotation enrichment for the possible llipsis occur-rences (Lopez, 1998a).
The LTAG grammar forthe sublanguage corresponds to a syntactical lex-icon of 529 entries and a set of 80 non-instanciedelementary trees.A taxonomy of parsing errors occurring in oraldialogue shows that the majority of failures arelinked to orality: hesitations, repetitions, self re-pairs and some head ellipsis.
The table 2 gives theoccurrence of these oral phenomena in the Gocadcorpora.
Of course more than one phenomenoncan occur in the same utterance.Prediction of these spoken phenomena would re-sult in a very high parsing cost.
However if wecan detect hese oral phenomena with additionaltechniques combining partial results, the numberof hypotheses at the semantic level will decrease.249Proceedings of EACL '99Corpus % complete \] Average noparses , of parses/utter.Cocad II 78.3 II 2.oAverage no ofpartial results/utter.7.1Table 1: Global results for the parsing of the Gocad corpora utterancesill-formed with with with I agrammaticalutterances hesitations repetitions self-repairs \[ ellipsisOccurrences II 123 II 28 22 II 15Table 2: Occurrences of error oral phenomena in the Gocad corpora1.2 Exp lo i t ing  Lexical ized TreeGrammarsThe choice of a LTG (Lexicalized Tree Grammar),more specifically a LTAG (Lexicalized Tree Adjo-ing Grammar), can be justified by the two mainfollowing reasons: first the lexicalization and theextended omain of locality allow to express easilylexical constraints in partial parsing trees (elemen-tary trees), secondly robust bottom-up arsing al-gorithms, stochastic models and efficient precom-pilation of the grammar (Evans and Weir, 1998)exist for LTG.When the parsing of an utterance fails, a ro-bust bottom-up algorithm gives partial derivedand derivation trees.
With a classical chart pars-ing, items are obtained from other items and cor-respond to a well-recognized chunk of the utter-ance.
The chart is an acyclic graph representingall the derivations.
A partial result correspondsto the maximal expansion of an island, so to anitem which is not the origin of any other item.The main difference between a Context FreeGrammar and a Lexicalized Tree Grammar is thata tree directly encodes for a specific anchor a par-tial parsing tree.
This representation is richerthan a set of Context Free rules.
We argue thatwe can exploit this feature by triggering rules notonly according to the category of the node N cor-responding to an item but considering some nodesnear N.2 I s land  representat ion  andconnected  routes  in  repa i r  loca lru les2.1 Finite States Automatarepresentation of an  elementary treeThe linearization of a tree can be representedwith a Finite State Automaton (FSA) as in figure2.
Every tree traversal (left-to-right, bidirectionalfrom an anchor, ...) can be performed on this au-tomaton.
Doted trees used for example in (Sch-abes, 1994) are equivalent to the states of theseautomata.
It is then possible to share all the FSAof a lexicalized grammar in a single one with tech-niques presented in (Evans and Weir, 1998).~ S<>S N$ V <> V SFigure 2: Simple FSA representing an elementarytree for the normal form of French intransive verb.We consider the following definitions and nota-tions :Each automaton transition is annotated witha category of node.
Each non-leaf node ap-pears twice in the list of transition fram-ing the nodes which it dominates.
In orderto simplify our explanation the transition isshown by the annotated category.Transitions can be bidirectional in order tobe able to start a bidirectional tree walk of atree starting from any state.?
Considering a direction of transition (left-to-right, right-to-left) the FSA becomes acyclic.2.2 Parsing invariant and is landrepresentationA set of FSA corresponds to a global represen-tation of the grammar, for the parsing we usea local representation called item.
An item isdefined as a 7-tuple of the following form:250Proceedings of EACL '99(a) Ru le  for hes i tat ions  :(i, j, rE, fR) (j, k, f?, f~) (k, l, o~, f~)(i, k, fL ,  fiR) (k, l, f~,  o'~) (head(F'L) = tail(F'R) = H)(b) Ru le  for head ell ipsis on  the left :(i, j, aL, aR) (j, k, a~, a~) (tait(rR) = X ,(i, k, aL, a~) head(UL) = X*)n ((head(r'L) = X $n ta/l(r~) = X $))V(c) Rule  for a rgument  ell ipsis on the right :(i, j, oL, fR) (ta/l(rR) = X ~)(i, j, fL,  next(rR))(d) Ru le  1 for self  repa i r  :O-r O-t (i,j, aL,aR) (j,k, L, R/(i, k, aL, a'R)(3i = (v, w, a~, a~) E A, i ~* (i, j, aL, aR)(3X 6 r'~ A head(F~L) = X*)V(tail(r'~) = x $ i head(F'L) = X ~))AFigure 1: Example of repair rulesitem: ( left index, right index,left state, right state,foot left index,foot right index, star state)The two first indices are the limits on the in-put string of the island (an anchor or consecutiveanchors) corresponding to the item.
During theinitialization, we build an item for each anchorpresent in the input string.
An  item also storestwo states of the same FSA corresponding to themaximal extension of the island on the left andon the right, and only if necessary we representtwo additional indices for the position of the footnode of a wrapping auxiliary tree and the statestar corresponding to the node where the currentwrapping adjunction have been predicted.This representation maintains the following in-variant: an item of the form (p, q, fL, O'R) specifiesthe fact that the linearized tree represented by aFSA A is completely parsed between the statesaL and ct R of A and between the indices p and q.No other attachment on the tree can happen onthe nodes located between the anchors p and q-1.2.3 Connected  routesConsidering an automaton representing the lin-earization of an elementary tree, we can define aconnected route as a part of this automaton corre-sponding to the list of nodes crossed successivelyuntil reaching a substitution, a foot node or a rootnode (included transition) or an anchor (excludedtransition).
Connected route is an intermediatelevel of granularity when representing a linearizedtree: each elementary (or a derived tree) can berepresented as a list of connected routes.
Consid-ering connected routes during the parsing permitsto take into account he topology of the elemen-tary trees and to locate significative nodes for anattachment (Loper, 1998b).
We use the followingadditional simplified notations :?
The connected route passing through thestate ad is noted Fd.?
next(r) (resp.
previous(F)) gives the firststate of the connected route after (resp.
be-fore) F according to a left-to-right automatonwalk.?
next(N) (resp.
previous(N)) gives the stateafter (resp.
before) the transition N.?
headiF. )
(resp.
tail(F)) gives the first right(resp.
left) transition of the leftmost (resp.rightmost) state of the connected route F.2.4 In ference rules sys temThe derivation process can be viewed as infer-ence rules which use and introduce items.
Theinference rules (Schabes, 1994) have the followingmeaning, if q items (itemi)o<i<q are present in thechart and if the requirements are fulfilled then addthe r items (itemj)o<_j<r in the chart i\[ necessary:(item~)o<~<q ( conditions )add (itemj)o<j<r)We note O* the reflexive transitive closureof the derivation relation between two items: ifil ~*  i2 then the item identified with i2 can be ob-tained from il after applying to it a set of deriva-tions.
We note a root node with $.Figure 1 presents examples of repair rules.
Thisadditional system deals with the following phe-nomena:251Proceedings of EACL '99ill-formedutterances% Correctlyrecoveredwith ii  ith L with unexpectedhesitations repetitions self-repairs ellipsisTable 3: Repair results for the Gocad corpora?
Hesitations : Rule (a) for hesitations absorbsadjacent initial trees whose head is a H node.Such a tree can correspond to different kindof hesitation.?
Ellipsis : two rules and their symmetrical con-figurations try to detect and recover espec-tively an empty head (b) and an empty argu-ment (c).?
Self-repair : The (Cori et ai., 1997) definitionof self repairs tipulates that the right side ofthe interrupted structure (the partial derivedtree on the left of the interruption point) andthe reparandum (the adjacent syntactic is-land) must match.
Instead of modifing theparsing algorithm as (Cori et al, 1997) do, weconsider a more expressive connected routematching condition.
Rule (d) deals with self-repair where the repaired structure has beenconnected on the target node.3 First  resul tsThe rules has been implemented in Java and areintegrated in a grammatical environment systemdedicated to design and test the parsing of spo-ken dialogue system sublangages.
We use a twostage strategy (Ros@ and Lavie, 1997) correspond-ing to two sets of rules: the first one is the setfor a bottom-up arsing of LTAG using FSA andconnected routes (Lopez, 1998b), the second onegathers the repair rules presented in this paper.This strategy separates parsing of grammaticalutterances (resulting from substitution and ad-junction) from the parsing of admitted utterances(performed by the additional set).
This kind ofstrategy permits to keep a normal parsing com-plexity when the utterance is grammatical.
Wepresent in table 3 statistics for the parsing repairsof the Gocad copora.Discuss ionConnected routes give robustness capacities in aLexicalized Tree Framework.
Note that the re-sults has been obtained for transcribed spokenlanguage.
Considering parsing of word-graphs re-sulting from a state-of-the-art HMM speech recog-nizer, non-regular phenomena encountered in spo-ken language might cause a recognition error ona neighbouring word and so could not always bedetected.To prevent overgeneration during the secondstage, both semantic additional well-formed crite-ria and a restrictive scoring method can be used.Future works will focus on a mecanism which al-lows a syntactic and semantic ontrol in the caseof robust parsing based on a LTAG and a syn-chronous Semantic Tree Grammar.ReferencesMarie-H@l~ne Candito.
1999.
Structuration d'unegrammaire LTAG : application au fran ais et dl'italien.
Ph.D. thesis, University of Paris 7.Lanrent Chapelier, Christine Fay-Varnier, andAzim Roussanaiy.
1995.
Modelling an Intel-ligent Help System from a Wizard of Oz Exper-iment.
In ESCA Workshop on Spoken DialogueSystems, Vigso, Danemark.Marcel Cori, Michel de Fornel, and Jean-MarieMarandin.
1997.
Parsing Repairs.
In Rus-lan Mitkov and Nicolas Nicolov, editors, Recentadvances in natural language processing.
JohnBenjamins.Roger Evans and David Weir.
1998.
A structure-sharing parser for lexicaiized grammars.
InCOLING-ALC, Montr@al, Canada.Patrice Lopez.
1998a.
A LTAG grammar forparsing incomplete and oral utterances.
InEuropean Conference on Artificial Intelligence(ECAI), Brighton, UK.Patrice Lopez.
1998b.
Connection driven pars-ing of Lexicalized TAG.
In Workshop on Text,Speech and Dialog (TSD), Brno, Czech Repub-lic.C.P.
Ros@ and A. Lavie.
1997.
An efficient dis-tribution of Labor in Two Stage Robust In-terpretation Process.
In Proceeding of Empir-ical Methods in Natural Language Processing,EMNLP'97, Rhode Island, USA.Yves Schabes.
1994.
Left to Right Parsing ofLexicalized Tree Adjoining Grammars.
Com-putational Intelligence, 10:506-524.252
