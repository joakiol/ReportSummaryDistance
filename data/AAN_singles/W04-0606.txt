Converting Mikrokosmos frames into Description LogicsP.J.
Beltra?n-Ferruz and P.A.
Gonza?lez-Calero and P.Gerva?sGAIA - Applied Articial Intelligence GroupDep.
Sistemas Inform?aticos y Programaci?onUniversidad Complutense de MadridC/ Juan del Rosal, 8.
28040 Madrid (Spain)pablo@fdi.ucm.es, {pedro,pgervas}@sip.ucm.esAbstractMikrokosmos contains an ontology plus a numberof lexicons in different languages that were origi-nally developed for machine translation.
The under-lying representation formalism for these resourcesis an ad-hoc frame-based language which makes itdifficult to inter-operate Mikrokosmos with state-of-the-art knowledge-based systems.In this paper we propose a translation from theframe-based representation of Mikrokosmos intoDescription logics.
This translation allows us toautomatically transform Mikrokosmos sources intoOWL and thus provide a powerful ontology in theformalism of the semantic web.
Furthermore, thereasoning mechanisms of Description Logics mayalso support knowledge acquisition and mainte-nance as well as its application in natural languageprocessing systems.1 IntroductionThe Mikrokosmos project was originally an interlin-gual system for Knowledge-Based Machine Trans-lation (KBMT) (Nirenburg, 1987) developed in theComputing Research Laboratory from New MexicoState University.
Although KBMT was conceivedfor translation of domain specific texts, no furtherrestrictions are imposed in the contents of the text.Therefore the creators of Mikrokosmos built a richontology that contains a lot of general concepts,more than 4.700 concepts that are connected withan average of other 14 concepts using attributes andrelations (de Quesada, 2001).KBMT is an expensive approach that requiresa big effort on knowledge acquisition, and it hasbeen considered impractical by some authors.
Forthat reason, the creators of Mikrokosmos were es-pecially concerned about developing real-size sys-tems that would demonstrate the feasibility of theirapproach.
Generating contents for the ontology wastheir first concern, while the use of a rigorous for-malism for knowledge representation was not con-sidered a priority (Moreno-Ortiz et al, 2002).The work presented here is an effort to portMikrokosmos into Description Logics (DL) in or-der to incorporate this resource into the systems weare developing.
Our work on natural language gen-eration integrates ontologies and case-based reason-ing (CBR) (Diaz-Agudo et al, 2002), an approachthat heavily relies on classification-based reasoningfrom DL.Representing Mikrokosmos in DL should bringseveral benefits.
Since DL is the underlying knowl-edge representation approach in the Semantic Web,a big number of supporting tools are being de-veloped for acquiring and maintaining ontologiesrepresented in some version of DL, such as OWL(Bechhofer et al, 2004).
Giving a well-foundedformal representation to Mikrokosmos should im-prove its quality by uncovering inconsistencies.
Fi-nally, porting Mikrokosmos to a formalism as pop-ular as OWL will definitively increase its potentialuser community.There are other efforts that convert ontologiesfrom different representations to Description Log-ics languages.
OntoMap is a web-site that pro-vides access to upper-level ontologies and hand-crafted mappings between them (Kiryakov et al,2001).
The initial set of ontologies contains Cyc,EuroWordnet and Mikrokosmos ontology, but itonly deals with the top-level hierarchy.
In case ofMikrokosmos it only contains 13 concepts.
Theirmain effort involves the mapping between differ-ent ontologies.
They also provide the resources inDAML+OIL.
The project?s goal is to facilitate easyaccess, understanding, and reuse of general-purposeontologies and upper-level models.The rest of this paper runs as follows.
Nextsection describes the frame-based language used inMikrokosmos ontology, and Section 3 describes theDL which is the target of the translation.
Section 4is dedicated to the mapping process and Section 5evaluates this process.
Section 6 points out futurework, and finally Section 7 concludes the paper.Concept Slot Facet Filler(s)REPLACEMENT-FOR DEFINITION VALUE ?when x is a replacement for y?IS-A VALUE PHYSICAL-OBJECT-RELATION, EVENT-RELATIONINVERSE VALUE REPLACED-BYDOMAIN SEM EVENT, OBJECTRANGE SEM EVENT, OBJECTTable 1: Example frame: REPLACEMENT-FORFigure 1: Mikrokosmos top hierarchy2 Mikrokosmos ontologyIn Mikrokosmos, ontology lists the definitions ofconcepts that are understood as corresponding toclasses of thing and events in the world.
Conceptsare primitive symbols of a world model which in-cludes objects, events and properties organized ina complex hierarchy of language-independent con-cepts (See top hierarchy of Mikrokosmos in Figure1).
The concepts are constructed following super or-dinates, or hyponymy relations (IS-A links).
In ad-dition to its organization into a taxonomy via IS-Alinks, the ontology contain numerous other links be-tween concepts, such as links using properties (Lon-ergan, 2001).
For example DECEMBER has a rela-tion with WINTER using the property PART-OF-OBJECT.Each concept that makes up the ontology is lan-guage independent and is represented using frames.For example we can see the frame for conceptREPLACEMENT-FOR in Table 1.The format of Mikrokosmos Ontology is de-scribed in detail in (Nirenburg and Raskin, 2004).It formally introduces the syntax and the semanticsof the ontology using a BNF grammar.
We are mostinterested in how we can access to this information.Ontology is saved in a text file using Spencer no-tation that is based on XML.
There is another nota-tion called Beale notation that is based on Lisp, butwe will focus on Spencer notation.In the XML based format we have the whole on-tology represented in a list of RECORD entries.Definition of one CONCEPT requires one or moreof these RECORD entries.
Each entry contains fourfields, that are: CONCEPT, SLOT, FACET, andFILLER.The CONCEPT field can be filled by any Nameof a concept of the ontology.The second field in each entry is SLOT.
Thisfield can be filled with PROPERTY or any of itssubclasses using IS-A links.
There are two kindof slot llers.
One type are descendants of AT-TRIBUTE or RELATION, that represent links be-tween concepts in the hierarchy.
The other type aredescendants of ONTOLOGY-SLOT.
We will callthem special slots, and all of them have the sense ofdetermining the structure of the ontology.
Possibledescendants of ONTOLOGY-SLOT are: DEFINI-TION, DOMAIN, INSTANCES, INVERSE, IS-A,RANGE, SUBCLASSES and some others that areless important; later in this section we will explainthem in detail.The third field is FACET, and it describes somefiner distinctions between the possible fillers of theslot.
Possibles FACET fillers are: VALUE, SEM,DEFAULT, INV, NOT, DEFAULT, DEFAULT-MEASURE and RELAXABLE-TO.The last field is FILLER, and its value dependson the other fields, but generally it contains either aName of a concept of the ontology or an instance.Initially we can think that there are no restrictionsin these representations, but there are some spe-cial slots that limit expressiveness.
All CONCEPTframes have non-special and special slots.
Specialslots for all kinds of concepts are:?
DEFINITION: Definition in English of theconcept.?
IS-A: It is used for asserting parents in the hi-erarchy.?
SUBCLASSES: It is used for listing conceptchildren.?
INSTANCES, SPANISH1, ENGLISH1: Theyare only used in the leaves of OBJECT andEVENT, and contains words of the dictionary.Special slots which can only be present inall PROPERTY and only in PROPERTY conceptframes are:?
DOMAIN: It has fillers usually filled withEVENTs1 and/or OBJECTs and it determineswhether a CONCEPT can have it as a SLOT.?
RANGE: It is used in RELATIONs and AT-TRIBUTEs.
In RELATIONs the RANGE slothas only the SEM facet.
The fillers of the SEMfacet are the names of concepts that are in therange of this RELATION.
In ATTRIBUTEsthe RANGE slot has only a VALUE facet.
TheVALUE facet is filled by all the possible literalor numerical values permissible for that AT-TRIBUTE.
The filler can also be a numericalrange specified using appropriate mathemati-cal comparison operators (such as >, <, ...).?
INVERSE: It is defined only for RELATIONs.It is mandatory for all RELATION frames.
TheINVERSE slot has only the Value facet whichis filled by the name of the RELATION whichis the Inverse of the given RELATION.?
MEASURED-IN: It is defined only for the de-scendants of the SCALAR-ATTRIBUTE con-cept frame.
The MEASURED-IN slot is usedto add a measuring unit for the number orscalar range that fills facets of the RANGE slotin SCALAR-ATTRIBUTE concept frames.The facet fillers of the MEASURED-INslot are the daughters of the MEASURING-UNIT concept.
The MEASURED-IN slotis used only in those SCALAR-ATTRIBUTEframes where MEASURING-UNIT has physi-cal sense (e.g.
for SIZE, AGE, etc.
).3 Description logics language: SHIQDL are a family of logical formalisms that origi-nated in the field of artificial intelligence as a toolfor representation of conceptual knowledge.
Sincethen, DLs have been successfully used in a widerange of application areas such as knowledge repre-sentation, reasoning about class-based formalisms(e.g.
conceptual database models and UML dia-grams), and ontology engineering in the context ofthe semantic web.
The basic syntactic entities of DLare concepts, which are constructed from concept1In this paper when we say a concept name in plural weare refering to this concept and his children, using links IS-Adefined in the ontology.names (unary predicates) and role names (binarypredicates) using the set of concept and role con-structors provided by a particular DL (Lutz, 2003).Our interest in Mikrokosmos ontology is to mapits contents to a DL language.
We have chosenALCQHIR+ also known as SHIQ (Horrocks etal., 2000).SHIQ is the basic logic ALC augmented withqualifying number restrictions, role restrictions,role hierarchies, inverse roles, and transitive roles.ALC comprises concepts ?denoting sets?
aswell as roles ?denoting binary relations.
Unlikeroles, concepts can be compound.
Compound con-cepts are constructed by the following operators: in-tersection u, union t, complementation ?
?takingconcepts as arguments?, and the value restrictions?, and ?
?taking a role and a concept as their ar-guments.
Formally, ALC is given by the followingformation rules, where c denotes a concept symboland r a role symbol (Schild, 1991):C,D ??
c | > | C uD | ?C | ?R.CR ??
rDL SHIQ is implemented in the RACER sys-tem (Haarslev and Moller, 2003).
This makes it adesirable target representation for our ontology.
Fordescribing our ontology in SHIQ we will use thenotation explained in Table 2, that contains denota-tional semantics for our language translation.4 Mikrokosmos mapping to SHIQOnce we have identified DL language we wantto use ?SHIQ?
and we have described theMikrokosmos ontology, we can proceed to map it.The first step is to determine whether a conceptis a class or a slot.
Although in the Mikrokosmosontology everything is a concept we need to dis-tinguish between Mikrokosmos concepts that cor-respond to unary predicates ?which map to DLclasses?
and Mikrokosmos concepts that corre-spond to binary predicates ?which map to DL rela-tions.
EVENT, OBJECT and all of their subclasseswill be unary predicates so they will be classes.Meanwhile PROPERTY and all its hierarchy ex-cept ONTOLOGY-SLOTs (see Figure 1) will be bi-nary predicates so they will be slots.
There area few exceptions: concept ALL is top in DL andONTOLOGY-SLOT and all of their subclasses arenot mapped to DL language because they have the2?
(C) is the interpretation of a concept.
Interpretation of aconcept is the set of all individuals in the domain that satisfiesdescription of the concept.class-def (primitive | defined) CN CN(v| .=)>subclass-of C1 .
.
.
Cn u?2(C1) u .
.
.
u ?
(Cn)slot-constraint1 u?(slot-constraint1)...
...slot-constraintm u?
(slot-constraintm)top | thing | bottom C t ?C | C t ?C | C u ?C(C1 and .
.
.
and Cn) (?
(C1) u .
.
.
u ?
(Cn))(C1 or .
.
.
or Cn) (?
(C1) t .
.
.
t ?
(Cn))(not C) (??
(C))(one-of i1 .
.
.
in) (Pi1 t .
.
.
t Pin)slot-constraint SN >has-value C1 .
.
.
Cn u ?
SN.?
(C1) u .
.
.
u ?SN.?
(Cn)value-type C1 .
.
.
Cn u ?
SN.?
(C1) u .
.
.
u ?SN.?
(Cn)max-cardinality n C u ?
n SN.?
(C)min-cardinality n C u ?
n SN.?
(C)cardinality n C u ?
n SN.?
(C) u ?
nSN.?
(C)has-filler d u ?
SN.?
(d)slot-def SNsubslot-of SN1 .
.
.
SNn (SN v SN1) .
.
.
(SN v SNn)domain C1 .
.
.
Cn ?
SN.> v ?
(C1) u .
.
.
u ?
(Cn)range C1 .
.
.
Cn > v ?
SN.?
(C1) u .
.
.
u ?
(Cn)inverse RN (SN?
v RN)(RN?
v SN)properties transitive SN ?
S+properties symmetric (SN v SN?)(SN?
v SN)properties functional > v ?
1SNdisjoint C1 C2 .
.
.
Cn (?
(C1) v ??
(C2))covered C by C1 .
.
.
Cn ?
(C) v ?
(C1) t .
.
.
t ?
(Cn)disjoint-covered C by C1 .
.
.
Cn (?
(C1) v ??(C2))(?
(C) v ?
(C1) t .
.
.
t ?
(Cn))equivalent C C1 .
.
.
Cn (?
(C) = ?
(C1)) .
.
.
(?
(Cn?1) = ?
(Cn))instance-of i C1 .
.
.
Cn Pi v ?
(C1) u .
.
.
u ?
(Cn)related SN i j Pi v ?
SN.PjTable 2: Denotational semantics for language definitionsense of structuring the ontology.
ONTOLOGY-SLOT and all of their subclasses encode the struc-ture of the Mikrokosmos ontology.
They are notmapped as DL classes or slots.
Instead they are in-corporated into the DL definition of the Mikrokos-mos concepts that they refer to.Mikrokosmos has some information that can notbe mapped to a DL language.
We will address thisproblem in two ways.
First we will make some an-notations to class and slots that are not supportedby DL language, but which could be provided byRDFS based languages.
Second, extra informationabout slots that is not supported by DL languagewill be stored in special concepts created from thecorresponding slots.4.1 Building DL classesNow we will discuss how we extract informationstored in the XML based file to build classes in DLlanguage.The information that has to be extracted is:class-def (primitive | defined) CNsubclass-of C1 .
.
.
Cnslot-constraint1...slot-constraintmHaving identified the set of DL classes we needto identify their superclasses and slot-constraints.Information about superclasses is encoded in XMLrecords of the form shown in Figure 2.
Additionalsources of information about superclasses ?such asRECORDs where CN appears as FILLER and SUB-CLASSES appears as SLOT?
actually encode re-dundant information and are therefore discarded.<RECORD><CONCEPT> CN </CONCEPT><SLOT>IS-A</SLOT><FACET>VALUE</FACET><FILLER> Ci </FILLER></RECORD>Figure 2: XML encoding of superclass informationInformation about slot-constraints is encoded inrecords having PROPERTYs as a slot.
But there arealso some ONTOLOGY-SLOT used in class defini-tion and we will assign them a representation.We collect information about slot-constraintsfrom XML records of the form shown in Figure 3:<RECORD><CONCEPT> CN </CONCEPT><SLOT> SN </SLOT><FACET> FACET </FACET><FILLER> C </FILLER></RECORD>Figure 3: XML encoding for slot-constraintsWe obtain different information depending on thevalue of FACET?
If FACET = DEFAULT-MEASURECN slot-constraint SN value-type C is added tothe corresponding class definition.?
If FACET = DEFAULT.
This information isstored as an annotation?
If FACET = INV.
This information comes fromanother slot, that it is inverse to SN.
There is noneed to handle this information here becauseDL has automatic handling for such type of in-formation.?
If FACET = NOT.
This entry appears when werestrict inheritance of one SLOT in the hier-archy.
Information contained in Mikrokosmosabout these is affirmative information and neg-ative information, DL only uses affirmative in-formation to handle it, so we do nothing withthis information.?
If FACET = RELAXABLE-TO.
This informa-tion is stored as an annotation?
If FACET = SEMCN slot-constraint SN value-type C is added.?
If FACET = VALUECN slot-constraint SN has-value C is added.Additional information encoded in terms ofrecords with ONTOLOGY-SLOTS ?as slots?,must be handled and incorporated into the corre-sponding class definitions.The ONTOLOGY-SLOTs to be identified areDEFINITION, SPANISH1 and ENGLISH1.?
If SLOT = DEFINITION.
We will make an an-notation in class definition.?
If SLOT = SPANISH1 or ENGLISH1.
Wecreate two SLOTs called SPANISH1 and EN-GLISH1, so we can assert:slot-constraint ENGLISH1 has-filler d. 34.2 Building DL relationsInformation required to build DL relations is en-coded in XML records with ONTOLOGY-SLOTSin their SLOT field of the form shown in Figure 4<RECORD><CONCEPT> SN </CONCEPT><SLOT>SLOT</SLOT><FACET>FACET</FACET><FILLER> X </FILLER></RECORD>Figure 4: XML encoding of slot informationPossible relevant fillers of the ONTOLOGY-SLOTS are:?
DEFINITION, IS-A and SUBCLASSES: Thisinformation is handled for DL relations in thesame way as for DL classes.?
INVERSE: It can be used with SEM andVALUE FACET and represents inverse slots.slot-def SN inverses X is added.?
DOMAIN: As before when there is a restric-tion in inheritance Mikrokosmos asserts affir-mative and negative information so there isa FACET NOT that is rejected, and has notranslation to DL language.
There are morepossibilities for filling the FACET: VALUE,DEFAULT, RELAXABLE-TO and SEM, wemake no distinction among them:slot-def SN domain disjoint X1 .
.
.
Xn isadded.?
RANGE: FACET NOT is treated as above.When we have other FACETs there are twopossible kinds of FILLERs: CONCEPTS ornumeric ranges.
For CONCEPTSslot-def SN range disjoint X1 .
.
.
Xn is added.For numeric range we create a subclass ofNumeric-Range (See Figure 5 and example inFigure 6).?
MEASURED-IN: This information is consid-ered the same as RANGE.
It can only haveSEM or DEFAULT FACETs.slot-def SN range X is added.3These slots encode cross indexing with lexical informa-tion.
Another possible mapping would have been to add themas instances, but this would result in loss of this cross indexinginformation.class-def primitive Numeric-Rangeslot-constraint Left-Range-Marginmax-cardinality 1 intslot-constraint Right-Range-Marginmax-cardinality 1 intslot-def Numeric-Left-Marginrange intslot-def Numeric-Right-Marginrange intclass-def defined Numeric-Right-Rangesubclass-of Numeric-Rangeslot-constraint Right-Range-Marginmin-cardinality 1 intclass-def defined Numeric-Left-Rangesubclass-of Numeric-Rangeslot-constraint Left-Range-Marginmin-cardinality 1 intclass-def defined Numeric-Closed-Rangesubclass-of Numeric-Right-Rangesubclass-of Numeric-Left-RangeFigure 5: Range definitions<RECORD><concept>VISCOSITY</concept><slot>RANGE</slot><facet>SEM</facet><filler>(<;>; 0 1)</filler><uid>256</uid></RECORD>class-def VISCOSITYsubclass-of Numeric-Rangeslot-constraint Left-Range-Marginhas-filler 0slot-constraint Right-Range-Marginhas-filler 1Figure 6: Example of range restriction4.3 Building Mikrokosmos PROPERTYs asDL classesAs we have seen in previous subsection, not all in-formation about PROPERTYs can be mapped easilyto slots.
Because of that we have decided to includean extra hierarchy of concepts created from PROP-ERTYs.For each slot we create a class that inheritsfrom CLASS-SLOT called CLASS-<PROPERTY-NAME>.
These classes contain all informationabout the PROPERTYs that we could not representin a DL relation.For each SLOT applied to a CONCEPT we willcreate a class that inherits from CLASS-SLOT-CONCEPT called CLASS-<PROPERTY-NAME>-<CONCEPT-NAME>.
These classes have slot-constraints in order to define information not cap-tured in the respective concept.With this structure of classes we do not lose anyinformation about slots and slot-constraints but al-most all information stored in that way is not usefulfor reasoning in current tools like RACER (Haarslevand Moller, 2001).5 Evaluation of the translation processDL provide the way to carry out complex inferenceand reasoning tasks.
In order to achieve this goalour DL language is less expressive than Mikrokos-mos.
Among all restrictions in the expressiveness ofDL languages we will mention two.
DL languagesare not able to reason with default values for the re-strictions.
And they do not manage finite domainssuch as enumerates or sets.These differences in expressivity betweenMikrokosmos and our DL language has as a resultsome interesting points in the translation process.There were two possible solutions to this problem.First one was to discard all information that has nota direct mapping to our DL language.
And secondone ?which we have chosen?
is to make someartifices in order to preserve all information, butobviously we cannot reason with this information.There are two places where we have made thiskind of artifices:?
Default values: Mikrokosmos is able of man-aging default values for restrictions while DLis not.
So we have decided to store it as anannotation.?
Numeric restrictions: For example inMikrokosmos we can restrict the age of aperson to be plus than 0 and minus that 120,but our DL language is not capable.
Becauseof that we have created the complex structureof Numeric-Range concepts.So we can say that we have no loss of informationin the translation process.
But we were incapable touse all information contained in Mikrokosmos forreasoning and inference tasks.6 Applications of Mikrokosmos and futureworkOne of the distinguishing features of the origi-nal Mikrokosmos resources for machine transla-tion was the explicit isolation between the pseudo-taxonomical structure used to represent the conceptson one hand, and the particular lexical informationALLEVENTMENTAL-EVENTPASIVE-COGNITIVE-EVENTREMEMBERKNOWEMOTIONAL-EVENTACTIVE-COGNITIVE-EVENTCONSIDERSOCIAL-EVENTCHANGE-EVENTDIVIDEABSTRACT-SOCIAL-ABILITYELIMINATEPHYSICAL-EVENTAPPLY-FORCECHANGE-LOCATIONCUTJUMPCHANGE-POSITIONCLIMBMOUNTSALTARCORTAR PENSARSABERWORRYFigure 7: Mikrokosmos ontology with some instancesthat was associated with those concepts for realiza-tion in a particular language.
This peculiarity al-lowed relatively easy bidirectional translation be-tween different languages via an intermediate con-ceptual representation.Subsequent uses and/or transformations of theseresources must take into account this peculiarity.
Inour case, the work carried out so far in transport-ing the Mikrokosmos ontology to OWL has beenrestricted to the part of the ontology concernedwith the conceptual representation.
Although thistransformation already opens up avenues of re-search for knowledge representation for problemsolving (D?
?az-Agudo and Gonza?lez-Calero, 2002),the number of useful applications of the results ofthis process in the field of natural language process-ing will increase greatly once the corresponding lex-icons ?there are currently versions in Spanish andEnglish?
are also transformed into OWL.For instance, use of this resource provides themeans for intelligently substituting a given word fora different one - as required for example in our po-etry generation system (Diaz-Agudo et al, 2002)during the adaptation of the structure of poem fromthe case base to obtain a verse approximation of auser query.
Assuming that a structure such as:Sabed que en mi perfecta edad y armadocon mis ojos abiertos me he rendidoal nin?o que sabe?is ciego y desnudo.needs to be adapted, and the adaptation requires thesubstitution of the verb ?sabed?
for a related one outof a list of candidates - possibly obtained from thegiven user query - such as ?pensad?, ?cortad?
and?saltad?.
By conuslting the structure of the ontology?see extract in Figure 7 for illustration?
the sys-tem may correctly select ?pensad?
as a preferablecandidate in view of its proximity in the ontology tothe original word.Our future lines of research in this field will focusin a deeper study of which concepts are primitiveand which ones are defined.
Now we have decidedthat all concepts having any restriction are definedconcepts.
This decission was taken in orden to rea-son with the ontology but it is necessary to examineit in detail.7 ConclusionsMikrokosmos ontology is a rich and extensiveknowledge resource that was developed with a pro-prietary formalism, with a weak theoretical founda-tion.
We have analysed the contents of the ontologywhich have lead us to propose a possible translationinto description logics.All this effort of understanding Mikrokosmosontology and mapping it to a description logicslanguage has resulted in a concrete implementa-tion.
We have chosen OWL ?an RDFS basedlanguage?, in its version idOWL DL.
This versionimplements reasoning using JENA (McBride, 2001)and the DIG interface (Bechhofer et al, 2003).There are two inference engines that implement theDIG interface: RACER and FaCT4.
As part of thisimplementation we have developed an import plu-gin for Prote?ge?
2.0 (See Figure 7).With this work we can profit from all the knowl-edge stored in the Mikrokosmos ontology for othertasks related to Artificial Intelligence.
These tasksare Natural Language Processing and Knowledge-Intensive Case-Based Reasoning.
We still have totranslate the Mikrokosmos lexicon in order to fullyexploit the original resource.AcknowledgementsThe first author is supported by a FPI PredoctoralGrant form Universidad Complutense, Madrid.
The4http://dl-web.man.ac.uk/dig/Figure 8: Screen capture of Prote?ge?
2.0 withMikrokosmos ontology.work was partially funded by the Spanish Commit-tee of Science & Technology (TIC2002-01961).ReferencesSean Bechhofer, Ralf Moller, and Peter Crowther.2003.
The DIG description logic interface.
InDescription Logics 2003, CEUR Workshop Pro-ceedings.Sean Bechhofer, Frank van Harmelen, Jim Hendler,Ian Horrocks, Deborah L. McGuinness, Pe-ter F. Patel-Schneider, and Andrea Stein.
2004.Owl web ontology language reference, February.W3C http://www.w3.org/TR/2004/REC-owl-ref-20040210/.Mercedes Garc?
?a de Quesada.
2001.
Estructuradefinicional terminogrfica en el subdominio dela oncologa cl??nica.
In Estudios de LinguisticaEspa?nola, volume 14.Bele?n D?
?az-Agudo and Pedro Antonio Gonza?lez-Calero.
2002.
CBROnto: a task/method ontol-ogy for CBR.
In S. Haller and G. Simmons, edi-tors, Procs.
of the 15th International FLAIRS?02Conference (Special Track on CBR), pages 101?106.
AAAI Press.B.
Diaz-Agudo, P. Gerva?s, and P A. Gonzalez-Calero.
2002.
Poetry generation in COLIBRI.
InS.
Craw and A. Preece, editors, ECCBR 2002,Advances in Case Based Reasoning, pages 73?102.
Springer.
Lecture Notes in Artificial Intelli-gence.Volker Haarslev and Ralf Moller.
2001.
Descrip-tion of the RACER system and its applica-tions.
In Proceedubgs International Workshop onDescription Logics (DL-2001), pages 132?142,Stanford, USA.Volker Haarslev and Ralf Moller, 2003.
RACERUser s Guide and Reference Manual Version1.7.7.
Concordia University and Univ.
of Appl.Sciences in Wedel, November.
http://www.sts.tu-harburg.de/?r.f.moeller/racer/racer-manual-1-7-7.pdf.I.
Horrocks, U. Sattler, and S. Tobies.
2000.
Rea-soning with individuals for the description logicSHIQ.
In David MacAllester, editor, Proceed-ings of the 17th International Conference on Au-tomated Deduction (CADE-17), number 1831,pages 482?496, Germany.
Springer Verlag.Atanas K. Kiryakov, Marin Dimitrov, andKiril Iv.
Simov.
2001.
Ontomap - theguide to the upper-level.
In Proceedings ofSWWS?01, The rst Semantic Web Work-ing Symposium, Stanford University, Cal-ifornia, USA, July 30 - August 1, 2001.http://www.ontotext.com/publications/swws01.pdf.E.
Lonergan.
2001.
Lexical knowledge engineer-ing: Mikrokosmos revisited.
In PACLING2001- Pacic Association for Computational Linguis-tics 2001, Kitakyushu, Japan.C.
Lutz.
2003.
Description logics with concretedomains?a survey.
In Advances in Modal Log-ics Volume 4.
King?s College Publications.Brian McBride.
2001.
Jena: Implementing the rdfmodel and syntax specification.
In Proceedingsof the Second International Workshop on the Se-mantic Web - SemWeb?2001.
Hongkong, China,May 1, 2001. http://SunSITE.Informatik.RWTH-Aachen.de/Publications/CEUR-WS/Vol-40/mcbride.pdf.Antonio Moreno-Ortiz, Victor Raskin, and SergeiNirenburg.
2002.
New developments in onto-logical semantics.
In Proceedings of LREC-02,Spain, June.Sergei Nirenburg and Victor Raskin, 2004.
On-tological Semantics, chapter 7, pages 159?207.The MIT Press, September.S.
Nirenburg.
1987.
Knowledge-based machinetranslation, the cmu approach.
In Machine Trans-lation: theoretical and methodological issues,Studies in Natural Language Processing, pages68?69, Cambridge.
Cambridge University Press.Klaus Schild.
1991.
A correspondence theoryfor terminological logics: preliminary report.In Proceedings of IJCAI-91, 12th InternationalJoint Conference on Articial Intelligence, pages466?471, Sidney, AU.
