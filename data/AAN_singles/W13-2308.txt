Proceedings of the 7th Linguistic Annotation Workshop & Interoperability with Discourse, pages 61?69,Sofia, Bulgaria, August 8-9, 2013. c?2013 Association for Computational LinguisticsConverting Italian Treebanks:Towards an Italian Stanford Dependency TreebankCristina BoscoDipartimento di InformaticaUniversita` di Torinocristina.bosco@unito.itSimonetta MontemagniIstituto di LinguisticaComputazionale?Antonio Zampolli?
(ILC?CNR)simonetta.montemagni@ilc.cnr.itMaria SimiDipartimento di InformaticaUniversita` di Pisasimi@unipi.itAbstractThe paper addresses the challenge of con-verting MIDT, an existing dependency?based Italian treebank resulting from theharmonization and merging of smaller re-sources, into the Stanford Dependenciesannotation formalism, with the final aimof constructing a standard?compliant re-source for the Italian language.
Achievedresults include a methodology for con-verting treebank annotations belongingto the same dependency?based family,the Italian Stanford Dependency Treebank(ISDT), and an Italian localization of theStanford Dependency scheme.1 IntroductionThe limited availability of training resources isa widely acknowledged bottleneck for machinelearning approaches for Natural Language Pro-cessing (NLP).
This is also the case of dependencytreebanks within statistical dependency parsing.Moreover, the availability of a treebank in a stan-dard format strongly improves its usefulness, in-creasing the number of tasks for which it can beexploited and allowing the application of a largervariety of tools.
It also has an impact on the relia-bility of achieved results, and, last but not least, itpermits comparability with other resources.This motivated a variety of initiatives devotedto the definition of standards for the linguistic an-notation of corpora.
Since the early 1990s, dif-ferent initiatives have been devoted to the defi-nition of standards for the linguistic annotationof corpora with a specific view to re?using andmerging existing treebanks.
The starting pointis represented by the EAGLES (Expert AdvisoryGroups on Language Engineering Standards) ini-tiative, which ended up with providing provisionalstandard guidelines (Leech et al 1996), operat-ing at the level of both content (i.e.
the linguisticcategories) and encoding format.
More recent ini-tiatives, e.g.
LAF/GrAF (Ide and Romary, 2006;Ide and Suderman, 2007) and SynAF (Declerck,2008) representing on?going ISO TC37/SC4 stan-dardization activities1, rather focused on the def-inition of a pivot format capable of representingdiverse annotation types of varying complexitywithout providing specifications for the annotationof content categories (i.e., the labels describing theassociated linguistic phenomena), for which stan-dardization appeared since the beginning to be amuch trickier matter.
Recently, other standard-ization efforts such as ISOCat (Kemps-Snijders etal., 2009) tackled this latter issue by providing aset of data categories at various levels of granu-larity, each accompanied by a precise definition ofits linguistic meaning.
Unfortunately, the set ofdependency categories within ISOCat is still basicand restricted.
We can thus conclude that as far ascontent categories are concerned de jure standardsare not suitable at the moment for being used inthe harmonization and merging of real dependencytreebanks.The alternative to de jure standards is repre-sented by de facto standards.
For what concernsdependency?based annotation, which in the recentpast has been increasingly exploited for a widerange of NLP?based information extraction tasks,the Stanford Dependency (SD) scheme (de Marn-effe et al 2006) is gaining popularity as a defacto standard.
Among the contexts where SD hasbeen applied, we can observe e.g.
parsers andcorpora exploited in biomedical information ex-traction, where it has been suggested to be a suit-able unifying syntax formalism for several incom-patible syntactic annotation schemes (Pyysalo etal., 2007).
SD has already been applied to differ-ent languages, e.g.
Finnish in the Turku treebank(Haverinen et al 2010), Swedish in the Talbanken1http://www.tc37sc4.org/61treebank2, Chinese in the Classical Chinese Liter-ature treebank (Seraji et al 2012) or Persian in theUppsala Persian Dependency Treebank (Lee andKong, 2012).In this paper, we describe the conversion ofan existing Italian resource into the SD annota-tion scheme, with the final aim of developing astandard?compliant treebank, the Italian StanfordDependency Treebank (ISDT).
The reference re-source, called Merged Italian Dependency Tree-bank (MIDT)3 (Bosco et al 2012), is the re-sult of a previous effort in the direction of im-proving interoperability of data sets available forItalian by harmonizing and merging two exist-ing dependency?based resources, i.e.
TUT andISST?TANL, adopting incompatible annotationschemes.
The two conversion steps are visual-ized in Figure 1: note that in both of them thefocus is on the conversion and merging of the con-tent of linguistic annotation; for what concerns therepresentation format, all involved treebanks fol-low the CoNLL tab?separated format (Buchholzand Marsi, 2006) which nowadays represents a defacto standard within the international dependencyparsing community.
In this paper, we deal with thesecond step, focusing on the MIDT to ISDT con-version.Starting from a comparative analysis of theMIDT and SD annotation schemes, we developeda methodology for converting treebank annota-tions belonging to the same dependency?basedfamily based on:?
a comparative analysis of the source and tar-get annotation schemes, carried out with re-spect to different dimensions of variation,ranging from head selection criteria, depen-dency tagset granularity to defined annotationcriteria;?
the analysis of the performance of a state?of?the?art dependency parser by using as train-ing the source and the target treebanks;?
the mapping of the MIDT annotation schemeonto the SD data categories.2http://stp.lingfil.uu.se/?nivre/swedish treebank/talbanken-stanford-1.2.tar.gz3MIDT was developed within the project PARLI(http://parli.di.unito.it/project en.html) partiallyfunded in 2008-2012 by the Italian Ministry for Univer-sity and Research, for fostering the development of newresources and tools that can operate together, and theharmonization of existing ones.
MIDT is documented athttp://medialab.di.unipi.it/wiki/MIDT/.Figure 1: Merging and conversion process fromTUT and ISST?TANL to MIDT and ISDT.In this conversion process, we had to dealwith the peculiarities of the Italian language: thetackled issues range from morphological richness,presence of clitic pronouns to relatively free wordorder and pro?drop, all properties requiring spe-cific annotation strategies to be dealt with.
There-fore, a by product of this conversion process is rep-resented by the specialization of the SD annotationscheme with respect to Italian.In the following sections, after briefly describ-ing the methodology applied for the developmentof the MIDT resource (Section 2), we focus on acomparative analysis of the MIDT and SD anno-tation schemes (Section 3) followed by a descrip-tion of the implemented conversion process (Sec-tion 4).
Finally, we present the results obtained bytraining a parsing system on the newly developedresource (Section 5).2 The starting point: MIDTISDT originates from the conversion towards theSD standard of the MIDT resource, whose originsand development are summarised below (for moredetails on this harmonization and merging step theinterested reader is referred to Bosco et al(2012)).2.1 The ancestors: TUT and ISST?TANLThe TUT and ISST?TANL resources differ underdifferent respects, at the level of both corpus com-position and adopted annotation schemes.For what concerns size and composition, TUT(Bosco et al 2000)4 currently includes 3,452 Ital-ian sentences (i.e.
102,150 tokens in TUT native,4http://www.di.unito.it/?tutreeb/62and 93,987 in CoNLL) and represents five dif-ferent text genres (newspapers, Italian Civil LawCode, JRC-Acquis Corpus5, Wikipedia and theCostituzione Italiana), while ISST?TANL includes3,109 sentences (71,285 tokens in CoNLL for-mat), which were extracted from the ?balanced?ISST partition (Montemagni et al 2003) exem-plifying general language usage as testified in arti-cles from newspapers and periodicals, selected tocover a high variety of topics (politics, economy,culture, science, health, sport, leisure, etc.
).As far as the annotation scheme is concerned,TUT applies the major principles of the WordGrammar theoretical framework (Hudson, 1984)using a rich set of dependency relations, but it in-cludes null elements to deal with non?projectivestructures, long distance dependencies, equi phe-nomena, pro?drop and elliptical structures6.
TheISST?TANL annotation scheme originates fromFAME (Lenci et al 2008), an annotation schemewhich was developed starting from de facto stan-dards and which was specifically conceived forcomplying with the basic requirements of parsingevaluation, and ?
later ?
for the annotation of un-restricted Italian texts.2.2 Creating the merged MIDT resourceThe challenge we tackled in the development ofMIDT was to translate between different annota-tion schemes and merging them.
We focused onthe harmonization and merging of content cate-gories.
To this specific end, we defined a set oflinguistic categories to be used as a ?bridge?
be-tween the specific TUT and ISST?TANL schemes.First of all, we analyzed similarities and dif-ferences of the underlying schemes, which led toidentify a core of syntactic constructions for whichthe annotations agreed, but also to highlight vari-ations in head selection criteria, inventory of de-pendency types and their linguistic interpretation,projectivity constraint and analysis of specific syn-tactic constructions.
For instance, TUT alwaysassigns heads on the basis of syntactic criteria,i.e.
the head role is played by the function wordin all constructions where one function word andone content word are involved (e.g.
determiner?noun, verb?auxiliary), while in ISST?TANL headselection follows from a combination of syntactic5http://langtech.jrc.it/JRC-Acquis.html6The CoNLL format does not include null elements, butthe projectivity constraint is maintained at the cost of a lossof information with respect to native TUT in some cases.and semantic criteria (e.g.
in determiner?noun andauxiliary?verb relations the head role is played bythe content word).
Both schemes assume differ-ent inventories of dependency types and degreesof granularity in the representation of specific re-lations.
Moreover, whereas ISST?TANL allowsfor non?projective representations, TUT assumesthe projectivity constraint.
Further differences areconcerned with the treatment of coordination andpunctuation, which are particularly problematic todeal with in the dependency framework.As a second step, we defined a bridge anno-tation, i.e.
the MIDT dependency tagset, fol-lowing practical considerations: bridge categoriesshould be automatically reconstructed by exploit-ing morpho?syntactic and dependency informa-tion contained in the original resources; for someconstructions, the MIDT representation is parame-terizable, i.e.
the tagset provides two different op-tions, corresponding to the TUT and ISST?TANLannotation styles (e.g.
for determiner?noun orpreposition?noun relations).The final MIDT tagset contains 21 dependencytags (as opposed to the 72 tags of TUT and the29 of ISST?TANL), including the different op-tions provided for the same type of construction.CoNLL is used as encoding format.3 Comparing the MIDT and SD schemesThe MIDT and SD annotation schemes are bothdependency?based and therefore fall within thesame broader family.
This fact, however, doesnot guarantee per se an easy and linear conver-sion process from one to the other: as pointed outin Bosco et al(2012), harmonizing and convert-ing annotation schemes can be quite a challengingtask, even when this process is carried out withina same paradigm and with respect to the same lan-guage.
In the case at hand, this task is made easierthanks to the fact that the MIDT and SD schemesshare similar design principles: for instance, inboth cases preference is given a) to relations whichare semantically contentful and useful to appli-cations, or b) to relations linking content wordsrather than being indirectly mediated via functionwords (see design principles 2 and 5 respectivelyin de Marneffe and Manning (2008a)).
Anotherpeculiarity shared by MIDT and SD consists in thefact that they both neutralize the argument/adjunctdistinction for what concerns prepositional com-plements, which is taken to be ?largely useless63in practice?
as de Marneffe and Manning (2008a)claim.
In spite of their sharing similar design prin-ciples, there are also important differences con-cerning the inventory of dependency types andtheir linguistic interpretation, the head selectioncriteria as well as the treatment of specific syn-tactic constructions.
In what follows, we summa-rize the main dimensions of variation between theMIDT and SD annotation schemes, with a specificview to the conversion issues they arise.3.1 Granularity and inventory of dependencytypesMIDT and SD annotation schemes assume differ-ent inventories of dependency types characterizedby different degrees of granularity in the repre-sentation of specific relations: the adopted depen-dency tagset includes 21 dependency types in thecase of MIDT and 48 in the case of SD.
Interest-ingly however, it is not always the case that thefiner grained annotation scheme ?
i.e.
SD ?
is theone providing more granular distinctions: whereasthis is typically the case, there are also cases inwhich more granular distinction are adopted in theMIDT annotation scheme.Consider first SD relational distinctions whichare neutralized at the level of the MIDT annota-tion.
As reported in de Marneffe and Manning(2008a), so?called NP?internal relations are crit-ical in real world applications: the SD schemetherefore includes many relations of this kind,e.g.
appos (appositive modifier), nn (noun com-pound), num (numeric modifier), number (ele-ment of compound number) and abbrev (abbre-viation).
In MIDT all these relation types arelumped together under the general heading of mod(modifier).
To deal with these cases, the MIDT toSD conversion has to simultaneously combine de-pendency and morpho?syntactic information (e.g.the morpho?syntactic category of the nodes in-volved in the relation), which however is not al-ways sufficient as in the case of appositive modi-fiers for which further evidence is needed.Let us consider now the reverse case, i.e.
inwhich MIDT adopts finer?grained distinctionswith respect to SD.
For instance, MIDT envis-ages different relation types for auxiliary?verb andpreposition?verb (within infinitive clauses, be theymodifiers or subcategorized arguments) construc-tions, which are aux and prep respectively.
Bycontrast, SD represents both cases in terms of thesame relation type, i.e.
aux.
Significant differ-ences between English and Italian justify the dif-ferent strategies adopted in SD and MIDT respec-tively: in English, open clausal complements arealways introduced by the particle ?to?, whereas inItalian different prepositions can introduce them(i.e.
?a?, ?di?, ?da?
), which are selected by the gov-erning head.
The SD representation of the elementintroducing infinitival complements and modifiersin terms of aux might not be appropriate as far asItalian is concerned and it would be preferable tohave a specific relation for dealing with introduc-ers of infinitival complements (like complm in thecase of finite clausal complements): as reportedin Section 4, we are currently evaluating differentrepresentational options with a specific view to thesyntactic peculiarities of the Italian language.Another interesting and more complex exam-ple can be found for what concerns the parti-tioning of the space of sentential complements.MIDT distinguishes between mod(ifiers) on theone hand and subcategorised arg(uments) on theother hand: note that whereas arg is restrictedto clausal complements subcategorized for by thegoverning head, the mod relation covers differenttypes of modifiers (nominal, adjectival, clausal,adverbial, etc.).
By contrast, SD resorts to spe-cific relations for dealing with sentential comple-ments: in particular, distinct relation types are en-visaged depending on e.g.
whether the clause isa subcategorized complement or a modifier (seee.g.
ccomp vs advcl), or whether the gov-ernor is a verb or a noun (see e.g.
xcomp vsinfmod), or whether the clausal complement isheaded by a finite or non?finite verb (see e.g.ccomp vs xcomp).
Starting from MIDT, thefiner?grained distinctions adopted by SD for deal-ing with clausal complements can be recovered bycombining dependency information with morpho-syntactic one (e.g.
the mood of the verbal head ofthe clausal complements or the morpho?syntacticcategory of the governing head).3.2 Head selectionCriteria for distinguishing the head and the de-pendent within relations have been widely dis-cussed in the linguistic literature in all frameworkswhere the notion of syntactic head plays an im-portant role.
Unfortunately, different criteria havebeen proposed, some syntactic and some seman-tic, which do not lead to a single coherent notion64of dependency (Ku?bler et al 2009).
Head se-lection thus represents an important and unavoid-able dimension of variation among dependencyannotation schemes, especially for what con-cerns constructions involving grammatical func-tion words.
MIDT and SD agree on the treat-ment of tricky cases such as the determiner?nounrelation within nominal groups, the preposition?noun relation within prepositional phrases as wellas the auxiliary?main verb relation in complexverbal groups.
In both schemes, head selectionfollows from a combination of syntactic and se-mantic criteria: i.e.
whereas in the determiner?noun and auxiliary?verb constructions the headrole is assigned to the semantic head (noun/verb),in preposition?noun constructions the head role isplayed by the element which is subcategorized forby the governing head, i.e.
the preposition whichis the syntactic head but can also be seen as as akind of role marker.
In this area, the only but notnegligible difference is concerned with subordi-nate clauses whose head in SD is assumed to be theverb, rather than the introducing element (whethera preposition or a subordinating conjunction) as inMIDT: in this case, the MIDT to SD conversionrequires restructuring of the dependency tree.3.3 Coordination and punctuationIn both MIDT and SD schemes, coordinate con-structions are considered as asymmetric structureswith a main difference: while in MIDT boththe conjunction and conjuncts starting from thesecond one are linked to the immediately pre-ceding conjunct, in SD the conjunction(s) andthe subsequent conjunct(s) are all linked to thefirst one.
Also the treatment of punctuation isquite problematic in the framework of a depen-dency annotation scheme, although this has notbeen specifically dealt with in the linguistic liter-ature.
Whereas MIDT has its own linguistically?motivated strategy to deal with punctuation, SDdoes not appear to provide explicit and detailedannotation guidelines in this respect.3.4 MIDT?
or SD?only relationsIt is not always the case that a dependency typebelonging to the MIDT or SD annotation schemehas a counterpart in the other.
Let us start from SDrelation types which are not explicitly encoded inthe MIDT source annotation, due to constraints ofthe CoNLL representation format.
This is the caseof the ref dependency linking the relative wordintroducing the relative clause and its antecedent,or of the xsubj relation which in spite of its beingpart of the original TUT and ISST resources havebeen omitted from the most recent and CoNLL?compliant versions, which represent the startingpoint of in MIDT: in both cases, the ?one headper dependent?
constraint of the CoNLL repre-sentation format is violated.
From this, it fol-lows that ISDT won?t include these dependencytypes.
Other SD relations which were part of theMIDT?s ancestors but were neutralized in MIDTare concerned with semantically?oriented distinc-tions which turned out to be problematic to bereliably identified in parsing in spite of their be-ing explicitly encoded in both source annotationschemes (Bosco et al 2012).
This is the case ofthe indirect object relation (iobj) or of temporalmodifiers (tmod).The MIDT relation types which instead do nothave a corresponding relation in SD are thosethat typically represent Italian?specific peculiari-ties.
This is the case of the clit(ic) dependency,linking clitic pronouns to the verbal head they re-fer to.
In MIDT, whenever appropriate clitic pro-nouns are assigned a label that reflects their gram-matical function (e.g.
?dobj?
or ?iobj?
): this is thecase of reflexive constructions (Maria si lava lit.
?Maria her washes?
meaning that ?Maria washesherself?)
or of complements overtly realized asclitic pronouns (Giovanni mi ha dato un libro lit.
?Giovanni to?me has given a book?
meaning that?Giovanni gave me a book?).
With pronominalverbs, in which the clitic can be seen as part ofthe verbal inflection, a specific dependency rela-tion (clit) is resorted to link the clitic pronounto the verbal head: for instance, in a sentence likela sedia si e` rotta lit.
?the chair it is broken?
mean-ing that ?the chair broke?, the dependency linkingthe clitic si to the verbal head is clit.4 The MIDT to SD conversionThe conversion process followed to generate theItalian Stanford Dependency Treebank (ISDT)starting from MIDT is based on the results of thecomparative analysis reported in the previous sec-tion.
It is organized in two different steps: thefirst one aimed at generating an enriched versionof the MIDT resource, henceforth referred to asMIDT++, including SD?relevant distinctions neu-tralized in MIDT, and the second one in chargeof converting the MIDT++ annotation in terms65of the Stanford Dependencies as described in deMarneffe and Manning (2008b) specialized withrespect to the Italian language syntactic peculiar-ities.
Note that also the resulting ISDT resourceadheres to the CoNLL tabular format.The first step relied on previous harmonizationwork leading to the construction of the MIDT re-source starting from the CoNLL?compliant TUTand ISST?TANL treebanks (described in Boscoet al(2012)).
During this step, we recoveredfrom the native resources relevant distinctionsthat have been neutralized in MIDT, because ofchoices made in the design of the MIDT anno-tation scheme (e.g.
indirect objects or temporalmodifiers which are assigned an underspecifiedrepresentation in MIDT, see Section 3) or simplybecause the harmonization of the source annota-tion schemes was not possible without manual re-vision (this is the case of appositions, explicitlyannotated only in TUT).Other issues tackled during this first pre?processing step include the treatment of coordi-nation and multi?word expressions.
Since in SDconjunctions and conjuncts, after the first one, areall linked to the first conjunct, exactly as it wasin ISST?TANL, the intermediate MIDT++ is gen-erated according to this scheme, with no conver-sion for ISST?TANL and by restructuring the dif-ferent cascading coordination style of TUT.
Forwhat concerns multi?word expressions, we unifiedthe multi?word repertoires of the two resources.Another area that required some pre?processingwith manual revision is concerned with the anno-tation of the parataxis relation.
The augmented re-source resulting from this pre?processing step, i.e.MIDT++, is used as a ?bridge?
towards the SDrepresentation format.Starting from the results of the comparativeanalysis detailed in Section 3, we defined conver-sion patterns which can be grouped into two mainclasses according to whether they refer to individ-ual dependencies (case A) or they involve depen-dency subtrees due to head reassignment (case B).A) Structure?preserving mapping rules involv-ing dependency retyping without restructur-ing of the tree:A.1) 1:1 mapping requiring dependency retyp-ing only (e.g.
MIDT prep > SD pobj, orMIDT subj > SD nsubj);A.2) 1:n mapping requiring finer?grained de-pendency retyping (e.g.
MIDT mod > SDabbrev | amod | appos | nn | nnp |npadvmod | num | number | partmod |poss | preconj | predet | purplcl |quantmod | tmod);B) Tree restructuring mapping rules involvinghead reassignment and dependency retyping.Focusing on dependency retyping we distin-guish the following cases:B.1) head reassignment with 1:1 dependencymapping (e.g.
MIDT subj > SD csubjin the case of clausal subjects);B.2) head reassignment with 1:n dependencymapping based on finer?grained distinctions(e.g.
MIDT arg> SD xcomp?
ccomp, orMIDT mod (with verbal head) > SD advcl| infmod | prepc | purpcl).In what follows, we will exemplify how the ab-stract patterns described above have been trans-lated into MIDT to SD conversion rules.
Theconversion of the MIDT arg relation, referringto clausal complements subcategorized for by thegoverning head, represents an interesting exampleof 1:n dependency mapping with tree restructuring(case B.2 above).
In MIDT, clausal complements,either finite or non?finite clauses, are linked to thegoverning head (which can be a verb, a noun or anadjective) as arg(uments), with a main differencewith respect to SD, i.e.
that the head of the clausalcomplement is the word introducing it (be it apreposition or a subordinating conjunction) ratherthan the verb of the clausal complement.
The mainconversion rules to SD can be summarised as fol-lows, where the?
separates the left from the righthand side of the rule, the notation x ?dep label ydenotes that token y is governed by token x withthe dependency label specifying the relation hold-ing between the two (a MIDT tag is found on theleft side of the rule, whereas an SD one occurs onthe right side):1.
$1[S|V |A] ?arg $2[E] ?prep $3[Vinfinitive] ?$1 ?xcomp $3; $3 ?aux $22.
$1[S|V |A] ?arg $2[CS] ?sub $3[Vfinite] ?$1 ?ccomp $3; $3 ?complm $2In the rules, the $ followed by a number is a vari-able indentifying a given dependency node.
Con-straints on tokens in the left?hand side of the rule66(a) MIDT representation (b) SD representationFigure 2: MIDT vs SD annotation of the same sentenceare reported within square brackets: they are typi-cally concerned with the grammatical category ofthe token (CS stands for subordinative conjunc-tion, E for preposition, S for noun, V for verb).Rule 1 above handles the transformation of the in-finitival clause from the MIDT representation toSD.
Consider as an example the MIDT depen-dency tree in Figure 2(a) for the sentence Gio-vanni ha dichiarato ai giudici di avere pagato iterroristi, lit.
?Giovanni told to?the judges to havepaid the terrorists?
?Giovanni told the judges thathe has paid the terrorists?
whose SD conversion isreported in Figure 2(b).
By comparing the trees,we see that head restructuring and dependency re-typing have both been performed in the conversionof the infinitival clause representation: in MIDTthe head of the infinitival clause is the prepositionwhereas in SD it is the verb; the relation linkingthe governing head and the head of the infinitivalclause is arg in MIDT and xcomp in SD.Currently, the conversion script implementsover 100 rules which are still being tested with thefinal aim of finding the most appropriate represen-tation with respect to the Italian syntactic pecu-liarities.
The problematic area of sentential com-plements is still being explored to find out ade-quate representational solutions.
Consider as anexample the case of the word introducing infiniti-val complements: Figure 2(b) above, reporting theresult of the SD conversion, shows that the sameaux relation is used to link the preposition to theverb heading the infinitival complement as well asthe auxiliary avere ?to have?
to the main verb.
Thissolution might not be so appropriate given the pe-culiarities of the Italian language, where differentprepositions (lexically selected by the governinghead) can introduce infinitival complements.During the conversion step, the SD schemehas been specialized with respect to the Italianlanguage.
There are SD dependency relationswhich were excluded from the Italian localizationof the standard scheme, either because not ap-propriate given the syntactic peculiarities of thislanguage (this is the case e.g.
of the prt re-lation) or because they could not be recoveredfrom the CoNLL?compliant versions of the re-sources we started from (see e.g.
the relationsref or xsubj).
The SD tagset was also extendedwith new dependency types: this is the case ofthe clit relation used for dealing with clitics inpronominal verbs, or of the nnp relation specifi-cally defined for compound proper nouns.
Otherspecializations are concerned with the use of un-derspecified categories: rather than resorting to themost generic relation, i.e.
dep used when it is im-possible to determine a more precise dependencyrelation, we exploited the hierarchical organiza-tion of SD typed dependencies, i.e.
we used thecomp and mod relations when we could not findan appropriate relation within the set of their de-pendency subtypes.5 Using ISDT as training corpusIn this section, we report the results achievedby using ISDT for training a dependency parser,namely DeSR (Dependency Shift Reduce), atransition?based statistical parser (Attardi, 2006),where it is possible to specify, through a config-uration file, the set of features to use (e.g.
POStag, lemma, morphological features) and the clas-sification algorithm (e.g.
Multi-Layer Perceptron(Attardi and Dell?Orletta, 2009), Support VectorMachine, Maximum Entropy).
DeSR has beentrained on TUT and ISST?TANL in the frame-work of the evaluation campaigns Evalita, forthe last time in 2011 (Bosco and Mazzei, 2012;Dell?Orletta et al 2012).
More recently DeSR hasbeen trained and tested on MIDT: the results ob-67Table 1: Parsing results with ISDT resourcesTRAINING TEST PARSER LAS LAS no punctTUT?SDT train TUT?SDT test DeSR MLP 84.14% 85.57%ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 80.55% 82.11%TUT+ISST?TANL?SDT train TUT+ISST?TANL?SDT test DeSR MLP 83.34% 84.16%TUT+ISST?TANL?SDT train TUT?SDT test DeSR MLP 84.14% 85.79%TUT+ISST?TANL?SDT train ISST?TANL?SDT test DeSR MLP 79.94% 81.86%tained on both the MIDT version of the individualTUT and ISST?TANL resources and the mergedresource are reported in (Bosco et al 2012): thebest scores, achieved applying a parser combina-tion strategy and training on TUT inMIDT format,are LAS 90.11% and LAS 91.58% without punc-tuation.For the experiments on the ISDT resource weused a basic and fast variant of the DeSR parserbased on Multi-Layer Perceptron (MLP).
In fact,the purpose of the experiment was not to optimizethe parser for the new resource but to comparerelative performances of the same parser on dif-ferent versions of the same resources.
As a re-sult, the substantial drop in performance observedwith respect to the MIDT resource is in part due tothis factor, and cannot be totally attributed to thegreater complexity of the SD scheme or quality ofthe conversion output.Table 1 reports, in the first two rows, the val-ues of Labeled Attachment Score (LAS, with andwithout punctuation) obtained against the TUT?ISDT and ISST?TANL?ISDT datasets.
The differ-ent performance of the parser on the two converteddatasets (TUT?ISDT and ISST?TANL?ISDT) is inline with what was observed in previous exper-iments with native resources and MIDT (Boscoet al 2010; Bosco et al 2012); therefore, thecomposition of the training and test corpora canstill be identified as possible causes for such a dif-ference.
The results reported in rows 3?5 havebeen obtained by training DeSR with the largerresource including both TUT?ISDT and ISST?TANL?ISDT.
As test set, we used a combinationof the two test sets (row 3) and test sets from thetwo data sets separately (rows 4 and 5).
The pre-liminary results achieved by using ISDT are en-couraging, in line with what was obtained on theWSJ for English and reported in (Cer et al 2010),where the best results in labeled attachment preci-sion, achieved by a fast dependency parser (NivreEager feature Extract), is 81.7.
For the time being,training with the larger combined resource doesnot seem to provide a substantial advantage, con-firming results obtained with MIDT, despite thefact that in the conversion from MIDT to ISDTa substantial effort was spent to further harmonizethe two resources.6 ConclusionIn this paper, we addressed the challenge of con-verting MIDT, an existing dependency?based Ital-ian treebank resulting from the harmonization andmerging of smaller resources adopting incompati-ble annotation schemes, into the Stanford Depen-dencies annotation formalism, with the final aimof constructing a standard?compliant resource forthe Italian language.
SD, increasingly acknowl-edged within the international NLP community asa de facto standard, was selected for its being de-fined with a specific view to supporting informa-tion extraction tasks.The outcome of this still ongoing effort is three?fold.
Starting from a comparative analysis ofthe MIDT and SD annotation schemes, we devel-oped a methodology for converting treebank anno-tations belonging to the same dependency?basedfamily.
Second, Italian has now a new standard?compliant treebank, i.e.
the Italian Stanford De-pendency Treebank (ISDT, 200,516 tokens)7: webelieve that this conversion will significantly im-prove the usability of the resource.
Third, but notleast important, we specialized the Stanford De-pendency annotation scheme to deal with the pe-culiarities of the Italian language.7 AcknowledgementsThis research was supported by a Google ?gift?.Giuseppe Attardi helped with the experimentswith the DeSR parser, Roberta Montefusco pro-duced the converter to the collapsed/propagatedversion of ISDT and in so doing helped us to re-duce inconsistencies and errors in the resource.7Both the MIDT and ISDT resources are released bythe authors under the Creative Commons Attribution?NonCommercial-ShareAlike 3.0 Unported licence(http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.txt).68ReferencesG.
Attardi and F. Dell?Orletta.
2009.
Reverse revisionand linear tree combination for dependency parsing.In Proceedings of of NAACL HLT (2009).G.
Attardi.
2006.
Experiments with a multilanguagenon?projective dependency parser.
In Proceedingsof the CoNLL-X ?06, New York City, New York.C.
Bosco and A. Mazzei.
2012.
The evalita 2011 pars-ing task: the dependency track.
In Working Notes ofEvalita?11, Roma, Italy.C.
Bosco, V. Lombardo, L. Lesmo, and D. Vassallo.2000.
Building a treebank for italian: a data-drivenannotation schema.
In Proceedings of the LREC?00,Athens, Greece.C.
Bosco, S. Montemagni, A. Mazzei, V. Lombardo,F.
Dell?Orletta, A. Lenci, L. Lesmo, G. Attardi,M.
Simi, A. Lavelli, J.
Hall, J. Nilsson, and J. Nivre.2010.
Comparing the influence of different treebankannotations on dependency parsing.
In Proceedingsof the LREC?10, Valletta, Malta.C.
Bosco, M. Simi, and S. Montemagni.
2012.
Harmo-nization and merging of two italian dependency tree-banks.
In Proceedings of the LREC 2012 Workshopon Language Resource Merging, Istanbul, Turkey.Sabine Buchholz and Erwin Marsi.
2006.
Conll-xshared task on multilingual dependency parsing.
InIn Proc.
of CoNLL, pages 149?164.D.
Cer, M.C.
de Marneffe, D. Jurafsky, and C.D.
Man-ning.
2010.
Parsing to stanford dependencies:Trade-offs between speed and accuracy.
In Proceed-ings of the LREC?10), Valletta, Malta.M.C.
de Marneffe and C. Manning.
2008a.
The stan-ford typed dependencies representation.
In Col-ing 2008: Proceedings of the workshop on Cross-Framework and Cross-Domain Parser Evaluation,pages 1?8, Stroudsburg, PA, USA.
Association forComputational Linguistics.M.C.
de Marneffe and C.D.
Manning.
2008b.
Stan-ford typed dependencies manual.
Technical report,Stanford University.M.C.
de Marneffe, B. MacCartney, and C.D.
Manning.2006.
Generating typed dependency parses fromphrase structure parses.
In Proceedings of 5th In-ternational Conference on Language Resources andEvaluation (LREC 2006).T.
Declerck.
2008.
A framework for standardized syn-tactic annotation.
In Proceedings of the LREC?08,Marrakech, Morocco.F.
Dell?Orletta, S. Marchi, S. Montemagni, G. Venturi,T.
Agnoloni, and E. Francesconi.
2012.
Domainadaptation for dependency parsing at evalita 2011.In Working Notes of Evalita?11, Roma, Italy.K.
Haverinen, T. Viljanen, V. Laippala, S. Kohonen,F.
Ginter, and T. Salakoski.
2010.
TreebankingFinnish.
In Proceedings of the 9th Workshop onTreebanks and Linguistic Theories (TLT-9), pages79?90, Tartu, Estonia.R.
Hudson.
1984.
Word Grammar.
Basil Blackwell,Oxford and New York.N.
Ide and L. Romary.
2006.
Representing linguisticcorpora and their annotations.
In Proceedings of theLREC?06, Genova, Italy.N.
Ide and K. Suderman.
2007.
GrAF: A graph-basedformat for linguistic annotations.
In Proceedings ofthe Linguistic Annotation Workshop, Prague, CzechRepublic.M.
Kemps-Snijders, M. Windhouwer, P. Wittenburg,and S.E.
Wright.
2009.
Isocat: remodelling meta-data for language resources.
IJMSO, 4(4):261?276.S.
Ku?bler, R.T. McDonald, and J. Nivre.
2009.
De-pendency Parsing.
Morgan & Claypool Publishers,Oxford and New York.John Lee and Yin Hei Kong.
2012.
A dependencytreebank of classical chinese poems.
In Proceed-ings of the 2012 Conference of the North Ameri-can Chapter of the Association for ComputationalLinguistics: Human Language Technologies, pages191?199, Montre?al, Canada, June.
Association forComputational Linguistics.G.
Leech, R. Barnett, and P. Kahrel.
1996.
Eagles rec-ommendations for the syntactic annotation of cor-pora.
Technical report, EAG-TCWG-SASG1.8.A.
Lenci, S. Montemagni, V. Pirrelli, and C. Soria.2008.
A syntactic meta?scheme for corpus anno-tation and parsing evaluation.
In Proceedings of theLREC?00, Athens, Greece.S.
Montemagni, F. Barsotti, M. Battista, N. Calzo-lari, O. Corazzari, A. Lenci, A. Zampolli, F. Fan-ciulli, M. Massetani, R. Raffaelli, R. Basili, M. T.Pazienza, D. Saracino, F. Zanzotto, N. Mana, F. Pi-anesi, and R. Delmonte.
2003.
Building the ItalianSyntactic-Semantic Treebank.
In A.
Abeille?, editor,Building and Using syntactically annotated corpora.Kluwer, Dordrecht.S.
Pyysalo, F. Ginter, K. Haverinen, J. Heimonen,T.
Salakoski, and V. Laippala.
2007.
On the uni-fication of syntactic annotations under the Stanforddependency scheme: A case study on Bioinfer andGENIA.
In BioNLP 2007: Biological, transla-tional, and clinical language processing, pages 25?32, Prague.M.
Seraji, B. Megyesi, and J. Nivre.
2012.
Bootstrap-ping a persian dependency treebank.
Special Issueof Linguistic Issues in Language Technology (LiLT)on Treebanks and Linguistic Theories, 7.69
