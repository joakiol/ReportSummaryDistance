INDEXING AND REFERENTIAL DEPENDENCIES WITHIN BINDINGCOMPUTATIONAL FRAMEWORKFabio PianesiIstituto per la Ricerea Scientifica eTecnologica38050, Pante' di Povo - Trento - Italypianesi@irshitTHEORY: AABSTRACTThis work is concerned with the development ofinstruments for GB parsing.
An alternative to thewell known indexation system of (Chomsky,1981) will be proposed and then used to formalizethe view of Binding Theory in terms of thegeneration of constraints on the referentialproperties of the NPs of a sentence.
Finally theproblems of verification and satisfiability of BTwill be addressed within the proposed framework.1 In t roduct ionThis work is concerned with the development ofinstruments for GB parsing (see Barton, (1984);Berwick (1987); Kolb & Tiersch, (1990)); inparticular, our attention will be focused on theBinding Theory (henceforth, BT) a module of thetheory of Government and Binding (henceforth,GB; see Chomsky (1981; 1986)).
It has beenpointed out (eg.
in Kolb & Tiersch, (1990)) thatthe lack of a complete and coherent formalizationof a linguistic theory like GB can be a majorobstacle in addressing the issue of principle-basedparsing; this is true of BT too, in particular withrespect to the indexing system of Chomsky (1981),the shortcomings ofwhich have often been pointedout in the literature.
A formalism for the treatmentof the referential relationships among the NPs of asentence will be presented that is more expressivethan indexation and more effective as acomputational tool.In Section 2 the indexing system and the role itplays within BT will be discussed; in Section 3, analternative will be developed that overcomes someof the shortcomings of indexing.
Such a systemwill, then, be used to formalize the view of BT as adevice that generates ( yntactic) constraints onreference.
In Section 4, it will be shown how ourproposal could be applied to some computationalproblems, i.e.
the problems of verification andsatisfiability within BT.2 Pre l im inar iesSince Chomsky (1981), it has becomecommonplace to denote the interpretative r lationsamong the NPs of a sentence by means of indices,i.e.
integers attached to NPs in such a way thatelements bearing the same index are taken to denotethe same object(s), while different indicescorrespond to different denotations; most of thestatements ofBT have been |aid down in terms ofthis system (Chomsky, 1981, 1986).
In a numberof works (see Chomsky (1981), Higginbotham(1983) and Lasnik & Uriagereka (1988)), however,it has been pointed out that the indexing device isnot adequate ocapture certain referential relations;this is true for the relation between pronouns andsplit antecedents, i.e.
antecedents composed of twoor more arguments bearing different hematicroles, l Furthermore, indices blur the distinctionbetween coindexing under c-command andcoindexing without c-command, thereby making itdifficult o capture the dependence of an element,behaving like a variable, upon its antecedent (seeReinhart, (1983)).
2 The replacement of indices withindex sets has been proposed as a way to addressthe first problem (see Higginbotham, (1983)): anordinary index is substituted by a singleton; whenthere are pluralities, e.g.
when an NP is coindexedwith a split antecedent, i  is annotated with the(set) union of the index sets of each component ofthe plurality; therefore, coindexing amounts toequating index sets.
In this view, the ordinaryconditions on disjoint reference (Principles B and Cof BT) must be extended toavoid not only identicalreference but, more generally, referenceintersection.
It has also been argued(Higginbotham, 1983) that indices should beabandoned and substituted by the non symmetricrelation of linking; when the antecedent is split, aplurality of links should be used.
This way,however, two different situations are collapsedtogether: the one in which an item is coindexedwith a plurality of elements all of which share thesame index, and the case of true split antecedents,where the elements composing the antecedent donot have the same index.
Furthermore, theasymmetric behaviour of linking has no clearcorrelate at the structural level; it will be suggestedbelow that c-command should continue to play arole here.Computational works about BT have beenmainly concerned with providing lists of possibleor impossible antecedents for the NPs of a sentence(see Correa (1988); Ingria & Stallard (1989));additional procedures select actual antecedents1 R-expressions can take split antecedents too, at least incertain cases (epithets); however, we will not explicitlyaddress this point here.
Anaphors, instead, can never take~lit antecedents.There is a full range of phenomena for which such adistinction seems crucial, eg.
weak crossover and sloppyreading of pronouns (Reinhart, 1983); donkey sentences andthe so called indirect binding (Ha'de, 1984; Reinhart, 1987).However, only few of them will be addressed here.- 39  -among the potential ones.
Berwick (1989)considers only R-expressions and a device (actually,a Turing machine) assigning the same index tomultiple occurences of the same R-expression(names); furthermore, a set of disjoint indices isassociated with each item.
Finally, Fong (1990)performs a combinatorial nalysis of the paradigmof free indexation, as proposed in (Chomsky,1981); he shows that free indexation gives rise toan exponential number of alternatives and arguesfor the necessity of interleaving indexing andstructure computation.
In any case, indexing hasbeen either explicitly or implicitly assumed, sothat most of the computational pproaches to BTsuffer the same shortcomings pointed out above.
Inparticular, given that both split antecedents and thedistinction between binding and coreference annotbe easily accounted for, this results in animpoverished input being provided to the semantic(intepretative) routine.In the following section a formal system will bediscussed that tries to address uch problems byexplicitly distinguishing between binding andcoreference; atthe same time, BT will be seen as atheory that states very general constraints(constraint schemata), which are then (at least inpart) instantiated according to the structuralproperties of the sentence at hand.
Theseinstantiated constraints are then used to test sets ofpositive specifications (indexations) whichconstitute the input to further semanticprocessing.
33 The formal  apparatusFor a given sentence w, let N={n 1, n 2 ..... nm} bethe set of its NPs; furthermore l t us indicate withA, P and R the subset of N whose members areanaphors, pronouns and R-expressions,respectively.
Sets A, P, R, constitute a partition ofset N. Finally, Q denotes the set of quantifiedexpressions and syntactic variables.
Splitantecedents will be considered as members of thepower set of N, P(N); for the sake of uniformity,single NPs will be denoted by members of P(N)with cardinality equal to one, i.e.
by singletons.Def in i t ion  1 A relation s ~(P(N)?P(N))isdefined such that (9 ~)es iff ?={m}, ly={n I .
.
.
.
.np} ,p> l and me lg.For any ?i~=(n), neN, sets .~(n), B(n) and G{n) willdenote the set of elements that c-command n and lie3Disjoint reference constraints arising from Principles B andC of BT are not carried over to semantic routines but areresolved at an earlier stage.
Furthermore, it is assumed that,whatever processing the semanti~ routines perform, theirdefault behaviour consists of assigning non-sharing semanticimport to different NPs, unless otherwise stated in the inputconstraint set.inside its binding domain whenever, espectively,n eA, nEP or neR; finally, if n is a pronoun D(n)will denote the set of NPs c-commanding it andlying outside its binding domain.
4Def in i t ion  2 Given a sentence w, a relationb ~ (P(N)?P(N)) is defined, such that (9 ~)eb iffone of the following conditions obtains:(i) ~={n't}, nieA , ~={nj} and nje.~(ni);(ii) ~={ni}, nieP, II/={nj}, and njeD(ni).Def in i t ion  3 Given a sentence w, a relationd~ ( P(N) ?
P(N) ) is defined, such that (9 ~)e d iff~={ni}, II/={nj} and either njeB(ni) or njeC(ni),depending on whether nieP or nieR.In the following, b(.
)and s(.
), the inverserelations, will be used as well.Def in i t ion 4 Given a sentence w and a phrasestructure tree representation for it, Zw, the set ofbinding constraints for T,v is the set ~R,,={(?
r ~) I9, ~veP(N), r is a symbol, re {d, b, b(.)
} }, suchthat (9 r ~)e~R,, iff (9 Ig)er, where r is thecorresponding relation.
5Given sentence w and a phrase structurerepresentation, a binding constraint set statesdisjoint reference constraints (essentially, theconsequencies of Principle B and C of BT) and therange of the binding relation (see below) for eachNP.
The meaning of the formers is that whenever(a d \]\])e 9?,,, the intersection of the references of ctand 13 is empty.
Note that 3, ,  does not exhaust therange of possible constraints on reference; forinstance, those preventing weak crossoverviolations or circular readings are not included in~,,  but will be discussed later on; furthermore,split antecedents are not mentioned in9t,,Let us, now, focus the attention on how torepresent positive referential relationships.
To thisp~arpose, two fundamental relations on ~N) ,coreference and binding (more precisely, the boundvariable reading, in the terminology of Reinhart(1983)) are introduced.
The former is a tran~sitive,symmetric and reflexive relation, therefore anequivalence relation; the latter is irreflexive,intransitive and non symmetric, it only obtainsunder c-command and denotes the dependence of anitem upon another one for its interpretation.
6 An4The relevant notion of c.command, is the following: node vtc-commands node 13 in the tree I: iff ct does not dominates \[3and every node y dominating ct also dominates 6.
In a sense,~ni)  , B(n i) and C(ni) are partial encodings of, respectively,Principles A, B and C of BT; see Giorgi, Pianesi, Satta (1990)for algorithms that compute these sets.5Here, it is assumed that lr w has been built according to all themodules of the theory, a part BT.6Both binding and coreferenee are formal relations in that- 40  -item can be bound by, at most, one other element;on the contrary, an NP can corefer more than onceand even with itself.
Split antecedents cannot bebound and, finally, it is not possible for an item,ct, to be bound and, at the same time, to corefer;on the other hand, ct can be a binder and, at thesame time, corefer.
The binding relation will bedenoted by the symbol I.The differences between binding and coreferenceare at both the structural and the interpretativelevel.
Binding can only obtain under c-commandwhile this is not a prerequisite for coreference; atthe interpretative level, the reference of the bindercan be accessed to form the reference of the bindee.Instead, coreference corresponds to a sort ofextensional identity and simply amounts toequating independent references; of course, itemsthat do not refer (e.g., quantified expressions andanaphors) cannot corefer.
7 Bound items behavesimilarly, i.e.
even a pronoun, when bound, losesthe capability of autonomously referring and,therefore, of coreferring.
Transitivity has not beenassumed for binding, in order to avoid reducing theinterpretation of a sequence of elements al .... an,such that each ai is bound by ai+l, upon that of thelast element; consider the following sentence:(1) John and Mary told each other PRO to leave.and the two readings:(2) (i) John told Mary that Mary shouldleave and Mary told John thatJohn should leave.
(ii)* John told Mary that John shouldleave and Mary told John thatMary should leave.Because of obligatory control, PRO is bound bythe reciprocal, which, in its turn, is bound by thematrix's subject.
If binding were transitive, weshould conclude that the interpretation f PRO isentirely dependent upon that of John and Mary (inthis being on a par with the reciprocal) and therelevant reading would be (2.ii).
However, (1) hasonly the first of the two readings in (2) and thisrequires that PRO inherits reciprocality from eachother; therefore, the correct dependencies arebetween PRO and each other and between the latterand the matrix subject.
8 Note that a sentence likethey are largely determined by structural properties.
Nopragmatic import is assumed for coreference, as is done byReinhart (1983).7See tla'ik (1984) for a discussion about he distinctionbetween referring and non referring NPs.8Here, it is assumed that a VP conlaining a reciprocal, e.g.told each other, is true of each element a such that a is in theinterpretation of each other and told(a, b) is true.
where b isalso in the interpretation of each other and a;~b; see(3) John and Mary told each other that theyshould leave.admits both readings, given that the subject of thedependent clause can be bound either by thereciprocal or by the matrix subject.
In this work,then, binding has a functional nature which maywell reflect properties of semantic processing; evenin this case, however, the point is that syntax onlyaddresses an abstract property, i.e.
functionality.Since coreference is an equivalence, therepresentation could be simplified by considering aminimal relation corresponding tocoreference.
Theconnected parts of the graph of the coreferencerelation are complete subgraphs; for each of them,A=(V, E), choose an arbitrary vertex, ~t, andconsider the graph Amin=(V, {(~ 0~)\] 1~:0~, (1~a)~ E}).
By iterating the procedure and then takingthe union of the results, a (directed) graph isobtained that represents the minimal relationcorresponding to coreference.
9 We will denote sucha minimal relation with the symbol c and call it'coreference' tout court.
The inverses of both I andc, I(.)
and c(.)
will be used as well.At this point, the notion of indexation set can bedefined.Definition 5 A indexation set for a sentence wis the set ~3 w= { ( ~ r u,/) I q), ~/~ P(N), r is a symboland re {c, c(.)
, l, l(.
), s, s(.)}
} such that (~ r9')~$w iff (?
~)~r, where r is now interpreted asthe corresponding relation.Note that split antecedents (relation s) are seen aspart of the indexation set of the sentence since theydo not have any independent s atus within syntax;furthermore, this move permits us to only considera limited number of them every time, instead of theexponential number of possible split antecedentsarising by free combinatorics.3.1 Compatib i l i ty  of an indexation setwith BTAn indexation set is composed of positivespecifications that interpretative procedures processin order to assign actual references.
Before thiscould happen, however, it must be verified thateach of such specifications does not contradict thesentence particular constraints of ~R,v and generalBT restrictions.
In other words, a way is needed toenforce the overall compatibility of ~,, w.r.t~.
BT.A path in ~3 w is a sequence of elements p=(?o rl~1) (~1 r2 ~2)... ($m-1 rm ~m), m>-l; if ~O=~mHigginbotham (1981, 1985).9No information is lost in the passage from coreference to itsminimal counterpart; the original graph can, in fact, be easilyrecovered by reintroducing transitivity, symmetricity andreflexivity.
Of course, the choice of 0t does not affect heresult.-41  -then p is a circular path.
Furthermore, the stringwp=rl r2 ... rm is called the path string associatedwith p. Path strings may be used to define thefollowing regular languages that will be useful tostate many of the conditions about index sets in acompact form: Ll=l*(c+c(.)+cc(.)+c(.)c+l+l(.))l(.
)*,L2= {s} + Is} L1 +Ll{S} +LI{sJLI, I-,3 = Is(.)}
+ {s(.
)}LI +Ll{S(.)}
+LI{s(.)}L1.
Let us briefly discusstheir meaning.
The paths from an element, ?~, toanother one, ~, with strings in LI encode all thepossible ways in which ?~ and ~ can be related by acombination of binding and coreference r lations(in such a way, of course, that their definitoryproperties are respected).
In this respect, Ll replacesthe traditional notion of coindexation (although wewill continue to use this (improper) term to denotethe existence of a path with string in L l ) .Therefore, given a sentence like the following one(where subscripts are only used to single outconstituents):(4) His1 mother told John 2 that he3 shouldleavea possible indexation set may contain thefollowing elements: (3 1 2), (2 c I) and the stringlc for the path from 3 to 1, may be taken tosubstitute the old notion of coindexation.
Consider,now, the notion of referential contribution; thebasic case is given by the configuration (~ s~)e5 w (i.e., an element contributing to a splitantecedent); by extension, language L2 encodes allthe cases in which an element contributes to thereference of another one.
For instance, a possibleindexation set for the following sentence(5) John1 told Mary 2 that hey3 should leaveis {(1 s 4), (2 s 4), (3 l 4)}; in this case, 1 and 2are both contributing to the reference of 4 (the splitantecedent) and of 3.
On the other hand, languageL 3 encodes all the cases in which an elementreceives a referential contribution from ~.
Finally,consider overlapping reference between two items;the basic instance is given by two split antecedentssome component of which are either shared orcoindexed; the general configuration gives rise topaths with strings in the language L3L2, theconcatenation f L3 with L2 .10 An example is thefollowing sentence:10In the linguistic literature, the term overlapping referenceis used for all cases in which the reference of two items is notdisjoint; of course, this implies that at least one of themdenotes a plurality.
However, the present use of this term, andthat of referential contribution as well, is restricted to splitantecedents, seen as the means, available to syntax, tocompose pluralities and does not general ize to all thepossible different varieties of plurals, such as thoseconsidered in (Lasnik (1976) and Higginbotham (1983)).
(6) John I told Mary 2 that they 3should avoidtelling Henry 4that heY5 had beendiscoveredwith the following indexation set: {(1 s 6), (2 s 6),(1 s 7), (4 s 7), (3 l 6), (5 l 7)}.
In this case, twosplit antecedents (6 and 7) are introduced that sharethe component 1; therefore, overlapping referenceobtains between 6 and 7 and between 3 and 5.The BT version considered here consistes ofPrinciples A, B and C, as given by Chomsky(1986), weak crossover (see Reinhart (1983)) andsome restrictions on circular eadings.
Now we canstate the following:Theorem 1 Cond i t ions  for  thecompat ib i l i ty  o f  an index set wi th BTGiven a sentence w, a tree representation zwand theb~nding constraint set, ~w, an index set, ~3w,complies with BT iff the following statementshold:(i) for any pair (~={ni}, v={njt ..... nip}, l_<p, if((; l I g )~w then (~ b Vk)e g~ w , l_~k_<p, where~k={ni~}; i.e.
binding relations cannot bearbitrarily introduced in ~3 w, but must be derivedfrom the relation b in 9~ w.(ii) for any ?={n} there is no circular path in ~w,from ?, with string in l+; i.e.
there are nocircular dependencies;(iii) for any ?={n}, no circular path in BW givesrise to strings in L2; i.e.
an element is nevercoindexed with another one and, at the sametime, contributes to its reference;(iv) for any ?={n}, if neA then there is a ~ suchthat (?l v/)e~w and I~1=1; i.e.
each anaphor isbound in ~w and never takes a split antecedent;(v) for any ?
)={n}, if n eQ then there is noelement W such that (~ c ~)EBw or (IF c?
)e~ w ; i.eo quantifiers and syntactic variablescannot corefer;, therefore, they can only functionas binders;l 1(vi) if (~ d ~)~9~ w then there are no paths, in ~w.from ?
to V with strings either in Ll or in L2or in L3L2; i.e.
if two elements are in aprinciple B or principle C configuration then:they cannot be coindexed; no one of them cancontribute Co the reference of the other and,finally, their references do not overlap.This theorem states the conditions for thecompatibility of an indexation set for a sentence wwith BT.
Note, that certain constraints, expeciallythose in (vi), make crucial use of the set 9~ w ; otherconstraints, instead, directly apply to ~w, e.g.
thati l (v  ) together with (i) enforces the ban against weakcrossover in that (v) checks that no quantifier corefers and (i)only admits binding under e-command.- 42  -preventing weak crossover.4 ApplicationsTwo applications of the formalism introducedabove are now considered.
The discussion will byno means be exhaustive, the purpose being just toshow the potentiality of the present proposal.4.1 Ver i f i ca t ionWe define the verification problem for BT asfollows: let Xw be a phrase structure treerepresentation for a sentence w and let 5 w be anindexation set for w. We want to know if $ w iscompatible with the constraints imposed by BT onZw.
In essence, this is the same problem as thatdiscussed in the last section.
A polynomial timealgorithmic method that solves it will be brieflydiscussed.
The problem at hand can be reduced tothe following one: let R be a set of symbols andGR=(V, E) be a graph whose edges are triples (~1 r~)  where reR; given a regular language LR ~R*,is there any path p in GR with string in LR ?
Analgorithm can be given, based on a dynamicprogramming method presented in Aho et al(1974), which takes as input one such graph GR.
afinite state non deterministic automaton for LR andcomputes a IVI x IVI boolean matrix such that itsij-th entry is set to 1 just in case there is a path,from node ni to node nj, with string in LR.The verification problem for BT can, then, besolved by the following algorithmic schema: first,compute relations d and b ; then check condition (i)of Theorem 1 for every element in ~, , .
If the testis successful, build the directed labelled graphGv=(V, E) where V={v I veP(N) and either (v r~)e~qw or (~ r v)~ ~w , for some r in {c, 1, 1(.
), s,st.)}
} and E=~3~.
Now, check conditions (ii)through (v) of Theorem 1, by means of successiveruns of the algorithm previously sketched.4.2  Satisf iabil itySatisfiability for BT can be stated as follows:given a sentence w and a phrase structure treerepresentation for it, Zw, does there exist at leastone indexation set which is BT compatible ?Observe that, addressing the problem of BTsatisfiability can prove useful in actual parsingsystems, since it provides a means to weed outungrammatical analysis of the input string.According to the version of BT considered here,only anaphors need to be considered; in fact, fromthe point of view of the syntactic theory, it isalways possible to assign every R-expression andevery pronoun an independent reference so that nointeractions arise.
In other words, a sentence likeShe loves her is perfectly grammatical, providedthat the two pronouns are neither in the bindingnor in the coreference relation, even if utteredwithout any context from which references can bedrawn; in this case the only BT compatible indexset is the empty set, i.e.
the one that does notspecify any mutual dependency between the twoelements.
On the side of the interpretativeprocesses, this corresponds to (possibly infinitely)many non overlapping reference assignments to thetwo pronouns.
12Anaphors make the real difference, though, sincePrinciple A requires them to get their referencefrom intrasentential items.
Our attention will befocused on 9~ w , called the A-restricted bindingconstraint set and on 3w', called the A-restrictedindexation set.
~w' is defined in such a way that (~r I/t)eg~ w iff either ~p={n}, neA or Ip={m}, meAand r is as in ~w.
3w" is defined in a similar way.The problem, then, is to find out whether an A-reduced index set verifying (i), (ii) and (iv) ofTheorem 1 exists, for a given pair (w, "rw).Theorem 2 - Cond i t ions  for BTSatisfiabil ity: Let w be a sentence, ~'w one ofits phrase structure tree representations and ~w" itsA-restricted binding constraint set; then, w satisfiesBT iff for any ?={n}, neA there exists an element,~={m}, meP, R, such that there is a path, p=(?
ri~1) (~1 r2 ~2)... (Om.l rm Ill) in ~ '  with stringwpeb + and (ll/ d ~ra.l)Z~ w.An algorithmic solution for the satisfiabilityproblem can be pursued by means of an approachsimilar to the one sketched above for verification.5 Conc lus ionsBT is concerned with the relationships among thereferences of NPs.
Indices, however, tend tocollapse together situations in which more subtledistinctions seem to be needed or blur thedistinctions between symmetrical relationships(coreference) and asymmetrical ones (binding).A formalism has been provided that does notsuffer the shortcomings of indexation.
It permits arelevant number of phenomena tobe addressed in arather natural way and provides a richer and lessambiguous input to the semantic routines.
Theoverall architecture can be depicted as follows:given a sentence, w, and a phrase structure treerepresentation "rw, a set ~w is built which,essentially, is a partial encoding of Principles A, Band C of BT as applied to z~,.
~w, together withgeneral BT compatibility conditions (see Theorem1), constrains the form and content of any well12Generalizing, it is easy to see how the empty set is a BTcompatible indexation set whenever  anaphors are notinvolved.- 43  -formed indexation set, ~w.
As far as the version ofBT considered here (essentially, that of Chomsky,(1986)) is concerned, the work of syntax ends with$,v; any further computation is semantic.The formalism could be extended to otherphenomena.
Consider, for instance, the ban againstcircular reference; statements (ii) and (iii) ofTheorem 1account for the particular cases in whichan item a is bound by itself or contributes to thereference ofanother element while being coindexedwith it.
More general cases were addressed by theso called i-within-i condition of Chomsky (1981)and, more recently, by the condition on circularchains of Hoeksema nd Napoli (1990).
The latterforbids circular chains, where achain is a sequenceof elements al ..... an such that either ai iscoindexed with ai+l or a/contains ai+l.
Thiscondition could be captured within the frameworkproposed here by explicitly introducing dominance,say, by means of a relation symbol sl and, then, byrequiring that no circular paths are in ~w such thattheir strings are in the language (siLl) +.
If thisapproach is tenable, then a parallelism emergesbetween the s and the s~ relations, since both areinvolved in statements forbidding some kind ofcircularity (for s, the relevant statement is (iii) ofTheorem 1) and both can be seen as estabilishingsome sort of referential dependency between twoitems.
The relevant dependency for s is setinclusion while for sl it is some kind of functionaldependency, under the assumption that the referenceof a constituent is a function of the references of itssubconstituents.
This observation accounts for thefact that disjoint reference constraints affect itemsin the s relation (see point (vi) of Theorem 1) butnot those in sl.This work has been developed as part of a largersystem that uses GB as the reference syntactictheory.
Currently, we are studying two applicationsof the formalism presented here: 1) on-linealgorithms for the satisfiability problem addressedin Section 4.2 in an off-line fashion; theinterleaving of the computation of satisfiabilitywith structure building would provide away to ruleout ungrammatical analysis of the input string atan early stage, i.e.
as soon aS their incapability ofsatisfing BT can be detected; 2) algorithms for theexhaustive generation of all index sets that are BTcompatible w.r.t, a given zw,.ACKNOWLEDGMENTS.
The author wouldlike to acknowledge the continuous and fruitfuldiscussions with Alessandra Giorgi and GiorgioSatta; many of the ideas in this paper have arisenduring them.
Of course, the responsability for anyerror is author's one.REFERENCESAho, A.V., Hopcroft, J.E., Ullman, J.D., (1974),The Design and Analysis of Computer Algorithms,Addison-Wesley, Reading, Ma.Barton, G., (1984), Towards a Principle BasedParser, MIT AI Memo No.788Berwick, R., (1987), Principle-Based Parsing,MIT AI Lab Technical Rept.
972Berwick, R., (1989), Natural LanguageComputational Complexity and GenerativeCapacity, to appear in Computers and ArtificialIntelligenceChomsky, N., (1981) Lectures on Governmentand Binding, Foris, DordrechtChomsky, N., (1986) Knowledge of Language,Praeger, New YorkCorrea, N., (1988), A Binding Rule forGovernment-Binding Parsing, Proceedings ofCOLING, BudapestFong, S., (1990), Free Indexation: CombinatorialAnalysis and a Compositional Algorithm,Proceedings of the 28th Annual Meeting of theAssociation for Computational Linguistics,Pittsburgh, Pc.Giorgi, A, Pianesi, F, Satta, G., (1990), AComputational Approach to Binding Theory,Proceedings ofCOLING, HelsinkiHai'k, I., (1984), Indirect Binding, LinguisticInquiry, 15, 185-224Higginbotham, J., (1981), ReciprocalInterpretation, Journal of Linguistic Research, 1,97-117.Higginbotham, J.
(1983) Logical Form, Bindingand Nominals, Linguistic Inquiry, 14, 395-420Higginbotham, J., (1985), On Semantics,Linguistic Inquiry, 16, 547-594Hoeksema, J. and D.J.
Napoli, (1990), ACondition on Circular Chains: A restatement of i-within-i, Journal of Linguistics, 26, 403-424.Ingria, R.P.J.
& D. Stallard, (1989), AComputational Mechanism for PronominalReference, Proceedings ofthe 27th Annual Meetingof the Association for Computational Linguistics,Vancouver.Kolb, H.P.& C. Tiersch (1990), Levels andEmpty Categories in a Principles and ParametersApproach to Parsing, in K. Netter & C.
Rohrer(eds.)
Representational and DerivationalApproaches to Generative Grammar, Reidel,Dordrecht (forthcoming)Lasnik, H., (1976), Remarks on Coreference,Linguistic Analysis, 2, 1-23Lasnik, H. & J. Uriagereka (1988), A Course inGB Syntax, MIT Press, Cambridge, Ma.Reinhart, T., (1983), Anaphora and SemanticInterpretation, University of Chicago Press,ChicagoReinhart, T., (1987), Specifier and OperatorBinding, in E.J.
Reuland & A.G.B.
ter Meulen(eds) The Representation f (In)definiteness, MITPress, Cambridge, Ma.- 44  -
