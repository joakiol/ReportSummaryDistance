Coling 2008: Companion volume ?
Posters and Demonstrations, pages 177?180Manchester, August 2008Shahmukhi to Gurmukhi Transliteration SystemTejinder Singh SainiACTDPL, Punjabi University,Patiala 147 002, Indiatej@pbi.ac.inGurpreet Singh LehalDCS, Punjabi University,Patiala 147 002, Indiagslehal@yahoo.comVirinder S KalraSociology, SOSSUniversity of Manchesterkalra@manchester.ukAbstractThe existence of two scripts for Punjabilanguage has created a script barrier be-tween the Punjabi literature written in In-dia and Pakistan.
This research has de-veloped a new system for the first time ofits kind for Shahmukhi text without dia-critical marks.
The purposed system forShahmukhi to Gurmukhi transliterationhas been implemented with various re-search techniques based on language cor-pus.
The corpus analysis of both scripts isperformed for generating statistical dataof different types like character and wordfrequencies and bi-gram frequencies.This statistical analysis is used in differ-ent phases of transliteration.
Potentially,all members of the substantial Punjabicommunity will benefit vastly from thistransliteration system.1 IntroductionOne of the great challenges before InformationTechnology is to overcome language barriersacross the whole humanity so that everyone cancommunicate with everyone else on the planet inreal time.
South Asia is one of those unique partsof the world where a single language is written indifferent scripts.
This is the case, for example,with Punjabi language, spoken by tens of mil-lions of people, but written in Indian East Punjab(20 million) in Gurmukhi script (a Left to Rightscript based on Devanagari) and in PakistaniWest Punjab (80 million), written in Shahmukhiscript (a Right to Left script based on Arabic),and by growing number of Punjabis (2 million)in the EU and the US in the Roman script.
Whilstin speech Punjabi spoken in the Eastern and the?
2008.
Licensed under the Creative Commons Attri-bution-Noncommercial-Share Alike 3.0 Unportedlicense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.Western parts is mutually comprehensible, in thewritten form it is not so.
The existence of twoscripts for Punjabi has created a script barrierbetween the Punjabi literature written in Indiaand Pakistan.
More than 60 per cent of Punjabiliterature of medieval period (500-1450 AD) isavailable in Shahmukhi script only, while mostof the modern Punjabi writings are in Gurmukhi.Potentially, all members of the substantial Pun-jabi community will benefit vastly from thistransliteration system.1.1 Gurmukhi ScriptThe Gurmukhi script, derived from the Sharadascript and standardised by Guru Angad Dev inthe 16th century, was designed to write the Pun-jabi language.
The meaning of "Gurmukhi" isliterally ?from the mouth of the Guru".
TheGurmukhi script has forty one letters, includingthirty eight consonants and three basic vowelsign bearers.
There are five nasal consonants (?,?, ?, ?, ?)
and two additional nasalization signs,bindi ??
[?]
and tippi ??
[?].
In addition to this,there are nine dependent vowel signs (??[?
], ??
[u], ??
[o], ??[?
], ??[?
], ??
[i], ??
[e], ??[?
], ??[?
])used to create ten independent vowels with threebearer characters: Ura ?[?
], Aira ?
[?]
and Iri?[?
].1.2 Shahmukhi ScriptThe meaning of "Shahmukhi" is literally?from the King's mouth".
Shahmukhi is a localvariant of the Urdu script used to record the Pun-jabi language.
It is based on right to leftNastalique style of the Persian and Arabic script.It has thirty seven simple consonants, eleven fre-quently used aspirated consonants, four longvowels and three short vowel symbols (Malik2006).1772 Comparison with the Existing SystemIn actual practice, Shahmukhi script is writtenwithout short vowels and other diacritical marks.The PMT system discussed by Malik A.
(2006)claims 98% accuracy only when the input textInput text (right to left)??
??
??
????
????
????
????????
???
??????
???
?????????
????
????
??
????
??
???????
?????
??????
??????????
??
???
???
?????
??????
????
????
???
???
????????
???
??
????
????
???
?????
?????
????????
??????
??
??
???
???
???
????
????
??
??
?????
??
?????
????
????
????
????
???????
???
???
?????
???????
????
?????????
????
????
???
???????
????
??????????
??
????
????
??
???
????
????
????
?????
????
????
??
????
????
???
??
?????
???
?????
??
????
???
???????
???
??
??
???
?????
??
??????
??????
????
????
?????
??????
??
?????
???
?Output-A of PMT system (left to right)??
??
??
???
???
???
?????????
??
????
????
??
???????????
???
??
???
??
??????
?????
?????
???????
???
?????
???
?????
?????
?
????
???
???
??
????
???
??????
???
???
???
????
???
???
?????
????
????
??
??
??
?????
????
???
?
???
????
??
??
??
???
????
?????
??????????
???
???
?????
??
????
???
???????
?????
???????
?, ????
??????
?, ????
?????
??
????
???
?
??
???????
????
????
????
????
??
???
????
????
??
????
???????
??
?????
???
??????
???
??
??
??
?????
??
??????
???
???
???
??
????
????
????
???????
??
????
????
?Output-B of proposed system (left to right)??
???
???
???
???
?????
????????
???
?????
??
????
?????????????
????
??
???
???
???????
????
??????
??????
?????
?????
???
??????
???????
????
???
???
???
????
???
??????
????
??
???
????
????
???
?????
????
????
??
??
??
??????
????
??
?
???
????
??
??
??
?????
????
????
??????????
???
??
??????
??
????
???
???????
????
???????
?, ????
??????
?, ????
??????
??
????
?????
?
????
????
????
????
????
????
??
???
????
????
??
????????
???
??
??????
???
???????
??
??
??
??
?????
?????????
????
??
???
???
????
????
??????
??????
??
??????
???
?Table 1.
I/O of PMT and Proposed SystemsTransliteration Tokens OutputType Total Wrong RightAccuracy%A 116 64 52 44.8275B 116 02 114 98.2758Table 2.
Comparison of Output-A & Bhas all necessary diacritical marks for removingambiguities.
But this process of putting missingdiacritical marks is not practically possible due tomany reasons like large input size, manual inter-vention, person having knowledge of both thescripts and so on.
We have manually evaluatedPMT system against the following Shahmukhiinput published on a web site and the output textis shown as output-A in Table 1.The output ofproposed system on the same input is shown asoutput-B.
The wrong transliteration of Gurmukhitokens is shown in bold and italic and the com-parison of both outputs is shown in Table2.Clearly, our system is more practical in naturethan PMT and we got good transliteration withdifferent inputs having missing diacritical marks.3 The ComplexityThe Shahmukhi script has many complexities byits nature and the major two of them are:3.1 Recognition of Shahmukhi Text withoutDiacritical MarksShahmukhi script is usually written without shortvowels and other diacritical marks, often leadingto potential ambiguity.
Arabic orthography doesnot provide full vocalization of the text, and thereader is expected to infer short vowels from thecontext of the sentence.
In the written Shah-mukhi script it is not mandatory to put shortvowels below or above the Shahmukhi characterto clear its sound.
These special signs are called"Aerab" in Urdu.
It is a big challenge in theprocess of machine transliteration to recognizethe right word from the written text.3.2 Multiple MappingsIt is observed that there is multiple possiblemapping in Gurmukhi script corresponding to asingle character in the Shahmukhi script asshown in Table 3.Name Shahmukhi Character Gurmukhi MappingVav ?
[v]?
[v], ??
[o], ??
[?
], ??
[?
], ??
[u],?
[o]Yeh?[j]?
[j], ??
[?
], ??
[e], ??[?
], ??[i],?
[i]Table 3.
Multiple Mapping into Gurmukhi Script4 Transliteration SystemThe transliteration system as shown in figure 1is virtually divided into two phases.
The firstphase performs pre-processing on the inputShahmukhi token by performing dictionarylookup.
If the dictionary lookup fails then thetoken will go for rule based transliteration andultimately this phase will generate best possibleGurmukhi token(s).
The second phase performs178the task of post-processing.
Unicode Alignmentcomponent performs context analysis of inputGurmukhi token(s).
All Forms generator (AFG)component will perform critical task of handlingmissing diacritical marks.
This component willsuggest similar possible forms of a Gurmukhitoken which is not most frequent one.
The queuemanager of post-processing phase is designed towork on bi-gram language model.
This will se-lect the best possible unigram for final output byconsulting bi-gram weights of the current tokenwith its neighboring tokensFigure 1.
System Overview5 Lexical Resources UsedShahmukhi Corpus: 3.3 million words.Gurmukhi Corpus: 7 million words.Shahmukhi-Gurmukhi DictionaryUnigram and Bi-gram TableAll Forms Generator (AFG)6 ExampleHere we show the internal working of the systemthrough an example.
Suppose we observe aShahmukhi string as shown in figure 2.
First, wepass this through the pre-processing and translit-eration phase where the input string has beentokenized into eleven Shahmukhi tokens.
Everyinput token has been searched in the dictionaryfor their existence.
This status result is shown intable 4 where the tokens 1st, 2nd, 4th, 5th, 6th, 7th,8th, 10th and 11th are found in dictionary and theirintermediate Weighted Gurmukhi Forms (WGF)have been generated.
These tokens directly jumpto bi-gram queue manager for bi-gram analysis inpost-processing phase.Figure 2.
Shahmukhi Gurmukhi TokensToken ShahmukhiTokenFound inDictionaryWGFtoken{weight}1 a???
?
Yes ???
{4513}; ???
{8714}2 ?b??
Yes ???
{14054}; ???
{18}3 k~?a???
?
No ??????
{524}4 Qr??
Yes ??
{59998}; ??
{1186}5 ?b?5 Yes ????
{107}6 ?>mb??
?
Yes ???
??
{7699}7 ??
Yes ?
{7927}; ?
{3600}8 l??
Yes ??
{295}; ??
{9791}9 j?
???
No ????
{4}10 ^M Yes ???{447};??{47};????
{9} ???{5};????
{5}11 ?A: Yes ???{21582};???
{174}; ????
{159}Table 4.
Pre-Processing Transliteration StatusOn the other hand, the input tokens 3rd and 9th arenot found in dictionary.
Therefore, in this phasethey will pass through transliteration componentand then in post-processing phase they will passthrough Unicode formatting.
After that they willtest for Most Frequent (MF) check by comparingtheir weights with a predefined threshold value22 Threshold value is minimum probability of occur-rence among most frequent tokens in target script cor-pus.???
???
??????
??
????
???
??
?
??
?????
???
??
?Input 11 Shahmukhi tokens (Right to Left)????a?
?b?
???~?ak??
rQ?>mb?
?b?
?
?
5??
?
l?
??
??
?j?A:  ^M11      10   9       8   7         6        5 4       3      2    11    2        3          4        5       6     7   8        9        10      11Transliterated 11 Gurmukhi tokens (Left to Right)Unicode Encoded Shahmukhi TextRule Based TransliterationComponentAll Forms Generator(AFG)Bi-GramQueueManagerGurmukhi Token(s)Shahmukhi TokenShahmukhi TokenizerDictionary ComponentUnicode AlignmentPre-Processing &TransliterationPost-ProcessingUnicode Encoded Gurmukhi TextTransliterationSystemOut Put Text Generator179(100 in this case).
As shown in table 5 the WGFof 3rd token ??????
{524} is most frequent one andwill move to bi-gram queue whereas the WGF of9th token ????
{4} is not a most frequent tokenand will reach at bi-gram queue manager onlyafter passing  through all forms generator (AFG).Token MF AFG Status Bi-gram Found Output1 - - hold ???;???
-2 - - ???-??
?,12;  ???-??
?, 20; ??
?3 Yes - hold ???
??
?4 - - ??????-?
?,10; ?????
?5 - - hold ??
?
?6 - - ??-????
,45; ???
?7 - - ???
?
?-?,86; ???
?
?-?,125; ???
?
?8 - - hold ?
?9 No?????{310}?????{1486}????{4}?-??,22;??-????
?,13; ?
?18 Yes - hold ?????
????
?11 - -?????-???,38;???-???,179;??-???,18;??
?EOS - hold ???
??
?Table 5.
Post-Processing Status and outputHere, we see that the AFG has generated twoadditional forms ?????
{310}  ?????
{1486} (table 5)for this token.
These new forms are having addi-tional diacritical marks of short vowels those aremissing in the original form.
Clearly, AFG hassupplied the best possible forms.
Next, we showhow bi-gram manager will work on WGF tokensto generate final Gurmukhi token.
In this modelthe next token will decide the selection of itsprevious one.
Consider the case of second WFGtoken ???
{14054} having bi-gram combinationswith previous one as ???-???
with weight 12 and???-???
with weight 20.
Clearly, the token ???
willproduce as output not ???
because ???-???
combi-nation has higher weight than ???-???.
Similarly,this table shows found bi-gram weights and cor-respondingly decided Gurmukhi token as output.7 Results and DiscussionThe transliteration system was tested on a smallset of poetry, article and story.
The results aretabulated in Table 6.As we can observe an average transliteration ac-curacy of 91.37% has been obtained.
We gotgood transliteration with different inputs.
Themain source of error is the existence of vowel-consonant mapping between the two scripts.
TheShahmukhi vowel characters Vav(?)
and Yeh(?
)have mapping into Gurmukhi consonantsVava(?)
and Ya(?)
respectively.
This kind ofvowel-consonant mapping can not be resolvedfully with dependency rules but can be mini-mized by refining the dictionary and phoneticcode generation rules of AFG component.
Inother cases, system makes errors showing defi-ciency in handling those tokens which are notbelonging to common vocabulary domain.Type Transliterated Tokens Accuracy %Poetry 3,301 90.63769Article 584 92.60274Story 3,981 90.88043Total 7,866 91.37362Table 6.
Transliteration Results8 ReferencesArbabi, Mansur, Scott M. Fischthal, Vincent C.Cheng and Elizabeth Bar.
1994.
Algorithms forArabic name transliteration.
IBM Journal of re-search and Development, pp 183-193.Haizhou Li, Min Zhang and Jian Su.
2004.
A JointSource-Channel Model for Machine Transliteration.Proceedings of the 42nd Annual Meeting of the As-sociation for Computational Linguistics, pp 159-166.Malik, M. G. Abbas.
2006.
Punjabi MachineTransliteration.
Proceedings of the 21st Interna-tional Conference on Computational Linguisticsand 44th Annual Meeting of the ACL, pp 1137-1144.Y.
Gal, 2002.
An HMM Approach to VowelRestoration in Arabic and Hebrew.
Proceedings ofACL Workshop on Computational Approaches toSemitic Languages, pp 27-33.Youngim Jung, Donghun Lee, Aesun Yoon, HyukChul Kwon.
2004.
Transliteration System forArabic-Numeral Expressions using Decision Treefor Intelligent Korean TTS, volume 1.
30th AnnualConference of IEEE, pp 657-662.180
