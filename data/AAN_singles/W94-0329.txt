CORECT: Combining CSCW with Natural Language Generationfor Collaborative Requirements CaptureJohn Levine" and Chris Mellish tDepartment of Artificial Intelligence,University of Edinburgh,80 South Bridge,Edinburgh EH1 1HN, Scotland, UK.Abst ractIn the CORECT project, we are building a computer-based requirements capture tool for custom-built elec-tronic testing systems.
The requirements capture pro-cess involves the participation ofa wide range of differenttypes of people - the customer, the salesperson, systemsengineers, quality assurance, marketing, and so on.
Ouraim is to build a Computer-Supported Cooperative Work-ing (CSCW) system which will allow these participants odefine an Automatic Test System (ATS) collaborativelyby adding data and making changes to an evolving de-sign.
The collected information about the design willform a large knowledge pool, all of which is pertinentto the design as a whole, but most of which is irrelevantto any particular person engaged in the design process.We will therefore be using natural anguage generation(NLG) technology to create documents from the centralknowledge pool which are tailored to the particular infor-mation needs of the participants.
These documents willgive the users a snapshot of the developing design andwill enable them to see how it can be improved and fur-ther developed.
This paper gives an introduction to theproblem we are tackling and how we are trying to solveit, and argues that combining CSCW for input with NLGfor output in this way solves some of the problems whichare encountered when trying to use either technology onits own.1 In t roduct ionIn the field of custom-built electronic systems, the re-quirements definition process from the initial draft spec-ification to the final agreed esign is demanding, and re-quires input from a wide range of skilled personnel.
How-ever, due to the lack of a centralised store of knowledgeabout he developing design, it can also be slow and proneto expensive oversights.
This research project, being car-* Email: J.Levine@ed.ac.uk~ Email: C.Mellish@ed.ac.ukried out in collaboration with Racal Research Ltd., RacalInstruments Ltd., Intelligent Applications Ltd., and theUniversity of Sussex, seeks to investigate the automationof requirements capture and the creation of a database ofinformation for system specification and documentation.The system we are developing isa Collaborative Require-ments Capture Tool (CORECT) for use by all the partic-ipants in the design process, including the customer, thesalesperson and the systems engineer.At the time that this paper is written, we are at thestart of what is to be a three-year project, so much ofwhat will be said here concerns our initial ideas about heproblem and how we intend to solve it.
We will also bepresenting our thoughts on how generated documents canbe tailored to the individual needs of the various users,and on how we think that Computer-Supported Coop-erative Work (CSCW) and natural anguage generation(NLG) can be usefully combined.
Our firs/prototype forCORECT will be based on the tool for authoring knowl-edge bases which was developed as part of the IDAS (In-telligent Documentation Advisory System) project (Re-iter et al, 1992, 1993).
The controlled acquisition of in-formation by this authoring tool will help to ensure thatthe specification is consistent and (eventually) complete.The tool will also give designers rapid feedback and makerequirements information immediately available, helpingcustomers, designers, managers and salespeople to worktogether by helping them to communicate b tter.The role of the University of Edinburgh in this projectis the development of a natural language generation com-ponent which can automatically derive various kinds ofspecification documents from the common underlyingdatabase.
The constraints of document generation willimpact on the format and contents of the database asmuch as the functionality expected of the specifications(e.g.
verification and validation).
This is an importantconsideration, because it is not always possible to sup-port NLG from an application program if the needs ofNLG are not taken into account as the system itself isdesigned (Swartout et al, 1991).
In CORECT, we willbe using NLG technology to create the documents for236:7th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 199,4the various participants in the design process, such as thecustomer, the salesperson and the design engineers.
Sincethese users have radically different information eeds, aswell as different areas of expertise and vocabulary, wewill using user modelling techniques to tailor the gener-ated documents to the particular type of user they areintended for.The problem domain in which CORECT will operateis the collaborative design of an Automatic Test System(ATS).
Such devices are designed and manufactured byRacal Instruments !indirect response to customer require-ments for automated electronic testing of complex equip-ment.
The ATS mainly consists of modular industry-standard computer-controlled instrumentation but eachsystem is different I and often complex.
In particular, agiven system may require the design of a novel piece ofequipment to be i~tegrated with the standard modularcomponents.
Because a relatively small number of testsystems are produced in any given configuration, it is im-portant hat the requirements capture process hould beswift and effective.
In addition, because of the custom-built nature of these products, the cost of the documen-tation for the machine is a large part of the overall cost,and hence if at least part of the documentation couldbe generated- automatically from the completed require-ments pecification, this would reduce the overall cost ofthe ATS.2 Combin ing  CSCW with NLGComputer-Supported Cooperative Working (CSCW) sys-tems are designed to enable a group of individuals to col-laborate on a piece of collective work, such as the writ-ing of a paper with multiple authors.
Many hypertextsystems already support asynchronous working betweendifferent people; in the Xerox NoteCards ystem (Irishand Trigg, 1989), multiple authors may open and readthe same node, but!only one user has the ability to mod-ify the node's content at one time.
The Aquanet sys-tem (Marshall et al., 1991), under development a XeroxPARC, is a hypertext tool to support collaborative knowl-edge structuring.
In CORECT, we will be developingthis idea so that different users will have their own viewsof the common data, improving communication effective-ness, and building the information at a fact level ratherthan a document leVel, from which individual documentscan be generated.Techniques for ensuring that the right information getsdelivered to the right people at the right time have beenof interest o CSCW since the field's beginnings, withperhaps the best-kflown project being the MIT Informa-tion Lens (Malone et al, 1987).
These ideas were fur-.ther developed in sUbsequent projects, including ObjectLens (Lai and Malone, 1988), the CMU Advisor system(Borensten and Thyberg, 1991) and the GM/EDS In-Vision system (Kass and Stadnyk, 1992).
The last ofthese, which distributes technical documents (engineeringchange notices) and uses advanced user-modelling tech-niques as well as production rules to filter the documents,is probably closest o what we are doing in CORECT.The above-mentioned systems all simply distributedcomplete messages.
In CORECT, however, our intentionis to go beyond this by extracting information relevant toa particular user from the common knowledge pool, andthen presenting this to the user as a natural language doc-ument.
Other NLG systems that extract and summariseinformation have been developed in other esearch, partic-ularly by CoGenTex; their systems include, for example,FOG (Bourbeau et al, 1990), which produced weather re-ports; LFS (Iordanskaja et al, 1992), which summarisedemployment statistics; and Joyce (Rambow and Korelsky,1992), which summarised software designs from a securityperspective.
The work on Joyce is particularly interestingbecause part of its justification was that natural languagedesign summaries are useful to the designers themselves,as well as to people outside the design group.
We expectthat designers will find summaries even more useful ina multi-author design tool such as CORECT, since theywill give them an overview of the progress of the design asa whole, and of what their colleagues have accomplishedto date.The proposed combination ofCSCW for collecting andmodifying the knowledge pool together with NLG forpresenting users with selective views of the data is onewhich potentially solves problems which are encounteredwhen trying to use either technology individually.
Re-search in CSCW to date provides us with the means tocollect data asynchronously from a diverse collection ofusers and hold that data in a format in which consis-tency checking (i.e.
verification and validation) can beperformed.
However, for many applications of this tech-nology, such as the collection of requirements informationproposed in CORECT, the pool of knowledge soon growsin size such that it is not possible to see all of the informa-tion at once.
In addition, if the data has been collectedand entered by a heterogeneous er group with diverseinterests and information needs, then the vast majority ofthe information i the database will be irrelevant to anyparticular user.
Since the requirements capture processis iterative, in the sense that a user will use a summaryof the current design in order to improve and augmentit, there is a need for CSCW systems in areas such asours to be able to present selected information from thedata pool for individual users.
This role can best be filledusing NLG technology to generate documents which aretailored to the needs of the individual user.The first and probably the most important requirementfor natural language generation is that the initial data re-quired for generation, i.e.
the domain knowledge, shouldbe available.
It is certainly possible to say that we canuse NLG technology to generate different documents andtexts from the same underlying data, but if the underly-ing data is not there or is impoverished in some way, then2377th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994no NLG can take place.
In the IDAS project, our goalwas the automatic generation of on-line documentationfor Automatic Test Systems and other complex custom-built equipment.
The knowledge base for the IDAS gener-ator contained enough information about the equipmentbeing documented tosupport different styles of documen-tation for the different user tasks and expertise levels.During this project, it was realised that authoring theknowledge base by hand for a complex piece of equip-ment such as an ATS would be a difficult task, and soa purpose-built graphical authoring tool was developedwhich would enable systems designers to enter this datamore readily.
However, by the end of the project, ourconclusions were that the benefits gained from the provi-sion of user-tailored documentation were not sufficientlylarge to outweigh the cost of authoring the large knowl-edge bases required (Reiter and Mellish, 1993; Reiter etal., 1993).Given this need for the knowledge required for natu-ral language generation to be collected more cheaply, itmakes ense to see whether the data used in other pro-cesses, such as the data used during the design of theequipment, could be used for NLG.
In COLLECT, we aretaking this one stage further, by making NLG an inte-gral part of a tool whose primary function is to capturerequirements data.
Therefore, in this particular applica-tion, as far as NLG is concerned, the data comes withno additional cost attached.
In addition, the knowledgebase constructed during the design process makes a verygood starting point for the construction of a knowledgebase for a user-oriented system such as IDAS.
Although itwould be necessary to add information which is not neces-sary for the design but which is vital for use, maintenanceand repair of the machine, the data collected uring therequirements capture process would provide a very use-ful skeleton for the creation of knowledge base for on-lineuser documentation.
Therefore, the use of CSCW for theeffective collection of data in CORECT has the poten-tial for solving the authoring problem in natural languagegeneration, at least for applications such as this one.3 An  Overv iew of CORECTThe basic architecture for the CORECT system is shownin Figure 1.
Each of the different ypes of user interactswith a graphical user interface, which allows the users toadd components from a component s ore to the develop-ing design.
Each individual item in the component s oreis a terminal node of an is-a hierarchy, which allows forthe use of inheritance when defining the properties of in-dividual components.
The structure of the ATS beingdesigned consists of a collection of components which areconnected together, where an individual component maybe a collection of subcomponents, all of which have tobe authored in order to make up a large sub-system ofthe ATS itself.
In essence, the user can pick up com-coherency d-mater 1 I database rn n~ement \[ natural la t~lagefor design veriBcalion I \] symm for generator lot~ndidJon ~ ~mments data - document crea~onII II 1\[gra,ohlcaJ user interfacecustomer salesperson er@naer qua, ty as..~.nnce rna~e~ngFigure 1: The Architecture of the Systemponents from the parts store and either add them to toa developing parts hierarchy or block diagram showingconnections.The actual data corresponding tothe component s ore,parts hierarchy and connections i held within the sys-tem's database.
This is held in a form which is sufficientlydetailed for consistency and coherency checking to be per-formed using expert system rules.
The use of a centraldatabase of information which is examined and added toby the other three modules of the system is important,since the data pool can be regarded as the core of thissystem.
Using this data-central rchitecture allows us todevelop the system in a strictly modular way with theminimum number of interface specifications.
This meansthat the database manager can be regarded as the min-imal system, with the other three modules being exten-sions to this system which increase its functionality.
Thisalso means that if further modules are proposed, thesecan be added in much the same manner.The third component of the system is the natural lan-guage generator.
This will be invoked by the user inter-face when the user requests that a particular document,such as a costing summary or a proposal, should be gen-erated.
The generator will select information from thedatabase which is appropriate to this document, decideon how it should refer to the database concepts for thisparticular user, and then generate a final surface form forthe document together with formatting directives (whichcould be in SGML or Latex, for example).
The finisheddocument will be returned to the user interface whichwill present it to the user on the screen or send it to beprinted.
The three phases of generation (content determi-nation, sentence planning and linguistic realisation) willbe broadly similar to those used in IDAS (Reiter et al,1992) and in Joyce (Rambow and Korelsky, 1992).The primary function of the NLG component inCORECT is to distribute information between the people2387th International Generation Workshop ?
Kennebunkport, Maine ?
June 21-24, 1994who are engaged in the design process, allowing them tosee different views of the data which are tailored to theirparticular needs.
For example, a customer will be veryinterested in the overall cost of the machine, and in seeingthat the functionality expected of the various componentsof the machine is met, and so a document prepared forthis type of user should contain this sort of informationwith other more technical material being left out.
One ofour main aims in designing the CORECT NLG moduleis to investigate the issues involved in tailoring the con-tent of what is said, and in finding a mechanism whichis sufficiently powerful to allow a range of documents tobe generated while also stressing that the methods usedshould be practica!
and implementable.The final module of CORECT is the coherency checker,which will perform verification and validation checks onthe design.
Initially, this will be invoked manually bythe user via the user interface, and it will then use ex-pert system rules :to see whether there are any gaps inthe current designs (i.e.
components which still need tobe added), and whether there are any inconsistencies inthe current design, such as the wrong type of connectingcables being used.
Considered as a whole, there are threeaspects of the CORECT system which solve problems incollaborative r quirements capture as it is currently prac-ticed: (a) all the design data is kept in one place; (b) thesystem can provide different users with different views ofthis data using NLG; and (c) the system can provide ver-ification and validation of the design, helping to minimisecostly oversights.AcknowledgementsThe CORECT project is partially funded by UK SERCgrant GR/J/53454 land UK DTI grant IED4/1/7025, andwe are grateful to SERC and the DTI for their support ofthis work.
We would also like to thank the CORECT col-laborators - Racal Instruments Ltd., Racal Research Ltd.,Intelligent Applications Ltd. and the University of Sussex- for the help that they have given us in performing thisresearch.
We would also like to express our thanks to Dr.Ehud Reiter for providing many of the original ideas fromwhich this research as developed.ReferencesBorensten, N. and iThyberg, C. (1991).
Power, Ease ofUse, and Cooperative Work in a Practical MultimediaMessage System.
International Journal of Man-MachineStudies, 34,229-260.Bourbeau, L., Carcagno, D., Goldberg, E., Kittridge, R.and Polguere, A.
(1990).
Bilingual Generation of WeatherForecasts in an Operations Environment.
Proceedings ofthe 13th International Conference on Computational Lin-guistics (COLING-90), Volume 1, 90-92.Iordanskaja, L., Kim, M., Kittridge, R., Lavoie, B. andPolguere, A.
(1992).
Generation of Extended BilingualStatistical Reports.
Proceedings of the 14th InternationalConference on Computational Linguistics (COLING-9~),Volume 3, 1019-1023.Irish, P. and Trigg, R. (1989).
Supporting Collaborationin IIypermedia: Issues and Experiences.
Journal of theAmerican Society for Information Science, 40(3), 192-199.Kass, R. and Stadnyk, I.
(1992).
Using User Modelsto Improve Organisational Communication.
Proceedingsof the Third International Workshop on User Modelling,135-137.Lai, K. and Malone, T. (1988).
Object Lens: A 'Spread-sheet' for Cooperative Work.
Proceedings of the Confer-ence on Computer-Supported Cooperative Work (CSCW'88), Portland, Oregon, 115-124.Malone, T., Grant, K., Turbak, F., Broust, S. and Co-hen, M. (1987).
Intelligent Information-Sharing Systems.Communications of the ACM, 30, 390-402.Marshall, C., Halasz, F., Rogers, R., Janssen, W. (1991).Aquanet: a Hypertext Tool to Hold Your Knowledge inPlace.
Proceedings of the 3rd A CM Conference on Hyper-text, San Antonio, Texas, 261-275.Rambow, O. and Korelsky, T. (1992).
Applied Text Gen-eration.
Proceedings of the Third Conference on AppliedNatural Language Processing, Trento, Italy, 40-47.Reiter, E. and Dale, R. (1992).
A Fast Algorithm for theGeneration of Referring Expressions.
Proceedings of theFourteenth International Conference on ComputationalLinguistics (COLING-9g), Volume 1,232-238.Reiter, E., Mellish, C .
and Levine, J.
(1992).
Auto-matic Generation of On-Line Documentation i  the IDASProject.
Proceedings of the Third Conference on AppliedNatural Language Processing, Association for Computa-tional Linguistics, 64-71.Reiter, E. and Mellish, C. (1993).
Optimizing the Costsand Benefits of Natural Language Generation.
Proceed-ings of the 13th International Joint Conference on Arti-ficial Intelligence (IJCAI-93), Chambery, Prance.Reiter, E., Mellish, C. and Levine, J.
(1993).
AutomaticGeneration of Technical Documentation.
Submitted toApplied Artificial Intelligence.Swartout, W., Paris, C. and Moore, J.
(1991).
Design forExplainable Expert Systems.
IEEE Expert, June 1991,58-64.239
