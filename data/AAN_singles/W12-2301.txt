Proceedings of the Twelfth Meeting of the Special Interest Group on Computational Morphology and Phonology (SIGMORPHON2012), pages 1?9,Montre?al, Canada, June 7, 2012. c?2012 Association for Computational LinguisticsA Morphological Analyzer for Egyptian ArabicNizar Habash and Ramy Eskander and Abdelati HawwariCenter for Computational Learning SystemsColumbia UniversityNew York, NY, USA{habash,reskander,ahawwari}@ccls.columbia.eduAbstractMost tools and resources developed for nat-ural language processing of Arabic are de-signed for Modern Standard Arabic (MSA)and perform terribly on Arabic dialects, suchas Egyptian Arabic.
Egyptian Arabic differsfrom MSA phonologically, morphologicallyand lexically and has no standardized orthog-raphy.
We present a linguistically accurate,large-scale morphological analyzer for Egyp-tian Arabic.
The analyzer extends an existingresource, the Egyptian Colloquial Arabic Lex-icon, and follows the part-of-speech guide-lines used by the Linguistic Data Consortiumfor Egyptian Arabic.
It accepts multiple or-thographic variants and normalizes them to aconventional orthography.1 IntroductionDialectal Arabic (DA) refers to the day-to-day na-tive vernaculars spoken in the Arab World.
DAis used side by side with Modern Standard Ara-bic (MSA), the official language of the media andeducation (Holes, 2004).
Although DAs are his-torically related to MSA, there are many phono-logical, morphological and lexical differences be-tween them.
Unlike MSA, DAs have no stan-dard orthographies or language academies.
Fur-thermore, different DAs, such as Egyptian Arabic(henceforth, EGY), Levantine Arabic or MoroccanArabic have important differences among them sim-ilar to those seen among Romance languages (Er-win, 1963; Cowell, 1964; Abdel-Massih et al, 1979;Holes, 2004).
Most tools and resources developedfor natural language processing (NLP) of Arabic aredesigned for MSA.
Such resources are quite limitedwhen it comes to processing DA, e.g., a state-of-the-art MSA morphological analyzer has been reportedto only have 60% coverage of Levantine Arabic verbforms (Habash and Rambow, 2006).
Most efforts toaddress this gap have been lacking.
Some have takena quick-and-dirty approach to model shallow mor-phology in DA by extending MSA tools, resultingin linguistically inaccurate models (Abo Bakr et al,2008; Salloum and Habash, 2011).
Others have at-tempted to build linguistically accurate models thatare lacking in coverage (at the lexical or inflectionallevels) or focusing on representations that are notreadily usable for NLP text processing, e.g., phono-logical lexicons (Kilany et al, 2002).In this paper we present the Columbia Ara-bic Language and dIalect Morphological Analyzer(CALIMA) for EGY.1 We built this tool by ex-tending an existing resource for EGY, the EgyptianColloquial Arabic Lexicon (ECAL) (Kilany et al,2002).
CALIMA is a linguistically accurate, large-scale morphological analyzer.
It follows the part-of-speech (POS) guidelines used by the Linguistic DataConsortium for EGY (Maamouri et al, 2012b).
Itaccepts multiple orthographic variants and normal-izes them to CODA, a conventional orthography forDA (Habash et al, 2012).The rest of the paper is structured as follows: Sec-tion 2 presents relevant motivating linguistic facts.Section 3 discusses related work.
Section 4 detailsthe steps taken to create CALIMA starting withECAL.
Section 5 presents a preliminary evaluationand statistics about the coverage of CALIMA.
Fi-nally, Section 6 outlines future plans and directions.1Although we focus on Egyptian Arabic in this paper, theCALIMA name will be used in the future to cover a variety ofdialects.12 Motivating Linguistic FactsWe present some general Arabic (MSA/DA) NLPchallenges.
Then we discuss differences betweenMSA and DA ?
specifically EGY.2.1 General Arabic Linguistic ChallengesArabic, as MSA or DA, poses many challengesfor NLP.
Arabic is a morphologically complex lan-guage which includes rich inflectional morphology,expressed both templatically and affixationally, andseveral classes of attachable clitics.
For example, theMSA word A?
E?J.J?J??
wa+sa+ya-ktub-uwna+hA2?and they will write it?
has two proclitics (+?
wa+?and?
and +?
sa+ ?will?
), one prefix -?ya- ?3rdperson?, one suffix 	?
?- -uwna ?masculine plural?and one pronominal enclitic A?+ +hA ?it/her?.
Thestem ktub can be further analyzed into the root ktband pattern 12u3.Additionally, Arabic is written with optional dia-critics that primarily specify short vowels and con-sonantal doubling, e.g., the example above will mostcertainly be written as wsyktbwnhA.
The absence ofthese diacritics together with the language?s com-plex morphology lead to a high degree of ambiguity,e.g., the Standard Arabic Morphological Analyzer(SAMA) (Graff et al, 2009) produces an average of12 analyses per MSA word.Moreover, some letters in Arabic are often spelledinconsistently which leads to an increase in bothsparsity (multiple forms of the same word) andambiguity (same form corresponding to multiplewords), e.g., variants of the Hamzated Alif,@ ?
or@A?, are often written without their Hamza (Z ?
): @ A.and the Alif-Maqsura (or dot-less Ya) ?
?
and theregular dotted Ya ?y are often used interchangeablyin the word-final position (Buckwalter, 2007).Arabic complex morphology and ambiguity arehandled using tools for disambiguation and tok-enization (Habash and Rambow, 2005; Diab et al,2007).2Arabic orthographic transliteration is presented in the HSBscheme (Habash et al, 2007): (in alphabetical order)@ H.H H h. h p XXP 	P ?
?
??
??
????
?
?
??
?
?
?A b t ?
j H x d ?
r z s ?
S D T D?
?
?
f q k l m n h w yand the additional letters: ?
Z, ?
@, A?
@, A?@, w??
', y?
Z?
', ~ ?, ?
?.We distinguish between morphological analysis,whose target is to produce all possible morphologi-cal/POS readings of a word out of context, and mor-phological disambiguation, which attempts to tagthe word in context (Habash and Rambow, 2005).The work presented in this paper is only about mor-phological analysis.2.2 Differences between MSA and DAContemporary Arabic is in fact a collection of vari-eties: MSA, which has a standard orthography andis used in formal settings, and DAs, which are com-monly used informally and with increasing presenceon the web, but which do not have standard or-thographies.
DAs mostly differ from MSA phono-logically, morphologically, and lexically (Gadalla,2000; Holes, 2004).
These difference are not mod-eled as part of MSA NLP tools, leaving a gap incoverage when using them to process DAs.
All ex-amples below are in Egyptian Arabic (EGY).Phonologically, the profile of EGY is quite simi-lar to MSA, except for some important differences.For example, the MSA consonants?/X/ H q/?/?are generally pronounced in EGY (Cairene) as ?/z/s(Holes, 2004).
Some of these consonants shift in dif-ferent ways in different words: e.g., MSA I.KX ?anb?fault?
and H.Y?
ki?b ?lying?
are pronounced zanband kidb.
EGY has five long vowels compared withMSA?s three long vowels.
Unlike MSA, long vow-els in EGY predictably shorten under certain condi-tions, often as a result of cliticization.
For example,compare the following forms of the same verb:?A ?
?Af /?a?f/ ?he saw?
and A?
?A ?
?Af+hA /?afha/ ?he sawher?
(Habash et al, 2012).Morphologically, the most important differenceis in the use of clitics and affixes that do not ex-ist in MSA.
For instance, the EGY equivalent ofthe MSA example above is A??J.J?Jk?
wi+Ha+yi-ktib-uw+hA ?and they will write it?.
The optionalityof vocalic diacritics helps hide some of the differ-ences resulting from vowel changes; compare theundiacritized forms: EGY wHyktbwhA and MSAwsyktbwnhA.
In this example, the forms of the cli-tics and affixes are different in EGY although theyhave the same meaning; however, EGY has cliticsthat are not part of MSA morphology, e.g., the in-direct pronominal object clitic (+l+uh ?for him?)2??A??J.J?Jk?
wi+Ha+yi-ktib-uw+hA+l+uh ?and theywill write it for him?.
Another important example isthe circumfix negation ?+ + A?
mA+ +?
which sur-rounds some verb forms: ?
.J?
A?
mA+katab+?
?hedid not write?
(the MSA equivalent is two words:I.J?K??
lam yaktub).
Another important morpho-logical difference from MSA is that DAs in generaland not just EGY drop the case and mood featuresalmost completely.Lexically, the number of differences is verylarge.
Examples include ?
.
bas ?only?,?QK.
Q?tarabayza~ ?table?, H@Q?
mirAt ?wife [of]?
and ?
?Xdawl ?these?, which correspond to MSA ???
faqaT,???A?
TAwila~, ?k.
?
P zawja~ and ZB??
haw?lA?, re-spectively.An important challenge for NLP work on DAsin general is the lack of an orthographic standard.EGY writers are often inconsistent even in theirown writing.
The differences in phonology betweenMSA and EGY are often responsible: words canbe spelled as pronounced or etymologically in theirrelated MSA form, e.g., H. Y?
kidb or H.Y?
ki?b.Some clitics have multiple common forms, e.g., thefuture particle h Ha appears as a separate word or asa proclitic +h/+?
Ha+/ha+, reflecting different pro-nunciations.
The different spellings may add someconfusion, e.g., ?J.J?
ktbw may be @?J.J?
katabuwA?they wrote?
or ?J.J?
katabuh ?he wrote it?.
Finally,shortened long vowels can be spelled long or short,e.g., A?
?A ?/ A??
?
?Af+hA/?f+hA ?he saw her?.3 Related Work3.1 Approaches to Arabic MorphologyThere has been a considerable amount of work onArabic morphological analysis (Al-Sughaiyer andAl-Kharashi, 2004; Habash, 2010).
Altantawy et al(2011) characterize the various approaches exploredfor Arabic and Semitic computational morphologyas being on a continuum with two poles: on one end,very abstract and linguistically rich representationsand morphological rules are used to derive surfaceforms; while on the other end, simple and shallowtechniques focus on efficient search in a space ofprecompiled (tabulated) solutions.
The first type istypically implemented using finite-state technologyand can be at many different degrees of sophistica-tion and detail (Beesley et al, 1989; Kiraz, 2000;Habash and Rambow, 2006).
The second type is typ-ically implemented using hash-tables with a simplesearch algorithm.
Examples include the BuckwalterArabic Morphological Analyzer (BAMA) (Buck-walter, 2004), its Standard Arabic MorphologicalAnalyzer (SAMA) (Graff et al, 2009) incarnation,and their generation-oriented extension, ALMOR(Habash, 2007).
These systems do not represent themorphemic, phonological and orthographic rules di-rectly, and instead compile their effect into the lexi-con itself, which consists of three tables for prefixes,stems and suffixes and their compatibilities.
A pre-fix or suffix in this approach is a string consisting ofall the word?s prefixes and suffixes, respectively, asa single unit (including null affix sequences).
Dur-ing analysis, all possible splits of a word into com-patible prefix-stem-suffix combination are explored.More details are discussed in Section 4.5.
Numer-ous intermediate points exist between these two ex-tremes (e.g., ElixirFM (Smr?, 2007)).
Altantawy etal.
(2011) describe a method for converting a lin-guistically complex and abstract implementation ofArabic verbs in finite-state machinery into a simpleprecompiled tabular representation.The approach we follow in this paper is closerto the second type.
We start with a lexicon of in-flected forms and derive from it a tabular represen-tation compatible with the SAMA system for MSA.However, as we do this, we design the tables and ex-tend them in ways that capture generalizations andextend orthographic coverage.3.2 Arabic Dialect MorphologyThe majority of the work discussed above has fo-cused on MSA, while only a few efforts have tar-geted DA morphology (Kilany et al, 2002; Riesaand Yarowsky, 2006; Habash and Rambow, 2006;Abo Bakr et al, 2008; Salloum and Habash, 2011;Mohamed et al, 2012).
These efforts generally fallin two camps.
First are solutions that focus on ex-tending MSA tools to cover DA phenomena.
Forexample, both Abo Bakr et al (2008) and Salloumand Habash (2011) extended the BAMA/SAMAdatabases (Buckwalter, 2004; Graff et al, 2009) toaccept DA prefixes and suffixes.
Both of these ef-forts were interested in mapping DA text to someMSA-like form; as such they did not model DA lin-3guistic phenomena, e.g., the ADAM system (Sal-loum and Habash, 2011) outputs only MSA diacrit-ics that are discarded in later processing.The second camp is interested in modeling DA di-rectly.
However, the attempts at doing so are lackingin coverage in one dimension or another.
The earli-est effort on EGY that we know of is the EgyptianColloquial Arabic Lexicon (ECAL) (Kilany et al,2002).
It was developed as part of the CALLHOMEEgyptian Arabic (CHE) corpus (Gadalla et al, 1997)which contains 140 telephone conversations andtheir transcripts.
The lexicon lists all of the wordsappearing in the CHE corpus and provides phono-logical, orthographic and morphological informa-tion for them.
This is an important resource; how-ever, it is lacking in many ways: the orthographicforms are undiacritized, no morpheme segmenta-tions are provided, and the lexicon has only some66K fully inflected forms and as such lacks generalmorphological coverage.
Another effort is the workby Habash and Rambow (2006) which focuses onmodeling DAs together with MSA using a commonmulti-tier finite-state-machine framework.
Althoughthis approach has a lot of potential, in practice, itis closer to the first camp in its results since theyused MSA lexicons as a base.
Finally, two previ-ous efforts focused on modeling shallow dialectalsegmentation using supervised methods (Riesa andYarowsky, 2006; Mohamed et al, 2012).
Riesa andYarowsky (2006) presented a supervised algorithmfor online morpheme segmentation for Iraqi Arabicthat cut the out-of-vocabulary rates by half in thecontext of machine translation into English.
Mo-hamed et al (2012) annotated a collection of EGYfor morpheme boundaries and used this data to de-velop an EGY tokenizer.
Although these effortsmodel DA directly, they remain at a shallow levelof representation (undiacritized surface morph seg-mentation).We use the ECAL lexicon as a base for CAL-IMA and extend it further.
Some of the expansiontechniques we used are inspired by previous solu-tions (Abo Bakr et al, 2008; Salloum and Habash,2011).
For the morphological representation, wefollow the Linguistic Data Consortium guidelineswhich extend the MSA POS guidelines to multi-ple dialects (Maamouri et al, 2006; Maamouri etal., 2012b).
To address the problem of orthographicvariations, we follow the proposal by Habash et al(2012) who designed a conventional orthography forDA (or CODA) for NLP applications in the CAL-IMA databases.
However, to handle input in a vari-ety of spellings, we extend our analyzer to acceptnon-CODA-compliant word forms but map themonly to CODA-compliant forms as part of the anal-ysis.4 ApproachWe describe next the various steps for creatingCALIMA starting with ECAL.
The details of theapproach are to some degree dependent on thisunique resource; however, some aspects of the ap-proach may be generalizable to other resources, andlanguages or dialects.4.1 The Egyptian Colloquial Arabic LexiconECAL has about 66K entries: 27K verbs, 36Knouns and adjectives, 1.5K proper nouns and 1Kclosed classes.
For each entry, the lexicon pro-vides a phonological form, an undiacritized Ara-bic script orthography, a lemma (in phonologicalform), and morphological features, among otherinformation.
There are 36K unique lemmas and1,464 unique morphological feature combinations.The following is an example ECAL entry for theword ?????JJ.?
mbyklmw?
?he did not talk to him?.3We only show Arabic orthography, phonology, andlemma+features:mbyklmw?mabiykallimU$4kallim:verb+pres-3rd-masc-sg+DO-3rd-masc-sg+negOur goal for CALIMA is to have a much largercoverage, a CODA-compliant diacritized orthogra-phy, and a morpheme-based morphological analysis.The next steps allow us to accomplish these goals.4.2 Diacritic InsertionFirst, we built a component to diacritize the ECALundiacritized Arabic script entries in a way that isconsistent with ECAL phonological form.
This wasimplemented using a finite-state transducer (FST)that maps the phonological form to multiple possible3The same orthographic form has another reading ?they didnot talk?
which of course has different morphological features.4The phonological form as used in ECAL.
For transcrip-tion details, see (Kilany et al, 2002).4diacritized Arabic script forms.
The form that is thesame as the undiacritized ECAL orthography (ex-cept for diacritics) is used as the diacritized orthog-raphy for the rest of the process.
The FST consists ofabout 160 transformations that we created manually.All except for 100 cases are generic mappings, e.g.,two repeated b consonants are turned into H.
b?,5or a short vowel u can be orthographically a shortvowel (just the diacritic u) or a long vowel uw whichshortened.
The exceptional 100 cases were specifiedby hand in the FST as complete string mappings.These were mostly odd spellings of foreign wordsor spelling errors.
We did not attempt to correct orchange the ECAL letter spelling; we only added di-acritics.After diacritization, we modify the Arabic orthog-raphy in the example above to: mabiykal~imuw?.4.3 Morphological Tag MappingNext, we wrote rules to convert from ECALdiacritized Arabic and morphology to CODA-compliant diacritized Arabic and LDC EGY POScompliant tags.
The rules fall into three categories:ignore rules specify which ECAL entries to ex-clude due to errors; correction rules correct for someECAL entry errors; and prefix/suffix/stem rules areused to identify specific pairs of prefix/suffix/stemsubstrings and morphological features to map toappropriate prefix/suffix/stem morphemes, respec-tively.
For stems, the majority of the rules alsoidentify roots and patterns.
Since multiple root-pattern combinations may be possible for a partic-ular word, the appropriate root-pattern is chosen byenforcing consistency across all the inflected formsof the lemma of the word and minimizing the over-all number of roots in the system.
We do not useor report on root-patterns in CALIMA in this papersince this information is not required by the LDCtags; however, we plan on using them in future ef-forts exploiting templatic morphology.At the time of writing this paper, the system in-cluded 4,632 rules covering all POS.
These include1,248 ignore rules, 1,451 correction rules, 83 pre-fix rules, and 441 suffixes rules.
About 1,409 stemrules are used to map core POS tags and iden-tify templatic roots and patterns.
Some rules were5The ?
diacritic or Shadda indicates the presence of conso-nantal doubling.semi-automatically created, but all were manuallychecked.
The rules are specified in a simple formatthat is interpreted and applied by a separate rule pro-cessing script.
Developing the script and writing therules took about 3 person-months of effort.As an example, the following three rules are usedto handle the circumfix ma++?
?not?
and the pro-gressing particle bi+.PRE: ma,+neg => ?
,+neg >> mA/NEG_PART#PRE: bi,+pres => ?
,+subj >> bi/PROG_PART+SUF: ?,+neg => ?,?
>> +?/NEG_PARTThe input to the rule processor is a pair of surfaceform and morphological features.
Each rule matcheson a surface substring and a combination of mor-phological features (first two comma-separated to-kens in the rule) and rewrites the parts it matchedon (second two comma-separated tokens in the ruleafter =>).
The type of the rule, i.e.
prefix or suf-fix rule, determines how the matching is applied.
Inaddition, the rule generates a substring of the tar-get tag (last token in the rule).
The first and thirdrules above handle a circumfix; the +neg feature isnot deleted in the first rule (which handles the pre-fix) to allow the third rule (which handles the suffix)to fire.
The second rule rewrites the feature +pres(present tense) as +subj (subjunctive) which is con-sistent with the form of the verb after removing theprogressive particle bi+.
After applying these rulesin addition to a few others, the above example isturned into CODA and EGY POS compliant forms(# means word boundary):6mA#bi+yi+kal~im+huw+?NEG_PART#PROG_PART+IV3MS+IV+IVSUFF_DO:3MS+NEG_PARTThe stem rules, whose results are not shown here,determine that the root is klm and the pattern is1a22i3.We extended the set of mapped ECAL entriessystematically.
We copied entries and modified themto include additional clitics that are not present withall entries, e.g., the conjunction +?
fa+ ?then?, andthe definite article +?
@ Al+.4.4 Orthographic Lemma IdentificationThe ECAL lemmas are specified in a phonologicalform, e.g., in the example above, it is kallim.
To de-termine the diacritized Arabic orthography spelling6CODA guidelines state that the negative particle A?
mA isnot to be cliticized except in a very small number of words(Habash et al, 2012).5of the lemma, we relied on the existence of thelemma itself as an entry and other ad hoc rules toidentify the appropriate form.
Using this technique,we successfully identified the orthographic lemmaform for 97% of the cases.
The remainder weremanually corrected.
We followed the guidelines forlemma specification in SAMA, e.g., verbs are citedusing the third person masculine singular perfectiveform.
For our example, the CALIMA lemma iskal?im.4.5 Table ConstructionWe converted the mapped ECAL entries to aSAMA-like representation (Graff et al, 2009).
InSAMA, morphological information is stored in sixtables.
Three tables specify complex prefixes, com-plex suffixes and stems.
A complex prefix/suffix isa set of prefix/suffix morphemes that are treated as asingle database entry, e.g., wi+Ha+yi is a complexprefix made of three prefix morphemes.
Each com-plex prefix, complex suffix and stem has a class cat-egory which abstract away from all similarly behav-ing complex affixes and stems.
The other three ta-bles specify compatibility across the class categories(prefix-stem, prefix-suffix and stem-suffix).
We ex-tracted triples of prefix-stem-suffix and used them tobuild the six SAMA-like tables.
The generated ta-bles are usable by the sama-analyze engine providedas part of SAMA3.1 (Graff et al, 2009).
We alsoadded back off mode support for NOUN_PROP.Prefix/stem/suffix class categories are generatedautomatically.
We identified specific features of theword?s stem and affixes to generate specific affixclasses that allow for correct coverage expansion.For example, in a complex suffix, the first morphemeis the only one interacting with the stem.
As such,there is no need to give each complex suffix its ownclass category, but rather assign the class categorybased on the first morpheme.
This allows us to auto-matically extend the coverage of the analyzer com-pared to that of the ECAL lexicon.We also go further in terms of generalizations.
Forinstance, some of the pronoun clitics in EGY havetwo forms that depend on whether the stem endswith vowel-consonant or two consonants, e.g., A?E.
AJ?kitAb+hA ?her book?
as opposed to A?
DK.
@ Aibn+ahA?her son?.
This information is used to give the suf-fixes +hA and +ahA different class categories thatare generalizable to other similarly behaving clitics.At this stage of our system, which we refer to asCALIMA-core in Section 5.2, there are 252 uniquecomplex prefixes and 550 unique complex suffixes,constructed from 43 and 86 unique simple prefixesand suffixes, respectively.
The total number of pre-fix/suffix class categories is only 41 and 78, respec-tively.4.6 Various Table ExtensionsWe extended the CALIMA-core tables in a simi-lar approach to the extension of SAMA tables doneby Salloum and Habash (2011).
We distinguish twotypes of extensions.Additional Clitics and POS Tags We added anumber of clitics and POS tags that are not part ofECAL, e.g., the prepositional clitic +?
Ea+ ?on?and multiple POS tags for the proclitic +?
fa+ (asCONJ, SUB_CONJ and CONNEC_PART).
Here we copied arelated entry and modified it but kept its categoryclass.
For example, in the case of +?
Ea+ ?on?, wecopied a prepositional clitic with similar distributionand behavior: +H.
bi+ ?with?.Non-CODA Orthography Support We extendedthe generated tables to include common non-CODAorthographic variants.
The following are some ex-amples of the expansions.
First, we added the vari-ant ?+ +w for two suffixes: ?+ +uh ?his/him?
and@?+ +uwA ?they/you [plural]?.
Second, we addedthe form ha+ for the future particle Ha+.
Third,we introduced non-CODA-compliant Hamza formsas variants for some stems.
Finally, some of theextensions target specific stems of frequently usedwords, such as the adverb ?
?QK.
brDh ?also?
whichcan be written as ?XQK.
brdh and ??QK.
brDw amongother forms.
The non-CODA forms are only used tomatch on the input word, with the returned analysisbeing a corrected analysis.
For example, the word?J.J?J?
hyktbw returns the analysis @?J.J?Jk Hyk-tbwA Ha/FUT_PART+yi/IV3P+ktib/IV+uwA/3P ?theywill write?
among other analyses.
The orthographicvariations supported include 16 prefix cases, 41 stemcases, and eight suffix cases.After all the clitic, POS tag and orthographic ex-tensions, the total number of complex prefix entries6substantially increases from 352 to 2,421, and thenumber of complex suffix entries increases from 826to 1,179.
The number of stem entries increases fromaround 60K to 100K.
The total number of recogniz-able word forms increases from 4M to 48M.
We willrefer to the system with all the extensions as CAL-IMA in Section 5.5 Current StatusIn this section, we present some statistics on the cur-rent status of the CALIMA analyzer.
As with allwork on morphological analyzers, there are alwaysways to improve the quality and coverage.5.1 System StatisticsCALIMA has 100K stems corresponding to 36Klemmas.
There are 2,421 complex prefixes and1,179 complex suffixes (unique diacritized form andPOS tag combinations).
The total number of ana-lyzable words by CALIMA is 48M words (com-pared to the 66K entries in ECAL).
This is still lim-ited compared to the SAMA3.1 analyzer (Graff etal., 2009) whose coverage of MSA reaches 246Mwords.
See Table 1.5.2 Coverage EvaluationWe tested CALIMA against a manually annotatedEGY corpus of 3,300 words (Maamouri et al,2012a) which was not used as part of its develop-ment, i.e., a completely blind test.7 This evaluationis a POS recall evaluation.
It is not about selectingthe correct POS answer in context.
We do not con-sider whether the diacritization or the lemma choiceare correct or not.
We compare CALIMA coveragewith that of ECAL and a state-of-the-art MSA an-alyzer, SAMA3.1 (Graff et al, 2009).
For the pur-pose of completeness, we also compare CALIMA-core and an extended version of SAMA3.1.
TheSAMA3.1 extensions include two EGY verbal pro-clitics (Ha/FUT_PART and bi/PROG_PART), some alter-native suffixes that have no case or mood, and all theorthographic variations used inside CALIMA.
We7We ignore some specific choices made by the annotators,most importantly the use of ".VN" to mark verbal nominals,which is not even supported in SAMA3.1.
We also ignoresome annotation choices that are not consistent with the latestLDC guidelines (Maamouri et al, 2012b), such as using gender-marked plurals in some contexts, e.g., 3MP instead of 3P.also compare the performance of different mergedversions of SAMA3.1 and CALIMA.
The resultsare presented in Table 1.The second column in Table 1, Correct Answerindicates the percentage of the test words whose cor-rect analysis in context appears among the analysesreturned by the analyzer.
The third column, No Cor-rect Answer, presents the percentage of time one ormore analyses are returned, but none matching thecorrect answer.
The fourth column, No Analysis, in-dicates the percentage of words returning no anal-yses.
The last column presents the total number ofrecognizable words in the system.CALIMA provides among its results a correct an-swer for POS tags over 84% of the time.
This is al-most 27% absolute over the original list of wordsfrom ECAL and almost 21% absolute over theSAMA3.1 system.
The various extensions in CAL-IMA give it about 10% absolute over CALIMA-core (and increase its size 10-fold).
The limitedextensions to SAMA3.1 reduce the difference be-tween it and CALIMA-core by 50% relative.
Theoverall performance of CALIMA-core merged withSAMA3.1 is comparable to CALIMA, althoughCALIMA has three times the number of no-analysiscases.
Merging CALIMA and extended SAMA3.1increases the performance to 92%, an 8% absoluteincrease over CALIMA alone.
The final rate of no-analysis cases is only 1%.5.3 Error AnalysisWe analyzed a sample of 100 cases where no an-swer was found (No Correct Answer + No Analy-sis) for CALIMA+extended SAMA3.1.
About athird of the cases (30%) are due to gold tag errors.Irrecoverable typographical errors occur 5% of thetime, e.g., 	??
fyn instead of ??
fy ?in?.
Only 2%of the cases involve a speech effect, e.g., ?JJJ?g.jmyyyyyl ?beautiful!!!?.
A fifth of the cases (22%) in-volve a non-CODA orthographic choice which wasnot extended, e.g., the shortened long vowel in HAm.kHjAt instead of the CODA-compliant HAg.
Ag HAjAt?things?.
Another fifth of the cases (20%) are due toincomplete paradigms, i.e., the lemma exists but notthe specific inflected stem.
Finally, 21% of the casesreceive a SAMA3.1 analysis that is almost correct,except for the presence of some mood/case mark-7Correct Answer No Correct Answer No Analysis WordsECAL 57.4% 14.7% 27.9% 66KSAMA3.1 63.7% 27.1% 9.3% 246Mextended SAMA3.1 68.8% 24.9% 6.3% 511MCALIMA-core 73.9% 10.8% 15.3% 4MCALIMA 84.1% 8.0% 7.9% 48MCALIMA-core + SAMA3.1 84.4% 12.8% 2.8% 287MCALIMA + extended SAMA3.1 92.1% 7.0% 1.0% 543MTable 1: Comparison of seven morphological analysis systems on a manually annotated test set.
The second columnindicates the percentage of the test words whose correct analysis in context appears among the analyses returned by theanalyzer.
The third column presents the percentage of time one or more analyses are returned, but none matching thecorrect answer.
The fourth column indicates the percentage of words returning no analyses.
The last column presentsthe total number of recognizable words in the system.ers that are absent in EGY, and which we did nothandle.
Overall, these are positive results that sug-gest the next steps should involve additional ortho-graphic and morphological extensions and paradigmcompletion.6 OutlookWe plan to continue improving the coverage ofCALIMA using a variety of methods.
First, we areinvestigating techniques to automatically fill in theparadigm gaps using information from multiple en-tries in ECAL belonging to different lemmas thatshare similar characteristics, e.g., hollow verbs inForm I.
Another direction is to update our tableswith less common orthographic variations, perhapsusing information from the phonological forms inECAL.
Manual addition of specific entries will alsobe considered to fill in lexicon gaps.
Furthermore,we plan to add additional features which we did notdiscuss such as the English and MSA glosses for allthe entries in CALIMA.
We also plan to make thistool public so it can be used by other people work-ing on EGY NLP tasks, from annotating corpora tobuilding morphological disambiguation tools.AcknowledgmentsThis paper is based upon work supported bythe Defense Advanced Research Projects Agency(DARPA) under Contract No.
HR0011-12-C-0014.Any opinions, findings and conclusions or recom-mendations expressed in this paper are those ofthe authors and do not necessarily reflect the viewsof DARPA.
We thank Mohamed Maamouri, OwenRambow, Seth Kulick, Mona Diab and Mike Ciul,for helpful discussions and feedback.ReferencesErnest T. Abdel-Massih, Zaki N. Abdel-Malek, and El-Said M. Badawi.
1979.
A Reference Grammar ofEgyptian Arabic.
Georgetown University Press.Hitham Abo Bakr, Khaled Shaalan, and Ibrahim Ziedan.2008.
A Hybrid Approach for Converting WrittenEgyptian Colloquial Dialect into Diacritized Arabic.In The 6th International Conference on Informaticsand Systems, INFOS2008.
Cairo University.Imad Al-Sughaiyer and Ibrahim Al-Kharashi.
2004.Arabic Morphological Analysis Techniques: A Com-prehensive Survey.
Journal of the American Societyfor Information Science and Technology, 55(3):189?213.Mohamed Altantawy, Nizar Habash, and Owen Ram-bow.
2011.
Fast Yet Rich Morphological Analysis.In Proceedings of the 9th International Workshop onFinite-State Methods and Natural Language Process-ing (FSMNLP 2011), Blois, France.Kenneth Beesley, Tim Buckwalter, and Stuart Newton.1989.
Two-Level Finite-State Analysis of Arabic Mor-phology.
In Proceedings of the Seminar on BilingualComputing in Arabic and English, page n.p.Tim Buckwalter.
2004.
Buckwalter arabic morpho-logical analyzer version 2.0.
LDC catalog numberLDC2004L02, ISBN 1-58563-324-0.Tim Buckwalter.
2007.
Issues in Arabic Morphologi-cal Analysis.
In A. van den Bosch and A. Soudi, edi-tors, Arabic Computational Morphology: Knowledge-based and Empirical Methods.
Springer.Mark W. Cowell.
1964.
A Reference Grammar of SyrianArabic.
Georgetown University Press.8Mona Diab, Kadri Hacioglu, and Daniel Jurafsky, 2007.Arabic Computational Morphology: Knowledge-based and Empirical Methods, chapter AutomatedMethods for Processing Arabic Text: From Tokeniza-tion to Base Phrase Chunking.
Springer.Wallace Erwin.
1963.
A Short Reference Grammar ofIraqi Arabic.
Georgetown University Press.Hassan Gadalla, Hanaa Kilany, Howaida Arram, AshrafYacoub, Alaa El-Habashi, Amr Shalaby, KrisjanisKarins, Everett Rowson, Robert MacIntyre, PaulKingsbury, David Graff, and Cynthia McLemore.1997.
CALLHOME Egyptian Arabic Transcripts.
InLinguistic Data Consortium, Philadelphia.Hassan Gadalla.
2000.
Comparative Morphology ofStandard and Egyptian Arabic.
LINCOM EUROPA.David Graff, Mohamed Maamouri, Basma Bouziri,Sondos Krouna, Seth Kulick, and Tim Buckwal-ter.
2009.
Standard Arabic Morphological Analyzer(SAMA) Version 3.1.
Linguistic Data ConsortiumLDC2009E73.Nizar Habash and Owen Rambow.
2005.
Arabic Tok-enization, Part-of-Speech Tagging and MorphologicalDisambiguation in One Fell Swoop.
In Proceedings ofthe 43rd Annual Meeting of the Association for Com-putational Linguistics (ACL?05), pages 573?580, AnnArbor, Michigan.Nizar Habash and Owen Rambow.
2006.
MAGEAD:A Morphological Analyzer and Generator for the Ara-bic Dialects.
In Proceedings of the 21st InternationalConference on Computational Linguistics and 44thAnnual Meeting of the Association for ComputationalLinguistics, pages 681?688, Sydney, Australia.Nizar Habash, Abdelhadi Soudi, and Tim Buckwalter.2007.
On Arabic Transliteration.
In A. van den Boschand A. Soudi, editors, Arabic Computational Mor-phology: Knowledge-based and Empirical Methods.Springer.Nizar Habash, Mona Diab, and Owen Rabmow.
2012.Conventional Orthography for Dialectal Arabic.
InProceedings of the Language Resources and Evalua-tion Conference (LREC), Istanbul.Nizar Habash.
2007.
Arabic Morphological Representa-tions for Machine Translation.
In Antal van den Boschand Abdelhadi Soudi, editors, Arabic ComputationalMorphology: Knowledge-based and Empirical Meth-ods.
Kluwer/Springer.Nizar Habash.
2010.
Introduction to Arabic NaturalLanguage Processing.
Morgan & Claypool Publish-ers.Clive Holes.
2004.
Modern Arabic: Structures, Func-tions, and Varieties.
Georgetown Classics in Ara-bic Language and Linguistics.
Georgetown UniversityPress.H.
Kilany, H. Gadalla, H. Arram, A. Yacoub, A. El-Habashi, and C. McLemore.
2002.
EgyptianColloquial Arabic Lexicon.
LDC catalog numberLDC99L22.George Anton Kiraz.
2000.
Multi-Tiered NonlinearMorphology Using Multi-Tape Finite Automata: ACase Study on Syriac and Arabic.
Computational Lin-guistics, 26(1):77?105.Mohamed Maamouri, Ann Bies, Tim Buckwalter, MonaDiab, Nizar Habash, Owen Rambow, and DalilaTabessi.
2006.
Developing and Using a Pilot DialectalArabic Treebank.
In Proceedings of the Language Re-sources and Evaluation Conference (LREC), Genoa,Italy.Mohamed Maamouri, Ann Bies, Seth Kulick, DalilaTabessi, and Sondos Krouna.
2012a.
Egyptian Ara-bic Treebank Pilot.Mohamed Maamouri, Sondos Krouna, Dalila Tabessi,Nadia Hamrouni, and Nizar Habash.
2012b.
EgyptianArabic Morphological Annotation Guidelines.Emad Mohamed, Behrang Mohit, and Kemal Oflazer.2012.
Annotating and Learning Morphological Seg-mentation of Egyptian Colloquial Arabic.
In Proceed-ings of the Language Resources and Evaluation Con-ference (LREC), Istanbul.Jason Riesa and David Yarowsky.
2006.
Minimally Su-pervised Morphological Segmentation with Applica-tions to Machine Translation.
In Proceedings of the7th Conference of the Association for Machine Trans-lation in the Americas (AMTA06), pages 185?192,Cambridge,MA.Wael Salloum and Nizar Habash.
2011.
Dialectalto Standard Arabic Paraphrasing to Improve Arabic-English Statistical Machine Translation.
In Proceed-ings of the First Workshop on Algorithms and Re-sources for Modelling of Dialects and Language Va-rieties, pages 10?21, Edinburgh, Scotland.Otakar Smr?.
2007.
Functional Arabic Morphology.
For-mal System and Implementation.
Ph.D. thesis, CharlesUniversity in Prague, Prague, Czech Republic.9
