Language Technology for Closely Related Languages and Language Variants (LT4CloseLang), pages 47?55,October 29, 2014, Doha, Qatar.c?2014 Association for Computational LinguisticsAdapting Predicate Frames for Urdu PropBankingRiyaz Ahmad Bhat?, Naman Jain?, Dipti Misra Sharma?, Ashwini Vaidya?,Martha Palmer?, James Babani?and Tafseer Ahmed?LTRC, IIIT-H, Hyderabad, India?University of Colorado, Boulder, CO 80309 USA?DHA Suffa University, Karachi, Pakistan?
{riyaz.bhat, naman.jain}@research.iiit.ac.in, dipti@iiit.ac.in,{vaidyaa,mpalmer, james.babani}@colorado.edu, tafseer@dsu.edu.pkAbstractHindi and Urdu are two standardized reg-isters of what has been called the Hindus-tani language, which belongs to the Indo-Aryan language family.
Although, boththe varieties share a common grammar,they differ significantly in their vocabularyto an extent where both become mutuallyincomprehensible (Masica, 1993).
Hindidraws its vocabulary from Sanskrit whileUrdu draws its vocabulary from Persian,Arabic and even Turkish.
In this paper,we present our efforts to adopt frames ofnominal and verbal predicates that Urdushares with either Hindi or Arabic forUrdu PropBanking.
We discuss the fea-sibility of porting such frames from eitherof the sources (Arabic or Hindi) and alsopresent a simple and reasonably accuratemethod to automatically identify the ori-gin of Urdu words which is a necessarystep in the process of porting such frames.1 IntroductionHindi and Urdu, spoken primarily in northern In-dia and Pakistan, are socially and even officiallyconsidered two different language varieties.
How-ever, such a division between the two is not es-tablished linguistically.
They are two standard-ized registers of what has been called the Hindus-tani language, which belongs to the Indo-Aryanlanguage family.
Masica (1993) explains that,while they are different languages officially, theyare not even different dialects or sub-dialects ina linguistic sense; rather, they are different liter-ary styles based on the same linguistically definedsub-dialect.
He further explains that at the collo-quial level, Hindi and Urdu are nearly identical,both in terms of core vocabulary and grammar.However, at formal and literary levels, vocabu-lary differences begin to loom much larger (Hindidrawing its higher lexicon from Sanskrit and Urdufrom Persian and Arabic) to the point where thetwo styles/languages become mutually unintelligi-ble.
In written form, not only the vocabulary butthe way Urdu and Hindi are written makes one be-lieve that they are two separate languages.
Theyare written in separate orthographies, Hindi be-ing written in Devanagari, and Urdu in a modi-fied Persio-Arabic script.
Given such (apparent)divergences between the two varieties, two paral-lel treebanks are being built under The Hindi-Urdutreebanking Project (Bhatt et al., 2009; Xia et al.,2009).
Both the treebanks follow a multi-layeredand multi-representational framework which fea-tures Dependency, PropBank and Phrase Structureannotations.
Among the two treebanks the Hinditreebank is ahead of the Urdu treebank across alllayers.
In the case of PropBanking, the Hindi tree-bank has made considerable progress while UrduPropBanking has just started.The creation of predicate frames is the first stepin PropBanking, which is followed by the actualannotation of verb instances in corpora.
In thispaper, we look at the possibility of porting re-lated frames from Arabic and Hindi PropBanks forUrdu PropBanking.
Given that Urdu shares its vo-cabulary with Arabic, Hindi and Persian, we lookat verbal and nominal predicates that Urdu shareswith these languages and try to port and adapt theirframes from the respective PropBanks instead ofcreating them afresh.
This implies that identifi-cation of the source of Urdu predicates becomesa necessary step in this process.
Thus, in orderto port the relevant frames, we need to first iden-tify the source of Urdu predicates and then extracttheir frames from the related PropBanks.
To statebriefly, we present the following as contributionsof this paper:?
Automatic identification of origin or sourceof Urdu vocabulary.47?
Porting and adapting nominal and verbalpredicate frames from the PropBanks of re-lated languages.The rest of the paper is organised as follows: Inthe next Section we discuss the Hindi-Urdu tree-banking project with the focus on PropBanking.In Section 3, we discuss our efforts to automati-cally identify the source of Urdu vocabulary andin Section 4, we discuss the process of adaptingand porting Arabic and Hindi frames for UrduPropBanking.
Finally we conclude with somefuture directions in Section 5.2 A multi-layered,multi-representational treebankCompared to other existing treebanks, Hindi/UrduTreebanks (HTB/UTB) are unusual in that they aremulti-layered.
They contain three layers of anno-tation: dependency structure (DS) for annotationof modified-modifier relations, PropBank-styleannotation (PropBank) for predicate-argumentstructure, and an independently motivated phrase-structure (PS).
Each layer has its own framework,annotation scheme, and detailed annotation guide-lines.
Due to lack of space and relevance to ourwork, we only look at PropBanking with referenceto Hindi PropBank, here.2.1 PropBank AnnotationThe first PropBank, the English PropBank (Kings-bury and Palmer, 2002), originated as a one-million word subset of the Wall Street Journal(WSJ) portion of Penn Treebank II (an Englishphrase structure treebank).
The verbs in the Prop-Bank are annotated with predicate-argument struc-tures and provide semantic role labels for eachsyntactic argument of a verb.
Although thesewere deliberately chosen to be generic and theory-neutral (e.g., ARG0, ARG1), they are intendedto consistently annotate the same semantic roleacross syntactic variations.
For example, in boththe sentences John broke the window and The win-dow broke, ?the window?
is annotated as ARG1and as bearing the role of ?Patient?.
This reflectsthe fact that this argument bears the same seman-tic role in both the cases, even though it is realizedas the structural subject in one sentence and as theobject in the other.
This is the primary differencebetween PropBank?s approach to semantic role la-bels and the Paninian approach to karaka labels,which it otherwise resembles closely.
PropBank?sARG0 and ARG1 can be thought of as similarto Dowty?s prototypical ?Agent?
and ?Patient?
(Dowty, 1991).
PropBank provides, for each senseof each annotated verb, its ?roleset?, i.e., the possi-ble arguments of the predicate, their labels and allpossible syntactic realizations.
The primary goalof PropBank is to supply consistent, simple, gen-eral purpose labeling of semantic roles for a largequantity of coherent text that can provide trainingdata for supervised machine learning algorithms,in the same way that the Penn Treebank supportedthe training of statistical syntactic parsers.2.1.1 Hindi PropBankThe Hindi PropBank project has differed signif-icantly from other PropBank projects in that thesemantic role labels are annotated on dependencytrees rather than on phrase structure trees.
How-ever, it is similar in that semantic roles are definedon a verb-by-verb basis and the description atthe verb-specific level is fine-grained; e.g., averb like ?hit?
will have ?hitter?
and ?hittee?.These verb-specific roles are then grouped intobroader categories using numbered arguments(ARG).
Each verb can also have a set of modifiersnot specific to the verb (ARGM).
In Table 1,PropBank-style semantic roles are listed forthe simple verb de ?to give?.
In the table, thenumbered arguments correspond to the giver,thing given and recipient.
Frame file definitionsare created manually and include role informationas well as a unique roleset ID (e.g.
de.01 in Table1), which is assigned to every sense of a verb.
Inaddition, for Hindi the frame file also includes thetransitive and causative forms of the verb (if any).Thus, the frame file for de ?give?
will includedilvaa ?cause to give?.de.01 to giveArg0 the giverArg1 thing givenArg2 recipientTable 1: A Frame FileThe annotation process for the PropBank takesplace in two stages: the creation of frame files forindividual verb types, and the annotation of pred-icate argument structures for each verb instance.The annotation for each predicate in the corpusis carried out based on its frame file definitions.48The PropBank makes use of two annotation toolsviz.
Jubilee (Choi et al., 2010b) and Cornerstone(Choi et al., 2010a) for PropBank instance annota-tion and PropBank frame file creation respectively.For annotation of the Hindi and Urdu PropBank,the Jubilee annotation tool had to be modified todisplay dependency trees and also to provide ad-ditional labels for the annotation of empty argu-ments.3 Identifying the source of UrduVocabularyPredicting the source of a word is similar to lan-guage identification where the task is to identifythe language a given document is written in.
How-ever, language identification at word level is morechallenging than a typical document level lan-guage identification problem.
The number of fea-tures available at document level is much higherthan at word level.
The available features for wordlevel identification are word morphology, syllablestructure and phonemic (letter) inventory of thelanguage(s).In the case of Urdu, the problem is even morecomplex as the borrowed words don?t necessarilycarry the inflections of their source language anddon?t retain their identity as such (they undergophonetic changes as well).
For example, khabar?news?
which is an Arabic word declines as perthe morphological paradigm of feminine nom-inals in Hindi and Urdu as shown in Table (2).However, despite such challenges, if we look atthe character histogram in Figure (1), we can stillidentify the source of a sufficiently large portionof Urdu vocabulary just by using letter-basedheuristics.
For example neither Arabic nor Persianhas aspirated consonants like bH, ph AspiratedBilabial Plosives; tSh, dZH Aspirated AlveolarFricatives; ?H Aspirated Retroflex Plosive; gH, khAspirated Velar Plosives etc.
while Hindi does.Similarly, the following sounds occur only inArabic and Persian: Z Fricative Postalveolar; T,D Fricative Dental; ?
Fricative Pharyngeal; XFricative Uvular etc.
Using these heuristics wecould identify 2,682 types as Indic, and 3,968as either Persian or Arabic out of 12,223 uniquetypes in the Urdu treebank (Bhat and Sharma,2012).Singular PluralDirect khabar khabarainOblique khabar khabaronTable 2: Morphological Paradigm of khabarThis explains the efficiency of n-gram based ap-proaches to either document level or word levellanguage identification tasks as reported in the re-cent literature on the problem (Dunning, 1994;Elfardy and Diab, 2012; King and Abney, 2013;Nguyen and Dogruoz, 2014; Lui et al., 2014).In order to predict the source of an Urdu word,we frame two classification tasks: (1) binary clas-sification into Indic and Persio-Arabic and, (2) tri-class classification into Arabic, Indic and Persian.Both the problems are modeled using smoothed n-gram based language models.3.1 N-gram Language ModelsGiven a word w to classify into one of k classesc1, c2, ... , ck, we will choose the class with themaximum conditional probability:c?= argmaxcip(ci|w)= argmaxcip(w|ci) ?
p(ci)(1)The prior distribution p(c) of a class is esti-mated from the respective training sets shown inTable (3).
Each training set is used to train aseparate letter-based language model to estimatethe probability of word w. The language modelp(w) is implemented as an n-gram model usingthe IRSTLM-Toolkit (Federico et al., 2008) withKneser-Ney smoothing.
The language model isdefined as:p(w) =n?i=1p(li|li?1i?k) (2)where, l is a letter and k is a parameter indicat-ing the amount of context used (e.g., k = 4 means5-gram model).3.2 Etymological DataIn order to prepare training and testing datamarked with etymological information for ourclassification experiments, we used the Online1http://www.langsci.ucl.ac.uk/ipa/IPA chart %28C%292005.pdf49bH Z T ?
X D sQ tQ dQ Q DQ G f tSh q ?H gH khdZH N ?
ph S ?
th t?h d?H tS b d g H k dZ m l n p s r t t?
V j d?05 ?
10?20.10.150.20.250.30.35Alphabets in IPA1RelativeFrequencyArabicHindiPersianUrduFigure 1: Relative Distribution of Arabic, Hindi, Persian and Urdu Alphabets (Consonants only)Urdu Dictionary2(henceforth OUD).
OUD hasbeen prepared under the supervision of the e-government Directorate of Pakistan3.
Apart frombasic definition and meaning, it provides etymo-logical information for more than 120K Urduwords.
Since the dictionary is freely4availableand requires no expertise for extraction of wordetymology which is usually the case with manualannotation, we could mark the etymological infor-mation on a reasonably sized word list in a limitedtime frame.
The statistics are provided in Table(3).
We use Indic as a cover term for all the wordsthat are either from Sanskrit, Prakrit, Hindi or lo-cal languages.Language Data Size Average Token LengthArabic 6,524 6.8Indic 3,002 5.5Persian 4,613 6.5Table 3: Statistics of Etymological Data2http://182.180.102.251:8081/oud/default.aspx3www.e-government.gov.pk4We are not aware of an offline version of OUD.3.3 ExperimentsWe carried out a number of experiments in orderto explore the effect of data size and the order ofn-gram models on the classification performance.By varying the size of training data, we wanted toidentify the lower bound on the training size withrespect to the classification performance.
We var-ied the training size per training iteration by 1%for n-grams in the order 1-5 for both the classifi-cation problems.
For each n-gram order 100 ex-periments were carried out, i.e overall 800 exper-iments for binary and tri-class classification.
Theimpact of training size on the classification perfor-mance is shown in Figures (2) and (3) for binaryand tri-class classification respectively.
As ex-pected, at every iteration the additional data pointsintroduced into the training data increased the per-formance of the model.
With a mere 3% of thetraining data, we could reach a reasonable accu-racy of 0.85 in terms of F-score for binary classi-fication and for tri-class classification we reachedthe same accuracy with 6% of the data.Similarly, we tried different order n-gram mod-els to quantify the effect of character context on50the classification performance.
As with the in-crease in data size, increasing the n-gram orderprofoundly improved the results.
In both the clas-sification tasks, unigram based models convergefaster than the higher order n-gram based models.The obvious reason for it is the small, finite set ofcharacters that a language operates with (?
37 inArabic, ?
39 in Persian and ?
48 in Hindi).
Asmall set of words (unique in our case) is probablyenough to capture at least a single instance of eachcharacter.
As no new n-gram is introduced withsubsequent additions of new tokens in the trainingdata, the accuracy stabilizes.
However, the accu-racy with higher order n-grams kept on increas-ing with an increase in the data size, though it wasmarginal after 5-grams.
The abrupt increase after8,000 training instances is probably due to the ad-dition of an unknown bigram sequence(s) to thetraining data.
In particular, the Recall of Persio-Arabic increased by 2.2%.0 0.2 0.4 0.6 0.8 1 1.2?1040.50.60.70.80.91Training Data SizeF-Score1-gram2-gram3-gram4-gramFigure 2: Learning Curves for Binary Classifica-tion of Urdu Vocabulary3.4 ResultsWe performed 10-fold cross validation over all theinstances of the etymological data for both the bi-nary and tri-class classification tasks.
We split thedata into training and testing sets with a ratio of80:20 using the stratified sampling.
Stratified sam-pling distributes the samples of each class in train-ing and testing sets with the same percentage as inthe complete set.
For all the 10-folds, the order of0 0.2 0.4 0.6 0.8 1 1.2?1040.50.60.70.80.91Training Data SizeF-Score1-gram2-gram3-gram4-gramFigure 3: Learning Curves for Tri-class Classifi-cation of Urdu Vocabularyn-gram was varied again from 1-5.
Tables (4) and(5) show the consolidated results for these taskswith a frequency based baseline to evaluate theclassification performance.
In both the tasks, weachieved highest accuracy with language modelstrained with 5-gram letter sequence context.
Thebest results in terms of F-score are 0.96 and 0.93for binary and tri-class classification respectively.Type Precision (P) Recall (R) F1-Score (F)Baseline 0.40 0.50 0.401-gram 0.89 0.89 0.892-gram 0.95 0.95 0.953-gram 0.96 0.96 0.964-gram 0.96 0.96 0.965-gram 0.96 0.96 0.96Table 4: Results of 10-fold Cross Validation onBinary ClassificationAlthough, we have achieved quite reasonableaccuracies in both the tasks, a closer look at theconfusion matrices shown in Tables (6) and (7)show that we can still improve the accuracies bybalancing the size of data across classes.
In binaryclassification our model is more biased towardsPersio-Arabic as the data is highly imbalanced.Our binary classifier misclassifies 0.86% of Indictokens as Persio-Arabic since the prior probabilityof the latter is much higher than that of the former.While in the case of tri-class classification, using51Type Precision (P) Recall (R) F1-Score (F)Baseline 0.15 0.33 0.211-gram 0.83 0.83 0.832-gram 0.89 0.89 0.893-gram 0.91 0.91 0.914-gram 0.93 0.93 0.935-gram 0.93 0.93 0.93Table 5: Results of 10-fold Cross Validation onTri-Class Classificationhigher order n-gram models can resolve theprominent confusion between Arabic and Persian.Since both Arabic and Persian share almost thesame phonetic inventory, working with lowerorder n-gram models doesn?t seem ideal.Class Indic Persio-ArabicIndic 235 60Persio-Arabic 15 1,057Table 6: Confusion Matrix of Binary Classifica-tionClass Arabic Indic PersianArabic 605 5 26Indic 11 268 18Persian 22 9 415Table 7: Confusion Matrix of Tri-class Classifica-tion4 Adapting Frames from Arabic andHindi PropBanksAs discussed in Section 2.1.1, the creation of pred-icate frames precedes the actual annotation of verbinstances in a given corpus.
In this section, we de-scribe our approach towards the first stage of UrduPropBanking by adapting related predicate framesfrom Arabic and Hindi PropBanks (Palmer et al.,2008; Vaidya et al., 2011).
Since a PropBankis not available for Persian, we could only adaptthose predicate frames which are shared with Ara-bic and Hindi.Although, Urdu shares or borrows most of itsliterary vocabulary from Arabic and Persian, it re-tains its simple verb (as opposed to compound orcomplex verbs) inventory from Indo-Aryan ances-try.
Verbs from Arabic and Persian are borrowedless frequently, although there are examples suchas ?khariid?
buy, ?farma?
say etc.5This over-lap in the verb inventory between Hindi and Urdumight explain the fact that they share the samegrammar.The fact that Urdu shares its lexicon with theselanguages, prompted us towards exploring thepossibility of using their resources for Urdu Prop-Banking.
We are in the process of adapting framesfor those Urdu predicates that are shared with ei-ther Arabic or Hindi.Urdu frame file creation must be carried out forboth simple verbs and complex predicates.
SinceUrdu differs very little in simple verb inventoryfrom Hindi, this simplifies the development pro-cess as the frames could be ported easily.
How-ever, this is not the case with nominal predicates.In Urdu, many nominal predicates are borrowedfrom Arabic or Persian as shown in Table (8).Given that a PropBank for Persian is not available,the task of creating the frames for nominal predi-cates in Urdu would have been fairly daunting inthe paucity of the Arabic PropBank, as well.Simple Verbs Nominal PredicatesLanguage Total Unique Total UniqueArabic 12 1 6,780 765Hindi 7,332 441 1,203 258Persian 69 3 2,276 352Total 7,413 445 10,259 1,375Table 8: Urdu Treebank Predicate Statistics4.1 Simple VerbsThe simple verb inventory of Urdu and Hindi isalmost similar, so the main task was to locate andextract the relevant frames from Hindi frame files.Fortunately, with the exception of farmaa ?say?,all the other simple verbs which Urdu borrowsfrom Persian or Arabic (cf.
Table (8)) were alsoborrowed by Hindi.
Therefore, the Hindi sim-ple verb frame files sufficed for porting frames forUrdu simple verbs.There were no significant differences found be-tween the Urdu and Hindi rolesets, which describeeither semantic variants of the same verb or itscausative forms.
Further, in order to name theframe files with their corresponding Urdu lemmas,we used Konstanz?s Urdu transliteration scheme5Borrowed verbs often do not function as simple verbsrather they are used like nominals in complex predicate con-structions such as mehsoos in ?mehsoos karnaa?
to feel.52(Malik et al., 2010) to convert a given lemma intoits romanized form.
Since the Hindi frame filesuse the WX transliteration scheme6, which is notappropriate for Urdu due to lack of coverage forPersio-Arabic phonemes or sounds like dQ ?pha-ryngealized voiced alveolar stop?.
The frame filesalso contain example sentences for each predicate,in order to make the PropBank annotation task eas-ier.
While adapting the frame files from Hindito Urdu, simply transliterating such examples forUrdu predicates was not always an option, becausesentences consisting of words with Sanskrit originmay not be understood by Urdu speakers.
Hence,all the examples in the ported frames have beenreplaced with Urdu sentences by an Urdu expert.In general we find that the Urdu verbs are quitesimilar to Hindi verbs, and this simplified our taskof adapting the frames for simple verbs.
Thenouns, however, show more variation.
Since alarge proportion (up to 50%) of Urdu predicatesare expressed using verb-noun complex predi-cates, nominal predicates play a crucial role in ourannotation process and must be accounted for.4.2 Complex PredicatesIn the Urdu treebank, there are 17,672 predicates,of which more than half have been identified asnoun-verb complex predicates (NVC) at the de-pendency level.
Typically, a noun-verb complexpredicate chorii ?theft?
karnaa ?to do?
has twocomponents: a noun chorii and a light verb karnaagiving us the meaning ?steal?.
The verbal compo-nent in NVCs has reduced predicating power (al-though it is inflected for person, number, and gen-der agreement as well as tense, aspect and mood)and its nominal complement is considered the truepredicate.
In our annotation of NVCs, we fol-low a procedure common to all PropBanks, wherewe create frame files for the nominal or the ?true?predicate (Hwang et al., 2010).
An example of aframe file for a noun such as chorii is described inTable (9).The creation of a frame file for the set oftrue predicates that occur in an NVC is impor-tant from the point of view of linguistic annota-tion.
Given the large number of NVCs, a semi-automatic method has been proposed for creatingHindi nominal frame files, which saves the man-ual effort required for creating frames for nearly6http://en.wikipedia.org/wiki/WX notationFrame file for chorii-n(oun)chorii.01: theft-n light verb: kar?do; to steal?Arg0 person who stealsArg1 thing stolenchorii.02 : theft-n light verb: ho ?be/become; toget stolen?Arg1 thing stolenTable 9: Frame file for predicate noun chorii?theft?
with two frequently occurring light verbsho and kar.
If other light verbs are found to occur,they are added as additional rolesets as chorii.03,chorii.04 and so on.3,015 unique Hindi noun and light verb combina-tions (Vaidya et al., 2013).For Urdu, the process of nominal frame file cre-ation is preceded by the identification of the ety-mological origin for each nominal.
If that nomi-nal has an Indic or Arabic origin, relevant framesfrom Arabic or Hindi PropBanks were adapted forUrdu.
On the other hand, if the Urdu nominal orig-inates from Persian, then frame creation will bedone either manually or using other available Per-sian language resources, in the future.In Table (8), there are around 258 nominal pred-icates that are common in Hindi and Urdu, so wedirectly ported their frames from Hindi PropBankwith minor changes as was done for simple verbframes.
Out of 765 nominal predicates shared withArabic, 308 nominal predicate frames have beenported to Urdu.
98 of these nominal predicateframes were already present in the Arabic Prop-Bank and were ported as such.
However, for theremaining 667 unique predicates, frames are be-ing created manually by Arabic PropBanking ex-perts and will be ported to Urdu once they becomeavailable.Porting of Arabic frames to Urdu is not that triv-ial.
We observed that while Urdu borrows vocabu-lary from Arabic it does not borrow all the sensesfor some words.
In such cases, the rolesets that areirrelevant to Urdu have to be discarded manually.The example sentences for all the frames portedfrom Arabic PropBank have to be sourced fromeither the web or manually created by an Urdu ex-pert, as was the case with Hindi simple verbs.5 ConclusionIn this paper we have exploited the overlap be-tween the lexicon of Urdu, Arabic and Hindi forthe creation of predicate frames for Urdu Prop-53Banking.
We presented a simple and accurate clas-sifier for the identification of source or origin ofUrdu vocabulary which is a necessary step in theoverall process of extraction of predicate framesfrom the related PropBanks.
In the case of sim-ple verbs that occur in the Urdu treebank, we haveextracted all the frames from the Hindi PropBankand adapted them for Urdu PropBanking.
Simi-larly for complex predicates, frames for Urdu tree-bank nominal predicates are extracted from Hindias well as from Arabic PropBanks.
Since a Prop-Bank is not available for Persian, the creationof frames for shared predicates with Persian is aprospect for future work.
We plan to create theseframes either manually or semi-automatically, us-ing the available Persian Dependency treebanks(Rasooli et al., 2011; Rasooli et al., 2013).AcknowledgmentsWe would like to thank Himani Chaudhry for hervaluable comments that helped to improve thequality of this paper.The work reported in this paper is supported bythe NSF grant (Award Number: CNS 0751202;CFDA Number: 47.070)7.ReferencesRiyaz Ahmad Bhat and Dipti Misra Sharma.
2012.A dependency treebank of urdu and its evaluation.In Proceedings of the Sixth Linguistic AnnotationWorkshop, pages 157?165.
Association for Compu-tational Linguistics.Rajesh Bhatt, Bhuvana Narasimhan, Martha Palmer,Owen Rambow, Dipti Misra Sharma, and Fei Xia.2009.
A multi-representational and multi-layeredtreebank for hindi/urdu.
In Proceedings of the ThirdLinguistic Annotation Workshop, pages 186?189.Association for Computational Linguistics.Jinho D Choi, Claire Bonial, and Martha Palmer.2010a.
Propbank frameset annotation guidelines us-ing a dedicated editor, cornerstone.
In LREC.Jinho D Choi, Claire Bonial, and Martha Palmer.2010b.
Propbank instance annotation guidelines us-ing a dedicated editor, jubilee.
In LREC.David Dowty.
1991.
Thematic proto-roles and argu-ment selection.
Language, 67(3):547?619.7Any opinions, findings, and conclusions or recommen-dations expressed in this material are those of the author(s)and do not necessarily reflect the views of the National Sci-ence Foundation.Ted Dunning.
1994.
Statistical identification of lan-guage.
Computing Research Laboratory, New Mex-ico State University.Heba Elfardy and Mona T Diab.
2012.
Token levelidentification of linguistic code switching.
In COL-ING (Posters), pages 287?296.Marcello Federico, Nicola Bertoldi, and Mauro Cet-tolo.
2008.
Irstlm: an open source toolkit for han-dling large scale language models.
In Interspeech,pages 1618?1621.Jena D Hwang, Archna Bhatia, Clare Bonial, AousMansouri, Ashwini Vaidya, Nianwen Xue, andMartha Palmer.
2010.
Propbank annotation of mul-tilingual light verb constructions.
In Proceedings ofthe Fourth Linguistic Annotation Workshop, pages82?90.
Association for Computational Linguistics.Ben King and Steven P Abney.
2013.
Labeling thelanguages of words in mixed-language documentsusing weakly supervised methods.
In HLT-NAACL,pages 1110?1119.Paul Kingsbury and Martha Palmer.
2002.
From tree-bank to propbank.
In LREC.
Citeseer.Marco Lui, Jey Han Lau, and Timothy Baldwin.
2014.Automatic detection and language identification ofmultilingual documents.
Transactions of the Asso-ciation for Computational Linguistics, 2:27?40.Muhammad Kamran Malik, Tafseer Ahmed, SebastianSulger, Tina B?ogel, Atif Gulzar, Ghulam Raza, Sar-mad Hussain, and Miriam Butt.
2010.
Transliterat-ing urdu for a broad-coverage urdu/hindi lfg gram-mar.
In LREC.Colin P Masica.
1993.
The Indo-Aryan Languages.Cambridge University Press.Dong Nguyen and A Seza Dogruoz.
2014.
Wordlevel language identification in online multilingualcommunication.
In Proceedings of the 2013 Con-ference on Empirical Methods in Natural LanguageProcessing.Martha Palmer, Olga Babko-Malaya, Ann Bies,Mona T Diab, Mohamed Maamouri, Aous Man-souri, and Wajdi Zaghouani.
2008.
A pilot arabicpropbank.
In LREC.Mohammad Sadegh Rasooli, Amirsaeid Moloodi,Manouchehr Kouhestani, and Behrouz Minaei-Bidgoli.
2011.
A syntactic valency lexicon forpersian verbs: The first steps towards persian de-pendency treebank.
In 5th Language & TechnologyConference (LTC): Human Language Technologiesas a Challenge for Computer Science and Linguis-tics, pages 227?231.Mohammad Sadegh Rasooli, Manouchehr Kouhestani,and Amirsaeid Moloodi.
2013.
Development of apersian syntactic dependency treebank.
In Proceed-ings of the 2013 Conference of the North Ameri-can Chapter of the Association for Computational54Linguistics: Human Language Technologies, pages306?314.Ashwini Vaidya, Jinho D Choi, Martha Palmer, andBhuvana Narasimhan.
2011.
Analysis of the hindiproposition bank using dependency structure.
InProceedings of the 5th Linguistic Annotation Work-shop, pages 21?29.
Association for ComputationalLinguistics.Ashwini Vaidya, Martha Palmer, and BhuvanaNarasimhan.
2013.
Semantic roles for nominalpredicates: Building a lexical resource.
NAACLHLT 2013, 13:126.Fei Xia, Owen Rambow, Rajesh Bhatt, Martha Palmer,and Dipti Misra Sharma.
2009.
Towards a multi-representational treebank.
In The 7th InternationalWorkshop on Treebanks and Linguistic Theories.Groningen, Netherlands.55
