AN ENVIRONMENT FOR ACQUIRING SEMANTIC INFORMATIONDamaris M. Ayuso, Varda Shaked, and Ralph M. WeischedelBBN Laboratories Inc.10 Moulton St.Cambridge, MA 02238AbstractAn improved version of IRACQ (for InterpretationRule ACQuisition) is presented.
I Our approach tosemantic knowledge acquisition: 1 ) is in the context ofa general purpose NL interface rather than one thataccesses only databases, 2) employs a knowledgerepresentation formalism with limited inferencingcapabilities, 3) assumes a trained person but not anAI expert, and 4) provides a complete environment fornot only acquiring semantic knowledge, but also main-taining and editing it in a consistent knowledge base.IRACQ is currently in use at the Naval Ocean Sys-tems Center.1 IntroductionThe existence of commercial natural language in-terfaces (NLI's), such as INTELLECT from ArtificialIntelligence Corporation and Q&A from Symantec,shows that NLI technology provides utility as an inter-face to computer systems.
The success of all NLItechnology is predicated upon the availability of sub-stantial knowledge bases containing information aboutthe syntax and semantics of words, phrases, andidioms, as well as knowledge of the domain and ofdiscourse context.
A number of systems demonstratea high degree of transportability, in the sense thatsoftware modules do not have to be changed whenmoving the technology to a new domain area; only thedeclarative, domain specific knowledge need bechanged.
However, creating the knowledge basesrequires substantial effort, and therefore substantialcost.
It is this assessment of the state of the art thatcauses us to conclude that know~edge acquisition isone of the most fundamenta/ prob/ems to widespreadapplicability of NLI techno/ogy.This paper describes our contribution to the ac-quisition of semantic knowledge as evidenced inIRACQ (for Interpretation Rule ACQuisition), withinthe context of our overall approach to representationof domain knowledge and its use in the IRUS naturallanguage system \[5, 6,271.
An initial version ofIRACQ was reported in \[19\].
Using IRACQ, mappings1The work presented here was supported under DARPA contract#N00014-85-C-0016.
The views and conclusions contained in thisdocument are those of the authors and should not be interpreted asnecessenly representing the officual policies, either expressed orimplied, of the Defense Advanced Research Projects Agency or ofthe United States Government.between valid English constructs and predicates ofthe domain may be defined by entering samplephrases.
The mappings, or interpretation rules(IRules), may be defined for nouns, verbs, adjectives,and prepositions.
IRules are used by the semanticinterpreter in enforcing selectional restrictions andproducing a logical form as the meaning represen-tation of the input sentence.IRACQ makes extensive use of informationpresent in a model of the domain, which isrepresented using NIKL \[18, 21\], the terminologicalreasoning component of KL-TWO \[26\].
Informationfrom the domain model is used in guiding theIRACQ/user interaction, assuring that acquisition andediting yield IRules consistent with the model.
Furthersupport exists for the IRule developer through aflexible editing and debugging environment.
IRACQhas been in use by non-AI experts at the Naval OceanSystems Center for the expansion of the database ofsemantic rules in use by IRUS.This paper first surveys the kinds of domainspecific knowledge necessary for an NLI as well asapproaches to their acquisition (section 2).
Section 3discusses dimensions in the design of a semantic ac-quisition facility, describing our approach.
In section 4we describe IRules and how they are used.
An ex-ample of a clause IRule definition using IRACQ ispresented.
Section 5 describes initial work on anIRule paraphraser.
Conclusions are in section 6.2 Kinds of KnowledgeOne kind of knowledge that must be acquired islexical information.
This includes morphological infor-mation, syntactic categories, complement structure (ifany), and pointers to semantic information associatedwith individual words.
Acquiring lexical informationmay proceed by prompting a user, as in TEAM \[13\],IRUS \[7\], and JANUS \[9\].
Alternatively, efforts are un-derway to acquire the information directly from on-linedictionaries \[3, 16\].Semantic knowledge includes at least two kinds ofinformation: selectional restrictions or case frame con-straints which can serve as a filter on what makessense semantically, and rules for translating the wordsenses present in an input into an underlying seman-tic representation.
Acquiring such selectional restric-tion information has been studied in TEAM, the Lin-guistic String Parser \[12\], and our system.
Acquiringthe meaning of the word senses has been studied byseveral individuals, including \[11, 17\].
This paper32focuses on acquiring such semantic knowledge usingIRACQ.Basic facts about the domain must be acquired aswell.
This includes at least taxonomic informationabout the semantic categories in the domain and bi-nary relationships holding between semanticcategories.
For instance, in the domain of Navydecision-making at a US Reet Command Center,such basic domain facts include:All submarines are vessels.All vessels are units.All units are organizational entities.All vessels have a major weapon system.All units have an overall combat readiness rating.Such information, though not linguistic in nature, isclearly necessary to understand natural language,since, for instance, "Enterprise's overall rating"presumes that there is such a readiness rating, whichcan be verified in the axioms mentioned above aboutthe domain.
However, this is cleady not a class ofknowledge peculiar to language comprehension orgeneration, but is in fact essential in any intelligentsystem.
General tools for acquiring such knowledgeare emerging; we are employing KREME \[1\] for ac-quiring and maintaining the domain knowledge.Knowledge that relates the predicates in thedomain to their representation and access in the un-derlying systems is certainly necessary.
For instance,we may have the unary predicates vessel andharpoon.capable; nevertheless, the concept (i.e.,unary predicate) corresponding to the logical expres-sion ( X x) \[vessel(x) & harpoon.capable(x)\] may cor-respond to the existence of a "y* in the "harp* field ofthe "uchar" relation of a data base.
TEAM allows foracquisition of this mapping by building predicates"bottom-up" starting from database fields.
We knowof no general acquisition approach that will work withdifferent kinds of underlying systems (not justdatabases).
However, maintaining a distinction be-tween the concepts of the domain, as the user wouldthink of those concepts, separate from the organiza-tion of the database structure or of some other under-lying system, is a key characteristic of the design andtransportability of IRUS.Finally, a fifth kind of knowledge is a set of domainplans.
Though no extensive set of such plans hasbeen developed yet, there is growing agreement thatsuch a library of plans is critical for understandingnarrative \[20\], a user's needs \[22\], ellipsis \[8, 2\].
andill-formed input \[28\], as well as for following the struc-ture of discourse \[14, 15\].
Tools for acquiring a largecollection of domain plans from a domain expert,rather than an AI expert, have not yet appeared.However, inferring plans from textual examples is un-der way \[17\].3 Dimensions of Acquiring SemanticKnowledgeWe discuss in this section several dimensionsavailable in designing a tool for acquiring semanticknowledge within the overall context of an NLI.
Inpresenting a partial description of the space of pos-sible semantic acquisition tools, we describe whereour work and the work of several other significant,recently reported systems fall in that space of pos-sibilities.3.1 Class of under ly ing  systems.One could design tools for a specific subclass ofunderlying systems, such as database managementsystems, as in TEAM \[13\] and TELl \[4\].
The specialnature of the class of underlying systems may allowfor a more tailored acquisition environment, by havingspecial-purpose, stereotypical sequences of questionsfor the user, and more powerful special-purpose in-ferences.
For example, in order to acquire the varietyof lexical items that can refer to a symbolic field in adatabase (such as one stating whether a mountain isa volcano), TEAM asks a series of questions, such as"Adjectives referencing the positive value?
"(e.g., volcanic), and "Abstract nouns referencing thepositive value?"
(e.g., volcano).
The fact that the fieldis binary allows for few and specific questions to beasked.The design of IRACQ is intended to be generalpurpose so that any underlying system, whether adata base, an expert system, a planning system, etc.,is a possibility for the NLI.
This is achieved by havinga level of representation for the concepts, actions, andcapabilities of the domain, the domain model,separate from the model of the entities in the under-lying system.
The meaning representation for an in-put, a logical form, is given in terms of predicateswhich correspond to domain model concepts androles (and are hence referred to as domain mode/predicates).
IRules define the mappings from Englishto these domain model predicates.
In our NLI, aseparate component then translates from the meaningrepresentation to the specific representation of the un-derlying system \[24, 25\].
IRACQ has been used toacquire semantic knowledge for access to both a rela-tional database management system and an ad hocapplication system for drawing maps, providing cal-culations, and preparing summaries; both systemsmay be accessed from the NLI without the user beingparticularly aware that there are two systems ratherthan one underneath the NLI.3.2 Meaning  representat ion .Another dimension in the design of a semanticknowledge acquisition tool is the style of the under-lying semantic representation for natural language in-put.
One could postulate a unique predicate for al-most every word sense of the language.
TEAM33seems to represent his approach.
At some later levelof processing than the initial semantic acquisition, alevel of inference or question/answering must beprovided so that the commonalities of very similarword senses are captured and appropriate inferencesmade.
A second approach seems to be representedin TELl, where the meaning of a word sense is trans-lated into a boolean composition of more primitivepredicates.
IRACQ represents a related approach,but we allow a many-to-one mapping between wordsenses and predicates of the domain, and use a moreconstraining representation for the meaning of wordsenses.
Following the analysis of Davidson \[10\] werepresent the meaning of events (and also of states ofaffairs) as a conjunction of a single unary predicateand arbitrarily many binary predicates.
Objects arerepresented by unary predicates and are relatedthrough binary relations.
Using such a representationlimits the kind and numbers of questions that have tobe asked of the user by the semantic acquisition com-ponent.
The representation dovetails well with usingNIKL \[18, 21\], a taxonomic knowledge representationsystem with a formal semantics, for stating axiomsabout the domain.3.3 Model  of the domainOne may choose to have an explicit, separaterepresentation for concepts of the domain, along withaxioms relating them.
Both IRUS and TEAM haveexplicit models.
Such a representation may be usefulto several components of a system needing to dosome reasoning about the domain.
The availability ofsuch information is a dimension in the design ofsemantic acquisition systems, since domainknowledge can streamline the acquisition process.For example, knowing what relations are allowablebetween concepts in the domain, aids in determingwhat predicates can hold between concepts men-tioned in an English expression, and therefore, whatare valid semantic mappings (IRules, in our case).Our NIKL representation of the domainknowledge, the domain model, forms the semanticbackbone of our system.
Meaning is represented interms of domain model predicates; its hierarchy isused for enforcing selectional restrictions and forIRule inheritance; and some limited inferencing isdone based on the model.
After semantic interpreta-tion is complete, the NIKL classification algorithm isused in simplifying and transforming high level mean-ing expressions to obtain the underlying systems'commands \[25\].
Due to its importance, the domainmodel is developed carefully in consultation withdomain experts, using tools to assure its correctness.This approach of developing a domain model in-dependently of linguistic considerations or of the typeof underlying system is to be distinguished from otherapproaches where the domain knowledge is shapedmostly as a side effect of other processes such aslexical acquisition or database field specification.3.4 Assumpt ions  about  the user  of theacqu is i t ion  tool.If one assumes a human in the semantic acquisi-tion process, as opposed to an automatic approach,then expectations regarding the training and back-ground of that user are yet another dimension in thespace of possible designs.
The acquisition com-ponent of TELl is designed for users with minimaltraining.
In TEAM, database administrators or thosecapable of designing and structuring their owndatabase use the acquisition tools.
Our approach hasbeen to assume that the user of the acquisition tool issophisticated enough to be a member of the supportstaff of the underlying system(s) involved, and isfamiliar with the way the domain is conceived by theend users of the NLI.
More particularly, we assumethat the individual can become comfortable with logicso that he/she may recognize the correctness of logi-cal expressions output by the semantic interpreter, butneed not be trained in AI techniques.
A total environ-ment is provided for that class of user so that thenecessary knowledge may be acquired, maintained,and updated over the life cycle of the NLI.
We havetrained such a class of users at the Naval OceanSystems Center (NOSC) who have been using theacquisition tools for approximately a year and a half.3.5 Scope  of ut i l i t ies p rov ided .It would appear that most acquisition systemshave focused on the inference problem of acquiringknowledge initially and have paid relatively little atten-tion to explaining to the user what knowledge hasbeen acquired, providing sophisticated editingfacilities above the level of the internal data structuresthemselves, or providing consistency checks on thedatabase of knowledge acquired.
Providing such acomplete facility is a goal of our effort; feedback fromnon-AI staff using the tool has already yielded sig-nificant direction along those lines.
The tool currentlyhas a very sophisticated, flexible debugging environ-ment for testing the semantic knowledge acquired in-dependently of the other components of the NLI, canpresent the knowledge acquired in tables, and usesthe set of domain facts as a way of checking theconsistency of what the user has proposed and sug-gesting alternatives that are consistent with what thesystem already knows.
Work is also underway on anintelligent editing tool guaranteeing consistency withthe model when editing, and on an Englishparaphraser to express the content of a semantic rule.4 IRACQThe original version of IRACQ was conceived byR.
Bobrow and developed by M. Moser \[19\].
Fromsample noun phrases or clauses supplied by the user,it inferred possible selectional restrictions and let theuser choose the correct one.
The user then had tosupply the predicates that should be used in the inter-pretation of the sample phrase, for inclusion in theIRule.34From that original foundation, as IRUS evolved touse NIKL.
IRACQ was modified to take advantage ofthe NIKL knowledge representation language and theform we have adopted for representing events andstates of affairs.
For example, now IRACQ is able tosuggest to the user the predicates to be used in theinterpretation, assuring consistency with the model.Following a more compositional approach, IRules cannow be defined for prepositional phrases and adjec-tives that have a meaning of their own, as opposed tojust appearing in noun IRules as modifiers of the headnoun.
Thus possible modifiers of a head noun (ornominal semantic class) include its complements (ifany), and only prepositional phrases or othermodifiers that do not have an independent meaning(as in the case of idioms).
Analogously, modifiers of ahead verb (or event class) include its complements.Adjective and prepositional phrase IRules specify thesemantic class of the nouns they can modify.Also, maintenance facilities were added, as dis-cussed in sections 4.3, 4.4, and 5.4.1 IRulesAn IRule defines, for a particular word or(semantic) class of words, the semantically accept-able English phrases that can occur having that wordas head of the phrase, and in addition defines thesemantic interpretation of an accepted phrase.
Sincesemantic processing is integrated with syntacticprocessing in IRUS, the IRules serve to block asemantically anomalous phrase as soon as it isproposed by the parser.
Thus, selectional restrictions(or case frame constraints) are continuously applied.However, the semantic representation of a phrase isconstructed only when the phrase is believed com-plete.There are IRules for four kinds of heads: verbs,nouns, adjectives, and prepositions.
The left handside of the.
IRule states the selectional restrictions onthe modifiers of the head.
The right hand sidespecifies the predicates that should be used in con-structing a logical form corresponding to the phrasewhich fired the IRule.When a head word of a phrase is proposed by theparser to the semantic interpreter, all IRules that canapply to the head word for the given phrase type aregathered as follows: for each semantic property that isassociated with the word, the IRules associated withthe given domain model term are retrieved, along withany inherited IRules.
A word can also have IRulesfired directly by it, without involving the model.
Sincethe IRules corresponding to the different word sensesmay give rise to separate interpretations, they arecarried along in parallel as the processing continues.If no IRules are retrieved, the interpreter ejects theword.One use of the domain model is that of IRule in-heritance.
When an IRule is defined, the user decideswhether the new IRule (the base IRule) should inheritfrom IRules attached to higher domain model terms(the inherited IRules), or possibly inherit from otherIRules specified by the user.
When a modifier of ahead word gets transmitted and no pattern for it existsin a base IRule for the head word, higher IRules aresearched for the pattern.
If a pattern does exist forthe modifier in a given IRule, no higher ones are triedeven if it does not pass the semantic test.
That is,inheritance does not relax semantic constraints.4.2 An IRACQ sess ionIn this section we step through the definition of aclause IRule for the word "send *, and assume thatlexical information about "send ~ has already been en-tered.
The sense of "sending" we will define, whenused as the main verb of a clause, specifies an eventtype whose representation is as follows:( Z x) \[deployment(x) & agent(x, a) & object(x, o) &destination(x, d)\],where the agent a must be a commanding officer, theobject o must be a unit and the destination d must bea region.From the example clauses presented by the t~serIRACQ must learn which unary and binary predicate:.are to be used to obtain the representation aboveFurthermore, IRACQ must acquire the most geP.e'~semantic class to which the variables a, o, and d ,~,=~belong.Output from the system is shown in bold faceinput from the user in regular face, and comments at,..inserted in italics.Word that should trigger this IRule: sendDomain model term to connect IRule to(select-K to view the network): deployment<A: At this point the user may wish toview the domain mode/network using ourgraphical displaying and edi~ng facilityKREME\[1\] to decide the correct conceptthat should be associated with this word(KREME may in fact be invoked at anytime).
The user may even add a new con-cept, which will be tagged with the user'sname and date for later verification by thedomain mode/ builder, who has fullknowledge of the implications that adding aconcept may have on the rest of the sys-tem.Alternatively, the user may omit theanswer for now; in that case, IRACQ canproceed as before, and at B will present amenu of the concepts it already knows to beconsistent with the example phrases the35user provides.
Figure 1 shows a picture ofthe network around DEPLOYMENT.>lew Concept  New HohEd i t  Robu~Figure 1: Network centered onDEPLOYMENTEnter an example sentence using "send":An admiral sent Enterprise to the Indian Ocean.<IRACQ uses the furl power of the IRUSparser and interpreter to interpret this sen-tence.
A temporary IRule for "send" is usedwhich accepts any modifier (it is assumedthat the other words in the sentence canaJready be understood by the system.
)IRACQ recognizes that an admiral is of thetype COMMANDING.OFFICER, and dis-plays a menu of the ancestors ofCOMMANDING.OFFICER in the NIKLtaxonomy (figure 2).>Choose a generalization forCOMMANDING.OFFICERCOMMANDING.OFFICERPERSONCONSCIOUS.BEINGACTIVE.ENTITYOBJECTTHINGFigure 2: Generalizations ofCOMMANDING.OFFICER<The user's selection specifies the caseframe constraint on the logical subject of"send'.
The user picksCOMMANDING.OFFICER.
IRACQ will per-form similar inferences and present a menufor the other cases in the example phraseas well, asking each time whether themodifier is required or optional Assumethat the user selects UNIT as the logicalobject and REGION as the object of thepreposition "to".><B: If the user did not specify the conceptDEPLOYMENT (or some other concept) atpoint A above as the central concept in thissense of "sending', then IRACQ wouldcompute those unary concepts c such thatthere are binary predicates relating c toeach case's constraint, e.g., toCOMMANDING.OFFICER, REGION, andUNIT.
The user would be presented with amenu of such concepts c. IRACQ wouldnow proceed in the same way for A or B.><IRACQ then looks in the NIKL domainmodel for binary predicates relating theevent class (e.g., DEPLOYMENT) to one ofthe cases' semantic class (e.g.
REGION),and presents the user with a menu of thosebinary predicates (figure 3).
Mouse optionsallow the user to retrieve an explanation ofhow a predicate was found, or to look at thenetwork around it.
The user picksDESTINA T/ON.OF.>Which of the following predicates should relateDEPLOYMENT to REGION in the MRL?
:Figure 3:LOCATION.OFDESTINATION.OFRelations between DEPLOYMENTand REGION<IRACQ presents a menu of binary predi.catas relating DEPLOYMENT andCOMMANDING.OFFICER, and one relatingDEPLOYMENT and UNIT.
The user picksAGENT and OBJECT, raspective/y.>Enter examples using "send" or <CR> if done:<The user may provide more examples.Redundant information would be recognizedautomatically.>Should this IRule inherit from higher IRules?
yes<A popup window allowing the user toenter comments appears.
The default com-ment has the creation date and the user'sname.>This is the IRule you just defined:(IRule DEPLOYMENT.4(clause subject (is-a COMMANDING.OFFICER)head * object (is-a UNIT)pp ((pp head to pobj (is-a REGION))))(bind ((commanding.officer.1 (optional subject))(unit.1 object)(region.1 (optional (pp 1 pobj))))(predicate '(destination.of *v" region.I))(predicate '(object.of "v" unit.l))36(predicate '(agent *v" commanding.officer.I))(class 'DEPLOYMENT)))Do you wish to edit the IRule?
no<The person may, for example, want toinsert something in the action part of theIRule that was not covered by the IRACQquestions.>This concludes our sample IRACQ session.4.3 Debugging environmentThe facility for creating and extending IRules isintegrated with the IRUS NLI itself, so that debuggingcan commence as soon as an addition is made usingIRACQ.
The debugging facility allows one to requestIRUS to process any input sentence in one of severalmodes: asking the underlying system to fulfill the userrequest, generating code for the underlying system,generating the semantic representation only, or pars-ing without the use of semantics (on the chance that agrammatical or lexical bug prevents the input frombeing parsed).
Intermediate stages of the translationare automatically stored for later inspection, editing, orreuse.IRACQ is also integrated with the other acquisitionfacilities available.
As the example session aboveillustrates, IRACQ is integrated with KREME, aknowledge representation editing environment.
Ad-ditionally, the IRACQ user can access a dictionarypackage for acquiring and maintaining both lexicaland morphological information.Such a thoroughly integrated set of tools hasproven not only pleasant but also highly productive.4.4 Edit ing an IRuleIf the user later wants to make changes to anIRule, he/she may directly edit it.
This procedure,however, is error-prone.
The syntax rules of the IRulecan easily be violated, which may lead to cryptic er-rors when the IRule is used.
More importantly, theuser may change the semantic information of theIRule so that it no longer is consistent with the domainmodel.We are currently adding two new capabilities tothe IRule editing environment:I.A tool that uses some of the sameIRACQ software to let the user expandthe coverage of an IRule by enteringmore example sentences.2.
In the case that the user wants tobypass IRACQ and modify an IRule, theuser will be placed into a restrictiveeditor that assures the syntactic integrityof the IRule, and verifies the semanticinformation with the domain model.5 An IRule ParaphraserAn IRule paraphraser is being implemented as acomprehensive means by which an IRACQ user canobserve the capabilities introduced by a particularIRule.
Since paraphrases are expressed in English,the IRule developer is spared the details of the IRuleinternal structure and the meaning representation.The IRule paraphraser is useful for three main pur-poses: expressing IRule inheritance so that the userdoes not redundantly add already inherited infor-mation, identifying omissions from the IRule's linguis-tic pattern, and verifying IRule consistency and com-pleteness.
This facility will aid in specifying and main-taining correct IRules, thereby blocking anomalous in-terpretation of input.5.1 Major  des ign  featuresThe IRute paraphraser makes central use of theIRUS paraphraser (under development), whichparaphrases user input, particularly in order to detectambiguities.
The IRUS paraphraser shares in largepart the same knowledge bases used by the under-standing process, and is completely driven by theIRUS meaning representation language (MRL) usedto represent the meaning of user queries.
Given anMRL expression for an input, the IRUS paraphraserfirst transforms it into a syntactic generation tree inwhich each MRL constituent is assigned a syntacticrole to play in an English paraphrase.
The syntacticroles of the MRL predicates are derived from theIRules that could generate the MRL.In the second phase of the IRUS paraphraser, thesyntactic generation tree is transformed into anEnglish sentence.
This process uses an ATN gram-mar and ATN interpreter that describes how to com-bine the various syntactic slots in the generation treeinto an English sentence.
Morphological processing isperformed where necessary to inflect verbs and ad-jectives, pluralize nouns, etc.The IRule paraphraser expresses the knowledgein a given IRule by first composing a stereotypicalphrase from the IRule linguistic pattern (i.e., the lefthand side of the IRule).
For the "send" IRule of theprevious section, such a phrase is "A commandingofficer sent a unit to a region*.
For inherited IRules,the IRule paraphraser composes representativephrases that match the combined linguistic patterns ofboth the local and the inherited IRules.
Then, theIRUS parser/interpreter interprets that phrase usingthe given IRute, thus creating an MRL expression.Finally, the IRUS paraphraser expresses that MRL inEnglish.Providing an English paraphrase from just the lin-guistic pattern of an IRule would be simple and unin-teresting.
The purpose of obtaining MRLs for repre-sentative phrases and using the IRUS paraphraser togo back to the English is to force the use of the righthand side of the IRule which specifies the semantic37interpretation.
In this way anomalies introduced by,for example, manually changing variable names in theright hand side of the IRule (which point to linguisticconstituents of the left hand side), can be detected.5.2 Role within IRACQIRACQ will invoke the IRule Paraphraser at twointeraction points: (1) at the start of an IRACQ sessionwhen the user has selected a concept to which toattach the new IRule (paraphrasing IRules already as-sociated with that concept shows the user what isalready handled--a new IRule might not even beneeded), and (2) at the end of an IRACQ session,assisting the user in detecting anomalies.The planned use of the IRule Paraphraser is il-lustrated below with a shortened version of an IRACQsession.Word that should trigger this IRule: changeDomain model term to connect IRule to:change.in.readinessParaphrases for existing IRules (inheritedphrases are capitalized):Local IRule: change.in.readiness.1"A unit changed from a readiness ratingto a readiness rating"Inherited IRule: event.be.predicate.1"A unit changed from a readiness ratingto a readiness rating"{IN, AT} A LOCATION<Observing these paraphrases will assistthe IRACQ user in making the followingdecisions:?
A new CHANGE./N.READ/NESS.2Iru/e needs to be defined to capturesentences like "the readiness ofFrederick changed from C1 to C2".?
Location information should not berepeated in the newCHANGE.IN.READINESS.2 /rulesince it will be inherited.The/RACQ session proceeds as describedin the previous example session.>6 Concluding RemarksOur approach to semantic knowledge acquisition:1) is in the context of a general purpose NL interfacerather than one that accesses only databases, 2)employs a knowledge representation formalism withlimited inferencing capabilities, 3) assumes a trainedperson but not an AI expert, and 4) provides a corn-plete environment for not only acquiring semanticknowledge, but also maintaining and editing it in aconsistent knowledge base.
This section commentson what we have learned thus far about the point ofview espoused above.First, we have transferred the IRUS natural lan-guage interface, which includes IRACQ, to the staff ofthe Naval Ocean Systems Center.
The person incharge of the effort at NOSC has a master's degree inlinguistics and had some familiarity with natural lan-guage processing before the effort started.
Shereceived three weeks of hands-on experience withIRUS at BBN in 1985, before returning to NOSCwhere she trained a few part-time employees who arecomputer science undergraduates.
Development ofthe dictionary and IRules for the Fleet Command Cen-ter Battle Management Program (FCCBMP), a largeNavy application \[23\], has been performed exclusivelyby NOSC since August, 1986.
Currently, about 5000words and 150 IRules have been defined.There are two strong positive facts regardingIRACQ's generality.
First, IRUS accesses both alarge relational data base and an applications pack-age in the FCCBMP.
Only one set of IRules is used,with no cleavage in that set between IRules for thetwo applications.
Second, the same software hasbeen useful for two different versions of IRUS.
Oneemploys MRL \[29\], a procedural first order logic, asthe semantic representation of inputs; the secondemploys IL, a higher-order intensional logic.
Sincethe IRules define selectional restrictions, and sincethe Davidson-like representation (see section 3) isused in both cases, IRACQ did not have to bechanged; only the general procedures for generatingquantifiers, scoping decisions, treatment of tense, etc.had to be revised in IRUS.
Therefore, a noteworthydegree of generality has been achieved.Our key knowledge representation decisions werethe treatment of events and states of affairs, and theuse of NIKL to store and reason about axioms con-cerning the predicates of our logic.
This strongly in-fluenced the style and questions of our semantic ac-quisition process.
For example, IRACQ is able topropose a set of predicates that is consistent with thedomain model to use for the interpretation of an inputphrase.
We believe representation decisions mustdictate much of an acquisition scenario no matterwhat the decisions are.
In addition, the limitedknowledge representation and inference techniques ofNIKL deeply affected other parts of our NLI, par-ticulariy in the translation from conceptually-orienteddomain predicates to predicates of the underlying sys-tems.The system does provide an initial version of acomplete environment for creating and maintainingsemantic knowledge.
The result has been verydesirable compared to earlier versions of IRACQ andIRUS that did not have such debugging aids nor in-tegration with tools for acquiring and maintaining the38domain model.
We intend to integrate the variousacquisition, consistency, editing, and maintenanceaids for the various knowledge bases even further.References1.
Abrett, G., and Burstein, M. H. The BBNLaboratories Knowledge Acquisition Project: KREMEKnowledge Editing Environment.
BBN Report No.6231, Bolt Beranek and Newman Inc., 1986.2.
Allen, J.F.
and Litman, D.J.
"Plans, Goals, andLanguage'.
Proceedings of the IEEE 74, 7 (July1986), 939-947.3.
Amsler, R.A. A Taxonomy for English Nouns andVerbs.
Proceedings of the 19th Annual Meeting of theAssociation for Computational Linguistics, 1981,4.
Ballard, Bruce and Stumberger, Douglas.
Seman-tic Acquisition in TELl: A Transportable, User-Customized Natural Language Processor.
Proceed-ings of The 24th Annual Meeting of the ACL, ACL,June, 1986, pp.
20-29.5.
Bates, M. and Bobrow, R.J. A TransportableNatural Language interface for Information Retrieval.Proceedings of the 6th Annual International ACMSIGIR Conference, ACM Special Interest Group onInformation Retrieval and American Society for Infor-mation Science, Washington, D.C., June, 1983.6.
Bates, Madeleine.
Accessing a Database with aTransportable Natural Language Interface.
Proceed-ings of The First Conference on Artificial IntelligenceApplications, IEEE Computer Society, December,1984, pp.
9-12.7.
Bates, M., and Ingria, R. Dictionary PackageDocumentation.
Unpublished Internal Document,BBN Laboratories.8.
Carberry, M.S.
A Pragmatics-Based Approach toUnderstanding Intersentential Ellipsis.
Proceedings ofthe 23rd Annual Meeting of the Association for Com-putational Linguistics, Association for ComputationalLinguistics, Chicago, IL, July, 1985, pp.
188-197.9.
Cumming, S0 and Albano, R. A Guide to LexicalAcquisition in the JANUS System.
InformationSciences Institute/RR-85-162, USC/InformationSciences Institute, 1986.10.
Davidson, D. The Logical Form of Action Sen-tences.
In The Logic of Grammar,Dickenson Publishing Co., Inc., 1 g75, pp.
235-245.11.
Granger, R.H. "The NOMAD System:Expectation-Based Detection and Correction of Errorsduring Understanding of Syntactically and Seman-tically Ill-Formed Text'.
American Journal of Com-putational Linguistics 9, 3-4 (1983), 188-198.12.
Grishman, R. Hirschman, L., and Nhan, N.T.
"Discovery Procedures for Sublanguage SelectionalPatterns: Initial Experiments".
Computational Lin-guistics 12, 3 (July-September 1986), 205-215.13.
Grosz, B., Appelt, D. E., Martin, P., and Pereira,F.
TEAM: An Experiment in the Design of Trans-portable Natural Language Interfaces.
356, SRI Inter-national, 1985.
To appear in Artificial Intelligence.14.
Grosz, B.J.
and Sidner, C.L.
Discourse Structureand the Proper Treatment of Interruptions.
Proceed-ings of IJCAI85, International Joint Conferences onArtificial Intelligence, Inc., Los Angeles, CA, August,1985, pp.
832-839.15.
Litman, D.J.
Linguistic Coherence: A Plan-BasedAlternative.
Proceedings of the 24th Annual Meetingof the Association for Computational Linguistics, ACL,New York, 1986, pp.
215-223.16.
Markowitz, J., Ahlswede, T., and Evens, M.Semantically Significant Patterns in Dictionary Defini-tions.
Proceedings of the 24th Annual Meeting of theAssociation for Computational Linguistics, June, 1986.17.
Mooney, R. and DeJong, G. Learning Schematafor Natural Lanugage Processing.
Proceedings of theNinth International Joint Conference on Artificial Intel-ligence, IJCAI, 1985, pp.
681-687.18.
Moser, M.G.
An Overview of NIKL, the New Im-plementation of KL-ONE.
In Research in KnowledgeRepresentation for Natural Language Understanding -Annual Report, 1 September 1982 - 31 August 1983,Sidner, C. L., et al, Eds., BBN Laboratories ReportNo.
5421, 1983, pp.
7-26.19.
Moser, M. G. Domain Dependent Semantic Ac-quisition.
Proceedings of The First Conference onArtificial Intelligence Applications, IEEE ComputerSociety, December, 1984, pp.
13-18.20.
Schank, R., and Abelson, R. Scripts, Plans,Goals, and Understanding.
LawrenceErlbaumAs-sociates, 1977.21.
Schmolze, J. G., and Israel, D.J.
KL-ONE:Semantics and Classification.
In Research inKnowledge Representation for Natural Language Un-derstanding.
Annual Report, 1 September 1982 - 31August 1983, Sidner, C.L., et al, Eds., BBNLaboratories Report No.
5421, 1983, pp.
27-39.22.
Sidner, C.L.
"Plan Parsing for IntendedResponse Recognition in Discourse".
ComputationalIntelligence 1, 1 (February 1985), 1-10.23.
Simpson, R.L.
"AI in C3, A Case in Point: Ap-plications of AI Capability".
S/GNAL, Journal of theArmed Forces Communications and Electronics As-sociation 40, 12 (1986), 79-86.24.
Stallard, D. Data Modelling for Natural LanguageAccess.
The First Conference on Artificial IntelligenceApplications, IEEE Computer Society, December,1984, pp.
19-24.3925.
Stallard, David G. A Terminological SimplificationTransformation for Natural Language Question-Answering Systems.
Proceedings of The 24th AnnualMeeting of the ACL, ACL, June, 1986, pp.
241-246.26.
Vilain, M. The Restricted Language Architectureof a Hybrid Representation System.
Proceedings ofIJCAI85, International Joint Conferences on ArtificialIntelligence, Inc., Los Angeles, CA, August, 1985, pp.547-551.27.
Walker, E., Weischedel, R.M., and Ramshaw, L."lRUS/Janus Natural Language Interface Technologyin the Strategic Computing Program'.
$igna/40, 12(August 1986), 86-90.28.
Weischedel, R.M.
and Ramshaw, L.A. Reflec-tions on the Knowledge Needed to Process Ill-FormedLanguage.
In Machine Trans/a~on: Theoretica/ andMethodo/ogica/Issues, S. Nirenburg, Ed., CambridgeUniversity Press, Cambridge, England, to appear.29.
Woods, W.A.
Semantics and Quantification inNatural Language Question Answering.
In Advancesin Computers, M. Yovits, Ed., Academic Press, 1978,pp.
1-87.40
