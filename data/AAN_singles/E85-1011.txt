VARIOUS REPRESENTATIONS OF TEXT PROPOSED FOR EUROTRAChr is t ian  Bo i te t (+) ,  NeLson Verastegui (++) ,  DanieL Bachut(++)(+)Groupe d'Etudes pour La Traduct ion AutomatiqueUnivers i tE  Sc ient i f ique  et R~dicaLe de GrenobleBP 68 - 38402 Saint Mart in d'H~res - France(++) \ [ns t i tu t  de Formation et ConseiL en In format ique27, rue Turenne - 38000 GrenobLe - FranceABSTRACTWe introduce several  general not ions concerningthe texts and the particularities of text proces-sing on a computer support, in relation to someproblems which are specific to M(A)T. And wepresent the solution we have proposed for theduration of the EUROTRA project.INTRODUCTIONThe input /output  modules are very importantfor  a machine (aided) t rans la t ion  system (M(A)T),which must be in tegrated  in to  some environment( t rans la t ion  o f f i ce ,  techn ica l  data base, e tc . )
.From an externa l  po int  of  v iew, the support ofa text is either paper with figures, formulas,tables and typographical conventions, or a magneticsupport containing, in addition, formatting andpage-setting commands for a special text processingsystem.Within all modern M(A)T systems, includingEUROTRA (now in the specification phase), a textis viewed, from an ~I J t~po in t  of view, as aset of decorated nodes, organized according to aparticular geometrical distribution (often a treestructure, as in ARIANE-78 (Boitet et al, 1982)).Our objective in proposing some representationsof texts for EUROTRA has been to define an internalstructure recognized by the EUROTRA softwaresystems, and carrying all information necessary forthe translation model and for the restitution ofthe preceding information at output time.TEXT PROCESSING IN GENERALEach text  (whether or  not on computer support)is  considered from three po ints  of view, i .e .
:IThis work has been carried out as part of acontracCwith the Commission of the EuropeanCommunities (in the framework of the EUROTRAResearch and Development programme) and the CNRS(Centre National de la Recherche Scientifique).The ideas and proposals in this paper are those ofthe authors and not necessarily shared or supportedby the Commission, nor are they to be interpretedas part of the EUROTRA design.
We are grateful tothe Commission and the CNRS for agreement topublish this paper.73The Fopu~ is everything related to the particu-Lar external aspect of a text on paper.
E.g., thefact that it is written in one or several columns,single or double spaced, printed recto or recto/verso, following a special convention for thenumbering of chapters and sections, etc.The ~>?JC~p.~j?
?E is the logical division of thetext into hierarchically related pieces such asvolume, part, chapter, section, sub-section,paragraph, sub-paragraph, sentence, numbered ornon-numbered lists, figures, tables, diagrams,etc.
This depends on the kind of text : when pro-cessing plays, getting rid or their devision intoacts and scenes is out of the question.
Whenpoetry is processed, the delimitation of each linecannot be left out.The structure can be externally representedby using various po~E forms.
In the contextof M(A)T, th~ advantages of taking into accountthe structure of the text are twofold :- the text can be decomposed if only part of it isto be translated ;- it is easy to retrieve a piece of text (e.g.when the translation of a long text has failedon one sentence).The ConJ~JIJ~is the "text" considered as asequence of "words" carrying some information.Words in different languages may appear, writtenwith special characters, in upper/lower case,diacritics, punctuation marks, stress, etc.These three notions are interrelated.
Thecontent of a text can, for example, refer to apage number, which belongs rather to its form.Often, the length of tb~ original text is notmaintained in the translation, and this,therefore, modifies the form.In text processing systems, a coding(either visible or invisible to the user) enablesto express the three above-mentioned characteris-tics of the text.
We will call ~o~a~L~ the codesrelated to the form, and ~epoJ~?~o~ the codesrelated to the structure.
We distinguish four mainfeatures of the formattors (some examples can befound in (Furuta et al, 1982 ; Chamberlin et al,1981 ; Goldfarb, 1981 ; IBM, 1981, 1983 ;Stallman, 1981 ; Thacker et al, 1979).I.
dP.~JZy~.z~/~J~?JJ~JZJt~ : in the delayed case, thereis no interaction with the author and any localmodification of the document can only be carriedout after a complete reformatting of the text.In the immediate case, the author can immedia-tely see the effect of any modification on theformatting of the document.2.
~ O lCt .y /~J3~ OJ~tP.Xt : systems able toprocess pictures and text are associated with"addressable dot printers" or with photocompo-sition machines.3.
~mll0PJt~Lt,~ve/dP.~.t~(~t~v?
~ in an imperativesystem, the user uses formatting commandswritten in a low-level language (".sp 2;" toskip two blanks,...).
In a declarative system,a high-level language enables the "typing" ofthe different parts of the text, withoutbothering about the specific result obtained ona specific physical support.4.
iJ~q~?~3~q~/~e ~ : depending on the system,several objects can represent a text.
Whenstructure and content are "mixed" in eachobject, the coding is called integrated, other-wise it is called separated.Let us take the following text as an example :I ml.sp 2?
US  onAvant-dernier  exempLe:?
us off<~)~ est-il!
~ Je ne sais pas.
-- Par, i,tout ~ fait?-- Non... enfin je ne trois pas... -- Bon,dit-il.
Il a raison.
>> (Oh.
Rochefort)In that case, the format,or is of delayed,text only, imperative, and integrated type.
Theform depends on the formats and on their parame-ters (.sp 2, .us on/off).
The structure depends onthe punctuation ("!
", "...", "--"...), and on someformats.In the context of M(A)T systems, somedecisions must be taken, as to :- how a text is "decomposed" at input time (intosegments, units, words, separators, punctuation,etc.)
;To create this structure (and carry out thedecomposition of the text) in a system withintegrated coding, it suffices to introduce spe-cial codes (or to use existing codes, likeend-of-text, formats...) to mark the text and togenerate the object "structure" automaticallyfrom their interpretation.In order to do so, the system must know thelist of separators as well as their hierarchicalordering ;- how the formats for page-setting are handled.These formats are almost always linguisticallyrelevant.
For example, titles form a particularsublanguage.
Hence, a "title" format may be usedby the analyzer to use an appropriate subgramma~- how alphabetical transcriptions are carried out.No coding standards exist for all language~although ISO codes and transcriptions (ISO, 1983)have been defined ;- how the "p la tes"  are handled.
Figures, formulas,e tc .
,  may be completely Left out ,  or replaced byspecia l  "words", or le f t  in the text .
This Lastmethod impl ies the use of some formal languagefor  f igure  descr ip t ion ,  which must be handled bythe l ingu is t i c  processor.WHAT COULD BE DONE IN EUROTRA ?Our proposals are based on our experience withGETA's ARIANE-78 system (Bo i tet  et aL.
,  1982), butalso on some others approaches (Morin, 1978 ;Bennett et a l .
,  1984 ; Hawes, 1983 ; Hundt, 1982).We have proposed thattaLL along the transLa-t ion  process, a given text  is  kept together withthe a t t r ibutes  de f in ing  i t s  three aspects :content,  form and s t ruc ture .This so lu t ion  seems more in teres t ing ,  becausea l l  in format ion re la ted  to the text  is  kept.Hence, i t  is  possib le to wr i te  l ingu is t i cprocesses in such a way that  the output text  w i l lpresent the same ~o~ as the input text .
Nocomplex (and often not good enough) res t i tu t ionprogram is  necessary.
Moreover, many codes(formats,  separators .
.
. )
have a l ingu is t i c  re le -vance which the Linguists might wish to put toprofit.The second idea is to choose a unique andunambiguous internal representation for eachcharacter : each symbol of each processed language(including the special symbols such as "/","%" .o.)
should be represented by a unique internalcode.
This obviously has great advantages, forexample the ease of transfer of linguisticapplications.One of the basic principles underlying thisproposal is, therefore, ~ (~zp~X:o  X:h~?J~V~/LOrlm?tl,t~.
We wish to work directly on realtexts, without being obliged to put them in someform or other prior to process them into thesystem.
Manual pre-editing will be reduced to aminimum.We wish to access objects in a way whichallows to indicate the text processing system used(for the definition of formats and separators),and the input/output device used for entering thetext.
The proposed solution calls for ~:hJc~e~ ,  the content and use of which we will nowdescr ibe.These tables (not necessar i ly  d i s jo in t )correspond to the three Levels of form, s t ructureand content.
The order in which they are describedcorresponds to the advised order of use.74The tables should be used to dr ive  theso-ca l led input /output  module (or conversionmodule).TranscriptionThe transcription table allows the conversionof a text entered on any device whatsoever, intoan equivalent ext (in the same language).
Thistable, therefore, would depend on the input/outputdevice used.For reasons of genera l i ty  and por tab i l i ty ,the ISO code seems to be the best choice for  thein terna l  code.Each alphabet would be identif ied in aunambiguous way by a corresponding escape sequence.In add i t ion ,  we propose :- to assign to each alphabet a language code ;- to def ine two escape codes for  the two possiblemodes of representing a character : 2 bytes and1 byte.We think i t  would be best to choose for  eachLanguage a standard which respects i t s  a lphabet i -cal order .
At the Level of the in terna l  code, thet rans l i te ra t ion  problem does not ex i s t  as th iscode is supposed to contain a l l  the symbols used.However, we propose to use fac tor i za t ion  ofthe alphabet code only for  storage and to keepthe 2 bytes code during the whole processing.This conversion can eas i ly  be 'car r ied  out withthe use of an "equivalence" tab le  ca l ledXYt~p~:~onX~zbZE.
In general ,  there w i l l  be onetab le  for  each input /output  device and for  eachlanguage.The table would function as follows (at inputtime) : in the first column, recognition of thecurrent sy~ol  of the text, and transformation ofthis symbol into the corresponding element (inaccordance with the storage mode, i.e.
adding ornot the language code), in the second column.This table enables us to un i fy  the wr i t ingconventions of the text  and, in a more generalway, would be used for  a l l  ( input /output )  commu-n icat ion  between the system and a human partner .In th is  tab le ,  we also ind icate  the alphabe-t i ca l  order of each Language.
Each Language hasi t s  own character i s t i cs  ; in French, for  example,d ic t ionar ies  are sorted according to the Lettersof the alphabet,  and then according to thed iacr i t i cs .
In order to take a l l  these poss ib i l i -t ies  in to  account, we propose to add a series ofcolumns to th is  t ranscr ip t ion  tab le  : sort ingwould be carr ied out in several  phases chosen inadvance.Let us assume that French text  is entered onan English keyboard : the absence of d iacr i t i csob l ige  to def ine t ranscr ip t ion  ru les .The table of transcription would be as follows(the codes are fictitious) :Human Internal ALphabetic Diacritictranscription code order orderee$1e$2u$I?
iiij-1232FormatsWe attempt to define a means of specifyingall the characteristics necessary for therecognition of formats on a wide range offormattors and text processing systems.
But wemay assume that, independently of the formattorchosen, there will be a codification standard fortexts which limits the number of possibilitiesand simplifies entry.In general, this stage will have three phases(the first phase is strictly computational, thenext two are of a linguistic nature), each ofwhich is the object of different information data,stored in the table of formats :- recognition of the format : features of formatsmust be coded in some fields of the table ;- initialization of associated decorations(properties and values), which will characterizeit all along the linguistic processing.
Thelinguist should envisage its definition and itsuse in a way which is coherent with thelinguistic models.
Freedom of choice of proper-ties and values to be assigned to each formatshould be Left to him.- transformation of the recognized format in astring.
The interest of this string lies in thefact that it can serve to mark differentformatting orders which express the same action,in a way which is unique.
Similar formats will,then, be unified by one single convention whichis defined by the linguist.
The model (grammarsand dictionaries) would not depend on aparticular formatting system.
A change offormattor would, therefore, not be felt at thelevel of the linguistic data.75For the example given above, the table would be as follows :Prefix.sp.US on.us offSearch ZoneC.Begin C.End1 11 11 1End of  formatLeng.
Stop chr End Line< 133 ; YES< 133 ; YES< 133 ; YESo e .ParamYESNONOOccurrencetype (format) stringPARAGRAPHBEG UNDERLINED underscoreEND UNDERLINEDa g eStructural separatorsOnce the text is in EUROTRA code anddecomposed into formats and "non-formats", weidentify its structure.
To that end, we use atable of structural separators.
A 6Ephor  is astring of characters to be found either in theformats or in the other occurrences.
It cancorrespond to a punctuation sign, a word-separator(not necessarily blank or space !
), etc.
For aformat, it is proposed to use its characteristics,as given by the properties and values assigned inthe previous table and not the string ofcharacters which enabled its recognition.In this table, the separators should have ahierarchical order.
Therefore, both the LEv~ ofa separator is defined and its place in thehierarchy, the highest possible level being 1.The formats not found in the table will be takenby default as separators of the lowest level.For the example given in the first part, wecan define the below table (the ~ represents ablank or a space.
The transcriptions are nottaken into account).The fact that certain symbols are followed byone or two blanks in order to distinguish theirlevel, could give the impression that this is theresult of pre-editing.
But this is not the case !In this example, we have only use a text whichfollows precise and strict conventions in typo-graphy, as is the case for a great number of realtexts.
Our proposal can also apply to the proces-sing of texts which have no precise conventions.It suffices to define the tables in anappropriate way.Format separator  Levelyes noPARAGRAPH 1 NOi 2 NO?
2 NO.~  2 NO:~ 3 NO4 NO5 NO;i" 5 No<< 6 YES( 6 YES>> 6 NO) 6 NOBEG UNDERLI.
7 YESEND UNDERLZ.
7 NO8 NO- 9 NO.~ 9 NOa a aNesting (format)start yes noEND UNDERLI.
)OCCURRENCEDELETE TYPE(CONTENT)NONONONONONONONONONONONONONOYESNONOEXCLAMATIONQUESTIONSENTENCECOLONHYPHENWORDWORDB ZNVERTED COMMASB--PARENTHESESE--INVERTED COMMASE--PARENTHESESmWORD"HYPHENFULL STOPAs fo r  the fo rmats ,  we propose to  add to  th i stab le  proper t ies  and va lues  fo r  the recogn izedseparators .
We should be ab le  to  de f ine  theproper t ies  and values to be ass igned to  thes imple  occurrences not found in  the tab le  and toind icate  whether  the separator ,  once i t  i s  reco -gn ized ,  should be kept or  not (b lanks ,  fo rexample) .The next  t ree  i s  the resu l t  o f  the app l i ca -t ion  of  the three  tab les  g iven  above to  ourexample text .
Each Leaf car r ies  the proper t iesand va lues  g iven  by the tab les .
The proper tyOCCURRENCE conta ins  the character  s t r ing  ind ica -ted .
The TYPE of  the nodes 2, 5 and 14 i sFORMAT.
The type of  a l l  o ther  Leaves i s  CONTENT.76We have the choice between building up thetree considered, and building up a list of nodeseach of which correspond to a Leaf of the tree.Maybe the linguist should be able to choose bymeans of a parameter.
In the build-up of a tree,it would be interesting to assign the propertiesand values of the highest priority separator foundamongs its daughters to the internal nodes.Node 1 would thus have the value PARAGRAPH andnode 17 the value EXCLAMATION.
(1) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
>(2)+-(3)-- (4) >(5)- -  ( 6 ) - -  (7 ) - -  (8) .
.
.
.
.
.
.
.
> ( 9 )I I .
.
.
.
.
.
.
.
>( lO)+-  .
.
.
.
.
.
.
>(11)+-  .
.
.
.
.
.
.
.
.
.
.
.
>(12)- ->(13)................ >(14)?
- - -  (15) .
.
.
.
.
.
.
>(16)+-- - (77)--(!9)+--(17)-(18) .
.
.
.
.
.
.
.
.
>(19)+--(20) .
.
.
.
.
.
.
.
>(21)I -->(22)+-- .
.
.
.
.
.
.
>(23)+ .
.
.
.
>(24)--(25)--(26) --->(27)+--(28) .
.
.
.
.
.
>(29).
.
.
.
.
.
>(30).
.
.
.
.
.
.
.
>(31)+- .
.
.
.
.
.
.
>(32)+ .
.
.
.
>(33)- - (34) - - (35)  -7  .
.
.
.
.
.
.
>(36)+--(37) .
.
.
.
>(38)I .
.
.
.
.
.
>(39)+-- (40)  .
.
.
.
>(41)I .
.
.
.
>(42)+-- .... >(43)+ .
.
.
.
>(44)--(45) --->(46)+--(47)--(48) .
.
.
.
.
>(49)I + >(50)+----(51)--(52)-->(53)---->(54)---->(55)---->(56)+ .
.
.
.
>(57)+ >(58)--(59)--(60) >(61)+--(62) .
.
.
.
.
.
>(63)I .
.
.
.
.
.
.
.
.
.
>(64)+--(65) .... >(66)I .
.
.
.
.
.
>(67)+- .
.
.
.
>(68)>(69)--(7o)--(71) >(72)\[ I >(73)->(74)+ >(75)>(76).
.
.
.
.
>(78).... >(80)--->(81).... >(82)->(83).sp 2.US onAvantdernierexemple.us off<<OQestil!m-Jenesa ispas.~Pattitoutfait?Nonmm.enfinjenecroispasem.Bonditil.~IIaraison.~>>(ChRochefort)CONCLUSIONThe creation of the tables will be carriedout mainly by a computer scientist, who issupposed to know the hardware, the internal code,the formatting and the structuration conventionsof the texts...
The linguists should, however, beconsulted for the introduction of the conventionsthey have adopted (names of properties and values,of types of occurrences, of strings...).
Theinformation of a linguistic nature is exclusivelymeant for the unification of data having differentsources.
The introduction of purely linguisticknowledge is left to a next module in thetranslation process.The result of the conversion could besubmitted to human revision.
This depends on thepower of the mechanism using the tables, and onthe content of the tables.The problem of automatic recognition offormulas and plates in general has not beentreated.
Its solution depends on the textprocessing system which is chosen and its levelof difficulty is highly variables.The advantages of this solutions are :- the independ nce with particular peripheraldevice and text processor ;?
- the flexibility of the representation ;- the general applicability : the EUROTRA machinecan be used for processings other thantranslation.REFERENCESBENNETT W., SLOCUM J.
"METAL : The LRC Machine Translation System",Linguistic research center, Austin, Texas,USA, September 1984.BOITET C., GUILLAUME P., QUEZEL-AMBRUNAZ M."Implementation and conversational environme~of ARIANE-78.
An integrated system forautomated translation and human revision",Proceedings COLING-82, North-Holland,Linguistic Series n?
47, pP.
19-27, Prague,July 1982.CHAMBERLIN D.D., KING J.C., SLUTZ D.R., TODD J.P.,WADE B.W.
"JANUS : An interactive system for documentcomposition",Proceedings of the ACM SIGPLAN SIGOAsymposium on text manipulation, Portland,Oregon, June 8-10, 1981, SIGPLAN Notices,V16, N6, pp.
68-73.77FURUTA R., SCOFIELD J., SHAW A.
"Document Formatting Systems : Survey,Concepts, and Issues",Computing Surveys, VoL.
14, n ?
3,September 1982, pp.
417-472.GOLDFARB C.F.
"A generalized approach to document markup",Proceedings of the ACM SIGPLAN SIGOAsymposium on text manipulation, Portland,Oregon, June 8-10, 1981, SIGPLAN Notices, V16,N6, pp.
68-7"5.HAWES R."LOGOS : the intelligent translation system","Translating and the Computer" Conference,The Press Centre, London, UK, November 1983.HUNDT M."Working with the WEIDNER machine-aidedtranslation system",Department of translation, Mitel Corporation,Kanata, Ontario, Canada, 1982.IBM"Document Composition Facility : User's guide",SH20-9161-2, 411 p., September 1981.IBM"Office Information Architectures : Concepts",GC23-0765, 38 p., March 1983.ISO"International Register of Coded CharacterSets to be used with Escape Sequences",Subcommittee ISO/TC 97/SC 2 : Character setsand coding, 326 p., 1983.MORIN G."SISIF : syst~me d'identification, desubstitution et d'insertion de formes",Groupe TAUM, Universit~ de Montreal, 1978.STALLMAN R.M.,"EMACS : The extensible,  customizableself-documenting display ed i to r " ,Proceedings of the ACM SIGPLAN SIGOAsymposium on text manipulation, Portland,Oregon, June 8-10, 1981, SIGPLAN Notices,Vol.
16, N6, pp.
147-156.TAUM"TAUM-METEO, Description du Systeme",Groupe de recherches pour la TraductionAutomatique, Universit~ de Montreal, 47 p.,Janvier 1978.THACKER C.P., MC CREIGHT E.M., LAMPSON B.W.,SPROULL R.F., BOGGS D.R.
"ALto : A personal Computer",Technical Report CSL-79-11, Xerox PaLo AltoResearch Center, August 1979.78
