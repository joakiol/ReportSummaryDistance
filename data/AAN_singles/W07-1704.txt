Balto-Slavonic Natural Language Processing 2007, June 29, 2007, pages 27?34,Prague, June 2007. c?2007 Association for Computational LinguisticsLemmatization of Polish Person NamesJakub PiskorskiEuropean CommissionJoint Research CentreVia Fermi 121020 Ispra, ItalyJakub.Piskorski@jrc.itMarcin SydowPolish-Japanese Instituteof Information TechnologyKoszykowa 8602-008 Warsaw, Polandmsyd@pjwstk.edu.plAnna Kups?c?Universit?
Paris3/LLF, PAS ICSCase Postale 70312, place Jussieu75251 Paris Cedex 05akupsc@univ-paris3.frAbstractThe paper presents two techniques forlemmatization of Polish person names.
First,we apply a rule-based approach which re-lies on linguistic information and heuris-tics.
Then, we investigate an alterna-tive knowledge-poor method which employsstring distance measures.
We provide anevaluation of the adopted techniques usinga set of newspaper texts.1 IntroductionProper names constitute a significant part of naturallanguage texts (estimated to about 10% in newspa-per articles) and are important for NLP applications,such as Information Extraction, which rely on au-tomatic text understanding.1 In particular, corefer-ence resolution (e.g., identifying several name vari-ants as referring to the same entity) plays a crucialrole in such systems.
Although automatic recogni-tion of proper names in English, French and othermajor languages has been in the research focus forover a decade now, cf.
(Bikel et al, 1997), (Borth-wick, 1999), (Li et al, 2003), only a few efforts havebeen reported for Slavic languages, cf.
(Cunning-ham et al, 2003) (Russian and Bulgarian), (Pisko-rski, 2005) (Polish).
Rich inflection and a more re-laxed word order make recognition of proper namesin Slavic more difficult than for other languages.Moreover, inflection of proper names is usually1The research presented in this paper was partially foundedby the Ministry of Education and Science (Poland), grant num-ber 3T11C00727.quite different from common nouns, which compli-cates the lemmatization process necessary for cor-rect coreference resolution.
In this paper, we focuson lemmatization of Polish person names, the mostidiosyncratic class of proper names in this language.First, we report results of a rule-based symbolic ap-proach.
We apply different heuristics, mostly basedon the internal (morphological and syntactic) struc-ture of proper names but also on the surroundingcontext.
Sometimes, however, the required infor-mation is not available, even if the entire docu-ment is considered, and lemmatization cannot beperformed.
Therefore, we experimented with var-ious knowledge-poor methods, namely string dis-tance metrics, in order to test their usefulness forlemmatization of Polish person names as an alterna-tive technique, especially for cases where document-level heuristics are insufficient.Lemmatization of proper names in Slavic has notattracted much attention so far but some work hasbeen done for Slovene: (Erjavec et al, 2004) presenta machine-learning approach to lemmatization ofunknown single-token words, whereas (Pouliquen etal., 2005) report on a shallow approach to find baseforms.The organization of the paper is as follows.
First,we present a description of phenomena which makelemmatization of Polish person names a difficulttask.
Next, a rule-based approach and its evaluationare presented.
Then, various string distance metricsare introduced, followed by the results of experi-ments on newspaper texts.
The final section presentsconclusions and perspectives for future work.27case male name female namenom Kazimierz Polak Kazimiera Polakgen Kazimierza Polaka Kazimiery Polakdat Kazimierzowi Polakowi Kazimierze Polakacc Kazimierza Polaka Kazimiere?
Polakins Kazimierzem Polakiem Kazimiera?
Polakloc Kazimierzu Polaku Kazimierze Polakvoc Kazimierzu Polaku Kazimiero PolakTable 1: Declension of Polish male vs. female names2 Declension Patterns of Polish PersonNamesPolish is a West Slavic language with rich nomi-nal inflection: nouns and adjectives are inflected forcase, number and gender.
There are 7 cases, 2 num-bers and traditionally 3 genders are distinguished:masculine, feminine and neuter.
Just like commonnouns, Polish person names undergo declension buttheir inflectional patterns are more complicated.
Atypical Polish name consists of a first name and alast name; unlike in Russian or Bulgarian, there areno patronymics.
Additionally, titles (e.g., dr ?Phd?,inz?.
?engineer?, prof.
?professor?)
or honorific forms(pan ?Mr.?
or pani ?Mrs./Miss?)
are often used.
Ingeneral, both the first and the last name can be in-flected, e.g., Jan Kowalski (nominative) vs. JanaKowalskiego (genitive/accusative).
If the surnameis also a regular word form, things get more compli-cated.
Whether the last name can be inflected in suchcases depends on several factors, e.g., on the gen-der of the first name, a category (part-of-speech) andgender of the (common) word used as a surname.For instance, if the surname is a masculine noun, itis inflected only if the first name is also masculine.This is illustrated in Table 1 with declension of themale name Kazimierz Polak ?Casimir Pole?
and itsvariant with the female first name Kazimiera.If the surname is an adjective (e.g., Niski ?Short?
),it is inflected (according to the adjectival paradigm)and agrees in gender with the first name, i.e., maleand female last name forms are different (e.g., Niski?Short?
(masc.)
vs. Niska ?Short?
(fem.)).
The de-clension of foreign surnames may strongly dependon their origin, and in particular on the pronuncia-tion.
For example, the name Wilde is pronounceddifferently in English and German, which impactsits declension in Polish.
If it?s of English origin, anominal declension is applied, i.e., Wilde?a (gen.),case sg pl sg plnom go?a?b go?e?bie Go?a?b Go?a?bowiegen go?e?bia go?e?bi Go?a?ba Go?a?b?wdat go?e?biowi go?e?biom Go?a?bowi Go?a?bomacc go?e?bia go?e?bie Go?a?ba Go?a?b?wins go?e?biem go?e?biami Go?a?bem Go?a?bamiloc go?e?bia go?e?bie Go?a?biu Go?a?bachvoc go?e?biu go?e?bie Go?a?b Go?a?bowieTable 2: Common noun vs. person name inflectionwhereas if it comes from German, an adjective-likedeclension is adopted: Wildego (gen.).Declension of surnames which are also commonnouns can be different from the declension of com-mon nouns.2 In Table 2, we present a comparisonof the common noun go?a?b ?dove?
in singular andplural with the corresponding forms used for thesurname.
A comprehensive overview of this ratherintriguing declension paradigm of Polish names isgiven in (Grzenia, 1998).Finally, first name forms present problems aswell.
Foreign masculine first names, whose pro-nounced version ends in a consonant or whose writ-ten version ends in -a, -o, -y or -i do in generalget inflected (e.g., Jacques (nom.)
vs.
Jacques?a(gen./acc.
)), whereas names whose pronounced ver-sion ends in a vowel and are stressed on the last syl-lable (e.g., Fran?ois) usually do not change form.For female first names created from a male firstname, e.g., J?zef (masc.)
vs. J?zefa (fem.
), there isa frequent homonymy between the nominative formof the female name and the genitive/accusative formof the corresponding male form, e.g., J?zefa is no-minative of J?zefa (fem.)
and genitive/accusative ofJ?zef (masc.
).3 Rule-Based Approach to Person NameLemmatization3.1 ExperimentOur rule-based approach to person name lemmatiza-tion exploits existing resources (a dictionary of firstnames and contextual triggers) and relies on con-textual information (heuristics).
It has been imple-mented using SProUT, a shallow processing plat-form, integrated with a Polish morphological anal-2The declension of such surnames depends on the local tra-dition and sometimes can be identical with the pattern used forcommon nouns.28yser (Piskorski et al, 2004).
For first names, all in-flected forms of the most frequent Polish first namesare stored in a database so a simple gazetteer look-upassociates names with the corresponding base form.We also used a list of ca 30 000 foreign first names(nominative forms).
For last names, we applied sev-eral heuristic rules in order to recognize and producetheir base forms.
First, we identify most commontypes of Polish surnames, e.g., capitalized wordsending in -skiego, -skim, -skiemu or -icza, -iczem, -iczu (typical last name suffixes), and convert them tothe corresponding base forms (i.e., words ending in-ski and -icz, respectively).
In this way, a significantnumber of names can be lemmatized in a brute-forcemanner.For all remaining surnames, more sophisticatedrules have to be applied.
As discussed in sec.
2,these rules have to take into account several piecesof information such as part-of-speech and genderof the (common) word which serves as a surname,but also gender of the first name.
The major prob-lem we encountered while applying these rules isthat the information necessary to trigger the appro-priate rule is often missing.
For example, in sen-tence (1), inferring gender of the surname/first namecould involve a subcategorization frame for the verbpowiadomic?
?inform?, which requires an accusativeNP argument.
In this way we might possibly predictthat the base form of Putina is Putin, as -a is the typi-cal accusative ending of masculine names.
Since thesubcategorization lexicon is not available, such in-stances are either not covered or different heuristicsare employed for guessing the base form.
(1) PowiadomionoinformedwczorajyesterdaywieczoremeveningV.
PutinaV.
Putinaccoaboutataku.attack?Yesterday evening they informed V. Putin about the at-tack.
?Additionally, grammar rules may produce vari-ants of recognized full person names.
For exam-ple, for the full name CEO dr Jan Kowalski the fol-lowing variants can be produced: Kowalski, CEOKowalski, dr Kowalski, etc.
As the grammar rulesalways return the longest match, a shorter form maynot be recognized.
The produced variants are there-fore used in the second pass through the text in orderto identify ?incomplete?
forms.
As no morphologicalgeneration is involved, only base forms can be iden-tified in this way.
The system evaluation indicatesthat 23.8% of the recognized names were identifiedby this partial coreference resolution mechanism.An analysis of incorrectly recognized named en-tities (NEs) revealed that major problems concerned(a) classical ambiguities, such as a proper namevs.
a common word, and (b) person vs. organiza-tion name, caused by a specific word order and astructural ambiguity of phrases containing NEs.
Letus consider the following examples to illustrate theproblems.
(2) DaneDatanomFederalnegofederalgenUrze?duofficegenStatystycznegostatisticalgen?Data of the federal office for statistics?
(3) prezespresidentnomDellaDellgen?president of Dell?
(4) kanclerzchancellornomAustriak?wAustriansgen?chancellor of the Austrians?
(5) ...
powiedzia?saidprezespresidentnomsp??kicompanygenKrukKruknom?.
.
.
said the president of Kruk company / Kruk, the pre-sident of the company?The text fragment Dane Federalnego in (2) is rec-ognized by the grammar as a person name sinceDane is a gazetteer entry for a foreign (English) firstname.
Consequently, Federalnego Urze?du Statys-tycznego could not be recognized as an organizationname.
Potentially, heuristics solving such NE over-lapping collisions could improve the precision.
Sim-ilar techniques have been applied to other languages.In (3) and (4) the names Della ?of Dell?
and Austri-ak?w ?of Austrians?
were erroneously recognized assurnames.
The rule matching a token representinga title followed by a capitalized word, adopted forEnglish person names, is less reliable for Polish dueto declension of proper names and lack of prepo-sitions in genitive constructions.
One solution tothis problem would involve matchingDella and Aus-triak?w with their base forms (Dell and Austriacy,resp.
), which might appear in the immediate con-text.
In this way, the name type could be validated.However, a corpus inspection revealed that quite fre-quently no base form appears in the same document.The last example, (5), illustrates another problem,which is even harder to solve.
The phrase prezes29sp?
?ki Kruk is structurally ambiguous, i.e., it canbe bracketed as [prezes [sp?
?ki Kruk]] or [[prezessp?
?ki] Kruk].
Consequently, the name Kruk mighteither refer to a company name (?.
.
.
said the pre-sident of the Kruk company?)
or to a person name(?.
.
.
said Kruk, the president of the company?).
In-ferring the proper interpretation might not be possi-ble even if we consider the subcategorization frameof the verb powiedziec?
?to say?.3.2 EvaluationFor evaluation of recognition and lemmatization ofperson names, a set of 30 articles on various top-ics (politics, finance, sports, culture and science) hasbeen randomly chosen from Rzeczpospolita (Weiss,2007), a leading Polish newspaper.
The total num-ber of person name occurrences in this document setamounts to 858.
Evaluation of recognition?s preci-sion and recall yielded 88.6% and 82.6%, respec-tively.
Precision of lemmatization of first namesand surnames achieved 92.2% and 75.6%, respec-tively.
For 12.4% of the recognized person namesmore than one output structure was returned.
For in-stance, in case of the person name Marka Belki, thefirst name Marka is interpreted by the gazetteer ei-ther as an accusative form of the male name Marekor as a nominative form of a foreign female nameMarka.
In fact, 10% of the Polish first-name formsin our gazetteer are ambiguous with respect to gen-der.
As for the last name Belki, it is a genitive formof the common Polish noun belka ?beam?, so thebase form can be obtained directly.
Nevertheless,as inflection of proper names differs from that ofcommon nouns, various combinations of the regularnoun Belka and the special proper name form Belkiare possible, which increases ambiguity of the iden-tified form.
All possible lemmatizations are as fol-lows:(6) Marek Belka (masc.
),Marka Belka (fem.
),Marek Belki (masc.
),Marka Belki (fem.
)A good heuristics to reduce such ambiguouslemmatizations is to prioritize rules which refer tomorphological information over those which relysolely on orthography and/or token types.4 Application of String Distance Metricsfor LemmatizationSince knowledge-based lemmatization of PolishNEs is extremely hard, we also explored a possibil-ity of using string distance metrics for matching in-flected person names with their base forms (and theirvariants) in a collection of document, rather thanwithin a single document.
The rest of this section de-scribes our experiments in using different string dis-tance metrics for this task, inspired by the work pre-sented in (Cohen et al, 2003) and (Christen, 2006).The problem can be formally defined as follows.Let A, B and C be three sets of strings over somealphabet ?, with B ?
C. Further, let f : A ?
Bbe a function representing a mapping of inflectedforms (A) into their corresponding base forms (B).Given,A andC (the search space), the task is to con-struct an approximation of f , namely f?
: A ?
C.If f?
(a) = f(a) for a ?
A, we say that f?
returnsthe correct answer for a; otherwise, f?
is said to re-turn an incorrect answer.
For another task, a multi-result experiment, we construct an approximationf?
: A ?
?C , where f?
returns the correct answerfor a if f(a) ?
f?
(a).4.1 String distance metricsIn our experiments, we have explored mainlycharacter-level string metrics3 applied by thedatabase community for record linkage.Our point of departure is the well-known Lev-enshtein edit distance metric specified as the min-imum number of character-level operations (inser-tion, deletion or substitution) required for trans-forming one string into another (Levenshtein, 1965)and bag distance metric (Bartolini et al, 2002)which is a time-efficient approximation of the Lev-enshtein metric.
Next, we have tested the Smith-Waterman (Smith and Waterman, 1981) metric,which is an extension of Levenshtein metric and al-low a variable cost adjustment to edit operations andan alphabet mapping to costs.Another group of string metrics we explored isbased on a comparison of character-level n-grams intwo strings.
The q-gram metric (Ukkonen, 1992) is3Distance (similarity) metrics map a pair of strings s and tto a real number r, where a smaller (larger) value of r indicatesgreater (lower) similarity.30computed by counting the number of q-grams con-tained in both strings.
An extension to q-grams isto add positional information, and to match onlycommon q-grams that occur at a specified distancefrom each other (positional q-grams) (Gravano etal., 2001).
Finally, the skip-gram metric (Keskustaloet al, 2003) is based on the idea that in additionto forming bigrams of adjacent characters, bigramsthat skip characters are considered as well.
Gramclasses are defined that specify what kind of skip-grams are created, e.g.
{0, 1} class means that regu-lar bigrams (0 characters skipped) and bigrams thatskip one character are formed.
We have explored{0, 1}, {0, 2} and {0, 1, 2} gram classes.Taking into account the Polish declensionparadigm, we also added a basic metric based on thelongest common prefix, calculated as follows:CP ?
(s, t) = ((|lcp(s, t)|+ ?
)?/(|s| ?
|t|),where lcp(s, t) denotes the longest common prefixfor s and t. The symbol ?
is a parameter for favoringcertain suffix pairs in s (t).
We have experimentedwith two variants: CP ??
with ?
= 0 and CP ??
,where ?
is set to 1 if s ends in: o, y, a?, e?, and t endsin an a, or 0 otherwise.
The latter setting resultsfrom empirical study of the data and the declensionparadigm.For coping with multi-token strings, we testeda similar metric called longest common substrings(LCS) (Christen, 2006), which recursively finds andremoves the longest common substring in the twostrings compared, up to a specified minimum length.Its value is calculated as the ratio of the sum of allfound longest common substrings to the length ofthe longer string.
We extended LCS by additionalweighting the lengths of the longest common sub-strings.
The main idea is to penalize the longestcommon substrings which do not match the begin-ning of a token in at least one of the comparedstrings.
In such cases, the weight for lcs(s, t) (thelongest common substring for s and t) is computedas follows.
Let ?
denote the maximum number ofnon-whitespace characters which precede the firstoccurrence of lcs(s, t) in s or t. Then, lcs(s, t) isassigned the weight:wlcs(s,t) =|lcs(s, t)|+ ?
?max(?, p)|lcs(s, t)|+ ?where p has been experimentally set to 4.
We referto the ?weighted?
variant of LCS as WLCS.Good results for name-matching tasks (Cohen etal., 2003) have been reported using the Jaro metricand its variant, the Jaro-Winkler (JW ) metric (Win-kler, 1999).
These metrics are based on the num-ber and order of common characters in two com-pared strings.
We have extended the Jaro-Winklermetric to improve the comparison of multi-tokenstrings.
We call this modification JWM and it canbe briefly characterized as follows.
Let J(s, t) de-note the value of the Jaro metric for s and t. Then,let s = s?
.
.
.
sK and t = t?
.
.
.
tL, where si (ti) rep-resent i-th token of s and t respectively, and assume,without loss of generality, L ?
K. JWM(s, t) isdefined as:JWM(s, t) = J(s, t)+?
?boostp(s, t)?(?
?J(s, t))where ?
denotes the common prefix adjustment fac-tor and boostp is calculated as follows:boostp(s, t) =?L??i=?L??
min(|lcp(si, ti)|, p)+min(|lcp(sL, tL..tK)|, p)LThe main idea behind JWM is to boost the Jarosimilarity for strings with the highest number ofagreeing initial characters in the corresponding to-kens in the compared strings.Finally, for multi-token strings, we tested a recur-sive matching pattern, known also as Monge-Elkandistance (Monge and Elkan, 1996).
The intuition be-hind this measure is the assumption that a token ins (strings are treated as sequences of tokens) corre-sponds to a token in t which has the highest num-ber of agreeing characters.
The similarity betweens and t is the mean of these maximum scores.
Twofurther metrics for multi-token strings were investi-gated, namely Sorted-Tokens and Permuted-Tokens.The first one is computed in two steps: (a) first, to-kens forming a full string are sorted alphabetically,and then (b) an arbitrary metric is applied to com-pute the similarity for the ?sorted?
strings.
The lattercompares all possible permutations of tokens form-ing the full strings and returns the calculated maxi-mal similarity value.A detailed description of string metrics used hereis given in (Christen, 2006) and in (Piskorski et al,2007).314.2 Test DataFor the experiments on coreference of person names,we used two resources: (a) a lexicon of the mostfrequent Polish first names (PL-F(IRST)-NAMES)consisting of pairs of an inflected form and the cor-responding base form, and (b) an analogous lexiconof inflected full person names (first name + surname)(PL-FULL-NAMES).4 The latter resource was cre-ated semi-automatically as follows.
We have auto-matically extracted a list of 22485 full person-namecandidates from a corpus of 15724 on-line news ar-ticles from Rzeczpospolita by using PL-F-NAMESlexicon and an additional list of 30000 uninflectedforeign first names.
Subsequently, we have ran-domly selected a subset of about 1900 entries (in-flected forms) from this list.In basic experiments, we simply used the baseforms as the search space.
Moreover, we producedvariants of PL-F-NAMES and PL-FULL-NAMESby adding to the search space base forms of for-eign first names and a complete list of full names ex-tracted from the Rzeczpospolita corpus, respectively.Table 3 gives an overview of our test datasets.Dataset #inflected #base search spacePL-F-NAMES 5941 1457 1457PL-F-NAMES-2 5941 1457 25490PL-FULL-NAMES 1900 1219 1219PL-FULL-NAMES-2 1900 1219 2351PL-FULL-NAMES-3 1900 1219 20000Table 3: Dataset used for the experiments4.3 Evaluation MetricsSince for a given string more than one answer can bereturned, we measured the accuracy in three ways.First, we calculated the accuracy on the assumptionthat a multi-result answer is incorrect and we definedall-answer accuracy (AA) measure which penalizesmulti-result answers.
Second, we measured the ac-curacy of single-result answers (single-result accu-racy (SR)) disregarding the multi-result answers.Finally, we used a weaker measure which treats amulti-result answer as correct if one of the results inthe answer set is correct (relaxed-all-answer accu-racy (RAA)).4Inflected forms which are identical to their correspondingbase form were excluded from the experiments since finding ananswer for such cases is straightforward.Let s denote the number of strings for which a sin-gle result (base form) was returned.
Analogously,m is the number of strings for which more thanone result was returned.
Let sc and mc denote, re-spectively, the number of correct single-result an-swers returned and the number of multi-result an-swers containing at least one correct result.
The ac-curacy metrics are computed as: AA = sc/(s+m),SR = sc/s, and RAA = (sc +mc)/(s+m).4.4 ExperimentsWe started our experiments with the PL-F-NAMEdataset and applied all but the multi-token stringsdistance metrics.
The results of the accuracy eval-uation are given in Table 4.
The first three columnsgive the accuracy figures, whereas the column la-beled AV gives an average number of results re-turned in the answer set.Metrics AA SR RAA AVBag Distance 0.476 0.841 0.876 3.02Levenshtein 0.708 0.971 0.976 2.08Smith-Waterman 0.625 0.763 0.786 3.47Jaro 0.775 0.820 0.826 2.06Jaro-Winkler 0.820 0.831 0.831 2.03q-grams 0.714 0.974 0.981 2.09pos q-grams 0.721 0.976 0.982 2.09skip grams 0.873 0.935 0.936 2.14LCS 0.696 0.971 0.977 12.69WLCS 0.731 0.983 0.986 2.97CP ??
0.829 0.843 0.844 2.11CP ??
0.947 0.956 0.955 2.18Table 4: Results for PL-F-NAMESInterestingly, the simple linguistically-awarecommon prefix-based measure turned out to workbest in the AA category, which is the most relevantone, whereas WLCS metrics is the most accurate incase of single-result answers and the RAA category.Thus, a combination of the two seems to be a rea-sonable solution to further improve the performance(i.e., if WLCS provides a single answer, return thisanswer, otherwise return the answer ofCP ??).
Next,the time-efficient skip grams metrics performed sur-prisingly well in the AA category.
This result wasachieved with {0, 2} gram classes.
Recall that about10% of the inflected first name forms in Polish areambiguous, as they are either a male or a female per-son name, see sec.
2.Clearly, the AA accuracy figures in the experi-ment run on the PL-F-NAME-2 (with a large searchspace) was significantly worse.
However, the SR32accuracy for some of the metrics is still acceptable.The top ranking metrics with respect to SR and AAaccuracy are given in Table 5.
Metrics which returnmore than 5 answers on average were excluded fromthis list.
Also in the case of PL-F-NAME-2 the com-bination of WLCS and CP ??
seems to be the bestchoice.Metrics SR AAWLCS 0.893 0.469CP ??
0.879 0.855pos 2-grams 0.876 0.426skip grams 0.822 0.5672-grams 0.810 0.398LCS 0.768 0.340CP ??
0.668 0.600JW 0.620 0.560Table 5: Top results for PL-F-NAMES-2Finally, we have made experiments for full per-son names, each represented as two tokens.
It isimportant to note that the order of the first nameand the surname in some of the entities in our testdatasets is swapped.
This inaccuracy is introducedby full names where the surname may also functionas a first name.
Nevertheless, the results of the ex-periment on PL-FULL-NAMES given in Table 6 arenearly optimal.
JWM , WLCS, LCS, skip gramsand Smith-Waterman were among the ?best?
metrics.Internal Metrics AA SR RAA AVBag Distance 0.891 0.966 0.966 3.13Smith-Waterman 0,965 0,980 0,975 3,5Levenshtein 0.951 0.978 0.970 4.59Jaro 0.957 0.970 0.964 3.54JW 0.952 0.964 0.958 3.74JWM 0.962 0.974 0.968 3.742-grams 0.957 0.988 0.987 3.915pos 3-grams 0.941 0.974 0.966 4.32skip-grams 0.973 0.991 0.990 5.14LCS 0.971 0.992 0.990 5.7WLCS 0.975 0.993 0.992 6.29Table 6: Results for PL-FULL-NAMESThe Monge-Elkan, Sorted-Tokens and Permuted-Tokens scored in general only slightly better than thebasic metrics.
The best results oscillating around0.97, 0.99, and 0.99 for the three accuracy metricswere obtained using LCS, WLCS, JWM and CP ?metrics as internal metrics.
The highest score wasachieved by applying Sorted-Tokens with JWM with0.976 in AA accuracy.Further, in order to get a better picture, we havecompared the performance of the aforementioned?recursive?
metrics on PL-FULL-NAMES-2, whichhas a larger search space.
The most significant re-sults for the AA accuracy are given in Table 7.
TheJWM metric seems to be the best choice as an in-ternal metric, whereas WLCS, CP ??
and Jaro per-form slightly worse.Internal M. Monge-Elkan Sorted-Tokens Permuted-TokensBag Distance 0.868 0.745 0.745Jaro 0.974 0.961 0.968JWM 0.976 0.976 0.975SmithWaterman 0.902 0.972 0.9673-grams 0.848 0.930 0.911pos 3-grams 0.855 0.928 0.913skip-grams 0.951 0.967 0.961LCS 0.941 0.960 0.951WLCS 0.962 0.967 0.967CP ??
0.969 n.a.
n.a.CP ??
0.974 n.a.
n.a.Table 7: AA accuracy for PL-FULL-NAMES-2In our last experiment we selected the ?best?metrics so far and tested them against PL-FULL-NAMES-3 (largest search space).
The top results fornon-recursive metrics are given in Table 8.
JWMand WLCS turned out to achieve the best scores.Metrics AA SR RAA AVLevenshtein 0.791 0.896 0.897 2.20Smith-Waterman 0.869 0.892 0.889 2.35JW 0.791 0.807 0.802 2.11JWM 0.892 0.900 0.901 2.11skip-grams 0.852 0.906 0.912 2.04LCS 0.827 0.925 0.930 2.48WLCS 0.876 0.955 0.958 2.47Table 8: Results for PL-FULL-NAMES-3The top scores achieved for the recursive metricson PL-FULL-NAMES-3 were somewhat better.
Inparticular, Monge-Elkan performed best with CP ??
(0.937 AA and 0.946 SR) and slightly worse re-sults were obtained with JWM.
Sorted-Tokens scoredbest in AA and SR accuracy with JWM (0.904) andWLCS (0.949), respectively.
Finally, for Permuted-Tokens the identical setting yielded the best results,namely 0.912 and 0.948, respectively.5 Conclusions and PerspectivesFor Slavic languages, rich and idiosyncratic inflec-tion of proper names presents a serious problem forlemmatization.
In this paper we investigated twodifferent techniques for finding base forms of per-son names in Polish.
The first one employs heuris-33tics and linguistic knowledge.
This method doesnot provide optimal results at the moment as nec-essary tools and linguistic resources, e.g., a morpho-logical generator or a subcategorization lexicon, arestill underdeveloped for Polish.
Moreover, contex-tual heuristics do not always find a solution as therequired information might not be present in a sin-gle document.
Therefore, we considered string dis-tance metrics as an alternative approach.
The resultsof applying various measures indicate that for firstnames, simple common prefix (CP?)
metric obtainsthe best results for all-answer accuracy, whereasthe weighted longest common substrings (WLCS)measure provides the best score for the single-resultaccuracy.
Hence, a combination of these two metricsseems the most appropriate knowledge-poor tech-nique for lemmatizing Polish first names.
As for fullnames, our two modifications (WLCS and JWM )of standard distance metrics and CP?
obtain good re-sults as internal metrics for recursive measures andas stand-alone measures.Although the results are encouraging, the pre-sented work should not be considered a final solu-tion.
We plan to experiment with the best scoringmetrics (e.g., for AA and SR) in order to find opti-mal figures.
Additionally, we consider combiningthe two techniques.
For example, string distancemetrics can be used for validation of names foundin the context.
We also envisage applying the samemethods to other types of proper names as well as tolemmatization of specialized terminology.ReferencesI.
Bartolini, P. Ciacca, and M. Patella.
2002.
String matchingwith metric trees using an approximate distance.
In Proceed-ings of SPIRE, LNCS 2476, Lisbon, Portugal.D.
Bikel, S. Miller, R. Schwartz, and R. Weischedel.
1997.Nymble: A High-performance Learning Name-finder.
InProceedings of ANLP-1997, Washington DC, USA.A.
Borthwick.
1999.
AMaximumEntropy Approach to NamedEntity Recognition.
PhD Thesis, Department of ComputerScience, New York University.P.
Christen.
2006.
A Comparison of Personal Name Matching:Techniques and Practical Issues.
Technical report, TR-CS-06-02, Computer Science Laboratory, The Australian Na-tional University, Canberra, Australia.W.
Cohen, P. Ravikumar, and S. Fienberg.
2003.
A compar-ison of string metrics for matching names and records.
InProceedings of the KDD2003.H.
Cunningham, E. Paskaleva, K. Bontcheva, and G. Angelova.2003.
Information extraction for Slavonic languages.
InProceedings of the Workshop IESL, Borovets, Bulgaria.T.
Erjavec and S. D?eroski.
2004.
Machine Learning ofMorphosyntactic Structure: Lemmatising Unknown SloveneWords.
In Journal of Applied Artificial Intelligence, 18(1),pages 17-40.L.
Gravano, P. Ipeirotis, H. Jagadish, S. Koudas, N. Muthukrish-nan, L. Pietarinen, and D. Srivastava.
2001.
Using q-gramsin a DBMS for Approximate String Processing.
IEEE DataEngineering Bulletin, 24(4):28?34.J.
Grzenia.
1998.
S?ownik nazw w?asnych ?
ortografia,wymowa, s?owotw?rstwo i odmiana.
PWN.H.
Keskustalo, A. Pirkola, K. Visala, E. Leppanen, andK.
Jarvelin.
2003.
Non-adjacent digrams improve matchingof cross-lingual spelling variants.
In Proceedings of SPIRE,LNCS 22857, Manaus, Brazil, pages 252?265.V.
Levenshtein.
1965.
Binary Codes for Correcting Deletions,Insertions, and Reversals.
Doklady Akademii Nauk SSSR,163(4):845?848.W.
Li, R. Yangarber, and R. Grishman.
2003.
BootstrappingLearning of Semantic Classes from Positive and NegativeExamples.
In Proceedings of the ICML-2003 Workshop onThe Continuum from Labeled to Unlabeled Data.A.
Monge and C. Elkan.
1996.
The Field Matching Problem:Algorithms and Applications.
In Proceedings of KnowledgeDiscovery and Data Mining 1996, pages 267?270.J.
Piskorski, P. Homola, M. Marciniak, A. Mykowiecka,A.
Przepi?rkowski, and M. Wolin?ski.
2004.
InformationExtraction for Polish Using the Sprout Platform.
Proceed-ings of ISMIS 2004, Zakopane.J.
Piskorski.
2005.
Named-entity Recognition for Polish withSProUT.
In Proceedings of IMTCI 2004, LNCS Vol 3490,Warsaw, Poland.J.
Piskorski and M. Sydow.
2007.
Usability of String DistanceMetrics for Name Matching Tasks in Polish.
In progress.B.
Pouliquen, R. Steinberger, C. Ignat, I. Temnikova, A. Widi-ger, W. Zaghouani and J.
?i?ka.
2005.
Multilingual personname recognition and transliteration.
CORELA - Cognition,Repr?sentation, Langage.
Num?ros sp?ciaux, Le traitementlexicographique des noms propres, ISSN 1638-5748.T.
Smith and M. Waterman.
1981.
Identification of CommonMolecular Subsequences.
Journal of Molecular Biology,147:195?197.E.
Ukkonen.
1992.
Approximate String Matching with q-grams and Maximal Matches.
Theoretical Computer Sci-ence, 92(1):191?211.D.
Weiss.
2007.
Korpus Rzeczpospolitej.
Web document:http://www.cs.put.poznan.pl/dweiss/rzeczpospolitaW.
Winkler.
1999.
The state of record linkage and current re-search problems.
Technical report, U.S. Bureau of the Cen-sus, Washington, DC.34
