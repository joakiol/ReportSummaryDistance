Bilingual Generation of Jobfrom Quasi-ConceptualDavid E. CaldwellTatiana KorelskyCoGenTex, Inc.ted@cogentex.qc.catanya@cogentex.comDescriptionsForms*AbstractThe EXCLASS system (Expert Job Evaluation Assis-tant) is intended to provide intelligent support for jobdescription and classification i  the Canadian PublicService.
The Job Description Module (JDM) ofEXCLASS is used to create conceptual representationsof job descriptions, which are used for job evaluationand bilingual generation of textual job descriptions.The design of these representations was subject o twoopposing constIaints: (1) that they be deep enough toresolve the ambiguities present in textual job descrip-tions, and (2) that they be close enough to surface lin-guistic forms that they can be conveniently manipu-lated by users with little specialized training.
Theclose correspondence of concepts to surface words andphrases, as well as properties of the job descriptionsublanguage, permit a simplified generator design,whereby phrases are prepackaged with a certainamount of linguistic structure, and combined accordingto a small set of mostly language-independent rules.Text planning, consisting mainly of grouping and or-dering of conjoined phrases, is performed manually bythe user, and composition of conceptual forms is sup-ported by a "continuous text feedback" function.1 .
Goa ls  o f  EXCLASSThe EXCLASS system (described on a more generallevel in Korelsky & Caldwell 1993) is intended to pro-vide intelligent support for the process of describing andevaluating jobs in the Canadian Public Service.
The JobDescription Module (JDM) of EXCLASS, developed byCoGenTex for the Canadian Treasury Board, providesresources for the user to compose conceptual representa-tions of job descriptions.
The JDM generates textualjob descriptions in both English and French from theserepresentations; a Job Evaluation Module (JEM) alsoreasons on them to produce aclassification and rating ofa job, according to the government's evolving UniversalClassification Standard.The first phase of the EXCLASS project resulted ina proof-of-concept rototype, based on a sample ofsome 30 job descriptions in the domain of procurementand asset management, in which the JDM and JEM arelinked through a common graphical interface.
The sec-ond phase, concluded in the spring of 1994, involvedR&D in preparation for fielding and site testing of thesystem in a selected government department.EXCLASS is intended to eventually be used bythousands of managers across Canada, thus decreasingreliance on classification experts, while at the sametime increasing the standardization, objectivity andcomparability ofjob classifications across diverse occu-pational and organizational groupings.2.
Functional RequirementsThe principal task of the JDM is to produce an unam-biguous conceptual representation f a job description,which is suitable for (1) automatic reasoning by the jobevaluation component, (2) bilingual text generation, and(3) manipulation by users with little or no training inknowledge representation.
It must also provide varioustools to facilitate such manipulation, and it must dothis on a 386-class PC under Microsoft Windows.In the current standard format, public-service jobdescriptions consist of three basic types of statements,which describe aposition in progressively greater detail:Client Service Results, Key Activities, and Substanti-ating Data.
Substantiating Data is further classified intovarious Factors and Elements, e.g.
Working Condi-tions: Environment, Risk to Health; Skill and Know-ledge: Physical Demands, Communications.
Figure 1shows a sample of the job description format.CLIENT-SERVICE RESULTS?
Procurement of mi l i ta ry  a i rcraft  and a i r f ramesfor the Department of National Defense.KEY ACTIVITIES?
Issuing invi tat ions to tenders and requests forproposals.?
Conduct ing  negot ia t ions  wi th  so le -source  sup-pliers.?
Prepar ing and issuing contracts  wi th in  own au-thority and recommending approval of contractsin excess of own authority.SUBSTANTIATING DATAEnvironment?
The work invo lves  an o f f i ce  env i ronment ,  re-sult ing in frequent use of computers and occa-sional exposure  to noise.
Some travel is re-quired.
* We are grateful to Ehud Reiter for his valuable commentson an earlier version of this paper, which greatlyinfluenced its present form.Figure 1: Sample job description text.Results and Key Activities are expressed inpointform; Results as nominal phrases, and Key Activities asgerunds.
Substantiating Data statements are sometimesmulti-sentential, but tend to follow fairly rigid tem-plates.A comprehensive analysis of user requirements forthe JDM was conducted, uring which it became clearthat users favoured more explicit control over all aspectsof the content of a job description, even if it came at theexpense of convenience of composition.
The idea ofprepackaged templates as a basis for conceptual job de-scriptions-for example, classifications of KeyActivities likely to be associated with department heads,middle management, clerical staff, etc.---met with someresistance, since it might prejudice the outcome of jobevaluation.
Users also expressed a desire for a conve-nient means of adding to the collection of conceptsavailable, in the event hat they did not find what theyneeded for a particular job description.3.
Functional i tyThe EXCLASS JDM comprises two modules: the JobDescription Builder (JDB) and the Job DescriptionGenerator (JDG).
The JDB supports composition andediting of conceptual representations, which take theform of trees of concepts drawn from a structured con-ceptual dictionary.
The JDG produces text from theserepresentations, by combining realization templates as-sociated with each concept.
The next three sections de-scribe the conceptual dictionary, conceptual forms, andthe structure of the generator.3.1 Knowledge RepresentationThe dictionary of concepts used in the JDB to composeconceptual representations comprises everal disjointhierarchies of entities which figure in job descriptions.The current dictionary covers a sample of some 30 jobdescriptions in English and French, although the analy-sis on which it was based encompassed at least twicethat number.In order to determine just what the entities repre-sented in the conceptual dictionary should be, we beganwith the following criteria, which derive from the func-tional requirements:1.
In order to provide a basis for suitable input to theJob Evaluation Module and the Job DescriptionGenerator, concepts hould be free of the ambigui-ties observed in textual job descriptions.
Theseambiguities have three main sources:?
multiple word senses;?
attachment ofdependent phrases;?
scope of conjunction.2.
In order to allow managers, who have little or notraining in knowledge representation, to work withconceptual representations at the most detailedlevel, concepts should introduce as little specializednotation as possible.The first criterion calls for concepts which are ab-stracted from surface linguistic forms, while the secondsays that they should be close to surface forms, sincethat is what managers are accustomed toworking withwhen they write job descriptions.In order to satisfy these conflicting criteria, con-cepts were designed to correspond to surface words orphrases as closely as possible, while remaining free ofambiguities.
Concepts corresponding todifferent sensesof the same word are annotated with distinguishing la-bels---e.g, negotiation \[activity\] (as in negotiating priceand cost elements for multi-phase contracts) vs. negotia-tions \[process\] (as in conducting negotiations with sole-source suppliers).
Concepts corresponding to surfaceforms which take dependent phrases are associated withsemantic roles (see below).
And concepts contain onlyirreducible conjunctions (e.g.
The Banff National Parkand region).With regard to the appropriate granularity of con-cepts, again there were conflicting criteria:3.
Concepts hould be fine-grained enough to permitusers to express the distinctions that are importantto them.4.
Concepts hould be coarse-grained nough that edit-ing of conceptual representations is not moreburdensome than editing text.Again, the approach adopted was to make conceptsjust fine-grained enough to account for collocationalpatterns observed in the corpus (through analysis ofconcordances).The conceptual dictionary is structured using a rep-resentation similar to KL-ONE (Woods & Schmolze,1992).
Concepts are arranged in hierarchies from mostgeneral to most specific, and associated with semanticroles and "structural conditions" on those roles.
For ex-ample, the concept negotiations \[process\] is a child of("a kind of") the concept interactions, and has roles forthe action involved (e.g.
conducting, leading), what isbeing negotiated (e.g.
contracts, agreements), and whois being negotiated with (e.g.
suppliers, foreign gov-ernment representatives).The structural conditions on a concept's roles areexpressed partly in terms of a division of the set of con-cepts into subsets of different types:?
Object concepts (e.g.
resources, systems for securestorage, special inventory counts), which can serveas roots of conceptual forms (see the next section).?
Domain concepts (e.g.
asset management, ware-housing, custodial warehousing), which correspondto occupational groupings.?
Body concepts (e.g.
Canadian Parks Service, indus-try sales representatives, other service providers),which denote types of individuals or corporate nti-ties.I-I?
Location concepts (e.g.
Prairie Region, NationalCapital Region Supply Centre).?
Purpose concepts (e.g.
to ensure adequate service,to ensure that all aspects of contracts have beencompleted).?
Action concepts (e.g.
developing, maintaining, ap-proving).Object concepts form a hierarchy descending fromthe most general concept of service (they are also re-ferred to as "aspects of service").
There are separate hier-archies for domains, bodies, and locations; purposes andactions are not hierarchically structured.
In general, it isobject concepts that have roles, which are filled by con-cepts of appropriate other types.
The structural condi-tions on roles taking values from one of the hierarchieslist a default (most typical) value for the filler, as wellas a most-general possible value.
When values comefrom a non-structured set, such as actions, the structuralconditions consist of a list of possible values.The conceptual dictionary isalso structured accord-ing to occupational domains.
Concepts peculiar to cer-tain domains are marked with features corresponding tothose domains--for example, contracts is a procurementconcept; materiel handling equipment is a warehousingconcept.The "aspects of service" hierarchy is based not juston "kind of" relations, but also "aspect of" relations--for example, multi-phase contracts are a "kind of" con-tracts, whereas operational costs are an "aspect of" oper-ations.
Inheritance of concept roles and attributesthrough "kind of" links is used as the basis of the con-cept acquisition interface (see the last section), althoughit is not used for retrieving concept data.
The exact na-ture and implementation f inheritance on "aspect of"links is a topic for future research.3.2  Conceptua l  FormsIn order to compose and edit representations of job de-scriptions, the user works with conceptual forms.
Aconceptual form is a Fee of concepts, whose arcs corre-spond to semantic roles associated with concepts.Visually, concepts in trees are presented as frames withslots named for semantic roles, into which the user caninsert other concepts.
This was seen as the best way ofgiving users control over the most detailed aspects ofconceptual representations, while keeping their visualpresentation relatively simple.An example of the conceptual form of a KeyActivity is shown in Figure 2.
The MAIN CONCEPTslot of the Key Activity frame takes one or more"aspect of service" concepts as values.
The frame for aResult statement corresponds to the central conceptservice, with slots for NATURE OF SERVICE andCLIENT OF SERVICE.The basic editing operation for constructing concep-tual forms is to highlight a slot, then select a conceptConceptual Form:14&I~CIEPT:~ I ACTIOH FOR NETHOOS:NATURE OF M\[THODS:,r-*,ibu~nACTION FOR TECHNIQUES:I~ECI IN IQUE$:ImlbibulimI - "~- - I I~ '~- - - I I -F~- - I I -+-~-~ I ~ If - ' l - )  I s .
i -d~.
.
lText Preview:.I D evdqlla nd knlda~enllng ddli4sul bm ~ told l~Imiqi~I oK JFigure 2: Example of a conceptual form.to go in that slot.
For slots taking values from hierar-chically-structured subsets of the vocabulary, such asobjects or locations, the user can browse through therelevant hierarchy, subject o the conditions describedearlier (Figure 3).
The concept browser shows a"focused" concept, together with its parents and chil-dren; the user moves up or down by shifting the focusto a parent or child (a Find Concept function is alsoavailable).
When values are from a non-structured subset(e.g.
actions), selection is from a flat list of possiblevalues.~ t  I I c,-.
.
,  r--~,LI ~ ~bovm.v.| ~ IIIFigure 3: The concept browser.Editing of existing conceptual forms is supportedby cut, copy and paste functions, which operate on sub-trees of conceptual forms.
The same operations are de-fined for whole statements, sothat users can move con-ceptual structures of any size within the same job de-scription, or between different ones.A notable feature of conceptual forms is that, con-trary to usual inguistic practice, object concepts (whichin general correspond to grammatical direct objects) arethe roots, while action concepts are the dependents.
Therationale behind this is that it is relatively straightfor-ward to structure objects into a reasonably deep, exhaus-five, and intuitive hierarchy, whereas this would be verydifficult for actions.
The set of actions can be implicitlystructured, however, by constructing lists of actions ap-propriate for use with any given object.
The reason forstructuring sets of concepts is to aid the user in compo-sition, so that s/he only has to choose from a smallnumber of alternative concepts at any one point.
So theimplicit structuring of actions according to whether theycan occur with a given object is only useful if the userselects the object first, and then the actions.Above the level of conceptual forms for individualstatements of various types, there is currently no mean-ingful representation f a job description as a whole,except that the domains listed under NATURE OFSERVICE in Result statements are used to "trim" theconcepts displayed in the browser when composing therest of the job to only those relevant to those domains.How to represent links or enforce consistency betweendifferent statements--in particular between Results/KeyActivities and Substantiating Data--is a topic of ongo-ing research by the developers, and discussion by poten-tial users.3.3 Linguistic RealizationGiven the close correspondence b tween conceptualforms and surface linguistic forms, we decided to re-ex-amine our initial assumption that the Job DescriptionGenerator would be implemented by adaptingCoGenTex's existing text-generation shell.Versions of this generator, based on Meaning-TextTheory (Mel'~alk & Pertsov, 1987), have been used inother applications, including the generation of bilingualweather forecasts (Goldberg et al, to appear) and statis-tical reports (Iordanskaja et al, 1992).
In order to pro-duce text suitable to these applications, the generatorstarts with deep conceptual representations, successivelyderiving deep-syntactic, surface-syntactic, morphologi-cal, and surface representations.
It also incorporates so-phisticated mechanisms for text planning and para-phrase.For several reasons, the existing enerator was con-sidered unsuitable for this application.
The main ratio-nale was that, since concepts already resembled pieces ofsurface text, those pieces hould not be reconstructed bythe generator unless this was necessary to produce textof acceptable quality.
If the words and phrases corre-sponding to concepts could be given just enough lin-guistic structure that a simplified generator could com-bine them more or less directly to produce text, then itwould be a waste of effort to decompose them to thelevel of detail on which the existing enerator operated,only to regenerate aspects of surface form that were al-ready present in concept labels.Another factor favouring a simplified generator de-sign was the decision, following the design of the con-ceptual forms, to include a "continuous text feedback"function in the JDM interface.
Again, since users wereunaccustomed to working with conceptual representa-tions, it would be useful if they could confirm theirchoices on the conceptual level with textual feedbackfrom the JDG.
The JDM's conceptual editor (Figure 2above) incorporates a text preview area, which is up-dated every time a change is made to the conceptualform.
It also has the feature of displaying text even forincomplete conceptual forms.
The existing enerator didnot have the level of real-time performance d manded bythis feature (on a 386-PC platform), or the ability togenerate incomplete phrases.A simplified generator design was facilitated by cer-tain linguistic properties of job descriptions:?
When statements are not simple clauses, they fol-low fairly rigid templates.
All conjunctions exceptand and or can be treated as parts of concepts (e.g.the purpose concept o ensure that all aspects ofcontracts have been completed).?
Referring expressions are always either generic orproper noun phrases (no pronouns or deft-nite/indefinite distinctions).?
There is very little morphology to deal withwthereis no agreement, due to the lack of subjects, and thefact that adjectives and articles can always be treatedas part of the same concept as the noun they mod-ify.Given these facts, all the generator has to do is se-lect different alternatives for realization of concepts insome cases, concatenate phrases, and perform ellipsisresulting from conjunctions.
Text planning is performedmanually by users--they can order clauses in a KeyActivity, or actions for an object, in the same way thatthey order Key Activities in a job description.The generator is in the spirit of a Montague-stylecategorial grammar (Dowty et al, 1981), except hatoperations of function application and composition,rather than operating on semantic objects in parallelwith the concatenation f surface lements, operate ineffect on the surface lements themselves.
In order to il-lustrate its operation, consider the conceptual form inFigure 4, which is realized as Supervising performanceof routine and special assignments toensure adequateservice:key_activityMAIN CONCEPT:activities of othersACTION FOR ACTIVITIES OF OTHERS:supewisingMAIN CONCEPT OF ACTIVITIES OF OTHERS:routine assignmentsACTION FOR ROUTINE ASSIGNMENTS:performingPURPOSE OF PERFORMANCE:ensure adequate servicespecial assignmentsACTION FOR SPECIAL ASSIGNMENTS:performingPURPOSE OF PERFORMANCE:ensure adequate serviceFigure 4: Conceptual form for a complex KeyActivity statementEach concept in the dictionary is associated withone or more realization templates, which are complexexpressions built up from surface words or phrases, cer-a .b.c.d.key_activity --->activities of others ---->supervising (gerundive form) --->routine assignments (gerundive form) --~performing (nominal form) --->ensure adequate servicespecial assignments (gerundive form) --~(MAIN: gerund)(ACTION: gerund)* (MAIN: nominat)"supervising"(ACTION: gerund)* (" routine"*" assignments"),~r((" performance"*(" of"* x))*(PURPOSE:_))" to" , (" ensure" , (" adequate" , 'O service"))(ACTION: gerund)* (" special"* ,w assignments").
.
.
.
, .
.
.
.
, , .
.
.
.
, .
.
.
.
, .
.
.
.
,o, " " * .
.
.
.
.
* .
.
.
.
.
11 .
.
.
.
.
.
?
~x(( performance ( of x)) ( to (ensure (~dequate service ))))(routine asstgnments )superwsmg |2x(( performance ( of x)) ( to (ensure (adequate servtce )))) ( spectal ass,gnments )II .
.
.
.
.
.
.
.
?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
?
.
.
.
.
?
.
.
.
.
.  )
) )1performance* ( of ( routine* ass,gnme ))) ( to ( ensure ( adequate serv,ce )ol ?
?
i v ,  superwsmg( I  .
.
.
.
?
.
.
.
.
* .
.
.
.
.
?
.
.
.
.
.
?
.
.
.
.
?
.
.
.
.
* .
.
.
.
?
.
.
.
.
.  )
) ) J  performance ( of (spectal assignments ) ) ) ( to  ( ensure ( adequate servtce)"supervising"* I (" performance" * ("of"* ( (" routine" & " special")* "assignments")) )* (" to"* ("ensure" *(O' adequate"*"service") ) ) lFigure 5: Steps in the derivation of a Key Activity statementtain operators, and variables corresponding to the con-cept's slots ~.
The relevant English templates for theconcepts in Figure 4 are shown in Figure 5a.Expressions of the form <SLOT:type> specify howthe contents of a slot are to be realized i.e., usingwhich of the available templates.
For example, a KeyActivity frame is realized by realizing the contents of itsMAIN CONCEPT slot as a gerund.
The activities ofothers frame, which essentially represents a KeyActivity embedded within another, is realized by con-catenating the gerundive form of its action with thenominal realization of the embedded frame.
The firststep the generator performs is to instantiate these ex-pressions to the correct forms, and conjoin multiplefillers of a single slot with the & (and) operator, esult-ing in the form in Figure 5b.
The next step is to reducelambda expressions, which gives 5c.
Ellipsis is thenperformed, giving the form in 5d.
Finally, occurrencesof the & operator are lexicalized as either commas orand, as appropriate.The operators used in realization templates, otherthan 2 and &, serve to represent structure which isconsulted by the rules for lambda reduction and ellipsis.Lambda reduction of an expression Lr.
(A)*B gives acopy of A in which all occurrences of x (usually one)are replaced with B.
This is used for a "wrap" effect in1 There are rules in some cases for deriving varianttemplates for a concept from a basic template.
Forexample, the gerundive (basic) template for an objectconcept in general has the form <ACTlON:gerund>* ...; thenominal form is derived from this simply by specifying thenominal form of the action.cases where actions have dependents, aswell as in nom-inalizations--in these cases the dependence of actionson objects in conceptual forms cannot be undone sim-ply by concatenating the action to the left of the object.The lambda notation is also used to specify connectingphrases (usually prepositions) which are associated withthe slots of certain concepts, and introduced by the gen-erator- for example, in realizing the phrase negotiationswith contractors, the preposition with is introduced byconcatenating the connecting-phrase expressiongx(" with"* x) associated with the NEGOTIATIONSWITH WHOM slot to the left of the slot's realization,"contractors".
When slots are empty, the connectingphrase is omitted--this mainly what accounts for thegenerator's ability to produce incomplete phrases (insome cases, conceptual forms with empty slots can pro-duce acceptable phrases).The basic rules for ellipsis are (A*B)&(A*C) =~A*(B&C) and (A*C)&(B*C) ~(A&B)*C.  There areother ules which optimize conjunctions to some degreeby reordering conjuncts, but the overall approach is tolet users control the order manually.
An operator # isused in place of * to block ellipsis, and an operator \handles cases in French where an OR is introduced ur-ing ellipsis, according to the rules (A \ B)& (A k C)A*(B/C) and (A\C)&(B\C)  ~ (A&B)/C (the /operator is lexicalized as "ou").
For example,00 ~w ~t  01 0~ ?
00 0w ?
00 ,  ~ l  ?
g0 (( les # contrats )\(  a #( fourmsseur umque )))&( (" ~s" # "co~,~r) \(" d" # (" ~ '~" '  * " m~:)  ) )is realized as les contrats d fournisseur unique ou ddtapes multiples, and not as les contrats d fournisseurunique et d dtapes multiples or les contrats dfournisseurunique ou dtapes multiples.Grammatical differences between French andEnglish are dealt with by assigning different structures,sometimes using different operators, to the English andFrench templates for a given concept, but there are alsocases where the lexicalization of a concept depends onanother concept in the context--for example, perform-ing special assignments translates as executer les affec-tations spdciales, whereas performing post-contractcleanup translates as assurer le suivi des contrats.
Thesecases are modelled using the MTT notion of lexicalfunctions--in this example, the values in English andFrench of the Operl function ("verb denoting the mosttypical action of the first actant") are performing and ex-ecuter for the concept special assignments/affectationsspdciales, and performing and assurer for the conceptpost-contract leanuplsuivi des contrats.
Lexical func-tions are implemented in the conceptual dictionary as"virtual" concepts, with pointers to actual concepts foreach language.
Users can switch the language in whichconceptual forms are displayed (independently of thelanguage in which text is generated), and when they doso, the appropriate actual concepts are displayed, withno explicit indication of the underlying virtual concept.This means, for example, that a user could copy theconcept assurer from the ACTION slot of suivi des con-trats, and paste it into the ACTION slot of affectationssp~ciales, whereupon its label would change to executer.The generator design described in this section hasseveral advantages for this type of application:?
It takes full advantage of the similarity of conceptsto surface linguistic forms, which was dictated bythe functional requirements.
Phrases are generatedas chunks wherever possible, while still being as-signed enough linguistic structure to produce ade-quate text.?
Given the large volumes of concepts anticipated,maintenance of realization templates will presum-ably be simplified if they do not refer to lexicai en-tries in a main dictionary, and if a constrainedgrammatical formalism isemployed.?
Incomplete phrases can be generated straightfor-wardly, in order to support he text preview func-tion.4.
Research TopicsThe main concern for deployment of EXCLASS on alarge scale is how to deal with the large volumes ofconcepts which will be required.
A concept acquisitioninterface has been designed to support expansion of thedictionary.The acquisition i terface is invoked from the con-cept browser, when the user has determined that he de-sired concept is not already available.
The user selects aconcept from the browser to be the parent of the newconcept in the relevant hierarchy.
The attributes of thenew concept (label, slot types and possible values, real-ization templates) can then be edited, starting with de-fault values.
The defaults are inherited from the parentconcept, on the assumption that the new concept is a"kind of' the parent.
The nature of inheritance through"aspect of' links is a topic for future research.Another topic of research ishow to possibly enrichrepresentations of a job as a whole, as well as of indi-vidual concepts.
The JEM developers are experimentingwith comparisons of job descriptions based on fuzzydistance measures, which in turn are based on the posi-tions of individual concepts in the hierarchy.
Actionconcepts are difficult o compare, since they are cur-rently unstructured.
Adding some sort of structure, suchas ranking the possible actions for a given object, couldfacilitate job comparison, as well as treating linguisticphenomena such as "asymmetric" conjunction(developing and implementing methods vs.*implementing and developing methods).Finally, research is being conducted on different us-age modes for the JDM interface--in particular, an"expert" mode in which the user could enter the text ofsimple (non-conjoined) statements and have it parsed tosome extent (using an elaborated "fred" function) into aconceptual form, rather than performing repetitivepoint-and-click operations.ReferencesDavid Dowry, Robert Wall, and Stanley Peters.Introduction to Montague Semantics.
Dordrecht: Reidel,1981.Eli Golberg, Richard Kittredge, and Norbert Driedger.
Anew approach to the synthesis of weather forecast text.
Toappear in IEEE Expert.
(Special Track on ProcessingNatural Language)L. Iordanskaja, M. Kim, R. Kittredge, B. Lavoie, and A.Polgu~re.
Generation of extended bilingual statisticalreports.
In Proceedings of the 14th InternationalConference on Computational Linguistics (COLING-1992),volume 3, pages 1019-1023, 1992.Tatiana Korelsky and David Caldwell.
Concept-basedcomposition of job descriptions with automatic textgeneration.
I  Proceedings of the Canadian DND CombinedWorkshop in Advanced Technologies, Ottawa, November1993.Igor Mel'~uk and Nikolaj Pertsov.
Surface Syntax ofEnglish: A Formal Model within the Meaning-TextFramework.
Amsterdam: John Benjarnins, 1987.William Woods and James Schmolze.
The KL-ONE family.Computers and Mathematics with Applications, volume23, no.
2-5, pages 133-177, 1992.6
