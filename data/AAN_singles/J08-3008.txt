Arabic Computational Morphology: Knowledge-Basedand Empirical MethodsAbdelhadi Soudi, Antal van den Bosch, and Gu?nter Neumann (editors)(Ecole Nationale de l?Industrie Mine?rale, Morocco; Tilburg University;and Deutches Forschungszentrum fu?r Ku?nstliche Intelligenz)Springer (Text, Speech, and Language Technology series, edited byNancy Ide and Jean Ve?ronis, volume 38), 2007, viii+305 pp; hardbound,ISBN 978-1-4020-6045-8, $159.00Reviewed byGeorge KirazBeth Mardutho: The Syriac InstituteThe past few decades have witnessed an increased interest in Arabic natural languageprocessing, and in particular computational morphology.
In the early 1990s one had tocontend with a number of papers that proposed methodologies to handle the variouscomplexities of Arabic morphology, most of which had little implementation associatedwith them, with the sole notable exception of the works of Beesley, Buckwalter, andothers.1 Today the field has grown, and as this book illustrates, more approaches andimplementations are emerging.The book begins with a preface by Richard Sproat, briefly outlining the earlyhistory of Arabic computational morphology.
The main body of the book is arrangedin four parts.
Part I (Chapters 1?3) consists of three introductory chapters.
Parts II(Chapters 4?7) and III (Chapters 8?11) present various knowledge-based and empiricalapproaches, respectively.
Finally, Part IV (Chapters 12?15) demonstrates how Arabicmorphology is integrated in larger applications, namely, information retrieval (IR),and machine translation (MT).
A three-page index lists some grammatical terms andsystem names.1.
Part I: IntroductionThe first introductory chapter, by the editors, gives an outline of the book, brieflyexplaining the various theoretical frameworks on which the rest of the chapters arebased.
As the book does not contain a chapter on root-and-pattern morphology, theauthors discuss this approach in more detail.The second introductory chapter, by Nizar Habash, Abdelhadi Soudi, and TimothyBuckwalter, introduces the transliteration scheme used in the book (but Chapter 4 doesnot follow it).
The scheme is a one-to-one mapping with Arabic orthographic units(base-line letters and diacritic marks) that is both ?complete and easy-to-read?
(p. 16).Although Semitic scholars will probably take issue with the ?easy-to-read?
part of theclaim, they can become accustomed to it with ease (by Chapter 6 I was able to readwithout having to go back to the tables).
A new edition of the scheme will benefit fromone additional column giving standard Semitic transcriptions, which can be found inany standard work on Semitic grammars.1 For a review of these early works, see chapter 3 of Kiraz 2001.Computational Linguistics Volume 34, Number 3The third and final introductory chapter, by Timothy Buckwalter, gives an ac-count of the issues one encounters when dealing with Arabic morphology computa-tionally.
The chapter covers orthography (with a detailed account of the history ofArabic encoding systems), orthographic variations, tokenization, lexical design, anddialectical issues.2.
Part II: Knowledge-Based MethodsThis part of the book presents four knowledge-based methods for handling morphol-ogy: syllable-based, inheritance-based, lexeme-based, and stem-based.The syllable-based approach by Lynne Cahill (?A syllable-based account of Arabicmorphology?)
describes the Arabic tri-literal verbal system using the DATR formal-ism (www.datr.com).
The authors are confident that their system will scale to bi- andquadriliteral roots, as well as to weak roots, but do not give any examples in DATR toboost the reader?s confidence.
An advantage of this approach is that it does not requireany additional mechanisms to the existing syllable-based approach.The inheritance-based approach by Salah R. Al-Najem (?Inheritance-based ap-proach to Arabic verbal root-and-pattern morphology?)
demonstrates that the Arabicverbal system (both tri- and quadriliteral forms) exhibits a number of generalizations,dependencies, and syncretisms.
He demonstrates how these three features can be im-plemented in DATR.
The generalizations are implemented through direct inheritanceby placing forms that are more general in higher nodes in the network hierarchy.
De-pendencies are implemented in a similar fashion where dependents are placed lower inthe hierarchy and may require multiple inheritance rules.
Syncretisms are implementedby DATR inference rules.
As with the previous chapter, the approach does not requireany mechanisms additional to what already exists.
In both cases, it remains to be seenwhether a complete system can be covered in DATR, what the computational and spacecomplexities would be, and how they would differ from the complexities of earlierfinite-state approaches.The lexeme-based approach by Violetta Cavalli-Sforza and Abdelhadi Soudi (?Atrade-off between multiple operations and multiple stems?)
implements Arabic verbaland nominal forms (including the problematic issue of the broken plural) using theLisp-based MORPHE?
system.
The system is driven by a morphological form hierarchythat ?describes the relationship of all morphological forms to each other,?
and transfor-mational rules that attach to leaf nodes in the hierarchy.The final chapter of this part, ?Grammar?lexis relations in the computational mor-phology of Arabic,?
by Joseph Dichy and Ali Farghaly, is more challenging to readand seems disjointed.
Without reading the abstract, the reader will wonder what theobjective of the chapter is until the very end.
In the words of the volume editors, thechapter ?provides an in-depth discussion of the role of grammar?lexis relations .
.
.Afterpresenting the limits of [previous systems], the authors argue that entries associatedwith a finite set of morphosyntactic w-specifiers can guarantee a complete coverage ofthe data within the boundaries of the word-form?
(p. 8).3.
Part III: Empirical MethodsThe first chapter, ?Learning to identify Semitic roots,?
by Ezra Daya, Dan Roth, andShuly Wintner, embarks on resolving a difficult task, the recognition of roots from460Book Reviewssurface forms using a statistical machine-learning approach.
The authors begin witha Hebrew system and extend it to handle Arabic.
They report a precision of over 80%,which they compare to the average human performance for the same task.The second chapter, ?Automatic processing of modern standard Arabic text?
byMona Diab, Kadri Hacioglu, and Daniel Jurafsky, demonstrates how Arabic texts canbe processed in terms of tokenization, lemmatization, part-of-speech tagging, and basephrase chunking.
To achieve this, the authors employ a support-vector-machine learn-ing approach, and extend its traditional use to tokenization.
The accuracy results theyreport range from 91.6% for base-phrase chunking to 99.1% for clitic tokenization.The third chapter, ?Supervised and unsupervised learning of Arabic morphol-ogy,?
by Alexander Clark, experiments with learning the Arabic broken plural using ageneral-purpose learning algorithm.
The algorithmmakes use of non-deterministic sto-chastic finite-state transducers that perform transductions between two surface forms,inflected and non-inflected.The final chapter in this part, ?Memory-based morphological analysis and part-of-speech tagging of Arabic,?
by Antal van den Bosch, Erwin Marsi, and Abdelhadi Soudi,describes a memory-based learning technique for morphological analysis and part-of-speech tagging.
They report a joint accuracy for both tasks of 58.1%.
They concludethat although memory-based approaches are feasible for morphological analysis, theyare unable to recognize the stems of unknown words.
They note that the approach,however, works well for part-of-speech tagging.4.
Part IV: Integration in Larger ApplicationsThe last part of the book consists of two chapters on IR and two chapters on MT.The first chapter, ?Light stemming for Arabic information retrieval,?
by Leah S.Larkey, Lisa Ballesteros, and Margaret E. Connell, is a preliminary study on lightstemming, where inflectional variants are conflated into one stem.
They argue that lightstemming is adequate for IR purposes.
Their stemmer simply removes common prefixesand suffixes from words after they are normalized by removing their diacritics.The second chapter, ?Adapting morphology for Arabic information retrieval,?
byKareem Darwish and Douglas W. Oard, also describes stemming for IR.
Here, theauthors use an existing morphological analyzer to build root-word pairs.
In the trainingphrase, they align segments of the root with their counterparts in the surface form.The result is used statistically to recognize the stems of new words.
A light stemmerthat removes prefixes and suffixes is also developed, and both modules were tested onLDC data.The third chapter, ?Arabic morphological representations for machine translation,?by Nizar Habash, outlines the issues one faces when dealing with Arabic MT.
Habashfocuses on the morphological representation of Arabic in statistical and rule-based MTsystems.
He evaluates a bidirectional system called Almorgeana where a feature-set(that includes a stem) is used to generate one or more Arabic words, and words areanalyzed to give the same feature-set.
Habash tests this system on a sample text of overone million words in diacritized and undiacritized modes.Finally, the last chapter of the book, ?Arabic morphological generation and itsimpact on the quality of machine translation to Arabic,?
by Ahmed Guessoum andRached Zantout, concentrates on morphological generation of Arabic words for MT.The chapter enumerates a number of common types of errors to be found in Arabic MTsystems, and provides an evaluation of a commercial MT system against this list.461Computational Linguistics Volume 34, Number 35.
SummaryIn conclusion, this collection of essays is essential for any researcher interested in Arabicmorphology and demonstrates how far the field has grown since the early and mid1990s.
Throughout the book, the reader will no doubt come across numerous rule-basedand statistical NLP approaches that may not be familiar.
The authors made sure thatthese approaches are well explained in each chapter, with sufficient references shouldthe reader wish to dig in further.In a collective work on a language whose morphological data is quite complex andby far differs from ?the norm?
we find in Western languages, authors are requiredto give a description of the data at hand, and they all did.
The result is a repetitivedescription of the same data, with some variations depending on the topic of eachchapter.
This could have been avoided by collapsing the description in an introductorychapter, and having the authors reference their work to this common description.
Thiswould also have forced authors to relate their descriptions and results to each other,giving a more unified presentation.
This, however, is a very minor point and should nottake away from the excellence and richness of the individual presentations.ReferencesKiraz, George.
2001, Computational NonlinearMorphology, With Emphasis on SemiticLanguages.
Cambridge University Press,Cambridge, UK.George Kiraz is the founder and director of Beth Mardutho: The Syriac Institute and the presidentof Gorgias Press.
He earned an MSt in Syriac Studies from Oxford University, and an MPhil andPhD from Cambridge University.
He has an extensive list of publications in Syriac studies and isthe author of Computational Nonlinear Morphology, With Emphasis on Semitic Languages (CambridgeUniversity Press, 2001).
Kiraz?s address is Gorgias Press LLC, 180 Centennial Ave., Suite A,Piscataway, NJ 08854, USA; e-mail: gkiraz@gorgiaspress.com.462
