Automatic Linguistic Analysis for Language Teachers:The Case of ZerosMITSUKO YAMURA-TAKEIGraduate School of Information SciencesHiroshima City University3-4-1 Ozuka-higashi, Asaminami-ku,Hiroshima, JAPAN 731-3194yamuram@nlp.its.hiroshima-cu.ac.jpMIHO FUJIWARADepartment of Japanese and ChineseWillamette University900 State Street, Salem,OR.
USA 97301mfujiwar@willamette.eduMAKOTO YOSHIEGraduate School of Information SciencesHiroshima City Universityyoshie@nlp.its.hiroshima-cu.ac.jpTERUAKI AIZAWAFaculty of Information SciencesHiroshima City Universityaizawa@its.hiroshima-cu.ac.jpAbstractThis paper presents the Natural LanguageProcessing-based linguistic analysis tool thatwe have developed for Japanese as a SecondLanguage teachers.
This program, Zero De-tector (ZD), aims to promote effective instruc-tion of zero anaphora, on the basis of a hy-pothesis about ideal conditions for secondlanguage acquisition, by making invisiblezeros visible.
ZD takes Japanese writtennarrative discourse as input and provides thezero-specified texts and their underlyingstructures as output.
We evaluated ZD?sperformance in terms of its zero detectingaccuracy.
We also present an experimentalreport of its validity for practical use.
As aresult, ZD has proven to be pedagogicallyfeasible in terms of its accuracy and its impacton effective instruction.IntroductionNatural Language Processing (NLP) is anemerging technology with a variety of real-worldapplications.
Computer-Assisted LanguageLearning/Teaching (CALL/CALT) is one areathat NLP techniques can contribute to.
Suchtechniques range from indexing and concor-dancing to morphological processing withon-demand dictionary look-ups and syntacticprocessing with diagnostic error analysis, toname a few.
But little work has been done ondiscourse-level phenomena, including anaphora.Zero anaphora or zero pronouns (henceforthzeros) are referential noun phrases (NPs) that arenot overtly expressed in Japanese discourse.These NPs can be omitted if they are recoverablefrom a given context or relevant knowledge.The use of zeros is common in Japanese and thisposes a challenge for Japanese as a Second Lan-guage (JSL) learners for their accurate compre-hension and natural-sounding production ofJapanese discourse with zeros.
Some learnersfail to understand a passage correctly because ofthe difficulty of identifying zeros and/or theirantecedents.
Other learners produce grammati-cally correct but still unnatural-sounding Japa-nese due to overuse or underuse of zeros.Yet, very few textbooks provide systematicinstruction or intensive exercises to overcomethese difficulties with zeros.
Consequentlymany Japanese language teachers rely on theirintuitions when explaining zeros.
Intuition is aconventional tool in teaching one?s native lan-guage, but from a student?s perspective, awell-developed systematic method of instructioncan be more convincing.
Also from a teacher?sstandpoint, such analysis will be helpful in pre-paring teaching materials and evaluating stu-dents?
performance.Analysis of zeros can be divided into threephases: zero identification, zero interpretationand zero production.
This paper focuses on thefirst phase and proposes a method of systemati-cally identifying the presence of zeros in orderthat teachers might provide effective instructionof zeros, based on some pedagogical principlesfrom relevant second language acquisition (SLA)theory.
We regard teachers as primary users ofthe program and aim to help them enhance theirinstruction.
We implemented the program andevaluated its potential benefits for languageteachers.In Sections 1 and 2 we discuss the peda-gogical assumptions from SLA theory that moti-vate our program design, and present the linguis-tic assumptions from which our heuristics weredrawn.
Section 3 provides an overview of oursystem implementation.
In Section 4, we pre-sent the results of evaluation from the viewpointsof both the accuracy and the empirical validity ofthe program.
We conclude with a discussion ofpossible future work.1 Pedagogical AssumptionsThere have been many studies about how peoplelearn foreign languages and what is responsiblefor successful language learning.Recent SLA theory progresses beyondKrashen (e.g., 1982)?s emphasis on automaticprocesses of acquisition.
Empirical researchhas shown that learners?
consciousness-raisingthrough explicit instruction does contribute tosuccessful second language learning (see Norris& Ortega, 2000 for comprehensive review).Chapelle (1998) reviewed seven hypothesesabout ideal SLA conditions that are relevant forCALL program design.
At the top of her list isthat ?the linguistic characteristics of target lan-guage input need to be made salient?
(p. 23).Effective input enhancement, by promptinglearners to notice particular learning items, withhighlighting for example, plays a significant rolein facilitating acquisition.
We conjecture thatthis salience effect can also be realized by mak-ing zeros visible.2 Linguistic AssumptionsJapanese is a head-final language.
A sentenceor a clause is headed by a predicate, which takesa set of arguments and adjuncts.
Predicates inJapanese include verbs, adjectives, nominal ad-jectives and copula, and usually consist of a corepredicate and some auxiliary elements.
Argu-ments are classified into three types: TopicPhrase (TP), headed by a topic marker wa, FocusPhrase (FP), headed by focus particles mo, koso,dake, sae, shika, etc., and Kase Phrase (KP),headed by case particles ga, wo, ni, e, to, yori, de,kara, and made.
We regard adjuncts asnon-particle-headed phrases.We define zeros as unexpressed obligatoryarguments of a core predicate.
What is?obligatory?
is the next question to arise.Obligatoriness is a controversial issue, and thereis no set agreement among linguists on itsdefinition.
Somers (1984) proposed a six-levelscale of valency binding that reflects the degreeof closeness of an element to the predicate.
Thelevels are (i) integral complements, (ii)obligatory complements, (iii) optionalcomplements, (iv) middles, (v) adjuncts and (vi)extraperipherals.
Ishiwata (1999) suggests thatin Japanese group (i) is often treated as part ofidioms and is not omissible, and Japanesenominative ?ga and accusative ?wo fall into thecategory (ii), while dative ?ni belongs to (iii).In light of this, we assume that obligatoryarguments that can be zero-pronominalized arephrases headed by nominative-case particle gaand accusative wo, and ni, excluding dative ni inan indirect object position.3 Zero DetectorZero Detector (henceforth ZD) is an automaticzero identifying tool, which takes Japanese writ-ten narrative texts as input and provides thezero-specified texts and their underlying struc-tures as output.
This aims to draw learners?
andteachers?
attention to zeros, by making theseinvisible elements visible in effectively enhancedformats.3.1 System OverviewZD employs a rule-based approach, with theo-retically sound heuristics.
Our heuristics aredrawn from the linguistic assumptions describedin Section 2.ZD reuses and integrates two existing natu-ral language analysis tools and an electronic dic-tionary, none of which were intended for a lan-guage learning purpose, into its architecture,attempting to make the best possible use of theircapabilities for our purpose.
Morphologicalanalysis is done by ChaSen 2.2.8 (NAIST, Ma-tsumoto, Y. et al, 2001), and dependency struc-ture analysis by CaboCha 0.21 (NAIST, Kudo,K., 2001).
The Goi-Taikei Valency Dictionary(hereafter GTVD; Ikehara et al, 1997) serves asa source for valency pattern search.The flow of the system is illustrated in Fig-ure 1.Clause SplitterMorphological AnalysisClause Splitting(Manual Correction)Revised Split ClausesZero DetectorDependency Structure AnalysisZero Detection ValencyDictionaryZero InsertionOUTPUT(B):Clause Structure FramesOUTPUT(C):Predicate-ArgumentStructures with ZerosOUTPUT(D):Zero-inserted TextMorphological AnalysisOUTPUT(A):Split ClausesINPUT: TextFigure 1: Flow diagram of zero detecting processes3.2 ZD OutputAs shown in Figure 1, ZD produces four differ-ent types of output: (A) split clauses, (B) clausestructure frames, (C) predicate-argument struc-tures with zeros, and (D) zero-inserted texts.We will show how these outputs are structuredusing the example text in Figure 2.komatta   Satsuki-wa     sassokuin trouble  Satsuki-TOP    immediatelygennin-wo   shirabe-sase-ta.cause-ACC  investigate-CAUSATIVE-PAST?Satsuki, who was in trouble, immediately had(someone) investigate its cause.
?Figure 2: An example input textFirst, output (A) provides a text divided intoclauses, each consisting of one and only onepredicate and its arguments.
Some predicatesare simplex, while others are complex, consistingof more than one core predicate (i.e., verb, adjec-tive).
Several complex predicates (e.g., ta-beta-koto-ga-aru ate-experience-subject marker-have, ?have eaten?)
are predefined as simplex toavoid excessive clause splitting.
The clausesare labelled with their clause types: independent(main), dependent (coordinated/subordinated) orembedded (relative/nominal/quoted).
A clauseserves as the basic unit for the zero detectingoperation.
In this study, embedded clauses areexcluded from this operation and are left withintheir superordinate clauses.
An example output(A) is given in Figure 3 (next page).komatta EC(RC)] Satsuki-wa sassokugennin-wo shirabe-sase-mashita.
IC]Figure 3: Split clauses1Once the text is split into clauses, eachclause is analysed for its dependency structureand then converted into its clause structure frame.The noun phrases which depend on the predicateare extracted, and then classified into phrasetypes (TP, FP and KP) according to their accom-panying particles.
An example of this frame,i.e., output (B), is given in Figure 4.Input: komatta Satsuki-wa sassoku gennin-woshirabe-sase-ta.Paragraph#: 2Sentence#: 4Clause#: 5Clause Type: Independent with EC(RC)-----------------------------------------------------[Predicate] : shirabe-sase-ta.Core:     shiraberu   verbAuxiliary:  saseru   verbta   auxiliary verb.Voice: causativeEmpathy:Conjunction:-----------------------------------------------------[Argument] :Topic Phrase:  komatta Satsuki-waTopic-Case:  N1-gaFocus Phrase:  <none>Focus-Case:  <none>Kase Phrase:  gennin-woPre-copula: <none>[Adjunct] :  sassokuFigure 4: A clause structure frameThis frame also includes the result ofvalency checking, as in Figure 5, and zero iden-tifying processes, as in Figure 6, at the bottom.1 Here, we use the acronyms: IC for IndependentClause, EC for Embedded Clause, and RC forRelative Clause.Valency Selected: N1 ga  N2 woValency Obligatory: N1 ga  N2 woValency Changed: N1 ga   N2 wo  N3 niFigure 5: Valency checkingA core predicate is checked against GTVDto search for its syntactic valency pattern.GTVD is a semantic valency dictionary, origi-nally designed for transfer-based Japa-nese-to-English machine translation, so it in-cludes as many valency pattern entries for eachpredicate as are necessary for effective transfer.The entries are ordered according to expectedfrequency of occurrence.
We took the na?veapproach of selecting the first-ranking entry fromthe listing for each core predicate (i.e.,?ValencySelected?
in Figure 5).The next step is to apply the definition of?obligatoriness?
described in Section 2 to refinethe selected valency pattern (?Valency Obliga-tory?
in Figure 5).
If non-ga, wo, or ni cases arewithin the first three case slots of the selectedvalency pattern, they are excluded.
If a ni-casestill remains in the third case slot, it is also de-leted.
These operations leave us two valencypatterns: (i) N1-ga N2-wo, and (ii) N1-ga N2-ni,in most cases.Then, a valency changing operation is donein the case of causatives or passives.
When anauxiliary verb is added to the core predicate inthe causative or passive construction, the verbthen requires three arguments.
In the causativecase, these are a ga-marked causer, a wo-markedobject and a ni-marked causee.
The valencychanging operation adds the boxed valent, N3 ni,in Figure 5 (Valency Changed) because the voiceslot is marked as causative in Figure 4.Valency Selected: N1 ga  N2 woValency Obligatory: N1 ga  N2 woValency Changed: N1 ga  N2 wo  N3 niZero: N3 niFigure 6: Zero identifyingNow that the valency pattern for the givenpredicate is assigned, it is checked against overtarguments listed in the frame.
The valent N2 ismatched with the overt argument gennin-wo andremoved from the zero candidates, as shown inFigure 6.Case-less elements, such as TP and FP, alsoneed to have their canonical case markers re-stored.
This is done by assigning the first re-maining valent to TP and/or FP.
This is basedon the linguistic fact that subjects are more likelyto be topicalized or focused than objects.
In theexample, TP, Satsuki-wa, is assigned ga case.The assigned case slot N1-ga is then matchedwith Satsuki-wa (ga) and is also deleted.Finally, the remaining valent, if any, is as-sumed to be a zero (i.e., N3 ni in Figure 6).Once zeros are identified, ZD decides whereto insert the identified zeros in the original text,by keeping canonical ordering as listed in thevalency pattern.
An example of the predicate-(obligatory) argument structure from Figure 6,with the identified zero, is presented in Figure 7.This is output (C).
Here, the restored casemarking particle is presented in parentheses.
*komatta Satsuki-wa (ga)*gennin-wo*[   ni]*shirabe-sase-ta.Figure 7: Predicate-argument structure with zerosFinally, ZD outputs the original series ofclauses with zeros inserted in the most plausiblepositions, along with adjuncts, output (D), as inFigure 8.komatta Satsuki-wa sassoku gennin-wo [   ni]shirabe-sase-ta.Figure 8: Zero-specified textThese outputs can later be converted intothe form of a slide presentation or hard-copyhandouts, etc., depending on how they are usedby teachers.4 EvaluationThe purpose of the evaluation was to assess thevalidity of ZD output for practical use in a lan-guage learning/teaching setting.
In the follow-ing subsections, we evaluate ZD?s performancein terms of its accuracy and then present an ex-perimental report of its validity for educationaluse.4.1 PerformanceFirst, we compared the ZD output with humanjudgements.
The test corpus consisted of tworeading selections from a JSL textbook and onestudent written narrative monologue, all of whichwere representative samples for lower intermedi-ate level Japanese.
Five subjects (native speak-ers of Japanese and trained natural language re-searchers) served as our human zero detectors.They were asked to intuitively identify missingarguments in each clause.
We used averagehuman performance as a baseline against whichto evaluate ZD output.
Here, zeros detected bythree or more, out of five, subjects were regardedas average human performance.As Table 1 shows, ZD achieved a 73%per-clause matching rate with human output.That number represents the ratio of the numberof exact matches between the two outputs overthe total number of clauses.Table 1: Per-clause matching rates# of clauses # of matchedReading (1) 30 22 (73%)Reading (2) 25 18 (72%)Writing 23 17 (74%)Total 78 57 (73%)A closer examination of each case element(ga, wo, ni) is given in Table 2 (next page).
Thelevel ?matched?
includes both cases where ZDand human detect a zero and cases where neitherdetects it.
The accuracy (89% average) is highenough for the ZD output to be put into practicaluse as a learning aid, without an excessive loadon teachers for post-editing output errors.
Re-leasing teachers from having to spend enormousamount of time on the tedious work of analysingeducational materials is one of the biggest ad-vantages of computerization of linguistic analy-sis.Table 2: Per-case element matching rates?
ga ?
wo ?
niHuman ZD Human ZD HumanZDDetected 35 32 5 4 5 2Not Detected 43 39 73 68 73 63MatchedTotal 78 71 (91%) 78 72 (92%) 78 65 (83%)Under-detected 3 1 3Over-detected 4 5 10NotMatched Total7 (9%)6 (8%)13 (17%)Also, we analysed ?not matched?
cases toimprove future performance.
There were 26cases of both underproduction and overproduc-tion of zeros.
Nearly half of them, 12 out of 26,were caused by our na?ve valency selection algo-rithm, which selects the first entry from theGTVD valency pattern listing for each predicate.Three were caused by our canonical-case-marker-restoring heuristics, which assign a firstavailable case marker from ga and wo in itspreference order.
They sometimes do notfunction properly when accusatives or adjunctsare topicalized (or focused).
These are twomajor areas for future enhancement.
Four caseswere affected by morphological/sysntacticanalyses.
Also, our definition of obligatoryarguments, which excludes dative ?ni, producedthree ?not matched?
cases.
This definition isalso an issue for further consideration.What should be noted here, on the otherhand, is that there were six ZD produced zeroswhich did not match our human zero detectors?decision but whose validity was later confirmedby a JSL teacher who carefully examined theresult from an instructional point of view.
Thisimplies that human-recognized zeros andlinguistically/pedagogically plausible zeros donot always match, and demonstrates the potentialof ZD to fill this gap.4.2 ExperimentIn order to verify the pedagogical effectivenessof ZD, the output files were experimentally usedin a university-level intermediate JSL classroom,through digital presentation.
The aim of thislesson was to familiarize the students with zerosby making these invisible elements visible intexts and presenting their underlying structures.In their post-lesson feedback, the studentsshowed a positive reaction to this analytic in-struction.
They described this approach as ?in-novative?, ?effective?, ?clear?
and ?easy?
forunderstanding zeros, in contrast to their past ?justguessing or being lost?
experiences.The teacher who conducted this experimen-tal lesson also acknowledged the impact of ZDon effective instruction.
She pointed out thefollowing benefits for students:(i) The valency checking segment ofoutput (B) helps students realize thateach predicate has its own valencypattern, and as a consequence, clarifieswhen to use what particles,(ii) the predicate-argument structures withzeros, output (C), help students realizethat locating zeros is not a random op-eration, but a canonical designation,and(iii) the clause-by-clause parallel arrange-ment in output (D) facilitates realizingzero distributions in discourse andtracking down antecedents for eachzero.These include positive side effects that we ini-tially did not foresee.From a teaching point of view, ZD helpsteachers predict the difficulties with zeros thatstudents might encounter, by analysing text inadvance.
This leads to the careful selection ofteaching materials and the well-thought-out crea-tion of reading comprehension questions andtests.
Also, ZD output will be helpful in ex-plaining the illegal use of zeros and particlesfound in students?
writing.Conclusions and Future WorkWe have developed an automatic zero detectingprogram that is intended mainly to serve asteacher support.
The program has proven to bepedagogically feasible in terms of its accuracyand its impact on effective instruction.
Thegreat contribution of ZD is to introduce consis-tency and systematic analysis into an area wherehuman intuitions play a dominant, but not alwaysaccurate and effective, role.ZD is currently a purely syntactic-based toolthat utilizes only surface-level heuristics, ex-cluding any semantic cues.
As our error analy-sis in Section 4 indicates, more accuracy can beachieved in a semantically enhanced version,which in fact is our next project goal.Valency-pattern-selecting (from GTVD) andcanonical-case-marker-restoring (from TP andFP) algorithms are two major areas to whichsemantic information can greatly contribute.Also, ZD has been designed as a teachingaid in a teacher-controlled class instruction mode.To extend its use to a self-study mode, as somestudents suggested, clear guidance and auser-friendly interface will be required to replaceteachers?
explanation.ZD is a part of the CALL program for JSLlearners, Zero Checker, which supports readingcomprehension and writing revision process witha focus on zeros.
Thus, ZD will also serve as apre-processing module for the models of resolv-ing and generating zeros, created within the cen-tering framework (e.g., Grosz et al, 1995).ReferencesChapelle, Carol A.
(1998).
Multimedia CALL:Lessons to be learned from research on instructedSLA.
Language Learning and Technology, vol.2,no.1, pp.22-34.Grosz, B. J., A. K. Joshi and S. Weinstein.
(1995).Centering: A framework for modelling the localcoherence of discourse.
Computational Linguis-tics, 21/2, pp.
203-225.Ikehara, S., M. Miyazaki, S. Shirai, A. Yokoo, H.Nakaiwa, K. Ogura and Y. Hayashi (1997).Goi-Taikei ?
A Japanese Lexicon, 5 volumes,Iwanami Shoten, Tokyo.Krashen, S. (1982).
Principles and Practice inSecond Language Acquisition.
Pergamon, Ox-ford.NAIST, Kudo, K. (2001).
CaboCha 0.21.http://cl.aist-nara.ac.jp/~taku-ku/software/cabocha/NAIST, Matsumoto, Y. et al (2001).
ChaSen 2.2.8.http://chasen.aist-nara.ac.jp/Ishiwata, T. (1999).
Gendai GengoRiron to Kaku,Hituzi Shobo, Tokyo.Norris, J. M. and L. Ortega (2000).
Effectiveness ofL2 instruction: A research synthesis and quantita-tive meta-analysis.
Language Learning 50 (3),pp.417-528.Somers, H. L. (1984).
On the validity of the comple-ment-adjunct distinction in valency grammar.
Lin-guistics 22, pp.
507-53.
