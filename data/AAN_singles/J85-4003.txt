TECHNICAL CORRESPONDENCETHE CONCEPT OF SUPERAUTOMATONA recent review of my book The Logic of Mind in thisjournal refers to the key idea of the book, that of asuperautomaton, as a "Moore machine".
However,none of the central arguments of the book go throughfor Moore Machines.
This note presents a sketch ofthe correct construction.In his review of The Logic of Mind (Nelson 1982) in thisjournal (Vol.
11, no.
1), David Israel correctly identifiesthe idea of superautomaton as the key theoretical tool Iuse in attempting to explicate intentional terms ofpsychology such as take, expectation, and belief.
Howev-er, his characterization f a superautomaton as a varietyof Moore machine (Moore 1956) is very misleading.Inasmuch as the concept is central to the main argumentof the book, I would like to describe it here in enoughdetail to cover the idea I really intended.I specify, but do not offer a design or model of, anexecutive Turing machine T p that (a) comprehends afinite number of finite automata connected in parallel,which it monitors; (b) has access to a stored encodedtable representing the transition functions of eachcomponent automaton T; (c) includes means for decidingwhether a given state of a component automaton canreach a final state.
This complex device T t is a"superautomaton".The way it works is this.
If an input string x to acomponent automaton T includes undefined (vague,degraded, or unclear) symbols u, then when T reach u itceases processing.
T r decides whether there is a string ythat could drive T to a final state.
If not, it rejects x asnot acceptable to T. If there is a string, T' consults thetable of T and determines by random choice a symbol sdefined for T that drives T to a state for which there is astring leading to a final state.
Then the undefinedsymbol u is taken to be s, and the computation of thestring x continues.Given the indicated resources Tr can take ill-defined,fuzzy input to be such as to satisfy expectations of thesystem.
"Expectation" as well as other intentionalconcepts at the perceptual level are all analyzable interms of ordinary logic operations, the indicatedconstruction of T', and standard mathematical machinetheory.
(c) is equivalent to means for solving the halting prob-lem; this entails that the component automata (whichcould be as complex as pushdown automata) must be lessthan full Turing machines, for which the halting problemis recursively unsolvable.
It also entails that the execu-tive part of T' must be, in terms of competence, a two-way tape Turing machine, not a Moore machine.
(Interms of performance, of course, one would be limited inthe real world to Turing machines that are approximatedby brains or digital computers, i.e., by finite sequentialmachines; but this is of little theoretical moment.
)Beyond the specification (a)-(c) and a program-likedescription of the function of T' (Nelson 1976), I do notpretend to know what T p would look like.
By the recur-sion theorem of mathematical logic (Rogers 1967), somesuch thing must exist - i.e., there are self-describingTuring machines.
There are also concrete analogousinstances, i.e., generic codes.I think this kind of idea is significantly relevant tocomputational theory and cognitive science, not just tothe concerns of my book (which is meant to be a philo-sophical argument for the plausibility of computationalisttheories of mind and cognition), but also to the verypervasive current employment of self-reference in cogni-tive science and artificial intelligence.
My version, ofcourse, is not strictly new as it is an adaptation of theinsights of others (Lee 1963, von Neumann 1966), all ofwhich stem from Goedel's work (1931) on the incom-pleteness of arithmetic.R.
J. NelsonDepartment of PhilosophyCase Western Reserve UniversityCleveland, OH 44106REFERENCESGoedel, Kurt 1931 Uber Formal Unentscheidbare Satze der PrineipiaMathematica und Verwandter Systeme I. Monatsheft fur Mathema-tik und Physik 38: 173-198.Lee, C.Y.
1963 A Turing Machine which Prints its own Code Script.In Fox, Jerome, Ed., Proceedings of the Symposium onMathematicalTheory of Automata.
Brooklyn Polytechnic Press, Brooklyn, NewYork: 155-164.Moore, E.F. 1956 Gedanken Experiments on Sequential Machines.
InShannon, Claude E. and McCarthy, John, Eds., Automata Studies.Princeton Press, Princeton, New Jersey: 129-153.Nelson, R.J. 1976 On Mechanical Recognition.
Philosophy of Science43(1): 24-52.Nelson, R.J. 1982 The Logic of Mind.
D. Reidel Publishing Co.,Dordrecht, Holland.Rogers, H. Jr. 1967 Theory of Recursive Functions and EffectiveComputability.
McGraw-Hill Book Company, New York, NewYork.von Neumann, J.
1966 Theory of Self-Reproducing Automata.
(Burks,Arthurs W., Ed,) University of Illinois Press, Urbana, Illinois.Computational Linguistics, Volume 11, Number 4, October-December 1985 243
