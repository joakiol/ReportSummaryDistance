Partial Descriptions and Systemic GrammarChr is  BrewCent re  for Cogn i t ive  ScienceUn ivers i ty  of Ed inburgh2 Bucc leuch  P laceEd inburghU.K.chr i sbr~uk .ac .ed .cogsc iAbst rac tThis paper exarnines the properties of feature-ba~sed partial descriptions built on top of tlalli-day's systemic networks.
We show that the cru-cial operation of consistency checking for suchdescriptions i NP-complete, and therefore prob-ably intractable, but proceed to develop algo-rithms which can sometimes alleviate the un-pleasant consequence s of this intractability.1 In t roduct iontIalliday's system networks \[3\] lay out in dia-grammatic form the interlinked sets of linguisticchoices which a speaker nmst make in order togenerate an utterance.
As such they have formedthe basis of several computer models of natu-ral language generation \[4,11\].ttowever, as Mel-lish \[12\] has pointed out, a network can also beread as encoding a set of background constraintswhich restrict the co- occurrence of descriptivefeatures, and hence as a specification of the wayin which partial descriptions of linguistic objectscan be combined.
Although it is easy to com-bine feature sets, it is not a.lways clear whetherthe resulting combined description can actuallydescribe any well-formed linguistic object.
Thusthe main task we face is that of checking featuresets for consistency.Consider for example the framework given byWinograd for the description of English pro-nouns, which is reproduced in figure 1.
Sup-pose thai; a natural language system has some-how recovered the information that a pronounin a particular position can be treated as boththird (person) and subjective.
At this stagewe could be dealing with either "they", "he","she" or "it".
Were we to combine this under-specified pronoun with the further descriptionfeminine we should know for sure that the pro-noun described is "she" and the number hasto be singular, since the network dictates, ina way which will be explained in detail below,that the choice between feminine, masculine,and neuter is only applicable to third personsingular pronouns.
The network thus providesthe raw material for particular sorts of limitedinference about the behaviour of pronouns.
Wewanted to investigate the mathematical proper-ties of systemic networks in order to better un-derstand the nature of the constraints on featurestructure which they are capaMe of expressing.Both Mellish and Kasper \[7\] provide trans-lations of systemic networks into non-graphicalformMisms: Mellish expresses constraints as ax-ioms within a simple subset of predicate logic,while Kasper uses an extended version'of Func-tional Unification Grammar \[10\].
Unfortunatelythe methods which they then use to check forconsistency are powerful general methods whichmay incur considerable computational cost.We initially hoped to show that systemic net-works constitute a low-power constraint lan-guage which combines the twin goals of linguis-tic credibility and computationM tractability.While the main result we present in this paper isa negative one indicating the unexpected powerof systemic networks, we do go on to present sug-gestions about how networks can be exploited innatural anguage applications.36p Iquestionanimate\[inanimatepersonMdemonstrfirstsecondthirdi leal '{~_~ fat'su bjectiveobjectiverettexivepossessivepossdetfeminine{ m~tsculinesing}}la r \] neuterphtr a,1Figure 1: A pronoun network for English2 What ' s  in a net?Our first task is to provide a precise charact.erisa--tion of the information expressed by ~ systemicnetwork.
We begin by defining a way of labellingsystemic networks, then provide a translationwhich maps labelled networks into collections ofaxioms expressed in the tbrm of' propositionallogic.
This work is a slight retinement of a verysimilar approach used by Mellish.Figure 1 contains examples of each of the tburtypes of syste.m which we need to consider, linkedtogether in such a way as to produce a descrip-tion of the possible \['(3rills of English pronouns.The leftmost system is a choice system ex-pressing the opposition between qucslion~ per-soual and dcmonslral, ive pronotlns.
Withinthese broad classification further distinctions op-erate.
For example queslion pronouns iila~y bea'lt{71?ralC or inani'maiG and m,lst also make achoice between various case'-;.
The system whichexpresses t~he necessity of making i;wo sinmltane--otis choices is indicated wit.h a left.
curly bracket,and is i,l,e and system.
Note that ~here are tworoutes ~,o tile choice of case, one t?om q'ucslionand the other fro,,  personal.
The system whichties these two routes together is called the dis-junctive system.
Finally, the rightmost system isa choice between various grammatica!
genders.This system can only be reached it' a pronoun isboth third and singular.
The system involv-ing the right-hand curly bracket which expressesthis is called the conjunctive system.3 Labe l l lngs  for networksWe now establish technical definitions of twotypes of labelling for systemic networks.3.1 Bas ic  Labe l t ingsA basic labelling is defined to be a partial func-tion from lines to names such that?~ A line receives a name if and only if thereis a choice system to whose right hand sidei~ is directly attached.No two lines carry the same name.Figure l ,~dlows a ba,~dc labelling3"\]plqquestionpersonaldemonstranimatequestion\] ~nanimatequestion personalVquestionpersonalfirstpersonalpersonaldemonstrdemonstrsecondsubjectiveobjectivereflexivepossessivepossdetthird , thirdpersonal ~ - - ~V singularrtemcm~tr \[\[ plur______~L__nearf\[ farfemininemasculineneuterFigure 2: An exhaustively labelled version of Winograd's network3.2 Exhaust ive  labe l l ingsLet ~" be a 1-1 function from lines to names forthese lines.
5 c is an exhaust ive  label l ing of anetwork if and only if the following conditionshold :-1.
That  part of ~" which provides names forlines attached irectly to the right of choicesystems must be a basic labelling..
If 5 c assigns a line name lzh~ to the linewhich is directly attached to the left handside of an and  system, then it must alsoassign that name to the lines which are di-rectly attached to the right hand side of thatsystem..
If )c assigns line names 11,12,... lm to thelines entering a con junct ive  system (wherell is the label for the line appearing at thetop of the system and lm that at the bo ftom), then it must assign the label ll A 12 A?
.. lm to the line which leaves that system4.
If ~" assigns line narnes ll, 12,... l,~ to thelines entering a d is junct ive  system (adopt-ing the same ordering convention as above),then it must assign the label 11 V l~ V ... Irato the line which leaves that system.Figure 2 is an exhaustively labelled version offigure 1.4 Trans lat ing label led net-worksWe use a translation scheme given by Mellish\[12\] to produce a set of logical axioms equiva-lent in meaning to the original network.
Mel-lish's scheme can be applied to all four types ofsystem and the correct results will be produced,but with our labelling scheme only choice sys-tems contribute to the meaning of the network.Each choice system translates into two axioms:an accessibility axiom, expressing tile constraintthat none of the labels to the right of the systemcan be selected unless the entry point of the sys-tem has been reached; and an exclusivity axiomexpressing the fact that these labels are mutuallyexclusive.38va2Figure 3: A network for 3SAT5 Systemic classification isNP-hardIn this section we show that the problem of sys-temic cl~sification is at least as hard as prob-lerns known to be NP-hard.
This is done byconstructing a polynomial time mapping 1~ frominstances of the NP-hard problem called 3SAT tonetworks which can be tricked into solving thisp rob lem for us.
For an introduction to similarlinguistic applications of complexity theory seeBarton et al\[1\].If there were a polynomial time algorithm tbrchecking arbitrary systemic networks, it wouldfollow that 3SAT could be solved by the compo-sition of the mapping that constructs the net-work with the algorithm that cheeks the net-work.
Since this composition is itself a polyno-.mial time algorithm we would then have a poly-nomial time solution fc)r 3SAT, and hence forall other problems of the complexity class AfT ) .Thus the successflfl construction of 1I impliesthat systemic classification is itself NP-hard.5.1.
~_\[~he 3SAT prob lem3SAT is the problem of determining the satisfia-bility of a boolean forrnnla, stated ill con imictivenormal form, in which exactly three va~:iables oc-cur in each clause, of the conj unctioa.
These vari-ables may either be positive or negated, and maybe repeated fl:om clause to clause.
It, is knownthat 3SAT is just as hard as the proble~rl of sat--isfiability for general boolean formulae (Barl, onat al provide a demonst, ration of this fact on pp52-~35 of \[(I).5.2  The  mapp ing  f rom 3SAT in-s tances  to  networksThe mapping II takes a 3SAT instance and pro-duces a network.
Let tile name of the 3SAT in-stance be E and its length NI,;.?
Make a list of the variable names used in E,counting positive and negative occurrencesof a wtriable as tile same.
This can certainlyhe done in time polynomial in Nt~ using astandard sorting algorithm such as mergesort.
Let the name of tile list of variablenames be V and its length Nv.
We use theexample of the very simple expression(x VffVz) A(zV~V~7) (1)?
Construct a network consisting of a largeand  system feeding Nv parallel binarychoice systems.
Each choice system car-ries two labels, one corresponding to a vari-ahle name in V and the other formed bynegating the label on the other branch ofthe system.
The choice of prefix should besuch that all labels on tile resulting networkare unique.
'\]'his part of the process is poly-nomial in the length of V.e For every clause in E, add a teraary dis?junct ive  system linking the lines of the net-work having the label,; corresponding to thethree symbols of the clause.
This part of theprocess involves scanning down the Nv sys-tems of the network once for each clause ofE, and is thereR)re also polynomial in NE.Finally, binary eholee systems are attachedto the outputs of all the d is junct ive  sys-tems introduced in tile last stage.
Thesesystems are labelled with generated labelsdistinct from those already used in the net-work.
'l'his step is clearly also polynomia, lin Nt~', requiring the crealion of a nmnberof choice systems equal t,o the number of'clauses in P;.The network giveu i~ figure 3 is the Oile whichwould be produced l?om t5'.
In order to usethe construcLed network to solve the satisfiabil-ity problem for /';, we check an expression cor-respouding t/) I;he conjnnction of all the threemember (-lause,~; in t~:.
This is lmili by choosing~:,l arbitrary label from each of tim rightmostchoice systems.
'fhe coa itmct, io~ of the:;e la-bels is a consisi:,ent descr~l ,,~on whenever all the"39clauses of E can be satisfied by the same valueassignment.
The choice systems to the left ofthe disjunction express the facts that no vari-able can be simultaneously true and false.
Acorrect checking algorithm will succeed in justthose circumstances where there is at least onevalue assignment for the variables of E whichmakes E come out true.
Systemic lassificationis therefore at least as hard as the other problemsin Alp,and we should be very surprised to findthat it can in general be solved in polynomialtime.6 Checking systemic de-scriptionsAlthough accurate checking of systemic descrip-tions is an NP-hard problem, it is still possibleto devise algorithms which carry out part of theprocess of checking without incurring the cost ofcomplete correctness.
Our algorithm depends ona pre-processing step in which the original net-work is split into two components, each of whichembodies ome but not all of the informationthat was present at the outset.The first component is a simplified version ofthe original network, in which no disjunctive sys-tems are present.
This is achieved by remov-ing all disjunctive systems, then re-attaching anydangling systems to a suitable point to the left ofthe position of the disjunction.
For conveniencein book-keeping we introduce special generatedfeatures which take the place of the disjunctiveexpressions that appear in the labelling of theoriginal network.
Figure 5 shows the result ofpeeling awaythe disjunction in figure 4.The second component of the network consistsof a collection of statements indicating ways inwhich the generated features may be discharged.For the example network we would have had tonote thatgen f eat ~_ cl V c2Taken together the simplified version of the net-work and the statements about generated fen-tures contain all the information eeded.
Thesimplified network is now amenable to deterrnin-istic and efficient checking procedures, includ-ing reductions to term unification as proposedby Mellish.
The efficiency of these techniqueshinges on the removal of disjunctive systems.The second stage of checking involves thesearch for a consistent way of discharging all theala2a2 Vblblb~CI\[ C2Figure 4: A small example networkala2C~genfeat { c2blb2Figure 5: The transformed version of the exam-ple40generated features introduced by the first stage.This is the potentially costly part of the checkingprocess, since separate disjunctions may conspireto produce exponentially many different alter-natives which have to be checl(ed.
It was to beexpected that the process of systemic heckingwould involve an exponential cost somewhere, sothis is no surprise.Even the second stage of checking is cheap un-less two separate conditions hoh:t1..
The description produced by the first stageof checking must involve many generatedfeatures.2.
The generated features must be interdepen-dent, in that the way in which one featureis discharged colmtrains the way in whicholher fiea.tures can be discharged.We can't be sure whether the first condition isgoing to hold until we see the OUtl)ut of thefirst stage, but we ca.n estimate the extent towhich features interact, by inspect, lag the check-ing rules which arise when (he net, work is pard-t.ioned.
Thus, while we can't promise that theuse of systemic networks will ensure tractability!
'or arbitrary grammars, v,'e can help linguists tocatch potential t)roblerns in the formulation oftheir feature system,,~ during grammar develop-ment, and avoid the risk of unexpected combi-natorial explosions during the exploitation of thegrammars in question.Refe : re  aces\[1\] G.Edward Barton, Robert C.13erwick, andEric Sven I{,istad.
Computational Complex-ily a'ad Nalu~al La'/zguage.
MIT Press, 1988.\[2\] Andreas Eisele and aochen l)6rre.
Unifi-cation of Disjunctiw.'
Feature I)escriptionsin Proceedings of the 25t, h Annual Meetingof the Association for Computational l,inoguisi;ics, Stanford University, Stanford, ()A.July G-9, t987.\[3\] M.A.K Halliday.
q'he /brm of!
a func-tional grammar, h: G.R.Krcss, edit.or,llatlidayl:Sysle'm and t"~clioTt i7~ Larzc/~za:\]e,chapter '.2, pages 7-25.
()?ford UniversityPress, t976.\[4\] (:~eo;ge t\[oughton.
73c pvocl'~clio~' of ga~;'-9uoye i~ Dialo9~?c: A co'mp~daZio-nal modelPh D thesi,;, Universit.y of Sussex, 1986.\[5\] Lauri Karttunen.
Features and Values Pro--ceedings of the 25th Annual Meeting of theAssociation for Computational Linguistics,Stantbrd University, StaMbrd, CA, July 2-(5, 1984.\[6\] Robert T. Kasper.
Fea(,ure Structures: ALogical Theory with Application to l,an-guage Analysis PhD thesis, University ofMichigan, 1987.\[7\] l/,obert T. Kasper.
An Experimental Parserfor Systemic Grammars Ill Proceedings ofthe i2th International Conference on Con>putational ,inguistics: COLIN(\] 88, Bu-dapest: August 1988.\[8\] tlobert T.Kaspcr.
A Unification Method for1)isjunctive Feature Descriptions In Pro-ceedings of the 25th Annual Meeting of theAs,;ociation for Computational l,inguistics,Stanford University, Stanford, CA, July 6-9, 1987.\[9\] Robert T.Ka.~per, and William Rounds.
ALogical Semantics For Feature Structur(~sIn Proceedings of the 24th Annual Meetingof the Association t'or Computatiorm.1 Lin--guistics, Columbia University, New York,NY, June 10-13, 1986.\[10\] Martin Kay.
Parsing in flmctional tmiti-cation grammar.
In D.R.
Dowry, L. Kar-tunnen, and A.Zwicky, editors, NaluralLangua,qe Pa','sin9, pages 251 278.
Can>bridge University Press, Cambridge, Eng-land, 1982.\[11\] W.C.Mann and C.Mathiessen.
Nigel : Asystemicgrammar for text generation l/_Benson anda.Greaves Sy.siemic Perspectives on Dis-course, A blex,London,England,1985.\[12\] C.S.
Mellish.
hnplementing sysl,cmic dassi-.fication by unilication.
Comlnda*io~zal law.guistics, 14(11):40 5l, 1988.
Wil~ter.1\[3\] Terry Winograd.
U~,dc~:sla~dz/~ 9 Nol~tra\[La~9~*age.
Academic Press, 1972.4 i
