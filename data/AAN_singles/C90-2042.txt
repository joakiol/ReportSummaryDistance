SOLVING AMBIGUITIES IN THE SEMANTICREPRESENTATION OF TEXTSMarie-Claude LandauIBM France Paris Scientific Center3-5 Place Vend6me 75021 PARIS cedex 01 FRANCEAbstractOne of the issues of Artificial Intelligence isthe transfer of the knowledge conveyed byNatural Language into formalisms that acomputer can interpret.
In the Natural Lan-guage Processing department of the IBMFrance Paris Scientific Center, we are de-veloping and evaluating a system prototypewhose purpose is to build a semantic rep-resentation of written French texts in a rig-orous formal model (the Conceptual Graphmodel, introduced by J.F Sowa \[10\]).The semantic representation of texts maythen be used in various applications, suchas intelligent information retrieval.
The ac-curacy of the semantic representation istherefore crucial in order to obtain valid re-suits in any subsequent applications, in thisarticle we explain how ambiguities relatedto Natural Language may be solved by se-mantic analysis using the Conceptual Graphmodel.Key wordsNatural Language Understanding, Computa-tional Linguistics, Conceptual Graph Model.almost completely solved by the syntac-tic analyzer.?
Struclurat arnbiguities, a consequenceef the multiple possible attachrnents ofthe syntactic components in a sentence.This kind of ambiguity rnay be solved toa large extent by the semantic analyzer.?
Anaphoric ambiguities, that could besolved in part by syntactic analysiswithin a sentence \[3\], but cannot besolved across di f ferent sentences I)e-('ause a syntactic analyzer processeseach sentence independently.
In oursystem, the resolution of anapheric am-biguilies is done uniquely by the se-mantic analyzer.
'+ Ellipses, that could also be solved in partby syntactic analysis.
But an incompletesynlactic analysis may in some cases becomplemenled by the semantic analysis.?
Semantic ambiguities coming frornpolysemous lemmas, that can only besolved at the sen\]antic level (unless apolysemy leads to different syntacticconslructions).It+ this article, we concentrale especially onthe practical solving of the different kinds ofambiguities, showing that these problemsare inter-related and may be solved by unFfled n/ethods.introductionIn the system prototype we have been de-veloping, the analysis of a texl is carried oulin two sleps: first syntaclic and lhen seman-tic \[1\].We assll~lle lhat lhe synlax of a lext conveys.~;orne meaning, but since our syntactic ana-lyzer does nol lake semantics into account,a Iol of ambiguilies remain:Lexical aml)iguities, corning from thefact tllat the sarne word may cer+respondte several lemmas in the syntactic dic-liotla~y.
This kind of ambiguity can beThe Conceptual Graph modelThe Conceplual Graph model is a verypromising unified model, because it gener-alizes many ideas contained in precedingworks on natural language sernantics, suchas Fillmore \[7\], Schank \[9\], Montague \[5\],Wilks \[12\], and Karnp \[8\], for example.For the sake of clarity, we briefly recall herethe Conceptual Graph model introduced byJ.F.
Sowa \[101\].
A Conceptual Graph is anorienled graph macle up of concept nodesrelated by conceptual relation edges.
Thecencepls are represented by boxes, the re-lations by circles.
Example:1 239IGIRL:'Sue'_ G EAT B PPLEThe concepts may have referents whichspecialize them.
A referent can be a con-stant ('Sue') to denote individuals, a variableto denote cross-references, or more com-plex expressions.
Most of the relations arebinary relations (OBJ), some are unary.
Theconcepts are organized in a concept typelattice with a partial ordering relation.
Thetop concept type is ENTITY.
Example:BNTITYECONOMIC....~ NT I TY  M~AHURI~_UNITINTEI~EBT RATE CUI~RENCY TIMF~__U NI'\]\[DOLLAR FRANC MDNTHConceptual Graphs may be combined to-gether using various algorithms, the mostimportant of which are the projection and thejoin algorithms.
They are pattern matchingalgorithms which take the concept types hi-erarchy into account.The projection of one Conceptual Graph intoanother one is a restriction of the first graphto a sub-graph of the second one.
Theprojection also gives the pending edges ofthe second Conceptual Graph in relation tothe result.The join of two Conceptual Graphs forms acommon overlap, while keeping the mostspecialized concept types in the result, andattaches to the common overlap the pendingedges remaining in the two graphs.G:~= ~IRL;'Sue; G DRIVE FASTResult of the projection of G1 into G2:~Y: 'John ~ 6 DRIVE I\] CARResult of the join of G1 and G3:hIRL:'The semantic analyzer: generalmethodThe semantic analyzer produces one ormore Conceptual Graphs for each sentence,including cross-references within a sentenceor between different sentences.Our semantic analyzer is written in theVM/Programming in Logic (VM/PROLOG)programming language \[_11\].
The semanticanalyzer takes as input the annotated syn-tactic tree(s) resulting from the syntacticanalysis.
Applying compositionality rules, itlinks together the Conceptual Graphs corre-sponding to each word or locution of thesentence, according to the indications givenby the syntactic tree(s).The Conceptual Graphs for each word orloc=dion are retrieved from a semantic lexi-con.
The words of the Natural I_anguagernay be coded in a semantic lexicon generalto Natural Language and/or in a semanticlexicon specific to an application.
In ourproject, we have concentrated on developingspecialized semantic lexicons, in order toget fast results on texts dealing with a spe-cific subject (econornics, pharmacology).In cases of polysemy there may be severalentries (hence several Conceptual Graphs)for one word in the semantic lexicon.
If,however, a word is missing in the semanticlexicon, default options are taken.The directed join algorithm as adisambiguation toolThe Conceptual Graphs for words are linkedby an algorithm that we call the directedjoin.
In fact, the directed join is adeterministic version of the join algorithmdescribed by J.F.
Sowa: we force such andsuch concept box in the first graph to bemapped onto such and such concept box inthe second graph, by use of attachrnent pointlabels which lie inside the concept boxes.The join may then be propagated along theedges related to those initial concept boxes.Semantic constraints on the concept lypes,contained in the concept type lattice, makeit possible to rule out invalid polysemouscombinations, and in sorne cases to discardnon-pertinent syntactic analyses.Ill addition, we have implemented a directedjoin management algorithm which allowsthe "best" possible solution to be chosen.Indeed, when two semantic structures mustbe linked together, all the conceptualchoices (corresponding to the different en-tries for each word in the semantic lexicon)240 2are simultaneously taken into account by thedirected join management algori lhm, whichonly keel)s tire solutions leading to a maxi-mum overlap between the two sets of Con-ceplual Graphs (according to the linkconstraints).For example, suppose we have the fol lowingcoding for the verb "passer" ("to go from ...to") in lhe semantic lexicon:VER IB('passer', 1 ) isVERB('passer',2) isFor the sentence "le dollar est pass6 de 6francs ~:l 5 francs", ("The dollar went downfrom 6 hancs to 5 francs") the directed joinalgorithm will enly give solution 2, automat-ically discarding solution 1.SOLUTION 1 isSOLUTION 2 is\[Therefore, the final result is usually not thecombinatorial product of all the entries ofpolysemous words in the semantic lexicon.We thus see thai the direcled join algorithmis a powerful tool which carl helpdisambiguate polyserny.
It also helps fill inthe gaps of incomplete syntactic information,as well as solve anaphors, as we shall ex-plain below.Processing of incomplete syntacticinformationWe prefer to speak here of incomplete syn-taclic iniormation rather than of ellipses, inthat the solving of true ell ipses has not yetbeen clone in our system.In our system, the solving of incornpletesyntactic information deals with missingsubjects of complement clauses (infinitiveverbs, verbal prepositional groups).
Thechoice of the missing subject is made ac-cording to:o the preposi l ion introducing the comple-ment clause (if applicable),?
the subject, object and dative of themain verb (i.e.
the verb to which thecomplement clause is syntactically re-lated),?
in some cases, the adverbial phrases ofthe complement clause.For this processing it is necessary to have aknowledge base about the warbs of the Na-tural Language, along with their possibleprepositional syntactic constructions.
Thisknowledge base is organized into classes ofverbs for which similar syntactic con-structions lead to the same choice for thernissing subject.
Surprisingly enough, wehave found that these classes also corre-spond in French to semantic classes (ne-cessity, motion, perception, accompaniment,intention, delegation of power, etc.).
Our al-gorithm has been written for the French lan-guage and should be partially or totallyrewritten for other Natural Languages.Here is an example of the kind of results weget:"Le directeur demande ~t son employ#; defaire r6..parer le terminal par le serviced'entretien" ("The manager asks his em-ployee to have the terminal  repaired by themaintenance people")Sometimes, the solution is not so straight-forward.
For example, let us consider thesentences:"J' ai entendu jouer les enfants" ("1 heard thechildren playing")"J'ai entendu jouer la musique" ("1 heard themusic playing")In one of these sentences (both in Frenchand in English), lhe noun phrase followingthe infinitive is its subject, in lhe other il is3 241its object.
Yet the structure of the sentencesappears the same.
Only by checking thesemantic constraints with the directed joinalgorithm will the right interpretation begiven.
This is why, in our system, the proc-essing of incomplete syntactic information isdone at the level of semantic analysis ratherthan at the level of syntactic analysis.Processing of anaphorsIn this paragraph we group together thesolving of the following co-reference prob-lems, since the same resolution method isused:Personal pronouns ("he", "them", ...)Demonstrative pronouns ("this one","those ones", ...)Demonstrative determiners ("this per-son", ...)Noun ellipses ("another one", "that of",,.,)Possessive pronouns ("theirs", ...)Possessive determiners ("her coat", ...)The solving of a co-reference problem con-sists in instantiating tile anaphoric elementby assigning to it a concept type and possi-bly a referent which have already been usedin the text.
In some cases, it is also neces-sary to have a look-ahead procedure whichscans the text forwards.Backward search algorithmIn our system, the backward search is doneby scanning a LIFO stack of concepts andreferents.Before starting to build a Conceptual Graphfor the sentence, all the nouns (proper orconln\]on nouns, not preceded by ademonstrative determiner) and anaphors areprocessed in the order in which they appearin the sentence.We assign to each of the nouns a newreferent number (or new set of referents inthe case of polysemy) and we store in a LIFOstack the sentence sequence number, tilelemma, the noun Conceptual Graph(s), itsreferent(s), its gender and number.
Thisprocessing of nouns is done once and for all,several syntactic analyses giving rise to thesame referent number for the same noun atthe same place in the sentence.As for the anaphors, the stack is scannedLIFO and gender and number are checked.The result of this search is a set of possiblesolutions.
In fact, the set of possible sol-utions for an anaphor may be viewed as an"extended polysemy".
For reasons of prag-matism and performance, tile search is lim-ited to a definite number of sentencesupward in the text.
This number isparameterized and may be specified by theuser.When the set of graphs corresponding to ananaphor is linked to its context (e.g.
a pro-noun subject to a verb), the "best" solutionsare chosen by the directed join managementalgorithm, as explained above in the exam-ple of polysemy ("to go from.., to...").Then the solution corresponding to the mostrecent entry in the concept stack is selected,to avoid having too many solutions.
This isdone by way of a projection of the Concep-tual Graph contained in the stack into theresult of the directed join.
However this se-lection of the most recent solution maybacktrack: this is useful if the set of graphsfor the anaphor has to be linked severaltimes.
(This is the case for coordinatedverbs with the same subject, or for infinitiveswith the same subject as the main verb, forexample).
In this case, thanks to the di-rected join management algorithm, the bestsolution of the whole process is chosen.Example:"Le pilote et le garcon sont arrives hier.
IIprojette de piloter I" avion" ("The pilot and theboy came yesterday.
He plans to pilot theplane")Suppose we have the following entries in thesemantic lexicon:garc, on (boy) < PERSON in the latticeavion (plane) < VEHICLE in the latticeVERB('projeter',l) is (to plan)SUBS('pilote',l) is (pilot).VERB('piloter',l) is (to pilot)The result for the first sentence is:The result for the second sentence is:Forward search algorithmIf no solution has been found in the stackwith the backward search algorithm, or if the242 4solutions round have led to a failure in thelinkage to the context, then the forwardsearch algorithm is activated.
This is easysince we already have in the stack the infor-mation concerning all the nouns of the sen-tence.
If the forward search also leads to afailure, our system simply prompts the user.If no answer is given (or if we are in balchmode), the system instantiates the anaphorto the most general concept in the lattice,which is ENTITY.However, it is not always sufficient to acti-vate the torward search algorithm only incases of total failure of the backward searchalgorithm.
In fact, some syntactic con-structions (corresponding to cataphoric re-lations) should autornatically start theforward search algorithm, even though theremight be some solutions given by the back-ward search algorithm.
Such cataphoric re-lations may correspond to set expressionsthat emphasize a word which appears laterin tile sentence (at least, in French): "11marche bien, ce programme" (Literally, "Itworks well, this program" ).
"11" ("it") refersto "progranlmo" ("program").Miscellaneous problems related to~lnaphorstn the case of dernonstrative determiners,Ihe information corresponding 1o the concepttype is already given bythe  noun.
But theremay be set expressions for which the nounlollowing the demonstrative does not corre-spond exactly R) a previous word in the text.I~xarnple: "La hausse du dollar s'estintensifi6e bier ~ Paris.
Cette 6volution aprovoqu./; ..." ("The rise of the dollar sharp-ened yesterday in Paris.
This change caused...") In this case, the search is the stack mustnot be nlade ac('erding to words: instead, aprojection of the Conceptual Graph(s) of thenoun ("change") must be made into 1heConceptilal Graphs of the stack.For noun ell ipses ("another one", "that of"),the thing to do is to search only for a concepttype in the stack, and to assign a newleferent to it.
For example, the sentence:"Le d6ficit de t988 est ~.quivatent ~ celui de1987" ("The deficit of 1988 is equivalent tothat of 1987") gives the following solution:~..,,~_.I{D E F I C I TT$1 ME.
:_ _~In order to solve possessive pronouns("theirs"), concept types have to be follndboth for the possessed entity and for theowner, and the two have to be linked to-gether with an appropriate conceptual re-lation.Example: "Le garc, on a fait ses devoirs et lafille a fait les siens" ("The boy did his home-work and the girl did hers")A difficult problem is plural anaphors, sincethey may correspond te several entries inthe stack (implicit coordination).Example: "L 'homme est arriv6 avec lafemme.
IIs sont all6s d6jeuner" ("The manarrived with the woman.
They went tolunch").In this case, we either search for a non-syntactically coordinated plural antecedent,or for a set of antecedents which have acommon ancestor in the lattice;, favoring el-ements which are already syntactically co-ordinated.
This requires storing informationconcerning syntactic coordination of nounsin the stack.Further to the problem of plural anaphors, itmay happen that an anaphoric element isquantified ("those three persons", "the threeof them", etc.
), tn suchacase ,  and whereverapplicable, the referents must be posted up-wards until the target sum is reached.In addition, in order to prevent the gener-ation of absurd Conceptual Graphs, prag-matic rules based on syntax are applied.
Forthe resolution of a given anaphor, this proc-essing mainly consists in forbidding thestack entries whose syntactic structures inthe sentence are incompatible with the syn-tactic structure of the anaphor \[4\].
(For ex-ample, a possessive determiner cannol referte the possessed entity).The semantic coherence checkingalgorithmWe have seen that the directed join and di-rected join management algorithms are use-ful in solving polysemy, incomplete syntacticinformation and anaphors.
But this is notsufficient, because these problems may beinter-related.
For example, we may have co-ordinated verbs with the same subject, thissubject being polysemous, or- even worse, apronoun.
We may also want to carry the5 243polysemous or pronoun subject of a mainverb over to its infinitive complement.In such cases, we have to check that thesame solution for the subject has been takeneverywhere in the resulting ConceptualGraph.
This is the purpose of the semanticcoherence checking algorithm.
First, it en-sures that different polysemous entries ofone occurrence of a word in the sentence donot appear in the final result for the sen-tence.
Secondly, it checks that the samesolution for a pronoun has been selectedthroughout the processing.
In cases of fail-ure, the backtrack is activated.
The back-track on a pronoun is cut as soon as asatisfactory solution is found.
This semanticcoherence checking algorithnl uses lheprojection algorithm.ConclusionOur prototype is still under development,and we do not claim to have solved all theambiguities which can be found in NaturalLanguage.
However the Conceptual Graphmodel, along with the appropriate algo-rithms, has proven to be useful for the re-solution of ambiguities wtlich occur mostoften in real texts.As far as the treatment of anaphors is con-cerned, we plan to extend it, as follows:?
The search for a referent will be appliedto every proper noun and to every com-mon noun preceded by a definite article,in order to introduce more cohesion inthe representation of the text.
("Mr JohnAkers, manager  of IBM ... Mr  Akers ...John ... the manager").?
But, in order to avoid wrong interpreta-tions, the local context of a noun (i.e.
itsqualifiers) will then be stored in thestack of concepts and referents.
Thisshould also allow the solving of qualifiednoun ellipses ("the red one"), but theproblem of the scope of a local contextthen arises.?
The solving of anaphors referring tostatements is theoretically feasible withthe Conceptual Graph model, by the useof conceptual pointers between PROP-OSITIONS.?
The resolution of anaphors within longquotations, which introduce a contextchange, should take the context changeinto account.Finally, sonle ambiguities may only besolved by the application of rules of commonsense and/or deduction.
A deductive com-ponent has been implemented in our system\[6\] \[2\].
This deductive component, applyingappropriate production rules, should be in-voked either during the text processing, oras post-processing on the set of ConceptualGraphs for a text.References\[11\] A. Berard-Dugourd, J.Fargues, M.C.Landau, Natural Language Analysis UsingConceptual Graphs, International ComputerScience' 88, Hong-Kong, December 19-21,1988.\[2\] A. Berard--Dugourd, J. Fargues, M.C.Landau, J.P. Rogala, Natural Language In-formation Retrieval from French Texts, 3rdWorkshop on Conceptual Graphs sponsoredby AAAI, St-Paul, Minnesota, August 27, 1988\[3\] P. Bosch, Some Good Reasons for Shal-low Pronoun Processing, IBM Conference onNatural Language Processing, Thornwood,NY, October 24-26, 1988\[4\] L. Danlos, G~n6ration automatique detextes en langues naturelles, pp 191-208,Masson, Paris, 1985\[5\] D.R.
Dowry, R.E.
Wall and S. Peters, In-troduction to Montague Semantics, D. ReidelPublishing Company, Dordrecht (Holland),1981.\[6\] J. Fargues & al., Conceptual Graphs forsemantics and knowledge processing, IBMJournal of Research and Development, Vol30, No.
1, January 1986, pp 70-79.\[7\] C.J.
Fillmore, The Case for Case, Uni-versals in Linguistic Theory, E. Bach and R.THarms Eds, Holt, Rinehart & Winston, NewYork, 1968, pp 1-88.\[8\] H. Karnp, Events, Discourse Represent-ations and Temporal References, Langages64, pp 39-64, Larousse Publishing Company,Paris, France, December 1981.\[9\] R.C.
Schank Ed: Conceptual InformationProcessing, North-Holland, Amsterdam,1975.\[10\] J.F.
Sowa, Conceptual Structures.
In-formation Processing in Mind and Machine,Addison Wesley Publishing Company, Read-ing, MA.
1984.\[11\] VMIProgramming in Logic (VMIProlog),IBM PO 5785-ABH, available through IBMbranch offices.\[12\] Y.A.
Wilks, Making preferences moreactive, Artificial Intelligence, Vol 11, 3, 1978,pp 197-224.244 6 ~
