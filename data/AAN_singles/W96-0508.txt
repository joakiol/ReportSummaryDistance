On Lexical Aggregationand OrderingHercules Dalianis 1) and Eduard Hovy 2)1) Department of Computer and Systems SciencesThe Royal Institute of Technology and StockholmUniversity, Electrum 230, S-164 40 Kista,SWEDEN, mob.
ph.
(+46) 70 568 13 59,fax.
(+46) 8 703 90 25, email: hercules@dsv.su.se2) USC/Information Sciences Institute,4676 Admiralty Way, Marina Del Rey,CA 90292-6695, USA, ph.
(+1) 310-822-1511,fax (+1) 310-822-0751, email: hovy@isi.edu1.
Introduction: Lexical AggregationAggregation is the process of removingredundant information during language gen-eration while preserving the information tobe conveyed.
Aggregation is an importantcomponent of text or sentence planning.Without aggregation, automated languagegeneration systems would not be able toproduce f luent text from real-worlddatabases and knowledge bases, sinceinformation is rarely stored in computers informs directly supporting fluent expression.Various types of aggregation (syntactic,lexical, referential) have been identified in\[Hovy88, Cook84, Reinhart91, Horacek92,Dalianis&Hovy93,Wilkinson95,Dalianis95a,95b,96a\].
This paper investigates lexical agg-regation, the process by which a set of itemsis replaced with a single new lexeme thatencompasses the same meaning.
We call theelements that will be aggregated the aggreg-ands and the element (the lexeme) which isthe result of the aggregation the aggregator.Lexical aggregation can be divided intotwo major types, bounded and unbounded.With Bounded Lexical (BL) aggregation theaggregator lexeme covers a closed set ofconcepts and the redundancy is obvious, theaggregated information is recoverable, andthe aggregation process must be carried out.In contrast, Unbounded Lexical (UL) agg-regation is carried out over an open set ofaggregands and consequently the aggregatedinformation is not recoverable and has to belicensed by other factors, such as the hearer'sgoals.
The example in Figure 1 containsboth types of aggregation, where f ight andweek are the unbounded and boundedaggregators espectively.John hit Tom on MondayTom kicked John on TuesdayJohn punched Tom on WednesdayTom hit John on ThursdayJohn hit Tom on FridayTom kicked John on SaturdayJohn punched Tom on SundayunboundediexicalaggregationJohn fought with Tom on Monday,Tuesday,Wednesday,Thursday, Friday, Saturday and Sunday~ boundedlexiealaggregationJohn fought with Tom all weekFigure 1.
Example of Unbounded andBounded lexical aggregation2.
Corpora StudiesDifferent subsets of an informationcollection may give rise to many and variedopportunities for aggregation.
In fact,human-authored text contains aggregationsthroughout, as our corpus study shows.\[Dalianis96b\].In the study we manually investigated intotal 11 texts.
The total amount of words inthe first nine texts were 6.452 words and theratio (syntactic aggregation cases)/(totalwords) was 1.8%.
Including the two last texts,the ratio (syntactic aggregation cases)/(totalsentences) was approximately 33%; i.e., onethird of the sentences included syntacticaggregation.If each aggregation saves approximately sixwords, this will make the text 1.8% aggreg-ations x 6 words = 11% shorter, in somecases up to 20% shorter, than it would havebeen without aggregation.
In addition thetext becomes easier to read.29Aggregated texts sometimes need cue wordse.g., each, together, separately, both, toclarify the aggregation (see Example 1, nextsection).
In the study we calculated the ratiocue words/sentences to be 2.0%, and the ratio(cue words)/(syntactic aggregation) to be15% i.e., every seventh syntactic aggregationcontains a cue word.Some types of aggregation, such asBounded lexical aggregation, refer tobounded sets, and are sometimes ignalledby certain cue words, e.g., except, alL.except,exception(s) is~are, besides, excluding,exclusion, most...but, all...not, all...but.
Anexample of Bounded lexical aggregationwith a cue word is:Retail sales excluding auto dealers haveremained practically unchanged since lastJune, Statistics Canada said.Example taken from Wall Street Journal1992, March 24, 60.862 words, wh ichtogether with Asiatisk Dagbok 1984, 23.860words contains 84.722 words and 5.807sentences in both English and Swedish.
Thetexts was scanned automatically for cuewords and we found the ratio (BoundedLexical aggregation cue words) / (total sent-ences) to be 0.5%, i.e., we have at least 0.5%BL-aggregations, because the ones with noBL-aggregation cue word are not visible oreasy to find when scanning a text automatic-ally.3.
The Problem of OrderingThe following problem is described in\[Dalianis&Hovy93\]: Since aggregation rulesoperate only over adjacent clauses, areordering of the input clauses is essentialfor effective aggregation to occur.
Certaincombinations of input clauses give rise toless redundant text (and hence morereadable text, by the basic assumptionunderlying aggregation) than others.
Butwhat are the optimal ordering(s)?
And doother criteria apply when measuringoptimality?
We call issues relating to theordering of input clauses the clause orderingproblem of aggregation.A second ordering problem rears its head.We call this the rule ordering problem ofaggregation.
Given various kinds of aggreg-ation rules - -  lexical (bounded andunbounded), syntactic (various rules),referential, etc.
- -  does it matter in whichorder the rules are applied?
Depending onhow the lexical aggregation rules are written,it might indeed:a. Mariette bought he Christmas treeb.
Mariette carried it insidec.
Mariette mounted itd.
Ann fetched the decorationse.
Ann hung the decorations on the treea.
b .
c : Syntactic-SP (Subject and Pred-icate) aggregation~ ff.
Mariette bought, carried inside, andmounted the Christmas treed .
e : Syntactic-SP (Subject and Predicate)aggregation~ gg.
Ann fetched and hung the decorationson the treef .
g : Syntactic-PDO (Predicate andDirect Object ) aggregation=~ hh.
Mariette and Ann bought, carriedinside, and mounted, and fetched and hungthe decorations on the Christmas treerespectivelyh : UL-aggregation~ ii.
Mariette and Ann put up the Christmastreeor alternative rule ordering:a .
b .
c : UL-aggregation~ jj.
Mariette installed the Christmas treed.
e : UL-aggregation~ kk.
Ann decorated the Christmas treej .
k : Syntactic-SP-aggregation~ 11.
Mariette and Ann installed anddecorated the Christmas tree respectively1 : no more aggregation possible: newBL-aggregation inference required(Note: the cue word respect ive ly  isintroduced by aggregation to clarify theaggregated text; for more about cue wordssee \[Dalianis96c\]).30In the first case, assuming the existence of aBL-aggregation inference rule that definesput up a Christmas tree as the sequence ofevents (a) to (e), this rule would produce (i).This rule would however not be able toproduce (i) from (1), since (1) containsdifferent actions altogether; here a new rulethat decomposed put  up a Christmas treeinto the actions (j) instal led,  and (k)decorated would be required.
Thus, unlessthe set of BL-aggregation rules were socrafted as to include all subdecompositions,different orderings of the aggregation ruleswill produce different results.Furthermore, although lexical aggregationoperates over lexis, interactions betweensyntactic and lexical aggregation ecessitatethe careful ordering of their respective rules.We performed an experiment to determinethe optimal ordering(s) by applying severalaggregation rules, in all permutations, to theclauses of a text plan.
We implemented threeaggregation rules (the Subject-Predicate andPredicate-Direct-Object (Syntactic) aggreg-ation rules and the Bounded Lexical aggreg-ation rule); also to control the order of inputclauses, we created three ordering rules.
Anordering rule orders the clauses in a text planaccording to the weights of the orderingrule.
The weights correspond to thepredicate, subject, and object of the clause.In order to determine the best order ofapplying aggregation rules and the orderingrules we performed the following experi-ment.
We had a computer program cyclethrough all permutations of rules, andgenerate all possible texts for a given set ofinput clauses, We then analyzed these textsmanually, trying to find a definition of (orfailing that at least heuristics for) optimality.Three aggregation rules and three orderingrules give 6!
= 720 possible permutations(the 720 possible texts were generatedautomatically and came to 166 pages of A4size).
Some example permutation outputs arelisted in \[Dalianis96b\].
To analyse the results(quite a job!
), we had to make qualitativejudgements.
Our findings are as follows.1.
Somewhat surprisingly, text length (i.e.,redundancy of words) is not the bestmeasure of the readability of aggregatedtexts.
Instead, a better measure is internal(structural) coherence, such as is the focusof, for example, Rhetorical Structure Theory\[Mann&Thompson88\].2.
One method to obtain good aggregationresults is to perform pairwise application ofone ordering and one aggregation rule at atime.
A known good ordering rule should beapplied on the input clauses and immediatelyfollowed by its corresponding aggregationrule, which can then be followed by anotherpair, etc.
For example, the ordering 213 isbest associated with the SP aggregation rule;the ordering 132 is best associated with thePDO aggregation rule; and the ordering 132with the Bounded Lexical aggregation rule.3.
With respect to the rule orderingproblem, the best order of aggregation rulesis:?
first: Unbounded Lexical aggregation(this is the most powerful aggregation rule);?
next, the syntactic aggregations (prefer-ably PDO followed by SP );?
next, Bounded Lexical aggregation;?
finally, other sentence planning tasks suchas pronominalization.4.
ConclusionsWhile Unbounded and Bounded lexicalaggregation are related to one another, UL-aggregation operates over an open set andloses some aggregated information, and BL-aggregation operates over a closed set andthe aggregated information is retrievable.
Toselect an appropriate UL-aggregation onemay employ a hearer model.
In both typesof lexical aggregation one must check thatthe aggregands follow each other conse-cutively in time.From the permutat ion experiment forobtaining the optimally aggregated text weconclude that one should not always select31the shortest ext, but the one with the bestdiscourse organization (which we model bythe best RST structure).
We found certainoptimal orderings of text plan clauses beforeaggregation, each ordering associated withaggregation rule.
Regarding the order ofapplying the aggregation rules, we proposefirst to use the most powerful rule (namelyUL aggregation), then the predicate anddirect object (PDO) grouping rule, then thesubject and predicate (SP) grouping rule,and finally BL aggregation.This paper is an extract of a longer workdescribed in \[Dalianis96b\].
A great dealmore work is required on the various aspectsof lexical aggregation.
Thoroughly studiesof text corpora re necessary, as well as morefine-grained definitions of the variousphenomena of lexical aggregation.
Theimplementation f the finding will also beconditional upon the specific choices ofknowledge representation system and infer-ence support.
This study is just a beginningof lot of exciting research !5.
References\[Cook84\] Cook, M.E.
et al 1984.Conveyingimplicit content in narrative summariesProceedings of lOth InternationalConference on Computational Ling-uistics, (COLING-84), pp 5-7, StanfordUniversity.\[Dalianis&Hovy93\] Dalianis, H. and E.H.Hovy.
1993.
Aggregation in NaturalLanguage Generation.
In Proceedingsof the Fourth European Workshop onNatural Language Generation.
Pisa,Italy (67-78).
Also in Trends inNatural Language Generation: anArtificial Intelligence Perspective,Adorni, G. & Zock, M.
(eds.
), SpringerVerlag Lecture Notes in ComputerScience (forthcoming 1996)\[Dalianis95a\] Dalianis, H. 1995.
Aggregation in the NL-generator of theVisual and Natural Language Specific-ation Tool.
In Proceedings of TheSeventh International Conference ofthe European Chapter of the Assoc-iation for Computational Linguistics(EACL-95), Student Session.
Dublin,Ireland (286-290).\[Dalianis95b\] Dalianis, H. 1995.
Aggreg-ation, Formal Specification andNatural Language Generation.
InProceedings of the NLDB'95, FirstInternational Workshop on the Appli-cations of Natural Language to DataBases, (135-149), Versailles, France,June 28-29, 1995.\[Dalianis96a\] Dalianis, H. 1996.
Aggreg-ation as a Subtask of Text andSentence Planning, To appear in theProceedings of Florida AI ResearchSymposium, FLAIRS-96, Key West,Florida, May 20-22, 1996.\[Dalianis96b\] Dalianis, H. 1996.
ConciseNatural Language Generation fromFormal Specifications., Ph.D. dissert-ation, (Teknologie Doktorsavhand-ling), Department of Computer andSystems Sciences, Royal Institute ofTechnology/ Stockholm University,June 1996, Report Series No.
96-008,ISSN 1101-8526, ISRN SU-KTH/DSV/R--96/8--SE.\[Dalianis96c\] Dalianis, H. 1996.
NaturalLanguage Aggregation and Clarific-ation Using Cue Words, Department ofComputer and Systems Sciences, RoyalInstitute of Technology/ StockholmUniversity, Report Series No.
96-007,ISSN 1101-8526, ISRN SU-KTH/DSV/R--96/7--SE.\[Horacek92\] Horacek, H. 1992.
AnIntegrated View of Text Planning.
InAspects of Automated Natural Lang-uage Generation.
Dale, R. et al (eds.
),Springer Verlag Lecture Notes inArtifical Intelligence no 587 (193-227).\[Hovy88\] Hovy, E.H. 1988.
GeneratingNatural Language under PragmaticConstraints.
Hillsdale, NJ: LawrenceErlbaum Associates Publishers.\[Mann&Thompson88\] Mann, W.C. andS.A.
Thompson.
1988.
RhetoricalStructure Theory: Towards a Function-al Theory of Text Organization.
TEXT8(3) (243-281).\[Reinhart91\] Reinhart, T. 1991.
EllipticConjunctions-Non-QuantificationalLF.
In The Chomskyan Turn.
A.Kasher(ed.
), Basil Blackwell (360-384).\[Wilkinson95\] Wilkinson, J.
1995.
Aggre-gation in Natural Language Generati-on: Another Look.
Unpublished M.Sc.thesis, Computer Science Department,University of Waterloo, Canada.32
