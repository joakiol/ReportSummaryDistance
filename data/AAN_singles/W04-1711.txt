CL for CALL in the Primary SchoolKatrina Keogh, Thomas Koller, Monica Ward,Elaine U?
Dhonnchadha , Josef  van GenabithSchool of ComputingDublin City UniversityDublin 9, Ireland{kkeogh, tkoller, mward}@computing.dcu.ie,Elaine.UiDhonnchadha@dcu.ie, josef@computing.dcu.ieAbstractThis paper looks at how ComputationalLinguistics (CL) and Natural Language Processing(NLP) resources can be deployed in Computer-Assisted Language Learning (CALL) materials forprimary school learners.
We draw a broaddistinction between CL and NLP technology andbriefly review the use of CL/NLP in e-Learning ingeneral, how it has been deployed in CALL to dateand specifically in the primary school context.
Weoutline how CL/NLP resources can be used in aproject to teach Irish and German to primaryschool children in Ireland.
This paper focuses onthe use of Finite State morphological analysis(FST) resources for Irish and Part of Speech (POS)taggers for German.1 IntroductionCL/NLP has a lot to offer many disciplines.
Oneparticular area of interest is e-Learning forlanguages or more specifically Computer-AssistedLanguage Learning (CALL).
CALL aims todevelop useful learning tools with the focus on thelearner.
The following sections outline the use ofCL/NLP in CALL (also known as IntelligentComputer-Assisted Language Learning - ICALL)for a particular target audience ?
primary schoolstudents in Ireland.First we review CL/NLP in e-Learning and thecase for using CL/NLP in CALL.
Next we describeICALL and the case for its use in primary school.Section 4 goes into detail on the CL/NLPtechnologies we use for primary school studentslearning Irish and German.2 CL/NLP in e-Learning2.1 CL/NLP ?
A Broad DistinctionTo a first approximation CL/NLP technologiessplit into two broad categories ?
A and B. CategoryA (sometimes referred to as CL proper) typicallyincludes small coverage, proof of concept, oftenhand-crafted, knowledge- or rule-based systems.They are usually used to test a particular linguistictheory, tend to be of limited coverage and are oftenquite brittle.
Example technologies include DCGsand many (but not all) formal grammar-basedparsing and generation systems.Category B (sometimes referred to as NLP)typically includes broad coverage systems wherethe lingware is often (but not always ?
see e.g.FST) automatically induced and processed usingstatistical approaches.
They are usually large scaleengineering applications and very robust.
Exampletechnologies include speech processing, HMMtaggers, probabilistic parsing and FST.This distinction is, of course, nothing more thana useful over-generalisation with an entire andinteresting grey area existing between the twoextremes.
Khader et al (2004), for example, showhow a wide-coverage, robust rule-based system isused in CALL.
In this paper we look at thesuitability of type A and B CL/NLP technologiesfor primary school education, in the context ofIreland in particular.2.2 e-LearningCL is generally not to the fore in e-Learning,although it does have a potentially powerful role toplay.
It can help to enhance the accessibility ofonline teaching material (particularly when thematerial is not in the learner?s L1), in analysinglearner input and the automatic generation ofsimple feedback.
It can also be used withComputer-Mediated Communication (CMC)environments.
However, to date, the use ofCL/NLP in e-Learning in general has not been amain stream focus of either the ComputationalLinguistics or the e-Learning community nor hasthere been much CL/NLP technology transfer intocommercially available and deployed systems.2.3 CALLWithin the domain of e-Learning, the area withthe greatest fit and potential deployment ofCL/NLP resources is that of Computer-AssistedLanguage Learning (CALL).
This paper focuses onasynchronous e-Learning for natural languages inthe primary school context.
CL/NLP resourceslend themselves naturally to the domain oflanguage learning, given that the ?raw material?
inboth fields is language.
However, attempts tosuccessfully marry the two fields have beenlimited.
Schulze (2003) outlines several reasonsfor this.
Computational Linguists are specificallyinterested in the use of the computer in analysing,generating and processing language.
They areinterested in testing out linguistic theories andusing the computer to confirm their hypotheses.Researchers in NLP tend to be interested in wide-coverage, robust engineering approaches.
For themost part, use of their tools for languagelearning/teaching applications is not high on theirresearch agenda.
A review of COLING papers inthe last twenty years reveals that there are very fewpapers that specifically deal with the use ofCL/NLP in language learning.
Furthermore, asSchulze (2003) points out, within the unspokenhierarchy that exists in Computer Sciencedepartments throughout the world, working withCALL is considered less prestigious than say,working on cryptography.
Thus, socio-culturalfactors may have played a part in limiting thenumber of CL/NLP researchers interested inCALL.From a CALL researcher?s or practitioner?spoint of view, attempts to integrate CL/NLPresources into CALL have not been verysuccessful.
Many remain unconvinced about thebenefits of using CL/NLP techniques in CALL andwhether they can be integrated successfully or not.They sometimes expect an ?all-singing, all-dancing?
machine and are disappointed/disillusioned with the results of ICALL research,especially when they incorporate category A CLtechnologies.
CALL practitioners generally comefrom a language teaching background and are oftenmore interested in pedagogy than technology.Some feel that the technical knowledge required tointegrate CL/NLP tools is beyond their scope.They may be wary of claims from CL/NLPdevelopers that a certain CL/NLP resource will be?ideal?
for CALL, especially if they have heardsuch claims before.
Even if they are favourablydisposed to the use of CL/NLP resources in CALL,it is often very difficult to reuse existing resources,as they demand that a certain (often non-standard)format be used for data (see Sections 4.2 and 5.2below).
Also, the interfaces to the resources mayhave assumed a techno-savvy or CL/NLP-savvyuser, which mitigates against their (re)use.In summary, apart from notable exceptions (e.g.Glosser (Dokter & Nerbonne, 1998) and FreeText(2001), for various technical and non-technicalreasons, CL/NLP resources have not beenextensively deployed in main-stream CALLapplications.One of the problems in using CL/NLP resourcesin CALL materials is that the coverage achieved bythe CL/NLP tools has to be broad to be able tohandle a general range of learner language.Furthermore, the resources must be robust aslearner language will contain input that is not well-formed and this can cause problems for some CLresources.
Observations such as these point to typeB NLP technologies as being the better type oftechnologies to employ in the context of languagelearning.
However, below we argue that this is notnecessarily the case.2.4 ICALL in the Primary SchoolIt may be natural to assume that CL/NLPresources customarily lend themselves tointermediate or advanced learners of a language, asthey are more likely to have the linguisticcompetence to understand output generated byCL/NLP resources.
Considering the other end ofthe language-learning spectrum, that of primaryschool learners, it may be perceived that CL/NLPresources could not be so easily deployed withlinguistically less advanced learners - thesestudents will not be interested in viewingconcordances, morphological annotations or parsetrees.However, it can be argued that there are certainnatural circumstances supporting the use of eventype A CL technology in CALL in thisenvironment.
Firstly, in comparison to adults,young learners have limited first language (L1)performance (Brown, 1994).
The target primaryschool students are aged between 7 and 13 years(second to sixth class in the Irish primary schoolsystem).
They tend to produce simpler sentencesand have a smaller range of vocabulary than anadult.
These L1 features have a number ofimplications ?
the students?
L1 knowledge furtherconstrains their emerging L2 production.
Complexlinguistic constructs are less likely to transfer intothe target language.
Effectively, the targetlanguage amounts to a controlled language.Controlled languages are easier suited to type ACL systems and produce better results (Arnold etal., 1994).Secondly, the students?
target language(s) (Irishand German in this context) represent a limiteddomain or sublanguage.
The Irish curriculum isfollowed in primary schools from the age of 4/5.Students can take German (where it?s available)during their senior years of primary school (aged10-13) and the language domain is limited to a 2year beginners?
curriculum.
It is possible toanticipate students?
L2 knowledge, especially sincethey have been following set curricula.
MachineTranslation (MT) can be used to highlight anexample of the success of sublanguages withCL/NLP.
The M?t?o translation system is usedsuccessfully in Canada to translate weatherforecasts bi-directionally between French andEnglish (Hutchins and Somers, 1992).
The?weather?
sublanguage has a small vocabulary anduses a telegraphic style of writing and omits tense.Primary school students?
L1 and L2 performancecharacteristics ?
controlled language and limiteddomain ?
imply that some scalability problems thatare sometimes encountered in certain type A CLresources can be avoided.While primary school learners will not beinterested in viewing concordances or parse trees ?technology can be used but hidden from thelearner, to generate exercises and learner feedbackand to present students with an animation based oninformation computed by the underlying CL/NLPengines embedded (but not visible) in the CALLapplication.
In this way the learner will benefitfrom the technologies but not be confused bylinguistic elements that are beyond their capacityas young learners.3 CL/NLP Resources for CALLIn this paper we look at how CL/NLP resourcescan be integrated into CALL materials in general,as well as specifically for Primary Schools inIreland, with a focus on CALL materials for Irishand German.
This section will briefly outline howa range of CL/NLP resources can be used in thisenvironment, while later sections will focus on theuse of specific CL/NLP resources in more detail.We return to our dichotomy of A- and B-typeCL/NLP systems outlined in Section 2.1.
ICALLsystems have used a range of technologies,including both type A and type B systems.Examples of type A-like systems include small-scale Lexical Functional Grammar (LFG) ?basedrobust parsers to provide error recognition andfeedback (Reuer, 2003) and parsing for viewingsentence structures and error diagnosis(Vandeventer Faltin, 2003).
Examples of type B-like systems include a broad-coverage EnglishLFG-based grammar for grammar checking(Khader et al 2004), the Systran MT system toimprove translation skills (La Torre, 1999) andusing speech recognition for pronunciation training(Menzel et al 2001).It is relatively straightforward to integrate type B(NLP) technology into CALL applications forprimary school learners.
In Section 4 of this paperwe show how broad-coverage FST technology canbe used to morphologically analyse word forms orto generate all inflected forms given a root form.Output from a FST morphology engine is fed intoan interface engine which sends the information inthe appropriate format to an XML/Flashenvironment for animation (Koller, 2004).
Thelearner input can be collated over time into alearner corpus and later analysed by the teacher todetect common errors amongst students.
Part-Of-Speech (POS) taggers can be used to identify theparts of speech in electronic versions of learners?textbooks or a corpus collated around theircurriculum (Section 5).
The output can then beused for a variety of uses, including the automaticgeneration of online exercises (e.g.
hangman) andtogether with the FST morphological engine -automatic dictionary extraction.Mainly due to scalability problems, type A CLtechnologies can be difficult to deploy in generalICALL systems.
However, they can be used in theprimary school context quite effectively.
Asoutlined in Section 2.4, the limited linguisticperformance knowledge of the learners?
L1 andespecially their L2 amounts to a ?controlled?language scenario and type A CL technologies canbe deployed successfully.
Curricula used inprimary schools (in Ireland and elsewhere)represent a limited domain in which type Atechnologies can be highly appropriate.
Smallcoverage DCGs, for example, can be written forthe anticipated L2 learner input and can be used toprovide immediate feedback to the learner.Problems associated with difficulties in buildingwider-coverage grammars do not presentthemselves in this context, as the curriculum islimited.The are many other potential uses of CL/NLP inthis context, but this paper will focus on the FSTand POS tagging examples mentioned above.4 CL/NLP Resources for Irish PrimarySchool CALL4.1 BackgroundIrish is a compulsory subject in schools inIreland.
Students generally tend to have a negativeattitude towards the language, which hinderslearning (Harris & Murtagh, 1999).
Until recently,Irish has been taught using the Audio-Lingualmethod (structural patterns are taught usingrepetitive drills) and it is only since 1999 that anew communicative curriculum (language teachingis structured around topics in terms ofcommunicative situations) has been developed andintegrated.
Currently, there are very few CALLresources available for Irish (Hetherington, 2000)and those that do exist may not be as error-free asone would like, are not specifically aimed atprimary school learners and are therefore not tiedto the Primary School curriculum which hinderstheir integration into the classroom.4.2 A FST-Based Morphological Engine forIrishU?
Dhonnchadha (2002) has developed ananalyser and generator for Irish inflectionalmorphology using Finite-State Transducers(Beesley and Karttunen, 2003).
The FST enginecontains approximately 5,000 lexical stems,generates/recognises over 50,000 unique inflectedsurface forms with a total of almost 400,000morphological descriptions (due to ambiguoussurface forms).
The final FST is the result ofcomposing intermediate transducers, eachencoding a different morphological process.
It isuseful to have a record of the morphologicalprocesses involved in mapping between lexical(i.e.
lemmas and morphological features) andsurface forms.
By including a marker in the surfaceform each time a process is applied, a record of themorphological processes involved can bemaintained and used in other applications.The morphological processes covered include:(i) internal mutations such as lenition, ellipsis,stem internal modification and vocal prefixing; (ii)final mutation, such as vowel harmony withsuffixes (broadening, slenderising andsyncopation); as well as concatenative morphology(prefixing, suffixing).4.3 Technology - FST, Perl, XML and FlashPrimary school learners are not interested inviewing output generated by a FST Morphologyengine.
The challenge in CALL applications(particularly in the primary school scenario) is toexploit underlying technology to presentinformation in a manner appropriate to the learner.To this end we developed animation softwareinterfaced with the output generated by the FSTengine.Animation can enhance the learning process andis especially interesting for younger learners.Flash (2004) is a useful software environment todevelop animations but it is difficult for non-programmers to use and it is often difficult to usethe same animation templates for different inputs.One solution is to use XML (Extensible MarkupLanguage, XML (2004)) files as input into Flash,so that the information displayed is customisableaccording to the information in the input data file.We outline how animated CALL materials weredeveloped for teaching the conjugation of verbs inthe present tense in Irish.Output from the FST engine is fed to a Perlscript which converts the information into aspecified XML format.
The XML files are thenused by Flash to generate the required animation.Figure 1 outlines the software architecture.
Figure2 shows the conjugation of the verb cuir (to put) inthe present tense in Irish.
Figure 3 shows modifiedoutput from the FST engine to enable automaticanimations to be generated (^INF indicatesinflectional infix, ^PP indicates inflectionalpostposition and ^SUF indicates inflectional suffixfor Flash).FSTOutputXMLFilesPerlFlash AnimationFigure 1: Software architecture1S Chuir m?2S Chuir t?3S Chuir s?/s?1P Chuireamar2P Chuir sibh3P Chuir siadFigure 2: Conjugation of "cuir"AFlasT"cu"h"posAanyFSTPastInd  c^INFuir^PPPastInd+1P+Pl  c^INFuir^SUFFigure 3: Sample output from FST enginesection of the XML file that feeds into theh program is shown in Figure 4.<verb>cuir</verb><stem1>c</stem1><stem2>uir</stem2><infix>h</infix><fir_sg><postpos>m?</postpos></fir_sg><sec_s ostpos>t?</ sec_sg><thi_sg><postpos>s?/s?</postpos></thi_sg><fir_ ffix>eamar</suffix pl><sec ostpos </postp ec_pl><thi_ ostpos> </postp i_pl>Fhe anir" isis instpositinimatverbengpl><su_pl><ppl><pigure 4: XML file for Flasimation movie demonstratsplit up into "c" and "uir"erted between "c" and "uon "m?"
is added (Figureions can be developed aand morphological proceine, as all morphological></fir_os></sos></th>sibhsiadg><p postpos></h programes that the stem.
Then the infixir".
Finally the5).utomatically forss known to theoperations arecoded for Flash.
This removes the necessity ofhand-coding animations and reduces the risk ofhuman error.Figure 5: Snapshot sequence fromanimation movie for past tense 1st personsingular for the verb ?cuir?
in Irish(Inn?
means yesterday)The Flash-based interface dynamically displaysXML data.
It reads in XML data at runtime andgenerates an animation.
Learners have full controlover the animation.
They can play, stop, rewindand skip through the animation.
Further interactionis provided via menus to choose specificconjugations (e.g.
number, person and tense.
)The FST-Flash interface is language-independent.
The XML files contain detailedinformation about the different string operationsand the corresponding targets.
The only operationsknown to the Flash interface are insert, delete andreplace.
In this way, the animation of languagedata is abstracted from linguistic terms likeprefixation, suffixation or lenition, thus avoidingthe problem of varying definitions of these terms indifferent languages.
The transformation of the(linguistically tagged) output from the morphologyengine to the XML data necessary for animatedpresentation is done by Perl scripts which can betailored specifically to each combination oflanguage and output of a NLP tool.5 CL/NLP Resources for German PrimarySchool CALL5.1 BackgroundGerman is gradually being integrated into Irishprimary schools through the Modern Languages inPrimary School Initiative (MLPSI), which hasbeen running since 1998.
At present, over 300schools in Ireland are involved in the MLPSI.German is taught during the senior two years ofthe primary school cycle (children aged 10-13).Irish students do not receive any instruction inModern Foreign Languages (MFL) up until thispoint (Irish is not considered a MFL).
Thecommunicative curriculum we developed is basedon a draft curriculum which was developed by theNational Council for Curriculum and Assessment(NCCA) (NCCA, 2004) for teachers participatingin the MLPSI.The integration of type A CL technology intoCALL in this environment is ideal.
The targetlanguage is restricted to a beginner?s curriculum.This represents a restricted domain.
Sentenceconstructions are simple with few structures thatcould present coverage or ambiguity difficulties toCL systems.
Given that the target language isGerman, many CL tools are available for almostevery aspect of language processing.In this section we will focus on the use of type BNLP technology in this environment to meet theneeds of students learning German.
These needshave been researched qualitatively throughobservation during German language lessons in aprimary school in Ireland during the school year2003/4.
Irish students are native English speakers(some are also native Irish speakers) and as suchare unfamiliar with nouns being associated withgenders as in German.
These students also requireextra practise with inflecting verbs correctly.Having being asked ?Wie hei?t du?
?, students willoften respond with ?Ich hei?t ?
?, for example.
Wepresent the use of a POS tagger in the developmentof a tailored corpus which subsequently feeds intothe automatic generation of exercises.5.2 Technology ?
POS tagging, Perl and XMLCALL courseware generally presents users withexercises to complete after they have studied aparticular topic.
These are usually static in contentand are very time consuming to develop over thefull set of language topics.
Students are usuallypresented with a small number of exercises, whichthey will have completed in their entirety andbecome familiar with in a limited space of time.Larger sets of exercises prove beneficial inproviding variety for the student ?
they will not bepresented with the same set of exercises each timethey visit a topic.
In addition, some students willcomplete exercises faster than others.
This putspressure on slower students to keep up and onteachers to provide alternative work to keep fasterstudents occupied.
Larger sets of exercises meantha election can be randomised so thatstu esented with new material each timethelessstusamreqCgenAtheSchThecondivtopfilefileOXMsucextgenonveridecan be practised when a student chooses the correctverb ending or article from a selection or types inthe correct answer.
A version of hangman (a gamewhere students try to guess an unknown word byguessing letters in the word - they only get acertain number of chances for incorrect answersafter which the game ends) can also be played witharticle-noun combinations.
By simply specifyingthe topic section in the curriculum and the type ofgame, exercises are automatically generated.
Eachparticular exercise is randomised so that the user ispresented with a new variant of the problem eachtime they attempt an exercise or game.Multiple-choiceExercisesGap-fillExercisesAnnotatedCorpus in XMLCt exercise sdents are pry visit the courseware; slower students will feelpressure to work at a faster pace when fasterdents complete additional exercises within thee language topic and teachers will not beuired to provide alternative material.L can significantly reduce the time needed toerate sets of exercises around language topics.complete curriculum was developed aroundNCCA guidelines and tagged using Helmutmid?s TreeTagger (see TreeTagger homepage).annotated text file was then automaticallyverted to XML using Perl.
The corpus isided into separate XML files for each languageic.
Additional information - audio and graphicreferences were added manually to each topicat this stage.Figure 6: Generating annotated corpus in XMLnce the annotated corpus has been converted toL it can feed into a number of applicationsh as lesson generation, automatic dictionaryraction, a concordancer and automaticeration of various exercise types.
In focusingthe latter, we are particularly interested in thebs, articles and nouns that the POS taggingntifies.
Inflection and article-noun combinationsFigure 7: Automatic Exercise GenerationPrevious work in automatic exercise generationfrom corpora highlighted a number of potentialpitfalls (Wilson, 1997).
Most importantly, thelanguage in the corpus used is best when thelinguistic quality of the texts is appropriate forlearning a language.
Long and complex sentencesare best avoided.
Our design employs a corpuscollated and tailored around the learner?scurriculum, thus avoiding this pitfall.The benefit of using CL resources here is similarto the situation in the Irish context.
Exercises canbe developed automatically for any verb or nounphrase within the curriculum and provide varietyfor the user.
This removes the nec  hand-coding each exercise and reduces th  humanerror.POSTagger6 ConclusionIt is difficult to integrate CLCALL, especially as thesegenerally designed with a CALHowever, there are environmebe successfully integrated, espimaginative and useful way.
Tnot have to be particularlycomplex - what is importappropriately deployed.This paper outlined how twobe used in the development ofprimary schools.
It is novel inemploy CL/NLP technologiesespecially when they are begiCompleteurriculumPerlPerlAnnotatedCorpus in XML(individuallanguage topics)Hangman GameAdditional info.
?graphics, audio files /NLresoL auntseciahereantNLCALthefornneessity ofe risk ofP resources intources are notdience in mind.where they canlly if used in antechnology doesvolutionary oris that it isP resources canL resources forICALL world toyoung learners,rs in learning alanguage.
We outlined how the output of a FSTengine can feed into the generation of Flashanimations for Irish verb conjugations.
We showedhow a POS tagger can be used to annotate acurriculum to produce a corpus which can in turnbe used to automatically generate exercises.
Bothof these initial modules will be comprehensivelydeployed and evaluated in the classroom during thecoming school year (Sept. 2004-June 2005).
Futuremodules will include type A CL technology likeDCGs and will take advantage of the controlledlanguages and limited domains which exist in theprimary school environment.
Each module of theoverall system is being developed so thatconcurrent evaluation can be carried out.This paper highlighted the point that eventhough neither of these NLP resources wasdeveloped with CALL applications in mind, whencombined with relatively straightforwardprogramming and interface techniques, they can beused fruitfully in a CALL environment.7 AcknowledgementsThis research has been funded by SFI BasicResearch Grant SC/02/298 and IRCSET EmbarkInitiative Grant RS/2002/441-2.ReferencesD.
Arnold, L. Balkan, S. Meijer, R. L. Humphreysand L. Sadler.
1994.
Machine Translation - AnIntroductory Guide NCC Blackwell Ltd.,London, USA.K.
R. Beesley and L. Karttunen.
2003.
Finite-StateMorphology.
Series: (CSLI-SCL) Center for theStudy of Language and Information.H.
D. Brown.
1994.
Principles of LanguageLearning and Teaching.
Prentice-Hall Inc,London, Sydney, Toronto, Mexico, New Delhi.D.
Dokter and J. Nerbonne.
1998.
A Session withGlosser-Rug.
In ?Language Teaching andLanguage Technology?
S. Jager, J. Nerbonne,and A. van Essen, ed., pages 88-94, Swets &Zeitlinger, Lisse.Flash.
2004.
Available at:http://www.macromedia.com/software/flash/[Accessed 10 April 2004]FreeText.
2001.
FreeText Homepage.
Availableat: http://www.latl.unige.ch/freetext/ [Accessed10 April 2004]D. Hetherington.
2000.
Computer Resources forthe Teaching of Irish at Primary and SecondaryLevels.
Language Centre NUI Maynooth,Ireland.J.
Harris and L. Murtagh.
1999.
Teaching andLearning Irish in Primary School.
ITE, Dublin.W.
J. Hutchins and H. L. Somers.
1992.
AnIntroduction to Machine Translation.
AcademicPress, London.R.
Khader, T. Holloway King and M. Butt.
2004.Deep CALL grammars: The LFG-OTexperiment.
DGfS 26.Jahrestagung, Mainz,Germany.T.
Koller.
2004.
Creating user-friendly, highlyadaptable and flexible language learningenvironments via Flash, XML, Perl and PHP.Presentation at the EuroCALL SIG-LP workshop"Innovative Technologies and Their DidacticApplication", Vienna, September 2004.M.
D. La Torre.
1999.
A web-based resource toimprove translation skills.
ReCALL, 11(3): 41-49.W.
Menzel, D. Herron, R. Morton, D. Pezzotta, P.Bonaventura, and P. Howarth.
2001.
Interactivepronunciation training.
ReCALL, 13(1): 67-78.NCCA.
2004.
National Council for CurriculumAssessment (NCCA) Homepage.
Available at:http://www.ncca.ie/j/index2.php?name=currinfo[Accessed: 10 April 2004]V. Reuer.
2003.
Error Recognition and Feedbackwith Lexical Functional Grammar.
CALICO,20(3): 497-512M.
Schulze.
2003.
AI in CALL: Artifically Inatedor Almost Imminent?
WorldCALL 2003, Banff,Canada.TreeTagger Homepage.
Available at:http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/DecisionTreeTagger.html[Accessed: 20 April 2004]E. U?
Dhonnchadha.
2002.
An Analyser andGenerator for Irish InflectionalMorphology Using Finite-State Transducers.Msc Thesis.A.
Vandeventer Faltin.
2003.
Natural languageprocessing tools for computer assisted languagelearning.
Linguistik Online 17, 5/03E.
Wilson.
1997.
The Automatic Generation ofCALL Exercises from General Corpora.
In?Teaching and Language Corpora?
A.Wichmann, S. Fligelstone, T. McEnery, and G.Knowles, ed., pages 116-130, Addison WesleyLongman, London.XML.
2004.
Extensible Markup Language.Available at: http://www.w3.org/XML[Accessed 10 April 2004]
