JANUSZ STANISLAW BIEI(ITOWARDS COMPUTER SYSTEMS FOR CONVERSINGIN POLISH1.
PHILOSOPHY OF THE MARYSIA PROJECT1.1.
Natural language communication trends in computer software.The progress in computer hardware in recent years has been enor-m.ous.
Computers are now extremely fast and relatively cheap, thecapacity of their storage has also been multiplied.
These factors influenceboth the range of computer applications and the complexity of soft-ware.
Computers are now used directly not only by mathematicians,physicists and data processing departments, but also by scientific work-ers of almost all domains of knowledge (including philology, philo-sophy, archaeology, etc.
), managers and even sometimes laymen suchas patients in hospitals.
On the other hand, the great computationalpower of existing hardware allows us to develop very sophisticatedsystems for solving complicated problems, in a fully automatic manneror by means of interaction with man.
There is no reason to doubtthis is a steady trend in the computer world.
We have to realize nowthat it means that man-machine communication will become moreand more crucial in computer usage.
First, if we cannot make commu-nication with computers easier, then the greater number of computerusers requires the total cost of training to rise considerably.
Secondly,even an excellent problem solver can be of no use if we do not developthe means for stating a problem correctly.
The aim of research in prov-ing the correctness of programs and automatic program synthesis isto solve the software crisis by making the work of programmers easier,Acknowledgedment.
The work described here has been done at the mathematicaldepartment of Warsaw University by the team consisting of S, Szpakowicz, W. Lu-kaszewicz and the author; in the early stage of development it was supervised by Pro?S.
Waligbsski.140 JANUSZ STANISLAW BIE~It is not yet clearly realized that any result in the domain may onlyshift the burden from expressing ideas in programming language todoing the same but in another formalism.
The following should provethe above statement.
Let us consider the man-machine interaction pre-sented in the P,.
W. FLO~D (1971) paper and try to design a formalismfor it.
It will become vident that if such a formalism exists, then becauseof its complexity it is not easier to express the ideas in it than just toprogram the problem.Our assumption is that the only long-term solution of these pro-blems is m~an-machine communication i  natural anguage.
It is, ofcourse, an old idea.
This has appeared in the COBOL design, a question-naire method of inquiries of men by computers and vice-versa, and insome question-answering and information retrieval systems, etc.. C.M~ADOW (1970, p. 141) has stated the following: " the lure of naturallanguage communication is with us, and we may expect o see a con-tinuing trend towards its use, or its approximation, i  all forms of man-machine communication ".
We strongly believe this and this is the ge-nesis of the project aiming at developing the ~ARYSIA Polish languageconversational system.1.2.
What does " conversational system" mean.When the idea of time sharing was brand new, every session withany time sharing system was called a " conversation with a computer"It still happens that we meet he word "conversation" in this meaning,but it is better to distinguish interactive systems (and languages) andconversational systems.
By the latter we mean a system which allowsinteraction in natural anguage, usually a limited language.
This statement requires some clarification.
It can be understood in a broadsense as the following; every system you can communicate with innatural anguage is a conversational system.
However, its narrow senseis more appealing.
Let us consider for the moment he structure of aconversational system.
I claim that for designing and debugging pur-poses such a large system is to be split into some modules with clearlyestablished functions of modules and interfaces between them.
Oneof the modules is to be a "brain" of the system, it determines thebehavior of the system by controlling its slave modules.
As a rule, forthe purpose of portability and adaptability it should not have contactdirectly with the external environment.
One (and often the only)TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 141method of interaction between the "brain" and the external worldis to use a special conversational module.
The module has as an inpututterances of a natural anguage and translates them into a "brain"formalism or vice-versa ( s proved by T. WINOGRAD, 1971, during theanalysis of an utterance a feedback from the "brain " is desirable forefficiency).
In most cases the "brain " can be just an already existinginteractive system, in other cases the rest of the system may be espe-cially developed for making full utilization of the module possibilities,e.g.
automatic resolution of ambiguities during text preparation forstatistical computations or preprocessing of utterances before se-mantic and pragmatic analysis in an artificial intelligence system.
Sucha module is fairly complex and relatively independent of other partsof the system it is embedded in; therefore we prefer to consider it asa separate system and to refer to it as a conversational system.
TheMaaYSIA system is conversational in this narrower sense.1.3.
The aim of the MARYSlA project.We consider the rich inflexion of the Polish language as the maindifficulty in developing systems for man-machine communication inPolish.
For example, it makes the questionnaire method inconvenient,because for psychological reasons we have to choose between twopossibilities: either to allow only "yes "-" no " answers or to accepta considerable number of mismatches, caused by impermissible infle-xional forms.
It is also not possible to develop any more sophisticatedlanguage processing system for Polish without implementing (or sim-ulating) algorithms of inflexional analysis and synthesis.
Thereforethe primary aim of the MARYSIA project was to break the barrier ofinflexion.
This means solving two problems.
First, we had to designa formalism to talk about inflexion with sufficient precision.
Secondly,we had to develop a general purpose system of practical use, with theability to perform inflexional analysis and synthesis.
These attributesof a system seem to be contradictory, but we found a way out.
Wehave split the system into two parts with different functions.
One partof it has to cover the morphological level of the language.
This is anopen ended part of the system, because there are only two restrictionson its adequacy: one is the computer storage available and the secondis the necessity to describe the morphology by means of the notionsdesigned by us for this purpose.
It is important that the adequacy is142 JANUSZ STANISLAW BIEI~not fixed at the moment of system generation but can be increasedstep by step, mainly by putting new items into the M I^~YSm diction-aries.
The second part of the system has to serve temporarily as ameans for "jumping over" the higher levels of language, such as syntaxand semantics, and eventually pragmatics.
At the moment it is ratherprimitive.
It has been patterned after J. WEIZENBAUM'S EHZA systems(1966) which were interpreters for exchangeable scripts, consistingmainly of decomposition a d reassembly rules; the difference isthe rulesof MAR'ZSL~)S scripts can refer to morphological descriptions of a word.The rich inflexion of Polish is here of some help, because many syntacticrelations and some semantic facts are clearly reflected by morphology,and therefore ven simple means can cover some parts of syntax andsemantics.
We do not know yet how large is the domain of syntaxand semantics, which is reducible to morphology (and also to MARYSIA'sscript rules).
To find this out as well as to recognize the practical appli-cability of a morphology based conversational system are the secondaryaims of the MARYSIA project.2.
MARYSIA~S LINGUISTIC PROBLEMS2.1.
General assumptions.Automatic text processing of any kind forces us to face many lin-guistic problems of great importance.
If a working system is requiredas a result of a project, then as a rule it is impossible to spend muchtime on working out solutions to all problems; in most cases we takefor granted, sometimes even unconsciously, existing opinions.
It is myfeeling that we should not take for granted all our linguistic back-ground, because almost every project can verify or reject some linguis-tic statements, e.g.
the work on a frequency dictionary can clarifysome problems of homonymy, etc.
The main theoretical point of thelVIARYSIA project was the concept of "word"There are many definitions of "word " in the linguistic literature.Why do we not want to use any of them?
The reason is that all ofthem (at least all I know) are of no use when we want to decide whe-ther a given object is a word or not.
Such a situation is fairly commonin linguistics, let us take for example the well known definition ofTOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POrlSH 143"morpheme ": "the minimal meaningful unit of an utterance " andtry to check that a given text is an utterance, that a given unit is mean-ingful and that it is minimal.
After all, we do not have to accept hesituation.
How to avoid it then?
It is necessary to fred a basis for lin-guistic researches, erving as the only criterion for evaluating the theo-ries.
If we look for such a basis, we realize more than ever that lan-guage has no clear boundary in any aspect.
There is no border betweenlanguages in space and time, there is no border between using languageand other types of behavior (e.g.
between understanding utterancesand reasoning based on knowledge of reality); the opinions concerningperception of speech and handwritten letters have recently changed verymuch, so the concept of spoken or written utterance is no less vaguethan the "meaning ".
What way out is there?
Let us draw attentionto the fact that a printed or typed text is quite different from any otherkind of utterance, because it is in fact a string of characters from afinite, well defined alphabet.
A new page, a change of type font, etc.can be considered as special letters in the alphabet, as is the case in com-puter composition systems.
Therefore we can decide that every wellprinted text is equivalent to a computer-readable text of any form(paper or magnetic tape, text prepared for oCR readers, etc.).
In thepresent state of the art the computer eadable text is, in my opinion,the only basis for all linguistic research.
In other words, if we considerBabbage as the father of computers, it is Gutenberg who is the fatherof linguistics (at least computational linguistics).A unit which can be defined strictly oll the basis of a computerreadable text is a "word ", i.e.
a string of characters between two deli-miters, e.g.
punctuation marks.
Such words are of different kinds, theycan constitute numbers, abbreviations, mathematical formulae, etc.
Wewill consider now only those words which are composed exclusivelyof letters (or have been substituted by such a word, e.g.
the word 5in English can be substituted by f ive) .
Of course, the division of textinto words is of little interest for a linguist for two reasons.
First, spell-ing rules are often rather loose, therefore the same text can be seg-mented in different ways, and "a  word can have different spellings"(I put this in quotation marks because " word " obviously has a diffe-rent meaning in this context).
Secondly, a word - again because ofspelling rules - is sometimes too long for our purposes.
I refer to caseswhen a word is obtained by concatenation of two or more differentwords (which happens in Polish and is very frequent in German forexample).
The second difficulty is more important and we solve it144 JANUSZ STANISLAW BIEfi"first by introducing the notion of a "lex ", which is a word or a sub-string of a word.
Let us distinguish now word-types, word-tokens,lex-types and lex-tokens.
The lexes are defined mainly by enumeratingtheir lex-types.
For practical purposes this is quite enough, and fromthe theoretical point of view the finite list of lex-types can be supple-mented by a device for generating potential lexes from a finite diction-ary of morphemes.
I would like to stress our point that all lexes ofpractical significance come from a finite (although large) dictionary.It is also important hat as a rule lexes are quite different from mor-phemes; they can be described loosely as "words, which because ofspelling rules can be sometimes written together"2.2.
Hierarchy of linguistic units.In this paragraph I present he hierarchy of linguistic units as im-plemented in the MAaYSIA system, i.e.
as it was designed in 1970-1971.It has in general stood the test of time and the only changes it is subjectto are of an aesthetic kind.
The terminology I use here is consistentwith English summaries of my papers (J. ST. BI~, 1971; 1972 a; 1972 b).Lexes exhibit different features, which are not equally relevant ous.
It is natural then to consider them as variants of higher-level units.Therefore we introduce the notion of a "lexeme "; a lexeme-typeconsists of an ordered set of its allolexes and a choice function de-scribing what allolex is to be used in a given context.
All allolexes ofa lexeme should be fully equivalent from the linguistic point of viewalthough they may have different spelling or pronunciation.
Examplesof allolexes in Polish are niego, jego, go (all mean "him ", the first isused after a preposition, the second at the beginning of an utterance,and the third in all other contexts), in German neue and neuer (strongand weak declensions of an adjective), in English a and an, etc.
Thechoice functions are implemented as a special kind of finite automaton,which has as an input the lex-tokens which are in the neighbourhoodof the lexeme-token under consideration.
It follows from this thataUolexes are never stylistic variants.
We think that distinguishing sty-listic differences in texts can be very useful in some applications, e.g.computer aided language teaching.
Therefore very lexeme, apart fromits strictly grammatical properties, has its stylistic features which Icall frequency evocation and quality evocation.
At present frequencyevocation can have as a value one of five grades: proper, acceptable,TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 145rare, wrong, non-existent; the quality evocation is described by meansof qualifying labels.
All lexemes with the same grammatical propertiesfall into one "form ".
We insist that for every form it is one lexemewhich is the " best " one, i.e.
it has the highest frequency evocation.This is a way to obtain a normative dictionary together with an ade-quate enough description of the real vocabulary.Until now we have introduced four linguistic units (word, lex,lexeme, form), but none of them is equivalent or even similar to themost popular meaning of word (in Polish slowo, wTraz), i.e.
word inthe sense of e.g.A.
PENTILLX (1972).
We call such a unit a "formeme " ;it is an ordered set of forms.
The ordering is necessary, because withevery position in the set some syntactic features are connected.
Nowthe problem is: what syntactic features can be put together into oneformeme, in other words, how to establish borders between formemes.Our answer is that it can be done only arbitrarily by trading off thecomplexity of dictionary entries and the grammar which uses them.In the MARYSIA system forms of a formeme can exhibit only featuresof number, case, gender and person; all other features are assigned toa formeme as a whole.There is also one more notion, it is the "group ".
The group wasdesigned for strictly technical purposes, i.e.
for making dictionariesmore compact by collapsing the descriptions of similar formemes intosingle entries.
On account of the lack of a semantic omponent in theMARYSIA system it is used now in a different way.
We put some for-memes into one group if and only if there are enough regular diffe-rences between them from the semantic point of view.
For example,an adjectival class of groups contains in every entry the positive andcomparative degrees of the adjective, its adjectival adverb and theadjectival noun; the verbal class of groups contains the Present Tenseand simple forms of the Imperative Mood, the Past Participle, the Pas-sive and the adjectival Simultaneous Participle, etc.As far as I know, the notions introduced for the MARYSIA systemhave no counterparts in linguistic theories, mainly because MARYSrAnotions account for stylistic variations.
Another important differenceis that they are based on text words and thercfore they do not describephrases (e.g.
verb forms which are spelled separately).
It may seemstrange that so many notions have to be introduced to clarify the no-tion of word (at least for Polish), but it seems to me that a convenientand elegant description of a vocabulary still requires ome additionalnotions.10146 jANUSZ STANIS~AW m~2.3.
Morphological coordinates.It should be noted now that of the five notions introduced in thepreceding paragraph, only one of them refers to an observable and print-able object, i.e.
the lex (strictly, the lex-token).
The problem is thenhow to refer to any concrete object of another type, e.g.
a lexeme, agroup, etc.
The solution we use (J. ST. BI~, 1970; 1972 a) is the follow-ing.
Every item of a vocabulary possesses its paradigm, i.e.
the set ofall lexes which are included (directly or not) in the item.
When thefull paradigm designates the object we can refer to it by enumeratinglexes of the paradigm; if this is not the case, we have to mark the levelof the item (e.g.
the word pod, meaning " under ", can label the pre-positional formeme, the only inflexional form of the formeme, or theonly lexeme of the form, etc.).
This method is safe, but rather incon-venient when the paradigm of an item is numerous.
In this case wecan use an abbreviated method of reference, i.e.
we may describe theparadigm instead of enumerating it.
In most cases it is enough to giveonly one lex of the paradigm to describe it exactly, but in some situa-tions it may be necessary to give two or more of them.
It is worthnoting that any lex (or set of lexes) can be used to label a paradigm,although we may prefer the traditional convention of using the Nomi-native Singular for nouns, the Infinitive for verbs, etc.
For distinguish-ing different levels of vocabulary it was suggested in J. ST. BIv~ (1972)that we use different ype fonts (ot underlining and quotation marksin manuscripts), but the more traditional "labelled bracketing ",e.g.
\[dom\] TM for the given formeme, can also serve for this purposevery well.The above mentioned method is very good for a human, but itis inconvenient for internal representation f vocabulary items in com-puter programs.
Especially for this purpose we have designed "mor-phological coordinates ".
We have noticed that every item can bereferenced by means of giving the address of the biggest vocabularyitem it is included in, and specifying some of its particular features.The features which are used for the purpose in the MAR'ZSlA systemwere also influenced by technical considerations.
As the result of thetrade-off the MARYSlA'S morphological coordinates are the following:1.
The dictionary item address.
The item may represent a groupor a formeme.2.
The morphological type of the formeme under consideration.TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 147For formeme items it serves mainly for checking purposes, but forgroups it describes a subset of all formemes belonging to the givengroup.3.
Serial number of the formeme in the formeme subset of thegiven morphological type.
For formeme items it is equal to zero andserves only for checking.
For group items it describes together withthe second coordinate xactly one formeme of the given group.4,5,6,7.
The values of, respectively, number, case, gender andperson categories.
A value equals zero if a category does not concernthe formeme.8.
Serial number of the allolex in the given lexeme.If all eight coordinates are specified, then as a rule we refer to exactlyone lex.
In some cases there are some stylistic variants of the givenlex; they have the same morphological coordinates.
Then we canspecify qualifying labels for evocations which are of interest o us;if we do not do this, it is assumed we refer to the "best" lex of thegiven form.The most important property of the morphological coordinates ithat they can serve as a convenient tool for handling useful sets of lexes.We obtain the result by leaving some coordinates unassigned.
In thisway we can reference e.g.
the whole paradigm of a traditional verb byspecifying only its dictionary address.
We can refer to any form of thePresent Tense of the given verb by specifying the first three coordinates.If we want to refer to any form of the Present Tense of any verb, wejust have to leave the address coordinate unassigned.
For checkingagreement in an utterance we are interested in an object such as anynoun (no matter whether a "normal " noun or the Gerund etc.
), wecan specify it by assigning the respective value to the second coordi-nate.
There are many other possibilities, but the examples given aboveshould be sufficient o prove that the morphological coordinates are aconvenient means for handling different vocabulary items.3.
MARYSIA SYSTEM FROM THE USER'S POINT OF VIEW3.1.
Script.For every application of the MARYSIA system at least one scriptshould be prepared.
The primary purpose of a script is to establish a148 JANUSZ STANISLAW BIEI~way of classifying all possible utterances into some kinds of requiredreaction types; this is obtained by listing "decomposition rules " whichshould be applied to an utterance for every phase of the man-machinedialog.
The secondary purpose of the script is to allow generation ofa computer response by means of "composition rules ".
At the mo-ment scripts are coded in a formalism oriented towards its internalrepresentation in the computer, because a planned preprocessor hasnot yet been implemented.
Therefore I will not give any concreteexample of a script, but \[ will describe it verbally.A decomposition rule is a basic item of a script, it describes a classof utterances, which are formally similar.
It is composed of three parts:a list of lex schemata,  list of allowed permutations and the list of re-quired relations between lexes.
A lex  schema consists of eight slotsfor morphological coordinates, the slots can be filled by coordinatevalues or left unassigned.
Ill this way a schema designates some setsof lexes, which can range from exactly one lex to the set of all lexesdescribed in the system dictionary.
There are also some special sche-mata, e.g.
"short general schema" means any lex from the dictionaryor an empty lex (i.e.
no lex at all), " long general schema" means aa string, possibly empty, of lexes from the dictionary, separated bynon-final punctuation marks (e.g.
spaces, commas).
There is also avery important schema called "word schema ", which matches everyword not recognized by the morphological nalysis of the system.Lists of permutations were introduced because of the fairly free wordorder in the Polish language.
A permutation is a string of references toschemata, described in the first part of a rule, separated by descriptionsof required punctuation marks (including an empty punctuation markfor lexes which are to compose words).
For every permutation there isa "reaction ", which is not set by the system, but can be arbitrarilydefined by a user (e.g.
it can cause some computation or just pointto a composition rule for preparing an answer).When a decomposition rule is applied to an utterance, the followingactions are taken.
First, the utterance is preprocessed to remove super-fluous spaces, change upper case letters to lower case equivalents, etc.Then the words are split into lexes when necessary, and lexes are clas-sified according to the schemata of the rule.
Next, permutations arechecked sequentially until one of them matches; now is the momentwhen the relational part of the rule becomes important.
There are twotypes of relations.
One of them is called "agreement " and really servesfor checking agreement of given coordinates (usually number or Case)TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 149of instances of lexes described by specified schemata.
The second oneis called " government" and is used to compare a specified coordi-nate against a constant or against one of eight " phraseological num-bers " provided for every formeme by the dictionary.
The phraseolo-gical numbers describe some syntactic features of a formeme, e.g.the rection of a verb, the gender of a noun, etc.
If the specified relationholds, the match is successful and the reaction associated with the per-mutation is passed as the result; otherwise the next permutation or thenext rule is applied.The structure of composition rules is very similar to decompositionrules.
The main differences are that for obvious reasons there is onlyone permutation and that the permutation can refer not only to itsown schemata, but also to instances of schemata of the most recentlyapplied decomposition rule.
The other difference is that the relationsare not checked but realized, i.e.
the value of a coordinate of one in-stance ofa lex is assigned to a specified coordinate slot of another schema(" agreement "), or  the value of a constant or a phraseological numberis passed to a specified slot (" government ").
After this process allcoordinate slots of all schemata should be filled, then the lexes speci-fied by coordinates are generated and printed as a computer utterance.Scripts contain all rules which are to be applied in a conversation.In different moments of a discourse it is necessary to use different sub-sets of decomposition rules or to apply a different order for matchingthem.
For the purpose decomposition rules can be grouped into "ex-pectation sets ".
This is not required for composition rules as theyare pointed explicitly by reaction in the matched pernmtation or bythe "brain " of a user's system.3.2.
Dictionary.From the users' point of view the MARYSIA system should have onlyone dictionary; this is not the case at the moment because we havenot yet implemented some necessary utility programs and a user whowants to update the MARYSIA's vocabulary is involved with three dic-tionaries.
It is only a temporary situation and therefore I will describenow exclusively the main dictionary, which is to be the "only " one.The maha dictionary contains items, which are composed of threedivisions: morphological, syntactic and pragmatic.
The last one is notused in practice.
The syntactic division is rather primitive, it consti-150 JANUSZ STANISLAW BIEI<Itutes just a set of eight phraseological numbers per formeme.
Themorphological division is of most interest to us and it is the most com-plicated.
First, it is split into four parts, according to the four gradesof frequency evocation.
The reason for this is the following.
In someapplications it may be necessary to reduce the adequacy of the diction-ary because of constraints on dictionary size or because it just will notbe needed; then we are able to remove asily the parts of items whichare of no interest.
Next, every part is a list of morphological segments(in most cases it contains only one segment).
Every segment has itsquality evocation, which is stored as a string constituting a qualifyinglabel from W. DoRosz~wsKfs dictionary (1958), and is often empty.As in the case of frequency evocation, we can easily get rid of segmentswith no empty labels if we do not need them.
Segments are of threetypes, which serve different purposes.
The simplest one is a quotationalsegment, which contains a list with explicitly coded lexes, togetherwith their morphological coordinates and their quality evocations.This segment is used separately only for uninflected items; it servesmore often as a supplement to other types of segments and thus con-tains the "variant" or "exception " forms of a paradigm.
The sec-ond type of segment isa generation segment, which is used to describesome irregular items by means of an algorithm for generating theirlexes.
The third and the most important one is a parametric type ofsegment.A parametric segment contains three ordered sets of parameters,which are called morphological evocations, morphological numbersand morphological bases.
The latter two of them can be considered asa generalization f traditional concepts respectively of pattern of in-flexion and of a stem.
The difference isthat a base can be constituted byan arbitrarily defined string of letters, and the number of bases fordescribing the given type of item can also be arbitrarily defined.
Simi-larly, inflexional patterns traditionally classify whole paradigms, but wecan arbitrarily split the paradigm into some subparadigms (which mayconsist even of single forms) and then we can independently assign adescription to every subparadigm.
The morphological evocation hasno counterpart: it decides whether a slot in a paradigm is filled by agiven item or not.There are different levels of parametric segments.
If a segmentdescribes a formeme, then it belongs to the inflexional level.
In thefirst stage of dictionary development all items can belong to this level,but if we want to make full use of script possibilities, we have to provideTOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 151also the derivational level.
The segments of this level describe groups,i.e.
sets of formemes.
This is done by simulating the inflexional seg-ments which had to be put in the dictionary if the derivational levelwas absent.
We can introduce also a third level, the extractional one.An extractional segment provides parameters for a special type ofgroup; by taking into account idiosyncrasies of a given type of group,the extraction segment can use less parameters (especially bases, whichare very space consuming) than an equivalent derivational segment.The multilevel lex generation allows us to trade off between the sizeof a dictionary and the time of lex generation.
Together with possi-bilities of other trade-offs, e.g.
adequacy versus dictionary capacity, itshould make the dictionary system easy to adapt to different applica-tions.3.3.
System tables.Developing a good algorithm of inflexional analysis and synthesisis not an easy task.
Instead of trying to obtain it in the first attempt,we decided to design our system as a set of table-driven programs.Therefore we may improve the system performance by exchangingstep by step its tables; we can also easily change ottr previous decisionsconcerning, for example, borders of formemes, etc.
It even seems pos-sible to change the MARYSlA system into another language version,the results of the ftrst attempt o do this (L. KWIECI~SKI, 1972) are en-couraging.
Now we will review the system tables in the order of theirapplication for system response.The input utterance is at first preprocessed and coded in special PFcode; these are the only non-table-driven parts of the system.
Thenthe words are divided into lexes.
This is the task of two finite auto-anata (all system automata re, of course, driven by exchangeable tables),which scan a word in both directions and establish probable lex bor-ders.
Now the lexes are to be transformed into keys for searching ina backing dictionary called the index.
The transformation consists ofcutting some letters from the ends of the lexes; the place for the cutis indicated by another set of automata.
Every automaton of the setis working on the assumption that the lex belongs to a given formemetype, then the key (or keys) suggested by the automaton is searched(by means of hash coding) in the segment of the index which is devotedmainly to keys of the given formeme type.
It has some advantages.152 JANUSZ STANISLAW BIE~First, it is a way of solving some cases of homonymy, next, the automataare small and therefore asy to design and to debug.
The keys are notmatched exactly but owing to the PF code (J. ST. BI~, 1971) and spe-cial formats of the index entries, stem alternation is not taken into ac-count during the matching.
It should be noted that at this momentsome false hypotheses concerning lex borders are rejected because re-spective keys are not found in the index.
The index contains pointersto the linkage dictionary, which was designed as a separate part becauseof storage constraints.
The linkage dictionary ields for every lex itsfirst three morphological coordinates, i.e.
a formeme specification in-cluding formeme type.
We have noted that the latter informationtogether with the lex itself is usually enough to establish the rest of themorphological coordinates with high probability, therefore now thelex is inspected by one of the special automata, which outputs possiblecoordinates.
If we do not require 100 percent probability that the coor-dinates are correct, we can stop the analysis at this moment; otherwisewe reconstruct the lexes by synthesis and reject false hypotheses.The tables for the synthesis are more differentiated.
First, there isa table of formatives, i.e.
strings of letters used to compose lexes.
Next,there is a table of choice ftmctions.
Choice ftmctions are finite autonxata(they can also compose a choice function segment in a dictionaryitem).
Then there is a large table called the inflexional partition.
Besidessome technical information it contains algorithms transforming para-meters of an inflexional segment into lexes; algorithms are expressedby means of extremely primitive " morphological description lan-guage" consisting of about ten instructions.
The other two partitionsare optional.
They contain algorithms in the morphological descrip-tion language to transform parameters of one level into parametersof another level, i.e.
extractional ones into derivational ones or deriva-tional parameters into inflexional ones.For all types of information eeded by the MA~YSIA system there isa computer-independent (although at the moment rather awkward)external form.
Its syntax is given in the ~Nr notation and its semanticsis described in Polish in Bm~ et al (1973).4.
Present state of the project and the future development.Because of the delay in installing a new computer for WarsawUniversity, we have decided to implement the system in the first in-TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 153stance on the GIER computer, the only available one when the projectwas started.
It was decided to write the programs in GIER ALGOl.
4 andto split the analysis and synthesis parts of the system into passes becauseof fast storage constraints.
At the moment all parts of the system havebeen implemented, the tables of the system have been debugged andthoroughly tested; small dictionaries for testing purposes have been pre-pared.
Still before us is checking the system as a whole, working ac-cording to some testing scripts.In the future we want to rewrite the MARYSIA system for a biggerand faster computer (it will probably be the IBM 360) and to developsome utility programs to facilitate loading the backing dictionaries andscript writing.
We will also check the generality of the system tablesby preparing a German language version of the MARYSIA system.As far as the long-term plans are concerned, the following tasksare to be solved.
First, it will be necessary to improve the adequacyof the MARYSlA morphological component by increasing the numberof entries in the dictionaries.
Secondly, it will be necessary to developsystems which will cover the higher levels of the language; becauseof our "bottom-up " approach to language description it will be thesyntax that will be elaborated next.
The third direction of the researchcan be called developing text-world interfaces; I mean by this acceptingtexts prepared for typesetting devices, optical character recognition,and voice input and output.
For technical reasons, the ocR will probablybe excluded; speech processing by computer is the interest of anothergroup at Warsaw University and we hope to join together at a suit-able moment, which should not be before developing at least a goodsyntactic parser (following the recent ideas of e .g .D .R .
HILL, 1972).Therefore in the near future we will be interested only in input oftext coded on different kinds of media used in the printing industry.154 JANUSZ STANISLAW BIEI<ISAMPLI~ DICTIONARY BNTRIBS-S _LO_NCU--S_LO_NCU--S_LO_NCA--S_LO_NC-0\]0,0,01\[I,4,1,0,5,1,1,0,0\]0>1,<1,201,3\[2,7,62,21,5,1,3,1,5,4-P_LUCO--P_LUCA--P_LUCU--P_LUCU--P_LUCA--P_LUC-0\]0,0,0.I\[I4,1,0,5,1,1,0,0\]0>1,<1,201,3\[2,7,62,21,6,1,3,1,5,4-_LYKO-TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 155-_LYKA--_LYKU--_LYKU--_LYKA--_LYK-0\]0,0,01\[14,1,0,5,1,2,0,0\]0>1,<1,201,3\[2,7,62,21,5,1,3,1,5,4-D_LUTO--D_LUTA--D_LUTU--D_LUCIE--D_LUTA--D_LUT-0\]0,0,01\[14,1,0,5,1,2,0,0\]0>2,<1,201,3\[2,7,62,21,5,1,6,1,8,7-PISKI.,_E-156 JANUSZ STANISLAW BIEI~SAMPLE PARADIGM LISTING, USED FOR CHECKING THE DICTIONARY\[BIEN\] CKL2\[BIEN\] CKL2ITEM 1596LEVEL 1 TYPE 6FORMEME TYPE 6FORM CATEGORIESPR.OPER.
LEXEMELEX JALABEL0 1 0 0FOR.M CATEGORIES 0 2 0 0PR.OPER LEXEMECHOICE FUNCTION ADDR.ESSALLOLEX NUMBEP.
1LEX MNIELABELALLOLEX NUMBER.
2LEX MNIELABELALLOLEX NUMBER.
3LEX MI_ELABEL73FOR.M CATEGORIES 0 3 0 0PR.OPER LEXEMECHOICE FUNCTION ADDRESSALLOLEX NUMBER.
1LEX MNIELABELALLOLEX NUMBER 2IbEX MNIELABELALLOLEX NUMBER.
3LEX MILABEL73FOR.M CATEGORIES 0 4 0 0PROPEI~ LEXEMECHOICE FUNCTION ADDRESSALLOLEX NUMBER.
173TOWARDS COMPUTER SYSTEMS FOR CONVERSING IN POLISH 157LEX MNIELABELALLOLEX NUMBER.
2LEX MNIELABELALLOLEX NUMBER 3LEX MI_ELABELFORM CATEGORIES 0 5 0 0PROPER.
LEXEMELEX MN_ALABELFORM CATEGORIES 0 6 0 0PR.OPER LEXEMELEX MNIELABELFORM CATEGORIES 0 7 0 0NON-EXISTENTITEM 1615LEVEL 1 TYPE 6FORMEME TYPE 6FORM CATEGORIES 0 1 0 0PROPER.
LEXEMELEX TYLABELFORM CATEGORIES 0 2 0 0PROPER LEXEMECHOICE FUNCTION ADDRESS 73ALLOLEX NUMBER.
1LEX CIEBIELABELALLOLEX NUMBER 2LEX CIEBIELABELALLOLEX NUMBER 3LEX CI_ELABEL158 JANUSZ STAIqlSLAW BIEI~FORM CATEGORIES 0 3 0 0PR.OPER.
LEXEMECHOICE FUNCTION ADDRESSALLOLEX NUMBER.
1LEX TOBIELABELALLOLEX NUMBER.
2LEX TOBIELABELALLOLEX NUMBER 3LEX CILABEL73FORM CATEGORIES 0 4 0 0PROPER LEXEMECHOICE FUNCTION ADDRESSALLOLEX NUMBER.
1LEX CIEBIELABELALLOLEX NUMBER.
2LEX CIEBIELABELALLOLEX NUMBER 3LEX CI_ELABEL73I~.EFEP~ENCESJ.
ST. Blzgl, Prowizoryczna terminologiaczasownikowa (unpublished paper),1970.J.
ST. BIEI(T, An Alphabetic Code for thelnflexional Analysis of Polish Texts,in <~ Algorytmy~>, VIII (1971), 14.J.
ST. B I~,  O pewnych problemach prze-twarzania jezykSw fleksyjnych na ma-szynach cyfrowych, in <~ Prace Filologi-czne ~>, XXIII (1972").J.
ST. B I~,  O dw&h poj?ciach po~.
'yte-cznych przy automatycznym przetwa-rzaniu tekstdw, in ;~ volskich studidwslawistycznych, Seria 4, J~zykoznaw-stwo, Warszawa, 1972 b.J.
ST. Bmgr, W. LUKASZ~WICZ, S. SZPA-KOWICZ, Opls systemu MARYSIA, in<~ Sprawozdania IMM i ZON UW,> (l~e-ports of the Warsaw University Com-putational Centre), n. 41, 42, 43 (1973).W.
DoRoszEwsI?I (ed.
), Stownik jczykapolskiego, 11 voll.,Warszawa 1958-1969.I~.
W. FLOYD, Towards Interactive Designof Correct Programs, iriP Congress1971, Invited Papers 1971.D.
R. HirE, An Abbreviated Guide toPlanning for Speech Interaction withMachines: the State of the Art, in ~ Inter-national Journal of Man-Machine Stu-dies ~>, IV (1972) 4.L.
KWIECIglSKI, Die deutschsprachige Va-riante des Konversationssystems MARYSIA(M.A.
thesis), Warsaw 1972.C.
M~ADOW, Man-Machine Communica-tion, New York 1970.A.
PENTILrT~, The Word, in ~ Linguistics >>,LXXXVIII (1972), pp.
32-37.J.
WEIZENBAUM, ELIZA: a ComputerProgram for the Study of Natural Lan-guage Communication between Man andMachine, in <~ Communications of theACMes, IX (1966) 1.T.
WmOGRAD, Procedures as a Represen-tation for Data in a Computer Programfor Understanding Natural Language,Cambridge (Mass.)
1971.
