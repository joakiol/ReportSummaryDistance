BioNLP 2007: Biological, translational, and clinical language processing, pages 25?32,Prague, June 2007. c?2007 Association for Computational LinguisticsOn the unification of syntactic annotations under the Stanforddependency scheme: A case study on BioInfer and GENIASampo Pyysalo, Filip Ginter, Katri Haverinen,Juho Heimonen, Tapio SalakoskiDepartment of Information TechnologyUniversity of Turku,Joukahaisenkatu 3-520014 Turku, Finlandfirst.last@utu.fiVeronika LaippalaDepartment of French StudiesUniversity of Turku,Henrikinkatu 220014 Turku, Finlandveronika.laippala@utu.fiAbstractSeveral incompatible syntactic annotationschemes are currently used by parsers andcorpora in biomedical information extrac-tion.
The recently introduced Stanford de-pendency scheme has been suggested to bea suitable unifying syntax formalism.
In thispaper, we present a step towards such uni-fication by creating a conversion from theLink Grammar to the Stanford scheme.
Fur-ther, we create a version of the BioInfer cor-pus with syntactic annotation in this scheme.We present an application-oriented evalua-tion of the transformation and assess thesuitability of the scheme and our conversionto the unification of the syntactic annotationsof BioInfer and the GENIA Treebank.We find that a highly reliable conversion isboth feasible to create and practical, increas-ing the applicability of both the parser andthe corpus to information extraction.1 IntroductionOne of the main challenges in biomedical infor-mation extraction (IE) targeting entity relationshipssuch as protein-protein interactions arises from thecomplexity and variability of the natural languagestatements used to express such relationships.
Toaddress this complexity, many biomedical IE sys-tems (Alphonse et al, 2004; Rinaldi et al, 2004;Fundel et al, 2007) and annotated corpora (Kim etal., 2003; Aubin, 2005; Pyysalo et al, 2007) incor-porate full syntactic analysis.
However, there aresignificant differences between the syntactic anno-tation schemes employed.
This leads to difficultiesin sharing data between corpora and establishing therelative performance of parsers as well as to a lackof interchangeability of one parser for another in IEsystems, among other issues.Syntax formalisms are broadly divided into con-stituency and dependency.
Constituency schemesare dominant in many fields and are unified underthe established Penn Treebank (PTB) scheme (Bieset al, 1995).
However, dependency schemes havebeen suggested to be preferable in IE, as they repre-sent the semantic structure of the sentences more di-rectly (see, e.g., de Marneffe et al (2006)).
Further,Lin (1998) argues for dependency-based evaluationof both dependency and constituency parsers sinceit allows evaluation metrics that are more relevantto semantic interpretation as well as intuitively moremeaningful.
Even though there is clearly a need for aunifying scheme for dependency comparable to thatof PTB for constituency, no widely adopted standardcurrently exists.In this paper, we present a step towards unify-ing the diverse syntax schemes in use in IE sys-tems and corpora such as the GENIA Treebank1 andthe recently introduced BioInfer corpus (Pyysalo etal., 2007).
Clegg and Shepherd (2007) have re-cently proposed to use the Stanford dependencyscheme (de Marneffe et al, 2006) as a common,application-oriented syntax representation.
To as-sess this choice, we develop a set of conversionrules for transforming the Link Grammar (LG) de-pendency scheme (Sleator and Temperley, 1993) to1http://www-tsujii.is.s.u-tokyo.ac.jp/ ?genia25the Stanford scheme and then create a version ofthe BioInfer corpus in the Stanford scheme by ap-plying the conversion rules and manually correctingthe errors.
By making the BioInfer corpus availablein the Stanford scheme, we also increase the valueof the corpus for biomedical IE.
The transforma-tion has the further benefit of allowing Link Gram-mar output to be normalized into a more application-oriented form.
Finally, to assess the practical valueof the conversion method and of the BioInfer syntac-tic annotation in the Stanford scheme, we comparethe Charniak-Lease constituency parser2 (Charniakand Lease, 2005) and BioLG,3 an adaptation of LG(Pyysalo et al, 2006), on the newly unified datasetcombining the constituency-annotated GENIA Tree-bank with the dependency-annotated BioInfer cor-pus.The transformation rules and software as well asthe Stanford annotation of the BioInfer corpus, themain practical results of this work, are freely avail-able at http://www.it.utu.fi/BioInfer.2 MotivationTo support the development of IE systems, it is im-portant for a corpus to provide three key types ofannotation capturing the named entities, their rela-tionships and the syntax.
To our knowledge, thereare only two corpora in the biomedical domain thatcurrently provide these three annotation types simul-taneously, BioInfer and LLL (Aubin, 2005).
In ad-dition, GENIA, the de facto standard domain corpusfor named entity recognition and syntactic analysis,is in the process of adding a relationship annota-tion.
The corpora have different strengths; BioInferprovides a detailed relationship annotation, whileGENIA has a broader coverage of named entitiesand a larger treebank.
Unifying the syntactic anno-tations of these two corpora allows these strengthsto be combined.The BioInfer syntactic annotation follows the LGdependency scheme, addressing the recent interestin LG in the biomedical NLP community (Ding etal., 2003; Alphonse et al, 2004; Aubin et al, 2005).However, the LG scheme has been criticized for be-ing oriented more towards structural than semantic2http://nlp.stanford.edu/software/,version 1.5.13http://www.it.utu.fi/BioLG, version 1.2.0relations and having excessively detailed link typeswhose functional meaning and value for semanticanalysis is questionable (Schneider, 1998; de Marn-effe et al, 2006).
Our experience with LG leads usto largely agree with these criticisms.De Marneffe et al (2006) have recently intro-duced a transformation from PTB to the Stanfordscheme.
Clegg and Shepherd (2007) have ap-plied this transformation to perform a dependency-based comparison of several statistical constituencyparsers on the GENIA Treebank and have argued forthe adoption of the Stanford scheme in biomedicalIE.
Moreover, the IE system of Fundel et al (2007),which employs the Stanford scheme, was shown tonotably outperform previously applied systems onthe LLL challenge dataset, finding an F-score of72% against a previous best of 54%.
This furtherdemonstrates the suitability of the Stanford schemeto IE applications.3 Dependency schemesIn this section, we present the Stanford and LGdependency schemes and discuss their relativestrengths.3.1 Stanford dependency schemeA parse in the Stanford scheme (SF) is a directedgraph where the nodes correspond to the words andthe edges correspond to pairwise syntactic depen-dencies between the words.
The scheme definesa hierarchy of 48 grammatical relations, or depen-dency types.
The most generic relation, dependent,can be specialized as auxiliary, argument, or modi-fier, which again have several subtypes (de Marneffeet al, 2006).The Stanford conversion transforms phrase struc-ture parses into the Stanford scheme.
First, the se-mantic head of each constituent is identified usinghead rules similar to those of Collins (1999) and un-typed dependencies are then extracted and labeledwith the most specific grammatical relations possi-ble using Tregex rules (Levy and Andrew, 2006).The system additionally provides a set of collaps-ing rules, suggested to be beneficial for IE appli-cations (de Marneffe et al, 2006; Clegg and Shep-herd, 2007).
These rules collapse some dependen-cies by incorporating certain parts of speech (mostly26Vimentin and actin were also up-regulated , whereas an isoform of myosin heavy chain was down-regulated .A/ANPv CsMpSsA/AN PvDsuEJsMVsCCSpxCCVimentin and actin were also up-regulated , whereas an isoform of myosin heavy chain was down-regulated .cc>conj><nsubjpass<auxpass<advmodadvcl><mark<det prep><nsubjpasspobj><nmod<nmod <auxpassVimentin and actin were also up-regulated , whereas an isoform of myosin heavy chain was down-regulated .conj_and><nsubjpass<nsubjpass<auxpass<advmodadvcl><mark<detprep_of><nsubjpass<nmod<nmod <auxpassFigure 1: A sentence from the BioInfer corpus with its LG linkage (top), the Stanford parse (middle), andthe collapsed Stanford parse (bottom).
The < and > symbols denote the direction of dependencies.during incubation , actin suffered degradationJpCOSs Osactin suffered degradation during incubationJpMVpSs Osactin suffered degradation during incubationJpMpSs OsFigure 2: Variation in the link type connecting apreposition: CO to the main noun in topicalizedprepositional phrases, MVp when modifying a verb,and Mp when modifying a noun.conjunctions and prepositions) in grammatical rela-tions.
This is realized by combining two relationsand denominating the resulting dependency with atype based on the word to which the original tworelations were linked (see Figure 1).In the LG-SF conversion, we target the uncol-lapsed Stanford scheme, as the collapsing rules havealready been developed and reported by de Marn-effe et al; reimplementing the collapsing would bean unnecessary duplication of efforts.
Also, the col-lapsed relations can be easily created based on theuncollapsed ones, whereas reversing the conversionwould be more complicated.3.2 LG dependency schemeLink Grammar (Sleator and Temperley, 1993) isclosely related to dependency formalisms.
It isbased on the notion of typed links connecting words.While links are not explicitly directional, the rolesof the words can be inferred from their left-to-rightorder and the link type.
An LG parse, termed link-age, consists of a set of links that connect the wordsso that no two links cross or connect the same twowords.
When discussing LG, we will use the termsdependency and link interchangeably.Compared to the 48 dependency types of the Stan-ford scheme, the LG English grammar defines over100 main link types which are further divided into400 subtypes.
The unusually high number of dis-tinct types is one of the properties of the LG Englishgrammar that complicate the application of LG ininformation extraction.
Consider, for instance, thecase of prepositional phrase attachment illustrated inFigure 2, where all the alternative attachment struc-tures receive different types.
Arguably, this distinc-tion is unimportant to current IE systems and there-fore should be normalized.
This normalization is in-herent in the Stanford scheme, where the prepositionalways attaches using a prep dependency.In contrast to such unnecessarily detailed distinc-tions, in certain cases LG types fail to make seman-tically important distinctions.
For instance, the COlink type is used to mark almost all clause openers,not distinguishing between, for example, adverbialand prepositional openers.4 Our contributionsIn this section, we describe the LG-SF conversionas well as SF BioInfer, the BioInfer corpus syntactic27annotation in the Stanford scheme.
These are thetwo primary contributions of this study.4.1 LG-SF conversionThe LG-SF conversion transforms the undirectedLG links into directed dependencies that follow theStanford scheme.
The transformation is based onhandwritten rules, each rule consisting of a patternthat is matched in the LG linkage and generating asingle dependency in the Stanford parse.
Since theconversion rules only refer to the LG linkage, theydo not influence each other and are applied inde-pendently in an arbitrary order.
The pattern of eachrule is expressed as a set of positive or negative con-straints on the presence of LG links.
The constraintstypically restrict the link types and may also refer tothe lexical level, restricting only to links connectingcertain word forms.
Since LG does not define linkdirectionality, the patterns refer to the left-to-rightorder of tokens and the rules must explicitly specifythe directionality of the generated SF dependencies.As an example, let us consider the rule[X Pv?
Y]?
Y auxpass?
X.
The pattern matches twotokens connected with an LG link of type Pv andgenerates the corresponding directed auxpass de-pendency.
This rule applies twice in the linkagein Figure 1.
It is an example of a rare case of aone-to-one correspondence between an LG and anSF type.
Many-to-many correspondences are muchmore common: in these cases, rules specify multiplerestrictions and multiple rules are needed to gener-ate all instances of a particular dependency type.
Asa further example, we present the three rules below,which together generate all left-to-right prep depen-dencies.
An exclamation mark in front of a restric-tion denotes a negative restriction, i.e., the link mustnot exist in order for the rule to apply.
The link typesare specified as regular expressions.
[A Mp|MX[a-z]x?
B]!
[B Cs?
C]!
[A RS?
D]?
A prep?
B[A OF|MVx?
B]!
[A RS?
C]?
A prep?
B[A MVp?
B]!
[A RS?
C]!
[C MVl?
A]?
A prep?
BThe first of the above three rules generates the prepdependency in the parse in Figure 1, with A=isoformand B=of.
The variables C and D are not bound toany tokens in this sentence, as they only occur innegative restrictions.actin , profilin and cofilinCCCC CCFigure 3: Example of a structure where the relativeorder of the first two tokens cannot be resolved bythe rules.To resolve coordination structures, it is crucial torecognize the leftmost coordinated element, i.e.
thehead of the coordination structure in the SF scheme.However, the conversion rule patterns are unable tocapture general constraints on the relative order ofthe tokens.
For instance, in the linkage in Figure 3, itis not possible to devise a pattern only matching oneof the tokens actin and profilin, while not matchingthe other.
Therefore, we perform a pre-processingstep to resolve the coordination structures prior tothe application of the conversion rules.
After thepre-processing, the conversion is performed with thelp2lp software (Alphonse et al, 2004), previouslyused to transform LG into the LLL competition for-mat (Aubin, 2005).In the development of the LG-SF conversion andSF BioInfer, we make the following minor modifi-cations to the Stanford scheme.
The scheme dis-tinguishes nominal and adjectival pre-modifiers ofnouns, a distinction that is not preserved in theBioInfer corpus.
Therefore, we merge the nom-inal and adjectival pre-modifier grammatical rela-tions into a single relation, nmod.
For the same rea-son, we do not distinguish between apposition andabbreviation, and only use the appos dependencytype.
Finally, we do not annotate punctuation.Schneider (1998) has previously proposed a strat-egy for identifying the head word for each LG link,imposing directionality and thus obtaining a depen-dency graph.
Given the idiosyncrasies of the LGlinkage structures, this type of transformation intodependency would clearly not have many of the nor-malizing benefits of the LG-SF transformation.4.2 SF BioInferFor creating the BioInfer corpus syntactic annota-tion in the Stanford scheme, the starting point ofthe annotation process was the existing manual an-notation of the corpus in the LG scheme to whichwe applied the LG-SF conversion described in Sec-tion 4.1.
The resulting SF parses were then manu-28ally corrected by four annotators.
In the manual cor-rection phase, each sentence was double-annotated,that is, two annotators corrected the converted out-put independently.
All disagreements were resolvedjointly by all annotators.To estimate the annotation quality and the sta-bility of the SF scheme, we determined annotatoragreement as precision and recall measured againstthe final annotation.
The average annotation preci-sion and recall were 97.5% and 97.4%, respectively.This high agreement rate suggests that the task waswell-defined and the annotation scheme is stable.The BioInfer corpus consists of 1100 sentencesand, on average, the annotation consumed approxi-mately 10 minutes per sentence in total.5 EvaluationIn this section, we first evaluate the LG-SF conver-sion.
We then present an evaluation of the Charniak-Lease constituency parser and the BioLG depen-dency parser on BioInfer and GENIA.5.1 Evaluation of the conversion rulesIn the evaluation of the conversion rules against thegold standard SF BioInfer annotation, we find a pre-cision of 98.0% and a recall of 96.2%.
Currently,the LG-SF conversion consists of 114 rules, eachof which specifies, on average, 4.4 restrictions.
Al-together the rules currently generate 32 SF depen-dency types, thus averaging 3.5 rules per SF type.Only 9 of the SF types are generated by a singlerule, while the remaining require several rules.
Weestimate that the current ruleset required about 100hours to develop.In Figure 4, we show the cumulative precision andrecall of the rules when added in the descending or-der of their recall.
Remarkably, we find that a recallof 80% is reached with just 13 conversion rules, 90%with 28 rules, and 95% with 56 rules.
These fig-ures demonstrate that while the SF and LG schemesare substantially different, a high-recall conversioncan be obtained with approximately fifty carefullycrafted rules.
Additionally, while precision is con-sistently high, the highest-recall rules also have thehighest precision.
This may be related to the factthat the most common SF dependency types have astraightforward correspondence in LG types.01020304050607080901000  20  40  60  80  100Number of conversion rulesRecallPrecisionFigure 4: Cumulative precision and recall of the con-version rules.A common source of errors in the LG-SF conver-sion are the Link Grammar idiomatic expressions,which are analyzed as a chain of ID links (0.7% ofall links in the BioInfer corpus) and connected tothe linkage always through their last word.
Someexamples of LG idiomatic expressions include eachother, no one, come of age, gotten rid of, for good,and the like.
These expressions are often problem-atic in the SF conversion as well.
We did not at-tempt any wide-coverage systematic resolution ofthe idiomatic expressions and, apart from the mostcommon cases such as in vitro, we preserve the LGstructure of connecting these expressions throughtheir last word.
We note, however, that the list ofidiomatic LG expressions is closed and therefore acase-by-case resolution leading to a full coverage ispossible, although not necessarily practical.Similar to the LG idiomatic expressions are theSF dep dependencies, generated when none of theSF rules assigns a more specific type.
In most cases,dep is a result of a lack of coverage of the SF con-version rules typically occurring in rare or idiomaticexpressions.
We assume that many of the dep depen-dencies will be resolved in the future, given that theSF conversion and the SF dependency scheme itselfare presented by the authors as a work in progress.Therefore, we do not attempt to replicate most ofthe SF dep dependencies with the LG-SF conversionrules; much of the effort would be obsoleted by theprogress of the SF conversion.
The dep dependen-cies account for 23% of the total 3.8% of dependen-cies not recovered by the LG-SF conversion.29Charniak-Lease BioLGcorpus Prec.
Rec.
F Prec.
Rec.
FGENIA 81.2 81.3 81.3 76.9 72.4 74.6BioInfer 78.4 79.9 79.4 79.6 76.1 77.8Table 1: Parser performance.
Precision, recall andF-measure for the two parsers on the two corpora.5.2 Evaluated parsers and corporaThe Charniak-Lease parser is a statisti-cal constituency parser developed by Char-niak and Lease (2005).
It is an adaptation of theCharniak parser (Charniak, 1999) to the biomedicaldomain.
For example, it uses a POS-tagger trainedon the GENIA corpus, although the parser itself hasbeen trained on the Penn Treebank.
The Charniak-Lease parser is of particular interest, because in arecent comparison performed by Clegg and Shep-herd (2007) on the GENIA Treebank, it was thebest performing of several state-of-the-art statisticalconstituency parsers.The LG parser is a rule-based dependency parserwith a broad coverage grammar of newspaper-typeEnglish.
It has no probabilistic component and doesnot perform pruning of ambiguous alternatives dur-ing parsing.
Instead, the parser generates all parsesaccepted by the grammar.
Simple heuristics are ap-plied to rank the alternative parses.Here, we evaluate a recently introduced adap-tation of LG to the biomedical domain, BioLG(Pyysalo et al, 2006), incorporating the GENIAPOS tagger (Tsuruoka et al, 2005) as well as a num-ber of modifications to lexical processing and thegrammar.To facilitate the comparison of results with thoseof Clegg and Shepherd, we use their modified subsetof GENIA Treebank.4 As 600 of the 1100 BioInfersentences have previously been used in the develop-ment of the BioLG parser, we only use the remaining500 blind sentences of BioInfer in the evaluation.5.3 Parser performanceTo evaluate the performance of the parsers, we de-termined the precision, recall and F-measure bycomparing the parser output against the corpus gold4http://chomsky-ext.cryst.bbk.ac.uk/andrew/downloads.htmlBioLGscheme Prec.
Rec.
FLG 78.2 77.2 77.7SF 79.6 76.1 77.8Table 2: BioLG performance on the BioInfer corpuswith and without the LG-SF conversion.standard dependencies.
The matching criterion re-quired that the correct words are connected andthat the direction and type of the dependency arecorrect.
The dependency-based evaluation resultsfor the Charniak-Lease and BioLG parsers on theGENIA and BioInfer corpora are shown in Table 1.We note that Clegg and Shepherd (2007) report77% F-score performance of Charniak-Lease on theGENIA corpus, using the collapsed variant of the SFscheme.
We replicated their experiment using theuncollapsed variant and found an F-score of 80%.Therefore, most of the approximately 4% differencecompared to our finding reported in Table 1 is dueto this difference in the use of collapsing, with ourmodifications to the SF scheme having a lesser ef-fect.
The decrease in measured performance causedby the collapsing is, however, mostly an artifactcaused by merging several dependencies into one; asingle mistake of the parser can have a larger effecton the performance measurement.We find that while the performance of theCharniak-Lease parser is approximately 2 percent-age units better on GENIA than on BioInfer, forBioLG we find the opposite effect, with performanceapproximately 3 percentage units better on BioInfer.Thus, both parsers perform better on the corporacloser to their native scheme.
We estimate that thistotal 5 percentage unit divergence represents an up-per limit to the evaluation bias introduced by the twosets of conversion rules.
We discuss the possiblecauses for this divergence in Section 5.4.To determine whether the differences between thetwo parsers on the two corpora were statisticallysignificant, we used the Wilcoxon signed-ranks testfor F-score performance using the Bonferroni cor-rection for multiple comparisons (N = 2), follow-ing the recent recommendation of Dems?ar (2006).We find that the Charniak-Lease parser outperformsBioLG statistically significantly on both the GENIAcorpus (p ?
0.01) and on the BioInfer corpus30Z   protein  but  not  c-myb  protein<nmod <depcc><nmodconj>Z   protein  but  not  c-myb  protein<nmod dep>cc><nmodconj>Figure 5: Example of divergence on the interpreta-tion of the Stanford scheme.
Above: GENIA andStanford conversion interpretation.
Below: BioInferand LG-SF rules interpretation.
(p < 0.01).
Thus, the relative performance of theparsers can, in this case, be established even in thepresence of opposing conversion biases on the twocorpora.In Table 2, we present an evaluation of the BioLGparser with and without the LG-SF conversion,specifically evaluating the effect of the conversionpresented in this study.
Here we find a substantiallymore stable performance, including even an increasein precision.
This further validates the quality of theconversion rules.Finally, we note that the processing time requiredto perform the conversions is insignificant comparedto the time consumed by the parsers.5.4 DiscussionEvaluating BioLG on GENIA and the Charniak-Lease parser on BioInfer includes multiple sourcesof divergence.
In addition to parser errors, differ-ences can be created by the LG-SF conversion andthe Stanford conversion.
Moreover, in examiningthe outputs we identified that a further source ofdivergence is due to differing interpretations of theStanford scheme.
One such difference is illustratedin Figure 5.
Here the BioLG parser with the LG-SF conversion produces an analysis that differs fromthe result of converting the GENIA Treebank analy-sis by the Stanford conversion.
This is due to theStanford conversion producing an apparently flawedanalysis that is not replicated by the LG-SF con-version.
In certain cases of this type, the lack of adetailed definition of the SF scheme prevents fromdistinguishing between conversion errors and inten-tional analyses.
This will necessarily lead to differ-ing interpretations, complicating precise evaluation.6 ConclusionsWe have presented a step towards unifying syntacticannotations under the Stanford dependency schemeand assessed the feasibility of this unification bydeveloping and evaluating a conversion from LinkGrammar to the Stanford scheme.
We find that ahighly reliable transformation can be created, giv-ing a precision and recall of 98.0% and 96.2%, re-spectively, when compared against our manually an-notated gold standard version of the BioInfer cor-pus.
We also find that the performance of the BioLGparser is not adversely affected by the conversion.Given the clear benefits that the Stanford schemehas for domain analysis, the conversion increases theoverall suitability of the parser to IE applications.Based on these results, we conclude that convertingto the Stanford scheme is both feasible and practical.Further, we have developed a version of theBioInfer corpus annotated with the Stanford scheme,thereby increasing the usability of the corpus.
Weapplied the LG-SF conversion to the original LGBioInfer annotation and manually corrected the er-rors.
The high annotator agreement of above 97%precision and recall confirms the stability of the SFscheme.We have also demonstrated that the unificationpermits direct parser comparison that was previouslyimpossible.
However, we found that there is a cer-tain accumulation of errors caused by the conver-sion, particularly in a case when two distinct rulesets are applied.
In our case, we estimate this errorto be on the order of several percentage units, never-theless, we were able to establish the relative perfor-mance of the parses with a strong statistical signif-icance.
These results demonstrate the utility of theStanford scheme as a unifying representation of syn-tax.
We note that an authoritative definition of theStanford scheme would further increase its value.AcknowledgmentsWe would like to thank Erick Alphonse, SophieAubin and Adeline Nazarenko for providing us withthe lp2lp software and the LLL conversion rules.
Wewould also like to thank Andrew Brian Clegg andAdrian Shepherd for making available the data andevaluation tools used in their parser evaluation.
Thiswork was supported by the Academy of Finland.31ReferencesErick Alphonse, Sophie Aubin, Philippe Bessie`res, GillesBisson, Thierry Hamon, Sandrine Laguarigue, Ade-line Nazarenko, Alain-Pierre Manine, Claire Ne?dellec,Mohamed Ould Abdel Vetah, Thierry Poibeau, andDavy Weissenbacher.
2004.
Event-Based InformationExtraction for the biomedical domain: the Caderigeproject.
In N. Collier, P. Ruch, and A. Nazarenko, ed-itors, COLING NLPBA/BioNLP Workshop, pages 43?49, Geneva, Switzerland.Sophie Aubin, Adeline Nazarenko, and Claire Ne?dellec.2005.
Adapting a general parser to a sublanguage.
InG.
Angelova, K. Bontcheva, R. Mitkov, N. Nicolov,and N. Nikolov, editors, Proceedings of the Interna-tional Conference on Recent Advances in Natural Lan-guage Processing (RANLP 05), Borovets, Bulgaria,pages 89?93.
Incoma, Bulgaria.Sophie Aubin.
2005.
LLL challenge - syntactic analysisguidelines.
Technical report, LIPN, Universite?
ParisNord, Villetaneuse.Ann Bies, Mark Ferguson, Karen Katz, and Robert Mac-Intyre.
1995.
Bracketing guidelines for treebank iistyle.
Technical report, Penn Treebank Project, Uni-versity of Pennsylvania.Eugene Charniak and Matthew Lease.
2005.
Parsingbiomedical literature.
In R. Dale, K. F. Wong, J. Su,and O. Y. Kwong, editors, Proceedings of the Sec-ond International Joint Conference on Natural Lan-gage Processing, Jeju Island, Korea, pages 58?69.Eugene Charniak.
1999.
A maximum-entropy-inspiredparser.
Technical report, Brown University.Andrew Brian Clegg and Adrian Shepherd.
2007.Benchmarking natural-language parsers for biologicalapplications using dependency graphs.
BMC Bioinfor-matics, 8(1):24.Michael Collins.
1999.
Head-Driven Statistical Modelsfor Natural Language Parsing.
Ph.D. thesis, Univer-sity of Pennsylvania.Marie-Catherine de Marneffe, Bill MacCartney, andChristopher D. Manning.
2006.
Generating typeddependency parses from phrase structure parses.
InN.
Calzolari, K. Choukri, A. Gangemi, B. Maegaard,J.
Mariani, J. Odijk, and D. Tapias, editors, Proceed-ings of the 5th International Conference on LanguageResources and Evaluation (LREC 2006), pages 449?454.Janez Dems?ar.
2006.
Statistical comparisons of clas-sifiers over multiple data sets.
Journal of MachineLearning Research, 7:1?30.Jing Ding, Daniel Berleant, Jun Xu, and Andy W. Fulmer.2003.
Extracting biochemical interactions from med-line using a link grammar parser.
In B. Werner, editor,Proceedings of the 15th IEEE International Confer-ence on Tools with Artificial Intelligence, pages 467?471.
IEEE Computer Society, Los Alamitos, CA.Katrin Fundel, Robert Kuffner, and Ralf Zimmer.
2007.RelEx?Relation extraction using dependency parsetrees.
Bioinformatics, 23(3):365?371.Jin-Dong Kim, Tomoko Ohta, Yuka Tateisi, and Jun?ichiTsujii.
2003.
GENIA corpus?a semantically an-notated corpus for bio-textmining.
Bioinformatics,19:i180?182.Roger Levy and Galen Andrew.
2006.
Tregex and Tsur-geon: tools for querying and manipulating tree datastructures.
In N. Calzolari, K. Choukri, A. Gangemi,B.
Maegaard, J. Mariani, J. Odijk, and D. Tapias, ed-itors, Proceedings of the 5th International Conferenceon Language Resources and Evaluation (LREC 2006),pages 2231?2234.Dekang Lin.
1998.
A dependency-based method forevaluating broad-coverage parsers.
Natural LanguageEngineering, 4(2):97?114.Sampo Pyysalo, Tapio Salakoski, Sophie Aubin, andAdeline Nazarenko.
2006.
Lexical adaptation of linkgrammar to the biomedical sublanguage: a compara-tive evaluation of three approaches.
BMC Bioinfor-matics, 7(Suppl 3).Sampo Pyysalo, Filip Ginter, Juho Heimonen, JariBjo?rne, Jorma Boberg, Jouni Ja?rvinen, and TapioSalakoski.
2007.
BioInfer: A corpus for informationextraction in the biomedical domain.
BMC Bioinfor-matics, 8(50).Fabio Rinaldi, Gerold Schneider, Kaarel Kaljurand,James Dowdall, Andreas Persidis, and Ourania Kon-stanti.
2004.
Mining relations in the genia corpus.
InProceedings of the Workshop W9 on Data Mining andText Mining for Bioinformatics (ECML/PKDD?04),pages 61?68, Pisa, Italy.Gerold Schneider.
1998.
A linguistic comparison ofconstituency, dependency and link grammar.
Master?sthesis, University of Zu?rich.Daniel D. Sleator and Davy Temperley.
1993.
ParsingEnglish with a Link Grammar.
In Third InternationalWorkshop on Parsing Technologies.Yoshimasa Tsuruoka, Yuka Tateishi, Jin-Dong Kim,Tomoko Ohta, John McNaught, Sophia Ananiadou,and Jun?ichi Tsujii.
2005.
Developing a robust part-of-speech tagger for biomedical text.
In P. Bozanis andE.
N. Houstis, editors, 10th Panhellenic Conference onInformatics, volume 3746, pages 382?392.32
