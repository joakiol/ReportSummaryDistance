iAN APPROACH TO NATURAL LANGUAGE IN THE SI-NETS PARADIGtlAmedeo Cappelll, Lorenzo l l o re t t iI s t i tu to  di Llngulstlca Computazionale-CNRVia della Faggiola, 3256100 P lsa -  ItalyABSTRACTThls article deals with the interpretationof conceptual operations underlying thecommunicative use of natural language (NL) withinthe Structured Inheritance Network (Sl-Nets)paradigm.
The operations are reduced to functionsof a fo~a l  language, thus changing the level ofabstraction of the operations to be performed onSI-Nets.
In this sense, operations on SI-Nets arenot merely isomorphic to single epistemologlealobjects, but can be viewed as a simulation ofprocesses on a different level, that pertaining tothe conceptual system of NL.
For this purpose, wehave designed a version of KL-ONE which representsthe eplstemologlcal level, while the  newexperimental language, KL-Conc, represents theconceptual level.
KL-Conc would seem to be a morenatural and intuitive way of interacting withSI-Nets.I GOALSThe goal of our work is to interpretconceptual operations underlying the communicativeuse of natural language within the StructuredInheritance Networks (SI-Nets) paradigm.
In otherwords, this means using eplstemological primitivessuch as Concepts, Roles and StructuralDescriptions (Brachman, 1979), to represent theseconceptual  operat ions .On the one hand, epistemological formalism,which is explicit and clear, can clarify thebehaviour of conceptual operations of NL.lSy the use of SI-Nets formalism as a meansof description, a new perspective can be broughtout, since this formalism makes it possible torepresent objects as data types structured in acomplex way instead of considering them as mezRatomic elements.
This feature Is likely to changethe nature of the operations to be carried out onobjects thus leading us to deal with thecomplexity of many phenomena in a more adequateway.On the other hand, this can lead to aninvestigation of the relationships between theconceptual aspects of NL and the epistemologicalprimitives, in order to discover how the latterare used by the previously taentioned operations.In fact, we attempt to find out whether anisomorphism exists between objects and operationsof NL and those used by epistemology.According to Brachman (1979), five differentapproaches to the representational problem can beestablished: implementatlonal, logical,eplstemological, conceptual and linguistic.
Eachof them uses its own primitives so that the fivelevels can be interpreted as a hierarchy whereeach level involves different degrees ofabstraction.By virtue of this interpretation, we havetried to extend epistemology in a conceptualperspective.
Our current approach considersepistemology as a starting point, thus looking atthe conceptual level as one of the possible targetpoints.
This goal can be achieved by changing thelevel of abstraction of the operations to beperformed on SI-Nets.
Consequently, operations onSI-Nets could assume a different aspect, that isto say they could be viewed not as merelyisomorphic to single eplstemologieal objects butas a simulation of operations lylng on a differentlevel, for instauce, that pertaining to theconceptual system of NL.
This hypothesis canreduce SI-Nets to the level of an internalmechanism covering only abstract datarepresentation, whose structure is not transparentto the user.
In  this case t i le user interacts withthe internal system by means of a separateexternal framework.In order to achieve this goal we havedesigned and i~Iplemented a language, KL-Hagmawhich represents our epistemologlcal level.
We arenow designing and Implementing an experimentallanguage, KL-Co nc, which should cover theconceptual level and ~lhlch uses KL-itaglaa as one ofits internal co,mpo.ents.The rest of the article will be devoted to adescription of these two languages introducingconsiderations concerning their relevance tolinguistic analysis and knowledge representation.We are confident that our approach can haveinteresting Ir,~plications for both  these fields,122Since KL-Cone .functions can be used to describelinguistic entities in te~s  of conceptualoperations and may be viewed as a more natural wayof interacting with SI-Nets.I I KL-MAGMAKL-Magma is a version of KL-ONE implementedIn MACt~-Lisp (Aslrelll et al 1975).It is a f~ language similar to the onedescribed in Brach~nan (1979), Brac1~an et al(1978), which also takes into account the versionsgiven in Cappelll and Morettl (19S2) and Porta andVlnchesl (1982).
As in KL-One, ~\[L-Hagma formalobjects are Concepts, Roles and StructuralDescriptions.Concepts are descriptlonal structuresproviding an intenslonal representation of thedomain, i. e. prototypes and individuals.Roles are descriptional structuresrepresenting parts of Concepts, i. e. propertiesof prototypes and individuals.Structural Descriptions are sets ofrelationships between Roles which give a whollstlcstructure to Concepts.Objects are connected with one another viaCables and Wires, thus resllzing StructuredInheritance.In our current approach KL-Hsgma is mainlyused as a declarative model of abstract datastructures.
It has no mechanism like the MSSAlgorithm (Needs, 1981) or the KL-One Classifier(Sclmolze and Lipkis, 1983) which cover proceduralaspects lying within epistemology, thus reachingvaluable results in discovering new types of logicby deeply exploiting SI-Nets semantics.
Instead,we have tried to discover types of proceduralltyexternal to the eplstemological level andpertinent to the level we intend to represent.
Atany rate, we intend to govern epistemologicalprocesses by the external mechanism.
In otherwords, this means assuming, for instance, thelogic of subsumptlon , which is peculiar toepistemology, not as an autonomous deductivemechanism, but, instead, as a possible processcontrolled by the functions of the higher levellanguage.III WIIAT TYPE OF CONCEPTUAL OPERATIONS ?The conceptual operations of NL we intend tointerpret are, for instance, Indlvldustions ofobjects, evaluations of objects, evaluations ofproperties of objects, evaluations ofconfigurations of objects and so on.Operations of this kind are  trlggered byarticles, adjectives, prepositional phrases,relative clauses and so on.
These operations,already intuitively described in classicalLinguistics, have been given more attention byinvestigations based on Logic.
In the logicparadigm they can be viewed as classes, Sets,predicates etc..In our opinion, the nature of theseoperations and, consequently, the description weintend to give of them, are not completely coveredby logical analysis.
Interesting results have beenobtained by combining traditional logical systemswith extensions of lambda calculi (~Jebber,1978;1981).
However, the types of complexprocedurality peculiar to the operations have no~yet been given a precise description; that is tosay, procedurality has not been reduced todefinite sets of restricted and clear procedures.Let us now introduce an example.
TheItalian definite and indefinite articles (il, un)can be described as follows:a) indlvlduatlon of a specific object;b) indlviduation of any one object;c) reference to an abstract prototype.In terms of logical description a) and b)may correspond to the iota operator and theexistential quantifier of Logic; c) is similar tothe universal quantifier even if the notion of aprototype is different, since it has anintenslonal nature.However, we think that tlle three possibledescriptions of Italian articles may include typesof operations not covered by the use of the abovementioned logical operators.
The article, likemany other linguistic entities, integratesdifferent kinds of operations which, at the sametime, manipulate descriptions of prototypes andindividuals, search into different kinds ofmemory, etc.Let us introduce a new example.
Theadjective is one of the more conlplex phenomena ofNL which cannot be reduced to the notion ofpredicate since it triggers a set of reasoningprocesses, that is to say, the manipulation ofparts of knowledge.The following NP:I. un bambino rossomay be interpreted as: a child has hair,hair has a color, the color can be red.
This NPcannot be literally translated into Englishwithout adding more information; the appropriatetranslation is : a red-halted child.In terms of SI-Nots this process can berepresented as shown in figure I, assuming that123every lexlcal item of the NP has its ownintensional representation.Figure IHowever, the adjective does not specify allthe steps of the reasoning process that ittriggers, but only indicates, together with thename, the two extreme points of the chain leavingthe intermediate undefined.
The entire process,using generic knowledge as the reference point, isshown in Figure 2.Figure 2It would be oversimplifyiug, as stated above,to use the notion of predicate to interpret thiscomplex process as well as the other possibleinterpretation of the adjective: the onecorresponding to tile notion of "type of" aQ in theNP "a red color" (see fl~ure 3).Figure 3This type of phenomena can be investigated bydeeply exploiting the structure and the semanticsof SI-Nets.
The structure of a role can be usedas configuration of objects which are likely to bemanipulated by complex processes not yet deeplyinvestigated from any other viewpoint than theeplstemologlcal one.
Once considered as a complexllnk, as it actually is, a role may be the locuswhere different processes can be triggered.
It maybe used simply to satisfy a structure of anotherrole lying higher within the network or to triggerthe complex processes we were talking about.
Thetwo behavlours mentioned exhibit different levelsof abstraction; in the former case this meansperforming eplstemologlcal operations, while inthe latter we simulate processes of a conceptualsystem used by NL.IV WHY A NEW LANGUAGE?The question now arises whether it ispossible to reduce these types of operations to aset of functions of a formal language each ofwhich covers a well defined process whichcorresponds to a well defined set of operations onSI-Nets - to a set of KL-Magma functions.The choice of a new language has manymotivations:a) from the conceptual viewpoint, this meansreducing operations to functions that are welldefined from a semantic viet~polnt which lendclearness to tile process to be represented.a) from the epistemological viewpoint, it isreasonable to think that a language, such asKL-Magma, may be extended by another language thusachieving a higher degree of abstraction.c) a language is a uniform mechanism for theintegration of interpreters of several symbolicprocesses.
This integration is likely to bring outmore clearly relevant phenomena of the processrepresented.V KL-CONCOn the basis of the linguistic assumptionspreviously outlincd and using KL-Hagma as alanguage which handles SI-Nets, we are nowdesigning and implementing an experimental,language, KL-ConL, whose functions try to simulatethe conceptual operations previously described.A.
KL-Conc: Internal OrganizationBefore describing KL-Conc functions indetail, it is worth while discussing its internalorganization.124In the framework of KL-oNE, a relevantdistinction has been drawn between theTerminological Box (T-Box) and the Assertional Box(A-Box) (Brachman, 1981).
The T-~ox maintains thedetailed description of the objects while theA-Box contains the set of the assertions on theobjects.
The former corresponds to the abil ity ofdescribing by the use of NPs, and the latter tothat of constructing complex sentences.A discussion has arisen whether it Ispossible to handle the two boxes, which correspondto two different areas of memory, using the samelanguage.In KL-O~E, new functions have been added inorder to glve it an assert~onal power (nexus,context) (Woods 1979).A recent extellsion of KL-O~IE (Brachmsn etal., 1983) has adopted the solution of crestingtwo distinct languages: one for the T-Box and theother for the A-Box.
The fon~er Is a sort ofKL-ONE viewed in a functional way while the latterIs a language based on First Order PredicateLogic.KL-~IACHA is only able to handle the T-Boxand it has no assertional power.
Instead, byKL-Cone we are trying to design a language whichcovers both terminological and assertionalaspects, even if it is more biased towardsassertlonallty.
It is our intention to handle theT-Box mainly in an assertlonal way.In order to achieve thls goal we haveintroduced the distinction between Long TermHemory (L~I) and ~orklng |~emory (~,I) which in partcovers the traditional one between T-Box andA-Box.The LT~' is represented in EL-Magma datastructures; this contains descriptional knowledgeabout generic and individual objects.The W~!
contains the history of the objectsorganized in a structured way.
This is thecentral component of our current hypothesis.
The|;H contains the traces of contextual relationshipsbetween objects, as well as operations triggeredon and by objects; it can also contain othersymbolic systems.
The task of the ~JM is mainly tohold hypotheses to be mapped onto the LT~!
whichrequires the cooperation of several interpreters.The Introduction of a larger number ofmemory spaces increases the power of the language.For instance, a structured WU is likely to improvethe number of s~nbolic systems interacting withone another.
This makes It possible to insert intothe language functions based on differentprocesses.
Taking for instance the history of theobjects as a reference point, the objectsthemselves can be accessed according as theyappear in the time flow.
The function:<LAST arbitrary_name>returns the  last object, created or manipulated,belonging to the class named by arbitrary n~ze.
Inother words, this allows the user to refer toobjects using anaphorical references, that is tosay using a s~nbolic system which is organized andrepresented in a different way from epistemology.By the WM we are trying to create the basicmechanism to handle these types of processes.B.
KL-Conc: External OrganizationKL-Conc functions handle real world objects,so the user only needs to know a set of functionsto be applied to objects.
In this way, thestructure of the Sl-?let which internally organizesthe data, is hidden; the only t~ta which aretransparent are objects, which may be individualor generic, together with syntactic rules forcombining functions.
These last are very flexible.Objects can be accessed using arbitrary names orby means of syntactic combinations whichconceptually correspond to complex tests on thenature of objects, the configuration of objectsetc..
Objects can be accessed according as theyappear in the time flow.The user can use the same name both forgeneric and individual objects.
This is madepossible by means of an internal generator ofnames which, starting from the name of a genericobject, provides any individual of that class witha different name.
This feature covers the part ofthe naming system of NL which uses the same namefor individuals and prototypes.
This does notcover the use of proper names which has been takenin JARGON (Woods, 1979) as the only means fornaming individuals, thus oversimplifying the realsystem used by NL (Mark, 1981).Objects can be accessed without the use ofnames, but by means of functions or combinationsof functions in order to per fo~ complex tests onthe nature of objects.
This means referring toobjects by testing properties or configurations.C.
KL-Conc FunctionsKL-Conc has functions for creating, testingand retrieving objects.
This is the list of tilefunctions so far designed:GENNEUINDJUSTONEANYO~:ESOMEALLLASTADD PROPERTYADD--CONFIGURATION OF PROPERTIESTEST PROPERTYTEST CONFICURATION OF PROPERTIESThe semantics of some KL-Cone functions maynow be described in order to clarify how they125realize our linguistic assumptions.
The semanticsis given in terms of operations on SI-Nets.As far as generic knowledge i s  concerned,the function:<GEL\] arbltrary_na~;,e>returns the generic concept named byarbitraryname.
If the concept does not exist inthe LTM a new generic concept is created.
The newconcept is then returned.
This function works bothas a predicate and as a creating function.
It isworth noticing that in KL-Hogma there are twodistinct functions, one for the predicate(<Generic__Concept._P anything>), and the other forcreating (<Create Concept name type of concept>).The function<PEWI~:D arbitrary_name>creates a new individual concept and establishesit as an individuator of the generic concept namedby arbitrary name; if the generic concept does notexist in t~e LT~I it is created.
An internalgenerator provides tile newly created individualconcept wlth o nnme.
This function corresponds tothe follo~llng set of KL-\[!agn.la functions:(Create_Concept X1Jndlvidual)((Hot (Generlc_Concept_P X) (Create Concept X"generic))(Establish as Individuator X1 X)This is one of the most "declarative"functions s ince  it creates a new individualconcept without searching in the LTN.
In otherwords, tile user must be conscious that the newobject is added to the L lqq and it is differentfrom all the other objects.
A more psychologicaloriented behavlour would require to test inadvance the nature of the new object in order todecide whether the object is similar to orcoincides with an individual object alreadyinserted into tile LTH.
The salute problem has beenovercome in KRYPTO.~: by means of tile swltcbTELL/ASK (Brachman et al, 19P3).The function<JUSTOr!E arbitrary name>verifies whether there exists a unique individualeither named by arbltrary, name or defined by testsor combinations of tests according to KL-Concsyntax.
In other words, this means verifying ifthe object is unique as to its name, or as to oneof its properties etc.
The KL-Conc expressionsfor the two meanings are, respectively:(JUSTO~E table)(JUSTONE (TESI~PROPERTY table red))This function has a complex behavlour,since, intuitively, it must verify the unlquenessof an object and must return: i) the individual ifunique; ll) the llst of individuals if more thanone satisfies the conditions .given by assertions;Ill) NIL if no invlvldual exists satisfying theconditions (Carnap, 1947).
The three answers havedifferent meanln~s, since they imply differentoperations to be triggered on the memory spacesor, at any rate, they have different effects onthe behavlour of functions where JUSTONE can benested.The function:<TEST CONFIGURATION OF PROPERTIES~rbltrary_namel arbltrary_name2>verifies whether arbitrary name2 exists in thehorizontal chain .
of r~les starting fromarbitrary_namel (see Figure 4)1 ?
?
L ?QO *Figure 4BY the function:<ADD_PROPERTY arbltrary__namel arbltrary_name2)we intend to add roles to concepts so that theuser needs not have any specific kno~Jledge aboutthe distinction between generic and instance rolesor, seen from a different viewpoint, betweenproperties of prototypes and properties ofindividuals.
Taking NL as the reference point, wethink that the above mentioned distinction ispeculiar only to certain linguistic elements; inthe case of operations on propertles, nodistinction is made; it is the conceptualoperations governing the operations on propertiesthat control the correct application of the addingor testing properties.
Consequently, the functionADD PROPERTY must be designed In order to make itpos~Ible to trigger the correct proceduresdepending on the type of objects which it isapplied to.
For this purpose, we intend to use ametarepresentation of KL-Hagma (Cappelli et al,1983) which, on detecting tile type of object,automatically apply the appropriate procedures.This implies a system which creates or testsknowledge structures interpreting its own syntax.Let's now briefly describe two possiblebehavlours of this function.Wtlen applied to individual concepts, thlscreates a new instance role establishing it as a126satisfler of a higher generic role of the genericconcept ancestor of the individual concept.
If apossible generic role does not exist it is createdwithout inserting any V/R in the generic role,since it could be a more general concept than thegeneric concept ancestor of the value of the newlycreated instance role.
The structures created bythis function are shown in figure 5 by dottedlines."
~ 0 / /  IThe functions described in this articlerepresent only a subset of the operations whichcan be embodied in tile language.
In this sense,the number of KL-Conc functions is likely to beincreased in order to cover new processes.So far, we have designed the functions forthose operations which exhibit the same behaviourwhatever domain they are applied to, since theyrepresent the "deep" behavlour of syntacticelements.
It is to be emphasized that we havetried to reduce to the fomn of functions of alanguage, all the operations of NL which aredomaln-lndependent and which represent aspects ofthe abstract syntactic ability of structuringknowledge facts (Cappelll e ta l .
,  1983; Cappellland Moretti, 1983)Using KL-Conc it is possible to investigatehow linguistic elements can be described in temnsof conceptual operations.
This is a further steptowards the linguistic level.
On reaching thislevel, the task will be to discover how theconceptual operations are embodied in linguisticforms.The previously mentioned Italian articles maybe described as follows:Figure 5~en applied to generlc concepts, thefunction adds a new generic role, trying to linkit with a higher generic role.
If no generic roleis found, a higher generic role is created withoutproviding it with any information other than theone inferred from the structure of the newlycreated subrole.VI CONCLUSIOtISSome conclusions may now be drawn both froma linguistic sad a knowledge representationviewpoint.From a linguistic viewpoint some relevantfacts must be pointed out.First of all, the level of integrationreached by the construction of a uniform language,can bring out more clearly the nature of manyphenomena of \[;L, since it is possible to puttogether many processes which cooperativelycontribute to the realization of a singlephenomenon.
This means looking at the complexityof HL with the aid of a powerful symbolicInstr~nent, capable of handling contemporaneouslyseveral aspects of that complexity, thus reachinga higher degree of adequacy.
In designingKL-Conc, we aim to create a framework which canextend the possibility of investigating andrepresenting these phenomena.
(Definite Article lambda (x)(or (GE~ x)(Jus'rONE x)))(Indefinite Article lambda (x)(or (CE~ x)(ANYONE x) ))From a knowledge representation viewpointKL-Conc would seela to be a means for interactingwith SI-Nets in an intuitive way.
The user is notrequired to have a specific knowledge of Sl-Netsfo~iallsm; he only needs to know a set offunctions to be applied to objects.In this sense KL-Conc assumes a more naturalaspect, thus overcoming the constraint of astructure-orlented language such as KL-Ha~zLa.This feature has been obtained by handling Sl-~etsin a more compact way.
KL-Conc provides the userwith a set of functions which are not isomorphicto single eplstemologlcal objects but which handlepieces of network starting from discontinuousinformation.This weakness, peculiar to NL, is madepossible in KL-Conc by assuming theepistemologlcal level as a reference schema,instead of a reductlonlst for,uallsm.
This meansintroducing mechanisms for relaxing the rules ofKL-Ha~sa.
In this way KL-Conc can be seen as a"constructive" system (in the sense of Korner1970) which manipulates its "'factual" system(KL-Magma) in an intultlonistic way.Finally, KL-Conc suggests a different way ofexploiting spreading activation mechanisms(Quilllan, 1968) using several symbollc systems127organized by the ~II instead of considering the,n asalgorithmic devices internal to SI-Nets (Woods,198~:VII P, EFERENCESAsirelll P., C. Lami, C. l:ontangero, G. Pacini, H.Slmi, F. Turin|, ":L~CHA-Lisp Reference Hanual",N.T.
C75-13, I.E.I CNR, Pisa , 1975.Brachman R., E. Clccarelll, ~.
Greenfeld, H.Yonke, "KLONE P.eference ~4anual", Report n.3848, Bolt Beranek and Ne~.~:mn Inc., Cambridge(Hass.
), July 1978.Brachman R. J .
,  "On the Eplstet~3ologlcal Status ofSemantic Networks", in N. Findler (ed.
),Associative Networks: llepresentatlon and Use ofKnowledge by Computers, New York: AcademicPress, 1979.Brachman R .
J .
and If.
Levesque, "Assertions inKL-ONE", in Schmolze J. and Brachman R.
(Eds.
),Proceedings of the 1981 I'L-Or:E Workshop, Reportn.4842, Bolt F, eranek and Hewman Inc.,Cambrldge(Hass.
), June 19R2.Braci~aan R .
J .
,  R. E. Fikes, 11.
J. Levesque,"KRYPTON: A Functlonal Approach to KnowledgeRepresentation", Fairchild Technical Reportn.639, FLAIR Technical Report n.16, Pale Alto(Ca.
), May 1983.Cappelli A. and L. Horettl, Introduzlone alKL-ONE, ILC-L~LP-1982-l, I.L.C.
CUR, Pisa, 1982.Cappelll A. , L. ~1oretti, C. Vlnchesi, "KL-Cone: aLanguage for Interacting with SI-Nets", inProceedings of the 8thlJCAl, Karlsruhe,Germany, August, 1983 .Cappelli A., L. Horettl, "Descrlzione dl alcunifenomeni dell" Italiano con un Linguaggio dlRapprcsentazlone della Conoscet*za", in Attl delXVII Congresso Internazionale di Stud| dellaSocteta ~ d l  Ltnguis~ica I ta l tana ,  U?btno,Italia, Septenlber 1983.Caruap \[~., "Heaning and Necessity", Chicago: TheUniversity of Chicago Press, 1947.Korner S., Categorlal Frameworks, Oxford: BasilBlackwell, 1970.Hark W. S., "Indivlduallty in EL-ONE ", inSchmolze J .C .
and R. J. Brachman (eds.
),Proceedings of the 1981 KL-OI'E Vorkshop, Reportn.
4842, Bolt Beranek and Ne~nan Inc.,Cambridge (Hass.
), June 1982.Porta O. and C. Vinehesl, "Un Slstema per laRappresentazione della Conoscenza : AspettiConcettuall e di Implementazione", unpublishedThesis , I.S.I, Pisa 1981.Qullllan H. R., "Semantic Hemory", in H.
Uinsky(ed.
), Semantic Information Processing,Cambridge (Hass.)
: HIT Press, 1968.Sehmolze J. C. and R. J. Brachman, "Proceedings ofthe 1981 KL-ONE Workshop", Report n. 4842, BoltBeranek and Newman Inc., Cambridge (Hass.
),June 1982.Se~,olze J. C. and T. A. Lipkls, "Classificationin the KL-ONE Knowledge Representation System",in Proceedings of the 8thlJCAl, Karlsruhe, WestGermany, August, 1983.Webber B .L .
,  "A Fomnal Approach to DiscourseAnaphora", 1978.Webber B. L., "Discourse Hodel Synthesis", in A.Joshl, B. L. Uebber and I.
Sag (eds.
), Elementsof Discourse Understanding, Cambrldge (Hass.
).198~.Woods W. A., "Research in Natural LanguageUnderstanding", Report n. 4274, Bolt Beranekand ~lewman Inc., Cambrldge (Hass.
), 1979.Woods W. A., "Abstract Algorithms andArcbltectures", in Woods W. A.
(ed.
), Researchin Knowledge Representation for NaturalLanguage Understauding, Report n. 4785, BoltBersnek and Newman Inc., Cambridge (Hass.
),November 1981.128
