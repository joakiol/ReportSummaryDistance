A Statistical Method for Extracting Uninterrupted andInterrupted Collocations from Very Large CorporaSatoru Ikehara, Satoshi Shirai and Hajime UchinoNTT Communication Science LaboratoriesTake 1-2356, Yokoshuka-shi, Japan(E-mail:{ikehara, shirai, uchino}@nttkb.ntt.jp)AbstractIn order to extract rigid expressions with a high fre-quency of use, new algorithm that can efficiently extractboth uninterrupted and interrupted collocations from verylarge corpora has been proposed.The statistical method recently proposed for calculatingN-gram of m'bitrary N can be applied to the extraction ofuninterrupted collocations.
But this method posed pro-blems that so large volumes of fractional and unnecessaryexpressions are extracted that it was impossible to extractinterrupted collocations combining the results.
To solvethis problem, this paper proposed a new algorithm thatrestrains extraction of unnecessary substrings.
This isfollowed by the proposal of a method that enable to extractinterrupted collocations.The new methods are applied to Japanese newspaperarticles involving 8.92 million characters.
In the case ofuninterrupted collocations with string length of 2 or merecharacters and frequency of appearance 2 or more times,there were 4.4 millions types of expressions (total fre-quency of 31.2 millions times) extracted by the N-grammethod.
In contrast, the new method has reduced this to0.97 million types (total frequency of 2.6 million times)revealing a substantial reduction in fractional and un-necessary expressions.
In the case of interrupted collo-cational substring extraction, combining the substring withfrequency of 10 times or more extracted by the firstmethod, 6.5 thousand types of pairs of substrings with thetotal frequency of 21.8 thousands were extracted.I.
IntroductionIn natural language processing, the importance of largevolume corpus has been pointed out together with the needfor technology of analyzing these linguistic data.
Forexample, in machine translation, there are many expres-sions that are difficult to be translated literally.
Phrasetranslations or pattern translations based on phrase orpattern dictionaries are considered very useful for thetranslations ofthese expressions.In order to realize these translation, it is required toidentify phrases of high frequency and patterns of expres-sions from the corpora.
There are many method proposedto extract rigid expressions from corpora such as a methodof focusing on the binding strength of two words (Churchand Hanks 1990); the distance between words (Smadja ndMakeown 1990); and the number of combined words andfrequency of appearance (Kita 1993, 1994).
But it was noteasy to identify and extract expressions ofarbitrary lengthsand high frequency of appearance from very large corpora.Thus, conventional methods had to introduce some kindsof restrictions such as the limitation of the kind of chains orthe length of chains to be extracted (Smadja 1993, Shinnouand Isahara 1995).Recently, a new method which can calculate arbitrarynumber of n-gram statistics for very large corpora has beenproposed (Nagao and Mori 1994).
This method has made itpossible to automatically and quickly extract and tabulatesubstrings of any length used in source texts.
Unfortu-nately, in this method, so many fractional substrings thatwere grammatically and semantically inconsistent werebeing extracted that it was difficult to extract combi nationsof expressions collocated at separate locations (i.e.
inter-rupted collocation) which requires a search of the sourcetext by combining the strings thus extracted.
Thus, theanalyses had to be limited into small texts (Colier 1994).To overcome this problems, this paper first, proposes amethod that can automatically extract and tabulate un-interrupted collocational substrings and without omissionfrom the corpora in the order of substring length and fre-quency under the condition that fractional substrings areexcluded.
Second, using the results of the first method, italso proposes a method that can automatically extract andtabulate interrupted coUocational substrings.2.
N-gram Method and the Problem Involved(1) Conditions for Collocational Substring extradtionIn order to extract uninterrupted collocation withoutomission and to minimize extraction of fractional sub-strings, we will introduce the following three conditions.1st Condition: Substrings can be extracted in the order ofthe number of matching character (string length).2nd Condition: Substrings can be extracted in the order offrequency of use.3rd Condition: Substrings hould be extracted according tothe principle of the longest match.Fig.
1 Substrings to be ExtractedHere, 3rd condition means that when a string (for instancea in Fig.l) is extracted from a certain location within thesource text, any substring ( B, T ) that is included withinthe string ( a ) is not subject o extraction.
But shouldsuch substring ( 6 ) be located in a separate or overlap574position, it is to be extracted.
(2) Conventional Algorithm for N-gram StatisticsBefore discussing the algorithm which satisfies theprevious conditions for uninterrupted collocational sub-string, let's consider the Nagao and Mori's algorithmpropose for N-gram statistics.\[Statistical Method for N-gram\]Assume that the total number of characters in asource text (corpus) is N.Procedure 1: Preparation of Pointer TablePrepare PT -0  (Pointer Table-O) of N records of SP(Source Pointer), with the values of 0, 1, 2,... i,...,N-1.Here, the value i represents the String-word i which is thesubstring from position i to the last character (N-1address) in the source text.Procedure 2: Pointer Table SortingThe records of .PT-0 are sorted in the order of corres-ponding String-words to obtain SPT-O (Sorted PointerTable-0).Procedure 3: Counting of Matching CharactersThe characters of String-word i is compared with that ofthe next String-word i+1 from the beginning.
The numberof matched characters are registered in the field of a NMC(Number of Matching Character) in the record i.Procedure E: Extraction of SubstringsComparing the values of NMCs of record i and that of therecord i+1 of the SPT from i=1 to i=N-1,  substrings areextracted and their frequency are determined* 1.
(3) Problems of N-gram StatisticsNagao and Mori's method obviously fulfills require-ments of Conditions 1 and 2, but not Condition 3.
It isexpected that the accurate frequency of any substring a isobtained subtracting the frequency by the frequency of theother substring ~ which is included in substring o~ *2.Unfortunately, this does not satisfy Condition 3.
At thetime when extracted substring list has been compiled,information regarding mutual inter-relationship betweenthe extracted substrings within the original text has beenlost rendering calculations impossible.3.
Extraction of Uninterrupted Collocation3.1 Invaliditafion of Extracted Substfings(1) Co-relations between Extracted SubstringsIn order to satisfy the requirement of Condition 3, con-sider the extraction of n-gram substring after extracting m-gram substring.
The problem arises when there is acertain overlap between them as shown in Fig.1.The Case of Absorbed Relation (Case 1) can be classi-fied into three sub-cases as shown, but regardless of whichsituation, the m-gram substfing is absorbed in the sub-string of n-gram and therefore there is no need to extractsuch a m-gram substring.
Thus, when extracting n-gramstrings, there is a need to invalidate the related record ofthe SPT so that m-gram strings do not become involved inprocesses to follow.Fn  g,'am \].
,   ram .
.
.
.
.
!.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
,Coincided Beginning< case 1 - 1 >I I1 gramL'2.L~)2.KZ:I \] Ill grain \]K~!Lg.!!
!CZ\]Holy Included Coincided Ending< ease l -  2> <case l -  3 ><Casel> Absorbed relationt~-n gram \]............................ l:--I11.~ r alll ............ : \[-rl gram \]preceded by m - gram preceded by tl - gram<case2-1 > < case2- 2 ><Case2> Overlapped relationFig.
2 Relationships between Extracted SubstringsThe Case of Partially Joint Relation (Case 2) can befurther classified into two sub-cases.
But in eithersituation, the m-gram string and n-gram string merelyoverlapped and therefore they are need to be extractedseparately.
(2) Necessity of Validity Check for String-wordsWhen one substring is extracted, in order not to extractthe absorbed string from the same part of sotlrce textwhere the substring was already extracted (Case 1),related records of SPT need to be checked if the record isvalid or not before extracting the next substring.For example, the substring of 6 characters in the String-word 3 shown in Fig.
3 was extracted, the substring ofString-words 3,4,5,...,8 need to be set as invalid for thelength equal or less than 6,5,4,.-.,1 characters from thebeginning.Source Address: 1 2 3 4 5 6 7 8 9 10 11 ?
?
?r- 6 gramSource Text: A B /C  D E F G I\[ I J K .
?
?Addres Invalid Range i / -~St r ing -word4 < 5 ch I D E F G H I K5 4oh \[E F C ~-{.,i I K6 < 3 ch IF  G H i \] K7 < 2 ch G H I  l K8 ~ 1 ch \ [H I  I KFig.3 Example of Validity check13.2 Extracting AlgorithmHere, we propose an algorithm which satisfy Condition3 as well as Conditions 1 and 2.< Preparation >Fields of NSC (Number of Significant Characters) andRN (Record Number) are added to S IT -0  (Sorted PointerTable) used for N-gram statistics.<Algorithm (See Fig.4)>Procedure 1 thr_ough 3: Same as the N-gram statistics.Procedure 4: Significant Character DeterminationThe length of substrings to be extracted are decidedfrom NMC and written in the NSC field of SPT- 0.Procedure 5: Preparation of Augmented PTAfter sorting the SPT-0  in the original order, add aVP (Validity Flag) field to obtain an PT -  1.
* 1 Extraction is conducted based on the relation between the values of consecutive NMC.
Ddetails are in (Nagao and Mori 1994).
* 2 Recently, combining the frequencies of related substring, calculation was conducted(Kita, etal 1993) to obtain the frequencywhich satisfy the Condition 3.
But accurate results cannot be obtained by this method.575Procedure 6: Validity DeterminationAccording to the method shown in 3.1(2), check thevalidity of the suhstring pointed by the records of thePT -1  in the order of the record number and write theresults in the VF field.Procedure 7: Resorting of PT-1Re-sort he PT-  1 in the order of the values of SP fieldsto obtain a SPT- 1.Procedure 8: Extraction and TabulationBy referring to the SPT-1, the strings to be extractedare determined and their frequencies are calculated.An example of the algorithm is shown in Fig.4.
In thisexample, the types of substrings extracted by the conven-tional algorithm amounted to 24 with the total frequency of72.
In contrast, in the method proposed in this paper,these numbers have reduced to 5 and 10 respectively.4.
Extraction of Interrupted Collocation4.1 Conditions for ExtractionHere, let's consider combinations of 2 or more un-interrupted collocational substrings in different locationswithin a single sentence together with a method of deter-mining the frequency of them.
In this case, boundaryconditions of sentences and mutual relationship betweenthe extracted substrings need to be considered.
(1) Boundary Conditions of SentencesWhen considering the collocation of substrings within asentence, combinations ofexpressions spread over bordersof sentences need to be excluded.
But when a singlesentence includes other sentences, the extraction of thecombinations in units of sentences poses complications.To simplify matters, we first assume that the sub-strings which have any kinds of punctuation mark as apart of them are not extracted in the procedure of uninter-rupted collocation extraction.
This can be easily performedby restraining the comparison procedure after finding apunctuation mark in Procedure 3.
Second, we assumethat when a left quote character is found within a sentence,all characters are ignored until the right quote characterforming a pair with the former character.
(2) Relationships between Extracted SubstringsIn extraction of interrupted collocations, ubstrings thatare linked to or partially overlap one another are excludedfrom the scope of extraction.
Let's consider substrings aand ~0 which have been extracted from the same sentence.The positioning would be one of the three cases shown inFig.3.
Case (c) in which substring a and ~0 are separatefrom one another is a case of extracting interruptedcollocations, and Cases (a) and Co) are not*3.
(3) Order of Substring AppearanceIn the case of extracting interrupted collocations, theorder of appearance of substrings hould be considered.Hence, collocational substrings are extracted and countedtaking notice of the order of the appearance of eachsubstring.Beginning \[- ot ....(a) Connected ?
\[ ............ i EndL-, T .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Beginning !
V a -  \] End(b) OverlappedBeginning \[- a ~\ ]  \[" B ............. i End(c) Separated .
.
.
.
.
.
.a ,  B, 7" : Extracted SubstfingFig.5 Relations between Extracted two Substrings4.2 Extraction Algorithm\[Preparation\]Sequential number is given to all of the substringsextracted in Chapter 3 in the order of extractions.
TheseNumber are registered in the NES (Number of ExtractedSubstrings) field of the respective record in SPT- 1.Procedure 9: Re-sorting the SPT-1The SPT- 1 is sorted in the original order of the valuesof ST' fields.Procedure 10: Numbering of the sentencesSN(Sentence Number) field is added for entering thesentence number of original sentence to which one'srecord belongs.Procedure !1: Table condensationThe table obtained is condensed by procedures shownin the following to obtain a SPT-2".
(1) All fields other than the four, Sentence Numbers,ESN, NSC and RN are deleted.
(2) All records with no values in the ArES field are deleted.Procedure 12: Extraction of Interrupted CollocationHere, k is the number of substrings which composeinterrupted colocational expressions.
Then, all of the com-binations of k NESs for every sentence are written downinto a file and sorted.
And the number of the samecombination ofNES are counted.Thus, the substring list of interrupted collocations canbe obtained.
If the sentence number is given to everycombination list of NES, the sentences corresi~onding tothe extracted interrupted collocation can easily beidentified.The lower part of Fig.4 shows the application of thismethod for k=2.
In this case, there are possibility of 25combinations for 5 types of uninterrupted collocationalsubstrings obtained by chapter 3.
Out of these combi-nations, 7combinations were extracted as the combinationswhich collocate twice or more within the same sentence.And the total frequency of these amount to 14 times.5.
Experiments5.1 Uninterrupted Collocational SubstringsApplying the proposed method to the newspaper articlesof Nikkei Industrial News for three months (8.92 millioncharacters), uninterrupted and interrupted coUocationalsubstrings were extracted.
In this experiments, XEROX*3 In the case of (a), there would be a combination of substrings which is regarded as a interrupted collocation.
However thefrequency of such a pair is limitted to 1.
Then there is no need to consider.576'ancient' 'ancient' 'of' 'qtrange' 'ciike' .mukasi mukas~ no oKas\]na oKasl\ [Source  Text \ ]  it-,'la~b it-,'D~bo) 2Sh~btx ~a~bo l~'~fl%b~ la:t~blat 2SD~bt, a~fa~bo<)~eaning) This is a story of cakes ill very old day.
The story of the cake is strange story.tY\[O-O (Pointer Table)SP  String-Words i1 tb70, b?
;~ bl2 ~ b~5"70~ boo :3 b~;70, bo)~ ~4 t270, b?
~s~,:5 fl~boO~s70~bi Proc.6 bo_)#D~L?2:  Sortb7 o)~70, b t~s  \[8 a3D, big ~s~),;9 ~ bta)s~, b l:1 0 btg~s~O, bo :1 1 ?~70, bo ~i  l : i -12  g870~bo ~S70':13 ~bo ts'D~bibe $S70~ boo :t5  o :~a70~bogL!ci Prec.\ ]G  *aTe, b?l i t2 :  (;ountit7 :  ~xbo.
)l:tlg b\[ N~C18  bo)llfg bI,-t:~ 9 ff~lIt2 b~i:~s\[20 late bl~::t-S70",: Prec.
z21  ta: blJ:fS70~ L I l)eter~22 b~;t~370~b/g: NSC23 la~\]o, btg ~24 ~70, b ta ts  ~:28  la~lita b o ',29  I lat ;  bo :30  limbo311 be32 Lo.
.
.
.
.
.
.
.
.
.
.
.
.
.
!
'cake' 'of'  :story' .
~s' 'qtrange' 'story'  .okasi no I~allaSl na  oKas lna  o l~anas l  O:Substr ingS1W(lataa5tga~o(?, ?)
J(@.
?)
I(?.
@) I(?.
?)
I Prec.
12(?, ?)
I Write((5), _(D) I down(@, ?)
I<(?, ~)) I -ZCI (?, @)1(@, ?
)1(?, ?)
I case of(?, ?)
I k:2(?, @)1(?, ?
)1(?, @)1(?, @)1(?, ?
)1(@, 0))1(@, @)1(@, @)1Prec.
12\[ I SortingSPT 0 (Sorted Pointer 'l'r, ble) I~T |V N NF S M R N SPC C1 3 0 300 2 2 10  20 1 1 17  31 3 3 29!4Prec.
5 1 3 3 8 5Re-sorting 0 2 2 14  60 1 1 24  71 5 5 1 8044  6 90 3 3 12  100 2 2 20  11131  4120 2 0 11 130 1 0 19  140 0 0 32  15\[Prec.
6\] 1 3 3 3 i 6Validity 1 3 2 9 17Check(VF) 0 2 1 15 :180 1 0 25  191 3 3 27  200 2 2 2201 1 16221 1 1 26  2:31 5 3 2240 4 :2  7 250 31  13  260 21  21 27  1!oo 28 290 2 0 23300 1 1 18  310 0 0 31  32(@, ?)
(?
), 0)) \[(?,(b)\] (@, (0)(~,  @) l~,~'~,  IC@,O))I (@, @)ICCD, (4))1 _((--9, (2))(~ ,~1 I(?, ?
)1I(@~@)JJ I Prec.
12I CoastingI n te r rupted~ol locat iona lFormer SubstringSN'  2S N VN NN F F S M R NS C C1(5) 130301 0 2 2 101 0 1 1 171 ?
1 3 3 291 ?
1 3 3 81 022141 0 1 1 2d1@155 11 0 414  6I 0 3~3' 121 0 22  201 ~ 1 3 1 41 020111 0 1 0 1 91 0 0 0 322(2) 1 3 3 32 ?
1 3 2  92 021  152 0 i 02@1332 0222 0 1 1,@))I 2 1 1 1~)1 2@i  5 3,?
)/ 2 o 42@~ 2 o 3 1?
)1 2 021  ~{~: @1 2 0 1 0(?,?)
2 @ 1 3 o2 0 2 02 0 1 12 0 0 0Pairs of substr ingSPT 2*s N NN E S S PS C :Proc 111 ?
3 1 Condense1 @ 3 4I ?
3 53 i 62 ~);3 172@3202 @ 5<4) 3I ?
: .< !
.... String~8P  wordLatter Substring a}ld Frequencyi i ~i,'D, b ii 2345:6:7 7 Prec.
g~70' b i  Sortingi 0  b tg ~s i*sD, b~13 #/~L,o : Proc.
lO14  (_,o ~S!
Numberingi 5  o ~d70~', for SNI6  $a~, bl17 1/~ be.
);18 b o)l~t !25 19 :  0)t~?g:27 20  l a tab l22 2 t ta l l1 :16 22  blI~Si26  2 :3  I~t~)~:2 2~ ~70~b!7 25 ;)~b~:l 3 26 br~i5 28  a~I~t~i2 8 29 I ; l t~b:2 3 3o ta bo \[18 3t  bo3 1 .
.
.
.
.
.
ij _.<Sentence List>?
kJ Sentence l i s t  forI./7 each pair ofI interrupted/ collocation_ _C4)l?ta::D 'Ca)~i U:me ::::eSPT 1" rOposed Metliod!N-gram Methodgram " '~ ' r  eqnency \'ttrequencySU~st r{n '~ Subs!rhtg5gram (1)~70, U~2:~2 ffs~o, b tS ~is 2__~:~ z .L/_Z.L.._:dgram ,- ;O~ ba  ~3 23gram ~70>U 2 ~D,U d= : ~ ..... 70, b'ta: 2bg~a 2@t~ts b 2 {arab 2?tYDSU 20D,  b 2Id ::,i, ~ ', ;,:, ~ 4 2 gram .
.
.
.
.
.
!
: \ ]  70, b 6< i = b ?
2boo 2}- :  i }~ 7"g 7i3 2I - t<2 \[1 2 r: -  -:: l:t ?2.
27 7  _Z ~'J" 70' 25: ..... ~ t~ 4F .
.
.
.
.
.
.
.
.
o~ 2: I,'t: 3- - 10 Total 72S P : Source Pointera N : Record NumberN M C : Number of matched CharactersN S C : Number of Signif icant CharactersV F : Validity flagN E S : Number of Extractc, d SubstringS N : Sentence NumberFig.
4 Example of Un in ter rupted  and In ter rupted  Co lh )cat iona l  Subst r ing  Ext rac t ion577ARGOSS 5270 (OS4.1.3) was used.
The memory capacitywere 48 MB.
(1) Characteristics of Extracted SubstringFrom the view point of the length and frequency, thenumber of extracted substrings are compared with thoseof the N-gram method and summarized in Table 1 andTable 2.
Some examples of extracted substrings are shownin Table 3.
And the examples of substrings with highfrequency are also shown in Table 4.Table 1.
Length and Number of Extracted Substringst  p  Proposed Metlgod N-gram Statistics a: Extract b: Total c:Extmct d: Total(;ran Substring Frequency Substring Frequency2 ~ 970,203 2.613,704 ,374,141 31,178,8975~ 591,901 ,476,922 ,960,487 10,808,45810~ 52,214 114,270 673,601 1,550,81720~ 1,792 3,692 177,298 359,810Ratioa/c b/d22.2% 8.38%20.0%13.7%7.
75% 7.
37%1.01% 1.03%Table2.
Frequency and Number of Extracted Substringsmp.
Proposed Methoda:Extract b: TotalFreq.\ Substring Frequency2~ 970,203 2,613,7045~ 67,321 551,44110~ 12,351 217,93420~ 2,288 92,80450~ 285 37,850100 ~ 76 24,167200 ~ 20 16,771N-gram Statisticsc:Extmct d: TotalSubstring Frequency,377,087 39,588,291882,217 31,288,701372,291 28,050,199169,375 25,871,96462,991 22,209,87530,316 19,961,96114,363 17,759,432Ratioa/c b/d22.2 % B.
60%7.
63% 1.76%3.
32% 0.
78%1.35% 0.
36%0.
45% 0.
17%0.
25Z 0.
12%0.
14% 0.
07%From these results, the following observations can beobtained.
@ Compared with the N-gram method, most of fractionalsubstring has been deleted, and the types m~d thenumber of the extracted substrings have highly reduced.For example, in the extraction of substrings with theTable 3 Examples of Extracted Substrings (in the ordergram Proposed Methodb~Ct,~7~ (436), ~'J'~t~N~')g (277), C 0)?~), (158),(make it that ~ ), (EC), (for this purpose),5 gram d J '~r~'~ (141), ~ 1 ~  (141), ~/Y~-;Z'(133),(market share), (consider that ~ ), (motors),&~b\]c_(130) ,  C~l<~,~b(126), c?,~,  (112),(enphasized that ~ ), (on the contrary), (subsequently ~ ),\[ 190,925 types Total 499,653 times \](to be ~ ing), (second),10 gram ~C&~Cf319~-9#2(19),  8 2~-~, /$>~'Y~(17) ,(it seems to do ~ ), (82 Japan shop),b-Cb~za ?
~ b ~  (16), 7 -2-'2 b >--)L H~N (14)(wonder if ~ do ~ ), (Washington 19 ),\[ 21,155 types Total 47,336 times\]length of 2 or more and the frequency of 2 times or more,the substring type reduced to 22.2 % and total frequencyof them reduced to 8.38 %.
This effect increases as theincrease of substring length.
In the case of substrings of20 or more characters, these number educed to 1%.
@ Most of substrings extracted by the proposed methodforms expressions as syntactic or semantic units andthere are few fractional substrings.
(2) Processing TimeIt took about 40 hours to make SPT-O*4.
But suc-cessive processes were performed very quickly (within onehour).5.2 Interrupted Collocational Substrings(1) Characteristics of Extracted SubstringsInterrupted collocational substrings were extracted forevery two substrings which had appeared 10 or more timesin the source text*5.
The results are shown in Table 5.And, examples of substrings with high frequency and withmuch characters in total are shown in Table 6.Table 5 Number of Extracted Pairs of Substrings~----___~_ ResultsFrequency -~- -~or more times _5 or more times10 or more times20 or more timesNo.
ofPair ofSubstrings6 ,54494123761TotalFrequencyof Pairs21,8299,0574,5562,291From these results, it can also be seen that expressionstypical to newspapers have been extracted.
Thus, using theoutput results, we can easily obtain interrupted collo-cational expressions as well as uninterrupted ones.of frequency) (cf.)
?
?
:Fractional substfingN-gram Statistics7~J:o~C(,~3(3710), ~Cb~'~, (2827), l<&~ &, (2753),(became to be ~ ), (be ~ ing but ~ ), (according to ~ ),\[<O ( /~ ~ (2721), ~ ~2~2 b ~ ~ (2334), ;5 C & IV- f~ (2286),(speaking about ~ ), (be done), ?
.
.
.
.
.tv-~2o~b~ (2079), & l j~(~ (1997), ~ t t2@\]~ (1849),.
.
.
.
.
.
, (explain that ~ ), (57 fiscal year),\[ 748,172 types Total 3,793,077 times \]b It & C ;5 ~.
J: ~ &, (273), ~ 7'b IV.
b 7~< & C ~5 ~V.
& (223),(from what ~ do), ?
.
.
.
.
.
,t~)J 5 7~ \[:.
b #_ & C 7) IV.
(223), t~ t:.
b ?c_ & C 7~ t< & ~ (222),~V.
b??.
A Y__ 7) tV.ck~ A (222), ~_~NItg~'}?~:i~N~ (208),(according to that ~ was), (second research party),\[ 132,865 types Total 345,232 times \]Examples of Substrings(frequency > 200 )Table 4 Examples of Substrings with High Frequency&b~9(586), &~\ ] t (512) ,  &b~1,~5(436), ~#_(325) ~35~(324), ~{(315)(to say that), (said that), (set as), (again), (is that), (photogralihy),bT'j~b, (302), &~o 7~< (283), N~ (281), (~i~ (278), ~J'NJL, N# (277), bT)~b (274), N-f > b (269),(but), (said that), (Tokyo), (Price), (EC), (however), (Point),~&~& (264), ~-}'~,~ (259), ~fc,  (236), C~t2(220), ~_?T<8) (204), ?<1~, (20I)\[ (one word), (sell term) (mere over) (this is) (for this sake), (yet)*4 Indirect sorting is conducted.
When this process is excuted within a memory by the computer which has a compareinstruction with indirect adressing for arbitrary length of fields, sorting time will be extremely shortened.
*5 It is expected that when the frequency of each substring is small, the frequency of their co- occurence is further,small.578Table 6 Pairs of Substrings with High FrequencyCollocationsofCompoundNouns4fllif~ ~ ~'~l#JlJl(257), qZ'~-g)I /~ :E- ,~'--X'( l l7)(price ~ sell time), (General ~ Motors)(Summit ~ ) (EC ~ the European Community)4 ~)> ~ ~.x,/~5"4 i~lgb"/-" (80)(lran ~ Japan Oil Industry) ~,~& {Z~do~L3~)~&){~_~'cT~ (9), ~oJ~?tl,gc~,P~&)~#_ (9),(did ~ but said that), (In the answer to ~ said ~ )(we talke that ~ ), (the contents is such that ~- )Collocationsof SentencePatterns(moreover the minister said that), (doing ~said ~)(the contents i  ~ and so), (did ~ also about ~ )b ~l~l~b ~ (5 bb ~(,1), : : )~ 0 ~: '~ 'o  (4), ~t~ bx~l~ b~ (4)(as if ~ looks -~), (ilamely ~ is ~ ), (either ~ or(2) Processing TimeIn the case of interrupted collocational substringextraction, processing time depend highly on the number ofcomponents of substrings.
In this experiment, he turn-around time was 1 or 2 hours where components ofcollocations to be extracted was limited to the substringswith the frequency of 10 or more times.6.
ConclusionThe methods of automatically identifying and extractinguninterrupted and interrupted collocations from very largecorpora has been proposed.First, from the view point of collocational expressionextraction, the problems of Nagao and Moffs algorithm forcalculating arbitrary length of N-gram has been pointed out.And, under the condition that fractional substrings arerestrained to be extract, a new method of automaticallyextracting and tabulating all of the uninterrupted collo-cational substrings has been proposed.
Next, using theseresults, a method for automatically extracting interruptedcollocational substrings has been proposed.
In this method,combinations of uninterrupted collocational substringswhich collocate at different positions within a sentenceare extracted and counted.The method was applied to newspaper articlesinvolving some 8.92 million characters.
The results foruninterrupted collocations were compared with that of N-gram statistics.
In the case of substring extraction with 2or more characters, conventional method yielded substringof 4.4 millions types and the total frequency of themamount o 31.2 millions.
In contrast, the method proposedin this paper extracted 0.97 millions types of substringsand a total frequency of them has reduced to 2.6 millions.In the case of interrupted collocational substring extraction,combining the substring with frequency of 10 times ormore extracted by the first method, 6.5 thousand types ofpairs of substrinks with the total frequency of 21.8thousands were extracted.From these results, it can be said that, viewed fromthe point of extraction of collocational expressions (as unitsof syntactic and semantic expressions), substrings obtainedby conventional methods include a voluminous amount offractional substrings.
In contrast, the method proposed inthis paper reduces many of such fractional substrings andcondensed into a group of substrings that can be regardedas units of expression.
As a result, it has been madepossible to easily calculate interrupted collocations andtogether with phrase templates and other basic dataregarding sentence structure.This paper used Japanese character chains to examinethe algorithm.
Yet this algorithm can be applied to arbitrarysymbol chains.
Various types of applications are possible,such as word chains, syntactic element chains obtainedfrom results of morphological nalysis or semantic attributechains which consist of each word being converted tosemantic attributes.
As shown in this paper, applications forJapanese character chains still involve output of someamount of fractional stings.
But when applications to wordchains or syntactic element strings are concerued, furtherrestriction of unnecessary elements are anticipated.References:Church, K. W. and Hanks, P. (1990): Word Associationnorms, Mutual Information and Lexicography, Compu-tational Linguistics, Vol.16, No.l, pp.22- 29Colier, R. (1994): N-gram Cluster Identification duringEmpirical Knowledge Representation Generation, TheComputation and Language E-Print ArchiveKita, K., Ogura, K., Morimoto, T. and Ueno,Y.
(1993):Automatically Extracting Frozen Patterns from CorporaUsing Cost Criteria, Journal of Information Processing,Vol.34, No.9, pp.I937-1943Kits, K., Kate, Y., emote, T. and Yano, Y.
(1994): A Com-parative Study of AUtomatic Extraction of Collocationsfrom Corpora: Mutual Information vs.
Cost Criteria,Journal of Natural Language Processing, Vol.1, No.l,pp.21 - 33Nagao, M and Moil, S (1994): A New Method of N-gramStatistics for Large Number of n and Automatic Ex-traction of Words and Phrases from Large Text Data ofJapanese, The Proceedings of the 15th InternationalConference on Computational Linguistics, pp.611-615Shinnou, H. and Isahara, H. (1994): Automatic Extractionof Frozen Patterns to Act as a Postpositional Particleby Pseudo N-gram, Journal of Information Processing,Vol.
36.
No.l, pp.32-40Smadja, F. A. and MeKeown, K. R. (1992): AutomaticallyExtracting and Representing Collocations for LanguageGeneration, Proceedings of the 28th Annual Meeting ofthe Association for Computational Linguistics, pp.252-259Smadja, F. (1993): Retrieving Collocatibns fl'om Text:Xtract, Computational Linguistics, Vol.19, No.9, pp.143-177579
