i}JI i!
ii'i|Unit Coordination and Gappingin Dependency TheoryVincenzo Lombardo and Lconardo LesmoDipartimento di Informatica nd Centro di Scienza CognitivaUniversita' di Torinoc.so Svizzera 185 - 10149 Torino - Italy{vincenzo, lesmo}Odi.unito.itAbstractThe paper investigates the problem ofrepresenting coordination constructs in aformal system for the dependency approach tosyntax.
The distinctive aspect of the formalismis the presence of non-lexical (trace - ~) nodesin the representation.
We illustrate the basicmechanisms, and how they can account forsyntactic phenomena i volving long-distancedependencies.
Then, we see how the samemechanism can account for the gaps andellipses of coordination constructs.1.
IntroductionCoordination is a long standing problem forlinguistic theories, because of its particularaspects which do not fit well with thedominance-based character of the vastmajority of paradigms.
The accounts ofcoordination which have been devised inconstituency theories all rely on the notion ofnon traditional constituents, because of thevariety of word strings that can play the role ofconjuncts (see, for example, (Gazdar et al1985)).
Maybe the most natural description hasbeen provided by Steedman in a series ofpapers on Combinatory Categorial Grammar(Steedman 1985, 1990, 1996).
He generalizesthe notion of constituent through the operatorsof functional composition and type raising, theso-called combinators.
This uniformity ofanalysis suffers from the generation ofspurious ambiguities, even if this proliferationof structures seems to be justified (in somecases t) by the requirement of characterizingintonation pauerns.
Sarkar and Joshi (1997)forward CCG analysis in the LTAGframework, by interpreting combinators in1 For example, it is hard to analyze "Keats teals apples"as both (Keats (steals apples)) and ((Keats teals)apples) (Sarkar, Joshi 1997).
This is likely to be aspurious ambiguity.terms of argument sharing and traces handledby TAG operators (conjoin or adjunctionitself).
In this way, they are able to keepunaltered the notion of fixed constituency dueto LTAG lexicon.Dependency paradigms exhibit obviousdifficulties with coordination because,differently from most linguistic structures, it isnot possible to characterize the coordinationconstruct with a general schema involving ahead and some modifiers of it.
The conjunctionitself, has distributional properties that havenothing to do with the whole coordination.Hudson (1990, following Tesniere 1959) givesup the idea of providing a dependencystructure for the coordination, andcharacterizes conjuncts as word strings.Conjuncts are internally organized as (possiblydisconnected) dependency structures and eachconjunct root is dependency related to someelement of the sentence which is external tothe coordination.Mel'cuk (1988), on the other hand,privileges one of the two conjuncts as the headof the coordination, and claims thatcoordination symmetry is such only at thesemantic level.
This approach solves theproblem of providing a head with the samedistributional properties of the wholecoordination.
When applied to English, itallows to represent the prepositional characterof conjunctions observed by Ross (1970).In this work we provide a dependencyaccount of coordination following Mel'cuk'shint: one of the two conjuncts is the head ofthe construction, and the conjunction itself isthe head of the other conjunct.
We extend thelexicalized ependency formalism presented in(Lombardo, Lesmo 1998): each rule constrainsthe form and the number of dependents of aword in a dependency tree (see fig.
1).The formalism is projective, and accountsfor long-distancedependency phenomena11IIIIIIIIIIIIIIIIIIthrough the introduction of non lexicalcategories, which can be viewed as anotational variant of some graph structuresalready present in some formalisms (see, e.g.,Word Grammar (Hudson 1990)).
The presenceof non lexical categories keeps unaltered thecondition of projectivity, encoded in a notionof derivation.
The core of the grammarconsists of primitive and non primitivedependency rules, representing predicate-argument structures associated with lexicalitems.
Non primitive dependency rules resultfrom the application of metarules to primitiverules.
The dependency rules that licensecoordination are non primitive rules for thehead conjunct.
They can be distinguished inrules for unit coordination, where conjunctsare complete predicate-argument structures,and gapped coordinations, where conjunctshave gaps inside.The paper is organized as follows.
The nextsection presents the basic dependency s stem,along with the notion of derivation?
Section 3presents the treatment ofcoordination, togetherwith examples of metarules that account forseveral forms of unit and gappedconstructions.
Section 4 concludes the paper?2.
A dependency formalismThe basic idea of dependency is that thesyntactic structure of a sentence is described interms of binary relations (dependencyrelations) on pairs of words, a head (orparent), and a dependent  (daughter),respectively; these relations form a tree, thedependency tree.
In this section we describethe dependency s stem in (Lombardo, Lesmo1998).
The syntactic knowledge is expressedby dependency rules which describe a node ofknowSUB J /  SCOMPI ~ l i k~SUB J/ ~OBJJohn beansFigure 1.
A dependency tree for the sentence "Iknow John likes beans'.
The leftward or rightwardorientation of the edges represents he orderconstraints: the dependents that precede(respectively, follow) the head stand on its left(resp.
fight).12and the parse structures generated by agrammar of this form are defined through aderivation procedure.The grammar and the lexicon coincide,since the rules are lexicalized: the head of therule is a word of a certain category, i.e.
thelexical anchor, and the dependents arecategories linked by edges labelled withdependency relations.
From the linguistic pointof view we can recognize two types ofdependency rules: primitive dependency rules,which represent linearly-ordered predicate-argument structures (possibly with adjuncts),and non-primitive dependency rules, whichdescribe syntactic phenomena like argumentsharings and extractions.
Metarules (seesection 3), which produce non primitive rulesfrom primitive rules (by means of one orseveral applications), obey linguistic principles(cf.
GPSG approach (Gazdar et al 1985)).A dependency grammar is a six-tuple <W, C,S, D, I, H>, whereW is a finite set of words;C is a set of syntactic ategories;S is a non-empty set of root categories (CD_ S);D is the set of dependency relations (e.g.SUB J, OBJ, XCOMP, P-OBJ, PRED2);I is a finite set of symbols (among which thespecial symbol 0), called u-indices;H is a set of dependency rules of the formx:X (<rlYlUl'Cl> ... <ri.lYi.lUi.l'Ci_l> #<a'i+IYi+lUi+l'Ci+l> ... <rmYmum'Cm>)1) xe W, is the head of the rule;2) Xe C, is its syntactic ategory;3) an element <rj Y- u- q:j> is a d-quadruple ?
J J(which describes a dependent); thesequence of d-quads, including the specialsymbol # (representing the linear positionof the head), is called the d-quad sequence.We have that3a)rieD, j e {1 ..... i - l , i+l ..... m};3b) Yj~C,j e {1 ..... i-l, i+l ..... m};3c) ujeI, j ~ {1 ..... i-l, i+l ..... m};3d) ~ is a (possibly empty) set of triples <u,r, Y>, called u-triples, where ue I, re D,Y~C.Principle of u-triple satisfiability :For each dependency rule/5~ H and u e I, there2 The special relation VISITOR (Hudson 1990)accounts for displaced elements and, differently fromthe other relations, i  not ~mantically interpreted.
!I, !iI iexists a u-triple <uj,r,Y>~xj in a d-quad?a-jYjujxj> of 8 iff there exists one d-quad<riYiuixi> of 5 such that uj=ui, i ~j.Intuitively, a dependency rule constrains onenode (head) and its dependents in adependency tree3: the d-quad sequence statesthe order of elements, both the head (#position) and the dependents (d-quads).
Thegrammar is lexicalized, because eachdependency rule has a lexical anchor in itshead (x:X).
A d-quad <riYiuixi> identifies adependent of category Yi, connected with thehead via a dependency relation ri.
Eachelement of the d-quad sequence is possiblyassociated with a u-index (ui) and a set of u-triples (xi).
The x-component can be viewed asa slash feature in GPSG terms.
Both ui and zican be null elements, i.e.
0 and ?, respectively.A u-triple (x-component of the d-quad) <u, R,Y> bounds the area of the dependency treewhere the trace can occur.
The principle of u-triple satisfiability states a one-to-onecorrespondence b tween the u-indices and theu-triples of the d-quads.
The dependentindexed by Uk in the rule is coindexed with atrace node in the subtree rooted by thedependent containing the u-triple <Uk, R, Y>.The derivation procedure requires somepreprocessing (u-index annotation) on thedependency rules and some terminology.As one dependency rule can be used morethan once in a derivation process, it isnecessary to annotate the u-indices with uniquesymbols (progressive integers) before theactual use.
The annotation must be consistentin the u and the x components.
A dependencyrule (as well as a u-triple) with u-indices allannotated is said to be instantiated: I + refers tothe set of annotated u-indices (including thespecial symbol 0).3 As stated above, the dependency rules express thesubcategorization frames, and possibly include adjuncts.Here are two examples of dependency rules:yawned:V(<SUBJ, N 0, 0> #),is the licensing rule of "John yawned";yawned:V(<SUBJ, N,0, 9> # <MANNER, ADV,0, f~9>)is the licensing rule of "John yawned loudly".
In the firstcase the dependency rule represents thesubcategorization frame; in the ~cond case the ruleincludes an adjunct.13A word w (e W) or the trace symbol  (~ W)and two annotated u-indices !1 and v is a wordobject of the grammar.
Given a grammar G,the set of word objects of G is?
Wx(G)={ }tXv I p.,veI +, xe Wu {E } }.A pair consisting of a category X (e C) and astring of instantiated u-triples Y is a categoryobject of the grammar (X(y)).A 4-tuple <r, Y(T1), u, Y2> consisting of adependency relation r (e D), a category objectX(y1),  an  annotated u-index u, a set ofinstantiated u-triples ~2 is a derivation objectof the grammar.
Given a grammar G, the set ofderivation objects of G isCx(G) = {<r,Y(Tl),U,~'2> :re D, Ye C, ue I +, TI, T2 are sequences ofinstantiated u-triples}.Given a grammar G, L'(G) is the language ofsequences of word objects:L'(G)={ ?xa Wx(G)* I<TOP, Q(O), 0, 0> :=~* ?x and Qe S(G)}where TOP is a dummy dependency relationfor the root of the tree and ~ is the derivationrelation (defined below).
The languagegenerated by the grammar G, L(G), is definedthrough the function t:L(G)={we Wx(G)* / w=t(CX) and aa  L'(G)},where t is defined recursively ast(-) = -, t(llWv a) = w t(a), t(lal~v a) = t(a).and - is the empty sequence.The derivation procedure performs a leftmostgeneration of a sentence of L'(G).
Thederivation relation consists of two expressions.Let ?xa (Wx(G))* and ~ e (Wx(G) u Cx(G))*.DRI:a <r, X(Tp), u, Tx> W =~(X<r l ,Y1( p l ),U l ,X l ><r2,Y2(P2),u2,x2><ri-l,Yi-l(Pi-1),u i-l,Xi-l>uXO<ri+l,Y i+l(l~i+l),U i+l,Xi+l>o .o<rm,Ym(Pm),Um,'Cm>where x:X (<rlY lUl x 1 > ... <ri-lYi-lUi-lXi-l> #<ri+lYi+lUi+lZi+l> .... <rmYmumXm>) is adependency rule, and Pl u ... u Pm--Tp u Tx-IIIIIIIiIIIIIIIIIIiDR2: a <r,X(<v, r, X>), u, ()> ~=~ a nevV=~* is the reflexive, transitive closure of =~.DR1 distributes over the dependents of adependency rule the u-triples still to besatisfied (yp) plus the new u-indices introducedby the rule itself (~'x).
The u-index u, occurringin the current derivation object, is associated(as a It-index) with the lexical head of the rulex.
The whole subtree headed by x will be co-indexed with a trace node which will satisfy au-triple of u in one of the p sets (DR2).
If u=0no coindexing occurs.
DR2 implements the u-triple satisfaction: the u-triple <v, r, X>represents an expectation for a trace ofcategory X attached to its head through arelation r. When DR2 applies, the trace (wordobject l~Ev) is in fact inserted in the derivationwith v-index v. Notice that the trace has u (theu-index of the derivation object) as It-index:this means that the trace itself can be thereference for another trace.As an example, consider the grammarGI=<WI: {I, John, beans, know, likes}CI: {V, V+EX, N}$1: {V, V+EX }D 1: { SUB J, OBJ, VISITOR, TOP}I1: 10, u}TI>,where T1 includes the following dependencyrules:1.
I: N (#);2.
John: N (#);3. beans: N (#);4. likes: V (<SUBJ, N, 0, O> # <OBJ, N, 0, ~>);5. know: V+EX (<VISITOR, N, u, 0><SUB J, N, 0, ~> #<SCOMP, V, 0, {<u,OBJ,N>}>).A derivation for the sentence "Beans I knowJohn likes" is the following (at each step, theleftmost derivation object is underlined, andthe derivation relation to be applied marks thesymbol =~):<TOP.
V+EXf.~).
0.
O> =:~DR 1<VIS ITOR.
N(O) .
u l .
O~: <SUBJ ,  N(~) ,  0, @> know<SCOMP, V(~), 0, {<uI,OBJ,N>}> =::~DRIulbeans <SUBJ.
N(O).
0.
0> know14<SCOMP, V(O), 0, {<ul,OBJ,N>}> :=~DRIulbeans I know <SCOMP.
V(Q~t.
0.
|<uI.OBJ.N>I>~DRIutbeans I know <StlBJ.
N(~X_9~likes<OBJ, N(~'uI,OBJ,N>), 0, ~ :=b DRIu\]beans I know John likes<OBJ.
N(<ul.OBJ.N>k 0.0> ==b DR2ul beans I know John likes i~ulThe dependency tree corresponding to thisderivation is in fig.
2.Given DR1 and DR2, a trace noderepresents a gap for the whole subtree headedby the lexical node coindexed with it.
So, infig.
2, if we replace "beans" with a complexnoun phrase ("black beans that come fromGuatemala"), u 1 again annotates only "beans",but the trace node represents the gap for thewhole subtree.3.
Coordinat ion in Engl ishIn section 2 we have described a lexicalizeddependency formalism and a notion ofderivation that yields the legal sentences andthe corresponding dependency trees.
In(Lombardo, Lesmo 1998) we have defined anEarley-type parsing algorithm for thisformalism.
In this section we address theproblem of providing adependency analysis ofcoordination constructs.
The (non primitive)dependency rules that account for coordinationare the result of the application of metarules tobasic dependency rules.
Metarules andprimitive dependency rules express thelinguistic knowledge.
The iterated applicationof metarules produces all the non primitivedependency rules, that together with theprimitive rules, form the grammar.
Theapplication of the derivation rules to thecomplete set of rules produces the sentences ofthe language.
This section addresses thelinguistic issue of providing anumber ofknowul beanf I" ~ l ikesSUB J /  ~OBJJohn EulFigure 2.
Dependency tree of the ~ntence "Beans Iknow John likes", given the grammar GI.f/?{iI!
trii!
:i!metarules that deal with coordination, and theformal issue of extending the derivationprocedure to gapped conjuncts.
First, weintroduce the general notation for metarules;then, we consider a number of coordinationphenomena in English, starting from thesimple to the complex ones, which requiresome extensions to the derivation rules.3.1 MetarulesThe general schema of a metarule 4 ismeta-idSOURCE ~ TARGETwhere "meta-id" is an identifier of themetarule, and SOURCE and TARGET arePATI'ERNS of dependency rules.
A PATrERN isan abstraction over a dependency rule, wherethe head can (possibly) reduce to the syntacticcategory (from x:X to X), and somesubsequences of d-quads can be (possibly)replaced by some variable symbol.
Theabstraction allows to generalize the descriptionof phenomena, where possible.5An example of metarule for objectextraction is the following:V (<SUBJ, N, 0, 9> # <SCOMP, V, 0, 0">)....)ex2V+EX ( <VISITOR, N, u, 9><SUB J, N, 0, O> #<SCOMP, V, 0, {<u,OBJ,N>}> )which can be represented graphically as!
i Pi n <u.
OBJ.
N>I ~ The metarule x2 takes as SOURCE a PATI'ERNthat represents he subcategorization frame of averb with a sentential complement (know,believe, admit .
.
.
.
), and produces as TARGET4 This section presents an intuitive sketch of metarules,without any claim about the full generality of theexamples ofmetarules reported herein.5 Recently, there has been a trend in linguistics to viewmost syntactic phenomena aslexicon-dependent ratherthan category-dependent (.~metimes, .g.
passivization,the shift even continues to sentence-dependency).
I  ourwork, the final goal is to associate metarules tosubcategories arranged ina hierarchy (on this topic, see(Barbero et al, this volume)).
In this paper, we neglectthis point, and all our examples of melarules assumecategory-headed patterns.the corresponding PATrERN that accounts forextracting the object from the sententialcomplement.
In the previous ection, we haveseen how a dependency rule abstracted by thisPA'ITERN can derive "Beans, I know Johntikes".Some subsequenees of d-quads do not affectthe application of metarules, and passunaltered from the SOURCE to the TARGET.PATIERNs avoid redundancy by introducingvariables.
The following metarule accounts forpreposition stranding (for example, "Thisplace, he comes to", or "This place, he oftencomes to with reluctance"):V (<SUB J, N, 0, ~> # (~ I <P, P, 0, (~> 02).._)pslV+PS ( <VISITOR, N, u, 0><SUB J, N, 0, 0>#<p, P, 0, {<u, P-OBJ, N>}>02 )A unification procedure accounts for matchingPATIERNs (SOURCE and TARGET) anddependency rules, taking care of variablesustitutions from SOURCE to TARGET.
TheSOURCE dependency rule for "comes" in fig.3a represents its subcategorization frame.
Themetarule psi matches this dependency rulethrough its SOURCE PATIERN, and producesthe TARGET dependency rule, which licensesthe dependency tree in fig.
3b.In the remainder of this section, we describethe metarules that apply to dependency rules togenerate the coordination constructs.comes: V VISITOR comes: VP<u, P-OBJ, N>(a)comesCo)Figure 3.
Me~ule psi for preposition stranding (a), anddependency tree of the sentence "This place, he comesto" (b).15I In the derivation process, we assume the ~, :oor~n / /~"x~coogrammar to be fully instantiated, that is all the it RDmetarules have been applied to generate all thenon primitive dependency rules.
/ t CONJ-XI 3.2 Metarules for coordination (a)The treatment of coordination relies on theapplication of proper metarules to dependencyrules.
Gapped constituent coordination resultsfrom the same mechanism that accounts forlong-distance dependencies in section 2.
Thetreatment of coordination illustrated herepursues the goal of providing a dominance-based representation.
As we will see, this canlead sometimes to less standard analyses ofcoordination phenomena.
Most of the theoriesin the literature assume aparallel constituency-based (Steedman 1996) (Sarkar, Joshi 1997) orstring-based (Hudson 1990) analyses of theconjuncts.
This prevents a fully incrementalprocessing of the input, since beforeprocessing the infix conjunction (and, or .... )we need to analyze the second conjunct.
Thetheory illustrated here naturally favors theincremental nalysis.As the formalism is lexicalized,coordinating conjunctions are treated aslexically ambiguous elements (polymorphicfunctors in categorial terms): they are assignedthe categories of the form CONJ-X, for eachsyntactic category X.
So, we have CONJ-V forverbs, CONJ-N for nouns, and so on.The first metarule we take into account isthe one that works for unit coordination(coord-uni06:X ((~) ._.>coord-unit X ((~ <COORD, CONJ-X, 0, ~)For each dependency rule with a head ofcategory X (variable), coord-unit produces adependency rule having exactly the same d-quad sequence (o), but with the addedfightmost dependent CONJ-X, whose relationwith the head is COORD (fig.
4a).
Thedependency ruleand: CONJ-V (# <2nd, V, 0, 0>)licenses the second conjunct of a coordinationof finite verbs.
The relation "2nd ~ links thesecond conjunct as a dependent of theconjunction and.
The TARGET dependency rulein fig.
4b results from the application of themetarule "coord-unit" o the primitive!
6 The term "unit coordination" for the full constituent coordination comes from (Huang 1984).laughed: V laughed: Vcoord-unit SUB F ~COORDco ,.v(b)laughedJohn "andsn~zed/(c)Figure 4.
Graphical repre~ntation f metarule forunit coordinations (a), application to a dependencyrule for laughed (b), and dependency tree of "Johnlaughed and Mary sneezed".dependency rule for the predicate-argumentstructure of laughed (the same for sneezed andother intransitive verbs).
According to thesedependency rules, the sentence "John laughedand Mary sneezed" can be represented asshown in fig.
4c.The metarule "coord-unit" accounts for fullconstituent (unit) coordinations, where the twoconjuncts are headed by a word of the samecategory.
Note that "full constituents ~ meansthat conjuncts have no gaps inside.
Otherexamples are the following sentences:She eats apples and pears (OBJ, coordination),Elizabeth likes to go to the zoos and to themusewns (DEST coordination),Ma~.
thought ostrichs fly and kangaroos wim(SCOMP coordination) 7Difficulties with coordination arise withgapped conjuncts.
Literature usuallydistinguishes between non-traditional-7 The latter examples consider constituents hat are fullarguments ofpredicate-argument structures.
Note thatVP coordination, which is a full constituent coordinationin phrase structure terms, is not an example of unitcoordination, becan~ the dependency rules repre~ntthe whole predicate-argument structure (includingsubject).!
16!
(iconstituent coordination and gapping (see, V coord-gap I.IB/ V_...~COOhowever, (Steedman 1990), for an exception), soB~-7~ SUBJ S RDAs stated above, we deal uniformly with the f /oN, ,  N " " uN !
~ CONJ-V two types of coordination: the common key is <u, stmJ, >I to classify coordination phenomena according (a)i to the elements that are missing in theconjuncts.
Consider the following case of a v eoord-gap VI 3 ~ VP-coordination: stmJ s Lucy saw a butterfly and laughed.
N N CO NJ.-y.
aN fig.
can see a <~, OBJ, N> In 5 we dependencyrepresentation f this sentence.
Lucy is co- (b) I i indexed by Ul with the trace Eul in the second v coord-gap Vconiunct, stm~,"~o stmJ+OB, s tm~'~a_  ?
BJ J : We assume that any coordination where oneN uN CONJ-V v N I :~ of the two conjuncts misses some part of thei~ 1 predicate-argument structure (including <u.stmj.r~>:~ <v, OBJ.
N> i~ adjuncts) is a gapped coordination.
The (c)I in te rp re tat ion of thega pped co ordination can tra/~a~'I'?al~p I ~ ~/~cV~oRD~ be summarized as follows: a coordination has s j coora-gap S ja structure headed by one of the conjuncts; the l~'~ OBJ~OB,,: missing elements are handled by traces (non I ~ lexical nodes) and u-indices, that are N \[tol N CONJ-V aN vP\[tol <u, OBJ, N>controlled through u-triples in non-primitive <v.I-OBJ.p\[to\]>dependency rules (accounting for (d)!
coordination)?
The dependency rule that I licenses the tree in fig.
5 is the following: Figure 7.
Metarules for several types of gappedsaw: V( <SUB J, N. u, 9> coordinations.!
#I ~' <OBJ, DE'T, O.
@> Mary cooked and ate beansi!~ <COORD, CONJ-V, 0, {<u, SUBJ, N>}>) (SUBJ+OBJ gap, or V coordination, fig.
7c)The metarule that produces this dependency John offered, and Mary actually gave, a~ rule is in fig.
7a: it states that it is possible to goMen Cadillac to Billy Schwartzproduce a dependency rule for SUB J-gapped (OBJ+I-OBJ gap, a l~ Right Node Raising, fig.
7d)i~ coordinations from a rule having a verb as itshead and an initial d-quad which represents a These metarules enforce the high attachmentI ~ SUBJ relation.
In the subtree rooted by the of actual dependents and the low attachment ofi ~,, conjunction there must be a SUBJ trace node.
gapped ependents (trace nodes)?
This impliesii U-triple specifications allow to produce a that right dependents attach to the farther head I i' uniform treatment of many kinds of argument of the two, always respecting the condition the~ gaps, among which the following (single and projectivity.
Even if the second conjunct could~, multiple) ones: attach more immediately tothe lower head, weMary cooked and John ate beans think that, intonationally, the second conjunct(OBJgap, fig.
7b) forms a unit per se, without the righttm/~OBJ~Ld dependents.
This also seems to be an empiricals D support of the constraint that u-tripleulLUCy a an satisfaction follows the top-down direction.NBAR~ ~ndbutterflYsoBlau.ghedj/ 3.3 Head gappingThe formalism and the derivation procedureea t introduced in section 2 assume a trace noderepresents the gap for the whole subtreeFigure 5.
Dependency tree of the sentence Lucy headed by the lexical node coindexed with itsaw a butterfly and laughed.
(full subtree gapping).
This prevents the17representation of coordination constructswhere the missing structure in the secondconjunct is not a whole subtree, but only a partof it, namely the head and, possibly, some ofits dependents.
This phenomenon occurs in thecases known as gapping in the literature.
Hereare some examples:1 saw a unicorn and Carol a tyrannosaurus(Vgapping)1 gave the books to Mary and the records toSue (v + SUBJ gapping)John wants to give the books to Mary and Billto Sue (complex v + OBJ gapping)In this cases we speak of head gapping.
In thissection we extend the formalism of section 2 toaccount for head gapping.The steps which are necessary for theextension are the following.
(1) We must beable to associate a u-index with the headposition (#); in the formalism of section 2 onlyd-quads (of dependents) had u-symbolsassociated.
(2) We must introduce and keepapart in the word objects It-indices concerninga whole subtree and It-indices concerning asingle node.
(3) We must introduce and keepapart in the u-triples the u-indices concerning awhole subtree and the u-indices concerning asingle node.
(4) When both head and (some)dependents are gapped, we must constrain thesatisfaction of the u-triples of the dependentsto occur below the satisfaction of the u-tripleof the head.
s (5) We must modify thederivation relation in order to account for thechanges in the formalism.
(1)To associate a u-index with the head positionin the dependency rules, we need to modify itsdefinition:A dependency grammar is a six-tuple <W,C, S, D, I, H>, where W, C, S, D, I are asdefined in section 2, and H is a set ofdependency rules, of the formx:X (<1" lYlUl'\[ 1> ... <ri-lYi-lUi-l'\[i-l> <#, ui><ri+lYi+lUi+l'ti+l> ... <rmYmum'tm>)where all symbols are the same as in section 2,except for the head position (#), which hasbeen associated an index ui (possibly ?
), suchS The derivation process defined in section 2 looselyconstrains the satisfaction of u-triples to occur in aspecific subtree.
Head gapping requires a strongerconstraint to satisfy the u-triples of the gapped headsand dependents in the .~ame r spective tree position.18that uiE I.(2)?
To introduce and keep apart he u-indices for asubtree and the ones for a single node in thederivation process, we must modify the wordobjects in 4-tuples consisting of a word w(E W) or the trace symbol 8 (~W) and threeannotated indices rI, St and v.Given a grammar G, the set of word objects ofGisWx(G)={q,lax v / r i , St,v E I +, xE W u { 8} }.where rI concerns x as a single node, and Stconcerns x as head of a subtree.
(3)To introduce and keep apart the u-indicesconcerning a full subtree gapping or a headgapping in the u-triples, we introduce twoforms:- simple (full subtree gapping): <u, r, X>- complex (head gapping): <!.u, r, x:X>where uE I, re D, xE W, XE C, and !
is a specialsymbol that specifies that the complex indexconcerns the single node linked by thedependency relation r.(4)To constrain the attachment of the trace nodesof gapped dependents o the trace node of thehead, we generalize the complex form of the u-triple in<q.u, r, x:X>where u, r, and X are as before, and qeIu{ !
}.Now, when the index is !.u we have a head gapindexed u (no indication on its parent, as instandard u-triple satisfaction); when the indexis q.u, we have a head gap u whose parent isindexed by q.
(5)The new derivation relation is the following:DR l:0t <r, X('yp), u, Tx> ~ =:~o~<rl,Y l(Pl),U 1',% I><r2,Y2(P2),u2',X2>o .
.<ri-l,Yi-l(Pi-1),Ui-l','~i-l>Ui,U X0<ri+l,Y i+l(Pi+l),U i+l','\[i+l>o .o<rrn,Y m(Pm),U m','~rn>?wherea) x:X (<rlY lUl'\[ 1 > ... <ri-lYi-lUi-l'\[i-l> <# ui>I!
:I\[:)t ,J~(i;iI :I !<a'i+lYi+lUi+l'~i+ 1 > -.- <rm Ymum'~m>) is adependency rule;13) Pl u...  t.,, pm---q'p u Tx;c) if u is of the form q.s (where q,se I) then:c') build a u-triple<q.s, r, x:X>and insert it in the 13 set in ot or V containingthe u-triple <t.q .... > (teI);c") for each uk (k=l ..... i-l, i+l ..... m) inthe (head gapped) dependency rule such thatUk=!.w (we I), replace it with Uk'=S.W.The new DRI extends the version of section 2 byaccounting for the treatment of complex u-triples (partc).
If the u-index (u) of the derivation object to expand(<r,X(yp),u,yx>) is a pair of indices of the form q.s, thismeans that the derivation object results from theapplication of a head gapped dependency rule.
Headgapping can possibly include some dependents: DRIcollects all the word objects that participate to thegapping phenomenon.
This process has two pha~s: c'builds a new u-triple for the current derivation object,and in~rts it in the p ~t  that already contains the headof the current gapped element (of the form <t.q, ...>); inother words, c' builds a "subtree" of gapped elements; c"obtains the actual (instantiated) index by referencing thecurrent element as head of the next dependent.DR2: ot <r,X(<v, r, X>), u, O> V~ 0,ul~vDR2 is still the rule for full subtree gapping: it onlyapplies to the satisfaction ofsimple u-triples.DR3:~ <r, X(yp), u, yx> V =::'(g<rl,Y l(Pl),U 1,1:1><r2,Y 2(P2),u 2,'C2>..?<ri- l,Yi-l(13i-1),u i-l,l:i- I>ui,u Ew<ri+l,Y i+l(Pi+ l),U i+ l,'Ci+l>.o?<rm,Ym(Pm),U m,'~m>?wherea) x:X (<r lY lU l I l>  ... <ri_lYi.lUi.l '\[i. l> <# ui><ri+lYi+lUi+lXi+l> ... <rm YmumIm>) is adependency rule;b) Tp includes a complex u-triple <v.w, rx,x:X>, v e I u {!
},we I;c) for each complex u-triple <w.t, ry, y:Y> inTp, there exists a d-quad <rkiYkiUki'tki > in thedependency rule such that rki=rY and Yki=Y,and Pki~{<t, rkiYki>};d) 131 u .
.
.u  Pm---'Tx UTp- {<v.w, rx, x:X>}DR3 is totally new, and accounts for the satisfaction ofcomplex u-triples.
The complex u-triples that are readyfor satisfaction are those of the form <v.w, rx, x:X>.The satisfaction mechanism looks for a dependency ruleheaded by x:X that contains a d-quad for each u-triplethat represents a gapped dependent of the head 11-indexed by v. The result is a trace node where the v-index is w, and the 11- and the it-indices are computed asusual.
Finally, DR3 modifies the set of u-triples Tp byremoving the u-triple which has been satisfied.For the (V-gapped) sentenceI saw a unicorn and Carol a tyrannosauruswe need the metarule in fig.
7a, whichproduces the TARGET dependency rulesaw: V (<SUB J, N, 0, O> <#, !.u> <OBJ, N, 0, 0><COORD, CONJ-V, 0, {<!.u, 2nd, V>}>)which licenses the dependency tree in fig.
7b.For the (V+SUBJ gapped) sentenceI gave the books to Mary and the records toSue (v + SUBJ gapping)the (non primitive) dependency rule is:gave: V (<SUBJ, N, u.v, 9> <#, !.u> <OBJ, N, 0, 9><I-OBJ, P\[to\], 0, 9><COORD,CONJ-V, 0, {<!.u, 2nd, V>, <u.v, SUBJ, N> })which is built by the metarule in fig.
8a.The dependency tree which results from thederivation of this sentence is in fig.
9.CONJ-V<!.u, 2nd, V>(a)ul,O mwSUBJ OBI COORDI unicorn anaa EulCarol tyrannosaurusa(b)Figure 7.
The metarule for verb gapping (a) and thedependency tree of the sentence "I saw a unicornand Carol a tyrannosaurus" (b).19V coord- gap !.u,OVsueJ SUBJ-V SUBJ COORD<!.u, 2nd, V><u.v.
SUBJ.
N>ul gaveSUBJ J~OBJ J~_~~-O~' -~~ I-OBJ COORDvl I books Io andthe Mary E:uL(a) (b) the SueFigure 8.
The dependency tree a.~q~ciated with the ~ntence "I gave the books to Mary and the records to Sue".4.Conclusions AcknowledgementsThe paper has described a lexicalizeddependency formalism and an asymmetricdominance-based treatment of coordination.The linguistic knowledge is formalized inprimitive dependency rules and a number ofmetarules, which produce non primitive rulesfrom pr imit ive rules.
Long-d is tancedependencies are represented by coindexinglexical and non lexical nodes in thedependency tree.
Metarules can generate thenon primitive rules that license long distancedependencies and, in particular, thoseconnected with coordinat ion gappedconstructs.The paper gives an account of paircoordinations, but the formalism seems to begeneralizable toany number of conjuncts.
Thebasic conjunct unit is the predicate-argumentstructure including adjuncts.
This assumptionleads to the broad classification in unit andgapped coordinations.
As we have seen, thiscan caused some non standard analyses ofRight Node Raising and verb coordination.The formalism presented in this paper isonly a first attempt of producing a dependencyformalism that can account for coordinationwithout resurging to phrase structureaugmentations or string-based representations.The formalism is thus suitable to left-to-rightincremental processing, because of thedominance-based  character  of therepresentation.
We are aware that theformal ism is weak on the l inguisticcompetence, because it probably overgenerateswith respect o legal sentences; however, webelieve that the formal tools introduced(constraints on the u-triple satisfaction) can besuccessfully used to eliminate this problem.This paper has benefited from comments ofthe people at a seminar held by one of theauthors at IRCS, UPenn, Philadelphia.ReferencesBarbero C., Lesmo L., Lombardo V., Merlo P.,Integration of syntactic and lexical information i ahierarchical dependency gratmnar, this volume.Gazdar G., Klein E., Pullum G., Sag I., GeneralizedPhrase Structure Grammar, Basil Blackwell,Oxford, 1985.Huang X., Dealing with conjunctions in a machine-translation environment, Proc.
of COLING 84, pp.243-246.Hudson R., English Word Granunar, Basil Blackwell,Oxford, 1990.Lombardo V., Lesmo L., Formal aspects and parsingissues of dependency theory, in Proc.
ofACL/COLING 98.Mel'cuk I., Dependency Syntax: Theory and Practice,SUNY Press, Albany, 1988.Neuhaus P., Broker N., The Complexity of Recognitionof Linguistically Adequate Dependency Granunars,Proc.
ACL/EACL97, Madrid, 1997, pp.337-343.Ro~ J. R., Gapping and the order of constituents, inBierwi~h M. and Heidolph M.
(eds.
), Progress inLinguistics, Mouton, The Hague, 1970, pp.
249-259.Sarkar A., Joshi A.K., Handling Coordinmin in a TreeAdjoining Grammar, Unpublished manuscript,Department of Computer and Information Science,University of Pennsylvania, Philadelphia (PA),February 1997.Steedman M., Dependency and Coordination in thegrammar of Dutch and English, Language 61, 1985,pp.
523-568.Steedman M., Gapping as constituent coordination,Linguistics and philosophy 13, 1990, pp.
207-264.Steedman M., Surface structure and interpretation ,MIT Press, 1996.Tesniere L., Elements de syntaxe structurale,Klincksieck, Paris 195920
