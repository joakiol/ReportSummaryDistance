ORGANIZATION AND INFERENCEIN A FRAME-LIKE SYSTEM OFCOMMON SENSE KNOWLEDGEEugene CharniakInstitute for Semantic and Cognit ive StudiesCastagnola, SwitzerlandI.
INTRODUCTIONRather than write two short papers forthe two sessions I part ic ipate in (Memory:Organization, and Memory: Reasoning andInferencing) I have chosen to write onepaper of twice the length.
My reason fordoing so, beyond the fact that it takes lesstime to write one long paper than two shortones, is that the issues involved are sointertwined as to make separating them anunprof i table task.My goals have not changed since(Charniak 72).
I am still interested in theconstruct ion of a computer program whichwill answer questions about simple narrat ion(e.g.
chi ldren's stories).
More exactly,if one makes the somewhat unreal ist icdivision of the problem into (a) going fromnatural language to a convenient internalrepresentation, and (b) being able to"reason" about the information in the storyin order to answer questions, my interestsare clearly in the latter section.
I wil ltake it as given that such reasoningrequires large amounts of "common senseknowledge" about the topics mentioned in thetext, so I wil l  not demonstrate this point.
(However it should come out inc idental lyfrom the examples used to demonstrate otherpoints.)
To reason with this knowledgerequires that it be organized, by which Isimply mean it must be structured so thatthe system can get at necessary knowledgewhen it is needed, but that unnecessaryknowledge wil l  not clog the system with theall too famil iar "combinator ial  explosion".I wil l start with my current thoughts onorganization.The scheme presented here has beenclearly inspired by Minsky's "frames paper"(Minsky 74) so I have called the primaryorganizat ional  grouping a "frame".
It isperhaps indicat ive of the convergence ofideas ref lected in (or perhaps inspired by)Minsky's paper that the overal l  organizat ionproposed here (although not the details) isquite similar to the independent ly developed"scripts" of (Schank and Abelson 75).II.
FRAMES, FRAME STATEMENTS, AND FRAMEIMAGESI take a frame to be a static datastructure about one stereotyped topic, suchas shopping at the supermarket, taking abath, or piggy banks.
Each frame ispr imari ly made up of many statements aboutthe frame topic, called "frame statements"(henceforth abbreviated to FS).
Thesestatements are expressed in a suitablesemantic representation, although I wil ls imply express them in ordinary Engl ish inthis paper.The primary mechanism of understandingline of a stork is to see it asinstant iat ing one or more FS's.
So, forexample, a part icular FS in the shopping atthe supermarket frame would be:(I) SHOPPER obtain use of BASKET(SHOPPER, BASKET, and in general any part ofan FS written in all capitals is a variable.These var iables must be restr icted so thatSHOPPER is probably human, and certainlyanimate, while BASKET should only be boundto baskets, as opposed to, say, pockets.
)This FS would be instantiated by the secondline of story (2).
(2) Jack was going to get some things atthe supermarket.The basket he took was the last oneleft.Here we assume that part.
of the second linewill be represented by the story statement(SS):(3) Jackl obtain use of basketl(Of course, real ly both (I) and (3) would berepresented in some more abstract internalrepresentat ion.)
Naturally, (3) would be aninstant iat ion of (I), and this fact would berecorded with a special pointer from (3) to(I).
I am, of course, making the commondist inct ion between a data base whichcontains the part icular story information,like (3), and a "knowledge base" whichcontains our general ized real worldknowledge, such as the supermarket frame.The supermarket frame wil l  containother FS's which refer to (I), such as:(4) (I) usual ly occurs before (5)(5) SHOPPER obtains PURCHASE- ITEMSAny modi f icat ion (like (4)) of a part icularFS (like (I)) will be assumed true of allSS's which instant iate that FS (like (3)),unless there is evidence to the contrary.Hence, using (4) we could conclude that Jackhas not yet f inished his shopping in (2).Other modi f icat ions of (I) would tell usthat Jack was probably already in thesupermarket when he obtained the basket, andthat he got the basket to use duringshopping.The variable SHOPPER in (I) alsoappears in (5), and in general a singlevariable wil l  appear in many FS's.
Hencethe scope of these variables must be atleast that of the frame in which theyappear.
When an SS instant iates an FS thevariables in the FS will be bound.Natural ly it is necessary to keep track ofsuch bindings.
For example, fai lure to doso would cause the system to fail to detectthe oddness in (6) and (7).
(6) Jack went to the supermarket.
He got acart and started up and down the aisles.Bil l  took the goods to the checkoutcounter and left.42IIIIIIIIIIIIIIIIIII(7) Jack went to the supermarket to get abag of potatoes.
After paying for themilk he left.It is probably a bad idea to actual ly changethe frame to keep track of such bindings.Instead I assume that the frame remainspure, and that the variable bindings arerecorded in a separate data structure calleda "frame image" (abbreviated FI).
Forframes which describe some action, like ourshopping at supermarket frame, we willcreate a separate FI for each instance~ ofsomeone performing the action.
So twodifferent people shopping at the same time,or the same person shopping on two differentoccasions, would require two FI's to recordthose part iculars which dist inguish oneinstance of supermarket shopping from allothers.Much of this information wil l  be storedin the var iable bindings (shopper, purchaseitems, store, shopping cart used, etc.
)However the variable bindings do not exhaustthe informat ion we wish to store in the FI,for example it wil l  probably prove necessaryto have pointers from the FI to some, if notall, of the SS's which instant iate FS's ofthe frame in question.
Of s l ight ly moreinterest is that the FI of a framedescribing an action wil l  keep track of howfar the act iv i ty has progressed.
So, forexample, we would find the fol lowing storyodd:(8) Jack drove to the supermarket.
He gotwhat he needed, and took it to his car.He then got a shopping cart.We have already said that FS's are modif iedby time ordering statements, so to note theoddity of (8) it is only necessary to haveone or more progress nointers in the FI tothe most t ime-wise advanced FS yet ment ionedin the story.
Then when new statements arefound in the story which instant iate FS's inthe frame the program will  automat ica l lycheck to see if these FS's are consistentwith the current progress pointer(s).
I f  sothe FI progress pointer(s) may be advancedto indicate the new state of progress.
Ifnot, as in (8), the oddity should be noted,and, if possible, the story te l le rquest ioned about the oddness of the timesequence.I have not commented so far about how,given a new SS, we locate an FS which itinstantiates.
In general this is adiff icult problem, and I wil l  have l itt le tosay about it.
Roughly speaking the problemfalls into two parts.
First, the systemmust recognize that a given frame isrelevant to a part icular story.
I amassuming that the presence of a key conceptin the story wil l  tr igger a given frame.
(It should be clear however that this ismuch too simple minded.
For example, thescene sett ing descr ipt ion of a city block ascontaining a supermarket, bank, tailors,shoe repair shop, etc., should probably notact ivate the frames for the act iv i t iesnormal ly done in each.)
Secondly, given thatone or more frames have been selected asrelevant to the story, how does the program43find the part icular  FS which is instant iatedby a part icular  SS?
Here I will assume thata list of current frames is kept and f rameswhich have not been used recently are thrownaway.
To find the part icular FS which isinstant iated by the SS I wil l  simply assumethat all FS's of the recently used framesare checked for a match.
A moresophist icated procedure would be to firstcheck FS's which follow the progresspointer.
Another improvement would be tohave an index for each frame so that itwould not be necessary to check all FS's ofthe frame.
This would, in effect, make eachframe into a local data base.
If a framehas a sub-frame it too will be checked,although it wil l  probably be necessary toput some limit on how deep one should lookinto sub-frames.One final note before moving on to moredeta i led  issues.
This paper is concernedpr imari ly with the use of frames in thecomprehension of simple narration.
However,it seems only reasonable to me to assumethat whatever knowledge we have built upinto frames was done in large part in orderto get arDund in the world, rather than toread stories.
I wil l  assume then that thesame knowledge structures should be usablefor either task, and upon occasion I wil lmake arguments that structur ing a frame in apart icular  way wil l  make it easier toperform actions based on the framestructured knowledge.
It seems to me one ofthe great advantages of frames that theyseem capable of being used in mult iple ways,something which is not obviously true, forexample, of "demons" (Charniak 72).III.
FRAMES AND SUB-FRAMESIn this and the next two sections wewil l  take a closer look at the internalstructure of a frame.
In part icular  I wil ltry to show that Minsky's notion thatdif ferent frames will have "terminals', inCommon is appl icable to the kind of frames Ihave in mind.
Minsky's idea was that framesappl ied to problems of vision, would storeinformat ion about what one was l ikely to seein a certain s ituation (e.g.
a room) andfrom a certain vantage point (e.g.
justhaving walked in the door).
Upon changingvantage points one  moved to di f ferentframes, but many of the "terminals" of theframe (e.g.
r ight wall, center wall, lamp,etc.)
would appear in both views, and hencein both frames.
While Minsky used the term"terminal" when discussing scenario frames(his "terminals" very roughly correspond tomy "frame statement") he never appl ied theidea of common terminals between frames toscenario frames.
Nor is it clear thatframes such as the ones discussed in thispaper have anything direct ly correspondingto the sharing of a wall terminal betweentwo room frames.
However, I wil l  try toshow that Minsky's notion does come inuseful in a somewhat different way.Let us start by giving a naive outl ineof some FS's about supermarkets.
(9) a) Goal (SHOPPER own ITEMS)b) SHOPPER be at SUPERMARKETc) SHOPPER have use of BASKETd) do for all ITEM ITEMSe) SHOPPER at ITEMf) BASKET at ITEMg) ITEM in BASKETh) endi) SHOPPER at CHECKOUT COUNTERj) BASKET at CHECKOUT COUNTERk) SHOPPER pay for ITEMSi) SHOPPER leave SUPERMARKETI am assuming in (9) an imp l i c i t  timeordering from top to bottom.
In the actualframe this time ordering would be madeexplicit ly.
The reader might also noticethat most of the FS's are states which mustbe ach ieved  at some point in the course ofthe action.
For reasons why I use statesrather than actions to express what happensin an action sequence, see (Charniak 75a).There are countless things missing orwrong with (9), but I wish to concentrate ononly one of them, the relation betweenshopping and using a shopping cart.
~tshould be obvious that one can do shoppingwithout using a cart, although (9) wouldmake it seem that cart usage is anindispensable part of shopping.
I wil lsuggest that a good way to gain thisf lexibi l i ty in the supermarket frame is tohave a separate cart frame which sharesinformation with the supermarket frame, byhaving, in effect, some FS's common betweenthe two.One way to account for the abi l i ty toshop with or without a cart (and tounderstand stories about same) would be tohave a second frame for shopping without acart.
However, not only is the ideaunsatisfying, since it would require thedupl icat ion of the many facts the twoact iv i t ies have in common, but it would alsolead to problems in the comprehension ofcertain types of stories.
For example, onecould easi ly imagine a story which startsout with Jack using a cart, the wheel of thecart sticking, and rather than going to geta second cart Jack f inishes his shoppingwithout a cart.
It seems a priori that suchcombinat ions would be extraordinar i ly  hardto account for with two completely separateframes for the two forms of supermarketshopping.
(Alternatively, it is commonpractice in crowded situations to park one'scart in a general  v ic in i ty of several itemsand pick up the individual  items without thecart, only to bring them all to the cart ata later point and resume shopping with thecart.
)One possib i l i ty  for a single framewhich handles both kinds of supermarketshopping is:(10) a) Goal: SHOPPER owns PURCHASE- ITEMSb) SHOPPER decide if to use a basket.If so, set CART to Tc) If CART then SHOPPER obtain BASKETd) SHOPPER obtain PURCHASE- ITEMSmethod44e) Do for all ITEM PURCHASE- ITEMSf) SHOPPER decide on next ITEMg) SHOPPER at ITEMh) If CART then BASKET also at ITEMi) SHOPPER hold ITEMj) If CART then ITEM in BASKETk) Endi) SHOPPER at CHECK-OUT COUNTERm) If CART then BASKET at CHECK-OUTCOUNTERn) SHOPPER pay for PURCHASE- ITEMSo) SHOPPER leave SUPERMARKETIIIINow one problem with (10) is that to myeye the constant repetit ions of "If CART ithen ..." give it a rather ad hoc l appearance.
And while it was this ugl inesswhich gave me the init ial  impetus to find abetter representat ion,  there are moreconcrete problems with (10).
One major one ?is the lack of any information about why l these various actions are to be performedand why in this part icular  order.
This lackcomes out most strongly when we consider istories where something goes s l ight ly wrong l in the course of the shopping.
For example:(11) Jack was shopping at the supermarket.After gett ing a few things he returned ?to his cart only to find that some l prankster had taken everything out ofit and put the things on the floor.After putt ing the things in the cart msJack f inished his shopping, but was not I able to find out who haddone it.Question: Why did Jack put thegroceries which were on the floor into ?hi~ cart?
lThe quest ion here is so simple that onemight be at a loss to know what sort of imanswer is desired, but one certain ly knows l that the items were put back in the cart soJack could cont inue his shopping.
The pointhere is that frame (10) does not give anyexplanat ion for Jack's action in (11).
?Natura l ly  we would not expect any l supermarket frame to expl ic i t ly  take intoaccount strange situations like (11), butthis is not necessary to be able to answerthe qustion in (11).
All that is needed is l an understanding that the purpose of a cartis to transport  goods from place to place inthe supermarket and that to do this thegoods must be in the cart.
Hence, in this ?s ituation, if, as is most likely, Jack sti l l  l wants to transport  the goods elsewhere heshould once again put the items in the cart.But (10) does not give this information.
It itells us to put the  items in the cart, but l not why or for how long.I should point out that if (11) seemslike an extraord inar i ly  odd story on which ?to base any conclusions, there are much more l normal ones which make the same point.
Forexample:(12) Jack was shopping at the supermarket.After gett ing a few items the wheel ofhis cart stuck.
He got a second cartand f inished his shopping.IIIIIIIIIIIIIIIIIIIIIIQuestion: Why did Jack transfer hisgroceries to a second cart?The story does not say that Jack transferredhis groceries, and to infer that he didrequire essent ia l ly  the same reasoningprocess required to understand why Jack putthe groceries back in the cart in (11).To handle stories like (11) and (12) wemust therefore put two pieces of informationinto (10) which are not there at present.First, that in those cases like lines (-1Oh)and (10m) where we have the basket goingalong with the person, the reason is to keepthe previously col lected items with one.Second, that to carry something with a cartrequires that it be in the cart.
We willindicate the first of these by:(13) SHOPPER at ITEMside condit ion - DONE at ITEM also ~ method - suggested cart-carry(SHOPPER,BASKET,DONE, ITEM)Here DONE is a list of those itemsalready collected.
Cart-carry is a frame(and hence a sub-frame of the supermarketframe) descr ib ing the use of a cart forcarrying things.
(I am introducing a bit ofterminology (method-suggested) from(Charniak 75a); I will assume that it isreasonably sel f -explanatory.
Consult(Charniak 75a) for some explanat ion andjust i f icat ion.)
The FS's in (13) replacelines (10g) and (10h) and differ from themin two respects.
First (13) formulates thegoal in a manner neutral  with respect tousing a basket or not, with only asuggest ion that a basket be used.
This isobviously necessary if we are to handlestories where the person does not use abasket.
Secondly, it assumes the existenceof a separate cart-carry frame in which westore informat ion about using carts to carrythings.
We wil l  see other advantages ofthis move later, but at the moment we can atleast note that if one were to ask "Why doesJack use a basket?"
two answers (at least)would be possible - "to do shopping", or "tocarry his groceries".
(13) al lows for bothof these answers, whereas (10g) and (1Oh)only al low for the former, since there is noseparate "carry" level.The second piece of information weneeded to handle stories (11) and (12) wasthat to carry something with a basket it isnecessary that the thing be in the basket.The most natural  place to put suchinformat ion would be in our newly createdcart-carry frame where it would be some sortof a pre-requis i te (or more precisely a"strict" (as opposed, for example, to"suggested") substate to use the terminologyof (Charniak 75a)).
By creat ing thecart-carry frame and locating informat ionabout the act ion within it we alsocircumvent the need to dupl icate thisinformation elsewhere.
For example, anexpanded supermarket frame would include thefact that in some circumstances it ispermitted (and suggested) that one usesone s basket to take the groceries to one's45car.
By stat ing this as suggest ingcart-carry (SHOPPER, BASKET, PURCHASE-ITEMS,CAR) we no longer need an instruct ion to putthe groceries into the basket again beforesett ing out.IV.
SHARING FRAME STATEMENTS BETWEEN FRAMESSo far then I have argued that framesmust be able to reference sub-frames, and inparticular, the supermarket frame needs somesub-frame like cart-carry.
There is nothingexceedingly strange in this, but the nextstep will perhaps be a bit more interesting.Here I will suggest that some of the framestatements in our supermarket frame beshared with the cart-carry frame.
To seethe reasons for this, let us start by notingthat the fai lure to al low for common FS'swil l  lead to some curious redundancies inour frame.
One of these occurs in the DOloop of (10) which handles the col lect ion ofthe PURCHASE-ITEMS.
With our latestchanges, this portion of (10) (lines (e)through (k)) looks like:(14) a) Do for all ITEM PURCHASE- ITEMSb) SHOPPER choose next ITEMPURCHASE- ITEMS - DONEc) SHOPPER at ITEMd) s ide-condit ion DONE at ITEM alsoe) |method  - suggestedf) k-~cart-carry(SHOPPER,BASKET,DONE, ITEM)g) SHOPPER hold ITEMh) If CART then ITEM in BASKETi) DONE <- DONE + ITEMj) EndThe redundancy is this: we have alreadystated that cart-carry has a strictsub-state that the things to be carried mustbe in the basket.
But in (14) we furtherspecify in line (h) that ITEM is to be inBASKET, which is simply a special case.Once again my init ial  reason for beingconcerned with this is that I find suchredundancy unappeal ing, but again there seemto be more solid reasons for doing away withit.
In part icular  consider the fol lowingstory:(15) Jack was doing some shopping at thesupermarket using a shopping cart.
Thelast thing he got was a package of gum,which he picked up right at thecheck-out counter.
Jack put the gumand everything else down on thecounter .Question: Why didn't Jack put the gumin his basket?Again the quest ion seems silly, but again weall know that there would be no reason toput the gum into the cart simply becauseJack already has everything at the check-outcounter.
But (14) as stated does not al lowus to make this inference.
It s imply saysto put each ITEM into the BASKET and sinceno reasons are given there is no way to seethat in the part icular  case of the gum in(15) there is no reason to put the gum intothe basket.My solut ion to this problem is to seeline (14h) as shared between the supermarketframe and the cart-carry frame.
Looked atin this light, the reason for obeying (14h)is then the same as the reason for havingitems in the basket as stated in thecart-carry frame - if you wish to use thecart to carry an item it must be in thecart.
Since Jack has no reason for carryingthe gum in the cart he has no reason to putit in the cart.
(To be a bit more precise,Jack might have a reason to put the gum inthe cart, namely using the cart to carry .thegroceries to his car afterwards, but thisonly occurs after putt ing the grocer ies onthe check-out counter, hence does not countas a reason for doing it at the part icularpoint in time we are discussing.
)Now when I suggest that the two framesshare an FS, I do not mean that the one FSphysical ly  appears in both frames, a l thoughthis would be perfect ly possible in a listprocessing language like LISP.
There are,however, several good reasons for notimplement ing FS sharing by physicalidentity.
For one thing it would mean thatdif ferent frames would have to have the samevariables, which at the very least wouldcreate a major debugging problem.
From atheoret ical  point of view it seems l ikelythat such an attempt wil l  run into troublebecause two or more statements in one framewill  share the same FS in a second frame.If the two FS's in frame one have di f ferentvar iables there would be no way for the FSin frame two to be identical to both, andhence could not be physical ly the same.
(However I do not have a clear-cut exampleof this happening.
)So I wil l  not assume that FS (14h) isphysical ly  identical  to the corresponding FSin cart-carry, but rather that there is apointer from (14h) to the FS in cart -carrywhich says that (14h) should be consideredto be the same FS.
That is, we would havean arrangement somewhat like:(16) Frame for Frame forsupermarket  carry-cart.
.CARRIED_~ in CARRIERoITEM in BASKETidentitypointerHere I have created two new var iables forthe cart -carry frame, CARRIED whichspecif ies what is carried, and CARRIER whichis the cart used to carry.
Natural ly,  toactual ly  use the cart-carry informat ion forunderstanding the ITEM in BASKET line of thesupermarket frame it wil l  be necessary tosee that ITEM corresponds to CARRIED, etc.
(It may also be necessary to see thatSHOPPER in supermarket corresponds to thevar iable for the actor in cart-carry,  andthis would require more formalism, but I amnot sure it is necessary.)
Final ly, notethat there seems to be no reason to have acorresponding pointer from the FS incart-carry to ITEM in BASKET, since there isno need to know about supermarkets in orderto use a basket.Now if all of this seems eminent lyreasonable to you, feel free to skip thenext section.
But for those of you to whomthis seems a strange sort of data structure,what fol lows is an attempt to justify it byconsider ing one al ternat ive and showing howthe shared FS proposal  is superior.Beyond the "ugl iness" of theredundancy, the only argument we gave forreplacing (14h) with (16) was the story (15)where Jack did not put the gum into theshopping cart.
One way to solve both theredundancy, and the problem spot l ighted by(15), would be to s imply remove (14h) fromthe supermarket frame.
This c learly solvesthe redundancy problem, and it also solves(15) since now the only FS to the effectthat the goods should be in the basketappears in cart-carry, and since Jack has noreason for carry ing the gum in the cart hehas no reason to put the gum into the cart.The argument against this poss ib i l i tymust start from the recognit ion that it hassome counter intuit ive properties.Intui t ively one sees putt ing ITEM intoBASKET as the last state of co l lect ing ITEM.With this new solut ion this is no longer thecase.
Instead, putt ing ITEM into BASKET isa result of want ing to move to the nextITEM.
(To d ist inguish we wil l  call the itemone has just obtained ITEM and the item oneis going to obtain next ITEM .)
Hence,putt ing ITEM into the basket is not thelast thing of the N'th cycle, but one of thefirst of the N+1"st.
This is againt myintui t ion and makes me immediate ly  suspectit.Furthermore, this counter intu i t ivenessseems to have more substant ive impl icat ions.For example:(17) Jack was shopping at the supermarket.After gett ing a basket he went to themilk counter and picked up a carton ofmilk.
He then thought about what toget next.Question: Did Jack put the milk in thebasket?Answer: I would assume so.The shared FS model would al low for thisanswer since deciding on ITEM occursafter putt ing ITEM into the basket.
But bydelet ing (14h) we remove this in format ion sothere would be no way to answer the quest ionother than "I don't know".
(Of course, "Idon't know" is also an acceptable answer,but our model must al low for the variousa l ternat ive answers people can give.
)A second argument against delet ing(14h) comes from using our supermarket framein actual ly  doing shopping.
By delet ing(14h) we would be saying in effect that oneputs ITEM into the basket when checking tosee that all of DONE is in the basket whengoing to get ITEM .
Computat iona l ly  itseems horr ib ly ineff ic ient to bother tocheck on all of DONE each time (and in fact46IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII am sure that people do not do it).F inal ly by deleting (14h) we make itdiff icult to account for "mistakes" thatpeople make.
For example, suppose we hadthe variation of (15) where Jack does putthe gum into his cart only to immediatelytake it out again.
We then ask thequestion:(18) Question: Why did Jack put the gum intothe cart, since he only had toimmediately take it out again?Answer: Well, I suppose one normallyputs things into the cart immediatelyafter picking them up.Such considerat ions lead me to reject thealternat ive of deleting (14h).V.
A BETTER LOOKING SUPERMARKET FRAMESo far I have argued for the shared FSmodel primari ly on the basis of its abi l i tyto handle stories where mistakes occurred,but it is also the case that it allows us tosolve one of the "aesthetic" problemsmentioned earlier, namely the constantrepetit ion of "If CART then..." in (10).What we find is that all occurrences of thisphrase in (10) can be replaced by either anexplicit call to cart-carry (as in (13)) oran identity pointer to an FS in cart-carry,as in (16).
To give another example ofthis, consider line (I0c), repeated here:(I0)c) If CART then SHOPPER have useof BASKETThis is clearly another example of apre-requis ite of cart-carry, and henceshould be considered shared with cart-carryin the same way that ITEM is BASKET isshared.
Furthermore, we can now remove the"If CART then" portion of (I0c) by assumingthe eminently reasonable convention that ashared node in frame-1 which has a pointerto frame-2 is only appl icable to the actionin rame-1 if frame-2 is act ivated in thesense that we have created a frame image forframe-2.
When performing the action in reallife this means that upon deciding to use acart one sets up a cart-carry image and thisin turn makes the vaious FS's in thesupermarket frame dealing with cartsrelevant to one's activit ies.
While readinga story the general rule will be that any SSinstant iat ing an FS which is shared withcart-carry will be suff icient to create anFI for cart-carry.
With this convention(I0c) becomes:(19) SHOPPER have use of BASKET *identitypointer to cart-carryFurthermore, since I have argued that thesepointers are needed on independent grounds,we have received this s impl i f icat ion forfree.47With both this simplif ication, and theuse of cart-carry, our supermarket frame nowlooks like:(2o) a Goal: SHOPPER owns PURCHASE- ITEMSb SHOPPER decide if to use basket,if so set up cart-carry FIc SHOPPER obtain BASKET *cart-carryd SHOPPER obtain PURCHASE-ITEMSe |method - suggestedf) ~Do for all ITEM PURCHASE-ITEMSg) SHOPPER choose ITEMPURCHASE-ITEMS - DONEh SHOPPER at ITEMi J s ide-condit ion DONE at ITEMalsoj | method - suggestedk ~ cart-carry (SHOPPER,BASKET, DONE, ITEM)1 SHOPPER hold ITEMm ITEM in BASKET *cart-carryn DONE <- DONE + ITEMo Endp SHOPPER at CHECK-OUT-COUNTERq) s ide-condit ion PURCHASE-ITEMSJ at CHECK-OUT-COUNTER alsor) '\[method - suggesteds) ~car t -car ry  (SHOPPER, BASKET,PURCHASE-ITEMS,CHECK-OUT-COUNTER)t) SHOPPER pay for PURCHASE- ITEMSu) SHOPPER leave SUPERMARKETI have here adopted the convention ofindicat ing an identity pointer to anotherframe by a "*" fol lowed by the name of thesecond frame.In spite of the "s impl i f icatons"introduced, (20) is considerably longer than(10).
But on the other hand, (20) showsmuch more of the structure of shopping atsupermarkets than does (10).
So to pointout only one way where (20) is superior, it,but not (10), states that it is necessary toget one's groceries to the checkout counter,whether or not one uses a cart.
Of course,(20) stil l  does not contain more than afract ion of our knowledge of supermarkets,and in fact many of its part iculars areclearly wrong, but it's a start.VI.
INFERENCE ON FRAME BASED KNOWLEDGESo far I have been discussing theorganizat ion of knowledge and have suggestedthat a large portion of it is stored inframes which connect up to other frames byeither sub-frame relations or identitypointers.
But a quick look back will revealthat at the same time several issues ofinference have crept in.
For example nearthe very beginning we stated that if an SSinstant iates an FS then any modi f icat ion ofthe FS within the frame is true of the SSalso unless there is explicit information tothe contrary.
This, you will remember,al lowed the  system to conclude that whenJack got the shopping cart he was mostl ikely already at the supermarket, but hadyet to begin the actual act of col lect ingthe groceries.
Or again, when I ment ionedthat an FI had one or more progresspointers, I impl ic i t ly  assumed that onecould infer what actions had already takenplace using the time sequence information inthe frame plus the progress pointer in theFI.This is, of course, as it should be.One cannot, or at least should not, discussstructure independent ly of use and the useof frames is to al low us to make inferencesabout the stories we read.
Nevertheless,there remain many issues of inference leftuntouched by the previous discussion and Iwill cover one or two of them here.In (Charniak 72) I argued that someinferencing had to be done as the story wasread (i.e.
at "read time") rather thanafter a quest ion was asked ("questiontime").
I think it is fair to say that thisis now general ly  accepted, and the quest ionnow is how much inference is done at readtime, and of what sort.
I wil l  not arguethe point here (for a more up-to-datepresentat ion of the issue see (Charniak75b)), but rather make the rather strongassumption that one has not "understood" thetext unless one has made a certain, as yetundefined, class of inferences which enableone to tie the text together into a coherentwhole.Given this assumption we areimmediately confronted with a pressingproblem.
In pr inciple one can draw aninf inite number of inferences from a givenbody of text, and even in practice the totalnumber would be prohibi t ively large.
Someway then is needed to d ist inguish thoseinferences which need be made from thosewhich do not.
It is my impression that thesystem out l ined previously in this paper hasseveral nice propert ies in this regard.For one thing, many inferences whichwould have to be made in a "demon" system(Charniak 72) need not be made in the systemwe have just outl ined.
To again take theexample of Jack gett ing a shopping cart, Ipointed out that the supermarket frameal lowed the system to make severalinferences about the statement, like why hedid it, and that he had yet to start theshopping, but I left it vague as to whetherthese inferences should actual ly be made atread time, or only if a qust ion was asked.In fact, there seems to be l itt le reason foractual ly  making most of these inferences atread time.
Since the SS will have a pointerto the FS it instantiates,  we may assumethat a standard tactic for answer ingquest ions about a part icular SS, like whythe act ion was performed, or where, or when,would be to look in the frame for theanswer.
*  To put this s l ightly dif ferently,when an SS instant iates as FS it is notnecessary to put into the data baseinstant iat ions of all the modi f icat ions of*I might point out in passing that the useof the modify ing information in such amanner is a major reason why frames as Idescribe them look like "data" rather than"program".
Tradi t ional ly  programs have theproperty that they are not meaningful" local ly" whereas we want to be able to usea modi fy ing FS to answer a question about anSS without going through the entire frame.Hence my descr ipt ion of frames at thebegining of sect ion II as "a static datastructure.
"the FS.Looked at in this light, it isinterest ing to ask under what c i rcumstancesone would want to instantiate an FS and putit in the data base.
This is, after all, alarge class of potential  inferences and somerestr ict ions on them would be at least astart on the problem of which inferencesneed be made at read time.
The best answerI current ly have to this question is summedup in the fol lowing ru\].e.
(21) The Dual Usage Ru\].e: If X is an FS inan active frame (one which has an FI)then X wil l  only appear instant iated inthe data base if it has two purposes.Some typical  purposes are:a) appear ing in an active frameb) appear ing in the semanticrepresentat ion of the textc) updat ing older statements in thedata base(this list wil l  surely be expanded)So the typical  example of an FS whichappears instant iated in the data base is onewhich appeared in the semanticrepresentat ion of the text and was found toinstant iate some FS.
A more interst ing caseis exhibi ted by:(22) Jack was going to Bi l l 's b i r thdayparty.
He thought Bill would like akite.
Jack then went to the store.In (22) we should expect Jack to be buying akite at the store.
But consider thestatement(23) Jack1 own kitelOn one hand we can only predict that this isl ikely to occur using informat ion from thebirthday frame (perhaps in conjunct ion withthe given subframe).
On the other hand,this statement serves as the goal statementin the store frame.
To enable (23) to actas the link between frames in this fashionit must appear expl ic i t ly  in the data basewith frame pointers to two diferent framestatements in two dif ferent frames.
That isto  say, (23) appears in two active frames,and hence is a just i f ied instant iat ion.It seems to me that (21) is a fair lystrong rule, and it wil l  be interst ing tosee if it can be maintained.
Of course,given that the list of uses can be expanded,it is not complete ly  clear what would serveas a counter exmple to the rule, but itseems to me that the general  intent shouldbe clear.
For example, (21) would prohibitmany of the inferences made by Rieger 'ssystem (Rieger 74).
To give only oneexample, given statement (24) Rieger 'ssystem would infer statements like (25)-(28)none of which would qual i fy  by the standardset up by (21).
(24) Jack told Mary that Bill wants a book(25) John bel ieves that Bil l  wants a book(26) Mary now knows that Bill wants a book48IIIIIIIIIIIIIIIIIII(assuming that the ~ representat ion of"tell" is not something ike "cause toknow by word of mouth")(27) Bill might get himself a book(28) John may want Mary to give Bill a book(This is one of Rieger's own examples.)VII.
COMPARISON WITH THE DEMON APPROACHTo get some perspective in frames aspresented here let me compare them to thedemon based system of my Ph.D. thesis(Charniak 72).
On one hand this will enableme to explain why I have given up on thelatter, while at the same time point ing outwhat I see as the advantages of the former.For those of you not famil iar with (Charniak72) a paragraph of summary is in order.The point of the demon model was thatmany lines which had little s ignif icance inthemselves took on greater s ignif icance incontext, a prime example being "There was nosound" in the context of a child shaking hispiggy-bank.
To account for such s ituat ionsth model associated with each "topicconcept" (e.g.
piggy-bank, or supermarket)a "base routine" which was a program whichset up "demons" which would lie in wait forlines like "There was no sound" (which wouldbe the "pattern" of the demon).
Should theline occur, the demon would in effect say,"I know what this line means", and proceedto put statements in the data base whichexpl icated the s ignif icance of the line(e.g.
a statement like "This line impliesthere is nothing in the piggy bank").
Wecan draw the paral lel between base routinesand frames on one hand, and demons and framestatements on the other.
I wil l  come backto the s igni f icance of this paral lel  later,for the moment Just take it as a helpfulanalogy.One problem with the demon model isthat in some cases one is forced into ad hocformulations of facts due to the theoret icalmachinery seemingly not being suited to theproblem.Consider a fact like:(29) Umbrel las are used to keep rainoff one's head.To fit such a fact into the model justpresented, we would most natural ly treat itas follows:(30) Base routine which act ivates demon:Possibi l i ty of rain.Pattern: Person gets umbrella.Program: If person might be caught inrain he got the umbrel la to preventgett ing wet.This wil l  work quite well for stories like:(31) It looked like rain.
Jack got hisumbrella.49It would even be possible, using extramechanisms in the model, to handle a storylike:(32) As Jack was leaving the house he heardon the radio that it might rain.
Hewent to the closet.If asked why he did this we would respondthat he was probably getting an umbrella.
(It would be also possible to answer that hewas gett ing his raincoat, but this is notimportant since "raincoat" would also haveinformation connecting it to rain.)
Theextra mechanism which is needed here is theabi l i ty to put together the "expectat ion" ofgetting an umbrella, with our knowledge ofwhere umbrel las are normally kept toconclude that he is going to get hisumbrel la in spite of the fact that the word"umbrella" was never mentioned in (32).The trouble with this solution is thatit would not account for the fol lowingstory:(33) Jack began to worry when he real izedthat everyone on the street wascarrying an umbrella.Question: What was Jack worrying about?Answer: That it might rain, and he waswithout an umbrella.While it is intuit ively clear that  a factlike (29) comes into play here, theformulat ion in (30) as vague as it is, isincapable of accounting for (33).
Theproblem is that since (33) never mentionedrain, the demon expressed in (30) wouldnever have been activated.
To put this interms of pointers, the fact in (30) onlyal lows a pointer from "rain" to "umbrella",it does not al low a pointer from "umbrel la"to "rain" and hence cannot be used to helpus conclude in (33) that the problem israin.
It would be possible to put in asecond demon which would handle (33), butthis is the sort of ad hoc solut ion onewants to avoid.Within the frames model proposed inthis paper it is not hard to think upseveral solut ions to this problem.
Mypart icular favourite looks like:(34)Umbrel la ~ a - u s i n g  ~~ ain use: *-" Obtain *ize: --- Raise canopys(Kee p rainfo f f  person /Shape: --- ?
~ Method: * ~\[ J RaincoatPurpose: *Here Umbrel la and Umbrel la-us ing would beframes, while (Keep rain off person) mightbe a frame, although more l ikely it is an FSin the Rain frame or some such.
The pointhere is that what appears to be a problem inthe demon model is quite straight forward inthe frame model.Let us now return to the analogy madeearl ier between frame statements and demons.This analogy works so well because framestatements accompl ish precisely what demonswere designed to accompl ish -- assigns igni f icance to a line due to the context itis in.
So we notice how lines like(35)-(38) in the context of supermarket wil linstant iate FS's in the supermarket frameand hence (35)-(38) wil l  be given mores igni f icance than they have out of context.
(35) Jack got a cart(36) Jack picked up a carton of milk(37) Jack walked further down the aisle(38) Jack walked to the front of the store.He put the groceries on the counter.What is interest ing in this compar isonis that one demon usual ly has a min imum ofthree or four statements, whereas obviouslya single FS is only one statement.
FS'sseem then to have a considerable concisenessto them, at least when compared to demons.The reason for this is not hard to see.Demons being idependent facts must bindtheir own variables, and much of the size ofa demon is due to checks to make sure thatthe var iable bindings are correct (e.g.BASKET must be a basket, and not a carton ofmilk).
These same things must be checked ina frame, but since the scope of the var iableis the entire frame, rather than a singleFS, the overhead, so to speak, is shared.Furthermore,  the inferences about a given FSare stored impl ic i t ly  in the structure ofthe frame, whereas they had to be statedexpl ic i t ly  in the demon.
So a secondadvantage of the frames approach over demonsis the conceptual  economy one obtains in theexpression of facts.The analogy between FS's and demonsalso points to a third way in which theframes approach seems superior.
One problemwhich bothers many people ( including myself)about the demon approach is that itseemingly calls for large numbers of demonsto be act ivated every time a given topic isment ioned in  the story, a l though it isunl ikely that more than a small f ract ion ofthe demons wil l  ever be used.
There are twopossible reasons why people feel this is aproblem.
One is that so many active demonsmight make it hard to locate those demonswhich real ly should apply.
Frames do nothelp with this problem since there wil l  beequal numbers of FS's.To see the second reason why act ivat inglarge numbers of demons is problematic,  notethat if it took no time at all to set up ademon, sett ing up many of them would seemless bad.
But of course it does take timeto set up a demon, and it becomes a problemto Just i fy this computat ion in l ight of theunl ike l iness of the demon ever being used.Frames do offer a potential  solut ion to thissecond problem because with frames, ratherthan supermarket act ivat ing many demons, weneed only create a frame image for one frame(i.e.
supermarket) .
This would take muchless time, and hence would be better, but itshould be noted that we pay a price.
Inpart icular most of the work involved insett ing up a demon is to index our storageof active demons so that retr ieving the onesneeded wil l  be reasonably easy.
Bycomparison looking through frames to findmatching FS's promises to be a timeconsuming task unless we do somethingsimilar.
This is what I meant earl ier whenI said that perhaps each frame would haveits own index to its contents.
On the otherhand, the approach presented here al lows oneto trade more time for locating an FS inreturn for less time to set up a new topic(frame), and the spectre of all those neverto be used demons makes me incl ined toaccept this trade.Final ly, the frames presented here haveno problem handing time relat ions betweenFS's as we saw earl ier in the paper.
Thesame cannot be said of demons.
We sawearl ier how we might use a progress pointerto al low the program to notice actions whichwere out of sequence.
What could be theequivalent in the demon model of theprogress pointer?
For one thing, where wouldsuch a pointer be stored?
Short of givingevery demon a pointer to the progresspointer, an inelegant solut ion at best, itis not clear what one could do.Furthermore,  where would the time order inginformat ion be stored?
Notice that timeorder ing informat ion is much more complexthan a simple string, or even latt ice whichindicates the time orderings of actions.For example some time orderings are "str ict"in the sense that one cannot possibly dothings any other way, whi le others are"suggested" in the sense that it is a goodidea to do the act ions in a given order, butpossible to do them some other way, whi leyet others are "regulatory" in the sensethat it is possible, but i l legal to do theact ions in the opposite order (Charniak75a).
In the frames model one can storetime order ing statements in the frame alongwith the rest.
It is by no means obviouswhat to do in the demon model.
This is notto say that one could not do it, but ratherthat having done it one would be left withsomething of l i tt le resemblance to theor iginal  demon model, and even lessaesthet ic  appeal.REFERENCESCharniak, E., Toward g model  of chi ldren'sstorv 9_Q~r_~_bJ~n~gu!~.
AI-TR266, MITArt i f ic ia l  Inte l l igence Laboratory,  1972.Charniak, E., A part ial  taxonogy ofknowledge about actions.
Paper submittedto the Fourth Internat ional  JointConference on Art i f ic ia l  Intel l igence,1975a.Charniak, E., l~fere~cg and knowledge.Course notes for the Tutor ia l  onComputat ional  Semantics, Inst i tute forSemantic and Cognit ive Studies, 1975b.Minsky, M., A f ramework fQr reDre~ent lngknowledge.
AI-Memo 306, MIT Art i f ic ia lBO!!
!IIiI!I!IIIIIIIIIIIIIIiIIiIIntelligence Laboratory, 1974.Reiger, C.J., ConceDtual Memory.Unpublished Ph.D. Thesis, StanfordUniversity, 1974.Schank R.C.
and Abelson, R.P.
Scripts,Dlans a~ knowledge.
Paper submitted tothe Fourth International Joint Conferenceon Artificial Intelligence, 1975.51
