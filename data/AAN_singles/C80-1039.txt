ON FROFF: A TEXT PROCESSING SYSTEMFOR ENGLISH TEXTS AND FIGURESNorihiro Abe,* Nobutaka Uemura,*Masahiro Higashlde, Saburo Tsujl* Faculty of Engineering ScienceOsaka University** Nippon Electr ic CompanyIn order to meet the needs of a publication of papers in English, manysystems to tun off texts have been developed.
In this paper, we report asystem FROFF which can make a fair copy of not only texts but alsographs and tables indispensable to our papers.
Its selection of fonts,specification of character size are dinamically changeable, and the typinglocation can be also changed in lateral or longitudinal directions?
Eachcharacter has its own width and a line length is counted by the sum ofeach cha~racter.
By using commands or rules which are defined tofacilitate the construction of format expected or some mathematicalexpressions, elaborate and pretty documments can be successfullyobtained.1.
IntroductionWith a rapid advancement of scientific exchages, ahigh qualitative text processing system have beenexpected.
Under these circumstances, many systemswhich run off texts have been implemented.
In ourlaboratory, a typewiriter-based word processor with afixed widths of characters (it is called ROFF) wasdesigned.
Its output is, however, inferior in itsquality to the one printed by phototypesetter omanual operations.The Flexible Run OFF(FROFF) system is anintegrated system that is designed for setting not onlyordinary texts but also figures or tables indispensableto our documents, and utilizes a dot-printer as itsoutput device.
Here we must make mention of theTROFF designed for setting running text includingmathematics, but as this system drives an expensivephototypesetter on the UNIX operating system,member of the almost all standard research institutescan not adopt this system configuration when hecomes to think of its cost performance.
This FROFFsystem is easy to realize in a standard computersystem with the basic I /O devices including adisplay, dot-printer.
Recently, a laboratory providedsuch devices incrementally increasing, it can beknown for sure to be true that the circumstancesunder which a system with equivalent equipments toFROFF is implemented has been prepared.This program is written in mainly FLISP (adescendant of INTERLISP) and partly in Fortran,Assembler.
A reason for selection of FLISP as aprogramming language is an easiness ofprogramming, debugging, and extension of thesystem.2.
Hardware for FROFFThe FROFF system is implemented on .
amini-computer system HP2108A (64Kbytes) with anauxiliary memory (256Kbytes) which is designed tobe used asa  free-list region of FLISP and an imageprocessing memory  (see Fig.l).
When an imageinput/output is required, the auxiliary memory ispartitioned, into the two parts for: list and imageregions and a manipulation of image memory isperformed by the simple FLISP commands.The basic I /0  devices necessary for a pictureprocessing including keyboad, dot-printer, display,TV-camera, so on are required to input pictures andprocess them.
If no image outputs is expected, onlythe keyboad and dot-printer are necessary.--262----3.
Main Functions1) A variety kinds of command provided by thesystem allows us to produce various kinds of typestyles including line-drawing, picture output.
Aneasy application of this system being realized bymaking use of rules installed into  the system, towhom isn't satisfied: with a specification of suchstandard rules, he can define rules corresponding to,his own demands.
Using rules, Subscripts areautomatically printed in an appropriately size withno special intervention.2) Dynanic change in a font or a size of charactersare permitted and its computation of the widths ofstrings of characters i done automatically.3) An Automatic onversion of the head of sentencesinto capital letters enables a text to be input from acomputer terminal not equipped with smallcharacters.4) A Dynamic motions of a text to arbitaryhorizontal and vertial directions is allowed, beingutilized in a rule to print mathematics.5) A variety of kind of lines bcan be drawn, tableformats and pictures stored in the disc file beingprinted and a input devices Such as TV-camera,joystic make it easy to input those pictures.We want to add explanations for each of them.1) There are about 60 commands to fullfill formsprocessing requirements, by taking imaximumadvantage of them we are able to specify any textformats and to get an elaborate output document.
It,is, however, not easy for ,the users inexperienced tothis system to master functions of these commandsand to handle them effectively.
In regard to thisproblem, an application of rules is taken into thesystem as one of its .primal functions.
By the way,note that there is another merit brought with therule definition.Using FROFF, user can utilize any set of rulesprovided with the system by declearing names of therules he wants to use: It is needless to say that thereare many conventional styles in documents and thatFROFF should provide all of facillltieS that oneneeds for doing them, but it is also true that thereexists various kind of requirements peculiar to him.Those who are not satisfied with suchsystem-installed functions of rules can definesuitable rules to their own demands and also theserules are easy to beh taken into the system as itslibrary rules.
Here note that a primal reason forusing rules in specification of forms is that thesystem should be easy to be extended to have morefacilities, since requirements In format will varyocassionally and it is necessary that the modificationbe easy to implement at any time.
The method takenFig.
1.
Configuration of FROFF system.on this system simplifies this improvement of itsfunctions.2) As each character is given its own width, awell-balanced arrangement is obtained as itsconsequence.
For example, sample pattern forcharacter I and W are shown in Fig.2, whose widthare 13x12, 29x32 respectively, where the size is shownin a "dot".
As has already been understood, thispaper is printed by FROFF ,  a Various kind of fontsincluding roman, B01tl etc: are dynamically availableand their typeset in  italic is also done easily.
Atpresent fourteen kinds of fonts are prepared,and 60fonts will be in use near future.Flg.2.
Sample patterns I and W.Of  cource~ commands  for size specification ofcharacters enable a variety sizes of output to beaccomplised.
To my regret, characters enlarged toomuch are not necessarily good with respect to itsgrace, but there is no inconvenience to our usualpurposes (see Fig.3 for example).3) An input text can be processed at a terminal notequipped with small characters such as theconventional TTY and graphic displays.
The decisionwhether a heading Of words must be printed incapital or not is automatically decided by the systemusing common-sense rules that a head character ofthe sentence, which usually follows to ".
", should beprinted in capital and that any words following to"i.e.
", "e.g."
etc.
be in small.
As a result of thesesettlement being assumed, there is a disadvantage inthe case where one wants to type alI characters incapital like "FLISP SYSTEM" .263--FROFFLISpFig.
3.
An example of available character sizes.1-i-~To cover up such a weak  point which areoccasionally encounterd when there are somemixtures of big and small characteres in a string,sevaral rules to change fonts or sizes of characters otto concatenate them are prepared.
(Another way o!handling this problem will be stated in 9 ).4) We are able to avoid writing a sophisticatedprocedure such as  one needed to produce amathematical expression enclosed by a box (shown inFig.4) because some commands permits an outputlocation to be shifted relatively to any directions inrespect o the previous output position.5) It can be thought of as true thing that there is nopaper without any figures or tables.
Especially for alaboratory investigating picture processings and theirrelated fields, commands for a picture output or rulesfor a tabulation make it easy to insert computedresults into the document.
In this case, it is, ofcause, possible to add simple operations such as,inversion, partial extraction of pictures to them.
Fig.5(a) and (b) shows examples of picture outputs.Restricted to holizontal or vertical directions, varioustypes of lines can be readily drawn (see Fig.6).4.
A Coustruction of FROFF.Previous to the detailed explanation of rules andcommands, an overall structure of FROFF must begiven to guide an easy comprehension of it.At first, input text is given using the text editor.
Asshown in Fig.7, when texts are fed into the system,interpretation of rules is conducted in the followingway.
It scanning the sequence of texts for symbolsdefined as user specified or system library rules, theyare replaced with their definitions when found.
Uponcompletion of this stage, evaluation of  commands isexecuted, which is done in the way where a LISPfunction corresponding to each command is invoked.A result obtained from this step, as described in aflowchart in Fig.7, is converted to the binary data inorder to drive the versatec dot-printer by severalprograms written in Fortran, Assembler.5.
Commands and their examples.A source text of FROFF comprises text lines andcommand lines, which begines with a period, andblanks are regared as delimiters.
A string ofcharacters punctuated with a delimiter is called aFig.
4.
A mathematical expression enclosed lay a box.Fig.
5-(a)/5-(b).
Picutre output from a disc file.n i mum.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.I I I I I l \ [ l l l l \ [ l l l l l l l l l l l l l l l l l l l l l l l l t l l i l l i l l l l l l l l l l l l l l P l l l l l l rFig.
6.
An output of l ines.
"unit", an allocation of texts including justificationsand a page segmentation is accompleshed in terms ofthis "unit".
Any combinations of variables andvalues with units such as "MM", "CM" involvingthe arithmetical rules are permitted as arguments forthese commands (if a unit is abbreviated, a unit isregarded as a "dot", :where 1 cm equals to 78.8177dots).
These commands are partitioned into twoclasses, those for formats and for controllng forms.The former is used to specify the type form like anindentation, spacing, font change, centering etc.
andthe latter serves for dynamic control of such typestyles.
The general command form is the followingcommand-name arg-1 arg-2 - - -  arg-nwhere arguments can be default according to thespecification of the command.
Some examples of theformat commands are listed in Table 1.utilization and Definition of rulesAs mentioned earlier, there is no need for beingtroubled with detailed restrictions on commands if a264people not ski l led with them takes max imumadvantages of l ibrary rules.
To apply those rules, thefol lowing declarat ion is required... rule rule-1 ru le-2 .
.
.
.
ru le -n  ( .
)where ru le - i  must be the system rule.
To whomwants to def ine  rules for his own purpose, thecommand ".." al lows h im to formulate them in thefol lowing way.. .
ru le -name arg-1 arg-2 .
.
.
.
a rg -nbody of ruleowhere the :body of rule is cosisting of a sequence ofcommands or texts or a declarat ion of other rules tobe used  in th i s  rule, that is, i f  a new rule is def inedusing rules already defined in the rest of texts, theirname must  be declared as in (*)... ru le -name arg-1 arg-2 .
.
.
.
a rg -na sequence of commands.. rule rule-1 ru le-2 .
.
.
.
ru le -na sequence of commands?System parameters and contro l  commandsTo fu l f i l l  var ious requirements for format,  the needsfor chaging a width of page or variety of contro l  areexpected.
For  doing so, in this system the appl icat ionof rules ~are provided to users.
Yet, propers ide-effects by each rule must  be resulted from therule evaluat ion and the old status of parameters mustbe recovered as soon as its execution terminates.
Forexample,  assume now texts are pr inted in Roman,and some strings are expected to be in BOLD, whereof course this is done by a rule R, and then thespecif icat ion of font  must  be tai lored to suit acondit ion that a font specif icat ion is free from theold one.
For  this purpose, the fol lowing rules arerequired... R: R has no argument.ST gA: save a current  font.A 5: set a new font.
IT 4: write in I tal ic.
: end..-R: -R k i l ls  the effect of R.RS %A: recover the old font?
: endwhere gA is one of system variables, the value ofwhich is altered by subjecting to an effect o f . "
.A ' .To supply f lexibi l i t ies for contro l l ing formats,  a lmostal l  parameters  used in commands  are opened tousers.
Those var iab les  and their  re lat ion to page styleis demonstrated in Fig.8.
Several samples of contro lcommands and their  meaning are l isted in Table 2.6.
F igure outputsText processing system should provide feasibi l i t ies toinsert  several sizes of f igures.
Al locat ions of f iguresREAD FILE II INPUT .,.
\[ .-FROM INTERPRETATION \]JOYSTIC OF RULES ITV-C~MER.tl IEXECUTION' "l OF COMMANDI r -~-~\ ]1_  i~?
--~L~'-OUTPUT OF 'I( PATTERN J IIcHARACTERS~ 1 1 1  - / WRITTEN \ I OUTPUT OF \ [ /  IN 'lPICTURES I \[ FORTRAN \]I ,I ~ASSEMBLER /OUTPUT OF ILINE DATA IL- - - : J~.
---"'l-iI ~,'~'~'-~- I .
~ ;IDISPLAY l\[ UUFtI\[E' ) I OUTPUT A IDOCUMMENT IFig.
7.
A system f lowchart  of FROFF .L 1600 dots  r /.... 0 1% " "LY=150@i l l , .  '
~l,\~-  page IoriginI 2139" %PL dots%LB' tI~currentposition.
,  ' \ ] .Fig.8.
A: page format  and its re lat ion to parameters:are known as di f f icult  because the programneccessitates a modi f icat ion to texts  a l locat ion i fthere doesn' t  remain  enough space for displaying thepicture in a current  page, and this procedure must  besuspended and the remain ing  space must be f i l ledwith the subsequent texts.
And this interruptedcommands should be resumed when a new page isencountered (This is not restricted to figures, thesame is true for tables or mathemat ics) .
F igureoutputs are conducted with the fol lowing commands..pic name cr fnum Xo Yo mx my sx sy ex ey typean explanat ion statement ,for this f igure265--where an object of output is a fnum-th picture in apicture file, whose name is name, stored in acartridge cr and the real output is enlarged by rex, myafter an extraction from the original picture.Parameters uch as sx, ey indicate this extractiondomain.
It's needless to say that they are printed in atop location in the next page when sufficient linescan't be found.To be out of Order, we show briefly a mechanism andmeaning of this command.
When this command isencountered in the course of scanning of texts,program protects its current system parametersdescribed in Fig.8 and by checking arguments of thiscommand it computes a necessary longitudinallength, allocating the explanatory texts by assumingenough lines are remained in the current page.
Ineffect, even if a true end of page was found, this isnot suspended.
In case all texts are successfullysettled, the stored parameters are neglected and thesubsequent texts a re  processed in an ordinary way.Otherwise, on completion of execution of ".pie"command, its result including the retainedparameters are removed from the consequence so faracheived, and preserved for a next page.
~Space notoccupied in so doing are used to allocate the rest oftexts, and when an end of page is detected, systemparameters at that time are stored in a reservedlocation.
On a new page encountered, the abovementioned: result is reverted, as if ".pie" commandwas written immediately after a page changingcommand, after adding a slight modification to itsvertical coordinate values.
Then, the stored systemparameters are reset to as their old values and thesystem proceeds with successive procedures.7.
Line drawing and TabulationsAny types of lines expected should be drawn inrelation to the current output location or to thepre-specified coordinates for ready achievment oftabulations and others.
For this purpose nextcommands are prepared..line?
sx sy ex ey size nt n2 - - -  ni.line sx sy ex ey size nl n2 - - -  ntTheir relations between arguments and allocationsare given in Fig.9, where an origine of ".line?
"refers to the previous vertical location and that of".line" to the location given explicitly by user(regarding their horizontal one, both refer to %LXshown in Fig.8).
Especially, the former commandbrings easy achievement of tabulations ormathematics, like a horizontal line in a fraction or aroot symbol.
For tabulations, all specificationsneeded for achieving various types of forms desiredare not necessarily implemented In the currentversion because quite many styles on tabulation beingrequired, it is impossible to supply enough rules tofulfill them.
'(Sx sv)  rex ev)s ze - 21 V / /Anl In2 In31n4~ n5 ~n61 n7 \]~--Fig.9.
Parameters of a line command.But from experiences, it seems apparant hat tablesshown in Table 1,2 are most familiar to us incomparison to any other types, and it is enough forpractical uses if rules corresponding to them areprepared.
Still yet, this leacis to easy achievement oftables and easy learning of such rules.Let explain a first rule to make a list with equal l inewidths in the following.,table X Y ZAB M Nsets a window on a current page as shown in Fig.10,and a rule, *tb text, causes its contents to be enterdin a specific order.
The rule, *tbn F, completes thecurrent row, switching from a current row to thenext one with a vertical line-drawing.
When acompletion of table required, rule *endtb cancells itscurrent settlement of window and the old status forformattings i reverted.On the other hand, it's difficult to give a convenientmethod for tables with variable line widths as shownin Table 2, only a means are arranged with whichlines are drawn to the entries ofi tabl?
after allocationof them in a similar way mentioned above.
Howeverto my regret, results created by manual operationsseems superior to that generated by rule with respectto its easiness of a construction.~-- X--Ti- ~ -ctl2N-1N-" Z~A:  ~- FP'//,dFig.
10.
A rule for a typical tabulation.TMM_t2668.
MathematicsAs already stated in \[3\], this is known as difficult toset in type than any other kind of texts.
In TROFF,a language was designed to translate a convenientexpression for mathematics into a form readilyevaluated with TROFF.
This methodology quite suitsto a easy extension of system facility and excels inthe point that any person not skilled with details ofthe system are' able to use it.
But its easiness inextension depends most on existence of a goodcompiler-compiler which permits the system to beadded new facilities.
On the contrary, for our systemnot assumed such tools, another way of simplifyingthe specification of mathematics i  requisite.As a typical user of this system can be considered tohave common sense, on :technology, mathematicalexpressions must be described in a Polish notation asdescrived below.
Of course, standard 'things inmathematics, like subscripts, superscripts and theirlocations, are automatically adjusted irk anappropriate, size.
But in this system, there is aweakness in that special commands or rules must bewritten to concatenate subexpressions a in *fra a b+*omega, which generatesab+t0The reason why such inconvenience occurs should beelucidated.
Unlike the TROFF, this system treatsmathematics in a similar manner  to ordinal texts,which means that any expressions delimitted with ablank is regarded as a "unit" and this fact causes theexpressions to be broken up.
In this regard, TROFFis superior to our system.
But except for this defect,almost all of the facilities that one needs for doingmathematics are defined using, rules.
As has beendiscussed, new facilities needed for mathematics areeasily added to the system by using rules.
Now let usshow some examples in the following.
First of all,subexpressions are defined and by using definedsymbols main expressions are printed..D ,xl  ,2 *delta *() t -n : 6(t-n).D *x2 *sp e *2 -jn *omega : e -j"=.D ,x3 *fra *sp *lambda n .2 n !
: -~-.D *x4 *sigma3 n=0 *inf *x3 : ~ n!.D  *sub *2 *sp e *2 - ,lambda *x4 : e-~/~n=0*5 f *() t = *sub *xl*5 F *() *omega = *sub *x2oof(t)=e-x'~l~ 6 ( t -n) .
, F(=)=e "~ .
e -in=n:0  n=0where, symbol *k concatenates k"units".At last, we show a rule bringing a square rootexpression.
The relation of ~arameters to the style isshown in Fig.
11.
*Root (x).Ox?.SsxyX.Gsxy xl yl y2.Set xm / *  23 %x 32.Sex xm.Ox- -+x lxm.St %a 7oy.Set yh / 7oy 8.Y + yh yl.Oy - y2 yh.A 30 '.Bi !.Rs %a Yoy.L ine?00+xl /gox60/Yoy  16.Oy - yh y2.Ox+x l  / Yox 3.Sesy -y2 yh + yl y2/ 'origin / \[7\] ~7~/~1~ YIOI \[SXLFigll.
An!explanation for *Root.9.ExperiencesProblems such as, how well this system satisfies agoal of being easy to use, how easy it was to build orextend beyond:its original limitations should bediscussed.
As to ease of use, f rom,our  experinces,FROFF is found to be useful tool for making faircopy of documents except for a few deficiencies.They are inconvenient in doing mathematics,and hasa weakpoints in its speed and a lack of smallcharacters, which have been already mentioned inthis paper, Though there is obviously a great dealmore to be done in order to improve thesedeficiencies, any other way of supplementing thefirst problem is not taken at present.~267--For the rest of those problems, the following methodis adopted.
That is, we decided to use FROFF  as adevice to accomplish a complete document, and usethe above mentioned ROFF with fixed character sizesas that for a draft or a debugging.
As shown in thisfigure, the text which was typed in accordance withthe prospectus of ROFF are translated into that forFROFF.
In this case, commands or  rules formathematics and figures are not affected with thistranslation; only a conversion from mixtures of bigor small characters into a description correspondingto the restrictions of FROFF  is conducted.AcknowledgementsThe authors would like to thank Fumih ide Itoh,Itsuya Soga for their contribution in preparation ofthis paper.As this ROFF: and its translator are written inAssembler, steps needed for obtaining a completeresult are decreased to a large extent.
This paper is,of course, typeset by the authors using first theROFF,  secondly the translator and at last usingFROFF.TYPE SYMBOL DEF IN IT ION.A n Selection of font of characters.X n Alter a width of characters into n.L n Space out n lines.PI n Set a length of page to n.B n Definition of character size : big or small letter etc.COMM .Ox n Sift an output location to horizontal direction-AND.Joy Accept a coordinate by the joystic.Pie Output a picture.Line Drew a line.Box Output a box*It Print an expression in italic form*Sf a b Make an expression with a suffix : ab*Sp a b Make an expression a ~aRULE .F ra  a b Print a fractional expression*Sigma3 a b c*Theta*Phd osaka*Joho 5bMake an expression ~cRPrint a Greek letter 0Output a string Ph.D. Thesis, Osaka University,Print a string Information Pro~'essing of Japan, 5Table 1.
An Exampl of Commands and Rules.-268-Reference1\] Jack E. Shermer and Lortnda L. Cherry : TheSoft Display Word Processor, Computer, Vol.
l l ,No.12 p.39 (DEC. 1978)2\] David H.  Hartke, Warren M. Sterling, and JackE.
Shermer  : Design of a Raster Display Processorfor Office Applications : IEEE Computers, C-27,No.4, pp.337-348 (APR.
1978)3\] B. W. Kernighan, L. L. Cherry, A System forTypesetting Mathematics, CACM, Vol.18, No.3, p.151(1975)4\] Tsukuba Computer Center : Tsukuba Run-offSystem, (1976)5\] M. E, Lesk and B. W. Kernighan : ComputerTypesetting of Technical Journals on UNIX, Proc.
ofNCC, pp.879-888 (1977)6\] K. Hasebe, S. Nomoto and H. Ishida : An OnLine Phototypesetter Support System, ComputerCenter, Univ.
of Tokyo, (MARCH 1979)7\] M. Higashide : Roff User's Manual, OsakaUniversity, (APR.
1978)8\] M. Higashide : FLISP System and its Applicationto Run Off, Master Thesis of Osaka University,(FEB. 1979)9\] N. Abe, M. Higashide and S. Tsuji : AnImprovemectt of FLISP System by MicroProgramming, IECE-D, (1979)10\] M. Higashide, K. Kontshl, N. Abe and S, Tsuji :The FLISP System for Mini Computer usingB-frame Technique and M-frame Techinque,Information Processing of Japan, No.I, pp.8-16,(1979)Command name Functions.St arg' l  - - -  arg-n.Rs arg,1 - - -  arg-n.Ox n.Ox?.Gsy arg-1 arg-2 arg-3..If predtextlOtext2Arg-i is a variable including system parameters,this stacks values of arg-l.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.This resets values of arg-i stacked by .St.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Shifts a next output location to horizontal by n.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.This is converted to the command .Ox when acommand .Sex is found in the text.. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.As shown in Fig.l l ,  height of text from theorigin is computed.If pred is true, textl is regarded as a text, elsetext2.Table 2.
Examples of control commands.269
