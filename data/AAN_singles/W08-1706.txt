Coling 2008: Proceedings of the workshop on Grammar Engineering Across Frameworks, pages 41?48Manchester, August 2008From Grammar-Independent Construction Enumeration toLexical Types in Computational GrammarsLars HellanNTNUN-7491 TrondheimNorwaylars.hellan@hf.ntnu.noAbstractThe paper presents a code for enumerat-ing verb-construction templates, fromwhich lexical type inventories of compu-tational grammars can be derived, andtest suites can be systematically devel-oped.
The templates also serve for de-scriptive and typological research.
Thecode is string-based, with divisions intoslots providing modularity and flexibilityof specification.1 IntroductionThis paper presents a code for enumerating verb-construction templates.
The code is string-based,with divisions into slots providing modularityand flexibility of specification.
The templatesprovide slots for specifying, relative to a con-struction- part of speech (POS) of the head- grammatical relations exposed- valence bound items- thematic roles expressed- situation type- aspect (Aktionsart)- part of speech of valence-bound items.
(These parameters altogether cover what is com-monly referred to as 'argument structure' relativeto the main predicate.)
The code is outlined insections 2-5, and 8.From the verb construction templates, lexicaltype inventories of computational grammars can?
2008.
Licensed under the Creative Commons Attri-bution-Noncommercial-Share Alike 3.0 Unportedlicense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.be derived (section 6).
The design offers a sys-tematic way of organizing test suites, and here-with improved means of defining intra- andcross-framework reference points of coverageand depth of analysis.
The template code alsolends itself for descriptive and typological re-search (section 7).The design is not geared to any particularframework of computational grammar or linguis-tics.
Examples will be offered relative to HPSG-and LFG- grammars, and the actual conversionsfrom templates to lexical types so far developedrelate to HPSG grammars using the LKB plat-form (cf.
(Copestake 2002)), based on the 'HPSGGrammar Matrix' design ((Bender et al 2002)).Our exposition will be based on the design as itrelates to the LKB-grammar NorSource (cf.
(Beermann and Hellan 2004)) and a Verb-Construction enumeration for Norwegian.The enterprise here presented has lines goingback at least to the mid and late 80ies, both re-garding test suite development (e.g., (Flickingeret al 1987), (Lehmann et al 1996)) and argu-ment frame inventories ((Hellan et al 1889)).2 Code for Template EnumerationBy a template for a verb construction we under-stand a standardized way of exposing selectedfeatures of the construction.
Exposed features areclassificatory features, and in this respect, a tem-plate may be regarded as a type.A system for enumerating templates shouldbe designed such that they are, internal to a givenlanguage, complete and transparent, and acrosslanguages, comparable both in templates sharedand in templates distinct.
Technologically theyshould be as low level as possible, and platformindependent, and be equally accessible to practis-ing field linguists as to NLP researchers in com-putational settings.
With such desiderata in mind,41we develop a code residing simply in strings ofsymbols with a minimum of internal syntax.The basic structural parts of such strings arereferred to as slots.
In the slot specification, thefollowing conventions are observed:* Slots are interconnected by '-' (hyphen).
* Distinct items inside a slot are interconnectedby '_' (underline).
* An item label containing neither ?-?
nor ?_?
isan uninterrupted string of letters.
Internal com-position is indicated by alternation between smalland capital letters.The format can be applied also to non-verbalconstructions, but we here focus exclusively onverbal ones.
These have a template structure withfive slots:Slot 1: POS of the head, and diathesis informa-tion.Slot 2: Valency, or transitivity specification (e.g.,intr, tr, ditr,... ).Slot 3: Dependents' specification (syntactic andreferential properties of arguments).Slot 4: Participant roles.Slot 5: Situation type (written in SMALL CAPS).Slots 1 and 2 are always filled, the others neednot be.
A slot not specified is not displayed asempty; however, the sets of labels defined for thevarious slots are disjoint.
Likewise, no labels aredistinguished in terms of capital letter vs. not.
(1)illustrates the composition, for a type instantiatedby the clause Mary throws the ball:(1) v-tr-obDir-suAg_obEjct-EJECTIONSlot 1 here says the head is Verb, slot 2 says thatthe construction is transitive, slot 3 says that theobject har a directional function, slot 4 says thatthe thematic roles are 'agent', expressed by thesubject, and 'ejected', expressed by the object,and slot 5 says that the situation type is one char-acterizable as 'ejection'.We start with a survey of the labels used forslot 2, valence information.
First, for the use ofthe notions intr, tr, ditr, the following defi-nitions apply.
By a direct syntactic argument of averb, we understand a nominal constituent syn-tactically related to the verb as subject-of, directobject-of, or indirect object-of, and any clausalconstituent with either of these functions.
(Thisincludes expletive subjects and objects, and ex-cludes clausal constituents in extraposed posi-tion; it also excludes any NP or clause governedby a preposition or another relation-item.)
Anintransitive construction is then one with onlySUBJECT as a direct syntactic argument, a transi-tive construction has a SUBJECT and one OB-JECT as direct syntactic arguments, and a ditran-sitive construction has a SUBJECT and two OB-JECTs as direct syntactic arguments.
Any va-lence-bound item other than those now describedis represented by an extension of the above tran-sitivity-strings, for instance, in the strings in-trObl and trObl, Obl means 'oblique', that is,in addition to the number of arguments repre-sented by intr/tr, there is a PP with 'selected'status.The valence slot includes information as toreferential status of the arguments.
We say that adirect syntactic argument is standardly linkedwhen it has referential content and has a seman-tic argument function relative to the verb.
Thisexcludes expletive subjects and expletive objects,as well as 'raised' full NPs.
The following sub-strings in slot 2 indicate the presence of itemsthat are not standardly linked:Impers ('impersonal'), Presentational, Epon('extraposition'), Nrf ('non-referential'), Rais('item raised, i.e., non-argument'), Nrg ('non-argument' - used in slot 3)).Specifications are sought to be non-redundant.For instance, the string intrEpon occurring inslot 2 entails that there is an expletive subject,and when used for a langauge like English, thereis no need to say elsewhere that the subject isexpletive.
Since what is redundant relative to onelanguage may not be so relative to another, ques-tions of language-parametrized interpretation ofcode may arise; however, we do not have a basisyet for suggesting whether and how this wouldbe accommodated.3 Valency labelsThe slot for valency, slot 2, has around 45 possi-ble specifications relevant to Norwegian, and westate those in full, to give an impression of whatmay be the expected scope of this slot; an exam-ple illustrates each type:intr = intransitive, i.e., with only SUBJECT asdirect syntactic argument.intrImpers = impersonal intransitive, i.e.,SUBJECT is an expletive not linked to any otheritem in the clause.
(Ex.
: det regner  'it rains')intrImpersPrtcl = impersonal intransitivewith an aspectual particle.
(Ex.
: det klarner opp'it clears up')intrImpersObl = impersonal intransitive withan oblique argument.
(Ex.
: det synger i fjellene42'it sings in the mountains')intrPresentational = intransitive with apresentational structure, i.e., an expletive subjectand an indefinite NP.intrDirPresentational = intrPresenta-tional where the presented NP has a directionalfunction.
(Ex.
: det springer en mann  'there runs aman')intrPresentationalLoc = intrPresenta-tional with a locative constituent.
(Ex.
: det sitteren mann i stolen 'there sits a man in the chair')intrDir = intransitive where the subject has adirectional function.
(Ex.
: gutten l?per  'the boyruns')intrAdv = intransitive with an obligatory ad-verb.
(Ex.
: han fungerer godt  'he functions well')intrPrtcl = intransitive with an aspectual par-ticle.
(Ex.
: regnet varer ved  'the rain lasts')intrObl = intransitive with an oblique argu-ment.
(Ex.
: jeg snakker om Ola  'I talk about Ola')intrOblRais = intransitive with an obliqueargument from which an NP has been 'raised'.(Ex.
: han later til ?
komme  'he appears [to] to come')intrScpr = intransitive with a secondary predi-cate (Small Clause predicate).
(Ex.
: gutten virkersyk 'the boy seems sick')intrEpon = intransitive with an 'extraposed'clause.
(Ex.
: det hender at han kommer 'it happensthat he comes')intrPrtclEpon = intransitive with an 'extra-posed' clause and an advparticle.
(Ex.
: det h?rermed at han kommer  Mock Eng: "it hears along thathe comes")intrOblEpon = intransitive with an 'extraposed'clause and an oblique argument.
(Ex.
: det hastermed ?
rydde  Mock Eng: "it urges with to tiden up")intrPrtclOblEpon = intransitive with an 'ex-traposed' clause, an oblique argument, and anadvparticle.
(Ex.
: det ser ut til at han kommer MockEng: "it looks out to that he comes")intrPrtclOblRais = intransitive with anoblique argument from which an NP has been'raised', and an advparticle.
(Ex.
: han ser ut til ?komme Mock Eng: "he looks out to to come")intrImplicobjObl = intransitive with implicitobject, followed by PP (Ex.
: han s?lte p?
seg 'hespilled on himself')tr = transitive, i.e., with SUBJECT and one OB-JECT.trDir = transitive, where the subject is under-stood in a directional function.
(Ex.
: Kari n?r top-pen 'Kari reaches the top')trPrtcl = transitive with an advparticle.
(Ex.
:Kari fant ut svaret 'Kari found out the answer')trPresentational = presentational structurewith an NP preceding the 'presented' NP.
(Ex.
: detventer ham en ulykke 'there awaits him an accident')trObl = transitive with an oblique.
(Ex.
: jegsparker Ola i baken 'I kick Ola in the butt')trEponSu = transitive with an extraposed clausecorrelated with the subject, and an argument ob-ject.
(Ex.
: det bekymrer meg at han kommer 'it wor-ries me that he comes')trEponOb = transitive with an extraposed clausecorrelated with the object, and an argument sub-ject..
(Ex.
: vi muliggjorde det at han fikk innreisetil-latelse 'we possible-made  it that he got entrance visa')trScpr = transitive with a secondary predicate(Small Clause predicate).
(Ex.
: han sparket ballenflat 'he kicked the ball flat')trNrf = transitive whose object is non-referential.
(Ex.
: Kari skammer seg "Kari shamessherself" - 'Kari is ashamed')ditr = ditransitive, i.e., with SUBJECT and twoOBJECTs (here referred to by the traditionalterms 'indirect' ('iob') and 'direct' object, whendistinction is necessary).ditrObl = ditransitive with oblique.
(Ex.
: jegkaster Ola kakestykker i ansiktet  "I throw Ola cakesin the face" - 'I throw cakes in the face of Ola')ditrNrf = ditransitive whose indirect object isnon-referential.
(Ex.
: han foresetter seg ?
komme'he [foresetter] himself to come)copAdj = predicative copular construction withadjectival predicative.
(Ex.
: han er snill 'he iskind').
(Similarly: copN.
(Ex.
: han er bonde 'he ispeasant'); copPP (Ex.
: forestillingen var underenhver kritikk 'the perforrmance was below critique');copPredprtcl (Ex.
: Ola er som en gud  'Ola islike a god'))copIdN = identity copular construction withnominal predicative.
(Ex.
: dette er mannen 'this isthe man'.)
(Similarly: copIdAbsinf (Ex.
:oppgaven er ?
spise silden 'the task is to eat the her-ring'.
); copIdDECL (Ex.
: problemet er at han spisersilden 'the problem is that he eats the herring'.
);copIdYN (Ex.
: problemet er om han spiser silden'the problem is whether he eats the herring'.
);copIdWH (Ex.
: sp?rsm?let er hvem som spiser silden'the question is who eats the herring'.
))copEponAdj =  predicative copular constructionwith adjectival predicative and the 'logical sub-ject' extraposed.
(Ex.
: det er uvisst hvem som kom-mer 'it is uncertain who that comes'.)
Similarly: co-pEponN (Ex.
: det er et sp?rsm?l hvem som kommer'it is a question who comes'.
); copEponPP (Ex.
: deter hinsides diskusjon at han kommer 'it is beyond dis-cussion that he comes'.
); copEponPredprtcl43(Ex.
: det var som bestilt at han tapte igjen 'it was likebooked that he lost again'.
))4 Dependents' labelsThe slot for dependents, slot 3, has around 40labels relevant for Norwegian.
Each is built upwith a first part indicating the grammatical func-tion of the item specified (su, ob, iob, obl,sc, epon), and the remainder providing thespecification, possibly also with some internalstructure.
The following lists most of them:suExpl = subject is an expletive.suDECL = subject is a declarative clause.
(Simi-larly: suYN = subject is a yes-no-interrogativeclause; suWH = subject is a wh-interrogativeclause; suAbsinf = subject is an infinitivalclause with non-controlled interpretation.
)suNrg = subject is a non-argument.obDir = object is understood in a directionalcapacity.obRefl = object is a reflexive.obReflExpl = object is an expletive reflexive.obDECL = object is a declarative clause.
(Simi-larly: obYN, obWH, obAbsInf)obEqInf = object is an infinitive equi-controlledby the only available possible controller.obEqSuInf = object is an infinitive equi-controlled by subject.obEqIobInf =  object is an infinitive equi-controlled by indirect object.obEqSuBareinf =  object is a bare infinitiveequi-controlled by subject.obEqIobBareinf =  object is a bare infinitiveequi-controlled by indirect object.iobRefl = indirect object is a reflexive.iobReflExpl = indirect object is an expletivereflexive.oblEqSuInf = the governee of the oblique is aninfinitive equi-controlled by subject.oblEqObInf = the governee of the oblique is aninfinitive equi-controlled by object.oblRaisInf =  the governee of the oblique is aninfinitive which is raising-controlled by the sub-ject.oblRefl = the governee of the oblique is a re-flexive.oblDECL = the governee of the oblique is a de-clarative clause.
(Similarly: oblYN, oblWH,oblAbsinf)oblPRTOFsubj = the referent of the governee ofthe oblique is interpreted as part-of the referentof the subject.
(Ex.
: jeg fryser p?
ryggen 'I freeze onthe  back' - I'm cold on my back')oblPRTOFobj = the referent of the governee ofthe oblique is interpreted as part-of the referentof the object.
.
(Ex.
: jeg sparker Ola i baken 'I kickOla in the butt')oblPRTOFiobj = the referent of the governeeof the oblique is interpreted as part-of the refer-ent of the indirect object.
(Ex.
: jeg kaster Olakakestykker i ansiktet  "I throw Ola cakes in the face"- 'I throw cakes in the face of Ola')oblEponAbsinf = extraposed is a non-controlled infinitive occurring as governee of anoblique.oblEponDECL = extraposed is a declarativeclause occurring as governee of an oblique.scSuNrg = the secondary predicate is predicatedof a non-argument subject (i.e., a subject notserving as semantic argument of the matrix verb -i.e., a 'raising to subject' subject).scObNrg = the secondary predicate is predicatedof a non-argument object (i.e., an object not serv-ing as semantic argument of the matrix verb - i.e.,a 'raising to object' object).scAdj = the secondary predicate is headed by anadjective.
(Similarly: scN, scPP,scPredprtcl, scInf, scBareinf)eponDECL = extraposed is a declarative clause.
(Similarly: eponYN, eponWH, eponCOND, epon-EqInf, eponAbsinf)We illustrate with a use of the 'small clause'specification scSuNrg.
One of the constructiontypes it serves to qualify is exemplified byhan synes syk 'he seems sick',which is a raising construction of the logical form'seem (he sick)', where the subject han does nothave a semantic argument function relative to theverb.
The label specifying this type isv-intrScpr-scSuNrg_scAdjwhere intrScpr states that the only constituentssyntactically present are a subject and a secon-dary predicate, scSuNrg states that the subjectlacks semantic argument status relative to theverb, and scAdj states that the secondary predi-cate is headed by an adjective.
The circumstancethat the latter two specifications concern depend-ents rather than over-all valence, is marked by anunderscore interrelating them.A transitive counterpart to this type is exem-plified by han synes meg syk 'he seems me sick',of the logical form 'seem-to-me (he sick)', wherethe subject han still does not have a semantic44argument function relative to the verb.
The labelspecifying this type isv-trScpr-scSuNrg_scAdjwhere trScpr states that the constituents syn-tactically present are a subject, an object and asecondary predicate, and the other specificationsserve as in the previous example.With utilization of the slot 2 and slot 3 deter-minants, around 200 templates have been definedfor Norwegian (these can be viewed at the sitetypecraft.org (research/research projects).Deciding what is to go in slot 2 and what inslot 3 is in most cases starightforward, but notalways.
For instance, it will be noted that in thecopula valence labels entered at the end of thelist in section 3, specifications like 'YN'.
'DECL'etc are used which are otherwise used mainly independents' specifications.
For one thing, in acase where an adverb or a PP is obligatory, andthere is no relational 'super-term' available forspecifying its presence, one will refer to the con-stituent by head property directly, as in in-trAdv.
In the case of the copulas, one mighthave entered 'YN' etc tied to a grammatical rela-tion 'identifier' for the identity copula, and 'predi-cative' for  predicative copula, giving, e.g., v-copPred-predAdj instead of v-copAdj for thepredicative adjectival copula construction, andv-copID-idN instead of v-copIdN for theidentity construction.
Here it is essentially lengthof labels, and sparsity concerns concerninggrammatical relations notions, which havecounted in favor of the latter options - either op-tion is in principle possible.Conversely, instead of writing 'trScpr-scSuNrg_scAdj' in the example discussed, onecould have written 'trScprAdj-scSuNrg', or'trScpr-scSuNrgAdj' - against the former is awish to generally have POS of dependents beingstated in the dependents' slot, and against the lat-ter counts the circumstance that the secondarypredicate specifications are in general rathercomplex already; this point will be further illus-trated in section 8 below.5 Thematic roles and situation typesIn specifying semantic roles and situation types,classifications available are less robust than theyare for the factors covered above, and for thatreason, the notational system will not insist thatthey should be provided.
Closest to practicalconsensus are core semantic role labels such as'agent', 'patient' and the like, and aspectual speci-fications; much less established is a set of situa-tion types covering the full range of construc-tions in a language.
In this section we do notprovide any tentative list of values to be used,but comment only on how they are expressed.As exemplified in (1), each semantic role labelis built up with a first part indicating the gram-matical function of the item specified, and theremainder providing the specification - thus,suAg, obEjct..
Unlike the case with dependents'labels, the remaining part has no internal struc-ture.Situation types may in principle cover any-thing between Aktionsart and detailed situationalspecification, like in a FrameNet label (cf.http://framenet.icsi.berkeley.edu/).
In the systemcurrently implemented, the level of specificationis somewhere between these two: Sitaution typelabels can be decomposed into standard aspectualnotions (like those proposed in Smith 1991,1997) and specifications uniquely identifyingeach type.
An example is the possible situationlabel CAUSATION_WITH_CAUSINGEVENT,which means "causation where the cause is itselfan event and its event type is linguistically iden-tified", and which implies certain aspectual no-tions, such as 'dynamic' and 'telic'.We illustrate the full specification of the ex-ample han synes meg syk 'he seems me sick' dis-cussed above, which is:(2)v-trScpr-scSuNrg_scAdj-obCog_scThSit-PROPOSITIONALATTITUDE'obCog' here means that the object expresses a'cognizer', and 'scThSit' that the secondarypredication expresses a 'situational theme'.
It willbe noted that, consistent with the non-argumentstatus of the subject, there is no thematic role tiedto the subject.With utilization of the slot 4 and slot 5 deter-minants, around 280 templates are currently de-fined for Norwegian.Slots 3 and 4 are both 'constituent oriented',and may provide specifications of one and thesame item.
For instance, in (2) all of scSuNrg,scAdj (slot 3),  and scThSit (slot 4) define thesecondary predicate.
In principle it would bepossible to draw these different specificationstogether into a unitary, but more complex, speci-fication.
This was done, e.g., in the TROLL sys-tem (cf.
(Hellan et al 1989)), where argumentswere specified as triples of (i) head's POS, (ii)45grammatical function, and (iii) thematic role (in-cluding possible non-argument status).
Amongpossible advantages of the current system are thatit better profiles 'global' properties of the con-struction, that it better displays the profile of par-ticipant roles, when entered, and makes omissionof them practically more easy.
Cf.
(Lehmann etal.
1996) for further discussion.6 From Templates to GrammarsThe information encoded in the first three slotsattains the same depth of argument structure de-scription as is modeled in standard Matrix-HPSGgrammars, and approximately as in standardLFG-Pargram grammars (cf.
(Butt et al 1999)).Argument structure being what is generally en-coded in lexical entries for verbs in such gram-mars, we now address how the template systemcan be used as lexical types or macros.Minimally, templates could be imported as 'enbloc' type- or macro labels into computationalgrammars.
However, the hyphenation and under-score structure of the templates suggest moremodular strategies, as we will now show for atyped feature structure design.For instance, for the template in (2) -v-trScpr-scSuNrg_scAdj-obCog_scThSit-PROPOSITIONALATTITUDEone could see this as equivalent to a unificationof syntactic types representing, resp., 'verb-headed', 'transitive with a secondary predicate','secondary predicate predicated of raised subject',and 'secondary predicate headed by an adjective',and the semantic types 'cognizer, as role of ob-ject', and 'situational theme', as role of secondarypredicate.
In the tdl notation used in LKB gram-mars, this would suggest (3) as one of its typedefinitions (ignoring the situation type label fornow):(3)v-trScpr-scSuNrg_scAdj-obCog_scThSit   :=v & trScpr & scSuNrg & scAdj & obCog &scThSit.Here, the type in line 1 is defined as the unifica-tion of the types inter-connected with '&'.
Me-chanically speaking, in going from template togrammatical type, one simply replaces each hy-phen or underline in the template label by a typeunification symbol.
As individual types (as iscustomary, mention of such types is done withitalics) v, trScpr, scSuNrg, scAdj, obCog andscThSit will all be at 'sign' level.
That is: when,in an LKB-like grammar, these types are to unifywith each other, they must belong to a commonsupertype, and given that what they are compos-ing together is the type of a verb lexeme, this is,in a Matrix-type grammar, an instance of the typesign.
For instance, the type definition for scAdj,relative to NorSource, is (with PREDIC being anattribute introducing secondary predicates, andQVAL introducing grammatical relations in anon-list fashion, ?
la LFG):(4)  scAdj := sign &[SYNSEM | LOCAL | CAT | QVAL | PREDIC | LO-CAL | CAT | HEAD adj].In what part of the over-all grammar will thesetypes be introduced?
A first question is if 'con-struction' is a type of entity to be assumed amongthe building blocks of the grammar.
In standardHPSG and LFG design, the tendency is to projectconstruction types into the inventory of lexicaltypes, so that verb-construction types enter thegrammar through the subcategorization framesassociated with verbs.
On this view, a definitionlike (3) will be in an inventory of lexical typedefinitions.How do lexical items, in this case verbs, relateto these types?
If we consider the more standarddesign in HPSG and LFG grammars, where averb has as many entries as there are constructionframes in which it can enter, most verbs can en-ter more than one constructional environment.1Thus, in the typical case, a verb will be associ-ated with a subset of the totality of types deriv-able from the template collection, and thus haveentries each one defined by one of these types.Some points of useful flexibility in this map-ping may be noted, illustrated with the choice ofhead in secondary predicate constructions (cf.
(4)): in constructions like those discussed, eligi-ble such heads are in principle adjectives, ad-verbs, prepositions, predicative particles and in-finitivals.
For a given verb, the full range of op-tions need not be open, hence in defining thegeneral verb type corresponding to the templatev-trScpr-scSuNrg_scAdj-obCog_scThSitone may want to leave the sc-head open, andrather have a way of appending that informationfor each individual verb.
By separating out the1 We here ignore possible designs which might, for eachverb, represent it with one single entry, and account for itsmany frames of occurrence either through a network oflexical rules, or through underspecifying each entry to yield,for each verb, exactly the range of environments it can oc-cur in.46relevant part (_scAdj, _scAdv...,), and defining v-trScpr-sSubNrg_scAdj, v-trScpr-scSuNrg_scAdv,etc.
as subtypes of  v-trScpr-sSubNrg, one can inan LKB grammar enter each verb in the lexiconwith the appropriate last part provided (and leavethem out when the verb actually can combinewith all options).
In such an approach one has todefine all constellations in the relevant type file,the gain lies in the flexibility one has in the lexi-cal entry specifications.
The same advantagesapply with regard to specification of semanticroles.7 Uses of the template inventoriesA first possible usage of a template inventory isthat one can employ a set of example sentencesillustrating the various templates as a test suitefor the grammar.
Given the systematic design ofthe template list, one is assured to have a system-atic test suite in the respects covered by the tem-plates.A second benefit of the design is as a basis forbuilding cross-linguistically matching test-suites,to the extent that templates coincide cross-linguistically.For linguistic typology, once one has templatelists developed for many languages, comparisonand systematization of differences can be facili-tated.For linguistic description and grammar crea-tion, having established template lists for relatedlanguages may enhance efficiency, in providing'check-list' starting and reference points.All of these points will presuppose that onecan reach a commonly approved standard of no-tation.
(In principle, with different types of nota-tion, but a one-to-one correlation between nota-tions, similar effects may be gained, althoughthere is then an extra step of identifying correla-tions.
)Currently, such a combined initiative of nota-tion development and typological investigation isbeing pursued for a group of Ghanaian languagesin consonance with the Norwegian system; cf.
(Dakubu, 2008).
(For both systems, full templateand example lists can be viewed at the site type-craft.org mentioned above.
)As still another enterprise connected to thepresent template inventory may be mentioned apartial ontology of verb construction types devel-oped with the LKB platform (in principle export-able also to OWL), representing all of the tem-plates in the Norwegian inventory and somemore.
For a partial description, see (Hellan2007).Relative to the present system, a verb classcan be identified as a set of verbs which are ac-commodated by the same set of constructiontypes.
(This notion of 'verb class' is related tothat employed in (Levin 1993), which is basedon alternations between construction types.
Analternation, such as the 'spray-load alternation',can be viewed as a pair of construction types inwhich a number of verbs can participate, typi-cally with rather similar semantics, highlighting?
by a ?minimal pair?
technique - semantic prop-erties of the constructions chosen.
)8 More complex typesIn its current version, the system does not in-clude 'derived' constructions, of which in Nor-wegian passive constructions would be the maininstance.
As a prerequisite for a notational sys-tem for derivation, systems will first be made forselected Bantu and Ethio-Semitic languages (rep-resenting future development)Possibly also of a derivational nature, but heretreated as basic patterns, are 'Secondary predi-cate' constructions, a few of which were dis-cussed above.
To indicate where the Norwegianlabel inventory probably reaches its peak ofcomplexity, we give a brief resym?
of the pa-rameters involved in these constructions, and themore complex labels employed.The secondary predicate (henceforth: secpred)can relate to the main predicate either as the con-tent of a propositional attitude or perception, oras concurring in time, or as the causee of a causa-tion.
In the latter case, either an event is por-trayed as the cause (indicated by the substring?.Cse), or an entity.
In the former case, thecausing event can have from zero to two partici-pants, and when one or two, one can be implicit.What can never be implicit is the entity of whichthe secpred is predicated: it may occur as subjector object, and in either case either realizing thisgrammatical function by itself (in which case thefunction is 'non-argument'), or sharing it with aparticipant of the causing event (in which casethe function has 'argument' status).
The followingslot 3 labels serve to encode the various possi-bilities:scObArgConcurr (he drank the coffeewarm)47scObNrgRes (he made me sick): Of thecausing event, only the participant denotedby the subject is specified.scSuArgCse (kaffen koker bort 'the coffeeboils away'): The matrix verb (together withits argument subject) expresses part of thedescription of the causing event.scObArgCse (han sparket ballen flat 'hekicked the ball flat'): The secondary predi-cate is predicated of an argument object,and the matrix verb (together with its ob-ject) expresses part of the causing event.scSuNrgCse (landsbyen sn?r ned 'the vil-lage snows down'): The secondary predicateis predicated of a non-argument subject,and the matrix verb expresses part of thecausing event.scObNrgCse (han sang rommet tomt 'hesang the room empty'): The secondary predi-cate is predicated of a non-argument ob-ject, and the matrix verb (together with itssubject) expresses part of the causingevent.In dealing with typologically different lan-guages, it is not a priori given what construc-tional template options may present them-selves (see Dakubu op.cit.
for  discussion ofsome Volta Basin languages).
Whatever theseadditional types may be, in designing labels,one probably should not exceed the complex-ity of the labels just presented.9 ConclusionWith an encoding of a construction type's argu-ment structure and semantics which is probablyrepresentative of what one may want to expose,each template in the system presented here is byitself as compressed as can be, which gives thetemplate structure some interest by itself.
How-ever, it is through the totality of templates, andthrough the design by which they can be easilyenumerated, compared and computed, that thesystem presented may be a contribution togrammar engineering and language typologyalike.
While the system reflects such ambitions,it is still in an initial state of deployment both ingrammar engineering and typology, and its po-tential value will reside in the extent to which itwill be used, and receive feedback for usability.ReferencesBeermann, Dorothee and Lars Hellan.
2004.
A treat-ment of directionals in two implemented HPSGgrammars.
In St. M?ller (ed) Proceedings of theHPSG04 Conference, CSLI Publications/http://csli-publications.stanford.edu/Bender, Emily M., Dan Flickinger, and StephanOepen.
2002.
The Grammar Matrix: An open-source starter kit for the rapid development ofcross-linguistically consistent broad-coverage pre-cision grammars.
In Proceedings of the Workshopon Grammar Engineering and Evaluation, Coling2002, Taipei.Butt, Miriam, Tracy Holloway King, Maria-EugeniaNini and Frederique Segond.
1999.
A Grammar-writer's Cookbook.
Stanford: CSLI Publications.Copestake, Ann.
2002.
Implementing Typed FeatureStructure Grammars.
CSLI Publications, Stanford.Dakubu, Mary E. K. 2008.
The Construction labelproject: a tool for typological study.
Presented atWest African Languages Congress (WALC), Win-neba, July 2008.Flickinger, Daniel, John Nerbonne, Ivan A.
Sag, andThomas Wassow.
1987.
Toward Evaluation ofNLP Systems.
Technical report.
Hewlett-PackardLaboratories.
Distributed at the 24th Annual Meet-ing of the Association for Computational Linguis-tics (ACL).Hellan, Lars.
2007.
On 'Deep Evaluation' for Individ-ual Computational Grammars and for Cross-Framework Comparison.
In: T.H.
King and E. M.Bender (eds) Proceedings of the GEAF 2007Workshop.
CSLI Studies in Computational Lin-guistics ONLINE.
CSLI Publications.
http://csli-publications.stanford.edu/Hellan, Lars., Lars Johnsen and Anneliese Pitz.
1989.TROLL.
Ms., NTNULehmann, Sabine., S. Oepen, S. Regier-Prost, K. Net-ter, V. Lux, J. Klein, K. Falkedal, F. Fouvry, D. Es-tival, E. Dauphin, H. Compagnion ,J. Baur, L. Bal-kan, D. Arnold.
1996.
Test Suites for Natural Lan-guage Processing.
Proceedings of COLING 16, p.711-16.Levin, Beth.
1993.
English Verb Classes and Alterna-tions: A Preliminary Investigation.
University ofChicago Press.Smith, Carlota.
1991, 1997.
The Parameter of Aspect.Kluwer Publishers, Dordrecht.48
