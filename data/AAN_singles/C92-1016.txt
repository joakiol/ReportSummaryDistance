Using Active Constraints to I)arse "")~'(' ',.
:, \[ ,~ k,,<;Ph i l ip l )e  I / la(:helns t i tu t  d 'h f fo r ,nat iqu(~Un ivers i t6  de Neuchate I  (Su isse)e-mail: Blach e((~i,ffo, unine,chAbst ractActive constraints of tile CO,lslratnl higic program-in,rig paradigm allow ( l )  the reduction of thesearch space of progr~tms and (2) a very conciserepresentation of the problcnls.
These two l)roperties are particuhtrly interesting for I)arsing prob-\[elns : they can hel I) us to reduce non-determinislnand to use large coverage gramlnars.
In this paper,we describe how to use Slleh constraints tot parsingID /LP  grammars  and propose an inlplenlelmtl, iouin Prolog Ill.Keywords : constraints, syntax, ID/ I ,P  formalism,bottom-up filtering, Prolog I l I1 In t roduct ionLogic programming is one of the nlost useful toolsin computat ional  linguistics.
These two domainsare progressing very rapidly.
The former with theemergence of the constraint paradignl and the lat-ter with the systematic use of well-formalized lin-guistic theories.
In the l~st few years, natural lal>guage processing (hereafter NLP) and more precisely syntax have created tools allowing expressionof general knowledge.Constraints implify parsing problems to a considerable extent, both in a formal and computa-tional way.
From a formal point of view, we willsee that they allow a very good adequacy betweenlinguistic aim computational theories.
We knowthat this prol)erty is essential to solve generality,reusability and coverage prolflems.
On the otimrhal,d, from a computatiolml point of view, constraints set up a control of the I)rocesses which re-duces non-determmisnl m parsing.The question is to know whether it, is possible toi l l lph!tl leIlt a I)arsiag I l lethod I)ased oil act l lal  eoil-straints.
The answer depends on the choice of thegrmmnatical  formalism.
We think thai the I I ) /LPformalism used lit (IPS(-I theory can bring a sohltion to this I)roblem.In this paper, we will describe a parsing methodbased on \ [D /LP  formalism using boolean con-straints.
We will show that this nlethod agreeswith th( goals of generality and corm'el.2 Pars ing  and  deduct ionIIoth for historical itllll \[orlilal reasolls, parsing turnck)se relalions with logic The birth of Prolog, forexample, w~s conditioimd by Ihat aud NLP wasone of the early applications of this language.
Oneof the re~molls, a.s shown in \[PereiraS,g\], is tiiat we('.all compare |)arsdlg and dednet, ion, More pre-cisely, it phrase- structure rule (hereafter PS-rule)can be interpreted its a Rmnula (an ilnplication),like a classical inDrenee rule.
'\['hus, a PS-rule of the form :NX ~ ( '~, .
.
.
,C , ,can be interpreted as the fl~llowmg implication :(,'1 A .
.
.
A (.
',, D ,S'Xthe clausal form of which is :~Ci  V , .
?
V ~(5 ' , ,  V ,b 'XBecause of the ui,iquei~ess of the positive literal,we can interpret a PS-.rule as a Ilorn clause, with adirect translation into I'rolog.
Thus, a context-freegr~unlnar, represenled by a set.
of PS rule, corre-sponds to a set of clauses.
To verify the grammat-icality of a sentence is tluls equivMent to provingthe COllSiSteacy of a set of clauses.There is, howew,r, a restriction in the analogyhetwee\[l P~-rtlleS &lid claltses : a \[1111', detines allorder on ils right-haI.l--side chunelltS, whereas aclause does not.
This restriction has importantcoliseqllenct,s 011 tho general i ty  of the lileChalliSlllS.hldeed, lhe noti(m of order iiivoIvi)s it multilllication of the rifles describing a giw~n phrase : we getas zn;nly rules as there are (:onfigural.ious.
This isone of the limits of phrase structure gramlnars.l l ) / l , l '  formMism and boolean constraints willalk)w us to sMve this problem.
"Ore will obtaina nearly perfect adequacy bet.weeIl I.h~ theoreticaliiiode\] aiid its implementation.
Within the classifieation proposed m iF, van.s87\], it will be a strongdirect interl)retation of the model.A(m{s 131!
COLING 92, NAN'II~S, 23 28 ao(rr 1992 8 1 Pit<It.
OF COLING 92, NANrES, AU<;.
23-28, 19923 Const ra in ts  and  l ingu is t i c  theoryThe basic mechanism of constraint logic program-ming is the restriction of the search space, or thereduction of the domain-variables.
Tiffs goal canbe reached differently depending on the active orpassive constraint type (ef \[Vanllentenryck89\]).
Inthe classical logic programming framework, the ba-sic technique is that of generate-and-test.
Iu thisease, the program generates values for the vari-ables before verifying some of their properties : thesearch space is reduced a posteriori.
On the otherhand, in the CLP paradigm, the use of constraintsallows the reduction of this space a priori.
More-over, the set of constraints forms a system whichincorporates new constraints (luring the process,while the use of simple predicatcs verifying a prop-erty only has a local scope.This active/passive distinction can be useful forparsing, especially according to the type of knowl-edge that is constrained.
Active constraints caneasily be defined for syntactic structures and theirformation.
On the other hand, expressing rela-tions between these structures with this kind ofconstraint is not always possible.We will describe the principles governing the for-marion of the structures.
A syntactic structure canbe of two types :* simplestructures : lexical categories (e.g.
Del,N ,V .
.
.
)?
complex structures : phrases or propositions(e.g.
NP, VP .
.
.
)The formation of complex structures i governedby two types of knowledge :?
internal : specific information within a struc-ture?
external : relations between structuresInternal knowledge concerns the structure com-position, independently of its context.
For aphrase, it is the set of its constituents.
Externalknowledge describes interactions between struc-tures.
They concern on the one hand the order andon the other hand tile government (in the sense ofphrase-structure grammars : selection, agreement.
.
.)
.ID/LP formalism uses such a distinction : itseparates information about immediate dominance(i.e.
the set of possible constituents of a phrase)from that on linear precedence (i.e.
the partial or-der relation between these constituents).It is possible to consider these two types ofknowledge as constraints (cf \[Saint-Dizier91\]).
Butit is important to distinguish their respective fune-tionings.
We will illustrate this point by presentingprinciples for each type.o Internal knowledgeEach complex structure must contain at leastone particular element called the head.
This cat-egory gives the phrase its type and its presenceis compulsory.
The other constituents are usuallyoptional.
We must specify that local constraintscould require the presence of a particular category,but it is a sub-categorization aspect : it concernsrelations between the sub-structures of the com-plex structure and is not specific to the structureitself.
We will see that this distinction betweenoptional and compulsory constituents can be rep-resented irectly as an active constraint.o External knowledgeIn the case of ID/LP formalism, the order con-straints (i.e.
linear precedence) cannot be easilyused with an a priori reduction of the search space.Indeed, LP-rules define a partial order upon the setof categories.
The LP-aeceptability relation usesthis order and can be regarded as a constraint uponthe domain-variables.
It is a symbolic user- definedconstraint.
The use of this kind of constraint ispossible in Chip (ef \[Dincbas88\]), but not in Pro-log III (cf \[ColmerauergO\]).tlowever, using this order relation as an ac-tual constraint allowing the reduction of domain-variables is difficult.
In so far as it is a partialorder, the LP notion cannot be used to predict hecategories that can follow a constituent.
It is usedduring the parse to verify the possibility for eachnew category to appear at a given place in the syn-tactic structure.Generally speaking, internal properties allow aneasier use of active constraints than external ones.4 Const ra in ts  and  ID /LP  fo rmal i smAs we have seen, ID-rules of ID/LP formalism onlycontain tile set of possible constituents (withoutany notion of order).
Therefore, an ID-rule isstrictly equivalent to a clause.Example :N P "-'*id Del, N, AP  ~ N P V ~De~ V ~N V ~APThis equivalence is the basis of the concisenessand generality properties of GPSG.
But it is diffi-cult to represent.
As we have seen, logic program-ming cannot directly represent the non-ordered as-pect of a clause.
Ilowever, it is possible to repre-sent this kind of information as active constraints.These must allow the expression of tile simple factthat a phrase is well-formed if it is at least com-posed of the constituents Ct , .
.
.
,  C, .
Other rela-tions between the structures (like order or selec-tion) will only be verified if this constraint is sat-isfied.ACT~.S DE COLING-92, NANTES, 23-28 AOt~rr 1992 8 2 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992Practically, each rule descrihing a phrase cor:responds to a clause whose literals represent cat-egories.
An ID-rule is thus translated into aboolean formula where each category correspondsto a boolean.
The semantics of this representatiouis the following :A literal is true if it corresponds to a well-formedstructure.
A structure is well- formed if it corre-sponds to a le~cical category (simple structure) orto a well- formed phrase (compler structure).Thus, the boolean value of a complex structure isthe interpretation of this formula, and so dependson the value of its constituents.Ezample :Given the following set of ID-rules de-scribing a NP :N P --q~ DeC NNP  ~i,* NNP  -old DeC AP, PP, NNP  ~ia  Det, AP, NNP  --qa Det, PP, NThis set of rules corresponds to the fol-lowing fornmla :(1)el A N)V(N)V(Det A AP  A PP  A N)V(Dot A AP  A N)V(Det A PPA N)  D NPIt is interesting to note that the ID/LP formal-ism strongly reduces the problem of PS-rules mul-tiplication inherent in phrase-structure grammars,tlowever, as we have seen in tile previous example,there is still a redundancy in the information.
In-deed, a set of rules describing a phrase allows usto distinguish between two types of constituentsaccording to their ot)tional or eomtmlsory aspect.Hence, for each phrase we can define a minimalset of compulsory constituents (generally limitedto the head of the phrase), which we call the min-imal set of a phrase.Ezample :In the previous example, the minimal setof the NP is {N}.We introduce an additional restriction prevent-ing the repetition of an identical category within aphr,~se.
This restriction is very strong and has tobe relaxed for some categories ( uch as PP).
But itremains a general principle : most of the categoriesshould not be repeated.We then construct a principle defining tile well-formedness of complex structures.
't'his principleonly concerns internal knowledge :A phrase is well-formed iff it respects the follow-ing properties :m it contains at least one head?
no constituent is repeated~, all its embedded phrases are well-formedIn the logical paradigm (equivalence between arole and a clause), we say that a literal is true ~ itcorresponds to a lexieal category of the parsed sen-tence or if it correslmnds to a well-formed phrase.This formation rule allows its to simplify the ver-itication of the grammatieality of a sentence.
Wesimply need to verify the presence of the minimalset of compulsory constituents o indicate the well-formedness of a phrase.
The boolean value of thecomplete structure is then evaluated recursively.
Ifall the intermediate structures are true, the com-plete structure is also true and corresponds to agralomatical sentence.We will call realization the actual presence of acategory in tile syntactic structure correspondingto a sentence.
The verification process of the well-fornmdness of a phrase follows these steps1.
verifieatmn of the realizatiou of the minimalset2.
verification of the membershil) of the realizedconstituents within the minimal set3.
verification of the uniqueness of the con-stituents in a pllr,'~se4~ verification of the well4ormedness of embed-ded phrasesIn an active constraint, we replace the set ofclauses describing all the possible constructionswith a system <)f constraints S defining the set ofl)ossihle constituents and the condition of realiza-tion for the minitelal set.
We can represent i asfollow :Let G' he the set of possible constituents of aphrase XP, let X t>e the head of XI', let M be theminimal set such xs M = {X}UC' (where C' C C),and let zX be the disjtmction of the literals of M.The well-formedness constraint is :s = {A 7) x l ,}Example :The well-formedness constraint for a Nt'is: {NDNI'}The well:formedness constraint for a PPis : { f'rel> A N P D I' P }ACIES DE COLING-92, NAIqrES, 23-28 ^ o~r 1992 8 3 PROC.
OF COL1NG-92, NANTES, AUG. 23-28, 1992It is interesting to note that the implication cor-responding to the set of rules describing the NP inthe previous example forms a system of constraintsthat can be simplified to {N D NP}.
This prop-erty is verified for all phrases :Given a grammar G, VXP  such that X f '  E G,lel A be the disjunction of the liter'Ms of the min-imal set of XP, then the formula corresponding ~othe rules describing XP is simplified to {A D XP}.We thns have both a linguistic and a h)rmal jns-tit|cation of tile active constraint used to verify tilewell formedness of a phrase.5 Imp lementat ion  in  P ro log  I I IWe will now describe the parsing strategy and itsimplementation.5.1 Bot tom-up f i l te r ingOur parsing strategy relies on tile concept of leftboundary of a phrase.
It is an improvement ofthe left-corner strategy (cf \[Rosenkrantz70\]) calledbottom-up filtering (ef \[maehe90\]).
It consistsin using tile information extracted from 1,P con-straints to determine all the left-bounds of thephrases from the list of lexieal categories corre-sponding to a sentence.
This process, unlike theleft-corner one, relies on a distributional analysisof the categories and the verification of some prop-erties.We define the following flmctions which allowthe initialization of the left boundaries.o First-legal daughters (noted I"LD(P)) : thisfunction defines for each phrase P the set of cate-gories that can appear as left boudaries.
It is detined ,as follows ( LP relation between sets is notedwith ~:) :Let P be a phrase, ga  such that f '  -~ c~ thenFLD, the set of first legal daughters, is defined ,'~sR)llows:m,D(P) = {e E ~ such that  e -< ,, - {e} }<, Immediate precedence (noted l l ' , ,(c)) : thisfimetlon defines for each FLI) c of a phrase P theset of categories that can precede e in P. It is de-fined as follows :Let P be a phrase, V(* such that P --?
o ,  let x bea non-terminal,  et c E FLD(P) ,  then IPv(e), theset of immediate precedence of c for P, is definedas follows:I Pp (c )  = { .
.
.
.
.
h that (x -4 c) or  (,c E .
.
.
.
.
.
.
lneither x -< c nor e -< z ea:ist)}o Iu'tial ize : this flmction verifies whether acategory c is the actual left boundary of a phraseP.
It is defined ms follow :Let I be a string, let C be tile list of lexicalcategories of I, Ve E C, c' G N (set of non4erminalsymbols) such that c'  precedes c in C ;c initializes S l ife E FLI ) (S)  anti e' ?
IPs(e)The syntactic structure of the sentence is builtf rom a l ist of  par t ia l l y  eva luated  s t ruc tures .
Theprocess consists in determining all the h.'ft boundsand, from this structure, in completing tire par-tial structures by an analysis of the other con-stituents of the phrase.
This is done by verifyingwhether the current category can or cannot belongto the cnrrent phrase.We have at our disposal theset of possible constituents for each phrase, the LPconstraints and the other instant|at |on principlesof the GPS(\]  theory.
After these verifications, iftile current category cannot belong to the currentphrase, then we have reached the right boundaryof the current ptm~se.Example :Input sentence :7'he old man sings.Categorization :Det.Adl.N.
VPartial structure :S.(NP, Det).
(AP, Adj).N.
(VP, V)Complete structure :(S,(NP, Det,(AP, Adj),N),(VP, !7))This strategy allows a reduction of the searchspace.
Parsing becomes a simple membership testof a category within a set.5.2 Imp lementat ionThe following implementation considers only theID /LP  formalism (instead of the entire GPSG the-ory).
We will not speak here about the otherGPSG principles, bnt their insertion in the ID /LPmodule is very shnple.The parsing mechanism consists in assigningthe value true l.o the boo\]eans corresponding tothe categories a~s and when they appear.
If thestructure is simple (i.e.
a lexical category), theLP-aeeeplabil ity of this category in the phrase ischecked and tire corresponding boolean is a.ssignedAC.I'ES DE COLING-92, NANTES, 23-28 AO(;F 1992 8 4 PROC.
OV COLING-92, NANTES, At;c;.
23-28, 1992tile vMue true.
In the case where the l)otton>up tiltering detects a left-bound, tile correspond-ing boolean of tile current category is mssigned tilevalue true and tile embedded phrase is parsed be-fore coming back to tile construction of tim cur-rent phrase.
When we reach the right boundary,the well-forme(lness of tim embedded structures ischecked (i.e.
all the corresponding booleans mustbe true).
If this is tile case, the correspondingboolean value is that of tile disjunction A of tileliterals corresponding to the minimal set.The representation of tile categories and theirassociated Iiooleans will be done through two par-allel lists which will be examined simultaneouslyduring an affectation (or any other operation).A l)hrase is described l)y the set.
of its possil)leconstituents, t he set of its optional categories ~uld~ forlnuls, using its tniniLnal set.
'\['lie two sets arerepresented by lists and the R)rmula is an imldiCa -don of the form {A D XP}.
This inlbrm~ttion iscollected into a systenl of constraints ehar;teteriz-ing each phra.se.Here is a simplilied version of our parsing prc~cess.
The following predicates allow the parsing ofa Ithrase and its simple or complex constituents.It c;m be noted that tile gramnm.tieal knowl-edge is lmshed at it low level.
It is repn:sentedby the set of constraints ~ssoeiated to each phrase.Moreover, at this level we do not use the notion ofsub-eategorizatioil, but only rules concerning thegeneral structure.
We gril l  idSO notice the concise-hess of this representation with reg;~rd to eh~ssicalphra.se--strueture formalisms.Deser i l ) t ion  o f  the.
imp lementat ionLet G be the following l l ) / l ,P  g rammar  :NP-qa  1)el, NNP- ' ia  NNP ~ia Del, A P, I'P, NNP-q , t  Det, Al', NNP-+ia Det, PP, NNP . '
i a  Det, Al', PP, N, l'RclNt'-+ia Det, A 1', N, PRelNP ~id Det, PP, N, PRelNP-qd  Det, N, PRelNP-~La N, t'RelVI' ~id  VVP--,i,t V, NP, PPVl>-+id V, N} )VP ~ia V, 1'1'AP--'L,L AdjI 'P- ' i , t  l'ret', NPPRel - ' id  l'ro, NP, VPq}lm lbllowing predicates correspond to the heartof the parser for the grammar  G :APhrase (<S (c) >.
i ,12, Cat, Bool ,'r) ,Coilst fluent (S, Cat, Bool )Lphccept ab le  (S ,Cat,  Bool)hngmbeddedPhrae e (<S, c>.
1,  l l .Cat,Bool,hl)APhrase (i i ,12, Cat, gool, A2)Tree(<S \[<c>.
All >.
A2,T) ;APhras e (<c>.
i, 11, Cat, Bool, <c>.
A) -+LpAcceptable (c, Cat, Boo\].
)lltstallciat e (e ,Cat,  Bool)APhrase(l ,it ,Cat,Boo\].,A) ;Th( APhrase rllh!
takes as i l lp l l t  ihe list Of par-tial structures returned by bottum-up filtering.
Itdistinguishes between (we (:~ua.s aceor<ling to thetype of the current structure : complex (rule ~1)or simple (rule #2).
In the first c~use, the followingprocesses arc eMlcd :?
veritication of the mend)ership of the currentstructure within the set of the pnssibb con-sl.it)lel/ts el  the curreltt phrmse (Const i tuentrule}o verifi<'ation of the l,l ) acceptability(LpAcceptabl  e r,lle)~, parse of the elnbedded COlllplex structure(AnEmbeddedPhrase rule)tmrse of the rest cd" the phr;Lse (APhraee rule)construction and w'rilicatiou of the syntactictree (Tree rub)In the case of simple structures, afl;er checkingtim l,P-aeceptalfility, the correslmndiug boolean isassigned tile value true ( Ins tanc ia te  rule) and tileparse of the current phrase is pursued.If the APhrase r,de fails, the right-bound of thephrase is reached and die parse is pursued at asuperior level.AnEmbeddadPhr as e (<S, c>.
l ,  11, gag ,  Bool ,  A ) - ,Constraints (S, C,B ,R,S' )Instanciat e(c,C,B)APhrase(l, ii ,C,B,A)CorrectConstituent s (R, r)Valid(r,S,S' ,Cat,Boo\]) ;rFhe AilFanbeddedPhrase rule allows the parse of& ll(!W COIUptex Btriicttli'e.
It begins with tile sys-tem of ins{ailing constraints describing this struc-tur~ (Co i l s t ra in ts  rule).
TI,e wllidity of the constituents is clmcked (CorrectConstituents andValid rtdes) Before rettlrlling the boolean wthic ofthe parse for this phrg~se (variable S').Const ra in ts  (NP,C,B, R,N P) ,{ C - <Dot,Nm,AP,PP,PlteI>,B e <I)_ot,N,A.P,P P,P Rel>,R : <A~,P  P,P_ReI>,N => N1 ~ };Acri!s I)E COLING-92, NANIES, 23-28 AO\[a 1992 8 5 I)ROC.
OF COIANG 92, NANTES, AtX;.
23-28, 1992Conatraints(VP,C,B,R,VA ~) -~{ C = <Vb,IP,PP>,B = <V,IIA~,P-P>,R = <I_P,P_P>V ::~.
V-P };Const ra in ts  (AP,  C ,B ,  R ,A~)  -~{ C = <Adj>.B = <aAj>,R = <>.AAj  ~ A_P };Const ra in ts  (PP, C,B, R, P-P) -~{ C = <Prep,NP>,B = <P-top,IrA?>,R = <I_P>,(P_rep a IIJ ~) =;~ PA: };Constraint a (PRel, C, B, R, P~Rel) ---*{ C = <Pro,NP,VP>,B = <P_ro,Ii_P,V_P>,R = <NA~.V-P>?
(P2co & V~)  :~ P_Kel };We can notice that in this representation, sub-categorization consists in verifying the boolean val-ues corresponding to the categories concerned.6 Conc lus ionThe ID/LP formalism distinguishes between inter-nal and external knowledge about syntactic struc-tures.
This characteristic allows the expression ofparsing mechanisms at a very high level of gener-ality.
We can represent the description of a phrasein an extremely concise way with a rule clusteringoperation.
These properties allow the use of ac-tive constraints.
The result is an implementationin agreement with the theoretical nmdel respectingin particularl the generality and conciseness prop-erties of GPSG.
Moreover, active constraints ef-ficiently control the progress of the processes andlimit non-determinism of parsing.
This last charac-teristic is very important for the ID/LP formalismwhich uses non-ordered rules implying an increaseof the search space.We have shown in this paper how to use ac-tive constraints for ID/LP formalism.
We can ap-ply the same approach to the entire GPSG theoryinterpreting features tructures and instaneiationprinciples as formulas (cf \[Blache92\]).The implementation presented here has beendone in Prolog III on a Macintosh.
From a cover-age point of view, we can indicate that the rules inthe grammatical formalism presented in our exam-ple roughly amounts to twenty standard ID-rules.References\[Blache9O\] Blache P. & J.-Y.
Morin (1990)Bottom-Up Filtering : a Parsing Strategy forGPSG, COLING'90.\[Blaehe92\] Blache e. (1992) Interpretation ofGPSG with Constraint Logic Grammars,ICEBOL '92.\[Colmerauer90\] Colmerauer A.
(1990) An Intro-duction to PrologIII, CACM, 33:7\[Damas91\] Damas L., Moreira N. & Varile G.(1991) The Formal and Processing Models ofCLG, proceedings of the 5th European Chapterof the ACL.\[Dinchas88\] Dinebas M., Vanilentenryck P., Si-monis H., Aggoun A. Graf T. & BerthierF.
(1988) The Constraint Logic ProgrammingLanguage CHIP, International conference on5th Generation Computer Systems, ICOT.\[Evans87\] Evans R. (1987) Theoretical and Com-putational InteITrelations of GPSG, Thesis,University of Sussex.\[Guenthner88\] Guenthner F. (1988) Features andValues 1988, CIS.Bericht-90-2, Mfinchen.\[Johnson90\] Johnson M. (1990) Features, Framesand Quantifier-free Formulae, in Logic andLogic Grammars for Language Processing, P.Saint-Dizier & S. Szpakowicz eds, Ellis Hor-wood.\[Kasper90\] Kasper 1%.
& W. Rounds (1990) TheLogic of Unification in Grammar, in Linguis-tics and Philosophy, 13:1.\[Pereira831 Pereira F. & O. Warren (1983) Parsingas Deduction, ACL83, 21st Annual meeting.\[Rosenkrantz70\] 1%osenkrantz D. & P. Lewis(1970) Deterministic Left- corner Parser,IEEE Conference Record of the llth AnnualSymposium on Switching and Automata The-ory.\[Saint-Dizier91\] Saint-Dizier P. (I991) ProcessingLanguage with Logical Types and ActiveConstraints, proceedings of the 5th EuropeanChapter of the ACL.\[Stabler90\] Stabler E. (1990) Parsing as LogicalConstraint Satisfaction, in Logic and LogicGrammars for Language Processing, P. Saint-Dizier & S. Szpakowiez eds, Ellis Horwood.\[VanHentenryek89\] Vanllentenryck P.(1989) Constraint Satisfaction in Logic Pro-gramming, MIT Press.ACTES DE COLING-92, NANTES, 23-28 nOt~r 1992 8 6 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992
