A COMPUTATIONAL MECHANISM FOR PRONOMINAL REFERENCERobed J. P. IngriaDavid StallardBBN Systems and Technologies, Incorporated10 Mouiton StreetMailstop 009Cambridge, MA 02238ABSTRACT the syntactically impossible antecedents.
This latterThis paper describes an implemented mechanismfor handling bound anaphora, disjoint reference, andpronominal reference.
The algorithm maps overevery node in a parse tree in a left-to-right, depth firstmanner.
Forward and backwards coreference, anddisjoint reference are assigned during this tree walk.A semantic interpretation procedure is used to dealwith multiple antecedents.1.
INTRODUCTIONThis paper describes an implemented mechanismfor assigning antecedents to bound anaphors and per-sonal pronouns, and for establishing disjoint referencebetween Noun Phrases.
This mechanism is part ofthe BBN Spoken Language System (Boissn, et al(1989)).
The algorithm used is inspired by the index-ing scheme of Chomsky (1960), augmented by tablesanalogous to the "Table of Coreference" of Jack-endoff (1972).
This mechanism handles only intra-ssntentJal phenomena and only selects the syntac-tically and semantically possible antecedents.
Ul-timately, it is meant to be used in conjunction with anextra-sentential reference mechanism like thatdescribed in Ayuso (1989) to include antecedentsfrom other utterances and to utilize discourse factorsin its final selection of an antecedent.In Section 2 the empirical and theoretical back-ground to this treatment is sketched out.
In Section 3,the actual algorithm used is described in detail.
InSection 4, the associated semantic interpretationmechanism is presented.
In Section 5, we comparethe algorithm with related work.
Finally, in Section 6,remaining theoretical and implementational issues arediscussed.2.
THEORETICAL BACKGROUNDWhile most computational systems are interestedin the potential antecedents of pronouns, work ingenerative grammar by Lasnik (1976) and Reinhart(1976) has led to the conclusion that sentential syntaxis responsible for assigning possible antecedents tobound anaphors (reflexives, such as "himself","herself", "themselves", etc., and the reciprocals"each other" and "one another") but not to personalpronouns ("he", "she", "they", etc).
In the case ofpersonal pronouns, sentential syntax only determinesprocedure is called disjoint reference, since the im-possible antecedents can not even overlap in refer-ence with the pronoun; compare the cases in sen-tences (1) and (2), where the underlined items arenon-identical in reference, with those in (3) and (4),where they are non-overlapping in reference.
In (1)and (2), "he" and "him" cannot refer to "John" (non-identical reference); while in (3) and (4) "John" cannotbe a member of the set referred to by "they" and"them" (non-overlapping or disjoint reference).
(1) He likes John.
(3) They like John.
(2) John likes him.
(4) John likes them.Disjoint reference is even more noticeable withfirst and second person pronouns where it does notmerely produce impossible interpretations, but actualungrammaticality:(5) *1 like me.
(7) "We like me.
(6) "i like us~ (8) ?Yo--'u like yo---u.A crucial notion both for assigining antecedents tobound anaphors and for establishing disjoint refer-ence between Noun Phrases is that of c-command, astructural relation.
Briefly, a node c-commands itssisters and any nodes dominated by its sisters?Figure 2-1 illustrates this.A BC IE FA c-commands B, C, F, D, and GB c-commands A and EC c-commands D and GD c-commands C and FDIGFigure 2-1: C-CommandIThis differs from Roinhart's (1976) definition, for reasons dis-cussed in Section 6.262Essentially, the relation between c-command andreference phenomena is the following:1.
A non-pronominal NP cannot overlap inreference with any NP that c-commands it.2.
The antecedent of a bound anaphor mustc-command it.
23.
A personal pronoun cannot overlap in ref-erence with an NP that c-commands it.
2Condition 1 is motivated by sentences such asthose in (9), where the underlined pronouns "he","him", "they", and "them" must be disjoint in refer-ence with "John".
In each case, the pronouns c-command the NP "John".
In (ga) "he"/"they" is in thesubject position, and so c-commands "John", in thedirect object slot.
In (gb) the pronouns ("He", "They")are once again in the subject position, and "John" isthe object of a preposition, itself contained in thedirect object of the sentence.
Finally, in (9c), the NP"John" appears as the object of a preposition, whichis o-commanded by the subject ("He", "They") andthe direct object ("him", "them").
(9) a.
He likes John.They' like John.b.
He likes pictures of John.They' like pictures of John.c.
He told them about John.They' told him about John.Condition 2 is motivated by examples such asthose in (10), where the reflexive pronoun "himself"and its antecedent(s) are bracketed.
As in the cor-responding examples in (9), "himself" either appearsas a direct object (10a), the object of a prepositionwithin the direct object (10b), or as a prepositionalobject (10c).
In all cases, the c-commanding subject("John") is a possible antecedent; in (10c), where thec-commanding object NP "Bill" is added, it is also apossible antecedent.
(10) a.
\[John\] likes \[himself\].b.
\[John\] likes pictures of \[himself\].c.
\[John\] told \[Bill\] about \[himself\].Condition 3 is motivated by examples such asthose in (11).
The pronoun under consideration("him" or "them") always appears as an object orprepositional object and is disjoint in reference to thec-commanding subject "John" (in (1 la,b,c)) and to thec-commanding direct object "Bill" in (1 lc).
(11) a. John likes him.John likes them.b.
John likes pictures of him.John likes pictures of them.c.
John told Bill about him.John told Bill about them.While condition 1 is unconditionally true, con-ditions 2 and 3 are subject to a further constraint,=Within aminimal syntactic domain; this will be explained shortly,which we might term minimafity.
Essentially, thestructural theory of pronominal reference outlinedhere may be viewed as making the following claim.Bound anaphors are short-distance anaphors and re-quire their antecedents to be c-commanding NPswithin a minimal domain.
Ordinary personalpronouns, on the other hand, are long-distanceanaphors, and only permit antecedents to come fromoutside of their minimal domain, and exclude any c-commanding antecedents within their minimaldomain.
The most immediately dominating finiteclause (S) node always constitutes a minimal domainfor a bound anaphor or personal pronoun.
NP nodesnormally do not constitute a minimal domain, unlessthey contain a possessive.
This is illustrated in(12)--(14) (underlining indicates disjoint reference:bracketing indicates co-reference).
The subject NP in(13) is not a possible antecedent for the reflexive;while the subject NP in (14) need not be disjoint inreference with the underlined pronoun.
Compare (13)with (10b) and (14) with (1 lb).
(12) He likes Bill's pictures of John.They' like Bill's pictures of John.
(13) John likes \[Bill's\] pictures of \[himself\].
(14) \[John\] likes Bill's pictures of \[him\].\[John\] likes Bill's pictures of \[them\].Given these paradigms of reference facts, we nowturn to the theoretical linguistics literature for treat-ments that might be implemented in a natural lan-guage system.
In the Government-Binding frameworkof Chomsky (1981), these generalizations are cap-tured by the Binding Theoryma set of well-formedness conditions on syntactic structuralrepresentations annotated with subscript and super-script "indices".
The paradigm assumed there isGenerate and Test: indices are freely assigned andthe Binding Conditions are applied to rule in or ruleout a particular assignment.
Clearly, from a computa-tional standpoint his is grossly inefficient.
However,in earlier work, Chomsky (1980, pp.
38--44) proposeda two pass indexing mechanism that captures thesefacts procedurally.His proposal assigns each non-bound anaphor(i.e.
non-pronominal NP or personal pronoun) the pair(r,A) where r (for Referential index) is a non-negativeinteger and A (for Anaphoric index) is a set of suchintegers.
In the first pass, r and A are assigned fromleft-to-right in a depth-first manner.
Each non-boundanaphor NP is assigned a unique r; in addition, the rindex of each NP c-commanding it is added to its Aindex.
This set of indices indicates all the other NPswith which i t  is disjoint in reference.
For non-pronominal NPs, only one pass is needed:(15) John 2 told Bi11(3,{2} ) about Fred(4,{2.3} )The indices here indicate that "John", "Bill", and"Fred" are all disjoint in reference.In the case of personal pronouns, a second passis necessary.
Consider example (14), repeated hereas (16), after the first pass:263(16) John 2 likes Bill's(3,{2} ) pictures of him(4,{2,3} )The indexing at this stage indicates that "Bill" is dis-joint in reference from "John" and that "him" is dis-joint in reference from "Bill", which is correct, and alsofrom "John", which is not.
To correct this, Chomsky(1980, pp.
38--44) has a second pass, in which the rindices of NPs outside the current minimal domain areremoved from the A index of personal pronouns,thereby allowing them to serve as potential antece-dents.
After this second pass, the indexing is:(17) John 2 likes Bilrs(3.
(2} ) pictures of him(4.
{3} )At this stage "John" is no longer specified as beingdisjoint in reference with "him".We have taken this procedure as the basis for amore efficient pronominal reference algorithm that im-proves on two problematic features.
First, whileChomsky's procedure requires two passes, our algo-rithm is single pass.
While there may not be a greatcomputational loss in the two-pass character ofChomsky's original proposal, clearly it is cleaner to dothings in one pass.
Moreover, the mechanism is ex-tensionally richer than Chomsky's: it also handlescases of backwards-pronominalization and split-antecedence.A second problem with Chomsky's procedure isthat the potential antecedents of a personal pronounare only implicitly represented: any NP whose r indexis not a member of that pronoun's A index set is asyntactically permissible antecedent, but this set ofpermissible antecedents is not enumerated.
For ex-ample, in (17), "John" is indicated as a potential an-tecedent of "him" by virtue of the fact that its r index,2, is not part of the A index of "him", and in no otherway.
Our algorithm explicitly indicates the potentialantecedents of a personal pronoun.
Again, this ismore desirable than leaving this information implicit;besides the potential (and perhaps small) computa-tional savings of not needing to recompute this infor-mation, there is the more general consideration thatwe are not interested in creating syntactic represen-tations for their own sakes, but to make use of them.Explicitly representing antecedence information forpersonal pronouns contributes to this goal.In the next section, we show how our algorithmovercomes these limitations.3.
THE ALGORITHMBefore giving the details of the algorithm, we willsketch its general structure.
The algorithm applies toa completed parse tree and traverses it in a left-to-right, depth-first manner.
The algorithm uses the no-tion of minimal domain introduced in the precedingsection: the S node or NP node (when minimality hasbeen induced by the presence of a possessive) thatmost immediately dominates the node beingprocessed, and the related notions of "internal" and"external" nodes.
Internal nodes are dominated bythe current minimal domain node; external nodes c-command the current minimal domain node.
Essen-tially, the algorithm passes each node all the nodesthat c-command it, subdivided into two sets, thosethat are internal to the current minimal domain andthose that are external.
As each node is processed, asubroutine is called that dispatches on the category ofthe node and performs any actions that are ap-propriate.
It is this subroutine that implements thepronominal reference mechanism proper.Given this overview, we can now turn to the datastructures that are used by the algorithm, as well as tothe details of the algorithm.
Each node in a parse treeis a Common LISP structure; two of its slots are usedfor establishing pronominal reference::poss ib le-antecedentsma list of all the nodes thatcan be co-referent or overlapping in reference with it.
: lmposs ib le -antecedentsBa list of all the nodesthat are disjoint in reference with it.The algorithm also uses two globalvar iablesB*table-of-proforms* and*table-of-antecedents*rain a "blackboard" fashion.The algorithm uses two major procedures.
Thefirst, pass-down-c-commanding-nodes,  is respon-sible for actually traversing each node in the tree.The actual algorithm it uses is shown in Figure 6-1 ina LISP-type notation.
Its functionality can be statedas follows.
Whenever it encounters a new node, itfirst processes that node by calling the procedureupdate-node, which will be described shortly.
It nextdetermines whether the node being processed countsas a minimal domain for its children.
When the nodeis a finite S node, it does count as a minimal domain,for all its children.
Hence, only nodes that itdominates can be internal nodes for its children; allother nodes are now treated as external by itschildren.
When the node is an NP, there are twopossibilities.
If there is no possessive NP, the NPdoes not count as a minimal domain, hence, the ex-ternal nodes remain as before and the nodes itdominates are added to the set of internal nodes.However, when the NP does contain a possessive, itdoes count as a minimal domain, for all the nodes thatit dominates, except the possessive itself.
3 Finally, ifthe node is of any other category, it is not a minimaldomain, so the external nodes remain as before andthe internal nodes are augmented by the constituentsit dominates.
4 In all cases,pass-down-c-commanding-nodes calls itself recur-sively on the children of the node being processed,with the appropriate lists of internal and externalnodes as arguments.update-node, in turn, processes the node passed~rhe reason for this exception will be explained in Section 6.4Non-finite clauses also need special treatment.
However, con-sideration of this case requires discussion of whether non-finiteclauses are Ss or VPs, which is beyond the scope of this paper.264to it, on the basis of the nodes internal and external tothe  current minimal domain.
In particular,update-node performs the correct pronominal assign-ment.
The algorithm used by update-node is shownin Figure 6-2 in a LISP-type notation.
We also dis-cuss each clause separately.Clause \[I\] implements condition 1 (non-pronominalNPs).
Since there are no minimality conditions on dis-joint reference for non-pronominal NPs, all NP nodesc-commanding a non-pronominal NP are added to its:impossible-antecedents lot, whether they are in-ternal (\[I.A\]) or external to the current minimal domain(\[I.B\]).
This handles sentences such as those in (9)and (12).
While it might seem odd to specify that anon-pronominal NP has no antecedents, this infor-mation is useful in handling cases of backwardspronominalization, as in (18).
(18) \[His\] mother loves \[John\],Clause \[I.C\] handles backwards pronominalization bymaking use of information in ?table-of-proforms*, atable of all the pronouns encountered so far in thecourse of the tree walk.
s After update-node hasadded all c-commanding NP nodes to the:impossible-antecedents lot of a non-pronominalNP, it then searches *table-of-proforms* for anypronouns that are not on its:impossible-antecedents list; whenever it finds one,it adds the current non-pronominal NP to thepronoun's :possible-antecedents list.
The last thingupdate-node does in processing a non-pronominalNP is to add it to *table-of-antecedents* (\[I.D\]),whose use will be explained shortly.Clause \[11\] implements condition 2 (boundanaphors).
Since bound anaphors are short-distanceanaphors, all and only the c-commanding NPs internalto the current minimal domain are added to the:possible-antecedents slot of a bound anaphor.Clause \[111\] implements condition 3 (personalpronouns).
Since personal pronouns are long-distance anaphors, clause \[111\] performs a number ofoperations.
First, all the c-commanding NPs internalto the current minimal domain are added to the:impossible-antecedents slot of a personal pronoun(\[Ill.A\]), disallowing them as antecedents.
Next, allthe c-commanding NPs external to the current min-imal domain are added to the :possible-antecedentsslot of a personal pronoun (\[Ill.B\]), indicating that theyare potential antecedents.
Clause \[Ill.C\] handles sen-tences like (19).
(19) \[John's\] mother loves \[him\].in which a non-pronominal NP that does not c-command a personal pronoun serves as its antece-dent.
As was noted above, each non-pronominal NPis added to the *table-of-antecedents* by clause\[I.D\].
When update-node has added all the ap-~'his lalok) is filled in by Clause \[Ill.D\].propriate c-commanding nodes to the:impossible-antecedents slot of a personal pronoun,it then adds any NPs on *table-of-antecedents* thatare not already on the pronoun's:impossible-antecedents slot to its:possible-antecedents slot.
Finally, whenupdate-node is finished processing a pronominal NPnode, it adds it to *table-of-proforms (Jill.D\]), for usein backwards pronominalization.Note that, because our algorithm both establishesminimal domains and assigns possible and impossibleantecedents during the course of the tree traversal, itcan be single pass, in contrast to Chomsky's proce-dure, which assigned impossible antecedents in onetraversal and checked for minimality during a second.Since update-node is a general mechanism foradding or modifying information to a node on thebasis of c-commanding constituents it is fairlystraightforward to extend to handle other phenomenathat involve c-command by modifying its top levelCASE statement to dispatch on other categories.
Infact, we have extended it in this manner to handleexamples of "N anaphora"; i.e.
cases where the headnoun of a Noun Phrase is either "one" (which hasbeen argued in Baker (1978) to be an anaphor for Ns,i.e.
a noun and its complements, but not for full NounPhrases) or phonologically null (0), which seems tohave the same possibilities for antecedents.
(20) Give me a list of ships which are in thegulf of Alaska that have casualty reportsdated earlier than Esteem's oldest one.
(21) Is the Willamette's last problem ratedworse than Wichita's 0?
(when (p=o-n-bLr -p  ofg -node)( ' loop fo r  o ther -nodee:Eke~na I -node- l i s t(when (and (eq l ja l  ( ca tegoryot~,,e=-node )(pEo-n-b=E-antecedentother-node)(add(get ; - .
,on -o f -ca tego~other -node  ' N -~)(poeeible-anteoedmnt eofg-nc~e) } ) ) ) )Figure 3-1: Algorithm for Pro N-BARAnaphoraThe addition to the algorithm that deals with thisphenomenon is presented in Figure 3-1.
This clauseis considerably simpler that those that handle disjointreference and co-reference phenomena for personalpronouns: only external nodes are involved and onlyforward antecedence is possible\] This c_lause finds allthe Noun Phrases that c-command an N pro-form andthat are external to the current minimal domain.
Thisexcludes the possessive in a Noun Phrase such as"Esteem's oldest one" or "Wichita's 9"  from serving265(defun paee-down-o-oommanding-nodee (=fg-node external-node-list internal-node-list)(update-node ofg-nod@ external-node-liar internal-node-liar)(oond ((finite-olause ofg-node)(let ( (external-node-list (append internal-node-list exteEnal-node-liet) ) )(loop for node in (Qhildren =fg-node)(let ((internal-node-list (eisters node) ) )(paso-down- =- oommandlng-nodee nodeexternal -node - i i stinternal-node-liar) ) ) ) )( (equal (oategory ofg-node) 'NP)(mend ( (equal (oategoz~ (first (children ofg-node) ) ) 'NP)(pass -down-o -commanding-nodes  (first (children ofg-node)}external-node- listinternal-node- list }(let ( (external-node-list (append external-node-list internal-node-list) ) )(loop for node in (feet (~!
idren ofg-node))(let ( (internal-node-list (eieteEs node) ) )(poe ?
- down -o  -o~-~and ing-node  ?
nodeexterna l  -node  - l i  s tinternal-node-list) ) ) ) )(T (loop for node in (c~hildren ofg-node)(let ((internal-node-liar (append (eietere node) internal-node-list)))(pas  e - down-o  -oc .~and ing-node  s nodeexterna l -node-  l i s tinternal-node-list) ) ) ) ) )(T (loop for node in (children ofg-node}(let ((internal-node-list (append (sisters node) internal-node-list)))(paea-down-c-c~nanding-nodee nodeexternal-node-listinternal-node-list) ) ) ) ) )Figure 6-I: The Tree Walking Algorithm(dofun update-node (ofg-node external-node-list internal-node-list)(odes (oategory ofg-node)0~(oond ( (non-pronomlnal ofg-node) \[~(loop fo r  other-node in @~ernal-node-l iet  \[I.A\](when (equal (oltegozy other-node) 'NP}(add other-node (imposstble-antecedente ofg-node} ) ) )(loop for other-node in internal-node-list \[\[.S\](when (equal (category other-node) 'NP)(add other-node (4 .-Toeeible-anteoedente ofg-node) ) ) )(loop for pro in *t&ble-of-proform~* \[\[.C\](when (not  (member pro  (4~Doee i~ le -anteoedente  o fg -node)  ) )(add ofg-node (poeeible-anteoedente pro) ) ) }(push ofg-node *table-of-antecedents*) ) \[\[.D\]( (boond-enephor cfg-node) \[el\](loop foe other-node in internal-node-list(when (equal (oatego=y other -node)  'NP)(add  other -node  (poss ib le -antecedents  o fg -node)  ) ) ) )( (persona l -p ronoun o fg -node)  \[II~(loop for other-node in internal-node-list \[lit.A\](when (equal (oetegory other-node) 'NP)(add o ther -node  ( i  .
-Toee ib le -anteoedente  o fg -node)  ) ) )(loop foe  other-node in external-node-list \[lll.B\](when (equal (oategoEy other-node} 'NP)(add o ther -node  (poee ib le -antenedenta  o fg -node)  ) ) )(loop foe  NP in  *table-of-anteoedentee \[Ill.C\](when (not  (member NP (4 - .
-~oee ib le -antecedente  o fg -node) ) )(add NI) (poss ib le -antecedents  o fg -node)  ) ) )(push ofg-node *table-of-profo===*) ) ) ) ) ) \[lU.D\]Figure 6-2: The Reference Algorithm266mas the antecedent to its pro-N.
External NPs thatmeet this criterion are filtered, since not all NPs canbe antecedents of an N anaphor.
For example,proper nouns cannot serve as such antecedents.Each NP that meets these criteria has its N-BARadded to the :possible-antecedents lot of the N-BAR node being processed.4.
INTERACTION WITH SEMANTICINTERPRETATIONSyntactic constraints will not always identify justone allowable referent for a pronoun.
Consider (22):(22) The committee awarded the prize to itself.Syntactically, "itself" in this sentence can refer to ei-ther "the prize" or "the committee".
The additionaluse of semantic constraints is required to determinethat the proper referent of the reflexive pronoun is"the committee".Applying such constraints is the responsibility ofthe semantic interpretation component of our system.In the current implementation reported on here,semantic interpretation is applied after both parsingand the c-command tree-traversal have been per-formed.
It is a two-stage process in which the firststage is concerned with "structural semantics"nthesemantic consequence of syntactic structurenandthe second stage with "lexical semantics"~thespecific meanings of individual words with respect to agiven application domain.
This architecture forsemantic interpretation was adopted from thePHLIQA1 system (Bronnenberg, et al (1980)) andhas been used in ~'eating several difficult semanticphenomena (de Bruin and Scha (1988); Scha andStallard (1988)).The structural semantics stage operates on theparse tree to produce an expression of a languagecalled "EFL" (for English-oriented Formal Language).This language is a higher-order intensional logicwhich includes a single descriptive constant for eachword in the lexicon, however many senses that wordmay have.
(From this standpoint, therefore, EFL isactually an ambiguous logical language.)
Expres-sions of EFL are produced from the parse tree by asystem of semantic rules, paired one-for-one with thesyntactic rules of the grammar, which compute theEFL translation of a tree node from the EFL trans-lations of its daughter nodes.
The single EFL of aword is stored in its entry in the lexicon.The lexical semantics stage operates on an ex-pression of EFL to produce zero or more expressionsof a language called "WML" (for World ModelLanguage).
WML is a higher-order intensional ogic,with the same set of operations as EFL, but with un-ambiguous descriptive constants which correspond tothe primitive concepts and relations of the particularapplication domain.
WML expressions also havetypes, which are derived from the primitive disjointcategories of the application domain and which serveto delimit he set of meaningful WML expressions.A set of translation rules pair ambiguous con-stants of EFL with one or more unambiguous expres-sions of WML.
Translation to WML is performed byproducing all possible combinations formed fromreplacing the EFL constants with their translations,and filtering to remove combinations which are dis-allowed by WML's type system.
In this way selec-tional restrictions are represented and enforced.The algorithms for producing EFL and WML areslightly modified in the case of anaphoric consituents:that is, reflexive pronouns, personal pronouns, andpro N-BARs~ When the structural semantics com-ponent encounters an anaphoric constituent in thecourse of translating a parse tree to EFL, it creates anew EFL constant "on the fly" to serve as the EFLtranslation of this constituent.
It marks this constantspecially and attaches to it the EFL translations of thesyntactically possible antecedents of the constituent,along with semantic type information (such as forgender) constraining the antecedents which makesense for it.
If the constituent is a personal pronounor pro N-BAR (but not a reflexive pronoun), a specialconstant of WML is also attached, marked with theEFL translations of the impossible antecedents of theconstituent.
This special WML constant representsthe possibility of extra-sentential resolution of theanaphor.The EFL to WML translation algorithm treats theanaphoric EFL constant specially, returning as itsWML translations the translations of the "possibleantecedents" that were attached in the EFL phase,together with the WML constant for extra-sententialreference (when this is appropriate).
Expansion andfiltering then proceed as described above.
(22) is handled as follows.
We will suppose thefollowing "domain model" of WML constants andtypes:AWARD: (FUN (TUPLES AGENTSVALUABLES AGENTS)TV)SUB-TYPE(COMMITTEES,AGENTS)SUB-TYPE(PRIZES,VALUABLES)TYPE-INTERSECTION(VALUABLES,AGENTS)- NULL-SETThe structural semantics stage constructs the fol-lowing clausal interpretation i  EFL:(AWARD (THE COMMITTEES) (THE PRIZES)ITSELF001 )whereITSELF001 --~ (THE COMMITTEES)(THE PRIZES)267The combinatorially possible WML translations are thefollowing, where anomally with respect to the typesystem is marked with a ......* (AWARD (THE COMMITTEES) (THE PRIZES)(THE PRIZES))(AWARD (THE COMMITTEES) (THE PRIZES)(THE COMMITTEES))The first interpretation is anomalous because thefunction "AWARD" is applied to an argument whosetype is disjoint with the function's domain (in the thirdargument place).
It is therefore discarded, leaving thesecond interpretation as the correct one.A different example; in which a pronoun couldhave an extra-sentential ntecedent, is:(23) The committee awarded the prize to it.In this case, neither NP inside the sentence is syntac-tically allowable as an antecedent of "it", and so onlythe extra-sentential possibility remains.
The WMLtranslation for (23) is:(AWARD (THE COMMITTEE) (THE PRIZES) iT001)where IT001 is a WML constant marked for disjointreference:IT001 ~ (THE COMMITTEES)(THE PRIZES)This information is necessary so that the moduleresponsible for extra-sentential discourse can preventexternal resolution of the pronoun to an internally(syntactically) forbidden antecadent--as could other-wise happen if "the committee" or "the prize" wasmentioned in preceding discourse.Unless the anaphoric constituent is a reflexivepronoun, an extra-sentential ternative will always bepresent as a WML translation option, and survive typefiltering (since it is given the most general possibletype).
When both intra- and extra-sentential alter-natives survive type filtering, our current heuristic is toprefer the intra-sentential one.5.
COMPARISON WITH RELATED WORKHobbs (1978) has done the only previous work weknow of to use traversal of a syntactic parse tree todetermine pronominal reference and we compare ouralgorithm with his in this section.
Hobbs proposes asyntactic tree-traversal lgorithm for pronominal refer-ence that is "part of a larger left-to-right interpretationprocess" (Hobbs (1978, p. 318)).
When a pronoun isencountered, the algorithm moves up to the nearest Sor NP node (our "minimal domain nodes") thatdominates the pronoun and searches to the left of thepronoun for any NP nodes that are dominated by anintervening $ or NP node to propose as antecedents.The algorithm then proceeds up to the next NP or Snode and searches to the left of the pronoun for anyNP nodes to propose as antecedents.
At this level,search is also made to the right for NP nodes topropose as antecedents.
This will handle cases ofbackwards pronominalization, as in (18).
However,this portion of the search is bounded; it does not seekantecedents below any NP or S nodes encountered.The search for c-commanding antecedents and an-tecedents for backwards pronominalization continuesin this fashion until the top S is reached.
At this point,preceding utterances in the discourse are searched,going from most recent to least recent.
Each tree issearched in a left-to-right, breadth-first manner forNPs to propose as antecedents.There are several differences between this a{go-rithm and ours.
The major one is that our algorithm isa single-pass, depth-first, exhaustive traversalwhereas Hobbs' algorithm first walks down the tree,then up, and then back down and is not guaranteed tobe exhaustive.
Hobbs also imposes a "nearness"condition on the search for antecedents in the case ofbackwards pronominalization.
However, as Hobbspoints out, this restriction rules out the perfectly ac-ceptable (24a) and (24b).
(24) a. Mary sacked out in \[his\] apartment before\[Sam\] could kick her out.b.
Girls who \[he\] has dated say that \[Sam\] ischarming.These examples show that the question of what thecorrect nearness constraint, if any, is remains open.Finally, Hobbs' algorithm handles both intra-sententialand extra-sentential pronominal reference relations,while ours is only intended to handle intra-sententialcases.6.
CURRENT STATUS AND FUTURERESEARCHIn this section, we conclude by discussing some ofthe strengths and weaknesses of the current im-plementation and areas for future research.
Theshortcomings fall into two general categories: limita-tions of the implementation proper and limitations ofthe theory of pronominal reference that was imple-mented.There are two general sorts of limitations to themechanism described here: those that may be over-come by adding additional filtering devices to thebasic tree-walking engine and those that may requirea change in that basic engine.
We begin with limita-tions of the first sort.Currently, the algorithm does not do any checkingon the potential antecedents of a pronoun or boundanaphora to see if they agree in person and number, sFor bound anaphors, this is straightforward: a boundanaphor and its antecedent must agree in person andnumber.
For personal pronouns, on the other hand,eCuwently, NPs are not specified for gender in our system, so thiscannot be checked.268the situation is more complicated.
In the singular, first('T', "me"), second ("you"), and third ("he", "him","she", "her", "it") personal pronouns require agree-ment in both person and number.
In the plural,however, the number requirement is dropped becauseof "split antecedents" cases, in which more than oneNP forms part of the antecedent of a pronoun, as in:(25) \[John\] told \[Bill\] that \[they\] should leave.where "John" and "Bill", together, antecede "they".Third person plural pronouns still require that eachantecedent of a split antecedent itself be third person.First person ("we", "us") and second person("you") pronouns also allow split antecedents, butwith looser person agreement requirements:(26)a.
\[I\] told \[John\] that \[we\] should go.b.
\[I\] told \[you\] that \[we\] should go.c.
\[Bill\] told \[you\] that \[you\] should go.d.
I told \[you\] that \[you\] should go.e.
~John told __Bill that w._.ee should go.f.
John told Bil.._ll that you should go.Note that a first person plural pronoun allows splitantecedents only if at least one of them is itself firstperson; contrast (26a) and (26b) with (26e).
Similarly,a second person plural pronoun allows split antece-dents only if at least one of them is also secondpersonmcontrast (26c) with (26f)--but not if one isfirst person; contrast (26c) with (26d).While the constraints on singular and third personplural pronouns could be implemented as a localagreement check (e.g.
as a pre-condition for beingadded to a pronoun's :possible-antecedents lot),the person agreement constraint on first and secondperson plural pronouns would require a separate post-process, since it is not a local constraint on individualsplit antecedents, but a global constraint on the set ofthem.
Currently, since our algorithm imposes noagreement checks, it allows both the good cases ofsplit antecedents as well as the impossible ones.
Weneed to add the check to our algorithm and extend thesemantics to also deal with split antecedents.The algorithm also does not check for "crossover"cases.
Roughly speaking, these are examples similarto backwards pronominalization cases such as (18)(repeated here as (27a)), in which the potential an-tecedent is a quantifier or a trace of a moved WHelement.
In such cases, overlapping reference is im-possible.
Contrast (27a) with (27b) and (27c).
(27) a.
\[His\] mother loves \[John\].b.
~His mother loves everyone.c.
Who does hi._?
mother love twho?These particular cases can be handled by addinga check to clause \[I.C\] to prohibit quantified NPs andWH-traces from participating in backwardspronominalization.
However, the more generalproblem of how elements dislocated by WH move-ment or by topicalization interact with the algorithmgiven here is a topic that requires further work beyondthis simple measure.More seriously, there is also a well-known case ofpronominal reference within NPs that is not handledby the algorithm.
A constraint from the syntactictheory of reference implemented by our algorithm isthat if the antecedent-anaphor relation holds betweentwo positions, disjoint reference also holds betweenthem; see examples (10) and (11), and (13) and (14).However, there is one position in English where thisgeneralization is known not to hold: the possessiveposition of an NP.
A bound anaphor is possible here,but a pronoun in the same position is not subject todisjoint reference; see (28):(28) a.
\[The men\] read \[each other's\] books.b.
\[The men\] read \[their\] books.
(28a) is correctly handled by the algorithm as al-ready outlined; pass-down-c-commanding-nodestreats the nodes internal to the current minimaldomain as internal nodes for the possessive in aNoun Phrase, so the NP "the men" will be added tothe :possible-antecedents lot of a bound anaphorin this position.
However, the same characteristics ofthe algorithm will also result in the NP "the men" be-ing assigned to the :impossible-antecedents slot of"their" in (28b).
One possible remedy for this situa-tion is to add a clause to update-node that checks forpossessive pronouns separately from other pronounsand that allows NPs both internal and external to thecurrent minimal domain to be possible antecedents.However, the more far-reaching modificationsproposed in the discussion below of the theory ofpronominal reference would obviate this change.There are several areas where our implemen-tation points out problems with the structural theory ofpronominal reference.
The first of these is the defini-tion of c-command itself.
7 Under Reinhart's (1976)original definition, a node A c-commands node B iffthe branching node most immediately dominating Aalso dominates B and A does not dominate B. Thedifference between the two definitions can be seen inFigure 2-1; in addition to the c-command statementsgiven there, Reinhart's definition adds the following:E c-commands B, C, F, D, and GF c-commands D and GG c-commands C and FThese statements are true under Reinhart's definitionof c-command, because no branching category inter-venes between the c-commanding and c-commandednodes, but not under that used in the implementedalgorithm, since there is no sisterhood among thenodes.
We have found this modified definition to beeasier to implement; moreover, various researchers(e.g.
Aoun and Sportiche (1983)i have pointed outproblems with Reinhart's definition that the modifieddefinition solvas.7Our algorithm uses a definition that is equivalent to the inco~ttuction with relation of Klima (1964, p. 297), which inspiredc-command.269The implementation has also brought to lightasymmetries in the strictness of c-command used todetermine the antecedents of a bound anaphor andthat used to determine the non-antecedents of apronoun.
In particular, none of the conjuncts of aconjoined NP can be the antecedent of a reflexive:(29) "John and Mary like himself.However, all of the conjuncts of a conjoined NP areimpossible antecedents for any pronoun for which theentire conjoined NP is an impossible antecedent.
In(30) John and Mary like him.
"John" cannot be an antecedent of "him", despite thefact that "John" does not c-command "him".
Contrastthis with (19) where a non-c-commanding possessivecan  be the antecedent of a pronoun.
This is handledcorrectly in the implementation.
Whenever our algo-rithm adds a conjoined NP to the: impossible-antecedents lots of a pronoun or anon-pronominal NP, it adds all the conjuncts of thatNP, as well.
While this works, there is clearly some-thing that is being missed here.
Presumably, it shouldfollow by definition that no individual conjunct of aconjoined NP can be a possible antecedent of a NounPhrase with which the entire conjoined NP is disjointin reference, sA more serious problem with the theory ofpronominal reference elaborated in Chomsky (1980)and (1981), and which our algorithm implements, isthe crucial assumption that referentially dependentNoun Phrases can be exhaustively partitioned intobound anaphors vs. personal pronouns and that,therefore, they will be in complementary distribution.However, examples such as (28), as well as (31)(pointed out by Kuno (1987)) and (32) indicate thatthe notion of exhaustive partitioning of boundanaphors against personal pronouns is incorrect inthe general .case, even though it may be the typicalstate of affairs.
(31) a.
\[John\] put the blanket under \[himself\].b.
\[John\] put the blanket under \[him\].
(32) a.
Ill buy myself a beer.b.
rll buy me a beer.We can keep the insight of the structural theory ofpronominal reference (i.e.
that structural relations playa role in delimiting reference possibilities), while stillincorporating these facts, if we give up the restrictionthat bound anaphors and personal pronouns are al-ways in complementary distribution.
One possible ap-proach to this problem is to use feature decompositionto characterize bound anaphors and pronouns: thefeature +short-distance indicates whether apronominal can be used as a short-distance anaphorwhile the feature :l:long-distance indicates whether iteThanks to Leland George for this insight, as well as for discussionof short and long distance nephors.can be used as a long-distance anaphor.
9.
While, inthe normal case, personal pronouns in English arespecified to be long-distance anaphors that cannot beused as short-distance anaphors, (i.e.
asI -short -d istance +long-distance\]) this system wouldallow the feature governing a pronominal's use as ashort-distance anaphor to be left free (i.e.
as?short-distance) in certain syntactic contexts inEnglish, such as the possessive position of a NounPhrase, the object of certain prepositions, and the in-direct object position of verbs.
1?
Such a view of thesyntax of personal pronouns could be implemented ina unification grammar fairly straightforwardly.While such a treatment of personal pronouns asshort-distance anaphors does not handle all thecounter-examples to the syntactic theory ofpronominal reference raised by researchers such asKuno, it does begin to address them seriously.Clearly, it is more in accord with the facts than atheory that postulates an exhaustive partitioning ofbound anaphors vs. personal pronouns, and so con-stitutes, in our opinion, a promising start towards han-dling the full range of pronoun reference facts in areasonable manner.Finally, we consider alternate ways of combiningour pronominal reference mechanism with parsingand semantic interpretation.
One possibility is a fullyincremental architecture in which c-command con-straints, semantic interpretations, and external refer-ence resolution are computed simultaneously with theparse.
Such an architecture might seem particularlyattractive for processing large sets of alternatives,such as are encountered when processing spoken in-put.
The intra-sentential reference phenomenadescribed in this paper pose a problem for such anincremental approach, however.
The possiblities forinternal resolution for an anaphor cannot all be knownlocally to the anaphor, but must be obtained fromelsewhere in the sentence.
In many cases antece-dents will lie to the left of the anaphor in the sentence,and thus will have been seen by a left-to-right parserby the time the anaphor is reached.
But consider acase of backward pronominalization, as in (18),repeated here as (33):(33) His mother loves John.A wholly incremental mechanism, parsing the NP "hismother" first, would have to conclude that the referentof "his" was extra-sentential, since no intra-sententialreferent was seen to the left.
And if no extra-sentential referent could be found, the NP would haveto be rejected.
To be successful, such an incrementalmechanism would have to be modified to include akind of "lazy evaluation" which could rule out certain~'hle is akin to the feature system :l:anaphod?
:l:pronomlnal ofChomsky (1981)'?This suggestion was originally made by Lust, et aL (1989) whosupport it on the basis of language acquisition data.270referents for an anaphor but never rule an anaphorempty of referents until utterance processing hadbeen completed.Another alternative would be to separate intra-sentential anaphor resolution from semantic inter-pretation, performing it instead in conjunction withextra-sentential discourse processing.
A possibleproblem for this approach can be seen in sentenceswhere the anaphor is combined with another am-biguous element, so that proliferation of semantic in-terpretations occur, as in:(34) John's car is better than Bill's.where the pro N-BAR, left completely unspecifiedduring semantic interpretation, is free to generate allsorts of combinations with the possessive, includingthose in which the possession is appropriate tovarious "relational" interpretations of the pro N-BAR(de Bruin and Scha (1988)).In future work, we plan to combine parsing andsemantic interpretation into a single unification gram-mar incorporating semantic information in additionalfeatures.
Part of that work will be to look for theoptimal method of combining it with the pronominalreference mechanism presented here.ACKNOWLEDGEMENTSThe work reported here was supported by the Ad-vanced Research Projects Agency under Contract No.N00014-C-87-0085 monitored by the Office of NavalResearch.
The views and conclusions contained inthis document are those of the author and should notbe interpreted as necessarily representing the officialpolicies, either expressed or implied, of the DefenseAdvanced Research Projects Agency of the UnitedStates Government.REFERENCESAoun, Yousef and Dominique Sportiche (1983) "Onthe Formal Theory of Government", The LinguisticReview2, pp.
211-236.Ayuso, Damaris M. (1989) "Discourse Entities inJanus", 27th Annual Meeting of the Associationfor Computational Linguistics: Proceedings of theConference, Association for Computational Lin-guistics, Morristown, N J.Baker, C.L.
(1978) Introduction to Generative-Transformational Syntax, Prentice-Hall, Inc.,Englewood Cliffs NJ.Boisen S., Y. Chow, A. Haas, R. Ingria, S. Roucos,R.
Scha, D. Stallard and M. Vilain (1989)Integration of Speech and Natural Language: FinalReport, Report No.
6991, BBN Systems and Tech-nologies Corporation, Cambridge, Massachusetts.Bronnenberg, W.J.H.J., Harry C. Bunt, S.P.
JanLandsbergen, Remko J.H.
Scha, W.J.
Schoen-makers, and E.P.C.
van Utteren (1980) "TheQuestion Answering System PHLIQAI", inLeonard Bolc, ed., Natural Language QuestionAnswenng Systems, Hanser, Munich, pp.217-305.Chomsky, Noam (1980)"On Binding", LinguisticInquiry 11.1, pp.
1-46.Chomsky, Noam (1981 ) Lectures on Government andBinding, FORIS PUBLICATIONS, Dordrecht-Holland/Cinnaminson - U.S.A.de Bruin, Jos and Remko Scha (1988) "The Inter-pretation of Relational Nouns", 26th Annual Meet-ing of the Association for Computational Linguis-tics: Proceedings of the Conference, Associationfor Computational Linguistics, Morristown, NJ, pp.25--32.Hobbs, Jerry R. (1978) "Resolving PronounReferences", Lingua 44, pp.
311--338.Jackendoff, Ray (1972) Semantic Interpretation inGenerative Grammar, MIT Press, Cambridge, MA.Klima, Edward S. (1964) "Negation in English", inJ.
A. Fodor and J. J. Katz, eds., The Structure ofLanguage: Readings in the Philosophy ofLanguage, Prentice-Hall, Englewood Cliffs, N. J.Kuno, Susumu (1987) Functional Syntax: Anaphora,Discourse, and Empathy, The University ofChicago Press, Chicago and London.Lasnik, Howard (1976) "Remarks on Coreference",Linguistic Analysis 2.1, pp.
1 --22.Lust, Barbara, Reiko Mazuka, Gita Martohardjono,and Jeong Me Yoon (1989) "On Parameter Set-ting in First Language Acquisition: The Case of theBinding Theory", Paper presented at The 12 thGLOW Colloquium, Utrecht, April 5, 1989.Reinhart, Tanya (1976) The Syntactic Domain ofAnaphora, Ph.D. Dissertation, MIT, Cambridge,Massachusetts.Scha, Remko and David Stallard (1988) "Multi-LevelPlurals and Distributivity", 26th Annual Meeting ofthe Association for Computational Linguistics:Proceedings of the Conference, Association forComputational Linguistics, Morristown, NJ, pp.17-24.271
