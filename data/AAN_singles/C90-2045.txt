An Interactive Japanese Parser for Machine TranslationHiroshi Maruyamamaruyama@jpntscvm.bitnetHideo Watanabewat anabe@jpntscwn.bitnetShiho OginoIBM Research, Tokyo R.esearch Laboratory5-19 Sanbancho, Chiyod~-ku,Tokyo 102 JapanAbst rac tfin this paper, we describe a working system forinteractive Japanese syntactic an',dysis.
A humanuser can intervene during parsing to hell) the sys-tem to produce a correct parse tree.
Human in-teractions are limited to the very simple task ofindicating the modifiee (governor) of a phrase, andthus a non-expert native speaker can use the sys-t:em.
The user is free to give any information in;my order, or even to provide no information.
The:.
;ystem is being used as the source language ana-lyzer of a Japanese-to-English machine translation::;ystem currently under development.1 In t roduct ionI)espite the long history of research and develop-ment, perfect or nearly perfect analysis of a fairly',vide range of natural language sentences is stillbeyond the state of the art.
The users of the ex-isting batch-style machine translation systems areobliged to post-edit the machine-translated texteven if it contains errors because of an analysisfailure.We haw~ developed an interactive Japanese syn-tactic analysis system, JAWB (Japanese AnalysisWorkBench), for a Japanese-to-English machinetranslation system.
It can produce very reliable.,~yntactie structures with the help of a human user.User interactions are limited to the very simpletask of specifying the modifiee (governor) of aphrase, and thus a non-expert native speaker canuse the system.
The number of user interactions iminimized by using constraint pTopagation (Waltz1975) to eliminate inconsistent alternatives.One feature of our system not found in previousattempts (Kay 1973, ~Ielby 1980, Tomita 1986) isthat the user is completely free to give the systemany information in any order.
He also has the ai-ternative of providing no information, in this case,the system runs full;," automatically, although thequality of output may be degraded.In the next sectiom we describe the systemstructure.
Then in Section 3 we discuss the in-teractive dependency analysis, and show a samplesession.
Section 4 gives the results of evaluation ofthe system.2 System St ructureThe system structure of JAWB is shown in Fig-ure 1.
Japanese syntax analysis is divided intotwo parts: morphological nalysis and dependencyanalysis.An input sentence is first segmented into a se-quence of linguistic units called bu'nsets'u, whichcan be roughly translated in English as phr'ase,s.Each bunsetsu, hereafter called a phrase, consists1257Input Sentence1i Ii Morphological Analysis iDependency Analysisi Constraint-i Propagation' i  Engine ~,~Grammar!Rules .)"
--._,, Constra int  Network UsertTransfer II(I went: to the sea .
)f l ,  f:t i t~. '
\  tTf-:~ l:_ ,:(I) (sea+TO) (go+PAST}i~ < (go+PAST)1__r - -  1~/d:l: (I) i~.~ (sea+TO)Figure h System structureof one or more primitive words.
The morphologicalanalyzer analyzes a consecutive sequence of char-acters and identifies word and phrase boundaries.Japanese morphological nalysis is a relatively wellestablished technology (Maruyama et al 1988)and intervention by the user is seldom required,although the system does provide a facility for this.A Japanese syntactic structure is depicted bymodifier-modifiee r lationships between phrases.The dependency analyzer determines the modifieeof each phrase.
This is the most difficult task andnormally user interaction takes place at this stage.First, the system determines the modifiee candi-dates of each phrase by using the grammar ules,and builds a data structure called a constraint net-work.
The grammar ules are based on ConstraintDependency Grammar (Maruyama 1990), and areessentially constraints between modifications.
Theconstraint network holds the modifiee candidatesof each phrase, and the grammatical constraintsare posed between the candidates.The system then proposes the most plausiblereading and displays it on the screen along withthe other possibilities.
If the human user is satis-fied with the proposal or does not want to makeany decision, he tells the system to 'go ahead'and the proposal is passed through to the transfercomponent as the unique parsing result.
Alterna-tively, tile user can select an arbitrary phrase andchoose its modifiee from the rest of the candidates.The system incorporates this information into theconstraint network, makes another proposal, andshows it to the user.
This process is iterated untilno more ambiguity remains.
During analysis, theconstraint propagation engine keeps tile constraintnetwork locally consistent by using the constraintprvpagation algorithm (Waltz 1975).Before the unique parse tree is submitted tothe transfer component, JAWB performs some'post processing' on the tree.
This processingincludes resolving remaining lexical ambiguities,giving grammatical relations such as SUBJ andDOBJ, and transforming a passive-voice struc-ture into an active-voice structure.
Since mak-ing such decisions requires expert knowledge aboutJapanese linguistics and/or the system's internalstructure, it is preferable that this process is car-ried out automatically.
Since correct modifier-modifiee relationships are given at the previousstage, this process makes few errors without huoman intervention.258 2Ssent = {\ [phrase=l ,  s t r ing  ='' & f?
~,2 ~"  (anataga) ,cat=rip, mcat=pred modifier,modif J ee-~{~,2,3,4,5Y,},words:: .\[\ [ s t r ing  ='' ~t?
~',i" (anata)  ,syn=-\[Y.\[pos=105,string="j~)~- "(you),sem = \[sf={hum}, caseframe={}\] \] ,\[pos=105,str ing="~\]~ "(far off),/ram = \[sf={loc, con,abs},caseframe={}\] \]X}\],\[string=" 75~" (ga),syn= \[pos=75, string=" ~" (SUB J) \] \]}\],\[phrase=2, string=" ~ \[~ "(kinou) ,cat=advp, mcat=pred_modifier,modif iee={~,3,4,5~,},Figure 2: Input to the dependency analyzer3 Dependency  Ana lys i sLet us consider sentence (1).
(1)Anataga k inou deattayou~SUBJ  yesterday meet-PASTotokowo miCa .man-\[\]BJ see-PASTPart of the input to the dependency analyzerfor this sentence is shown in Figure 2.
A sentenceis a sequence of phrases, each of which is repre-sented as a feature structure.
Some of the valuesare enclosed by special brackets {% and %}, repre-senting di.sj~Lrtctio'ns or choice t)oints.
Phrase 1 inFigure 2, for example, contains two choice points,one for structural ambiguity (the modifiee slot) andthe other tor lexical ambiguity (tile sgn slot of thefirst word).
In Japanese, every phrase except thelast one modifies exactly one phrase on its right.
1Therefore, the modifiee of phrase 1 is one of thefour succeeding phrases.The grammatical rules that we need here are asfollows:for X in $sen~ begin/* GI.
pred_modifier modifies a pred */(X.mcat=pred modifier =>Ssent.
(X.modifiee).eat in {vp,adjp,adjvp})~/* G2.
noun_modifier modifies a noun */(X.mcat=noun modifier =>Ssent.
(X.modifiee).cat in {np})endfor X,Y in Ssent begin/* G3.
modifications do not cross */X.phrase<Y.phrase & Y.phrase<X.modifiee =>Y.modifiee <= X.modifieeendAccording to the above rules, tile modifiee (i.e.,the governor) of phrase 1 (you-SUBJ) is eitherphrase 3 (meet-PAST) or phrase ,5 (see-PAST),since phrase 1 is a predicate-modifier and phrases 3and ,5 are predicates.
Similarly, phrase 2 can mod-ify either phrase 3 or phrase 5.
The values of themodifiee slot of each phrase thus become as follows:phrase i : modifiee={~,3,5~,}phrase 2: modifiee={~,3,5~,}phrase 3 : modifiee=-\[~,4~,}phrase 4: modifiee={~,SYo}Because modification links do ,lot cross eachother (by rule G3), tile cases of phrase 1 modifyingphrase 3 and phrase 2 modifying phrase 5 do notco-occur.
Therefore, this sentence has three differ-ent readings, which correspond to (1-1) to (14):(1-1) (I) saw the man you met yesterday.
(1-2) You saw the man (I) met yesterday.
(1-3) Yesterday, you saw the man (I) met.Tile system maintains these readings im-plicitly by having constraints between choicepoints.
For example, the following eorzstrairzt ma-1This is a common view of Japanese syntax, althoughthere are different views.3 259  I2 2 1 1you-SOBJ yester -  meetmpAST man- see-day 0BJ PAST2 2 I Iyou-SUBJ yester-  meet-PAST man- see-day OBJ PASTa.
When the cursor?
is on phrase 1b.
When the cursoris on phrase 2Figure 3:triz is attached between the two choice pointsSsent .
i .mod i f iee  and $sent .2 .mod i f iee :$sent.i.modifiee$sent .2 .
valuemodifiee3 I5 03 I5 IBy means of the constraint matrices, the systemcan defer tile generation of individual parse treesuntil all structural ambiguities are resolved.
Thenumber of parse trees may combinatorially explodewhen the sentence becomes long.
For example, sen-tences with more than 20 phrases are not rare andsuch sentences may have tens of thousands of parsetrees.User  In ter faceThe essential portion of the user interface is shownin Figure 3.
The system does not display the pro-posed modifiees of all the phrases at once.
Instead,when the user moves the cursor to a phrase by us-ing a mouse, the proposed modifiee and the otherpossible candidates are highlighted.
In the figures,the current phrases pointed to by the cursor are un-derscored, the proposed modifiees are in reversedvideo, and the other modifiee candidates are ina shaded box.
2 The number appearing at theleft lower corner of each phrase shows the num-ber of modifiee candidates of the current phrase.2These are in different colors on the real screen.If this number is one, the modifiee is uniquely de-termined.
Otherwise, the modifiee of the phr~e isambiguous.Figure 3-a shows the screen when the cursor ison phrase 1 (you-SUB J).
Phrase 1 can modify ei-ther phrase 3 or phrase 5, and the system's pro-posal is phrase 5.
Figure 3-b shows the screen whenthe cursor is o11 phrase 2.
By moving the cursoroi1 tile phrases, the user can check the current sys-tem proposal.
If tile user is satisfied with it, heindicates this by clicking a special 'go-ahead' icoq.Otherwise, he has to select the proper candidates.The user selects one of the ambiguous phrasesby clicking tile mouse, moves the cursor to itsproper modifiee, and clicks the mouse again.
Thesecond click triggers the constraint propagation en-gine, and the updated situation is displayed instan-taneously.
Figure 4 shows the situation after theuser has instructed the system that phrase 1 modi-fies phrase 3.
The reader may notice that the mod-ifiee of phrase 2 is also determined automaticallybecause of constraint propagation.During parsing, the user always has the initia-tive in the interaction.
The user knows the exactsources of the structral ambiguity, and he can se-lect any of them to give information to the sys-tem.
This is in contrast to the previous systems,in which the user must answer system-generatedqueries one by one.
The constraint propagationengine ensures that the given information is maxi-mally used in order to minimize further interaction.The user also has the option of saying ~go-ahead'260 41 1 1 1you-SgBJ yes ter -  meet-PAST man- see-day 0BJ PAST1 1 1 1you-SllBJ yester -  meet-PAST man- see-day 0BJ PASTFigure 4: Screens after specifying that phrase 1 modifies phrase 3at any time, taking the default choices proposedby the system.4 Eva luat ionOne of tile claims of JAWB is that it can be usedby non-expert users.
To validate the claim, we con-ducted a comparative test with an expert user anda non-expert user.
Figure 5 shows the results of thetest.
Subject A is one of the authors who actuallydeveloped the grammar.
Subject B is a Japanesenative speaker with no background in linguisticsor computer science.
Given an initial screen of de-pendency analysis, subject A spent 12.9 secondson the average before making a correct parse tree.This period includes the time spent specifying theproper modifiees (1.1 times oii average) and veri-fying the system proposals, but does not includeoverheads uch as the time spent choosing a newsentence to be analyzed and waiting for the sys-tem to look up dictionaries from a disk.
The sametask took 18.8 seconds for subject B.
The impor-tant point here is that although the performanceis somewhat different, tile parse trees generatedby both subjects were essentially identical, a Thismeans that, with a non-expert human user's help,JAWB is capable of producing very reliable parsetrees fairly efficiently, although the efficiency canbe increased by about 50% if an expert user usesit.Another yardstick for evaluating the system isthe accuracy of the initial proposals.
From 1,089test sentences taken from actual newspaper arti~3There  were  d i f ferences when the  sentence  was  t ru ly  am-b iguous ,  in wh ich  case even a human user  cou ld  not  resolvethe  ambigu i ty  w i thout  the  context  knowledge.cles, JAWB generated correct initial proposals for507 sentences (47%), which means that, if it is usedin a flfll-automatic mode, its accuracy is 47%.
Onthe other hand, the system rejected two sentencesas ungrammatical, which means that for 99.8% ofthe test sentences, JAWB was capable of producingcorrect parse trees with appropriate user interac-tion.5 Conc lus ionJAWB is currently being used to accumulate cor-rect parse trees for a corpus of texts.
The accu-mulated data are vital for the development of ourmachine translation system for at least two rea-sons:1.
The transfer component, which generates anEnglish syntactic structure from a Japanesesyntactic structure, is difficult to developwithout having enough error-free input data,that is, Japanese parse trees.2.
The accumulated parse trees are used as reli-able linguistic data from which various statis-tical data are obtained in order to refine thegrammar ules.We believe that interactive source languageanalysis is a promising approach to practical ma-chine translation ot only because it may signifi-cantly reduce the task of post editing, which shouldbe carried out by a professional translator, but alsobecause tile cost-saving effect is multiplied whenthe same text is translated into several differentlanguages.5 261Sentence length(~p of phrases)1 -34 -67 -910- 1213- 1516- 1819 - 21Ave.
time (see.)Subj.
A Subj.
B6.314.120.631.932.542.0Ave.
~ of interactionSubj.
A3.68.314.621.127.548.00.00.51.52.12.54.0Subj.
B0.10.72.12.83.54.0Ave.
9.8 12.9 18.8 1.1 1.5Figure 5: User performanceAcknowledgementsThe authors are grateful to Masayuki Morohashi,Hiroshi Kitamura, and ttiroshi Nomiyama for theirvaluable discussions and suggestions.
The authorsalso would like to thank Michael McDonald for hishelp in preparing the manuscript.Re ferences1.
Kay, Martin.
1973, "The MIND system," inRustin, R.
(ed.)
Natural Language Processing,Algorithmics Press.2.
Maruyama, Hiroshi., 1990, "Structural disam-biguation with constraint propagation," Proc.of ACL Annual Meeting.3.
Maruyama, Naoko; Morohashi, Masayuki;Umeda, Shigeki; Sumita, Eiichiro, 1988, "AJapanese sentence analyzer," IBM Journal ofResearch and Development, Vot.
32.4.
Melby, Alan.
1980, "ITS: Interactive transla-tion system," Proceedings of COLING '80.5.
Tomita, Masaru.
1986, "Sentence disam-biguation by asking," Computers and Trans-lation, Vol.
1.6.
Waltz, David 1975, "Understanding line draw-ings of scenes with shadows," in: Winston,P.H.
(ed.
): The Psychology of Computer Vi-sion, McGraw-Hill.262 6
