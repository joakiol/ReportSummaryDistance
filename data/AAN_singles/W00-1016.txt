Dia logue  He lpsystem based  on  F lex ib le  Match ing  o fUser  Query  w i th  Natura l  Language Knowledge BaseSadao  Ku_rohashi and  Wataru  H igasaGraduate School of InformaticsKyoto UniversityYoshida-honmachi, Sakyo, Kyoto, 606-8501 Japankuro@i, kyoto-u, ac.
jp, higasa@pine, kuee.
kyoto-u, ac.
jpAbst ractThis paper describes a dialog help-system which advises users in us-ing computer facilities and softwareapplications provided by the Cen-ter for Information and Multime-dia Studies, Kyoto University.
Thesystem employs a knowledge basewritten in natural language and re-trieves a proper knowledge unit byflexible matching of user query withthe knowledge base.
The  systemis running since July 1999, receivedabout 2,000 queries for the firstseven months, and answered about40~ of them satisfactory.1 In t roduct ionOne of the ultimate goals of Natural Lan-guage Processing is to realize a dialogue sys-tem which can communicate with human be-ings in a natural way (Wilks, 1999).
How-ever, no effective real world dialogue applica-tion exists so far, not only in spoken languagefor which speech recognition is still a big ob-stacle, but also in typing language.The most serious problem is knowledge.
Itis obvious that without sufficient knowledge adialogue system cannot alk with people sat-isfactorily.
Classical dialogue systems like UC(Wilensky et al, 1984) utilized a formal lan-guage to represent knowledge, which requiresthe heavy cost of construction and mainte-nance and makes the scaling up quite difficult.In contrast, along with the improvementof NLP, research activities which utilize nat-ural language text as a knowledge base be-come popular, such as START (Katz, 1990),FAQ Finder (Cooper, 1996), and QA Trackin TREC 8 (NIST and DARPA, 2000).
Thesesystems, however, basically produce one timeresponse, and do not have a conversation withusers.This paper proposes a dialogue helpsystemin which natural anguage knowledge base isnot only used for one time response, but alsofor conducting a conversation.
To put it con-cretely, the system can?
ask the user back if there is an unknownword in the user utterance,?
interpret the user utterance contextually,and?
ask the user back when the user utter-ance is not clear.In order to achieve these functions, a mildrestriction is imposed on the knowledge base;it is compiled in a dictionary-like structure(entry and its description) and the descrip-tion is written in an if-then format (thoughseveral expressions can be used to show if-then relation).The dialogue helpsystem reported in thispaper advises faculties and students in us-ing the computer facilities and software ap-plications of a university.
The computerfacilities of Kyoto University, about 1,200computers (PCs and WSs) in several roomsand modem connections are administratedby the Center for Information and Multime-dia Studies (CIMS; http://www.media.kyoto-u.ac.jp/).
The situation at CIMS is thatmany people are using computers, teaching141assistants (TAs) help the users, but are not al-ways available, and certain fundamental ques-tions are asked frequently.
Considering this,we assumed that it is a very promising domainfor an experimental dialogue system.The system started its service on July 1999,received about 2,000 queries for the first sevenmonths, and answered about 40% of them sat-isfactorily.2 ExamplesThe following examples (real logs of the ser-vice) are illustrative of the breadth of dia-logues in which the system aims to partic-ipate.
The system is capable of generatingthe answers hown below in response to mostforms of the request users might supply 1.<1999 Jul 08 19:31:49>Ui: Method to invoke a screen save inUNIX?Si: What is "screen save"?U2: screen saver.$2: Type "xlock" in the command line.<1999 Aug 19 21:20:52>UI: Please tell me how can \] read emails inEmacs.S l: Select mail software from "mh-e",, ,mew ,~"U2: I try mh-e.$2: Type "M-x mh-rmail" on Emacs.
Type'T' to get unread emails and type ""after you move the cursor on the lineyou want to read.<1999 Sep 16 22:32:20>UI: How can I use Mew in UNIX?SI: After invoking Emacs, type "M-xmew".
See http://www.mew.org/ fordet~.~l.~.U2: How can I delete emails?$2: Type "d" in the Summary Mode andthen type "x" for execution.1Although our system is a Japanese dialogue sys-tem, in this paper we use their English translationsfor the explanation.<1999 Oct 25 12:42:28>UI: Tell me how to use Netscape.SI: On the \[Start Menu\], click \[program\]and then click \[Netscape Navigator\].U2: What's start menu?$2: \[Start Menu\] is a pull-down menu sum-marizing Windows applications, whichappears when you chck \[Start\] icon onthe left bottom of the desktop screen.U3: What is click?$3: I cannot explain "click" in detail.3 Types  o f  user  u t terancesWe observed the conversations of users andTAs in the CIMS computer rooms by record-ing and transcription (20 hours observation;1.5 hours recording).From this study, we discovered that userutterances can be classified as follows:What  type:  The user asks some fact.ex.
What is Emacs?Explain Emacs.How type:  The user asks how to do some-thing.ex.
How can I input Japanese charactersin Emacs?I want to input Japanese charactersin Emacs.Symptom type:  The user shows somesymptom since he/she want to knowhow to cope with it.ex.
I cannot access my private folder.The screen is white.Request  ype:  The user requests somethingto C1MS.ex.
Please install Visual-C.Please make my disk quota bigger.Add i t ion  type:  The user adds or modifiesthe previous question.ex.
How about WindowsNT?In the case of reply?142ut : How can I send emails by Mew?UserUser Interface(WWW browser)(KNP)Utterance contentDialogueManagerKnowledgeBaseFlexible Mathing1 <TITLE>Mcw</TITLE>b <SYN>mew, MEW, MIYU</SYN><BT>Mail sofiwarc<\]BT><DEF>A kind of mail sofficwam working on"~cbest <DESCRIPTION> .......... ?
<KU>In order to invoke Mew,i Woe "M-x mew" on Emacs.</KU> :::::::::::::::::::::::::: ?
"-<KU>Ifyou want o receive mails by Mew on Emacs,type "i'.</KU>?
.-<KU>If you want o reply emails by Mew on Emacs,........ </KU></DESCRIPTION><TITLE>Mh-e</TITLE><SYN>mh-e</SYN><BT>Mail software</BT>Figure 1: The outline of the helpsystem.Answer  type:  The user answers the systemquestion.ex.
WINDOWS.The compression type is zip.The helpsystem reported in the paper an-swers what, how and symptom questions.
Inaddition, it can interpret addition and answerutterances contextually.
The request utter-ances are out of the system scope currently.4 Out l ine  o f  the  he lpsystemThe system is comprised of the following com-ponents (Figure 1):User Interface:  Users access to the helpsys-tern via a WWW browser by using CGIbased HTML forms.
The helpsystem isactually running on a workstation i  ourlab.Input  Analyzer:  The user utterance istransformed into a dependency structureby a robust parser, KNP (Kurohashiand Nagao, 1994; Kurohashi and Na-gao, 1998), and utterance-pattern rulesare applied to extract he utterance typeand the utterance content.Japanese is head-final and the final ex-pression shows an utterance type.
There-fore, the longest matching of utterance-pattern rules form the end of the utter?ance can detect the utterance type inmost cases.
For example, if the final ex-pression is "niha doushitara ii desu ka(How can I -- -)", how type is assigned; if"no baai ha (In case...)", addition type.143Knowledge  base: The knowledge base iswritten in a natural language, in adictionary-like structure.D ia logue Manager :  The core process ofthe dialogue manager is to match theuser utterance with the hmowledge basein order to find the most appropriate de-scription.
It also handles contextual in-terpretation of the user utterance andquestion to the user.Eraal l  Sender :  The user can send his/herinput-log to the CIMS staff via email ifthe automatic response is not satisfac-tory.
So, the user does not have to in-put his questions a second time.
Thisoption surely contributes to the popular-ity of the system.In the following sections, we discuss theknowledge base and the dialogue manager,since we consider these components as thecore of the system.5 Knowledge  base5.1 The  out l ineThe knowledge base has a dictionary-likestructure, in which each entry describes aconcept/issue in the domain.
It was com-piled manually by referring to the real QAs inCIMS rooms, the FAQ page of CIMS (about100 items), and question emails sent to CIMS(about 150 emails).
Currently, it containsabout 250 entries.Each entry consists of a headword(<TITLE> tag), synonyms(<SYN> tag),an upper word (<BT> tag), a definitionof the headword (<DEF> tag) and sev-eral descriptions concerning the headword(<DESCRIPTION> tag; see Figure 1).
Allcontent words in the knowledge base wereregistered to the system database, which isused to see whether a user input word isknown or unknown to the system (Section6.1).In addition, by collecting the headwordand its upper word pairs from the knowl-edge base, the domain ontology (concept tax-onomy) is constructed automatically.
Thetop categories of the current ontology aresoftware, hardware, computer term (differentto soft/hardware), action term, and generalterm.
The domain ontology is used by the di-alogue manager in several ways (Section 6.2,6.3).5.2 Natura l  language representat ionIn the knowledge base, the definition and sev-eral descriptions for the headword axe writtenin natural anguage, which provides both highpower of expression and high extensibility.The definition of the headword is used forwhat questions; the descriptions are used forhow and symptom questions.
Each descrip-tion, called knowledge unit (abbreviated toKU), is written in the following style:<KU> if a case, then what/how to do.
</KU>In Japanese, there are many sentential pat-terns to express if-then relation.
Authors ofthe knowledge base can use several expres-sions like "--- deareba... ( i f - .
.
, - .
- )" ,  "..- nobaai ha.
.
.
(in case that .-., ..-)".The basic form of the how and symp-tom question is "in some case, what/howcan I do?".
Therefore, the system can an-swer the question by finding the most similarKU case part and showing the correspondingwhat/how to do part to the user (see Figure1).5.3 Match ing  of  user  quest ion  andknowledge  un i tMatching of the user question and a knowl-edge unit (KU) is done by comparing theirdependency trees whose nodes are phrases.Their similarity is calculated as follows (Fig-ure 2):.
For each phrase in the user question, themost similar phrase in the KU case partis looked for based on the following cri-teria:?
Matching of content words : 3 points?
The second or more matchingof content words (when thephrase contains two or morecontent words) : 1 point1443+0+1+1=--53+0+1+1=5The user question(The maximum atching score : 15)A knowledge uait(The maximum atching score : 20)The c~tainty score (5+5+5: 15 x 20 x 100 = 75 (%)Figure 2: Matching of the user question and a knowledge unit.?
Matching of the depth of thephrases in parse trees : 1 point?
Matching of the type of thephrases (phrase types differdepending on surface casesand verb conjugations, etc) : 1 point2.
The similarity scores of phrases in theuser question are summed up and nor-malized by the maximum matching score(MMS) as follows (the MMS is the simi-larity score with the same sentence):The sum of scores of~ 2phrase similarities \]The MMS of ~ (The MMS of~the user question\] ?
\ the  KU case\]The above score is given to the KU as itscertainty score.The above algorithm cares for the struc-tures of sentences to some extent by givingphrase depth scores and phrase type scores,but not in a strict way.
This leads to a flex-ible matching for handling a variety of natu-ral language sentences and some parse errors.For the present, the parameters were givenempirically.6 Dialogue managerFigure 1 showed the simplest case of a QA.
Insome cases, however, the user and the systemhave to take more turns until the user obtainsa satisfactory answer.
Such a turn-taking isan essential point of a conversation.To conduct a conversation, that is, to per-form a proper turn-taking, the participanthave to be able to do the following functionsat least:* ask the opponent back if there is an un-known word in the opponent's utterance,?
interpret the opponent's utterance con-textually, and?
ask the opponent ba~k when the oppo-nent's utterance is not clear.Our dialogue helpsystem can perform thebasic level of the above functions by referringto natural language knowledge base.
In thefollowing subsections, we explain each of thesefunctions in detail.6.1 Ask ing  back  of  an unknown wordGiven the user utterance, the system firstchecks whether each content word in it is reg-istered in the system database or not.
If theword is not registered, it means that the wordis an unknown word to the system.
An un-known word appears in the following cases:.
Technical term not covered by the knowl-edge base.ex.
shell script~ clone.
Technical term whose synonym or relatedterm is covered by the knowledge base.ex.
Mozaic, Mozilla3.
Misspell of the user.ex.
Internetmai, Windo145Table 1: Patterns of the system responses.The best ~ of the candidate KUscert~.~nty score one many100--60%60-30%30--0%<what /how to do>(of the KU)(one difference)Select <upper  concept> from <listof the difference>.
(two or more differences)Your question is not clear.
Select<list of the candidate KU cases>.Your question is not clear.
Select<list of the candidate KU cases>I cannot answer your question.4.
General term.ex.
name, summer vacationThe system decision, whether the unknownword is general term or not, is taken accord-ing to whether it is an entry of a children'sdictionary or not (Tadika, 199'7).If the unknown word is not a general term,the system asks the user back in the form"what is 'unknown word'?".
If the systemasks "what is Internetmai?'
,  the user prob-ably notices his/her misspell and re-inputit correctly.
If the system asks "what isMozilla?
", the user might paraphrase it like"It means Netscape' .If the unknown word is a general word, itdoes not make sense to ask the user back, like''what is name?".
Therefore, the system justoverlooks it.6.2 Contextua l  in terpretat ion  of  userquest ionsThe user question may be related to its pre-ceding utterances, modifying or supplement-ing them.
As an example, consider the fol-lowing dialogue:UI: How can I send emails by Mew?S1: Type "C-c C-c" when you finish writinga mail.U2: In case to reply.$2: Move the cursor on the message towhich you want to reply and type "A".In this dialogue, the user utterance U2 is amodification of U1, indicating "How can I re-ply emails by Mew?
".In order to interpret such a context depen-dent utterance properly, the dialogue man-ager attempt to merge the user's new utter-mace onto the previous one.
For each word ofthe user's new utterance, Wnew, if the previ-ous utterance contains the word of the samecategory, Wold, w,~ew is overwritten on wol d.If not, Wne w is added to the previous utter-ance.
Two words are considered to be in thesame category if they belong to the same topcategory of the domain ontology described inSection 4.1.
Then, the system looks up theknowledge base by the merged utterance.In the above example, "reply" of U2 is over-written on "send" of U1, since they belongto the same category, act ion  te rm.
Then thesystem attempts to match the combined ut-terance "How can I reply emails by Mew?
"with the knowledge base, and as a final re-sult, it can response as $2 2In the above example, since U2 is an addi-t ion  utterance, the system does not need tointerpret U2 as a new, context independentquestion.
However, if the user utterance hasa different type, it is not possible to decidewhether it is context dependent or indepen-2Note that the system keeps the resultant interpre-tation of the user query, which means that the systemcan keep more than one user utterances practically.For example, if the user asks "In case to forward" af-ter $2 in the above xample, the system can interpretit as "How can I forward emails by Mew".146liiiiiiii~ii~!~iiiiiii~t -\]UI :  I would  l ike to uncompress  a file.
?
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
"~?S1 : Select compressed f i le f rom "lzh file" 66?/?\[  ~and  "zip file".
"~ ~, ~Iby LHA U~iity ~ |by'LHA U~I,~U2:  lzh me$2 : Invoke  LHA Ut i l i ty  32 and  select \ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.uncompress wizard from \[File\] menu.
I u oo p o , I I I?
Candidate KUsJ.
.
.
.
.
.
.
Difference : Izh file, zip fileUpper concept : compressed fileJFigure 3: An example of handling many candidate KUs.dent by seeing the new utterance alone.To decide this, the dialogue manager e-gard s the certainty score between the utter-ance and the most similar KU as an appropri-ateness measure of the interpretation.
Thatis, we calculate both the certainty score be-tween the merged utterance (contextual inter-pretation) and the knowledge base, and thatbetween the new utterance as it is and theknowledge base.
Then; we choose the inter-pretation which obtained the KU with thebigger certainty score.For example, in the following dialogue, U2is interpreted as "How to invoke Mew?
", sincethis combined interpretation has the biggercertainty score rather than U2 itself.Ui: What is Mew?SI: A kind of mail software working onEmacs.U2: How to invoke?$2: Type 'M-x mew" on Emacs.On the other hand, in the next example, U2is interpreted as it is, since U2 has the big-ger certainty score rather than the combined,somehow strange interpretation of "How touncompress zip files by Outlook on Unix?
".UI: I want to send an email by Outlook.$1: Invoke OutlookExpress, write youremail, and select "Send/Get" button.U2: How to uncompress zip files on UNIX.$2: Type "unzip \[zip filename\]" in the com-mand line.6.3 Asking back for an unc learquest ionAs mentioned so far, the system retrievesproper KUs which are similar to the userquestion.
The KU with the best certaintyscore and the KUs with the 90% or larger cer-tainty score are called candidate KUs.
The di-alogue manager performs differently depend-ing on the best certainty score and the num-ber of candidate KUs, as shown in Table 1.If the certainty score is 60% or higher andthe number of the candidate KUs are two ormore, the dialogue manager detects the dif-ference between their cases and ask the userto make his/her question more specific.Figure 3 shows an example of such a dia-logue.
The two candidate KUs are detectedfor U1 and their cases have only one differ-ence: "lzh file" and "zip file".
Then, the sys-tem detects their common upper concept inthe domain ontology and ask the user in theform "Select <upper concept> from <list ofthe difference >" as shown in Figure 3.If the candidate KUs contain two or moredifferences, it is hard to edit them in a neatway.
Therefore, the system shows the candi-date KUs' cases as they are.
If the certaintyscore is less than 60% and larger than 30%,the system responses in the same way.147o o  ~ " ~  = .
.
.
.
.
.
.
, , , ,  ~ 7 ~  ~o 7Figure 4: Evaluation of the helpsystem.7 Eva luat ionThe helpsystem started its service on July1999 as part of the CIMS web service.
Allconversation logs between users and the sys-tem have been stored as a dialogue database.In the dialogue database, ach dialogue be-tween a user and the system is segmented intotask units manually.
We call this unit a ses-sion.
Figure 4 shows the number of sessionsand their evaluation of each week from July5th to January 30th.
On average, there are70 sessions in a week; a dialogue with a userand the system consists of 2.1 sessions, whichmeans a user asks 2.1 topics in one dialogue;one session consists of 3.2 turns.The evaluation of sessions is based on thefollowing criteria.Success: The system could return a satisfac-tory answer.Fa i lure : Input  Analyzer:  'The systemcould not response properly because ofthe input analysis error, mostly the lackof utterance-pattern rules.
Utterance~pattern rules are added whenever thelack is found.Fai lure:Dialog Manager :  The systemcould not response properly becauseof the dialogue manager error.
Dia-logue manager error comes both fromsimple bugs of the system and fromunnoticed patterns of the user response.For example, when the system asks"select from A and B" expecting theanswer "A" or "B", a user might answer"the latter".
The system is modifiedwhenever necessary.Fai lure:Knowledge: The system could notanswer the question because of the lackof knowledge.
This is the major rea-son of the failure as shown in Figure 4.Though the knowledge base is being ex-tended step by step, the range of the user148query is unlimited, including troubles inusing PCs and advanced settings of soft-ware/hardware.Failure:Difi lcult: Current system architec-ture could not handle the question.
Forexample, a user sometimes asks "what isthe difference between A and B", or whenthe system asks "select from A and B", auser answers "I don't know".
In order tohandle such utterances, we are planningto improve the system to exploit defini-tions of "A" and "B".Out of scope: Out of the system domain,such as questions about telephonecharges in using PPP or the Y2K prob-lem.Miscel laneous: Such as "hello", "this is atest" or just a simple typo like "a".The success ratio, that is, the ratio of Suc-cess over Success plus Failure, of the wholeperiod is 37%.
The system became stablearound October 1999, and the success ratioafter that (14 weeks) is 39%.
Considering rel-atively wide domain the system have to cover,we feel the success ratio is reasonable, and thesystem is contributing to CIMS to some ex-tent by handling simple FAQs like "how tochange my password".8 Conc lus ionThis paper described the dialogue helpsys-tern, which has been working in practice withreal users.Construction of natural language knowl-edge base needs ome cost, though it is mucheasier than that of formal language knowl-edge base.
However, providing a high-qualityservice needs cost; good manuals and FAQsare important for any products, and a largeamount of materials are prepared for cus-tomer service operators.
With that in mind,we can say preparing a good document is auniversal problem, not just to a dialogue sys-tem.By rlmning the system, the real dialoguedatabase can be accumulated.
Based on thisdatabase, we would like to study the phenom-ena of man-machine conversation and to ex-tend our work to user modeling, user intentionestimation, and other interesting dialogue re-search areas.The system is designed to be domain-independent and can be ported to a new do-main by preparing a domain knowledge base.Exploiting this merit, we are planning to con-struct the automatic reference service systemof Kyoto University Library, which certainlyprovides us with a wider breadth of dialoguedata.Re ferencesEdwin Cooper.
1996.
Improving FAQ Finder'sperformance: Setting parameters by geteticprogramming.
In Working Notes of the AAAISpring Symposium on Machine Learning in In-formation Access.B Katz.
1990.
Using english for indexing andretrieving.
In Artificial Intelligence at MIT.Vol.1, MIT Press, pages 134-165.Sadao Kurohashi and Makoto Nagao.
1994.
Asyntactic analysis method of long Japanese sen-tences based on the detection of conjunctivestructures.
Computational Linguistics, 20(4).Sadao Kurohashi and Makoto Nagao.
1998.Building a Japanese parsed corpus while im-proving the parsing system.
In Proceedings ofthe First International Conference on LanguageResources ~ Evaluation, pages 719-724.NIST and DARPA.
2000.
The Eighth Text RE-trieval Conference (TREC-8).
NIST SpecialPublication.Jyunichi Tadika, editor.
1997.
Reika ShougakuKokugojiten (Japanese dictionary for children).Sanseido.Robert Wilensky, Yigal Arens, and David Chin.1984.
Talking to unix in English: An oveview ofUC.
Communications of the ACM, 27(6):574-593.Yorick Wilks, editor.
1999.
Machine Conversa-tions.
Kluwer Academic Publishers.149
