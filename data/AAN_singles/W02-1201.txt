A Study in Urdu Corpus ConstructionDara BeckerGraduate Program in Software EngineeringUniversity of St. ThomasSt.
Paul, MN, 55105, U.S.A.dmbecker@stthomas.eduKashif RiazDepartment of Computer ScienceUniversity of Minnesota-Twin CitiesMinneapolis, MN, 55455, U.S.A.riaz@cs.umn.eduAbstractWe are interested in contributing a small, publiclyavailable Urdu corpus of written text to the natu-ral language processing community.
The Urdutext is stored in the Unicode character set, in itsnative Arabic script, and marked up according tothe Corpus Encoding Standard (CES) XML Docu-ment Type Definition (DTD).
All the tags andmetadata are in English.
To date, the corpus ismade entirely of data from British BroadcastingCompany?s (BBC) Urdu Web site, although weplan to add data from other Urdu newspapers.Upon completion, the corpus will consist mostlyof raw Urdu text marked up only to the paragraphlevel so it can be used as input for natural lan-guage processing (NLP) tasks.
In addition, it willbe hand-tagged for parts of speech so the data canbe used to train and test NLP  tools.IntroductionWe are interested in contributing a small, publiclyavailable Urdu corpus of written text to the natu-ral language processing community.
In pursuit ofnatural language processing research in Urdu, wecould not find a publicly available Urdu corpuswith which to work, so we had to start our own totrain and test machine learning algorithms.The language engineering community seemsanxious to move forward fast in research of SouthAsian languages, but cannot because corpora ofSouth Asian languages are not ample.
?There is adearth of work on Indic languages.
The need tofocus on Indic languages was further strengthenedby our major review (with over 80 research cen-tres world wide responding) of the needs of the[language engineering] community.
Indic lan-guages are the ones that most researchers want towork with but cannot because lack of corpus re-sources?
[1].1 Urdu corpusOur corpus is currently made up of newspaperarticles and columns from the Urdu Internet siteof the British Broadcasting Company (BBC Urdu).News story data is easy to gather because it isreadily available on the Internet and already inelectronic form, although Web sites in Urdu tendto be published in graphics (a point we will returnto later).It is important for the users of corpus data toknow from where the data came.
Software trainedon a written text corpus will perform poorly onspoken data and vice versa.Something to keep in mind when using thisUrdu data is that vocabulary and the stylistics ofnews stories in Urdu are very different than ineveryday speech.
For example, in Urdu news sto-ries, ?militants?
are described as ?people who likeviolence?
	  .
Such a phrase is hardlyever used in everyday speech.
Headings of newsstories have different stylistics.
For example, acommon way to associate a statement to the per-son who made the statement is to write the state-ment followed by a colon or dash and then theperson?s name.
This trend has been observed inUrdu news stories published in Pakistan, India,the UK, and in the United States.The first version of the Urdu corpus to be pub-lished will be relatively small (20,000?50,000words), but we will regularly be adding to thecorpus as time passes.
It  will publicly available athttp://personal1.stthomas.edu/dmbecker/.All the Urdu documents will appear in a mini-mally tagged format (i.e., only paragraph tags)and, in addition, will be hand-tagged for parts ofspeech.2 XMLThe natural choice these days for storing a corpusis in an XML format.
An XML format providesneeded standardization so that a user who is un-familiar with the corpus data, but familiar with agiven XML DTD, can interface with the corpusfairly efficiently.
At its best, software that hasbeen previously designed to handle a corpusmarked up in a given XML structure can handle anew corpus marked up in the same structure.
Thisis advantageous because someone does not haveto comb through the new corpus trying to under-stand its design in order to redesign the softwarethat interfaces with the corpus.
The designer of acorpus is always familiar with his/her own design,so one advantage of using an XML language tomark up a corpus is to make the corpus readilyavailable to other researchers.We chose the Corpus Encoding Standard (CES)XML DTD  to mark up our corpus [2].
The mainenclosing tag in this DTD  is <cesCorpus> whichis broken into main parts, <cesHeader> and<cesDoc>.The header <cesHeader> contains meta in-formation about the corpus data such as, date cre-ated, creator?s name and contact information, de-scription of the source, categories of the content,the writing system of the language being stored,how hyphenation in the source text is handled,and much more information (Figure 1).The document tag <cesDoc> is where the ac-tual text of the language of interest is stored.
Eachdocument is itself marked up with metadata spe-cific to each document, like topic and source in-formation for every separate document in the cor-pus.The language data inside the <cesDoc> tagscan be marked up simply with a paragraph tag<p> (Figure 2) or they can be more elaboratelymarked up with tags of semantic value (e.g., date,number, measure, name, term, time, foreignword) and formatting value (e.g., figure, table, p,sp, div, caption) (Figure 3).
Tags that indicateformatting features such as ?caption?
are impor-tant because they can be used, for example, toautomatically determine the topic of a story.The actual implementation of tagging Urduscript at a detailed level presents a display prob-lem for our XML editor of choice, XML Spy.
Uponlooking at Figure 3, which is an excerpt from XMLSpy, one may think that the word order of theparagraph is out of order.
At the display level, theword order is out of order?it is barely human-readable, but at the storage level, the text is per-fectly tagged and will process correctly.
In Figure4, we show, in a human-readable format, the or-der in which the Urdu text and English tags arestored.
If an XML editor were optimized to displaya right-to-left language with left-to-right tags, thisis how we imagine the text would look.
More im-portantly though, this is the order in which XMLSpy currently stores the Urdu corpus.We began the corpus building process by stor-ing Urdu documents at the paragraph level withno other tags peppering the data.
However, weintend to hand tag the data for parts of speech sothe data can be used to train and test natural lan-guage processing algorithms.<cesHeader type="corpus" creator="Dara Becker" version="1.0" status="update"date.created="2/2/02" date.updated="4/17/02"><fileDesc><titleStmt><h.title>Urdu Corpus</h.title></titleStmt><editionStmt version="1.0a"/><publicationStmt><distributor>Dara Becker</distributor><telephone></telephone><eAddress type="email">dmbecker@stthomas.edu</eAddress><eAddress type="www">http://personal1.stthomas.edu/DMBECKER/</eAddress><availability status="free"/></publicationStmt></fileDesc></cesHeader>Figure 1: An excerpt from the corpus header(It is not well-formed because we deleted some required tags.
)<cesDoc version="1.0"><cesHeader type="text" creator="Dara Becker" version="1.0" status="new"date.created="2/18/02" date.updated="" lang="ur"></cesHeader><text><body><p>        	    	<p>   !
"	#$%&'()  &* ++ ,%" #-./0 1 #./+/-2#34. ./.+5 6/!
7 8 39.: ;%/<3&/& 7 =#>? %.@A"##$B39.)(/!
 ACDE/AB  	F43G3!
 =#,%.
?+HI %.@A"/0 1 J%>/<3KLA+) M & N) =3O/0 1 P4.JQR&PI'!
=3OKSPA/LT#UE()VW LX>YK%)   /0 1 FZ ./: [ A/L/%(</p></body></text></cesDoc> Figure 2: An excerpt from a corpus document(It is not well-formed because we deleted some required tags.
)<text><body><p><title>  	</title>  </p><p>   !
"	#$%&'()<name> </name>&* +<name>+ ,%" </name>#-./0 1 #./+/-2#34. ./.+5 6/!
7 8 39.: ;%/<3&/& 7 =#>? %.@A"##$B39.)(/!
 ACDE/AB<name></name><name>  </name>	 43F G3!
 =<name></name>#,%.
?+HI %.@A"/0 1 J%>/<3KLA+) M & <name></name>N) =<name>3O</name>/0 1 P4.JQR&PI'!
=<name>3O</name>KSPA/LT#UE()VW LX>YK%) <name></name><name>  </name>/0 1 FZ<name> .</name>/: [ A/L/%( </p></body></text>Figure 3: An illustration of how detailed tagging rearranges the display of the text in XML Spy* +& </name>  <name> ()'&%#$	 !
"  /!
5 6/.+ .4.#3/-2/+#.0 1 /-.# </name>,%"+ <name> <name> /: ;%8 39.7 /AB ACDE(/!
)B39.#$# %.@A"#>?=7  /&&<3 = !
G3F43	  </name>  <name>  </name>Figure 4: A human-readable rendition of what tagged Urdu would look like in an XML editoroptimized to display a right-to-left language with left-to-right tags3 UnicodeAnother natural choice for storing data is to usethe Unicode character set.
The Unicode characterset is another needed standard that we take ad-vantage of in order to make our corpus datareadily available to other researchers.The only reason for choosing to initially storetext from BBC Urdu, and not other news agen-cies, is that the BBC publishes in the Unicodecharacter set.
Other news sites that publish inUrdu have gotten in the habit of publishing ingraphics, presumably to avoid the hassles of ar-ranging compatible fonts and character sets inthe publishing software, systems, and clientbrowsers.
We think too it could be that Urdupublishers prefer Nastaliq-style font.
There areprobably a host of wonderful Nastaliq-style fontsavailable that work on legacy character sets, and,perhaps, publishers prefer to keep using thesefonts.The choice to publish in graphics thoughmakes it difficult for data harvesters to snag datafrom the Web.
If one really wants the data thatare published in graphic form, one has to rekeythe text, scan it using optical character recogni-tion technology, or contact the publisher for elec-tronic copies of text, in which case one needs tobe able to handle or convert from the characterset in which the text was originally typed.
In aprevious project, we developed an applicationthat can convert between 120 legacy charactersets and can be customized to convert any otherfont or character set, so we should have minimalobstacles when it comes time to harvest non-Unicode data.Storing Urdu data in the Unicode characterset eliminates some problems?however, wehave found other problems related to differentapproaches to mapping Unicode-based fonts tothe Arabic subset of Unicode.Unicode-based fonts seem to have been opti-mized for Arabic display, not for Urdu, so wehave experienced difficulty displaying variousforms of heh, noon ghunna,  and hamza.
Wefound the best Unicode-based font for properlydisplaying Urdu is Urdu Naskh Asiatype, avail-able from the BBC Urdu Web site, at least amongfree fonts.We compared this font (presumably opti-mized for Urdu) and Arial Unicode MS (pre-sumably not optimized for Urdu) and found thatthe letter heh and its variations are mapped dif-ferently in these two Unicode-based fonts(Table 1).Table 1: How fonts displayvariations of the letter hehUrdu NaskhAsiatype displayArial Unicode MSdisplay06C1FBA6  or FEE9FEEAFBA8 FBA9 FBA8 FBA9 06BEFBAA   or FEEB FEEC FBAA   or FEEB 0647not found in corpus FBA6  or FEE9FEEAFEEC For this reason, the metadata of the Urdu textin the corpus will contain the name of the Uni-code-based font in which the text is stored.
Anytext processor that uses the data will have tonormalize the usages of heh and its variations.
Inorder to view the Urdu text properly in its surfaceform the font in which the data was harvestedwill have to be applied.Differences in font mappings are not much ofa problem when handling English and other Ro-man-based orthographies, especially when usingthe Unicode character set, so special attentionhas to be paid to the different ways fonts displaysurface forms of Urdu letters.4 Urdu input methodIn order to add an Urdu document to our corpusthat we only have in graphic form or hard copy,we spent significant time setting up our computerfor Urdu Unicode input in order to be able totype into the corpus.Using the Arabic support on our computer,Microsoft Windows 2000 5.0 Service Pack 2, wewere easily able to install right-to-left script sup-port.
Since Windows 2000 uses the Unicodecharacter set internally, we did not have to doanything special to get Unicode support for ourefforts.Devising a plan for inputting Urdu on thekeyboard was the biggest challenge.
We endedup using Tavultesoft Keyman software to mapour own keyboard?it was very easy to use.
Ex-isting keyboard mappings for Arabic script-basedlanguages, we found, are generally not phoneti-cally mapped, meaning we would like Urdu letterfeh to be mapped to the letter f on the keyboardand so forth.
We did find one phoneticallymapped keyboard that we liked for Persian [3],CRL Phonetic Layout, so we used that mappingas a basis for developing our own.
It is not im-portant that our keyboard mapping be standard-ized?it only need work for the one person typ-ing our text.ConclusionIn this paper, we presented the methodology weused to build an Urdu corpus.
The process ofcorpora construction for South Asian languages,specifically Urdu, involves extra work becausethese languages are not written in a Roman-based script.
The use of the Unicode characterset and software that supports it makes buildingneeded corpora in these languages possible andrelatively easy.
Once corpora in these languagesbecome readily available, natural language proc-essing work in these languages can move for-ward.References[1] P. Baker and A. McEnery, ?Needs of Lan-guage-Engineering Communities; CorpusBuilding and Translation Resources,?MILLE working paper 7, Lancaster Univer-sity, 1999.
[2] N. Ide and G. Priest-Dorman, Eds., ?Cor-pus Encoding Standard,?
[Online docu-ment], 2000 March 20, [cited 2002 Feb28], Available:http://www.cs.vassar.edu/CES[3] ?Persian Keyboard Layouts,?
ComputingResearch Laboratory, [Online document],[cited 2002 May 5], Available:http://crl.nmsu.edu/~mleisher/keyboards/persian.html
