REAP ING THE BENEF ITS  OF INTERACTIVE  SYNTAXAND SEMANTICS*Kavi MaheshGeorgia Institute of TechnologyCollege of ComputingAtlanta, GA 30332-0280 USAInternet: mahesh@cc.gatech.eduAbstractSemantic feedback is an important source of informa-tion that a parser could use to deal with local ambigu-ities in syntax.
However, it is difficult to devise a sys-tematic ommunication mechanism for interactive syn-tax and semantics.
In this article, I propose a variant ofleft-corner parsing to define the points at which syntaxand semantics should interact, an account of grammat-ical relations and thematic roles to define the content ofthe communication, and a conflict resolution strategybased on independent preferences from syntax and se-mantics.
The resulting interactive model has been im-plemented in a program called COMPERE and shownto account for a wide variety of psycholinguistic dataon structural and lexical ambiguities.INTRODUCTIONThe focus of investigation in language processingresearch as moved away from the issue of seman-tic feedback to syntactic processing primarily dueto the difficulty of getting the communication be-tween syntax and semantics to work in a clean andsystematic way.
However, it is unquestionable thatsemantics does in fact provide useful informationwhich when fed back to syntax could help elimi-nate many an alternative syntactic structure.
Inthis article, I address three issues in the commu-nication mechanism between syntax and semanticsand provide a complete and promising solution tothe problem of interactive syntactic and semanticprocessing.Since natural languages are replete with ambi-guities at all levels, it appears intuitively that aprocessor with incremental interaction between thelevels of syntax and semantics which makes the bestand immediate use of both syntactic and semanticinformation to eliminate many alternatives wouldwin over either a syntax-first or a semantics-firstmechanism.
In order to devise such an interactivemechanism, one has to address three important is-sues in the communication: (a) When to communi-cate: at what points should syntax and semanticsinteract, (b) What to communicate: what and how*The author would like to thank his advisor Dr.Kurt Eiselt and his colleague Justin Peterson for theirsupport and valuable comments on this work.much information should they exchange, and (c)How to agree: how to resolve any conflicting pref-erences between syntax and semantics.In this article, I propose (a) a particular variantof left-corner parsing that I call Head-Signaled LeftCorner Parsing (HSLC) to define the points wheresyntax and semantics hould interact, (b) an ac-count of grammatical relations based on thematicroles as a medium for communication, and (c) asimple strategy based on syntactic and semanticpreferences for resolving conflicts in the communi-cation.
These solutions were motivated from ananalysis of a large body of psycholinguistic dataand account for a greater variety of experimen-tal observations on how humans deal with struc-tural and lexical ambiguities than previous models(Eiselt et al 1993).
While it also appears that theproposed interaction with semantics could makeimprovements to the efficiency of the parser in deal-ing with real texts, such a conclusion can only bedrawn after an empirical evaluation.WHEN TO COMMUNICATESyntax and semantics should interact only at thosetimes when one can provide some information tothe other to help reduce the number of choices be-ing considered.
Only when the parser has analyzeda unit that carries some part of the meaning of thesentence (such as a content word) can semanticsprovide useful feedback perhaps using selectionalpreferences for fillers of thematic roles.
We needto design a parsing strategy that communicateswith semantics precisely at such points.
While purebottom-up arsing turns out to be too circumspectfor this purpose, pure top-down parsing is too eagersince it makes its commitments oo early for seman-tics to have a say.
A combination strategy calledLeft Corner (LC) parsing is a good middle groundmaking expectations for required constituents fromthe leftmost unit of a phrase but waiting to see theleft corner before committing to a bigger syntacticunit (E.g., Abney and Johnson, 1991).
In LC pars-ing, the leftmost child (the left corner) of a phraseis analyzed bottom-up, the phrase is projected up-ward from the leftmost child, and other children ofthe phrase are projected top-down from the phrase.310While LC parsing defines when to project top-down, it does not tell us when to make attachments.That is, it does not tell when to attempt to at-tach the phrase projected from its left corner tohigher-level syntactic units.
Should it be done im-mediately after the phrase has been formed from itsleft corner, or after the phrase is complete with allits children (both required and optional adjuncts),or at some intermediate point?
Since ambigui-ties arise in making attachments and since seman-tics could help resolve such ambiguities, the pointsat which semantics can help, determine when theparser should attempt o make such attachments.LC parsing defines a range of parsing strategiesin the spectrum of parsing algorithms along the"eagerness" dimension (Abney and Johnson, 1991).The two ends of this dimension are pure bottom-up (most circumspect) and pure top-down (mosteager) parsers.
Different LC parsers result fromthe choice of arc enumeration strategies employedin enumerating the nodes in a parse tree.
In ArcEager LC (AELC) Parsing, a node in the parse treeis linked to its parent without waiting to see all itschildren.
Arc Standard LC (ASLC) Parsing, on theother hand, waits for all the children before makingattachments.
While this distinction vanishes forpure bottom-up or top-down parsing, it makes abig difference for LC Parsing.In this work, I propose an intermediate pointin the LC Parsing spectrum between ASLC andAELC strategies and argue that the proposedpoint, that I call Head-Signaled LC Parsing(HSLC), turns out to be the optimal strategy for in-teraction with semantics.
In this strategy, a nodeis linked to its parent as soon as all the requiredchildren of the node are analyzed, without waitingfor other optional children to the right.
The re-quired units are predefined syntactically for eachphrase; they are not necessarily the same as the'head' of the phrase.
(E.g., N is the required unitfor NP, V for VP, and NP for PP.)
HSLC makesthe parser wait for required units before interactingwith semantics but does not wait for optional ad-juncts (such as PP adjuncts to NPs or VPs).
Theparsing spectrum now appears thus:(Bottom-Up --~ Head-Driven -~ ASLC -~ HSLC-~ AELC --~ Top-Down)A lgor i thm HSLC:Given a grammar and an empty set as the initialforest of parse trees,For each word,Add a new node T~ to the current forest oftrees {Ti} for each category for theword in the lexiconmark T~ as a complete subtreeRepeat until there are no more complete treesthat can be attached to other trees,Propose attachments for a completesubtree Tjto a T~ that is expecting Tj, orto a T~ as an optional constituent, orto a new Tk to be created if Tj can bethe left corner (leftmost child) of TkSelect an attachment (see below) and attachIf a new Tk was created, add it to the forest,and make expectations for required unitsof TkIf a T~ in the forest has seen all its requiredunits,Mark the T~ as a complete subtree.Consider a PP attachment ambiguity and thetree traversal abelings produced by different LCparsers hown in Figure 1.
It can be seen from Fig-ure la that AELC attempts to attach the PP tothe VP or NP even before the noun in the PP hasbeen seen.
At this time, semantics cannot provideuseful feedback since it has no information on therole filler for a thematic role to evaluate it againstknown selectional preferences for that role filler.Thus AELC is too eager for interactive semantics.ASLC, on the other hand, does not attempt o at-tach the VP to the S until the very end (Fig lb).Thus even the thematic role of the subject NP re-mains unresolved until the very end.
ASLC is toocircumspect for interactive semantics.
HSLC onthe other hand, attempts to make attachments atthe right time for interaction with semantics (Figlc).6/(a) AELC 22D~ T 26"~ (b) ASLC61%R ~ 2~,22DE" T 24 N(?)
HSLCFigure 1: LC Parsers at an Attachment AmbiguityWHAT TO COMMUNICATEThe content of the communication between syntaxand semantics i a set of grammatical relations andthematic roles.
Syntax talks about the grammati-cal relations between the parts of a sentence such311as Subject, Direct-object, Indirect-object, preposi-tional modifier, and so on.
Semantics talks aboutthe thematic relations between parts of the sen-tence such as event, agent, theme, experiencer,beneficiary, co-agent, and so on.
These two closedclasses of relations are translated to one anotherby introducing what I call "intermediate roles"to take into account other kinds of linguistic in-formation such as active/passive voice, VP- vs.NP-modification, and so on.
Examples of inter-mediate roles are: active-subject, passive-subject,VP-With-modifier, subject-With-modifier, and soon.
While space limitations do not permit amore detailed description here, the motivation forintermediate roles as declarative representationsfor syntax-semantics communication has been de-scribed in (Mahesh and Eiselt, to appear).The grammatical relations proposed by syntaxare translated to the corresponding thematic rela-tions using the intermediate roles.
Semantics eval-uates the proposed role bindings using any selec-tional preferences for role fillers associated with themeanings of the words involved.
It communicatesback to syntax a set of either an Yes, a No, ora Don't-Care for each proposed syntactic attach-ment.
A Yes answer is the result of satisfying onemore selectional preferences for the role binding; aNo for failing to meet a selectional constraint; anda Don't-Care when there are no known preferencesfor the particular ole assignment.HOW TO AGREESince syntax and semantics have independent pref-erences for multiple ways of composing the differentparts of a sentence, an arbitrating process (that Icall the Unified Process) manages the communica-tion and resolves any conflicts.
This unified processhelps select the alternative that is best given thepreferences of both syntax and semantics.
In ad-dition, since the decisions o made are never guar-anteed to be correct, the unified process is not de-terministic and has the capability of retaining uns-elected alternatives and recovering from any errorsdetected at later times.
The details of such an er-ror recovery mechanism are not presented here butcan be found in (Eiselt et al 1993) for example.Syntax has several evels of preferences for theattachments it proposes based on the following cri-teria: Attachment (of a required unit) to an expect-ing unit has the highest preference.
Attachment asan optional constituent to an existing (completed)unit has the next highest preference.
Attachmentto a node to be newly created (to start a newphrase) has the least amount of preference.
Thesepreferences are used to rank syntactic alternatives.The  a lgor i thm for  the  uni f ied process:Given: A set of feasible attachments {AI} where eachAi is a fist of the two syntactic nodes being attached,the level of syntactic preference, and one of (Yes, No,Don't-Care) as the semantic feedback,If the most preferred syntactic alternative hasan Yes or Don't-Care, select itelse if no other syntactic alternative has a Yes,then select he most preferred syntacticalternative that has a Don't-Careelse delay the decision and pursue multipleinterpretations in parallel until furtherinformation changes the balance.DISCUSSIONThe model of interactive syntactic and semanticprocessing proposed accounts for a wide range psy-cholinguistic phenomena related to the handlingof lexical and structural ambiguities by humanparsers.
Its theory of communication and the arbi-tration mechanism can explain data that modulartheories of syntax and semantics can explain as wellas data that interactive theories can (Eiselt et al1993).
For instance, it can explain why sentence(1) below is a garden-path but sentence (2) is not.
(1) The officers taught at the academy were verydemanding.
(2) The courses taught at the academy were verydemanding.HSLC is different from both head-driven pars-ing and head-corner parsing.
It can be shown thatthe sequence of attachments proposed by HSLC ismore optimal for interactive semantics than thoseproduced by either of the above strategies.
HSLCis a hybrid of left-corner and head-driven parsingstrategies and exploits the advantages of both.In conclusion, I have sketched briefly a solutionto the three problems of synchronization, content,and conflict resolution in interactive syntax and se-mantics.
This solution has been shown to have dis-tinct advantages in explaining psychological dataon human language processing.
The model is alsoa promising strategy for improving the efficiency ofsyntactic analysis.
However, the latter claim is yetto be evaluated empirically.REFERENCESSteven P. Abney and Mark Johnson.
1991.Memory Requirements and Local Ambiguities ofParsing Strategies.
J. Psycholinguistic Research,20(3):233-250.Kurt P. Eiselt, Kavi Mahesh, and Jennifer K. Hol-brook.
1993.
Having Your Cake and Eating It Too:Autonomy and Interaction in a Model of SentenceProcessing.
Proc.
Eleventh National Conferenceon Artificial Intelligence (AAAI-93), pp 380-385.Kavi Mahesh and Kurt P. Eiselt.
To appear.
Uni-form Representations for Syntax-Semantics Arbi-tration.
To appear in Proc.
Sixteenth Annual Con-ference of the Cognitive Science Society, Atlanta,GA, Aug 1994.312
