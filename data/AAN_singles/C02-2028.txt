Chinese Syntactic Parsing Based on Extended GLR ParsingAlgorithm with PCFG*Yan Zhang, Bo Xu and Chengqing ZongNational Laboratory of Pattern Recognition, Institute of AutomationChinese Academy of sciences, Beijing 100080, P. R. ChinaE-mail: {yzhang, xubo, cqzong}@nlpr.ia.ac.cnAbstractThis paper presents an extended GLRparsing algorithm with grammar PCFG* thatis based on Tomita?s GLR parsing algorithmand extends it further.
We also define a newgrammar?PCFG* that is based on PCFGand assigns not only probability but alsofrequency associated with each rule.
So oursyntactic parsing system is implementedbased on rule-based approach and statisticsapproach.
Furthermore our experiments areexecuted in two fields: Chinese base nounphrase identification and full syntacticparsing.
And the results of these two fieldsare compared from three ways.
Theexperiments prove that the extended GLRparsing algorithm with PCFG* is anefficient parsing method and astraightforward way to combine statisticalproperty with rules.
The experiment resultsof these two fields are presented in thispaper.1.
IntroductionRecently the syntactic parsing system is one ofsignificant components in natural languageprocessing.
Many parsing methods have beendeveloped as the development of corpuslinguistics and applications of linguistics.Tomita?
GLR parsing (Tomita M., 1986, 1987)is the most general shift-reduce method ofbottom-up parsing and widely used in syntacticparsing.
Several methods are based on it.
Lavie(Lavie A., 1996) used the GLR* parsingalgorithm for spoken language system.
It uses afinite-state probabilistic model to compute theaction probabilities.
Inui (Inui K. et al, 1997,1998) presented a formalization of probabilisticGLR (PGLR) parsing model which assigns aprobability to each LR parsing action.
Toshallow parsing, many researchers have madeexperiments with identification of noun phrases.Abney (Abney S., 1991) used two levelgrammar rules to implement the noun phraseparsing through pure LR parsing algorithm.Some new methods based on GLR algorithmaim to capture action probabilities by statisticsdistribution and context relations.
This papercombines rule approach and statistics approachsimultaneously.
Furthermore, based on GLR andPCFG, we present an extended GLR parsing anda new grammar PCFG* that provides the actionprobabilities to prune the meaningless branchesin the parsing table.
Our experiments are alsomade in two parts: Chinese base noun phraseparsing and Chinese full parsing.
The former is asimplified formalization of full parsing and isrelatively simpler than the latter.This paper includes four sections.
Section 2presents a brief description of rule structuresystem-PCFG*.
Section 3 gives our extendedGLR parsing algorithm and the parsingprocessing.
Section 4 shows the experimentresults of our parser including Chinese basenoun phrases (baseNP) identification andChinese full syntactic parser.
The conclusionsare drawn in section 5.2.
A New Grammar (PCFG*) and theRule StructureGrammar system is one of the important pars ofa parsing system.
We explain it in detail in thefollowing section.2.1 Structure of RulesThe definition of symbols in our system inheritsthe classifications of Penn Chinese tree-bank(Xia F., 2000).
There are totally 33part-of-speech tags, 23 syntactic tags and 26functional tags in the Chinese tree-bank tag set.The POS tags belong to terminal symbols, whileothers belong to non-terminal symbols.In the final rule base there are about 2000 rulesand 400 rules learned from corpus for fullparsing and base noun phrases identificationrespectively.
The rules have the followingformat showed in table 1.num rule probability frequency1 VCD?VV+VV0.754491 1262 VCP?VV+VC0.545455 63 VCP?VV+VV0.454545 5Table 1: the format of grammar rulesIn order to denote each rule explicitly, the mark?+?
is used as the junction mark.
In aboveexamples, symbols VP, VCD and VCP are verbphrase and verb compounds.
Symbols VV andVC stand for common verbs and copula ??
?respectively.2.2  A New Grammar (PCFG*)Context-free grammars (CFGs) are widely usedto describe the grammar structures in naturallanguage processing.
And probabilisticcontext-free grammars (PCFGs) directly add theprobabilities to the rules.
But it is sometimes notsufficient to only associate probability with eachrule.
So we define a new grammarsystem-PCFG*: each rule is assigned probabilitydistribution and frequency distributionsimultaneously.
The probability number is therelative value since it is the percentage value inthe rule group that have the same left sides.While the frequency number is the absolutevalue because it is the total numbers occurred inwhole corpus.
The probability property is thekey value to full parsing.
The probabilityattribute is superior to frequency attribute.A sample is presented to show how to useprobability and frequency of a rule.Suppose there are three rules showed in table 2and the relations is displayed in figure 1.Rule F(r) P(r)X?A+C f1 p1=f1/(f1+f2)X?A+B+C f2 >f1 p2=f2/(f1+f2)Y?A+C f3 <f1 p3 =1>p1Table 2: the examples of ruleA BX YCFigure 1: structure of rulesSuppose the input symbols contain A, B and C.When rule 1 and rule 3 simultaneously satisfythe reduce condition, rule 3 is executed and theleft side item ?Y?
is pushed to the stack becausep3 is bigger than p1.
To complete parsing,probability always has the priority to frequency.But to baseNP parsing, frequency is superior toprobability attribution.
Since f1>f3, rule1 isexecuted first.
If f1 is equal to f3, then go on tocompare probability.3.
Parsing AlgorithmThe parsing algorithm is very significant as wellas the grammar rules to the parsing system.
Weproduce an extended GLR parsing algorithmbased on the Tomita?s GLR parsing algorithm inour system.3.1 the Extended GLR Parsing AlgorithmThe GLR method augments the LR parser andovercomes the drawback of the LR parser.
Infact, from the point of parsing algorithm, thereare no clear differences between LR and GLRalgorithm.
In parsing processing, there are alsofour actions in GLR algorithm that are similar tothe LR parsing.
But GLR parsing algorithmadmits multiple entries in the parsing table.
Ourextended GLR algorithm also permits thatseveral shift and reduce actions exist in onebranch in the parsing table simultaneously.
Sothere are mainly two types of conflicts:shift-reduce conflict and reduce-reduce conflict.These conflicts are the most difficult problemsof GLR algorithm.
In the parsing process, whenthe conflicts between shift and reduce occur, theprinciple of our parsing method is that thereduce action is superior to the shift action.If only grammar rules are used to describe thecontext relations, they may produce manyconflicts when several rules satisfy theconditions.
So we use the grammarsystem--PCFG* to add statistical information.The probabilities distributions are associatedwith the rules to each parsing action and decidewhich step to continue.Therefore the extended GLR algorithm handlesthe conflicts with two steps: (1).
The reduceaction is always executed first, then the shiftaction.
(2).
When more than one reduce actionssatisfy the conditions, probability and frequencydecide the order of these reduce actions.3.2 Parsing Actions and Parsing Process3.2.1 Parsing Table and ActionsThe parsing table consists of two sub-tables:ACTION table and GOTO table that areconstructed by the grammar rules.
The GOTOtable is not different from GLR table.
JustACTION table is modified a little.
Figure 2shows the structure of the parsing table.ACTION GOTO StateX1, X2, ?, Xi ,       # Y1, ?,YjS0 Sh1S1  Re1?
Re-ShSn  AcceptFigure 2: the parsing tableThe ACTION table contains four actionsub-tables: Sh1, Re1, Re-Sh and Accept.
Theystand for shift part, reduce part, reduce-shift partand accept part respectively.
Because the erroraction is similar to accept action, it is notexplained here.
The Re-Sh part is the key part inthe table.
It contains multiple entries while theothers have no conflicts.
In the Re-Sh part, therules are firstly arranged according to theprobabilities and then compared based on thefrequencies.
The maximum probability is put onthe top.
This sequence continues until the lastrule with minimum probability.
According to theorder of Re-Sh sub-table, the parsing program istransformed to the corresponding state of thestack.
This order suits for the full parsing.
But tothe base noun phrases identification, frequencyis firstly compared.Since the ambiguities and conflicts existed in theRe-Sh sub-table, we give a limit that no morethan 20 entries in the Re-Sh part.
From theexperiment results, it is better to select 20 rulesas the branch limit in the parsing processbecause it not only permits the multiple entries,but also fits for the performance efficiency ofour program.Since the parser uses PCFG*, it has strongcontrol to handle action conflicts and ruleambiguities.
The parsing process need to prunethe meaningless parsing branches.
Excessivepruning may cause the loss of some grammarrules and add the error opportunities.
Reasonablepruning can improve efficiency.3.2.2 the Parsing ProcessWe give the following the symbols definitionand interpretation to explain the parsing process.Let ?#?
denotes the start and the end of the inputChinese sentence.
The system contains a list ofstacks simultaneously.
The parsing tablecontains two elements: state nodes and symbolnodes.
The parsing stack includes state stack(StateStack, name in the program), symbol state(SymbolStack) and input stack (InputStack)whose pointers are ps, pb and pi respectively.Following algorithm is established for theshift-reduce parsing process.Input:An input Chinese words sequence W in whicheach word has its part-of-speech and a parsingtable produced by grammar rules;Output:If the input word sequence W satisfies thegrammar rules and is accepted according to theparsing table, then output the parsing result of W,otherwise give error result;Main Loop:It mainly consists of four parts: shift, reduce,accept and error in the parsing process.RepeatBegins := *ps++;  //s is current stateb := *pb++; //to the next symbolc := *pi++; //to the next input wordif Action[reduce ruleVtVnVnAA ??????
,, ] = reduce(),then begin1) Pop |?| symbols from top of the symbolstack, and push the left side symbol A tothe symbol state;2) Pop |?| symbols from top of the statestack, and push s*3) ps -= |?|; *ps := s*;end reduce(); //reduce partelse if Action[] = shift(input s*),then beginpi++; *pi := s*; pb++; *pb := s*;end shift(); //shift partelse if Action[] = accept()then Success and Output; //the parsingsucceedselseerror(); // parsing is error hereEndUntil: The input symbol is the end of thesentence.
Or accept function occurs or errorfunction occurs.
(1) Reduce ActionWhen the reduce action is performed, the rulecandidates are selected in the list from the firstrule to the last one that are arranged according tothe probabilities and frequencies.
If one of theserules satisfies the condition, then the flag of thisrule is changed from FALSE to TRUE and stophere, and continue to read input word.
Otherwisetrace back.
(2) Shift ActionShift action is executed under two conditions.One is based on the action table.
The other isthat when error action occurs, the base nounphrase identification continues to perform shiftaction while the full parsing enters trace part.
(3) Error ActionWhen error action occurs, trace back to theprevious branch and perform another rulecandidate listed in the entry.
If there is no pathcan be searched in the current branch point or allroutes are not passed through, the parsing failsand output the final error symbol.
This situationis only used to the full parsing.3.2.3 the Comparison with GLRIn order to explain explicitly our extended GLRparsing algorithm, we compare it with GLRalgorithm.
Table 3 gives the comparison results.methodsaspectsGLR algorithm OuralgorithmGrammarSystemCFG PCFG*StatisticalInformationno Probability,FrequencyData Structure Graph-StructuredStackStack ListParsingProcessNot simplified PruningOtherAttributesAugmentation toeach rulenoTable 3: Comparison with GLR4.
Experiment and ResultsOur experiments include two parts: Chinese basenoun phrase parsing and Chinese full syntacticparsing.The obvious difference of Chinese baseNPparsing and full parsing is that the former mustgive the parsing results while the lattersometimes need to trace back and output theerror symbols.
Because baseNP identificationbelongs to the shallow parsing, it only need togives the recognized noun phrase structures.
Ifthere are no phrases found, then output theoriginal sentence.
Obviously Chinese baseNPparsing is much simpler and more efficient thanthe full parsing from the point of the method andthe runtime.Our experiments are performed based onChinese tree-bank corpus.
There are totally10,000 Chinese sentences whose grammarstructures are described by brackets.
Table 4shows the characteristic of the corpus in theparsing process.CorpusStyleOf ParsingNumber of theSentences.Averagelength ofeachsentenceTraining: 97% 22 words BaseNPIdentification Testing: 3% 15 wordsTraining: 98% 22 words Full ParsingTest: 2% 15 wordsTable 4: characteristic of corpusTo two styles of parsing presented above, wegive two types of results respectively.(1).
Chinese BaseNP identificationIn our system, base noun phrases are defined toinclude not only pure noun phrase (NP) but alsoquantifier phrase (QP), such as QP ( ??
?/CD?/M ).To each Chinese sentence, baseNP identificationalways gives the final parsing results in whichthe base noun phrases are distinguished bybrackets.
Some samples are listed.1.
?
?/VV ?/AS  NP (?
?/NR ?
?/NN)?/DEG  NP(?
?/JJ ??/NN)2.
(?/DT ?/M ?
?/NN ) ?
?/VV ?/AS(??
?/NN ??
?/NN) ?/DEG (?/JJ?/NN)There are two and three base noun phrases insentence 1 and sentence 2 respectively.(2).
Chinese full parsingFollowing sentences are the results of Chinesefull parsing.1.
VP (VP (?
?/VV ?/AS)  NP ( NP ( ?
?/NR ?
?/NN )  ?/DEG  NP ( ?
?/JJ ?
?/NN ) ) )2.IP ( NP (?/DT ?/M ?
?/NN )  VP( ?
?/VV ?/AS)   NP ( NP (??
?/NN ??
?/NN) ?/DEG  NP (?/JJ ?/NN))))In order to display the parsing result clearly,sentence 2 is showed in the tree bank format.IP (NP ( DT   ?M   ?NN  ??
)VP (VV ?
?AS  ?
?NP ( NP ( NN ??
?NN ???
)DEG ?NP ( JJ ?NN ?
)))Type Precision(%)Recall(%)NumofRulesBaseNP 87.42 81.4 400Fullparsing70.56 67.77 2000Table 5 is the results of these types ofparsing.The experimental results show that our parsingalgorithm, extended GLR parsing algorithm, isefficient to both Chinese baseNP parsing andfull parsing.5.
ConclusionsIn our system, we present the extended GLRparsing algorithm that is based on the Tomita?sGLR algorithm.
A new grammar system PCFG*based on PCFG is proposed to describe thegrammatical rules that are added probability andfrequency attributes.
So our parsing systemcombines Chinese grammar phenomena withstatistics distribution.
This is feasible andefficient to implement Chinese shallow parsingand full parsing.
In the future task, we furtherimprove the efficiency and robust of our parsingalgorithm and expand Chinese grammatical ruleswith both statistical attributions and languageinformation.
It is important to utilize the resultsof base noun phrases identification and toimprove the precision of Chinese full parsing.AcknowledgementsThe research work described in this paper issupported by the National Nature ScienceFoundation of China under grant number9835003 and the National Science Foundation ofChina under grand number 60175012 and theNational Key Basic Research Program of Chinaunder grand number G1998030504.ReferencesMasaru Tomita, Efficient Parsing for NaturalLanguage ?
A Fast Algorithm for PracticalSystems, Kluwer Academic Publishers, 1986Tomita M., an Efficient Augmented-Context-FreeAlgorithm, Computational Linguistics, Volume 13,Numbers 1-2, 1987Inui K., Sornlertlamvanich V., Tanaka H. andTokunaga T., Probabilistic GLR Parsing: a NewFormalization and Its Impact on parsingPerformance, Journal of Natural LanguageProcessing, Vol.5, No.3, pp.33-52, 1998Sornlertlamvanich V., Inui K., Tanaka H. andTokunaga, T., A New Probabilistic LR Parsing,Proceedings of Annual Meeting of the JapanAssociation for Natural Language Processing,1997Lavie A., GLR*: A Robust Grammar-Focus Parserfor Spontaneously Spoken Language, Ph.D. thesis,Carnegie Mellon University, USA, 1996Abney S., Parsing by Chunks, Kluwer AcademicPublishers, 1991Xia F., the Segmentation Guidelines for the PennChinese Treebank (3.0), 2000
