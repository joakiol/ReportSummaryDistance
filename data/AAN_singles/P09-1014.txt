Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 118?126,Suntec, Singapore, 2-7 August 2009. c?2009 ACL and AFNLPA Ranking Approach to Stress Predictionfor Letter-to-Phoneme ConversionQing Dou, Shane Bergsma, Sittichai Jiampojamarn and Grzegorz KondrakDepartment of Computing ScienceUniversity of AlbertaEdmonton, AB, T6G 2E8, Canada{qdou,bergsma,sj,kondrak}@cs.ualberta.caAbstractCorrect stress placement is important intext-to-speech systems, in terms of boththe overall accuracy and the naturalness ofpronunciation.
In this paper, we formu-late stress assignment as a sequence pre-diction problem.
We represent words assequences of substrings, and use the sub-strings as features in a Support Vector Ma-chine (SVM) ranker, which is trained torank possible stress patterns.
The rank-ing approach facilitates inclusion of arbi-trary features over both the input sequenceand output stress pattern.
Our system ad-vances the current state-of-the-art, predict-ing primary stress in English, German, andDutch with up to 98% word accuracy onphonemes, and 96% on letters.
The sys-tem is also highly accurate in predictingsecondary stress.
Finally, when applied intandem with an L2P system, it substan-tially reduces the word error rate whenpredicting both phonemes and stress.1 IntroductionIn many languages, certain syllables in words arephonetically more prominent in terms of duration,pitch, and loudness.
This phenomenon is referredto as lexical stress.
In some languages, the loca-tion of stress is entirely predictable.
For example,lexical stress regularly falls on the initial syllablein Hungarian, and on the penultimate syllable inPolish.
In other languages, such as English andRussian, any syllable in the word can be stressed.Correct stress placement is important in text-to-speech systems because it affects the accuracyof human word recognition (Tagliapietra and Ta-bossi, 2005; Arciuli and Cupples, 2006).
How-ever, the issue has often been ignored in previ-ous letter-to-phoneme (L2P) systems.
The sys-tems that do generate stress markers often do notreport separate figures on stress prediction accu-racy, or they only provide results on a single lan-guage.
Some only predict primary stress mark-ers (Black et al, 1998; Webster, 2004; Demberget al, 2007), while those that predict both primaryand secondary stress generally achieve lower ac-curacy (Bagshaw, 1998; Coleman, 2000; Pearsonet al, 2000).In this paper, we formulate stress assignment asa sequence prediction problem.
We divide eachword into a sequence of substrings, and use thesesubstrings as features for a Support Vector Ma-chine (SVM) ranker.
For a given sequence length,there is typically only a small number of stresspatterns in use.
The task of the SVM is to rankthe true stress pattern above the small number ofacceptable alternatives.
This is the first systemto predict stress within a powerful discriminativelearning framework.
By using a ranking approach,we enable the use of arbitrary features over the en-tire (input) sequence and (output) stress pattern.We show that the addition of a feature for the en-tire output sequence improves prediction accuracy.Our experiments on English, German, andDutch demonstrate that our ranking approach sub-stantially outperforms previous systems.
TheSVM ranker achieves exceptional 96.2% word ac-curacy on the challenging task of predicting thefull stress pattern in English.
Moreover, whencombining our stress predictions with a state-of-the-art L2P system (Jiampojamarn et al, 2008),we set a new standard for the combined predictionof phonemes and stress.The paper is organized as follows.
Section 2provides background on lexical stress and a taskdefinition.
Section 3 presents our automatic stressprediction algorithm.
In Section 4, we confirm thepower of the discriminative approach with experi-ments on three languages.
Section 5 describes howstress is integrated into L2P conversion.1182 Background and Task DefinitionThere is a long history of research into the prin-ciples governing lexical stress placement.
Zipf(1929) showed that stressed syllables are of-ten those with low frequency in speech, whileunstressed syllables are usually very common.Chomsky and Halle (1968) proposed a set ofcontext-sensitive rules for producing Englishstress from underlying word forms.
Due to itsimportance in text-to-speech, there is also a longhistory of computational stress prediction sys-tems (Fudge, 1984; Church, 1985; Williams,1987).
While these early approaches dependon human definitions of vowel tensity, syllableweight, word etymology, etc., our work followsa recent trend of purely data-driven approaches tostress prediction (Black et al, 1998; Pearson et al,2000; Webster, 2004; Demberg et al, 2007).In many languages, only two levels of stressare distinguished: stressed and unstressed.
How-ever, some languages exhibit more than two levelsof stress.
For example, in the English word eco-nomic, the first and the third syllable are stressed,with the former receiving weaker emphasis thanthe latter.
In this case, the initial syllable is saidto carry a secondary stress.
Although each wordhas only one primary stress, it may have any num-ber of secondary stresses.
Predicting the full stresspattern is therefore inherently more difficult thanpredicting the location of primary stress only.Our objective is to automatically assign primaryand, where possible, secondary stress to out-of-vocabulary words.
Stress is an attribute of sylla-bles, but syllabification is a non-trivial task in it-self (Bartlett et al, 2008).
Rather than assumingcorrect syllabification of the input word, we in-stead follow Webster (2004) in placing the stresson the vowel which constitutes the nucleus of thestressed syllable.
If the syllable boundaries areknown, the mapping from the vowel to the cor-responding syllable is straightforward.We investigate the assignment of stress to tworelated but different entities: the spoken word(represented by its phonetic transcription), andthe written word (represented by its orthographicform).
Although stress is a prosodic feature, as-signing stress to written words (?stressed orthog-raphy?)
has been utilized as a preprocessing stagefor the L2P task (Webster, 2004).
This prepro-cessing is motivated by two factors.
First, stressgreatly influences the pronunciation of vowels inEnglish (c.f., allow vs. alloy).
Second, sincephoneme predictors typically utilize only localcontext around a letter, they do not incorporate theglobal, long-range information that is especiallypredictive of stress, such as penultimate syllableemphasis associated with the suffix -ation.
By tak-ing stressed orthography as input, the L2P systemis able to implicitly leverage morphological infor-mation beyond the local context.Indicating stress on letters can also be help-ful to humans, especially second-language learn-ers.
In some languages, such as Spanish, ortho-graphic markers are obligatory in words with ir-regular stress.
The location of stress is often ex-plicitly marked in textbooks for students of Rus-sian.
In both languages, the standard method ofindicating stress is to place an acute accent abovethe vowel bearing primary stress, e.g., adio?s.
Thesecondary stress in English can be indicated witha grave accent (Coleman, 2000), e.g., pre`ce?de.In summary, our task is to assign primary andsecondary stress markers to stress-bearing vowelsin an input word.
The input word may be eitherphonemes or letters.
If a stressed vowel is repre-sented by more than one letter, we adopt the con-vention of marking the first vowel of the vowel se-quence, e.g., me?eting.
In this way, we are able tofocus on the task of stress prediction, without hav-ing to determine at the same time the exact sylla-ble boundaries, or whether a vowel letter sequencerepresents one or more spoken vowels (e.g., beat-ing vs. be-at-i-fy).3 Automatic Stress PredictionOur stress assignment system maps a word, w, to astressed-form of the word, w?.
We formulate stressassignment as a sequence prediction problem.
Theassignment is made in three stages:(1) First, we map words to substrings (s), the ba-sic units in our sequence (Section 3.1).
(2) Then, a particular stress pattern (t) is chosenfor each substring sequence.
We use a sup-port vector machine (SVM) to rank the possi-ble patterns for each sequence (Section 3.2).
(3) Finally, the stress pattern is used to producethe stressed-form of the word (Section 3.3).Table 1 gives examples of words at each stage ofthe algorithm.
We discuss each step in more detail.119Word Substrings Pattern Word?w ?
s ?
t ?
w?worker ?
wor-ker ?
1-0 ?
wo?rkeroverdo ?
ov-ver-do ?
2-0-1 ?
o`verdo?react ?
re-ac ?
0-1 ?
rea?ct?bstr?kt ?
?b-r?k ?
0-1 ?
?bstr?
?ktprisid ?
ri-sid ?
2-1 ?
pr?`s?
?dTable 1: The steps in our stress prediction sys-tem (with orthographic and phonetic predictionexamples): (1) word splitting, (2) support vectorranking of stress patterns, and (3) pattern-to-vowelmapping.3.1 Word SplittingThe first step in our approach is to represent theword as a sequence of N individual units: w ?s = {s1-s2-...-sN}.
These units are used to definethe features and outputs used by the SVM ranker.Although we are ultimately interested in assigningstress to individual vowels in the phoneme and let-ter sequence, it is beneficial to represent the task inunits larger than individual letters.Our substrings are similar to syllables; theyhave a vowel as their nucleus and include con-sonant context.
By approximating syllables, oursubstring patterns will allow us to learn recur-rent stress regularities, as well as dependenciesbetween neighboring substrings.
Since determin-ing syllable breaks is a non-trivial task, we in-stead adopt the following simple splitting tech-nique.
Each vowel in the word forms the nucleusof a substring.
Any single preceding or follow-ing consonant is added to the substring unit.
Thus,each substring consists of at most three symbols(Table 1).Using shorter substrings reduces the sparsity ofour training data; words like cryer, dryer and fryerare all mapped to the same form: ry-er.
TheSVM can thus generalize from observed words tosimilarly-spelled, unseen examples.Since the number of vowels equals the num-ber of syllables in the phonetic form of the word,applying this approach to phonemes will alwaysgenerate the correct number of syllables.
For let-ters, splitting may result in a different number ofunits than the true syllabification, e.g., pronounce?
ron-no-un-ce.
This does not prevent the systemfrom producing the correct stress assignment afterthe pattern-to-vowel mapping stage (Section 3.3)is complete.3.2 Stress Prediction with SVM RankingAfter creating a sequence of substring units, s ={s1-s2-...-sN}, the next step is to choose an out-put sequence, t = {t1-t2-...-tN}, that encodeswhether each unit is stressed or unstressed.
Weuse the number ?1?
to indicate that a substring re-ceives primary stress, ?2?
for secondary stress, and?0?
to indicate no stress.
We call this output se-quence the stress pattern for a word.
Table 1 givesexamples of words, substrings, and stress patterns.We use supervised learning to train a system topredict the stress pattern.
We generate training(s, t) pairs in the obvious way from our stress-marked training words, w?.
That is, we first ex-tract the letter/phoneme portion, w, and use itto create the substrings, s. We then create thestress pattern, t, using w?
?s stress markers.
Giventhe training pairs, any sequence predictor can beused, for example a Conditional Random Field(CRF) (Lafferty et al, 2001) or a structured per-ceptron (Collins, 2002).
However, we can takeadvantage of a unique property of our problem touse a more expressive framework than is typicallyused in sequence prediction.The key observation is that the output space ofpossible stress patterns is actually fairly limited.Clopper (2002) shows that people have strongpreferences for particular sequences of stress, andthis is confirmed by our training data (Section 4.1).In English, for example, we find that for each setof spoken words with the same number of sylla-bles, there are no more than fifteen different stresspatterns.
In total, among 55K English training ex-amples, there are only 70 different stress patterns.In both German and Dutch there are only about50 patterns in 250K examples.1 Therefore, for aparticular input sequence, we can safely limit ourconsideration to only the small set of output pat-terns of the same length.Thus, unlike typical sequence predictors, we donot have to search for the highest-scoring outputaccording to our model.
We can enumerate thefull set of outputs and simply choose the highest-scoring one.
This enables a more expressive rep-resentation.
We can define arbitrary features overthe entire output sequence.
In a typical CRF orstructured perceptron approach, only output fea-tures that can be computed incrementally duringsearch are used (e.g.
Markov transition featuresthat permit Viterbi search).
Since search is not1See (Dou, 2009) for more details.120needed here, we can exploit longer-range features.Choosing the highest-scoring output from afixed set is a ranking problem, and we provide thefull ranking formulation below.
Unlike previousranking approaches (e.g.
Collins and Koo (2005)),we do not rely on a generative model to producea list of candidates.
Candidates are chosen in ad-vance from observed training patterns.3.2.1 Ranking FormulationFor a substring sequence, s, of length N , our taskis to select the correct output pattern from the setof all length-N patterns observed in our trainingdata, a set we denote as TN .
We score each possi-ble input-output combination using a linear model.Each substring sequence and possible output pat-tern, (s, t), is represented with a set of features,?
(s, t).
The score for a particular (s, t) combina-tion is a weighted sum of these features, ???
(s, t).The specific features we use are described in Sec-tion 3.2.2.Let tj be the stress pattern for the jth trainingsequence sj , both of length N .
At training time,the weights, ?, are chosen such that for each sj ,the correct output pattern receives a higher scorethan other patterns of the same length: ?u ?TN ,u 6= tj,?
??
(sj, tj) > ?
??
(sj ,u) (1)The set of constraints generated by Equation 1are called rank constraints.
They are created sep-arately for every (sj , tj) training pair.
Essen-tially, each training pair is matched with a setof automatically-created negative examples.
Eachnegative has an incorrect, but plausible, stress pat-tern, u.We adopt a Support Vector Machine (SVM) so-lution to these ranking constraints as described byJoachims (2002).
The learner finds the weightsthat ensure a maximum (soft) margin separationbetween the correct scores and the competitors.We use an SVM because it has been successful insimilar settings (learning with thousands of sparsefeatures) for both ranking and classification tasks,and because an efficient implementation is avail-able (Joachims, 1999).At test time we simply score each possible out-put pattern using the learned weights.
That is,for an input sequence s of length N , we compute?
??
(s, t) for all t ?
TN , and we take the highestscoring t as our output.
Note that because we onlySubstring si, tisi, i, tiContext si?1, tisi?1si, tisi+1, tisisi+1, tisi?1sisi+1, tiStress Pattern t1t2 .
.
.
tNTable 2: Feature Templateconsider previously-observed output patterns, it isimpossible for our system to produce a nonsensi-cal result, such as having two primary stresses inone word.
Standard search-based sequence pre-dictors need to be specially augmented with hardconstraints in order to prevent such output (Rothand Yih, 2005).3.2.2 FeaturesThe power of our ranker to identify the correctstress pattern depends on how expressive our fea-tures are.
Table 2 shows the feature templates usedto create the features ?
(s, t) for our ranker.
Weuse binary features to indicate whether each com-bination occurs in the current (s,t) pair.For example, if a substring tion is unstressed ina (s, t) pair, the Substring feature {si, ti = tion,0}will be true.2 In English, often the penultimatesyllable is stressed if the final syllable is tion.We can capture such a regularity with the Con-text feature si+1, ti.
If the following syllable istion and the current syllable is stressed, the fea-ture {si+1, ti = tion,1} will be true.
This featurewill likely receive a positive weight, so that out-put sequences with a stress before tion receive ahigher rank.Finally, the full Stress Pattern serves as an im-portant feature.
Note that such a feature wouldnot be possible in standard sequence predictors,where such information must be decomposed intoMarkov transition features like ti?1ti.
In a rankingframework, we can score output sequences usingtheir full output pattern.
Thus we can easily learnthe rules in languages with regular stress rules.
Forlanguages that do not have a fixed stress rule, pref-erences for particular patterns can be learned usingthis feature.2tion is a substring composed of three phonemes but weuse its orthographic representation here for clarity.1213.3 Pattern-to-Vowel MappingThe final stage of our system uses the predictedpattern t to create the stress-marked form of theword, w?.
Note the number of substrings createdby our splitting method always equals the numberof vowels in the word.
We can thus simply mapthe indicator numbers in t to markers on their cor-responding vowels to produce the stressed word.For our example, pronounce ?
ron-no-un-ce,if the SVM chooses the stress pattern, 0-1-0-0, we produce the correct stress-marked word,prono?unce.
If we instead stress the third vowel, 0-0-1-0, we produce an incorrect output, pronou?nce.4 Stress Prediction ExperimentsIn this section, we evaluate our ranking approachto stress prediction by assigning stress to spokenand written words in three languages: English,German, and Dutch.
We first describe the data andthe various systems we evaluate, and then providethe results.4.1 DataThe data is extracted from CELEX (Baayen et al,1996).
Following previous work on stress predic-tion, we randomly partition the data into 85% fortraining, 5% for development, and 10% for test-ing.
To make results on German and Dutch com-parable with English, we reduce the training, de-velopment, and testing set by 80% for each.
Af-ter removing all duplicated items as well as abbre-viations, phrases, and diacritics, each training setcontains around 55K words.In CELEX, stress is labeled on syllables in thephonetic form of the words.
Since our objec-tive is to assign stress markers to vowels (as de-scribed in Section 2) we automatically map thestress markers from the stressed syllables in thephonetic forms onto phonemes and letters rep-resenting vowels.
For phonemes, the process isstraightforward: we move the stress marker fromthe beginning of a syllable to the phoneme whichconstitutes the nucleus of the syllable.
For let-ters, we map the stress from the vowel phonemeonto the orthographic forms using the ALINE al-gorithm (Dwyer and Kondrak, 2009).
The stressmarker is placed on the first letter within the sylla-ble that represents a vowel sound.33Our stand-off stress annotations for English, German,and Dutch CELEX orthographic data can be downloaded at:http://www.cs.ualberta.ca/?kondrak/celex.html.System Eng Ger DutP+S P P PSUBSTRING 96.2 98.0 97.1 93.1ORACLESYL 95.4 96.4 97.1 93.2TOPPATTERN 66.8 68.9 64.1 60.8Table 3: Stress prediction word accuracy (%) onphonemes for English, German, and Dutch.
P:predicting primary stress only.
P+S: primary andsecondary.CELEX also provides secondary stress annota-tion for English.
We therefore evaluate on bothprimary and secondary stress (P+S) in English andon primary stress assignment alone (P) for En-glish, German, and Dutch.4.2 Comparison ApproachesWe evaluate three different systems on the letterand phoneme sequences in the experimental data:1) SUBSTRING is the system presented in Sec-tion 3.
It uses the vowel-based splittingmethod, followed by SVM ranking.2) ORACLESYL splits the input word into sylla-bles according to the CELEX gold-standard,before applying SVM ranking.
The outputpattern is evaluated directly against the gold-standard, without pattern-to-vowel mapping.3) TOPPATTERN is our baseline system.
It usesthe vowel-based splitting method to produce asubstring sequence of length N .
Then it simplychooses the most common stress pattern amongall the stress patterns of length N .SUBSTRING and ORACLESYL use scores pro-duced by an SVM ranker trained on the trainingdata.
We employ the ranking mode of the popularlearning package SVMlight (Joachims, 1999).
Ineach case, we learn a linear kernel ranker on thetraining set stress patterns and tune the parameterthat trades-off training error and margin on the de-velopment set.We evaluate the systems using word accuracy:the percent of words for which the output form ofthe word, w?, matches the gold standard.4.3 ResultsTable 3 provides results on English, German, andDutch phonemes.
Overall, the performance of ourautomatic stress predictor, SUBSTRING, is excel-lent.
It achieves 98.0% accuracy for predicting122System Eng Ger DutP+S P P PSUBSTRING 93.5 95.1 95.9 91.0ORACLESYL 94.6 96.0 96.6 92.8TOPPATTERN 65.5 67.6 64.1 60.8Table 4: Stress prediction word accuracy (%) onletters for English, German, and Dutch.
P: pre-dicting primary stress only.
P+S: primary and sec-ondary.primary stress in English, 97.1% in German, and93.1% in Dutch.
It also predicts both primary andsecondary stress in English with high accuracy,96.2%.
Performance is much higher than our base-line accuracy, which is between 60% and 70%.ORACLESYL, with longer substrings and hencesparser data, does not generally improve perfor-mance.
This indicates that perfect syllabificationis unnecessary for phonetic stress assignment.Our system is a major advance over the pre-vious state-of-the-art in phonetic stress assign-ment.
For predicting stressed/unstressed syllablesin English, Black et al (1998) obtained a per-syllable accuracy of 94.6%.
We achieve 96.2%per-word accuracy for predicting both primary andsecondary stress.
Others report lower numberson English phonemes.
Bagshaw (1998) obtained65%-83.3% per-syllable accuracy using Church(1985)?s rule-based system.
For predicting bothprimary and secondary stress, Coleman (2000)and Pearson et al (2000) report 69.8% and 81.0%word accuracy, respectively.The performance on letters (Table 4) is alsoquite encouraging.
SUBSTRING predicts primarystress with accuracy above 95% for English andGerman, and equal to 91% in Dutch.
Performanceis 1-3% lower on letters than on phonemes.
Onthe other hand, the performance of ORACLESYLdrops much less on letters.
This indicates thatmost of SUBSTRING?s errors are caused by thesplitting method.
Letter vowels may or may notrepresent spoken vowels.
By creating a substringfor every vowel letter we may produce an incorrectnumber of syllables.
Our pattern feature is there-fore less effective.Nevertheless, SUBSTRING?s accuracy on lettersalso represents a clear improvement over previ-ous work.
Webster (2004) reports 80.3% wordaccuracy on letters in English and 81.2% in Ger-man.
The most comparable work is Demberg et al848688909294969810010000  100000WordAccuracy(%)Number of training examplesGermanDutchEnglishFigure 1: Stress prediction accuracy on letters.
(2007), which achieves 90.1% word accuracy onletters in German CELEX, assuming perfect lettersyllabification.
In order to reproduce their strictexperimental setup, we re-partition the full set ofGerman CELEX data to ensure that no overlap ofword stems exists between the training and testsets.
Using the new data sets, our system achievesa word accuracy of 92.3%, a 2.2% improvementover Demberg et al (2007)?s result.
Moreover, ifwe also assume perfect syllabification, the accu-racy is 94.3%, a 40% reduction in error rate.We performed a detailed analysis to understandthe strong performance of our system.
First of all,note that an error could happen if a test-set stresspattern was not observed in the training data; itscorrect stress pattern would not be considered asan output.
In fact, no more than two test errors inany test set were so caused.
This strongly justi-fies the reduced set of outputs used in our rankingformulation.We also tested all systems with the Stress Pat-tern feature removed.
Results were worse in allcases.
As expected, it is most valuable for pre-dicting primary and secondary stress.
On Englishphonemes, accuracy drops from 96.2% to 95.3%without it.
On letters, it drops from 93.5% to90.0%.
The gain from this feature also validatesour ranking framework, as such arbitrary featuresover the entire output sequence can not be used instandard search-based sequence prediction.Finally, we examined the relationship betweentraining data size and performance by plottinglearning curves for letter stress accuracy (Fig-ure 1).
Unlike the tables above, here we use the123full set of data in Dutch and German CELEX tocreate the largest-possible training sets (255K ex-amples).
None of the curves are levelling off; per-formance grows log-linearly across the full range.5 Lexical stress and L2P conversionIn this section, we evaluate various methods ofcombining stress prediction with phoneme gener-ation.
We first describe the specific system that weuse for letter-to-phoneme (L2P) conversion.
Wethen discuss the different ways stress predictioncan be integrated with L2P, and define the systemsused in our experiments.
Finally, we provide theresults.5.1 The L2P systemWe combine stress prediction with a state-of-the-art L2P system (Jiampojamarn et al, 2008).
Likeour stress ranker, their system is a data-driven se-quence predictor that is trained with supervisedlearning.
The score for each output sequence isa weighted combination of features.
The featureweights are trained using the Margin Infused Re-laxed Algorithm (MIRA) (Crammer and Singer,2003), a powerful online discriminative trainingframework.
Like other recent L2P systems (Bisaniand Ney, 2002; Marchand and Damper, 2007; Ji-ampojamarn et al, 2007), this approach does notgenerate stress, nor does it consider stress when itgenerates phonemes.For L2P experiments, we use the same training,testing, and development data as was used in Sec-tion 4.
For all experiments, we use the develop-ment set to determine at which iteration to stoptraining in the online algorithm.5.2 Combining stress and phonemegenerationVarious methods have been used for combiningstress and phoneme generation.
Phonemes can begenerated without regard to stress, with stress as-signed as a post-process (Bagshaw, 1998; Cole-man, 2000).
Both van den Bosch (1997) andBlack et al (1998) argue that stress should be pre-dicted at the same time as phonemes.
They ex-pand the output set to distinguish between stressedand unstressed phonemes.
Similarly, Demberg etal.
(2007) produce phonemes, stress, and syllable-boundaries within a single joint n-gram model.Pearson et al (2000) generate phonemes and stresstogether by jointly optimizing a decision-treephoneme-generator and a stress predictor based onstress pattern counts.
In contrast, Webster (2004)first assigns stress to letters, creating an expandedinput set, and then predicts both phonemes andstress jointly.
The system marks stress on let-ter vowels by determining the correspondence be-tween affixes and stress in written words.Following the above approaches, we can expandthe input or output symbols of our L2P system toinclude stress.
However, since both decision treesystems and our L2P predictor utilize only localcontext, they may produce invalid global output.One option, used by Demberg et al (2007), is toadd a constraint to the output generation, requiringeach output sequence to have exactly one primarystress.We enhance this constraint, based on the obser-vation that the number of valid output sequencesis fairly limited (Section 3.2).
The modified sys-tem produces the highest-scoring sequence suchthat the output?s corresponding stress pattern hasbeen observed in our training data.
We call thisthe stress pattern constraint.
This is a tighterconstraint than having only one primary stress.4Another advantage is that it provides some guid-ance for the assignment of secondary stress.Inspired by the aforementioned strategies, weevaluate the following approaches:1) JOINT: The L2P system?s input sequence is let-ters, the output sequence is phonemes+stress.2) JOINT+CONSTR: Same as JOINT, except it se-lects the highest scoring output that obeys thestress pattern constraint.3) POSTPROCESS: The L2P system?s input is let-ters, the output is phonemes.
It then applies theSVM stress ranker (Section 3) to the phonemesto produce the full phoneme+stress output.4) LETTERSTRESS: The L2P system?s input isletters+stress, the output is phonemes+stress.It creates the stress-marked letters by applyingthe SVM ranker to the input letters as a pre-process.5) ORACLESTRESS: The same input/output asLETTERSTRESS , except it uses the gold-standard stress on letters (Section 4.1).4In practice, the L2P system generates a top-N list, andwe take the highest-scoring output on the list that satisfiesthe constraint.
If none satisfy the constraint, we take the topoutput that has only one primary stress.124System Eng Ger DutP+S P P PJOINT 78.9 80.0 86.0 81.1JOINT+CONSTR 84.6 86.0 90.8 88.7POSTPROCESS 86.2 87.6 90.9 88.8LETTERSTRESS 86.5 87.2 90.1 86.6ORACLESTRESS 91.4 91.4 92.6 94.5Festival 61.2 62.5 71.8 65.1Table 5: Combined phoneme and stress predic-tion word accuracy (%) for English, German, andDutch.
P: predicting primary stress only.
P+S:primary and secondary.Note that while the first approach uses onlylocal information to make predictions (featureswithin a context window around the current let-ter), systems 2 to 5 leverage global information insome manner: systems 3 and 4 use the predictionsof our stress ranker, while 2 uses a global stresspattern constraint.5We also generated stress and phonemes usingthe popular Festival Speech Synthesis System6(version 1.96, 2004) and report its accuracy.5.3 ResultsWord accuracy results for predicting bothphonemes and stress are provided in Table 5.First of all, note that the JOINT approach,which simply expands the output set, is 4%-8% worse than all other comparison systemsacross the three languages.
These results clearlyindicate the drawbacks of predicting stress us-ing only local information.
In English, bothLETTERSTRESS and POSTPROCESS performbest, while POSTPROCESS and the constrainedsystem are highest on German and Dutch.
Resultsusing the oracle letter stress show that givenperfect stress assignment on letters, phonemesand stress can be predicted very accurately, in allcases above 91%.We also found that the phoneme prediction ac-curacy alone (i.e., without stress) is quite simi-lar for all the systems.
The gains over JOINTon combined stress and phoneme accuracy arealmost entirely due to more accurate stress as-signment.
Utilizing the oracle stress on lettersmarkedly improves phoneme prediction in English5This constraint could also help the other systems.
How-ever, since they already use global information, it yields onlymarginal improvements.6http://www.cstr.ed.ac.uk/projects/festival/(from 88.8% to 91.4%).
This can be explained bythe fact that English vowels are often reduced toschwa when unstressed (Section 2).Predicting both phonemes and stress is a chal-lenging task, and each of our globally-informedsystems represents a major improvement over pre-vious work.
The accuracy of Festival is muchlower even than our JOINT approach, but the rel-ative performance on the different languages isquite similar.A few papers report accuracy on the combinedstress and phoneme prediction task.
The most di-rectly comparable work is van den Bosch (1997),which also predicts primary and secondary stressusing English CELEX data.
However, the re-ported word accuracy is only 62.1%.
Three otherpapers report word accuracy on phonemes andstress, using different data sets.
Pearson et al(2000) report 58.5% word accuracy for predictingphonemes and primary/secondary stress.
Black etal.
(1998) report 74.6% word accuracy in English,while Webster (2004) reports 68.2% on Englishand 82.9% in German (all primary stress only).Finally, Demberg et al (2007) report word accu-racy on predicting phonemes, stress, and syllab-ification on German CELEX data.
They achieve86.3% word accuracy.6 ConclusionWe have presented a discriminative ranking ap-proach to lexical stress prediction, which clearlyoutperforms previously developed systems.
Theapproach is largely language-independent, appli-cable to both orthographic and phonetic repre-sentations, and flexible enough to handle multi-ple stress levels.
When combined with an exist-ing L2P system, it achieves impressive accuracyin generating pronunciations together with theirstress patterns.
In the future, we will investigateadditional features to leverage syllabic and mor-phological information, when available.
Kernelfunctions could also be used to automatically cre-ate a richer feature space; preliminary experimentshave shown gains in performance using polyno-mial and RBF kernels with our stress ranker.AcknowledgementsThis research was supported by the NaturalSciences and Engineering Research Council ofCanada, the Alberta Ingenuity Fund, and the Al-berta Informatics Circle of Research Excellence.125ReferencesJoanne Arciuli and Linda Cupples.
2006.
The pro-cessing of lexical stress during visual word recog-nition: Typicality effects and orthographic corre-lates.
Quarterly Journal of Experimental Psychol-ogy, 59(5):920?948.Harald Baayen, Richard Piepenbrock, and Leon Gu-likers.
1996.
The CELEX2 lexical database.LDC96L14.Paul C. Bagshaw.
1998.
Phonemic transcription byanalogy in text-to-speech synthesis: Novel wordpronunciation and lexicon compression.
ComputerSpeech and Language, 12(2):119?142.Susan Bartlett, Grzegorz Kondrak, and Colin Cherry.2008.
Automatic syllabification with structuredSVMs for letter-to-phoneme conversion.
In ACL-08: HLT, pages 568?576.Maximilian Bisani and Hermann Ney.
2002.
Investi-gations on joint-multigram models for grapheme-to-phoneme conversion.
In ICSLP, pages 105?108.Alan W Black, Kevin Lenzo, and Vincent Pagel.
1998.Issues in building general letter to sound rules.
InThe 3rd ESCA Workshop on Speech Synthesis, pages77?80.Noam Chomsky and Morris Halle.
1968.
The soundpattern of English.
New York: Harper and Row.Kenneth Church.
1985.
Stress assignment in letterto sound rules for speech synthesis.
In ACL, pages246?253.Cynthia G. Clopper.
2002.
Frequency of stress pat-terns in English: A computational analysis.
IULCWorking Papers Online.John Coleman.
2000.
Improved prediction of stress inout-of-vocabulary words.
In IEEE Seminar on theState of the Art in Speech Synthesis.Michael Collins and Terry Koo.
2005.
Discriminativereranking for natural language parsing.
Computa-tional Linguistics, 31(1):25?70.Michael Collins.
2002.
Discriminative training meth-ods for Hidden Markov Models: Theory and ex-periments with perceptron algorithms.
In EMNLP,pages 1?8.Koby Crammer and Yoram Singer.
2003.
Ultracon-servative online algorithms for multiclass problems.Journal of Machine Learning Research, 3:951?991.Vera Demberg, Helmut Schmid, and Gregor Mo?hler.2007.
Phonological constraints and morphologi-cal preprocessing for grapheme-to-phoneme conver-sion.
In ACL, pages 96?103.Qing Dou.
2009.
An SVM ranking approach to stressassignment.
Master?s thesis, University of Alberta.Kenneth Dwyer and Grzegorz Kondrak.
2009.
Reduc-ing the annotation effort for letter-to-phoneme con-version.
In ACL-IJCNLP.Erik C. Fudge.
1984.
English word-stress.
London:Allen and Unwin.Sittichai Jiampojamarn, Grzegorz Kondrak, and TarekSherif.
2007.
Applying many-to-many alignmentsand Hidden Markov Models to letter-to-phonemeconversion.
In NAACL-HLT 2007, pages 372?379.Sittichai Jiampojamarn, Colin Cherry, and GrzegorzKondrak.
2008.
Joint processing and discriminativetraining for letter-to-phoneme conversion.
In ACL-08: HLT, pages 905?913.Thorsten Joachims.
1999.
Making large-scale SupportVector Machine learning practical.
In B. Scho?lkopfand C. Burges, editors, Advances in Kernel Meth-ods: Support Vector Machines, pages 169?184.MIT-Press.Thorsten Joachims.
2002.
Optimizing search enginesusing clickthrough data.
In KDD, pages 133?142.John D. Lafferty, Andrew McCallum, and FernandoC.
N. Pereira.
2001.
Conditional Random Fields:Probabilistic models for segmenting and labeling se-quence data.
In ICML, pages 282?289.Yannick Marchand and Robert I. Damper.
2007.
Cansyllabification improve pronunciation by analogy ofEnglish?
Natural Language Engineering, 13(1):1?24.Steve Pearson, Roland Kuhn, Steven Fincke, and NickKibre.
2000.
Automatic methods for lexical stressassignment and syllabification.
In ICSLP, pages423?426.Dan Roth and Wen-tau Yih.
2005.
Integer linear pro-gramming inference for conditional random fields.In ICML, pages 736?743.Lara Tagliapietra and Patrizia Tabossi.
2005.
Lexicalstress effects in Italian spoken word recognition.
InThe XXVII Annual Conference of the Cognitive Sci-ence Society, pages 2140?2144.Antal van den Bosch.
1997.
Learning to pronouncewritten words: A study in inductive language learn-ing.
Ph.D. thesis, Universiteit Maastricht.Gabriel Webster.
2004.
Improving letter-to-pronunciation accuracy with automaticmorphologically-based stress prediction.
InICSLP, pages 2573?2576.Briony Williams.
1987.
Word stress assignment in atext-to-speech synthesis system for British English.Computer Speech and Language, 2:235?272.George Kingsley Zipf.
1929.
Relative frequency as adeterminant of phonetic change.
Harvard Studies inClassical Philology, 15:1?95.126
