FLUSH:  A F lex ib le  Lex icon  Des ignDavid J. Besemer and Paul S. JacobsArtificial Intelligence BranchGE Corporate Research and DevelopmentSchenectady, NY 12301 USAAbstractApproaches to natural language processing that use aphrasal lexicon have the advantage ofeasily handlinglinguistic constructions that might otherwise be ex-tragrammatical.
However, current phrasal exiconsare often too rigid: their phrasal entries fail to coverthe more flexible constructions.
FLUSH, for FlexibleLexicon Utilizing Specialized and Hierarchical knowl-edge, is a knowledge-based lexicon design that allowsbroad phrasal coverage.I.
I n t roduct ionNatural language processing systems must use a broadrange of lexical knowledge to account for the syntactic useand meaning of words and constructs.
The problem of un-derstanding is compounded by the fact that language isfull of nonproductive constructs--expressions whose mean-ing is not fully determined by examining their parts.
Tohandle these constructs, some systems use a phrasal ex-icon \[Becket, 1975, Wilensky and Arena, 1980b, Jacobs,.1985b, Steinacker and Buchberger, 1983, Dyer and Zernik,1986\], a dictionary designed to make the representation fthese specialized constructs easier.The problem that phrasal exicons have is that theyare too rigid: the phrasal knowledge is entered in a waythat makes it difficult to represent the many forms someexpressions may take without treating each form as a dis-tinct "phrase".
For example, expressions such as "senda message", "give a hug", "working directory", and "pickup" may be handled as specialized phrases, but this over-looks similar expressions such as "give a message", "geta kiss", "working area", and "take up".
Specialized con-structs must be recognized, but much of their meaning aswell as their flexible linguistic behavior may come from amore general level.A solution to this problem of rigidity is to have a hier-archy of linguistic constructions, with the most specializedphrases grouped in categories with other phrases that be-have similarly.
The idea of a linguistic hierarchy is notnovel, having roots in both linguistics \[Lockwood, 1972,Halliday, 1978\] and Artificial Intelligence \[Sondheimer tal., 1984\].
Incorporating phrasal knowledge into such ahierarchy was suggested in some AI work \[Wilensky andArena, 1980a\], but the actual implementation of a hier-186archical phrasal exicon requires ubstantial extensions tothe phrasal representation f such work.The Flexible Lexicon Utilizing Specific and Hierar-chical knowledge (FLUSH) is one component in a suite ofnatural anguage processing tools being developed at theGE Research and Development Center to facilitate rapidassimilation of natural anguage processing technology to awide variety of domains.
FLUSH has characteristics of bothtraditional and phrasal exicons, and the phrasal portionis partitioned into four classes of phrasal entries:?
word sequences?
lexical relations?
linguistic relations?
linguistic/conceptual re ationsFLUSH's mechanisms for dealing with these four classes ofspecialized phrases make use of both general and specificknowledge to support extensibility.FLUSH is the lexical component of a system calledTRUMP (TRansportable Understanding Mechanism Pack-age) \[Jacobs, 1986b\], used for language analysis in multipledomains.
This paper will describe the phrasal knowledgebase of FLUSH and its use in TRUMP.II.
Compound LexicalKnowledge in FLUSHBecause the knowledge mbodied in single word lexemesis not enough to account for nonproductive expressions,FLUSH contains phrasal entries called compound lezemes.This section first illustrates how each of the four classes ofcompound lexemes is represented in FLUSH and then de-scribes the algorithm for accessing the compound lexemes.So that the reader is better equipped to understand the fig-ures in the rest of this paper, the next paragraph briefly in-troduces the knowledge representation scheme that is em-ployed by FLUSH.Knowledge representation i  FLUSH is uses Ace \[Ja-cobs and Rau, 1984, Jacobs, 1985a\], a hierarchical knowl-edge representation framework based on structured inher-itance.
Most of Ace's basic elements can be found in otherknowledge representation schemes (e.g., isa links, slots,and inheritance)\[Bobrow and Winograd, 1977, Brachmanand Schmolze, 1985, Wilensky, 1986\], but Ace has theprep-upDcompound-lexeme \[l?
v-vp Ip-vp \[verb-piclc 1 /  Dv-vpDverb-throw.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.I v-throw-up IPv-vp ~ Iv-loo/c-uFigure 1: The compound lexeme verb-par~icle.zzx.upverb-loolcDunique ability to represent referential and metaphoricalmappings among categories (see descriptions of re/andview below).
The primitive semantic onnections in anAce hierarchy include the following:dominate - -  defines an isa link between two categories.This relation is labeled with a "D" in the figures.
(dominate act ion running) means that running isan action~i.e., action dominates running.manifest - -  defines a constituent of a category.
Unless arole-play applies (see below), this relation is labeled"m" in the figures.
(manifest act ion actor)  means that an action hasan actor associated with it.
This is analogous to a slotin other knowledge representations.role.play- establishes a relationship between a con-stituent (slot) of a dominating category and a con-stituent (slot) of a dominated category.
In the figures,this relation is labeled with the appropriate role namefor the constituent.
(dominate act ion running(role-play actor runner))means that in running, the role of actor (inheritedfrom action) is played by the runner.ref - -  defines a mapping between an entity in the linguis-tic hierarchy and an entity in the conceptual hierarchy.This relation is labeled "re\]" in the figures.
(ref  lex-run running) means that when the lexicalcategory lez-run is invoked, the concept of runningshould be invoked as well.
This is the main chan-nel through which semantic interpretation is accom-plished.view - -  defines a metaphorical mapping between two cat-egories in the conceptual hierarchy.
(view transfer-event action(role-play source actor))means that in certain cases, an action can bemetaphorically viewed as a $ransfer.event, with the\]87actor viewed as the source of the transfer.This brief introduction to Ace will help the reader un-derstand the descriptions of the representation a d accessof compound lexemes that are presented in the next twosubsections.A .
Compound Lexemes1.
Word SequencesWord sequences are phrases uch as "by and large"and "let alne" that must be treated as compound wordsbecause there is little hope in trying to determine theirmeaning by examining their components.
Internally, theseword sequences may or may not be grammatical (e.g., "kickthe bucket" is internally grammatical, but "by and large"is not).Because type of compound lexeme is very specific, aseparate category exists for each word sequence under thegeneral category of word-sequence.
Lexical constraints areplaced on the different constituents of the word-sequencerelation by dominating them by the appropriate simplelexeme.
This is one method that can be used to establishconstraints on compound lexemes, and it is used through-out the compound lexeme hierarchy.2.
Lexical RelationsLexical relations include compound lexical entitiessuch as "pick up" and "sell out" that can appear in a va-riety of surface forms, but have some general relationshipamong their simple lexeme constituents.
Compound lex-emes such as verb-particles ("pick up"), verb-prepositions("take to"), and helper-verbs ("get going") all fall intothe category of lezical relations.
In contrast o the indi-vidual subcategories of word sequences, there are manyentries that fall underneath each individual subcategoryof lexical relations.
Most of the entries under these sub-categories, however, share constituents with other entries,which makes generalizations possible.
For example, Fig-ure 1 shows how all verb-particles that have up as the par-whole-verbI Dbase-vaI mod-va rood\[ compound-lexeme \[ \ [prep-phrase ItD  , ~ base I /~D ",, ~ .~ m~'~ rood I I whole-noun~.
rnod-rel ~ _ ~ .~  r - "tD"?
I I KY?
.
.
.
.
.
.
,roodprep-rootFigure 2: The modifying-relation compound-lexeme hi rarchy.ticle (e.g., "pick up", "throw up", "look up') are repre-sented.This generalization i  representing seemingly specificphrases is what makes FLUStt extensible.
If a new verb-particle with up as the particle is added to the system (e.g.,"hang up"), it inherits everything except he verb from thestructure above it--that is, the general properties of verb-particle relations are inherited (such as the transpositionof the particle with the object "it"), and the specific prop-erties of verb-particles having the preposition "up" (theconstraint on the preposition itself, and possibly some de-fault semantics for the particle) are inherited.3.
Linguistic RelationsLinguistic relaiions are invoked according to con-straints on their constituents, where the constituents maybe simple lexemes, compound lexemes, or syntactic struc-tures.
An example occurs in the sentence "John was solda book by Mary" where the object of the preposition isthe main actor of the event described by the verb.
Thiscondition occurs only when the whole verb'is in the passiveform (constraint 1) and the preposition in the modifyingprepositional phrase is by (constraint 2).Linguistic relations are difficult to represent for tworeasons: their constituents are not always simple lexemesand usually there are additional constraints on each con-stituent.
It has been found, however, that a great deal ofgenerality can be extracted from most of the linguistic re-lations to make accessing them easier.
The best exampleof a linguistic relation is the class of the modifying prepo-sitioval phrases.
In some instances, prepositional phrasesmodify noun phrases and verb phrases in almost he sameway (e.g., "The man on the hill is a skier" and "We hada picnic on the hil?').
In other cases prepositional phrasesmodify noun phrases and verb phrases in completely dif-ferent ways (e.g., "The man by the car is my father."
and"The boy was hit by the car.").
FLUSH is able to representboth types of linguistic relation by having more than onelevel of generic representation.
Figure 2 shows the gen-eral modifying relation (mod.rel) at the first level belowcompound-lexeme.
Prepositional phrases that are homo-geneous across noun phrases and verb phrases are repre-sented underneath t is category.
Below rood.tel in Figure 2are the verb-adjunct (va) and noun-post-modifier (npm)categories, which make up the second level of generic repre-sentation.
Prepositional phrases that modify verb phrasesand noun phrases differently are represented underneaththese categories.As an example, in Figure 2 the rood-tel category hasthe more specific modifying relation mod-rel-zzz.from un-derneath it, which is a modifying relation where the prepo-sition in the modifier is prep-from.
Example uses of thisprepositional phrase are found in the sentences: "The manarrived from New York" and "The woman from Boston ismy aunt".4.
Lingulstic/Conceptual RelationsThese are expressions that cannot be easily handledas exclusively linguistic constructs, such as "giving per-mission", "getting permission", and "having permission".These expressions can be represented as an abstract pos-session concept where the possessed is ':noun-permission",thus combining a class of concepts with a lexical category.These compound lexemes have the unique character-istic of allowing linguistic relations to have explicit con-ceptual constraints.
In the phrase "give a hug" there isan abstract relationship between the concept of giving andthe simple lexeme noun.hug that implies the concept ofhugging.
Figure 3 shows the representation f this linguis-tic/conceptual relation.
This kind of compound lexeme isinvoked by the semantic interpreter, rather than by theparser, during a process called concretion--making con-cepts more concrete.
The scope of this paper does not per-mit a discussion of concretion, but refer to \[Jacobs, 1986b\]for more information.The descriptions in this section illustrate how FLUSHis able to represent a wide range of lexical phenomena ina hierarchical and uniform manner.
The four classes ofcompound lexemes that are described encompass many ofthe usually problematic expressions in natural language,yet they are represented in a way that supports extensionand adaptation.
The next section describes how these rep-resentations are accessed by FLUSH.188l linguistic~conceptual mm~ concept \] DI lexeme II lc-give-xxx h i  gi~ingvl oo.
/?
?-lc-~ive-xxx Ik,,x IlexemeN~ l_lc_~iv/eDu~\[%Figure 3: The linguistic/conceptual re ation Icr-give-hug.B.
AccessAlthough the compound lexeme representations illustratedin the previous section differ, FLUSH is able to employ afairly flexible algorithm for accessing them.
When theparser encounters a relation that may constitute a com-pound lexeme, it passes the name of the relation and theconstituents that fill the appropriate roles to FLUSH.
IfFLUSH finds a compound lexeme that satisfies the con-straints, it passes the lexeme back to the parser.For example, if TRUMP is working on the sentence":John picked up the book", it encounters a possible verb-particle relationship between the verb "picked" and thepreposition "up".
When this relationship is apparent othe parser, FLUSH is called with the verb-part relation withthe constituents of pt-verb.pick as the verb and prep-up asthe particle:(find-compound verb-part(v-verb-part pt-verb-piek)(p-verb-part prep-up) )In this example, the compound lexeme verb.part-pick-up is found by FLUSH and is returned to the parser.
Ifinstead the sentence is ":John meditated up the hill", theparser takes the same action, but no compound lexeme isfound by FLUSH because "meditated up" has no specialmeaning.FLUSH uses a two step procedure to locate specificcompound lexemes.
First, entries below the given relationin the hierarchy are checked to see if any of them sat-isfy the given constraints.
If a compound lexeme exists, itis usually found during this step.
There are some cases,however, in which the desired compound lexeme exists asa subcategory of an ancestor of the given relation.
Thissituation was seen in the description of the modifying rela-tion (rood-tel), verb-adjunct (va), and noun-post-modifier(npm) in the previous ection (see Figure 2).
In this case,a second step in the search process looks at the sibling cat-egories.
This process continues until either the top of thecompound.lexeme hi rarchy is reached (which happens im-mediately for most relations) or until a suitable compoundlexeme is found.The process of finding a compound lexeme belowthe given relation is a matching problem.
In responseto the example call to f ind-compound above, the lexi-con proceeds to look at the defined categories underneathverb-part, which include verb.part-?ZZoUp, verb-part-?xz-out, verb-part-z~zx-off, etc., to see which one(s) satisfies theconstraints, verb-part.zzz-up is found as a possibility, re-sulting in the same function being called recursively withthe remaining constraints to find an appropriate categorybelow it:(f ind-eompound verb-part-xxx-up(v-verb-part p~-verb-pick) )This process is repeated until one of two conditions oc-curs: either the given constraints are exhausted, in whichcase a category that satisfies all of them has been found;or there are no more categories to search but there are stillconstraints left, in which case no match has been foundand it may be appropriate to search the ancestors' sub-categories.
In this example, the verb-part-pick-up categoryis found and returned on the second recursion, therefore,there is no need to search the hierarchy at a higher level.If instead the parser is working in the sentence "Theman arrived from New York", it encounters a possibleverb-adjunct (va) relation between the verb "arrived" andthe prepositional phrase "from New York".
The lexicon iscalled with the va relation, but the first step in the searchprocess (i.e., looking below the given relation) does notyield a compound lexeme because mod-rel-zxx-from is de-fined in terms of the rood.tel relation rather than in termsof the va relation (see Figure 2).
So even though the re-lation that the parser encounters in the pattern is a verb-adjunct relation, the lexicon is flexible enough that it canapply more general knowledge to the retrieval problem.The meanings of compound lexemes are representedand accessed using a reference pointer that links the lin-guistic category to a conceptual structure.
Some of theconceptual reference pointers for compound lexemes aremore complicated than simple lexical access because of-ten there are several components that need to be mapped,but they are still defined in terms of the ref association\[Jacobs, 1986a\].
The example form below defines a refer-ence from the compound lexeme mod-rel-zxz-from to thetransfer-event concept:(ref transfer-event <-> mod-rel-xxx-from(source <-> m-mod-rel-xxx-from))This reference stablishes that the modifying relationmod-rel-zzx-from should invoke the transfer-event concept,and the modifier part of mod-rel-zzx-from, namely m-mod-rel-zxz-from, should fill the role of source in this transfer-event.
In the sentence "The man arrived from New York",189the prepositional phrase "from New York" invokes rood.rel-zxx-from.
In turn, the transfer-event concept is invokedwith "New York" as the source of the transfer.The explanations above illustrate that FLUSH is capa-ble of representing and accessing most of the different ypesof lexical knowledge that natural anguage processing sys-tems need to have.
They also show how FLUSH can domost of it in a general manner, making extensions fairlystraightforward.
FLUSH is equipped also with a mecha-nism for automatic acquisition of new lexemes, described in\[Besemer, 1986\].
The discussion that follows concentrateson the application of the hierarchical lexicon to semanticinterpretation i TRUMP.III.
Semantic Interpretationusing FLUSHSection II.
described the organization of the FLUSH lexi-con, distinguishing several classes of lexical knowledge andshowing the use of a hierarchical knowledge representationin representing examples of each class.
One goal of thishierarchical organization is parsimony: because categoriesof compound lexemes inherit their constraints from moregeneral categories, the number of linguistic constraints en-coded explicitly can be reduced.
A second function of thehierarchical representation, perhaps more important, is tofacilitate the interpretation of the meaning of a compoundlexeme.Semantic interpretation is facilitated by each of theclasses of compound lexemes discussed in section II.. Thesimple example of word sequences allows the semantic in-terpreter to set aside the meanings of the individual wordsto interpret phrases uch as "by and large" and '~?ick thebucket" correctly.
Lexical relations, such as "pick up"and "working directory", permit the association of spe-cialized meanings as well as the contribution of certainflexible lexical classes to the meaning of a phrase.
For ex-ample, the phrase "branch manager" is interpreted usingknowledge that it belongs to a lexical category commonwith "lab manager" and "program manager".
Linguisticrelations uch as mod-rel-~zx-fram permit general exicalknowledge to apply to the filling of conceptual roles.
Lin-guistic/conceptual re ations uch as let-give-hug permit hespecialized interpretation of expressions uch as "give ahug" in a broad range of surface forms.The following examples illustrate the operation of theTRUMP semantic interpreter and its use of the FLUSH lexi-con.Example  1:Send the laser printer characteristics to the branchmanager.Processing the above sentence stimulates a steady flowof information between TRUMP'S parser and semantic in-terpreter and the FLUSH lexical access mechanism.
Thelexical analyzer ecognizes "laser", "printer" and "charac-teristics" as nouns, but the search for compound lexicalentries is activated only as the parser recognizes that thenouns form a compound.
The specific entry for "laserprinter" in the FLUSH lexicon, returned using the com-pound access method described in the previous section,provides two important pieces of information to TRUMP:First, it gives the semantic interpreter the correct meaningof the phrase, permitting TRUMP to forbear considerationof interpretations such as "a printer that prints lasers".Second, it enables the parser to favor the grouping \[\[laserprinter\] characteristics\] over \[laser \[printer characteristics\]\]and thus come up with a viable meaning for the entirephrase.The handling of the relationship between "charac-teristics" and "laser printer" makes use of the middle-level category en-~xx.characteristic, much like the verb-par~icle.~-up category described in section II.
The cn-XZXocharac~eris~ic category, representing compound nomi-nals whose second noun is "characteristic", is associatedwith its meaning via a I%EF link in the following way:(ref characteristic <->.
cn-xxx-charac~eristic(manifes~er <-> In-cn-xxx-charac~eris~ic))The aboveassociation, in which ln.cn.~:zz-charac~er~stic denotes thefirst noun of a particular nominal compound, suggests theinterpretation "characteristics of the laser printer".
Thetreatment of this association as a middle-level node in thehierarchical lexicon, rather than as an independent lexi-cal entry, has two features: First, it is often overriddenby a more specific entry, as in "performance characteris-tics".
Second, it may cooperate with more specific lexicalor conceptual information.
For example, the conceptualrole manifesIer is a general one that, when applied to amore specific category, can lead to a specific interpretationwithout requiring a separate conceptual entry.
This wouldhappen with "laser printer performance characteristics".The phrase "branch manager", like "laser printercharacteristics", is interpreted using an intermediate n-try en.zzx-manager.
While FLUSH has the capability, likePHRAN \[Wilensky and Arens, 1980b\], to constrain thiscategory with the semantic onstraint hat the first nounmust describe a bureaucratic unit, it is at present left tothe semantic interpreter to determine whether the preced-ing noun can play such an organizational role.Example  2:Cancel the transmission to the printer.In this example, the lexical access mechanism ustdetermine that "to the printer" invoked the mod-rel-~zz-to linguistic relation, which can be attached either to theverb "cancel" or the nominal "transmission".
The seman-tic interpreter then finds the following association:(ref ~rans~er-even~ <-> mod-rel-xxx-~o\]9O(destination <-> m_mod-rel-xxx-to))The REF association above indicates that the objectof the preposition "to" is related to the destination role ofsome generalized transfer event.
Since "cancel" describesno such event, but "transmission" does, TRUMP correctlyinterprets "printer" as being the destination of the trans-mission.
This allows the semantic interpreter to handlethis example much in the same way as it would handle'`Transrnit the job to the printer n, because the rood-tel re-lation class includes both postnominal modifiers and ad-verbial prepositional phrases.
As in the previous example,the semantic interpreter can make use of the interactionbetween this general interpretation rule and more specificknowledge; for example, "the sale of the the book to Mar!f'invokes the same mod-rel.xxx-to relation, but the role ofMary is determined to be customer because that role isthe conceptual specialization of the destination of a trans-fer.
The process of correctly determining a conceptual roleusing linguistic relations is described in \[Jacobs, 1987\].Example 3:How many arguments does the command take?There are two major differences between this exampleand the previous two: First, the lexicon is driven by in-formation passed from TRUMP~S semantic interpreter, notonly from the parser.
In the previous example, the parserrecognizes a potential relationship between a verb or nom-inal and a prepositional phrase.
In this case, the semanticinterpreter must determine if the conceptual relationshipbetween the concept of taking and the term "arguments"invokes any special exical knowledge.
Second, the inter-pretation of "take arguments" is not a specialization of anabstract concept such as transfer-event, but rather is a re-sult of a metaphorical view mapping from this concept othe concept of command-execution.The interpretation of this sentence thus proceeds asfollows: At the completion of the syntactic parse, the se-mantic interpreter produces an instantiation of the con-cept taking with the object arguments.
The lexical accesssystem of FLUSH, using the same discrimination processthat determines a specialized linguistic relation, identifiesIcr-transfer-arguments as a linguistic/conceptual re ationinvoked by the concept of a transfer with the lexical term"argument" attached to the conceptual object role.
Thesame linguistic/conceptual re ation is invoked by "givingarguments" or "getting arguments".
The semantic inter-preter continues by determining the metaphorical map-ping between the transfer-event concept and the command-execution concept, a mapping that derives from the sameconceptual relationships as other similar metaphors suchas "The recipe takes three cups of sugar."
In this waythe amount of specialized information used for "take ar-guments" is kept to a minimum; effectively, FLUSH in thiscase is merely recognizing a linguistic/conceptual triggerfor a general metaphor.This section has described the application of theFLUSH lexicon to the process of semantic interpretation ithe TI~UMP system.
The examples illustrate some charac-teristics of the flexible lexicon design that differ from otherphrasal systems: (1) There are a broad range of categoriesto which specialized information may be associated.
Thetreatment of "branch manager" and "transmission to" il-lustrates the use of compound lexical knowledge at a moreabstract level than other programs uch as PHRAN.
(2)The hierarchical lexicon reduces the number of phrasal en-tries that would be required in a more rigid system.
Ex-pressions uch as "take arguments" and "get arguments"share a common entry.
(3) The quantity of informationin each phrasal entry is minimized.
Linguistic constraintsare often inherited from general categories, and the amountof semantic information required for a specialized entry iscontrolled by the method of determining an appropriateconceptual role.
The "take arguments" expression thusdoes not require explicit representation f the relationshipsbetween linguistic and conceptual roles.IV .
Conc lus ionFLUSH is a flexible lexicon designed to represent linguisticconstructs for natural anguage processing in an extensi-ble manner.
The hierarchical Organization of FLUSH, alongwith the provision for a number of types of phrasal con-structs, makes it easy to use knowledge at various levelsin the lexical hierarchy.
This design has the advantageof handling specialized linguistic constructs without beingtoo rigid to deal with the range of forms in which theseconstructs may appear, and facilitates the addition of newconstructs to the lexicon.
FLUSH permits the correct se-mantic interpretation fa broad range of expressions with-out excessive knowledge at the level of specific phrases.References\[Becker, 1975\] J. Becker.
The phrasal exicon.
In Theo-retical Issues in Natural I,anguage Processing, Cam-bridge, Massachusetts, 1975.\[Besemer, 1986\] D. Besemer.
FI, USH: Beyond the PhrasalI, ezicon.
Technical Report 086CRD181, General Elec-tric Corporate Research and Development, 1986.\[Bobrow and Winograd, 1977\] D. Bobrow and T. Wino-grad.
An overview of KRL, a knowledge representa-tion language.
Cognitive Science, 1(1), 1977.\[Brachman and Schmolze, 1985\] R. Brachman and J.Schmolze.
An overview of the KL-ONE knowledgerepresentation system.
Cognitive Science, 9(2), 1985.\[Dyer and Zernik, 1986\] M. Dyer and U. Zernik.
Encod-ing and acquiring meanings for figurative phrases.
InProceedings of the 24th Annual Meeting of the Associ-ation for Computational I,inguistics, New York, 1986.191\[Halfiday, 1978\] M. A. K. Halfiday.
Language as SocialSemiotic.
University Park Press, Baltimore, Mary-land, 1978.\[Jacobs, 1985a\] P. Jacobs.
A Knowledge.Based Approachto Language Production.
PhD thesis, University ofCalifornia, Berkeley, 1985.
Computer Science Divi-sion Report UCB/CSD86/254.\[Jacobs, 1985b\] P. Jacobs.
PHRED: a generator for nat-ural language interfaces.
Computational Linguistics,11(4), 1985.\[Jacobs, 1986s\] P. Jacobs.
Knowledge structures for nat-ural language generation.
In Proceedings of theEleventh International Conference on ComputationalLinguistics, Bonn, Germany, 1986.\[Jacobs, 1986b\] P. Jaeobs.
Language analysis in not-so-limited domains.
In Proceedings of the Fall JointComputer Conference, Dallas, Texas, 1986.\[Jacobs, 1987\] P. Jscobs.
A knowledge framework for nat-ural language analysis.
In Proceedings of the TenthInternational Joint Conference on Artificial Intelli-gence, Milan, Italy, 1987.\[Jacobs and Ran, 1984\] P. Jaeobs and L. Rau.
Ace: asso-ciating language with meaning.
In Proceedings of theEiz~h European Conference on Artificial Intelligence,Piss, Italy, 1984.\[Lockwood, 1972\] D. Lockwood.
Introduction to Strat-ificational Linguistics.
Harcourt, Brace, and Jo-vanovich, New York, 1972.\[Sondheimer tai., 1984\] N. Sondheimer, R. Weischedel,and R. Bobrow.
Semantic interpretation using KL-ONE.
In Proceedings of the Tenth InternationalConference on Computational Linguistics, Palo Alto,1984.\[Steinscker and Buchberger, 1983\] I. Steinacker and E.Buchberger.
Relating syntax and semantics: thesyntactico-semantic lexicon of the system VIE-LANG.In Proceedings of the First European Meeting of theACL, Piss, Italy, 1983.\[Wilensky, 1986\] R. Wilensky.
Knowledge representation -s critique and s proposal.
In J. Kolodner and C. Ries-beck, editors, Ezperience, Memory, and Reasoning,Lawrence Erlbaum Associates, HiUsdale, New Jersey,1986.\[Wilensky and Arens, 1980a\] R. Wilensky and Y. Arens.PHRAN-A Knowledge-based Approach to NaturalLanguage Analysis.
Electronics Research LaboratoryMemorandum UCB/ERL M80/34, University of Cal-ifornia, Berkeley, 1980.\[Wilensky and Arens, 1980b\] R. Wilensky and Y. Arens.PHRAN-a knowledge-based natural anguage under-stander.
In Proceedings of the 18th Annual Meet-ing of the Association for Computational Linguistics,Philadelphia, 1980.192
