Proceedings of the 5th Workshop on Important Unresolved Matters, pages 1?8,Ann Arbor, June 2005. c?2005 Association for Computational LinguisticsMulti-Component Tree Adjoining Grammars,Dependency Graph Models, and Linguistic AnalysesJoan Chen-Main* and Aravind K. Joshi*+*Institute for Research in Cognitive Science, and+Dept of Computer and Information ScienceUniversity of PennsylvaniaPhiladelphia, PA 19104-6228{chenmain,joshi}@seas.upenn.eduAbstractRecent work identifies two properties thatappear particularly relevant to the charac-terization of graph-based dependency mod-els of syntactic structure1: the absence ofinterleaving substructures (well-nestedness)and a bound on a type of discontinuity(gap-degree ?
1) successfully describemore than 99% of the structures in two de-pendency treebanks (Kuhlmann and Nivre2006).2 Bodirsky et al (2005) establish thatevery dependency structure with these twoproperties can be recast as a lexicalizedTree Adjoining Grammar (LTAG) deriva-tion and vice versa.
However, multi-component extensions of TAG (MC-TAG),argued to be necessary on linguisticgrounds, induce dependency structures thatdo not conform to these two properties(Kuhlmann and M?hl 2006).
In this paper,we observe that several types of MC-TAGas used for linguistic analysis are more re-strictive than the formal system is in prin-ciple.
In particular, tree-local MC-TAG,tree-local MC-TAG with flexible composi-1 Whereas weak equivalence of grammar classes is only con-cerned with string sets and fails to shed light on equivalence atthe structural level, our work involves the equivalence of deri-vations and graph based models of dependencies.
Thus, ourwork is relevant to certain aspects of grammar engineeringthat weak equivalence does not speak to.2 These properties hold for many of the so-called non-projective dependency structures and the corresponding non-context free structures associated with TAG, further allowingCKY type dynamic programming approaches to parsing tothese dependency graphs.tion (Kallmeyer and Joshi 2003), and spe-cial cases of set-local TAG as used to de-scribe certain linguistic phenomena satisfythe well-nested and gap degree ?
1 criteria.We also observe that gap degree can dis-tinguish between prohibited and allowedwh-extractions in English, and report somepreliminary work comparing the predic-tions of the graph approach and the MC-TAG approach to scrambling.1 IntroductionBodirsky et al (2005) introduce a class of graphi-cal dependency models, called graph drawings(which differ from standard dependency struc-tures), that are equivalent to lexicalized Tree Ad-joining Grammar (LTAG) derivations (Joshi andSchabes 1997).
Whereas TAG is a generativeframework in which each well-formed expressioncorresponds with a legitimate derivation in thatsystem, the graph drawing approach provides a setof structures and a set of constraints on well-formedness.
Bodirsky et al offer the class ofgraph drawings that satisfy these constraints as amodel-based perspective on TAG.
Section 2summarizes this relationship between TAG deriva-tions and these graph drawings.In related work, Kuhlmann and Nivre (2006)evaluate a number of constraints that have beenproposed to restrict the class of dependency struc-tures characterizing natural language with respectto two dependency treebanks: the Prague Depend-ency Treebank (PDT) (Haji?
et al, 2001) and theDanish Dependency Treebank (DDT) (Kromann,2003).
The results indicate that two propertiesprovide good coverage of the structures in both1treebanks.3  The first is a binary well-nestednessconstraint.4  The other is a bound on gap degree, agraded measure of discontinuity.
These results aregiven in Table 1.
What is noteworthy is that thegraph drawings which correspond to LTAG deriva-tions share these two properties: LTAG inducedgraph drawings are both well-nested and have gapdegree ?
1, and for every graph drawing that isboth well-nested and gap degree ?
1, there exists acorresponding LTAG derivation (M?hl 2006).
Insection 3, these two properties are defined.property Danish Dep.TreebankPrague Dep.Tree-bankall structures n = 4393 n = 73088well-nested 99.89% 99.89%gap degree 0 84.95% 76.85%gap degree 1 14.89% 22.72%gap degree ?
1 99.84% 99.57%Table 1.
Relevant results from Kuhlmann andNivre (2006).In section 4, we show that gap degree can beused to distinguish between strong island viola-tions and weak island violations in English.
Thissupports the notion that gap-degree is a linguisti-cally relevant measure.Although TAG is a linguistically expressiveformalism, a closer look at the linguistic data hasmotivated extensions of TAG.5  One of the mostwidely used extensions for handling cases that aredifficult for classic TAG is Multi-Component TAG(Weir 1988).
Like basic TAG, MC-TAG is a for-malism for rewriting nodes of a tree as other trees.The set of underived trees are called elementarytrees.
The rewriting is accomplished via two opera-tions: substitution, which rewrites a leaf node la-beled X with a tree rooted in a node labeled X, andadjoining, which rewrites a node X with a tree thatlabels both its root and a distinguished leaf node,the foot, with X.
The observation that linguisticdependencies typically occur within some sort oflocal domain is expressed in the TAG hypothesisthat all such dependencies occur within the basic3 A third property based on edge degree also characterizes thestructures, but has no clear relationship to TAG-derivations.Thus, reference to it is omitted in the remaining text.
SeeKuhlmann and Nivre (2006) for the definition of edge degree.4 Well-nestedness differs from projectivity.
(See section 3.
)5 For a readable introduction, see Chapter 1 of Frank (2002).building blocks of the grammar.
Recursive struc-ture is ?factored out,?
which allows apparent non-local dependencies to be recast as local ones.Whereas basic TAG takes the basic unit to be asingle elementary tree, MC-TAG extends the do-main of locality to encompass a set of elementarytrees.
That is, these sets are the objects over whichthe combinatory operations apply.
The MC-extension allows for linguistically satisfying ac-counts for a number of attested phenomena, suchas: English extraposition (Kroch and Joshi 1986),subj-aux inversion in combination with raisingverbs (Frank 1992), anaphoric binding (Ryant andScheffler 2006), quantifier scope ambiguity (Joshiet al 2003), clitic climbing in Romance (Bleam1994), and Japanese causatives (Heycock 1986).The primary concern of this paper is the recon-ciliation of the observation noted above, that MC-TAG appears to be on the right track for a goodgenerative characterization of natural language,with a second observation: The graph drawingsthat correspond to MC-TAG derivations, are notguaranteed to retain the properties of basic-TAGinduced graph drawings.
Kuhlmann and M?hl(2006) report that if an entire MC set is anchoredby a single lexical element (the natural extensionof ?lexicalization?
of TAGs to MC-TAGs), thenthe class of dependency structures is expandedwith respect to both conditions that characterizedthe TAG-induced graph drawings: MC-TAG in-duced graph drawings include structures that arenot well-nested, have gap degree > 1, or both.
AsKuhlmann and M?hl point out, the gap degree in-creases with the number of components, which wewill elaborate in section 6.
This is true even if werequire that all components of a set combine with asingle elementary tree (i.e.
tree-local MC-TAG,which is known to allow more derivation structures(i.e.
derivation trees) than TAG, although they gen-erate the same set of derived trees).
If we supposethat the characterization of dependency structuresas reported by Kuhlmann and Nivre (2006) forCzech and Danish extends cross-linguistically, i.e.the dependency structures for natural languagefalls within the class of well-nested and gap degree?
1 dependency structures, then MC-TAG appearsto correspond to the wrong class of model-theoretic dependency structures.
It is desirable toaccount for the apparent mismatch.One possibility is that the linguistic analyses thatdepend on a multi-component approach are ex-2tremely infrequent, and that this is reflected in thesmall proportion (< 1%) of data in the PDT andDDT that are not both well-nested and gap degree?
1.
A second possibility is that the structures inthe PDT and DDT are actually not good represen-tatives of the structures needed to characterizenatural languages in general.
However, a look atthe cases in which MC-TAG is employed revealsthat these particular analyses yield derivations thatcorrespond to graph drawings that do satisfy well-nestedness and have gap degree ?
1.
In practice,MC-TAG seems to be used more restrictively thanwhat the formal system allows in principle.
Thiskeeps the corresponding graph drawings within theclass of structures identified by Bodirsky et al(2005) as a model of TAG derivations, and byKuhlmann and Nivre (2006) as empirically rele-vant.
Lastly, we compare the scrambling patternsthat are possible in an MC-TAG extension withthose that conform to the well-nestedness and gapdegree ?
1 properties of the graph approach.2 TAG-induced Graph DependenciesThe next two sections are intended to provide anintuition for the terms defined more formally inBodirsky et al (2005) and Kuhlmann and Nivre(2006).
In the former, the authors define their de-pendency structures of interest, called graph draw-ings, as a three-tuple: a set of nodes, a dominancerelation, and a (total) precedence relation.
Thesedependency structures are based on informationfrom both a TAG-derivation and that derivation?sfinal phrase structure.
The anchor of each elemen-tary tree of a strictly lexicalized TAG (LTAG) isused as a node label in the induced dependencystructure.
E.g.
suppose tree A is anchored by lexi-cal item a in the LTAG grammar.
Then a will be anode label in any dependency structure induced byan LTAG derivation involving tree A.To see how the dominance relation and prece-dence relation mirror the derivation and the finalderived phrase structure, let us further suppose thatLTAG tree B is anchored by lexical item b.  Nodea dominates node b in the dependency structure iffTree A dominates tree B in the derivation struc-ture.
(I.e.
tree B must substitute or adjoin into treeA during the TAG-derivation.6)  Node a precedes6 Whereas in standard dependency graphs, adjunction of t2 tot1 generally corresponds to a dependency directed from t2 tonode b in the dependency structure iff a linearlyprecedes b in the derived phrase structure tree.An example based on the cross-serial dependen-cies seen in Dutch subordinate clauses is given inFigure 1.
In the graph drawing in (4), the fournodes names, {Jan, de kinderen, zag, zwemmen},are the same set as the anchors of the elementarytrees in (1), which is the same as the set of termi-nals in (3), the derived phrase structure.
The or-dering of these nodes is exactly the ordering of theterminals in (3).
The directed edges between thenodes mirrors the immediate dominance relationrepresented in (2), the derivation structure showinghow the trees in (1) combine.
E.g.
Just as thezwemmen node has the zag and de kinderen nodesas its two children in (2), so does the zwemmennode dominate zag and de kinderen in (4).M?hl (2006) provides the formal details show-ing that such LTAG-induced dependency struc-tures have the properties of being 1) well-nestedand 2) gap degree ?
1, and, conversely, that anystructures with these properties have a correspond-ing LTAG derivation.7  These properties are de-fined in the next section.
(1) (2)(2) (4)Figure 1.
Derivation for Jan de kinderen zagzwemmen and corresponding graph drawing3 Properties of Dependency Graphs3.1 Gap-DegreeIt will be useful to first define the term projection.Definition: The projection of a node x is the set ofnodes dominated by x (including x).
(E.g.
in (4),the projection of zag = {Jan, zag}.
)t1, in a TAG-induced dependency graph, adjoining t2 to t1corresponds to the reverse dependency.7 This result refers to single graph drawings and particularLTAG derivation.
See Kuhlmann and M?hl (2007) on therelationship between sets of graph drawings and LTAGs.YNP X*zag(saw)XNPzwemmen(swim)SJande kinderen(the children)zagJande kinderenzwemmenJan  de kinderen  zag  zwemmenJanNPde kinderen(the children)NPYNP X*zag(saw)XXNPzwemmen(swim)S3Recall that the nodes of a graph drawing are in aprecedence relation, and that this precedence rela-tion is total.Definition: A gap is a discontinuity with respect toprecedence in the projection of a node in the draw-ing.
(E.g.
in (4), de kinderen is the gap preventingJan and zag from forming a contiguous interval.
)Definition: The gap degree of a node is the num-ber of gaps in its projection.
(E.g.
the gap degree ofnode zag = 1.
)Definition: The gap degree of a drawing is themaximum among the gap degrees of its nodes.(E.g.
in (4), only the projection of zag is inter-rupted by a gap.
Thus, the gap degree of the graphdrawing in (4) = 1.
)In TAG drawings, a gap arises from an interrup-tion of the dependencies in an auxiliary tree.
If Bis adjoined into A, the gap is the material in A thatis below the foot node of B.  E.g.
in figure 1, Dekinderen is substituted into the zwemmen tree be-low the node into which the zag tree adjoins intothe zwemmen tree.
Thus, de kinderen interrupts thepronounced material on the left of the zag tree?sfoot node, Jan, from the pronounced material onthe right of the foot node, zag.3.2 Well-NestednessDefinition: If the roots of two subtrees in thedrawing are not in a dominance relation, then thetrees are disjoint.
(E.g.
in (5), the subtrees rooted inb and c are disjoint, while the subtrees rooted in aand b are not.
)Definition: If nodes x1, x2 belong to tree X, nodesy1, y2 belong to tree Y, precedence orders thesenodes: x1 > y1 > x2 > y2, and X and Y are disjoint,then trees X and Y interleave.
(E.g.
in (5), b and dbelong to the subtree rooted in b, while c and e be-long to the subtree rooted in c.  These two subtreesare disjoint.
Since the nodes are ordered b > c > d> e, the two trees interleave.
)Definition: If there is no interleaving between dis-joint subtrees, then a graph drawing is well-nested.(e.g.
(4) is well-nested, but (5) is not)(5)Non-well nested graph drawing4 Island Effects and Gap-DegreeWhen standard TAG analyses of island effects areadopted (see Frank 2002), we observe that differ-ences in gap degree align with the division be-tween wh-extractions that are attested in naturallanguage (grammatical wh-movement and weakisland effects) and those claimed to be prohibited(strong island effects).
Specifically, four strongisland violations, extraction from an adverbialmodifier, relative clause, complex NP, or subject,correspond to structures of gap degree 1, whilecyclic wh-movement and a weak island violation(extraction from a wh-island) are gap degree 0 inEnglish.
Interestingly, while it is clear that weakislands vary in their island status from language tolanguage, strong islands have been claimed toblock extraction cross-linguistically.
We tenta-tively postulate that gap degree is useful for char-acterizing strong islands cross-linguistically.An example is given in (6), a standard TAGderivation for adverbial modification: the after-treeadjoins into the buy-tree (the matrix clause), thegot-tree substitutes into the after-tree, and the twoarguments who and a-raise substitute into the got-tree.
In (7), the corresponding dependency struc-ture, the projection of got includes who, which isseparated from got by the string comprising thematrix clause and adverbial.
Clearly, we do notwant to claim that any gap degree of 1 is a suresource of ungrammaticality.
However, it is possi-ble that a gap degree of 1 in conjunction with a wh-element yields ungrammaticality.
For the particu-lar set of islands we examined, we postulate thatthe projection of the node immediately dominatingthe wh-element is prohibited from containing gaps.
(6)(7)*Figure 2.
LTAG derivation and graph drawingfor *Who did Jane buy a house after got a raise?a b c d eWho     did      Jane     buy    a-house    after     got    a-raiseJanegota-housebuydid afterWho a-raise4(8a) (8w) ?
?
(11a) (11d) (11e)(8b) (8c) (8d) (8e) (8x) (8y) (8z) (11b) ?
?
(11c) ?
?
(9)  (10)(12)5 MC-TAG-induced Dependency Graphs5.1 Gap-Degree Beyond 1As reviewed in section 3, the source of every gapin a TAG drawing comes from an interruption ofthe dependencies in an auxiliary tree.
Since theauxiliary tree only has one foot, it only has a slotfor a single gap.
A MC-set, however, could becomprised of two auxiliary trees.
This means thereare slots for two gaps, one associated with eachfoot.
Furthermore, a gap may arise as a result ofany pronounced material between the two compo-nents.
Thus, when we already have at least onefoot, adding an additional foot increases the maxi-mum gap degree by 2.
The maximum gap degree= 1 + 2(n ?
1) = 2n ?
1, where n is the max # offoot nodes in any elementary tree set.As an example, consider the composition of thetrees in (8), Figure 3 (Kuhlmann, p.c.)
The tree setin (8w) is comprised of two auxiliary trees.
Onetree, (8w?
), adjoins into (8a), and a gap is createdby the material in (8a) that falls below the footnode of (8w?
), namely b.
When (8w?)
is adjoinedinto (8?)
at node V, a second gap is created below(8w?)
by d.  A third gap is created by the materialbetween the two components.
(9) shows the de-rived phrase structure, and (10), the correspondinggraph drawing.
The projection of node w, {w, x, y,z} has three discontinuities, nodes b, c, and d.5.2 Non-Well-NestednessKuhlmann and M?hl (2006) show that even a tree-local MC-TAG that allows only substitution caninduce a non-well-nested graph drawing.
Figure 4replicates their example.
This derivation involvestwo MC-sets, (11b) and (11c).
The tree anchoredby d, (11d), substitutes into the second componentof the set anchored by b, (11b).
Similarly, the treeanchored by e, (11e), substitutes into the secondcomponent of the set anchored by c, (11c).
BothMC-sets compose into the tree anchored by a,yielding the derived phrase structure in (12).
Thecorresponding graph drawing is exactly our earlierexample of non-well-nestedness in (5).6 MC-TAG in PracticeWe now turn to cases in which linguists have usedMC-TAGs to account for cases argued to have nosatisfying solution in basic TAG.
Unlike the ex-amples in 5.1 and 5.2, these particular MC-deriva-tions correspond to dependency structures that arewell-nested and have gap degree ?
1.
Table 2summarizes these cases.
The last column indicatesthe type of MC-extension assumed by the analysis:tree-local MC-TAGs, tree-local MC-TAGs withflexible composition, the mirror operation to ad-joining; if tree ?
adjoins into tree ?, the combina-tion can be alternatively viewed as tree ?
?flexibly?composing with tree ?
(Joshi et al 2003, Kall-meyer and Joshi 2003)8, and set-local MC-TAGs.Set-local MC-TAGs are generally more powerfulthan TAGs, but since these particular cases inducewell-nested graph drawings of gap degree ?
1, wecan conclude that set-local MC-TAG as used in8 I.e.
When composing A and B, we can take A as the functionand B as the argument or vice versa.
For CFGs, such flexibil-ity has no added benefit.
For categorical type grammars, thiskind of flexibility is accomplished via type raising, whichallows for some new types of constituents but does not giverise to any new word orders.
For tree local MC-TAGs, suchflexibility does allow more word orders (permutations) to begenerated than are possible without flexible composition.WBVAC aDEEeCcDdBbXxYyZzX YVV w ZWWAaX YVV w ZWWEeCcDdBbx y za     w    b    z      c     x    d     y     eB WAC a YWXBbYZCcXdZeAa YZWXCcBbd eFigure 4.
Non-well-nested MC-TAG induced graph drawing Figure 3.
MC-TAG induced graph drawing of gap degree 35Table 2.
Canonical tree sets used in MC-TAG analyses of several phenomenathese cases is weakly equivalent to TAG.From Table 2, we can draw two generalizations.First, in an MC-TAG analysis, a two-componentset is typically used.
One of the trees is often avery small piece of structure that corresponds tothe ?base position,?
surface position, or scope posi-tion of a single element.
Second, the auxiliary treecomponents typically have elements with phono-logical content only on one side of the foot.At this point, we make explicit an assumptionthat we believe aligns with Bodirsky et al (2005).Since silent elements, such as traces, do not anchoran elementary tree, they do not correspond to anode in the dependency structure.6.1 Why the Gap-Degree Remains ?
1Recall that in example (8), each of the two compo-nents in the example MC-TAG has a foot withphonological material on both sides, giving rise totwo gaps, and a third gap is created via the materialbetween the two components.
In contrast, in theMC-TAG sets shown in Table 2, the auxiliary treeshave pronounced material only on one side of thefoot node.
This eliminates the gap that would havearisen due to the interruption of material on the leftside of the foot from the right side of the foot as aresult of the pronounced material beneath the foot.The only way to obtain pronounced material onboth sides of the foot node is to adjoin a compo-nent into one of these auxiliary trees.
Interestingly,the set-local analyses (in which all components ofa set must combine with components of a single setvs.
tree-local MC-TAG) for clitic climbing andJapanese causatives do posit recursive componentsadjoining into other recursive components, butonly while maintaining all pronounced material onone side of the foot.
In the absence of a deriva-tional step resulting in pronounced material onanalysissourcephenomenon firstcomponentsecondcomponentMC-typeKrochand Joshi1986English extrapositionA man arrived who knew Mary.Auxiliary Auxiliary Tree-localFrank1992subj-aux inversion with raising verb constructionsDoes Gabriel seem to like gnocchi?Non-auxiliary Auxiliary Tree-localRyantandScheffler2006anaphoric bindingJohni likes himselfi.Auxiliary Non-auxiliary Tree-local +flexiblecompo-sitionJoshi,Kall-meyer, &Romero2003quantifier scope ambiguityAn FBI agent is spying on every professor.
(?y [prof(y) ?
?x [agent(x) ?
spy (x, y)] ]) OR(?x [agent(x) ?
?y [prof(y)?
spy (x, y)] ])Auxiliary Non-auxiliary Tree-local +flexiblecompo-sitionBleam1994clitic climbing in RomanceMari telo    quiere permitir ver.Mari you-it wants to permit to see?Mari wants to permit you to see it.
?Auxiliary Non-auxiliary Set-localHeycock1986Japanese causativesWatasi-wa Mitiko-ni Taroo-o ik ?ase (?sase) ?ta.I           TOP        DAT        ACC go  ?CS   ?CS   ?PST?I made Mitiko make Taroo go.
?Auxiliary Auxiliary Set-localNP*eiS'NPeiIseemV I'*VPI'doesiCNP*himselfNPS*NP[+wh]   knew NPS'iSNPeS* ViVPSV *-aseViVIteiI *IVpermitirVPVPeiS*everyDET NNP6both sides of a foot, the only remaining possiblegap is that which arises from pronounced materialthat appears between the two components.Note that the observation about the position ofpronounced material applies only to auxiliary treesin sets with multiple components.
That is, auxil-iary trees that comprise a singleton set may stillhave pronounced material on both sides of the foot.6.2 Why the Structures Remain Well-NestedSince Kuhlmann and M?hl (2006) show that evena MC-TAG that allows only non-auxiliary trees inMC-sets will expand the drawings to include non-well-nested drawings, there is no way to pare backthe MC-TAG via restrictions on the types of treesallowed in MC-sets so as to avoid interleaving.Recall that to satisfy the definition of interleav-ing, it is necessary that the two MC-sets are not inany dominance relation in the derivation structure.In Kuhlmann and M?hl?s example, this is satisfiedbecause the two MC-sets are sisters in the deriva-tion; they combine into the same tree.
In the lin-guistic analyses considered here, no more than oneMC-set combines into the same tree.
For tree-localMC-TAG, it appears to be sufficient to bar morethan one MC-set from combining into a single tree.7 MC-TAG and ScramblingIn subordinate clauses in Standard German, thecanonical order of verbs and their subject argu-ments is a nested dependency order.
However,other orderings are also possible.
For example, inthe case of a clause-final cluster of three verbs, thecanonical order is as given in (13), NP1NP2NP3V3V2V1, but all the other permutations of the NParguments are also possible orderings.
All six per-mutations of the NPs can be derived via tree-localMC-TAG.
From the graph-model perspectiveadopted here, this is unsurprising: All the se-quences are well-nested and have gap degree ?
1.
(13)   NP1   NP2   NP3   V3                 V2       V1.
.
.
Hans Peter Marie schwimmen lassen sah.
.
.
Hans Peter Marie swim            make  saw?
.
.
.
Hans saw Peter make Marie swim.
?However, with an additional level of embed-ding, i.e.
four NPs and four verbs, the situation isdifferent, both linguistically and formally.
Ourfocus is on making the formal predictions of a lin-guistically informed system precise.
We start witha tree-local MC-TAG that is restricted to linguisti-cally motivated tree-sets and to semantically co-herent derivations.
The former linguistic restric-tion is illustrated in (14), the possible tree-sets an-chored by a verb that takes a VP argument.
Thelatter linguistic restriction is that there is no seman-tic feature clash at any stages of the derivation: theVP argument of Vi must be associated with Vi+1.
(14) ?
?Single and two-component sets for ViAs MC-TAG is enriched in various ways (by al-lowing flexible composition, multiple adjoining atthe same node, and/or components from the sameMC-set to target the same node), all 24 orderingswhere the nouns permute while the verbs remainfixed can be derived.
(We are aware that Germanalso allows verbs to scramble.)
Taking the depend-ency structures of these sequences to consist of anedge from each verb Vi to its subject NP and to thehead of its argument VP, Vi+1, we can compare thepredictions of the graph drawing approach and theMC-TAG approach.
It turns out that the permuta-tions of gap degree ?
1 and those of gap-degree 2do not align in an obvious way with particular en-richments.
For example, NP4NP2NP3NP1V4V3V2V1(gap degree 2) is derivable via basic tree-local MC-TAG, but NP3NP1NP4NP2V4V3V2V1 andNP3NP2NP4NP1V4V3V2V1 (also gap degree 2) ap-pear to require both flexible composition and al-lowing components from the same MC-set to tar-get the same node.8 Conclusion and Future WorkThis paper reviews the connection established inprevious work between TAG derivations andmodel-theoretic graph drawings, i.e.
well-nesteddependency structures of gap degree ?
1, and re-ports several observations that build on this work.First, additional evidence of the linguistic rele-vance of the gap degree measure is given.
The gapdegree measure can distinguish wh-movement thatis assumed to be generally disallowed from wh-movement that is permitted in natural language.Second, we observe that the graph drawings in-NPiNP VP(i+1)*VPVPVP(e)i ViNPiNP VP(i+1)*VP*VPVPVP(e)i Vi7duced by MC-TAGs used in linguistic analysescontinue to fall within the class of well-nested, gapdegree ?
1 dependency structures.
WhileKuhlmann and M?hl (2006) show that MC-TAGsin which each set has a single lexical anchor in-duce graph drawings that are outside this class, thisextra complexity in the dependency structures doesnot appear to be utilized.
Even for the crucial casesused to argue for MC-extensions, MC-TAG is usedin a manner requiring less complexity than theformal system allows.
Examining these particulargrammars lays the groundwork for identifying anatural class of MC-TAG grammars whose deriva-tions correspond to well-nested graph drawings ofgap degree ?
1.
Specifically, the observations sug-gest the class to be MC-TAGs in which 1) compo-nent sets have up to two members, 2) auxiliarytrees that are members of non-singleton MC-setshave pronounced material on only one side of thefoot, whether the auxiliary member is derived ornot, and 3) up to one MC-set may combine intoeach tree.
Though these constraints appears stipu-lative from a formal perspective, a preliminarylook suggests that natural language will not requiretheir violation.
That is, we may find linguistic jus-tification for these constraints.
Lastly, in ongoingwork, we explore how allowing flexible composi-tion and multiple adjoining enables MC-TAGs toderive a range of scrambling patterns.ReferencesTonia Bleam.
2000.
Clitic climbing and the power ofTree Adjoining Grammar.
In A. Abeill?
and O. Ram-bow (eds.
), Tree Adjoining Grammars: formalisms,linguistic analysis and processing.
Stanford: CSLIPublications, 193-220.
(written in 1994).Manuel Bodirsky, Marco Kuhlmann, and Mathias M?hl.2005.
Well-nested drawings as models of syntacticstructure.
In 10th Conference of Formal Grammarand 9th Meeting on Mathematics of Language (FG-MoL), Edinburgh, UK.Robert Frank.
1992.
Syntactic Locality and Tree Adjoin-ing Grammar: grammatical, acquisition, and proc-essing perspectives.
PhD dissertation, University ofPennsylvania, Philadelphia, USA.Robert Frank.
2002.
Phrase Structure Composition andSyntactic Dependencies.
MIT Press.Jan Haji?, Barbora Vidova Hladka, Jarmila Panevov?,Eva Haji?ov?, Petr Sgall, and Petr Pajas.
2001.
Pra-gue Dependency Treebank 1.0.
LDC, 2001T10.Caroline Heycock.
1986.
The structure of the Japanesecausative.
Technical Report MS-CIS-87-55, Univer-sity of Pennsylvania.Aravind K. Joshi, Laura Kallmeyer, and Maribel Ro-mero.
2003.
Flexible composition in LTAG: quanti-fier scope and inverse linking.
In H. Bunt and R.Muskens (eds.
), Computing Meaning 3.
Dordrecht:Kluwer.Aravind K. Joshi and Y. Schabes.
1997.
Tree-AdjoiningGrammars.
In G. Rozenberg and A. Salomaa (eds.
):Handbook of Formal Languages.
Berlin: Springer,69?123.Laura Kallmeyer and Aravind K. Joshi.
2003.
Factoringpredicate argument and scope semantics: underspeci-fied semantics with LTAG.
Research on Languageand Computation 1(1-2), 3-58.Anthony Kroch and Aravind K. Joshi.
1990.
Extraposi-tion in a Tree Adjoining Grammar.
In G. Huck andA.
Ojeda, eds., Syntax and Semantics: DiscontinuousConstituents, 107-149.Matthias Trautner Kromann.
2003.
The Danish Depend-ency Treebank and the DTAG treebank tool.
In 2ndWorkshop on Treebanks and Linguistic Theories(TLT), 217-220.Marco Kuhlmann and Mathias M?hl.
2006.
Extendedcross-serial dependencies in Tree Adjoining Gram-mars.
In Proceedings of the 8th International Work-shop on Tree Adjoining Grammar and Related For-malisms, Sydney, Australia, 121-126.Marco Kuhlmann and Mathias M?hl.
2007.
Mildly con-text-sensitive dependency languages.
In 45th AnnualMeeting of the Association for Computational Lin-guistics (ACL), Prague, Czech Republic.Marco Kuhlmann and Joakim Nivre.
2006.
Mildly non-projective dependency structures.
In 21st Interna-tional Conference on Computational Linguistics and44th Annual Meeting of the Association for Computa-tional Linguistics (COLING-ACL), Companion Vol-ume, Sydney, Australia.Mathias M?hl.
2006.
Drawings as Models of SyntacticStructure: Theory and Algorithms, Masters thesis,Saarland University, Saarbr?cken, Germany.Neville Ryant and Tatjana Scheffler.
2006.
Binding ofanaphors in LTAG.
In Proceedings of the 8th Interna-tional Workshop on Tree Adjoining Grammar andRelated Formalisms, Sydney, Australia, 65-72.David Weir.
1988.
Characterizing mildly context-sensitive grammar formalisms.
PhD dissertation,University of Pennsylvania, Philadelphia, USA.8
