BUILDRS: AN IMPLEMENTATION OFDR THEORY AND LFGHajime WadaDepartment  of LinguisticsThe University of Texas  at AustinNicholas AsherDepartment  of Phi losophyCenter for Cognit ive ScienceThe University of Texas  at AustinThis paper examines a particular PROLOG implementation ofDiscourse Representation theory (DR theory) constructed atthe University of Texas.
The implementation also contains aLexical Functional Grammar parser that provides f-structures;these f-structures are then translated into the semanticrepresentations posited by DR theory, structures which areknown as Discourse Representation Structures (DRSs).
Ourprogram handles some linguistically interesting phenomena inEnglish such as (i) scope ambiguities of singular quantifiers, (if)functional control phenomena, and (iii) long distancedependencies.
Finally, we have implemented an algorithm toranaphora resolution.
Our goal is to use purely linguisticallyavailable information in constructing a semantic representationof discourse as far as is feasible and to forego appeals to worldknowledge.._\[Dtroduction ?
DR TheoryDR theory, versions of which have been developedindependently by Hans Kamp (1981) and Irene Helm (1982),has several motivations, but certainly one ot the principal oneswas to examine the anaphodc properties of detinite andindefinite noun phrases.
Out of this study emerged a noveltheory o1 indefinites and definites that has provided, amongother things, a semantic theory of intersentential anaphora.One of our goals in implementing DR theory for a fragment olEnglish was to investigate how a purely linguistic theory otanaphora might help in the real time processing ol anaphors byautomated natural language understanding systems.DR theory has two basic components: the DRSconstruction algorithm and the cor rec tnessdefinition.
The DRS construction algorithm is a mapping fromnatural language discourses to DRSs, the semanticrepresentations that the theory posits.
The correctnessdefinition maps DRSs into models that (i) provide the truthconditions of one sentence in isolation and (if) show how thecontent of one sentence contributes to the content of theantecedent discourse it follows.
We have implemented only afragment of the presently developed DRS constructionalgorithm.We want to argue that for philosophical reasons it makeslittle sense to try to implement on a computer not only the DRSconstruction algorithm but also the correctness definition.
Tounderstand why we hold this view, however, we have to provideat least a very sketchy overview of these two components ot DRtheory.The language in which DRSs are described is to begin withquite simple.
Its vocabulary consists of a set of individualreference markers (x, y, z, x 1, etc.
), a set of mental statemarkers (p, Pl ,P2, etc.
), and a set of n-ary predicates, forwhich English nouns, verbs and intersective adjectives willserve fine.
We also have certain logical symbols in the DRSlanguage: --~, v, ==~.Next, we define conditions and DRSs by a simultaneousrecursion.
(I will use boldfaced letters of the appropriate type asmetalinguistic variables for relerence markers.
)Definition 1:1.
Suppose that q) is an n-ary predicate and x 1 .
.
.
.
.
x nare reference markers.
Then fi)(Xl, .
.
.
.
Xn) is an atomiccondition.2.
Suppose x 1 and x 2 are reference markers.
Then x I =x 2 is an atomic condition.3.
A DRS K is a pair of sets <U, Con>, where U is a set ofreference markers and Con a set of conditions.4.
Let K 1 and K 2 be DRSs and let p be a mental statereference marker.
Then .~K1, K 1 vK2, K 1 :=~ K2, and p:K 1are conditions.This framework yields a treatment of indefinite and definitenoun phrases that has made an important contribution tounderstanding the anaphodc and "pseudo referential" behaviorof indefinites.
Let us first briefly sketch the theory's treatmentof indefinites.
When processed by the DRS constructionalgorithm, a singular indefinite introduces into a DRS areference marker that functions essentially as a free variable.This reference marker can be identified with other referencemarkers that are introduced by anaphoric pronouns atpotentially unlimited distances from the original indefinite NP.Indefiniles get their existential force by the way a DRS isassigned truth conditions.To take a simple example thai uses only indefinites andanaphoric pronouns, the DRS construction algorithm yields theDRS in (2) for(1) A man loves a woman.
She is beautiful.
(2) <1> x,<2> y, <5> z<1> \[loves a woman(x)\]<2> woman(y)<3> loves(x, y)<4> \[She is beautiful\]<5> z = y<5> \[is beautiful(z)\]<6> beautiful(z)The informal interpretation of (2) is that there are three objects(corresponding to x, y and z) that have the respective propertiesascribed to x, y and z in the conditions <1> - <6>.
The numbersto the left of the reference markers and conditions indicate howthe construction algorithm might proceed from step to step in atop down algorithm on some sort of standard parse tree like anLFG c-structure.
Initially, we begin with the unanalyzedsentence within a DRS K. The subject N(oun) P(hrase) node inthe parse tree introduces a condition into the DRS, thecondition man(x)', into Con K and a reference marker x into U K,\]-hat exhausts the content of the indefinite noun phrase.
The540V(erb) P(hrase) node introduces an intermediate step in theDRS that is further broken down by the algorithm as it goesdown the parse tree; we shall write this intermediate step as anas yet not fully analyzed condition -- 'loves a woman(x)'.
Thereference marker introduced by the NP already processed (thesubject NP) is an argument of that condition.
The unanalyzedcondition is then broken down by the algorithm as it goes downthe parse tree; the NP that is a consitluent of the VP introducesanother reference marker and a condition 'woman(y)' into K; andfinally, the verb itself inlroduces a condition into Con K,After step <3>, the algorithm has finished with the firstsentence in (1).
It now processes the second sentence, usingthe background DRS constructed from the first as a context forthe interpretation of the new input.
The subject noun phrase ofthe second sentence is simply an anaphoric pronoun.
Becausethe pronoun is an NP, the algorithm requires that it introduce anew reference marker into the DRS.
Because the pronoun isanaphoric, the reference marker it introduces must be linked tosome already introduced reference marker in U K. Thus, U Kprovides a set of contextually "discourse individuals" (objectsthat have been talked about in the discourse) that can bereferred to by NPs in subsequent discourse.
Once, thealgorithm is finished with 'she', the rest of the second sentenceis processed in the same sequence of steps used to processthe first.Our implementation in general follows the left to rightprocess described above.
Using f-structures as inputs to theconstruction algorithm allows us to bypass the steps that areenclosed within the square brackets, since we have alreadyavailable in the f-structure the basio predicate argumentstructure of this simple sentence.
Tile f-structures play a moreimportant role in more complex sentences like those involvingrelative clauses; there they make transparent he way in whichthe predicate argument structure of subordinate clauses fitstogether with the predicate argument structure of the mainclause.~s~.tibJHLv_.The simple example in (1) already introduces the problem ofanaphoric coreference.
DR theory, like all linguistic theories,provides constraints on what are the possible, antecedent,coreferential NPs for an anaphoric, pronominal NP.
We shall saythat a reference marker u introduced by an antecedent NP canbe linked anaphorically to a reference marker v introduced by apronominal NPjust in case u is accessible to v. u is accessibleto v just in case <u,v> belongs to the transitive closure of therelation that is defined as follows: a) u has already beenintroduced into U K prior to the introduction of v, b) u e UK,,and there is a K" such that K' ~ K is a condition in K", c) Koccurs as a component of some condition in K' and u hasalready been introduced into U K, prior to the introduclion of lhecondition containing K. 1 Our implementation uses this notionof accessibility to constrain tile process of anaphora resolution.While singular indefinile NPs simply introduce, whenprocessed by the construction algorithm, reference markersand atomic conditions into the DRS, "quantificational" NPs(those involving determiners like 'every', 'each', and also 'many')will introduce logically complex conditions (see Kamp, (1981),Frey &Kamp (1985)for details).
(3) Eveiy man loves a womanyields on the "default" left-right scope reading the following DRS:14)  r - - .
.
.
.
- - - -:=> woman(x2) II .. loves(x1, x2)As we shall see shorlly, the truth conditions of such a DRSare essentially this: pick any man; then there's a woman thatloves him.
Ttle DRS in (4) differs from the one that is the resultof processing the first sentence in (1), in that the detern'liner'every' makes a decidedly different contribution from a pureindefinite.
'Every' introduces a logically complex structurebetween two DRSs; it corresponds in first order logic to auniversal conditional.Our implementation also countenances relative clausesand the truth functional seniential conjunctions that correspondto the DRS connectives already mentioned.
Given tile originaldesign of the algorithm reproduced in our implementation andtile notion of accessibilty, the following two sentences turn outto have almost exactly the same DRS:(5) Every farmer who owns a donkey beats it.
(6) If a farmer owns a donkey he beats it.The DRS in (7) is what (5) yields.
The DRS for (6) is almostidentical, except that the DRS in the consequent of theconditional :=~ contains two new reference markers in itsuniverse z and w and the conditions z = x 1 and w = x 2.
(7) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
...... 1 \[i; 1 n n/xl) Id?nkey(x2) /The construction algorithm thus shows how to arrive by acompletely effective means at the same DRS and the same truthconditions for (5) and (6) and in so doing solves a longstandingpuzzle concerning the "donkey sentences."
See Kamp (1981),Ideim (1982).So far we have seen only left-rlght scope assignments tosentences with indefinites and true quantificational NPs, But ofcourse, there are olher possible scope assignments, which ourimplementation also generates.
We generate tile left-rightscope assignment as a default, but our implementation ca.generate the other scope assignments as weN.
Sometimesthese are needed in resolving anaphoric links, For instance,consider the discourse in (8):(8) Every man loves a woman, She is beautiful.On the default left-right scope assignment, (8) yields:(9-a).
.
.
.
.
Z. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.L bves x ~..~1_~,~z is beautifulz=?which is a DRS that is incoherent; z cannot be identified with areference marker, since neither x 1 nor x 2 are accessible to z.
If'a woman' takes wide scope, however, an anaphoric link ispossible, and it is one that our implementation finds:(9-b)I x2, z. .
.
.
,ar n;x"2  .
.
.
.
.
.
.
.
.
.
- \ [ 2XZ~aU .
.
.
.
.
.
.man(x1) tiful ~ I?ves(xl x2)Z=X2Definite noun phrases, which include definite descriptions anddirectly referential expressions like proper names,demonstratives, and indexicals, have a quite complex role in DRtheory.
All definiles generate adequacy  or fe l i c i tyconditions for discourses containing them When a definite NP541is used in a discourse, the discourse will be adequate if and onlyif the recipient has sufficient information given by the contextand background assumptions to link the reference markerintroduced with some contextually available individual and/orsome reference marker already introduced in thediscourse.This thesis is developed and defended at length in Helm(1982).
If such a link is not possible, then the discourse as awhole may lack a determinate truth value.
The intuilion behindthis requirement is that whenever the speaker correctly employsa definite NP, he has a "definite individual in mind" that therecipient must in at least some minimal way be able to isolate.These claims lead to a special role for definites in theconstruction algorithm.
They always have in effect wide scopeover those logical operators that serve as barriers to anaphoriclinks, since their denotation must, if the felicity conditions are tobe accomodated, already have been introduced in thediscourse.
To take an example, consider the case of a propername.
Insofar as a proper name is a definite, the recipient of anutterance containing one must have some information enablinghim to link the reference marker introduced with the appropriate,contextually available individual.
The sort of information at issuemay be often quite minimal and the set of contextually availableindividuals quite large (it includes at least potentially everythingthat can be named).
But once this link is made, the logicalbarriers to further anaphoric links between the referencemarkers introduced by name and those introduced by anaphoricpronouns that underlie the constraint of accessibility have noeffect.
That is, the reference marker introduced by a propername is always accessible to a subsequently introducedreference marker.
The reason for explaining the way definiteswork is to make a case for distinguishing reference markersintroduced by definites from those introduced by indefinites aswe have done in our implementation._Correc(ness D ~The model theory or cor rectness  def in i t ion for theextensional fragment surveyed is very simple.
We define amodel for the DRS "language" to be an ordered pair <D, \[\]>,where D is a set of entities (the "domain" of tile model), and \[\] aninterpretation function thai takes n-ary predicates into sets el n-tuples in ~ (w(Dn)).
Further we define an embeddingfunction f for a DRS K in a model M to be a map from referencemarkers in U K into the domain ot M. We will also define anextension of an embedding tunction t to an embeddingfunction g for a DRS K 1 to be the function: g: (Dora(f) u UK1 )---) D. We shall abbreviate 'g extends t to an embedding of Kas 'f ~K g" We now define, again by simultaneous recursion,the notions of a proper embedding of a DRS K in the modelM and the satisfaction of a condition C in a DRS K in themodel M by an embedding function.
I will abbreviate 'f is aproper embedding of K in M' by 'If,K\] M = 1' and 'the model Msatisfies C under an embeddin 9 function f for K' as M I= f,K C'.Definition 2: Let x I .
.
.
.
.
x n be reference markers,an n-ary DRS predicate, K, K 1 and K 2 DRSs, and let IV\] M bethe extension of ~ in M. Then1.
If q) is an atomic condition of the form ~(X l ,  .
.
.
.
Xn) ,M I=f,K (p iff <f(x 1 .
.
.
.
.
f(xn)> ~ \[~\]M.2.
Ifq) is an atomic condition of the !orm x I = x 2 , M I=f,K q) iftf(xl) = f(x2).5423.
If (p ~ Con K is a complex condition of the form .-, K1, thenM I=f,K ~ iff -,3g ;2K1 fig, K1\]f M = 14.
If~p ~ Con K is a complex condition of the form K 1 v K2,M \[= I,K ~ iff 39 ;~K1 f \[g, K1\]f M = 1 v 3g ;~K2 I \[g,K2\]f M = 15, If q) e Con K is a complex condition of the form K 1 ~ K2,then M J= f, Krp iff'V'g~__.K1 f fig,K1\]/M = 1 -~ 3h~__K2 g\[h,K2\]gM =1)6.
\[f,K\]gM = 1 iff f is an embedding function such that: (i) g ~ f;(it) for every condition ~ in Con K M I=f ~; (iii) if K has an externalanchor A, then A ..~..f.7.
If,K\] M -- 1 iff \[f,K\]A M = 1 where A is the empty function.
2A ORS K is true in a model M just in case there is a properembedding of K in MFrom the standpoint of the theory of informationprocessing, a DRS represents the resuff of a recipient'sprocessing of a verbal input.
The DRS then as it standscaptures the information thal the recipient has gleaned from thesentence.
The correctness definition evatuates thatinformation content.
The two components of DR theory havethus distinctly different tasks: anaphora resolution and otherphenomena like scope disambiguation that are necessary tordiscourse understanding must take place at the level of DRSconstruction; the assignment of truth conditions is provided bythe correctness definition.
We want to emphasize that themapping characterizing the correctness definition is notsomething that the recipient in general has access to or canconstruct.
For a knowledge of such a mapping involves at leaston occasion the knowledge of what are the denotations ofdirectly referential expressions (since these provide theconstraints that we have called external anchors on theembedding functions); and as almost two decades ofphilosophical argument have made plain, the recipient of adiscourse containing directly referential expressions need netand generally does net know in any interesting sense what thedenotations of those expressions are in order for the discourseto be comprehensible to him.
In general, we know that we mustdistinguish between the truth conditional content of anexpression and the content of the expression that is available tothe interpreter.
This is a thesis that follows directly fromaccepting the basic principles of the theory el direct reference,which DR theory at least to some extent incorporates.
Soinsofar as we wish to model or to mimick the way humansprocess verbal inputs, then we must limit ourselves inimplementations of natural language understanding to the(nformation provided by the DRS construction algorithm.In effect this is a useful constraint, for it forces the DRtheoretician to make a principled division of labor betweenthese two components of the theory.
It also allows us toprovide a much more clean cut approach to the implementationof semantic theories than is possible with theories that do netinvite this sort of division.
For we are able to separate tasks ofdiscourse understanding, which, one feels, ought to be tasksthat can be accomplished by means of effective algorithms, fromthe evaluation of a discourse at a set of indices-- which ingeneral has no effective solution.
This may be only a small andrather obvious, philosophical point, but it is one which is worthkeeping in mind when one is trying to come upn with tractableanalyses of various aspects of natural language understanding..The Actual Implementation : BUILDRSThe implementation we have constructed has threedistinct modules-- an LFG parser, a DRS constructor, and finallyan anaphoric resolution component.
The inputs to BUILDRSare multisentential discourses, and the odl~uts are scopedisambiguated semantic structures, i.e., DRSs, with referencemarkers introduced by anaphoric pronouns identitifed with theappropriate reference marker introduced by some previouslyprocessed NP.The LFG parser of the kind used in BUILDRS has alreadybeen discussed in detail by Frey and Reyfe (1983), Frey (1985)and Reyle (1985).
We have agumented their LFG parser tohandle compound sentences (those containing conjunctionslike 'and', 'or' or 'if .
.
.
.
then').
The parser provides a separate f-structure for each of the sentential components of a compoundsentence.
These then serve as arguments to connectives.
Wealso allow for the possibility of several scope assignments, whenmore than one operator is involved.
We have also augmentedthe parser by attaching to each value of the specifier in an f-structure a unique identifier; in view of the fact that the LFGparser is a front end to our DRS maker, the identifiers we havechosen are new reference markers (i.e., reference markers thathave not already appeared in previously processed discourse).Once the parser has linlshed its task, the DRS constructorbegins its work.
The overall structure of the constructor is similarto that of the informal algorithm discussed earlier and also isbased on the work of Frey (1985).
We first translate thesemantically relevant entries in SUBJ into DRS conditions andpartial DRS structures, then those in OBJ and finally PRED ofthe f-structure as a whole (the main verb) is translated into a DRScondition.
The translations forlhe lexical items in an f-structureare stored in a separate database and can be easily augmentedas the grammar and the lexicon grow.
The translations of thedeterminers or specifiers in an f-structure yield structures thatwe shall call partial DRSs.
In the fragment reated by BUILDRS 3,we deal only with singular determiners; 'a' (or its equivalents'some' and the like) and 'every' introduce different partial DRSs.They have the form of a triplet.
In the case of 'every' it is <x,~LP;LQ, (\[\] =~((\[x\],\[P\]), (\[\] \[Q\]))>, where x is the reference markerintroduced by the specifier in the fostructure, P and Q arevariables for sets of properties (i.e.
sets of conditions), and thestructure (\[\] :=~(\[x\],\[P\]), ( [\],\[Q\])) is the schematic form of a DRS.In the case of 'a' it is <x, ~,P;LQ, (\[x\],\[P, Q\])>.
The translations ofa common noun phrase are also triplets, but they do not containabstraction over properties or property sets.
Instead, theysupply the properties that are to be filled in for P and Q.
So, forinstance, the translation for the predicate 'man' is the triple < ;Lx,0, \[man(x)\]>.
Again following Frey (1985), we shall call suchtriples predicative DRSs.
We have a special translation forthe main predicate of the sentence's f-structure; it is an orderedtriple of the form <0.0.
#fX.
Y~>.
X and Y are to be filled ineventually by the reference markers introduced by thespecifiers in SUBJ and OBJ respectively.
The translations ofthe entries in the f-structures are Ihen combined together bymeans of a process called conversion.
Conversion is like theapplication of a ;L-abstract to an argument.
Following thegeneral path of the construction algorithm, we begin byintroducing a partial DRS with the specifier of SUBJ.
Supposefor example that SUBJ contains 'every' as a specifier.
Itstranslation is the partial DRS (i) <x, ~LP;LQ, (\[\] =~((\[x\],\[P\]), ( [\]\[Q\])))>.
The common noun phrase in SUBJ (the head noun +any modifiers) yields a predicative DRS, which will contain acomplex property if the common noun phrase is itself complex--i.e.
contains modifiers like possessives or relative clauses.
So ingeneral it will be of the form (ii)<Xx, 0, (UCN, CONcN\[x\])> ,where UCN is the set of reference markers and CONcN\[x \] is theset of conditions derived from the common noun phrase andwhere 'CONcN\[x \]' denotes the fact that at least one condition inCONcN contains 'x' as an argument.
Converting (i) with (ii)yields the partial DRS <x, XQ, (\[\] =~((\[x u UCN\],\[CONcN\[x/x\]\]),(\[\], \[Q\])))>.
'ix/x\]' denotes the replacement of every occurrenceof 'x' in the conditions in CONcN with the reference marker x.The process of conversion turns to OBJ and processes itin the same way.
This yields another partial DRS that, like theone above, contains a properly abstract,e.g., <y, ~.Q, q)>.
Thefirst strategy is to construct a DRS exhibiting the left-right scopeof quantifiers as they occur in the discourse.
So in this case, wefirst combine the partial DRS from OBJ with the translation of themain predicate, which is of the form <0, 0, ~(X, Y)>.
Thestructure <y, XQ, fl)> combines with <0, 0, ~(X, Y)> to yield acomplete DRS of the form <0, 0, ~'(X)>.
?o'(X) is the result ofthe conversion of the partial DHS ?o with the predicative DRS <0,0, ~(X,y)>.
Finally, conversion is applied again using the partialDRS derived from SUB& yielding another complete DRS andthe desired result.
To get alernative scope assignments forquantitiers, the program backtracks and tries to do conversion ina different way.To take an example, let us see how the DRS constructorwould handle the sentence, 'every man loves a woman.'
Theoutput of the parser yields the structure:(lO)"SUBJ ,= FSPEC= 'every' 1|GEN= masc J IPRED= 'man' LNUM = sgOBJ = rSPEC ='a' "1/GEN = fern |/NUM = sg //PRED = 'woman~PRED = 'love <(SUBJ)(OBJ)>'The DRS constructor yields the partial DRS (i) <u 1, ~,O, (\[\]((\[Ul\],\[man(ul)\]), (\[\],\[Q\])))> for SUBJ and the partial DRS (if)<u2, ;LQ, (\[u2\], \[woman(u2), Q\])> for OBJ.
The translation ofthe main PRED of the whole f-structure is: (iii) Ioves(X,Y).Conversion of (if) wilh (iii) yields the complete DRS (iv): <0, 0,\[u2\] \[woman(u2), loves(X, u2)\]>, and the conversion of (i) with(iv) yields < O, 0, (\[\] =~.
((\[Ul\], \[man(ul)\]), (\[u2\], \[woman(u2),loves(u1, u2)\])))>, which is the desired result.
To get thealternative scope reading, the successive conversion of (lit) with(i) and then with (if) yields the DRS: <0, 0, (\[u2\],\[woman(u2), =~((lull,\[man(u1)\]), (if,\[loves(u1, u2)\])\])>.This is the basic part of the DRS constructor.
The twoembellishments we have made to this basic part concern thetreatment of relatives and possessives.
The treatments ofpossessives and relatives are quite similar, so we shall describehere just one-- the treatment of relative clauses.
The syntactictreatment of an NP containing a relative clause of the form 'DETN that S' yields following kind of l-structure: 4(11) \[~ PEC= Det-x \ ]1  RED= N ADJ= FSUBJ= pro-xLPRED= p JJNote that pro carries an identifier identical to that of thespecifier of the head.Suppose that the translation of the,specifier introduces anew reference marker x.
Then the translation of 'pro' yields thefollowing partial DRS: (i) <x, XP, (\[\],\[P\])>.
Since that is all that isin the SUBJ position of RADJ, we get (i) as the partial DRSassociated with SUBJ.
Now we use conversion to construct thepartial DRS for ?0 (call this (if)), To get the default scope543assignment we convert (ii) with the translation for J3 and thenconvert that result again with (i).
The result is a quasi-completeDRS o1 the form (iv) <0, 0, (URADJ, COnRAD j)> , where URADJis the set of reference markers and COnRADJ is the set ofconditions derived from the processing of RADJ.
Quasi-complete DRSs are distinguished from complete DRSs, in thatthey are derived from f-structures containing 'pro'.
To use (iv) inbuilding up the partial DRS for the main NP, the programconverts the structure for RADJ (iv) into a ~.-abstract erm-- viz.
(v) <0, ;LP, (URADJ, \[COnRADJ, P\])>.
We are now abIe tocombine (v) with the translation of PRED 1o get the translation ofa complex common noun phrase-- viz.
(vi) <~.x, 0, (URADJ,\[COnRAD j, N(x)\])>.
Now this predicative DRS may be combinedwith the partial DRS produced by the specifier in the usual wayto yield the partial DRS for the complete NP.Processing relative clauses in this way ailows us to handlelong distance dependencies.
Consider the sentence,(12) A dog that Mary persuaded Adrienne to expect Fred 1o buysleeps.~12') _ -.
:ISUBJ = |SPEC = a!PRED =dogRADJ= ~'-SUBJ =PRED -MaryI OBJ =PRED = Adrienne .
.
.
.
.
.
.
,IXCOMP=rSU~ 4 \ ] ;  .
.
.
.
.
.
.
.
.
.
.
,,.'
!| /XCOMP ~ISUBJ =PRED =Fred .
.
.
.
.
.JI I IOBJ -Pro' | low/ LPRED `= :e~;ct ~;B'3)~'XE;M~:(OBJ:LPRED - 'persuade<(SUBJ)(OBJ)(XCOMP)>'iPRED='s~eeps<(SUBJ)> 'The DRS constructor begins with the specifier of the subjstructure in the usual fashion and then begins to construct thecommon noun phrase from the inside out.
So then we beginwith the innermost XCOMP.
Suppose that the specifierintroduces a reference marker x.
How, we have to ask, is thetranslation of an identification between two f-structures to bedone here?
We suppose that such an identification is verysimilar to pro and that it should be translaled in exactly the sameway.
So the translation and conversion of the innermostXCOMP yields the quasi-complete DRS <0, 0 (\[f\], \[buy(f,x)\])>.Now, we put this together with the translations of the nextinnermost SUBJ and OBJ and the translation of the predicate'expect' by conversion to get the following quasi-complete DRS<0, 0, (\[a, p\], \[expect(a,p), p: (\[f\], \[buy(f,x)\])\])>.
In a similarfashion we handle the construction of the entire RADJ;translation and conversion yield once again the quasi-DRS <0,0, (\[m, a, q\], \[persuade(m, a, q) q: (\[p\], \[expect(a,p), p: (\[f\],\[buy(f,x)\])\])\])>.
Now we convert the result into a ),.-abstractsince we are done with RADJ and we can now form the complexnoun phrase translation in the familiar fashion.Anaphora ResolutionThe pronoun resolver is the last module in the program andperhaps the most complex.
It operates on a complete DRS asan input and searches for conditions of the form 'pronoun(x) = *'.
The reason we need to operate on complete DRSs is that theconstraints on anaphoric relations imposed by the accessibililyrelation require that the logical structure of the sentence bedetermined.
The scope of various quantifiers and truthfunctional operators, however, is only fully determined at thelevel of complete DRSs.
Once a DRS for a discourse D hasbeen constructed, we go back and examine it-- looking forpronouns.
We also construct a database in which all thereference markers introduced in the DRS for D are stored in atree structure, the transitive closure of which delines theaccessibility relation on the universe of the DRS for D.Associated with each reference marker in this database are thegender and number of the NP that introduced it.
When we544come to a reference marker introduced by a pronoun, it willoccur on a certain node n m in the tree.
The reference markersaccessible to it are all those on nodes nj such that there is a pathfrom the root to n m passing through each nj.
At this point theprogram searches back to find the first available referencemarker whose associated gender and number agrees with thegender and number of the pronoun, and which satisfies certainother constraints that the pronoun might have.
One constraintis that a reference marker x in a DRS K introduced by a non-reflexive pronoun cannot be identified with a reference markery, if K already contains a condition of the form ~(x, y, z 1 .
.
.
.
.Zn).
The opposite is true for a reference marker introduced by areflexive pronoun.
If these constraints are met, the programthen replaces the condition 'pronoun(x) = *' with a condition ofthe form x = y, where y is the reference marker that was foundto match x.
Let us take a look at a typical example.
(13) A man loves a dog.
He feeds it.man(u1) //Ioves(u 1, u 2) |pronoun(x1) = ?
|pronoun(x2) = ?
JThe pronoun reserver now takes over and produces a treestructure of available dicourse referents as it goes through theCON list of the DRS.
In this case we have a simple tree of theform u 1 , <sing, masc>--- u 2 , <sing, neut>--- x 1 , <sing, masc> ---x 2, <sing, neut>.
As it is constructing such a tree, it also looksfor reference markers introduced by pronouns.
The condition'pronoun(x1) = "' tells it that x 1 is such a reference marker.
Atthis point, it now searches back for the reference marker in thedatabase with the appropriate number and gender.
Afterrewriting the conditions, the pronoun resolver prints out theDRS:(13') Ul, u2, Xl, x2'- ~t~ .
.
.
.
.dog(u2Jloves(u1, u2)pronoun(x1) = u 1pronoun(x2) = u 2There are, however, several problems with the resolver asdescribed so far.
One has to do with the anaphoric behavior ofdefinites.
Many English speakers find (14) acceptable but (15)bad.
(14) If Mary likes every one who likes John i, then she likes him i.
(15) *11 Mary likes every one who likes someonei, then she likeshim i.Definites like proper names seem 1o be available foranaphoric linkage despite the presence of logical barriers toanaphora.
But given our description of the pronoun resolver,we have not said anything that would distinguish the anaphoricbehavior of definites as opposed to indefinites.
We will followthe suggestion of Kamp (1983} and treat definites as havingwide scope over the logical barriers to anaphora available in thepresent fragment.
5 Thus, while the program constructs theaccessibility tree of reference markers, it places each referencemarker introduced by a proper name or other definite at the rootof the tree as well as in its normal position.
This creates a certainamount of duplication abut allows us to get the right reading for(14) while still getting the preferred "most recent NP" readingsfirst for the majority of anaphoric discourses.
Thus, our programsucceeds in finding the right DRS for (14) but predicts (15) to bebad.
It also predicts that a sentence like (16) will fail, whichseems marglnal to at least some English speakers.
(16) ?
If John likes heri, Fred likes Mary i.There are still more complexities, however, to the pronounresolver.
Though presently not implemented, we see a need todistinguish the resolution strategy for pronouns that occur insubordinate clauses from the standard one.
The need to dothis is made evident by the apparent acceptability of Bach-Peters type sentences with indefiniles like the one in (17):(17) A rnaniwho hardly knows herj loves a womanj who scornshim i.The processing story that must be told to make (17)acceptable is quite complex.
For instance, it cannot be thatrelative and other subordinate clauses are simply not processeduntil the main DRS is already completed.
Though thisprocessing strategy would in conjunction with our pronounresolver predict (17) to be good, it would also predict themarginal (18) as equally acceptable:{18) ?
A man who hardly knows herj loves Maryj.Pronouns in subordinate clauses seem to pose anadditional complication for the pronoun resolver.
We believepronouns in subordinate clauses should be handled slightlydifferently than those occurring in main clauses.
Like otherpronouns, when the resolver finds a pronoun in a subordinateclause ~ it attempts to find the appropriate antecedent.
But if itfails, it leaves the pronoun unresolved until it has processed therest of the DI:IS.
If it finds a condition later on that is linked to theNP in which o~ occurs, then it will try again to find antecedentsfor all the unresolved pronouns in cc This sort of strategywould make (17) acce~otable but not-118L which is what isdesired.
We hope to incorporate this into the pronoun resolversoon.The pronoun resolver is an attempt to take the resolution ofpronouns as far as is possible on a purely grammatical level.
Werealize that there are some cases where resolution depends onworld knowledge and guesses about the speaker's intentionsand the like.
But using world knowledge is oftencomputationaily expensive.
Our goal was to develop a programthat would minimize appeals to world knowledge in building asemantic representation of the content of a discourse andwould instead use to maximum advanlage the information thatcan be gleaned from the words themselves.,~efere noe.~.~her, N, (1982) "Truth C.onditions and SemanticCompetence: Toward a Theory of Linguistic Understanding,"Ph.D. dissertation, Yale University.Asher, N. (forthcoming) "Relief in DiscourseRepresentation Theory," Journal of Philosophical Logic.Chierchia & M. Rooth (1984) "Configurational Notions inDiscourse Representation Theory", in C. Jones & P. Sells, eds.Proceedings of N.E.L.S 14, Amherst GSLA (1984) pp.
49-63.Fenstad, J.E., P.K.
Halvorsen, T. Langholm and J. vanBenthem (1985) "Equations, Schemata and Siluations: Aframework for linguistic semantics", CSLI Repod, StanfordUniversity.Frey, W. (1985) "Syntax and Semantics of Some NounPhrases", in Laubsch (ed):Proceedings of the GermanWorkshop on Artificial Intelligence 1984.Frey, W. & H. Kamp (1985) "Distributive and CollectivePlurals", Talk Presented at Universily of Texas Conference onSyntax and Semantics, March 1985.Frey, W., and U. Reyle, (1983) "A PROLOGImplementation of Lexical Functional Grammar as a Base for aNatural Language Processing System."
in Proceedings of theFirst Meeting of the ACE Europe.Halvorsen, P. (1983) "Semantics for Lexical FunctionalGrammar" in Linguistic Inquiry Vol.
14, Num.
4.
MIT Press.Helm, I.
(1982) The semantics of Definite and IndefiniteNoun Phrases," Ph.D. dissertation, Univ.
of Mass.Johnson M. & E. Klein (1985) "A Declarative Form of DRTheory," talk presented at Summer Association of SymbolicLogic & Computational Logic Meeting, Stanford CA, 1985.Kamp, H (1985) "Context, Thought, and Communication,"in Proceedings of the Aristotelian Society 85, 239-261.Kamp, H. (1981) "A Theory of Truth and SemanticRepresentation", in Groenendijk, J., Janssen, Th.
& Stokhof,M., eds., Formal Methods in the Study of Language,Mathematisch Centrum Tracts, Amsterdam.Reyle, U.
(1985) "Grammatical Functions, Quantificationand Discourse Referents."
in Proceedings of the NinthInternational Joint Conference on Artificial Intelligence.
829-831.N 0 r E51We should note that there are other ways of definingaccessibility.
One might be tempted to do it wholly in terms of thepossibility of assigning the DRS containing the Identificationcoherent truth conditions.
Chierchia and Rooth (1984)investigate this possibility.
We do not find their approachcomputationally useful, however, insofar as checking for lruthconditional consistency is any more expensive than following lheaccessibility constraints on DRSs.2The truth conditions for attitude reports are too complex togive here.
For details see Asher (forthcoming), Kamp (1985).3We have plans to expand tile constructor to handle plurals aswell.4The other alternative of course is that the pro occur in theobject position.
Our algorithm handles that similarly.5The question is more delicate within the context ofpropositional attitude verbs.
\]here it seems not all definitesfunction in the same way.
Some permit anaphoric linkage acrosspropositional attitude contexts and some do not.545
