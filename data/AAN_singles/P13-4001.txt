Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 1?6,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsWebAnno: A Flexible, Web-based and Visually SupportedSystem for Distributed AnnotationsSeid Muhie Yimam1,3 Iryna Gurevych2,3 Richard Eckart de Castilho2 Chris Biemann1(1) FG Language Technology, Dept.
of Computer Science, Technische Universita?t Darmstadt(2) Ubiquitous Knowledge Processing Lab (UKP-TUDA)Dept.
of Computer Science, Technische Universita?t Darmstadt(3) Ubiquitous Knowledge Processing Lab (UKP-DIPF)German Institute for Educational Research and Educational Informationhttp://www.ukp.tu-darmstadt.deAbstractWe present WebAnno, a general pur-pose web-based annotation tool for a widerange of linguistic annotations.
Web-Anno offers annotation project manage-ment, freely configurable tagsets and themanagement of users in different roles.WebAnno uses modern web technologyfor visualizing and editing annotations ina web browser.
It supports arbitrarilylarge documents, pluggable import/exportfilters, the curation of annotations acrossvarious users, and an interface to farmingout annotations to a crowdsourcing plat-form.
Currently WebAnno allows part-of-speech, named entity, dependency parsingand co-reference chain annotations.
Thearchitecture design allows adding addi-tional modes of visualization and editing,when new kinds of annotations are to besupported.1 IntroductionThe creation of training data precedes any sta-tistical approach to natural language processing(NLP).
Linguistic annotation is a process wherebylinguistic information is added to a document,such as part-of-speech, lemmata, named entities,or dependency relations.
In the past, platformsfor linguistic annotations were mostly developedad-hoc for the given annotation task at hand, usedproprietary formats for data exchange, or requiredlocal installation effort.
We present WebAnno, abrowser-based tool that is immediately usable byany annotator with internet access.
It supports an-notation on a variety of linguistic levels (called an-notation layers in the remainder), is interoperablewith a variety of data formats, supports annotationproject management such as user management, of-fers an adjudication interface, and provides qual-ity management using inter-annotator agreement.Furthermore, an interface to crowdsourcing plat-forms enables scaling out simple annotation tasksto a large numbers of micro-workers.
The addedvalue of WebAnno, as compared to previous an-notation tools, is on the one hand its web-basedinterface targeted at skilled as well as unskilledannotators, which unlocks a potentially very largeworkforce.
On the other hand, it is the support forquality control, annotator management, and adju-dication/curation, which lowers the entrance bar-rier for new annotation projects.
We created Web-Anno to fulfill the following requirements:?
Web-based: Distributed work, no installationeffort, increased availability.?
Interface to crowdsourcing: unlocking a verylarge distributed workforce.?
Quality and user management: Integrateddifferent user roles support (administra-tor, annotator, and curator), inter-annotatoragreement measurement, data curation, andprogress monitoring.?
Flexibility: Support of multiple annotationlayers, pluggable import and export formats,and extensibility to other front ends.?
Pre-annotated and un-annotated documents:supporting new annotations, as well as man-ual corrections of existing, possibly auto-matic annotations.?
Permissive open source: Usability of our toolin future projects without restrictions, underthe Apache 2.0 license.In the following section, we revisit related workon annotation tools, which only partially fulfill theaforementioned requirements.
In Section 3, the ar-chitecture as well as usage aspects of our tool arelined out.
The scope and functionality summary1of WebAnno is presented in Section 4.
Section 5elaborates on several use cases of WebAnno, andSection 6 concludes and gives an outlook to fur-ther directions.2 Related WorkGATE Teamware (Bontcheva et al 2010) is prob-ably the tool that closely matches our requirementsregarding quality management, annotator manage-ment, and support of a large set of annotation lay-ers and formats.
It is mostly web-based, but theannotation is carried out with locally downloadedsoftware.
An interface to crowdsourcing platformsis missing.
The GATE Teamware system is heav-ily targeted towards template-based informationextraction.
It sets a focus on the integration of au-tomatic annotation components rather than on theinterface for manual annotation.
Besides, the over-all application is rather complex for average users,requires considerable training and does not offeran alternative simplified interface as it would berequired for crowdsourcing.General-purpose annotation tools like MMAX2(Mu?ller and Strube, 2006) or WordFreak (Mortonand LaCivita, 2003) are not web-based and do notprovide annotation project management.
They arealso not sufficiently flexible regarding different an-notation layers.
The same holds for specializedtools for single annotation layers, which we can-not list here for the sake of brevity.With the brat rapid annotation tool (Stenetorpet al 2012), for the first time a web-based open-source annotation tool was introduced, which sup-ports collaborative annotation for multiple anno-tation layers simultaneously on a single copy ofthe document, and is based on a client-server ar-chitecture.
However, the current version of brathas limitations such as: (i) slowness for docu-ments of more than 100 sentences, (ii) limits re-garding file formats, (iii) web-based configurationof tagsets/tags is not possible and (iv) configuringthe display of multiple layers is not yet supported.While we use brat?s excellent visualization frontend in WebAnno, we decided to replace the serverlayer to support the user and quality management,and monitoring tools as well as to add the interfaceto crowdsourcing.3 System Architecture of WebAnnoThe overall architecture of WebAnno is depictedin Figure 1.
The modularity of the architecture,Figure 1: System architecture, organized in user,front end, back end and persistent data storage.which is mirrored in its open-source implementa-tion1, makes it possible to easily extend the tool oradd alternative user interfaces for annotation lay-ers that brat is less suited for, e.g.
for constituentstructure.
In Section 3.1, we illustrate how differ-ent user roles are provided with different graphicaluser interfaces, and show the expressiveness of theannotation model.
Section 3.2 elaborates on thefunctionality of the back end, and describes howdata is imported and exported, as well as our im-plementation of the persistent data storage.3.1 Front EndAll functionality of WebAnno is accessible viaa web browser.
For annotation and visualiza-tion of annotated documents, we adapted the bratrapid annotation tool.
Changes had to be made tomake brat interoperate with the Apache Wicket,on which WebAnno is built, and to better integrateinto the WebAnno experience.3.1.1 Project DefinitionThe definition and the monitoring of an annota-tion project is conducted by a project manager (cf.Figure 1) in a project definition form.
It supportscreating a project, loading un-annotated or pre-annotated documents in different formats2, addingannotator and curator users, defining tagsets, andconfiguring the annotation layers.
Only a projectmanager can administer a project.
Figure 2 illus-trates the project definition page with the tagseteditor highlighted.1Available for download at (this paper is based on v0.3.0):webanno.googlecode.com/2Formats: plain text, CoNLL (Nivre et al 2007), TCF(Heid et al 2010), UIMA XMI (Ferrucci and Lally, 2004)2Figure 2: The tagset editor on the project definition page3.1.2 AnnotationAnnotation is carried out with an adapted ver-sion of the brat editor, which communicates withthe server via Ajax (Wang et al 2008) using theJSON (Lin et al 2012) format.
Annotators onlysee projects they are assigned to.
The annotationpage presents the annotator different options to setup the annotation environment, for customization:?
Paging: For heavily annotated documents orvery large documents, the original brat vi-sualization is very slow, both for displayingand annotating the document.
We use a pag-ing mechanism that limits the number of sen-tences displayed at a time to make the perfor-mance independent of the document size.?
Annotation layers: Annotators usually workon one or two annotations layers, such aspart-of-speech and dependency or named en-tity annotation.
Overloading the annota-tion page by displaying all annotation layersmakes the annotation and visualization pro-cess slower.
WebAnno provides an option toconfigure visible/editable annotation layers.?
Immediate persistence: Every annotation issent to the back end immediately and per-sisted there.
An explicit interaction by theuser to save changes is not required.3.1.3 WorkflowWebAnno implements a simple workflow to trackthe state of a project.
Every annotator works on aseparate version of the document, which is set tothe state in progress the first time a document isopened by the annotator.
The annotator can thenmark it as complete at the end of annotation atwhich point it is locked for further annotation andcan be used for curation.
Such a document cannotbe changed anymore by an annotator, but can beused by a curator.
A curator can mark a documentas adjudicated.3.1.4 CurationThe curation interface allows the curator to open adocument and compare annotations made by theannotators that already marked the document ascomplete.
The curator reconciles the annotationwith disagreements.
The curator can either decideon one of the presented alternatives, or freely re-annotate.
Figure 3 illustrates how the curation in-terface detects sentences with annotation disagree-ment (left side of Figure 3) which can be used tonavigate to the sentences for curation.3.1.5 MonitoringWebAnno provides a monitoring component, totrack the progress of a project.
The project man-ager can check the progress and compute agree-ment with Kappa and Tau (Carletta, 1996) mea-sures.
The progress is visualized using a matrix ofannotators and documents displaying which docu-ments the annotators have marked as complete andwhich documents the curator adjudicated.
Fig-ure 4 shows the project progress, progress of in-dividual annotator and completion statistics.3Figure 3: Curation user interface (left: sentenceswith disagreement; right: merging editor)3.1.6 CrowdsourcingCrowdsourcing is a way to quickly scale annota-tion projects.
Distributing a task that otherwisewill be performed by a controlled user group hasbecome much easier.
Hence, if quality can be en-sured, it is an alternative to high quality annotationusing a large number of arbitrary redundant anno-tations (Wang et al 2013).
For WebAnno, wehave designed an approach where a source doc-ument is split into small parts that get presentedto micro-workers in the CrowdFlower platform3.The crowdsourcing component is a separate mod-ule that handles the communication via Crowd-Flower?s API, the definition of test items and jobparameters, and the aggregation of results.
Thecrowdsourced annotation appears as a virtual an-notator in the tool.Since it is not trivial to express complex anno-tation tasks in comparably simple templates suit-able for crowdsourcing (Biemann, 2013), we pro-ceed by working out crowdsourcing templates andstrategies per annotation layer.
We currently onlysupport named entity annotation with predefinedtemplates.
However, the open and modular archi-tecture allows to add more crowdsourced annota-tion layers.3.2 Back EndWebAnno is a Java-based web application thatmay run on any modern servlet container.
In mem-ory and on the file system, annotations are stored3www.crowdflower.comFigure 4: Project monitoringas UIMA CAS objects (Ferrucci and Lally, 2004).All other data is persisted in an SQL database.3.2.1 Data ConversionWebAnno supports different data models that re-flect the different communication of data betweenthe front end, back end, and the persistent datastorage.
The brat data model serves exchangingdata between the front end and the back end.The documents are stored in their original for-mats.
For annotations, we use the type systemfrom the DKPro Core collection of UIMA compo-nents (Eckart de Castilho and Gurevych, 2009)4.This is converted to the brat model for visualiza-tion.
Importing documents and exporting anno-tations is implemented using UIMA reader andwriter components from DKPro Core as plug-ins.Thus, support for new formats can easily be added.To provide quick reaction times in the user inter-face, WebAnno internally stores annotations in abinary format, using the SerializedCasReader andSerializedCasWriter components.3.2.2 Persistent Data StorageProject definitions including project name and de-scriptions, tagsets and tags, and user details arekept in a database, whereas the documents and an-notations are stored in the file system.
WebAnnosupports limited versioning of annotations, to pro-tect against the unforeseen loss of data.
Figure 5shows the database entity relation diagram.4code.google.com/p/dkpro-core-asl/4Figure 5: WebAnno database scheme4 Scope and Functionality SummaryWebAnno supports the production of linguisticallyannotated corpora for different natural languageprocessing applications.
WebAnno implementsease of usage and simplicity for untrained users,and provides:?
Annotation via a fast, and easy-to-use web-based user interface.?
Project and user management.?
Progress and quality monitoring.?
Interactive curation by adjudicating disagree-ing annotations from multiple users.?
Crowdsourcing of annotation tasks.?
Configurable annotation types and tag sets.5 Use CasesWebAnno currently allows to configure differentspan and arc annotations.
It comes pre-configuredwith the following annotation layers from theDKPro Core type system:Span annotations?
Part-of-Speech (POS) tags: an annotationtask on tokens.
Currently, POS can be addedto a token, if not already present, and can bemodified.
POS annotation is a prerequisite ofdependency annotation (Figure 6).Figure 6: Parts-of-speech & dependency relationsFigure 7: Co-reference & named entites?
Named entities: a multiple span annotationtask.
Spans can cover multiple adjacent to-kens, nest and overlap (Figure 7), but cannotcross sentence boundaries.Arc Annotations?
Dependency relations: This is an arc annota-tion which connects two POS tag annotationswith a directed relation (Figure 6).?
Co-reference chains: The co-reference chainis realized as a set of typed mention spanslinked by typed co-reference relation arcs.The co-reference relation annotation cancross multiple sentences and is represented inco-reference chains (Figure 7).The brat front end supports tokens and sub-tokens as a span annotation.
However, tokens arecurrently the minimal annotation units in Web-Anno, due to a requirement of supporting the TCFfile format (Heid et al 2010).
Part-of-speech an-notation is limited to singles token, while namedentity and co-reference chain annotations mayspan multiple tokens.
Dependency relations areimplemented in such a way that the arc is drawnfrom the governor to the dependent (or the otherway around, configurable), while co-referencechains are unidirectional and a chain is formed byreferents that are transitively connected by arcs.Based on common practice in manual annota-tion, every user works on their own copy of thesame document so that no concurrent editing oc-curs.
We also found that displaying all annotationlayers at the same time is inconvenient for anno-tators.
This is why WebAnno supports showing5and hiding of individual annotation layers.
TheWebAnno curation component displays all anno-tation documents from all users for a given sourcedocument, enabling the curator to visualize all ofthe annotations with differences at a time.
Unlikemost of the annotation tools which rely on config-uration files, WebAnno enables to freely configureall parameters directly in the browser.6 Conclusion and OutlookWebAnno is a new web-based linguistic annota-tion tool.
The brat annotation and GUI front endhave been enhanced to support rapidly process-ing large annotation documents, configuring theannotation tag and tagsets in the browser, speci-fying visible annotation layers, separating anno-tation documents per user, just to name the mostimportant distinctions.
Besides, WebAnno sup-ports project definition, import/export of tag andtagsets.
Flexible support for importing and ex-porting different data formats is handled throughUIMA components from the DKPro Core project.The monitoring component of WebAnno helps theadministrator to control the progress of annotators.The crowdsourcing component of WebAnno pro-vides a unique functionality to distribute the an-notation to a large workforce and automaticallyintegrate the results back into the tool via thecrowdsourcing server.
The WebAnno annotationtool supports curation of different annotation doc-uments, displaying annotation documents createdby users in a given project with annotation dis-agreements.
In future work, WebAnno will be en-hanced to support several other front ends to han-dle even more annotation layers, and to providemore crowdsourcing templates.
Another plannedextension is a more seamless integration of lan-guage processing tools for pre-annotation.AcknowledgmentsWe would like to thank Benjamin Milde and AndreasStraninger, who assisted in implementing WebAnno, as wellas Marc Reznicek, Nils Reiter and the whole CLARIN-D F-AG 7 for testing and providing valuable feedback.
The workpresented in this paper was funded by a German BMBF grantto the CLARIN-D project, the Hessian LOEWE research ex-cellence program as part of the research center ?Digital Hu-manities?
and by the Volkswagen Foundation as part of theLichtenberg-Professorship Program under grant No.
I/82806.ReferencesChris Biemann.
2013.
Creating a system for lexical substi-tutions from scratch using crowdsourcing.
Lang.
Resour.Eval., 47(1):97?122, March.Kalina Bontcheva, Hamish Cunningham, Ian Roberts, andValentin Tablan.
2010.
Web-based collaborative corpusannotation: Requirements and a framework implementa-tion.
In New Challenges for NLP Frameworks workshopat LREC-2010, Malta.Jean Carletta.
1996.
Assessing agreement on classificationtasks: the kappa statistic.
In Computational Linguistics,Volume 22 Issue 2, pages 249?254.Richard Eckart de Castilho and Iryna Gurevych.
2009.DKPro-UGD: A Flexible Data-Cleansing Approach toProcessing User-Generated Discourse.
In Online-proceedings of the First French-speaking meeting aroundthe framework Apache UIMA, LINA CNRS UMR 6241 -University of Nantes, France.David Ferrucci and Adam Lally.
2004.
UIMA: An Architec-tural Approach to Unstructured Information Processing inthe Corporate Research Environment.
In Journal of Natu-ral Language Engineering 2004, pages 327?348.Ulrich Heid, Helmut Schmid, Kerstin Eckart, and ErhardHinrichs.
2010.
A Corpus Representation Format forLinguistic Web Services: the D-SPIN Text Corpus Formatand its Relationship with ISO Standards.
In Proceedingsof LREC 2010, Malta.Boci Lin, Yan Chen, Xu Chen, and Yingying Yu.
2012.Comparison between JSON and XML in ApplicationsBased on AJAX.
In Computer Science & Service System(CSSS), 2012, Nanjing, China.Thomas Morton and Jeremy LaCivita.
2003.
WordFreak:an open tool for linguistic annotation.
In Proceedings ofNAACL-2003, NAACL-Demonstrations ?03, pages 17?18,Edmonton, Canada.Christoph Mu?ller and Michael Strube.
2006.
Multi-level an-notation of linguistic data with MMAX2.
In S. Braun,K.
Kohn, and J. Mukherjee, editors, Corpus Technologyand Language Pedagogy: New Resources, New Tools,NewMethods, pages 197?214.
Peter Lang, Frankfurt a.M.,Germany.Joakim Nivre, Johan Hall, Sandra Ku?bler, Ryan McDonald,Jens Nilsson, Sebastian Riedel, and Deniz Yuret.
2007.The CoNLL 2007 Shared Task on Dependency Parsing.In Proceedings of the CoNLL Shared Task Session ofEMNLP-CoNLL 2007, pages 915?932, Prague, Czech Re-public.Pontus Stenetorp, Sampo Pyysalo, Goran Topic?, TomokoOhta, Sophia Ananiadou, and Jun?ichi Tsujii.
2012. brat:a Web-based Tool for NLP-Assisted Text Annotation.
InProceedings of the Demonstrations at EACL-2012, Avi-gnon, France.Qingling Wang, Qin Liu, Na Li, and Yan Liu.
2008.
AnAutomatic Approach to Reengineering Common Websitewith AJAX.
In 4th International Conference on Next Gen-eration Web Services Practices, pages 185?190, Seoul,South Korea.Aobo Wang, Cong Duy Vu Hoang, and Min-Yen Kan. 2013.Perspectives on Crowdsourcing Annotations for NaturalLanguage Processing.
In Language Resources And Eval-uation, pages 9?31.
Springer Netherlands.6
