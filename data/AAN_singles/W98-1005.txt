1Translating Names and Technical Terms in Arabic TextBonnie Glover Stalls and Kevin KnightUSC Information Sciences InstituteMarina del Rey, CA  90292bgsQis i. edu, knigh~;~isi, eduAbstractIt is challenging to translate names and technical terms from English into Arabic.
Translation isusually done phonetically: different alphabets and sound inventories force various compromises.For example, Peter Streams may come out as hr..~ ~ bytr szrymz.
This process is calledtransliteration.
We address here the reverse problem: given a foreign name or loanword in Arabictext, we want to recover the original in Roman script.
For example, an input like .~..A~bytr strymz should yield an output like Peter Streams.
Arabic presents special challenges dueto unwritten vowels and phonetic-context effects.
We present results and examples of use in anArabic-to-English machine translator.Introduction It is not trivial to write an algorithm for turningTranslators must deal with many problems, andone of the most frequent is translating propernames and technical terms.
For language pairslike Spanish/English, this presents no great chal-lenge: a phrase like Antonio Gil usually gets trans-lated as Antonio Gil.
However, the situation ismore complicated for language pairs that employvery different alphabets and sound systems, suchas Japanese/English and Arabic/English.
Phonetictranslation across these pairs is called translitera-tion.
(Knight and Graehl, 1997) present a computa-tional treatment of Japanese/English translitera-tion, which we adapt here to the case in Arabic.Arabic text, like Japanese, frequently contains for-eign names and technical terms that are translatedphonetically.
Here are some examples from newspa-per text: aJim LeightonoA(j ym 1 !
ytwn)Wall Street(wwl stryt)Apache helicopter(hlykwbtr !
b!
tsby)IThe romanization of Arabic orthography used hereconsists of the following consonants: !
(alif), b,t, th, j, H, x, d, dh, r, z, s, sh, S, D, T, Z,G (@ayn), G (Gayn), f ,  q, k, 1, m, n, =h, w, y, '(hamza).
!, w, and y also indicate long vowels.
!
'and !+ indicate harnza over ali/and harnza under ali/,respectively.English letter sequences into Arabic letter sequences,and indeed, two human translators will often pro-duce different Arabic versions of the same Englishphrase.
There are many complexity-inducing fac-tors.
Some English vowels are dropped in Arabicwriting (but not all).
Arabic and English vowel in-ventories are also quite different--Arabic has threevowel qualities (a, i ,  u) each of which has shortand long variants, plus two diphthongs (ay, aw),whereas English has a much larger inventory of asmany as fifteen vowels and no length contrast.
Con-sonants like English D are sometimes dropped.
AnEnglish S sound frequently turns into an Arabic s,but sometimes into z. English P and B collapse intoArabic b; F and V also collapse to f .
Several En-glish consonants have more than one possible Arabicrendering--K may be Arabic k or q, t may be Ara-bic t or T (T is pharyngealized t ,  a separate letterin Arabic).
Human translators accomplish this taskwith relative ease, however, and spelling variationsare for the most part acceptable.In this paper, we will be concerned with a moredifficult problem--given an Arabic name or termthat has been translated from a foreign language,what is the transliteration source?
This task chal-lenges even good human translators:?jj.cu(m'yk m!kwry)??
( !n t rn t  !ksblwrr)(Answers appear later in this paper).34Among other things, a human or machine transla-tor must imagine sequences of dropped English vow-els and must keep an open mind about Arabic letterslike b and f.  We call this task back-transliteration.Automating it has great practical importance inArabic-to-English machine translation, as borrowedterms are the largest source of text phrases that donot appear in bilingual dictionaries.
Even if an En-glish term is listed, all of its possible Arabic variantstypically are not.
Automation is also important formachine-assisted translation, in which the computermay suggest several translations that a human trans-lator has not imagined.2 P rev ious  Work(Arbabi et al, 1994) developed an algorithm at IBMfor the automatic forward transliteration of Arabicpersonal names into the Roman alphabet.
Using ahybrid neural network and knowledge-based systemapproach, this program first inserts the appropriatemissing vowels into the Arabic name, then convertsthe name into a phonetic representation, and mapsthis representation into one or more possible Romanspellings of the name.
The Roman spellings may alsovary across languages (Sharifin English correspondsto Chgrife in French).
However, they do not dealwith back-transliteration.
(Knight and Graehl, 1997) describe a back-transliteration system for Japanese.
It comprises agenerative model of how an English phrase becomesJapanese:1.
An English phrase is written.2.
A translator pronounces it in English.3.
The pronunciation is modified toJapanese sound inventory.fit the4.
The sounds are converted into the Japanesekatakana lphabet.5.
Katakana is written.They build statistical models for each of these fiveprocesses.
A given model describes a mapping be-tween sequences of type A and sequences of type B.The model assigns a numerical score to any particu-lar sequence pair a and b, also called the probabilityof b given a, or P(b\]a).
The result is a bidirectionaltranslator: given a particular Japanese string, theycompute the n most likely English translations.Fortunately, there are techniques for coordinatingsolutions to sub-problems like the five above, andfor using generative models in the reverse direction.These techniques rely on probabilities and Bayes'Rule.For a rough idea of how this works, suppose webuilt an English phrase generator that producesword sequences according to some probability dis-tribution P(w).
And suppose we built an Englishpronouncer that takes a word sequence and assignsit a set of pronunciations, again probabilistically, ac-cording to some P(elw ).
Given a pronunciation e,we may want to search for the word sequence w thatmaximizes P(w\[e).
Bayes' Rule lets us equivalentlymaximize P(w) ?
P(e\]w), exactly the two distribu-tions just modeled.Extending this notion, (Knight and Graehl, 1997)built five probability distributions:1.
P(w) - generates written English word se-quences.2.
P(e\]w) - pronounces English word sequences.3.
P(jle) - converts English sounds into Japanesesounds.4.
P(klj ) - converts Japanese sounds to katakanawriting.5.
P(o\[k) - introduces misspellings caused by op-tical character recognition (OCR).Given a Japanese string o they can find the En-glish word sequence w that maximizes the sum overall e, j, and k, ofP(w) ?
P(elw) ?
P(jle) ?
P(klj) ?
P(olk)These models were constructed automaticallyfrom data like text corpora and dictionaries.
Themost interesting model is P(jle), which turns En-glish sound sequences into Japanese sound se-quences, e.g., S AH K ER (soccer) into s a kk a a.Following (Pereira and Riley, 1997), P(w) isimplemented in a weighted finite-state acceptor(WFSA) and the other distributions in weightedfinite-state transducers (WFSTs).
A WFSA is astate/transition diagram with we.ights and symbolson the transitions, making some output sequencesmore likely than others.
A WFST is a WFSA witha pair of symbols on each transition, one input andone output.
Inputs and outputs may include theempty string.
Also following (Pereira and Riley,1997), there is a general composition algorithm forconstructing an integrated model P(xlz ) from mod-els P(x\]y) and P(y\]z).
They use this to combine anobserved Japanese string with each of the models inturn.
The result is a large WFSA containing all pos-sible English translations, the best of which can beextracted by graph-search algorithms.353 Adapt ing  to  Arab icThere are many interesting differences between Ara-bic and Japanese transliteration.
One is thatJapanese uses a special alphabet for borrowed for-eign names and borrowed terms.
With Arabic,there are no such obvious clues, and it is diffi-cult to determine ven whether to attempt a back-transliteration, to say nothing of computing an accu-rate one.
We will not address this problem directlyhere, but we will try to avoid inappropriate translit-erations.
While the Japanese system is robust--everything gets some transliteration--we ill build adeliberately more brittle Arabic system, whose fail-ure signals that transliteration may not be the cor-rect option.While Japanese borrows almost exclusively fromEnglish, Arabic borrows from a wider variety of lan-guages, including many European ones.
Fortunately,our pronunciation dictionary includes many non-English names, but we should expect to fail moreoften on transliterations from, say, French or Rus-sian.Japanese katakana writing seems perfectly pho-netic, but there is actually some uncertainty in howphonetic sequences are rendered orthographically.Arabic is even less deterministically phonetic; shortvowels do not usually appear in written text.
Longvowels, which are normally written in Arabic, oftenbut not always correspond to English stressed vow-els; they are also sometimes inserted in foreign wordsto help disambiguate pronunciation.
Because truepronunciation is hidden, we should expect that itwill be harder to establish phonetic orrespondencesbetween English and Arabic.Japanese and Arabic have similar consonant-conflation problems.
A Japanese r sound may havean English r or 1 source, while an Arabic b may comefrom p or b.
This is what makes back-transliterationhard.
However, a striking difference is that whileJapanese writing adds extra vowels, Arabic writingdeletes vowels.
For example: 2Hendette --~ H Ell N R IY EH T (English)-~t h e n o r i e t t  o (Japanese)=h n r y t (Arabic)This means potentially much more ambiguity; wehave to figure out which Japanese vowels shouldn't~The English phonemic representation uses thephoneme set from the online Carnegie Mellon Uni-versity Pronouncing Dictionary, a machine-readablepronunciation dictionary for North American English(ht tp : / /w~.
speech, cs.
aau.
edu/cgi-b in/cmudict).be there (deletion), but we have to figure out whichArabic vowels should be there (addition).For cases where Arabic has two potential map-pings for one English consonant, he ambiguity doesnot matter.
Resolving that ambiguity is bonus whengoing in the backwards direction--English T, for ex-ample, can be safely posited for Arabic t or T with-out losing any information?4 New Mode l  for Arab icFortunately, the first two models of (Knight andGraehl, 1997) deal with English only, so we can re-use them directly for Arabic/English transliteration.These are P(w), the probability of a particular En-glish word sequence and P(elw), the probability ofan English sound sequence given a word sequence.For example, P(Peter) may be 0.00035 and P(P IYT gRlPeter ) may be 1.0 (if Peter has only one pro-nunciation).To follow the Japanese system, we would nextpropose a new model P(qle) for generating Arabicphoneme sequences from English ones, and anothermodel P(alq) for Arabic orthography.
We wouldthen attempt o find data resources for estimatingthese probabilities.
This is hard, because true Ara-bic pronunciations are hidden and no databases areavailable for directly estimating probabilities involv-ing them.Instead, we will build only one new model, P(ale ),which converts English phoneme sequences directlyinto Arabic writing.
~,Ve might expect he model toinclude probabilities that look like:P(flF) = 1.0P(tlT ) = 0.7P(TIT ) = 0.3P(slS ) = 0.9P(zIS) -- 0.1P(wlAH) = 0.2P(nothinglAH ) = 0.4P(!+IAH) = 0.4The next problem is to estimate these numbersempirically from data.
We did not have a largebilingual dictionary of names and terms for Ara-bic/English, so we built a small 150-word ictionaryby hand.
We looked up English word pronunciationsin a phonetic dictionary, generating the English-phoneme-to-Arabic-writing training data shown inFigure 1.We applied the EM learning algorithm describedin (Knight and Graehl, 1997) on this data, with onevariation.
They required that each English sound36((AE N T OW N IY ON) (! '
n T w n y w))((AE N T AH N IY) (.'
' n T w n y))((AA N W AA R) (! '
n w r))((AA R M IH T IH JH) (! '
r m y t !
j))((AA R N AA L D OW) (!
r n i d w))((AE T K IH N Z) (! '
t k y n z))((K AO L V IY N OW) (k !
1 f y n w))((K AE M ER AH N) (k !
m r !
n))((K AH M IY L) (k m y i))((K AA R L AH) (k '.
r 1 .
'))((K AE R AH L) (k !
r w i))((K EH R AH LAY  N) (k !
r w 1 y n))((K EH R AH L IH N) (k !
r w 1 y n))((K AA R Y ER) (k !
r f r))((K AE S AH L) (k !
s I))((K R IH S) (k r y s))((K R IH S CH AH N) (k r y s t s h n))((K R IH S T AH F ER) (k r y s t w f r))((K L AO D) (k 1 w d))((K LAY  D) (k 1 !
y d))((K AA K R AH N) (k w k r !
n))((K UH K) (k w k))((K AO R IH G AH N) (k w r y G !
n))((EH B ER HH AA R T) (!
+ y b r ffi h !
r d))((EH D M AH N D) (!
+ d m w n))((EH D W ER D) (! '
d w !
r d))((AH LAY  AH S) (!
+ i y !
s)((IH L IH Z AH BAH TH) (!
+ 1 y z !
b y t h))Figure 1: Sample of English phoneme to Arabic writ-ing training data.5 P rob lems Spec i f i c  to  Arab icOne problem was the production of many wrong En-glish phrases, all containing the sound D. For ex-ample, the Arabic sequence 0~ frym!n yieldedtwo possible English sources, Freeman and Fried-man.
The latter is incorrect.
The problem provedto be that, like several vowels, an English D soundsometimes produces no Arabic letters.
This happensin cases like .jl~i Edward ! '
dw!
r  and 03~7.~ Ray-mond rymwn.
Inspection showed that D should onlybe dropped in word-final position, however, and notin the middle of a word like Friedman.This brings into question the entire shape of ourP(ale ) model, which is based on a substitution ofArabic letters for an English sound, independent ofthat sound's context.
Fortunately, we could incor-porate an only-drop-final-D constraint by extendingthe model's transducer format.The old transducer looked like this:S/z '~  "'"While tile new transducer looks like this:produce at least one Japanese sound.
This workedbecause Japanese sound sequences are always longerthan English ones, due to extra Japanese vowels.Arabic letter sequences, on the other hand, may beshorter than their English counterparts, sowe alloweach English sound the option of producing no Ara-bic letters at all.
This puts an extra computationalstrain on the learning algorithm, but is otherwisenot difficult.Initial results were satisfactory.
The programlearned to map English sounds onto Arabic lettersequences, e.g.
: Nicholas onto ~r,N~" nykwl !
s andWilliams onto .~..~ wlymz.We applied our three probabilistic models to pre-viously unseen Arabic strings and obtained the topn English back-transliteration f r each, e.g.,byf r lybykr!
'dw!r=hdswn=hwknzBeverly BeverleyBaker Picker BeckerEdward Edouard EduardHudson Hadson HodsonHawkins Huggins Huckins~Ve then detected several systematic problemswith our results, which we turn to next.D/aS/z  vWhenever D produces no letters, the transducerfinds itself in a final state with no further transitions.It can consume no further English sound input, soit has, by definition, come to the end of the word.We noticed a similar effect with English vowelsat the end of words.
For example, the system sug-gested both Manuel and Manuela as possible sourcesfor ~,SL~ ,,!nwyl.
Manuela is incorrect; we elimi-nated this frequent error with a technique like theone described above.A third problem also concerned English vowels.For Arabic .~.
'lzf~i !
'wkt !
fy.
,  the system producedboth Octavio and Octavia as potential sources,though the latter is wrong.
While it is possible forthe English vowel ~ (final in Octavia) to produceArabic w in some contexts (e.g., .~..%~ rwjr/Roger),it cannot do so at the end of a word.
Eli and AA havethe same property.
Furthermore, none of those threevowels can produce the letter y when in word-finalposition.
Other vowels like IY may of course do so.We pursued a general solution, replacing each in-37stance of an English vowel in our training data with e IIone of three symbols, depending on its position in AAthe word.
For example, an AH in word-initial po- AA-Ssit!on was replaced by AH-S; word-final AH was re- ,,placed by AH-F; word-medial was htI.
This increases AEAE-Sour vowel sound inventory by a factor of three, and AH "even though AH might be pronounced the same inany position, the three distinct AH- symbols can ac-quire different mappings to Arabic.
In the case ofAH, learn ing  revealed:  ,,P(wIAH ) - 0.288P(nothingl~i  ) = 0.209P( IAH) = 0.260P(ylAH) = 0.173P(!IAH-F) -- 0.765P(&IAH-F) : 0.176P(=hIAH-F ) : 0.059P(!+IAH-S) = 0.5P(!yIAH-S) = 0.5P(!
'\[AH-S) -- 0.25We can  see that  word- f ina l  AH can  never  bedropped.
We can  also see that  word- in i t ia l  AH can  bedropped;  th is  goes beyond the  const ra in ts  we or igi -na l ly  env is ioned.
F igure  2 shows the  complete  tab leof  sound- le t te r  mapp ings .We introduced just enough context in our soundmappings to achieve reasonable results.
We could,of course, introduce left and right context for everysound symbol, but this would fragment our data; itis difficult to learn general rules from a handful ofexamples.
Linguistic guidance helped us overcomethese problems.6 EXAMPLEHere we show the internal workings of the systemthrough an example.
Suppose we observe the Ara-bic string br !ns tn .
First, we pass it though theP(a\[e) model from Figure 2, producing the networkof possible English sound sequences shown in Fig-ure 3.
Each sequence i could produce (or "explain")br !ns tn  and  is scored w i th  P (br !ns tn \ [  ei).
For  ex-ample ,  P(br\[nstn\[BRAENSTN) = 0.54.AH-FAH-SAOAYAY-FAY-SBCHDEHEH-SEREYEY-FEY-SFGHHIHIH-SIYIY-FIY-SJHKLMNNGOWOW-FOW-SPRSSHTTHUHUWUW-FVWYZa P(ale) a P(ale) a P(ale)!
0.652! '
0.625!
0.125w 0.217!
'w 0.125* 0.131!
'H 0.125!
0.889 * 0 .
I I I! '
0.889 !
0 .
I I Iw 0.288 * 0.269 l 0.269y 0.173!
0.765 & 0.176 =h 0.059!+ 0.5 !y 0.25 ! '
0.25w 0.8 y 0.
I  !
0.Iy 0.8 !y 0.2y 1.0!+ 1.0b 1.0x 0.5 tsh 0.5d 0.968 * 0.032?
0.601 y 0.25 !
0.1h 0.049! '
0.667 !+ 0.167 !+y 0.167r 0.684 yr 0.182 wr 0.089!
+r 0.045?
0.
I i i  y 0.444!
@y 0.III~y 0.639! '
0.5!
0.333y 0.361!
0.5f 1.0G 0.833 k 0.167=h 0.885 0.113y 0.868r 0.026!
0.375! '
0.125* 0.079!+ 0.25!+y 0.125* 0.064 y 0.909y 1.0!
+y 1.0j 1.0k 0.981 +q 0.019i 1.0ww 0.286!
0.026!y  0.125h 0.027m 1.0n 1.0nG 1.0e 0.714e 1.0!
'w 1.0b 1.0r 0.98s 0.913Ty 0.333t 0.682th 1.0y 0.02z 0.087shy 0.333 sh  0.333T 0.273 d 0.045w 1.0w 1.0w 1.0f 1.0w 0.767 w!
0.121y 1.0z 0.75 s 0.25fy  0.111Figure 2: English sounds (in capitals) with prob-abilistic mappings to Arabic sound sequences, aslearned by estimation-maximization.38Figure 3: English sound sequences corresponding to Arabic br  !nsrn .
Each path through the lattice repre-sents one possible sequence.Arabic input: b r !
n s t nTop 20 English pronunciations P(a\[e)B R AE N S T N 0.541074P R AE N S T N 0.541074B R AH-F N S T N 0.465519P R AH-F N S T N 0.465519B R AA N S T N 0.397275P R AA N S T N 0.397275B FAt AE N S T N 0.377096PER AE N S T N 0.377096P R AE N S EH T N 0.324645B R AE N EH S T N 0.324645B EH R AE N S T N 0.324645P R AE EH N S T N 0.324645P R AE N S T EH N 0.324645P EH R AE N S T N 0.324645B R AE N S T N EH 0.324645B R EH AE N S T N 0.324645P R AE N EN S T N 0.324645P R AE N S T N EH 0.324645P R EH AE N S T N 0.324645EH B R AE N S T N 0.324645Next, we pass this network through the P(e\[w)model to produce a new network of English phrases.Finally, we re-score this network with the P(w)model.
This marks a preference for common En-glish words/names over uncommon ones.
Here arethe top n sequences at each stage:Top 20 word sequences P(elw) ?
P(ale)BRANN STEN 0.324645BRAN STEN 0.324645BRONN STEN 0.238365PUR ANSE TEN 0.226257PUR ANSE TENN 0.226257PUR ANNE STEN 0.226257PERE ANSE TEN 0.226257PUR ANN STEN 0.226257PER ANSE TEN 0.226257PERE ANSE TENN 0.226257PER ANSE TENN 0.226257PERE ANNE STEN 0.226257PER ANNE STEN 0.226257PERE ANN STEN 0.226257PUR AN STEN 0.226257PER ANN STEN 0.226257PF~E AN STEN 0.226257PERE AHN STEN 0.226257PUR AHN STEN 0.226257PErt AN STEN 0.226257R~scored P(w) ?
P(e\[w) ?
P(ale )word sequencesBRONSTON 8.63004e-07BRONSTEIN 7.29864e-08BRAUNSTEIN 1.11942e-08397 Results  and Discuss ionWe supplied a list of 2800 test names in Arabic toour program and received translations for 900 ofthem.
Those not translated were frequently not for-eign names at all, so the program is right to fail inmany such cases.
Sample results are shown in Fig-ure 4.The program offers many good translations butstill makes errors of omission and commission.
Someof these errors show evidence of lexical or ortho-graphic influence or of interference from other lan-guages (such as French).English G is incorrectly produced from its voice-less counterpart in Arabic, k. For example, d~l..p"krys comes out correctly as Chris and Kr/s butalso, incorrectly, as Grace.
The source of the G-kcorrespondence in the training data is the Englishname AE L AH G Z AE N D ER Alexander, which is.~ "a.z....Q1 !
lksndr  in our training corpus.
A voicedfricative G is available in Arabic, which in other con-texts corresponds to the English voiced stop G, al-though it, too, is only an approximation.
It appearsthat orthographic English X is perceived to corre-spond to Arabic ks, perhaps due partly to Frenchinfluence.
Another possible influence is the existingArabic name 1~I  !
skndr (which has k), from thesame Greek source as the English name Alezander,but with metathesis of k and s.Sometimes an Arabic version of a foreign nameis not strictly a transliteration, but rather a transla-tion or lexicalized borrowing which has been adaptedto Arabic phonological patterns.
For example, thename Edward is found in our data as a.~l.~a/! '
dw!rd,.jl~.~' dw!r, and.~l~!
!+dw!r.
The last version, anArabicization of the original Anglo-Saxon ame, ispronounced Idwar.
The approach taken here is flex-ible enought o find such matches.Allowing the English sound D to have a zero matchword-finally (also a possible French influence) provesto be too strong an assumption, leading to matchessuch as: ! '
l f r  Oliver Alfred.
"A revised rule wouldallow the D to drop word-finally only when immedi-ately preceded by another consonant (which conso-nant could further be limited to a sonorant).Another anomaly which is the source of error isthe mapping of English CH to Arabic x, which carriesequal weight (0.5) to the mapping of Clt to Arabictsh  (0.5).
This derives from the name Koch, whichin Arabic is ~-j.C'kwx, as in the German pronuncia-tion of the name, as opposed to the English pronun-ciation.
This kind of language interference can beminimized by enlarging the training data set.40!
'bwrzq!
'by!'byD!
'd !mz!
'd rys!
'dw!r!
'dw!rd!~dwnys!
'dyb! '
f !y~!'fr!H!'fyn!sh!'krm!'l!n!'lbrt!'lbrty!'ibyr!'If!rw!'ifr!'lksndr!'in!~lys!'lyswn!~mjd!'mnwn!'mrz!q~!'mst!'mWS!'mykw!'my1!'mym&!'myn!'myn&!'myr!
'n !!'nGz!'nTw!n!'nTwInyt!'nTwn!'nTwny!'nTwny!!'nTwnyw!'ndrw!'ndry=h!
'ndryy fABBEY ABBY ABBIEADAMS ADDAMSEDRISEDWARD EDOUARD EDUARDEDWARD EDOUAKD EDUARDAVERAALAN ALLEN ALLANALBERT ALPERT ELBERTALBERTI ALBERTYALPERALVARO ALFARO ALVEROOLIVER OLIVER ALFREDALEXANDER ALEXANDER ALEXANDREALAN ALLEN ALLANELLIS ALICE LASALLISON ALISON ELLISONAMOS AMOSSAMIC0 AMERCOEMIL EMILE EMAILAMMAN AMIN AMMEENAMER AMIR AMORANA ANNA ANAINIGUEZANTOINE ANTOINEANTOINETTE ANTOINETTEANTON ANT00N ANTOINEANTONY ANTONI ANTONEANTONIAANTONIO ANTONIUANDREW ANDREUANDREA ANDREA ANDRIAFigure 4: Sample program results for English trans-lations of names written in Arabic.English orthography appears to have skewed thetraining data in the English name Frederick, pro-nounced F R F_hi D R IH K. In Arabic we have A .~)f rdyrk  as well as f rydryk ,  f rdyryk  and f rdrykfor this name.
The English spelling has three vow-els, but the English phonemic representation lacksthe middle vowel.
But some Arabic versions havea (long) "vowel" (y) in the middle vowel position,leading in the training data to the incorrect map-ping English R to Arabic y.
This results in incorrecttranslations, uch as Racine for ysyn.As might be expected when the sound system ofone language is being re-interpreted in another, Ara-bic transliteration is not always attuned to the sub-tleties of English phonotactic variation, especiallywhen the variants are not reflected in English or-thography.
An example is the assimilation in voic-ing of English fricatives to an immediately precedingstop consonant.
In James, pronounced JH EY H Z,the final consonant is a voiced Z although it is spelledwith the voiceless variant, s. In this case, Arabicfollows the English orthography rather than pro-nunciation, transliterating it O -~T jyms.
Similarly,Horowitz is pronounced HH A0 R 0W IH T $ in En-glish, with a final devoiced $ rather than the voicedvariant z present in the spelling, whereas the Arabictransliteration follows the English spelling, ff~ .%~ja~=hwrwwytz.
The present version of the program ap-plies these variant correspondences indiscriminately,such that ~3.~.I... s!ymwn is translated as Simon orZyman.
Separating out these correspondences ac-cording to their positions in the word, as was donewith the vowels, would help to rectify this, by re-ducing the probability of an S--z correspondence inless likely positions (e.g., initial position).Some Arabic transliterations carry the imprintof English spelling even when it departs even far-ther from the pronunciation.
For example, i,~I.~Gr!=h!m is an Arabic transliteration for the En-glish name Graham, pronounced G R AE H. (an al-ternative is the Arabic i'~ Gr!m).
These mappingswere not found by the program (even though theymight be readily evident to a human).
This kindof spelling-transliteration lies outside of the phone-mic correspondences to Arabic orthography that theprogram has learned.Vowels are still a problem, even when they are dis-tinguished by their position in the word.
In the testcases given in the Introduction, (answers are MikeMcCurrg, OPEC, and lnternet Explorer), the qual-ity of the Arabic vowels, when present, matches theEnglish vowels fairly well.
However, as can be seenfrom names like Frederick, the decision as to whetheror not to insert vowel is arbitrary and somewhat de-pendent on English orthography, which influencesthe quality as well as position of the Arabic vowel.Medial English AIt, for example, is normally !
(alifbut can also be found in Arabic as t~ or y (e.g, En-glish Jeremy, pronounced JH EH R AH H IY is writ-ten in Arabic as jyrymy).
This results in incorrecttranslations, uch as Amman for Arabic !
'myn.In this initial model, English vowel stress was notrepresented.
Because long vowels in Arabic are usu-ally stressed, one might expect that English stressedvowels would be equated with Arabic long vowels forpurposes of transliteration.
However, our data sug-gest that English stress does not have a strong corre-lation with Arabic long vowel placement in translit-erated names.
For example, Kevin mapped tokyfyn and ".~d~kfyn, but not .~(.. kyfn.
If stresswere a factor here and were interpreted as a longvowel, -~(.. kyfn would be predicted as a preferredtransliteration based on the phonemic representa-tion of Kevin as K EH1 V IH N (where "1" indicatesprimary stress).
S imi la r ly , .~ . "
fyktwr and .~ , ifktt~r were found for Victor but not the expectedfyktr.
"~.~kynth is found, but so arekynyth, and "~.~knyth.
In syllable-final position atleast, it appears that stress does not outweigh otherfactors in Arabic vowel placement.
However, the re-lation of English stress to Arabic vowel placementin other positions might be used to rule out unlikelytranslations (such as Camille with final stress forArabic 0.,~Sk!ml) and deserves further study.All of these observations point to places where thesystem can be improved.
A larger training data set,more selected contextual mappings, and refinementof linguistic rules are all potential ways to capturethese improvements within the finite-state frame-work, and we hope to study them in the near future.ReferencesMansur Arbabi, Scott M. Fischthal, Vincent C.Cheng, and Elizabeth Bart.
1994.
Algorithmsfor Arabic name transliteration.
IBM Journal ofResearch and Development, 38(2):183-193.Kevin Knight and Jonathan Graehl.
1997.
Ma-chine transliteration.
In Proceedings of the 35thAnnual Meeting of the Association for Computa-tional Linguistics, pages 128-135.
Morgan Kauf-mann.Fernando C. N. Pereira and Michael Pdley.
1997.Speech recognition by composition of weightedfinite automata.
In E. Roche and Y. Schabes,editors, Finite-State Language Processing, pages431-453.
MIT Press.41
