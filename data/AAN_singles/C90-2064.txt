The application of two-level morphologyto non-concatenative German morphologyHarald TrostDeutsches Forschungszentrum fiir Ktinstliche Intelligenz (DFKI) 1Stuhlsatzenhausweg 3, D-6600 Saarbrticken 11, FRGEmail: htrost@ sbuvax.campus.uni-sb.de.Abstract IntroductionIn this paper 2we describe a hybrid system formorphological nalysis and synthesis.
We callit hybrid because it consists of two separateparts interacting with each other in a well-defined way.
The treatment of morphonologyand nonoconcatenative morphology is based onthe two-level approach originally proposed byKoskenniemi (1983).
For the concatenative partof morphosyntax (i.e.
affixation) we make useof a grammar based on feature-unification.tloth parts rely on the same morph lexicon.Combinations of two-level morphology witht'eature-based morphosyntactic grammars havealready been proposed by several authors (c.f.llear 1988a, Carson 1988, G6rz & Paulus1988, Schiller & Steffens 1990) to overcomethe shortcomings of the continuation-classesoriginally proposed by Koskenniemi (1983)and Karttunen (1983) for the description ofmorphosyntax.
But up to now no linguistically~;atisfying solution has been proposed for thetreatment of non-concatenative morphology in:such a framework.
In this paper we describe anextension to the model which will allow for thedescription of such phenomena.
Namely wepropose to restrict he applicability of two-levelrules by providing them with filters in the formof feature structures.
We demonstrate how awell-known problem of German morphology,so-called "Umlautung", can be described in ourapproach in a linguistically motivated andefficient way.1 Work on this project has begun while i was working forthe Austrian Research Institute for ArtificialIntelligence in Vienna, Austria2 I want to thank my collegues Greg Dogil, WolfgangHeinz, Tibor Kiss ~md Gfinter Neumann for tYuitfuldiscussions and helpful comments on earlier versions ofthis paper.Conventional morphosyntactic grammars donot allow to describe non-concatenative parts ofmorphology declarat ively.
Two-levelmorphology on the other hand can deal withsome of these phenomena like vowel orconsonant change, but there is no sound way totransmit information to the morphosyntacticgrammar.
This leads to quite unnaturalsolutions like the use of diacritics for therepresentation f morphosyntactic phenomena.While German morphology is mainly basedon concatenation, some non-concatenativephenomena do exist.
The most prominentexample is so-called "Umlautnng".
Umlautungmeans that in tile surface form the original stemvowel is replaced by another vowel in asystematic manner.
Possible transformationsare a=>~i, au=>~iu, o=>6, u=>ii, and - in somecases - e=>i.Umlautung in German realizes quitedifferent morphological features.
With nouns itcan mark the plural either by itself (e.g.
Mutter=> Mtitter) or in combination with an explicitplural-ending (e.g.
Mann => M~inner),depending on the inflection class.
Withadjectives it is used to mark comparative forms(grog => gr6ger => am gr6\[hen), again incombination with an ending, for verbsfollowing strong conjugation it marks thesubjunctive ii and 2nd and 3rd person singularof the indicative present tense.
Umlautung alsooccurs in derivation in combination with anumber of derivational particles, e.g.
- l i ch(klagen => kl~iglich).
In contrast o its use ininflection, umlautung provides for no extramorphosyntactic information in derivationalforms.
At last, it appears in compounding incombination with some "Fugenelement"(joining element) (e.g.
Mi innerchor  - malechorus).1 371There are two common ways to cope withumlautung in conventional morphologicalcomponents for German.
One is to treat allforms created by umlautung as suppletions, i.e.these forms are explicitly entered into thelexicon.
This is linguistically inadequate,because it obscures the phonological similarityof the two forms.
From a more practical pointof view it has the drawback that in a few cases,e.g.
forming of the diminutive with thederivational - chen ,  umlautung is stillproductive, and cannot herefore be lexicalized.The other solution is a special functionreplacing (and interpreting) or generating theumhmt in all stems which are marked forumlautung required by the morphosyntacticcontext (c.f.
Trost & Dorffner 1987).
Thismakes umlautung a special case neglecting itsstatus as a regular means of morphosyntacticmarking.Solutions within the two-level approachhave also been proposed.
They rely on the ideato represent stem vowels which exhibitumlautung with special characters (diacritics)(e.g.
A) at the lexical level.
These charactersare then realized as either the regular vowel(e.g.
a) or the corresponding umlaut (e.g.
t~) atthe surface level.
The idea behind is that thesestem vowels are lexically somewhatunderspecified.
To trigger the appropriatesubstitution, G6rz & Paulus (1988) use aseparate data structure to control for each wordform which of the two possible rules is appliedto create the surface structure.
Schiller &Steffens (1989) use still another diacriticsymbol for this task.
Flexional endingstriggering umlautung start with the diacritic $(realized as 0 at the surface level).
The contextto the right of the substitution of all umlautrules requires the occurence of that $.
Thereforethe umlaut rule would fail if no such affixfollows the stem.
As a consequence, the nullmorph must be explicitly represented by $ inlexical strings where morphosyntacticinformation is expressed by umlautung only(e.g.
Mutter = > Mi~tter).Although both solutions certainly do work,at least for flexional morphology, they provideno clean and general solution for the integrationof umlautung in the framework of two-levelmorphology.
The use of a separate datastructure is contrary to the intuition thatumlautung is a regular phenomenon of Germanmorphology, the treatment of which shouldrequire no extra mechanism.
And the use of thediacritic $ places a burden on morphonologywhich clearly belongs to morphosyntax.The handling of non-concatenativemorphological phenomena within the two-levelapproach imposes two new requirements:?
Information about he application of a ruleneeds to be transferred to the morpho-syntactic grammar.?
It must be possible to restrict he applicationof two-level rules to certain classes ofmorphs.Accordingly, we propose an approach whereumlautung requires no extra mechanism at alland where no diacritics are (mis)used todescribe morphosyntactic features.
The basicidea is to provide two-level rules with a filter inform of a feature structure which controls itsapplicability.
This feature structure has to beunified with the feature structure of the morphfound in the lexicon to which the rule applies.In case of failure the two-level rule may not beapplied.
If unification succeeds infolmation istransfeiTed that way from the two-level part tothe associated morphosyntactic grammar.
Thisis crucial for the treatment of umlautungbecause, as mentioned above, its applicationconveys morphosyntactic meaning.In the following we will describe the parts ofour system in some detail and explain howumlautung can be handled using thatframework.
(Basic knowledge of the two-levelapproach and feature-uni f icat ion ispresupposed.)
We will also argue thatextending the two-level rules with filtersfacil itates the description of certainmorphonological phenomena as well.The Two-Level PartOur implementation f the two-level part issimilar to the one proposed by Bear (1988a, b),i.e.
rules are interpreted irectly and notcompiled into automata.
Rules consist of a leftcontext, aright context and a substitution.
Leftand right contexts are regular expressions overpairs of lexical and surface symbols.
Asubstitution consists of exactly one such pair.Rules may be optional or obligatory (i.e.
incontrast to Bear there are no disallowed rules).By definition, all default pairs are regarded asoptional rules with empty contexts.The pair of strings (lexical and surface) isprocessed from left to right.
If more than one372 2optional rule is applicable at a time this showsan ambiguity, 1.e.
there are as manycontmuatmns as there are differentsubstitutions.
Obligatory rules supercede alloptional ones (thereby pruning the tree ofcontinuations).
If more than one obligatory ruleis applicable at the same time (enforcingdifferent substitutions) the whole mapping mustbe discarded.
The same is true if no rule appliesat all.The major difference from other two-levelapproaches is the possibility to provide therules with a filter.
A filter is an arbitrary featurestructure.
A rule may only be applied if thefilter unifies with the feature-structure of theactual morph, i.e.
the morph to which thesubstitution applies.
Filters are used to restrictthe application of a rule to certain classes ofmorphs.
This is in contrast to the original viewof Koskenniemi that morphonological rules areto be applied over the whole lexicon regardlessof morphosyntactic considerations.
This iscertainly true of post-lexical rules.
But there isevidence that it is not even true for allmorphonological rules.
Take e.g.
the verbsenden (to send), which can form two differentpast tenses end-e-te and sand-te, the formerbeing regular weak conjugation, the latter astrong stem with weak inflection ending.
Theepenthesis of schwa (or e in orthography)depends on the morphological c ass of the stem(weak or strong).
Or take the adjective dunkel,where the nominalization im Dunk-e-ln (in thedark) is different fi'om the attributive use dendunkl-e-n Mantel (the dark coat) (c.f.
Gigerich1987).
Here nominalization requires schwaepenthesis in the stem, not at the morphboundary like the adjective.If we want to use two-level rules for thedescription of non-concatenative morphology,such filters are necessary anyway.
Because, asmentioned above, we do need some means toconvey information fi'om the two-level part tothe morphosyntactic grammar.
In the case ofumlautung we suppose that it is triggered by theconcatenation of a stem which is lexicallymarked for umlaut (by the occurrence of adiacritical character A, O, U or E) with an affixallowing for umlautung (i.e.
carrying thefeature \[umlautung: +\]).
Therefore the filter forall rules concerning umlautung basicallycontains the feature-value pair which marksaffixes \[umlautung: +/-\].Umlautung must only be performed if thestem allows for umlautung and that feature hasthe value +.
Accordingly, all two-level rulessubstituting a vowel by its umlaut have the filter\[umlautung +\].
Corresponding rules are neededwhich keep the original vowel in the surfaceform.
They have the filter \[umlautung: -\].
Allthe above-mentioned rules are obligatory, andexactly one of them applies to every occurenceof a stern marked for umlaut (see figure 1).Rule: Rule Status: Rule Filter:_ \[agl' \[lnIllautung:-\]\]\]\](A--')a) obligatory \[syn\[loc\[ head\[cat:stem\]\[agr \[umlautung: +\]\] \] \]Fig.
1: Two-level rules for lexical aTo select exactly one rule (in order toprevent a deadlock between two obligatoryrules) the feature umlautung must always have avalue.
But, as stated above, stems are notlexically marked for this feature.
The marking iseffected by the morphosyntactic grammar,which unifies the agreement features of affixand stem, thereby transferring the featureumlautung to the feature structure of the stem(see figure 5).What is important o note here, is that thetwo-level rules themselves contain noinformation about the morphosyntacticinterpretation of umlautung.
This is onlyspecified in the grammar ules.
Therefore thesame two-level rules can be used for all thedifferent places, where umlautung occurs.
Wewill now shortly describe the morphosyntacticpart of our system.Feat twe-Based  MorphosyntaxConcatenative morphology is described ingrammar ules following X-bar theot'y.
Ahead-driven approach is adopted.
The basicstructure consists of a head, usually some sortof affix, and one or more complements, one ofwhich must be some type of stem.
We will notgo into any detail concerning the exact format ofthe grammar rules here, because it is irrelevantfor the treatment of umlaut.
For the purpose ofthis paper it suffices to give just one example.We will describe the overall structure of thegrammar using the noun Mann (man) as anexample.
Nouns are constructed from stem,number marker, and case marker.
The numbermarker forms the head and subcategorizes for astem and a case marker.
The relevant syntacticinformation is collected in the agreement featurewhich is passed upwards from the daugthers.3 373Figure 2 shows (a simplified version of) thenumber markers for |flex-class: er\].
We cansee that the plural marker triggers umlautung,while the singular marker does not.
Bothsubcategorize for a stem and a case marker.-morp_h: end*min: +Jloc head \[cat: noun-stem\]~-num: sg J / agr~person: 31_ l.umlautung: -syn ' \]_\] -bar|max:+\] e r\]'\] \ ~ l J J  head|Cat: stem firs1 sy~!
loc ~t flex-class:L _agr OI 1 firs sy.
,odheaJCat: o Hi l l  | ~ n?un'rmxJ|l / !res\] | LagrO J J J- - crest: *end*\] morph: \[first: #er Lrest: *er t* -- |bar|max:.\] / Lmin: +J /loc \]head \[cat: noun-stem\] /\[ 5 num: pl ~ /|a~rtqP ers?n: 3 \] |E umlautung: +J Jsyr I -  ~bar \[max: +\] \]l J \] lool head'Cat: stem firs syn .\] "lflex-class: er_ \[agr (Dsubca: \["- I I bar|max:+\] \]1\]\]\]firs, sy Io head|Cajun.flexres\] _ L l agre JJJ|_ L Lrest: *end* J lFig.2: Number markers for nouns with plural -er(unmarked singular nd plural #er)Figure 3 shows the lexical entry for the stemMann, which may take an umlaut (its stemvowel is A).
The number marker takes thatstem as a complement.
The agreementfeaturesare shared between head andcomplement.
As one result, thefeatureumlautung is transferred from thenumber marker to the stem.
It is now locallyavailable to trigger the correct umlaut rule.- first: mAnn\]n~orph rest: *end* Jr b rmax: +l 11 | ar \[min: +J |/ h -|cat:stem \]/  / syn loc | eaa \[root: manrd | !\[flox-class: erl / / L "~," kgenus: n j j J-subcat: *end*Fig.3: Lexical entry for Mann (man)Figure 4 shows two different case markersfor the unmarked case and for dative plural.After combining with a stem, the numbermarker may now take a case marker' as itssecond complement.I \[\[first: #n \]morph \[bar \[man:: +\] Lrest: *end*Jl syn loc \]head|cat:noun-flex\]/a-~ \[casus: 3\]L ~" knum: pl\]-morph: *end*syn locmax:head \[cat: noun-flex\]Lnum: sg 4}1/ Inure: pl 4}j \]Fig.4: Case morphs for tile unmarked case and fordative pluralThe grammar f agment sketched in this sectionmust be viewed with care.
German inflectionalendings often combine different rnorpho-syntactic information, e.g.
with nouns case andnumber information is sometimes expressed bya single morph.
Explaining the unmarked caseas a combination of stem with nullmorph is alsosomewhat problematic.
A more relisticgrammar would probably collapse parts of thetree into a single structure, i.e.
by usingcase&number markers, which subcategorizeonly for a stem.
This would, for example,eliminate the problem which is posed to theparser by allowing for the occurence of morethan one null morphs in one position (as is thecase for 1st, 3rd and 4th singular where bothnumber and case marker are realized by the nullmorph).
Nevertheless, with regard?
to thehandling of umlautung in our approach theseproblems are not relevant.The Integrat ion  into the GrammarWe will now show how the two parts of oursystem work together.
Take e.g.
the dativeplural of Mann (man), M~innern.
Forgeneration, the grammar part constructs thelexical string SmAnn#er#n$ (# marks a morphboundary and $ a word boundary), which isgiven to the two-level part.
The relevant lexicalinformation for the purpose of umlautung is thestem vowel A in mAnn , and the feature\[umlautung: +\] in #er.
As described in the lastchapter, by structure sharing this information374 4has already been enriched by the generationprocess providing mAnn with the feature\[umlautung: +\].
When reaching the stem vowelA the rules try to unify their filters with thefeature structure of mAnn.
Only the umlaut rulesucceed,,;, generating the correct surface form$mtinnern$.Now one can also see why the (incon'ect)form Manner will not be accepted by theparser.
The filter of the obligatory rule A = > awould add the feature \[umlautung -\] to thefeature structure of mann.
This inhibits theunification with the feature structm'e of #er.syn- \[cat: noun 1head \[person: 3J\[max:+\] loc bar Lmin:- i -li !i \[casus \[ \] Iagr 0 |gend~!
\] I|num k J \]Lumlautung \[ \] l..I \[ \[ I a I atn?un*<?
loc bar Lmin:-~\] syn loc\]bar \[max: +\]/ ~casus \[\] ql Lagr'~.
num \[ \] \] dgender \[ \] \] i ag,' num \[ \] /l-h" .\[cat: noun\]syn loc/bar \[max: +1 syn lee /b~ \[miax:+JLagr qgender \[ \] \] + ,d-hum \[ \]agr 1 L ~\[umlautung \[ \]Figure 5: Basic tree structure created by the grmnmar for nounsThe analysis starts with the surface fern-1$mdnnern$.
Because no morph has beenrecognized yet, both mAnn and miinn arederivable (because of the default rule d = > ~).At that point the morph mann is found in thelexicon.
The filter is successfully unified withthe lexical entry, transferring the informationthat umlautung has taken place.
Now a morphboundary must be created.
A 0 is inserted inthe surface form which is mapped to # in thelexical form.
(There still remains the otherpossibility to look for a longer morph.
Thishypothesis can only be discarded when the endof the surface form is reached without finding acorresponding morph in the lexicon.)
Next #eris found in the lexicon.
Since that endingallows for umlautung (having the feature\[umlautung: +\]), the morphosyntactic grammarcan combine it with the stem which has alreadybeen unified with the nile filter.
Next the morph#n is recognized, completing the analysis path.At this point we want to remind you of thefact that the morphosyntactic grammar uses thenotion of null morphs for all unmarked forms(e.g.
in our example the singular marker).
Nullmorphs are not included in the lexical stringthough.
They operate solely at the level of themorphosyntactic grammar.
Take e.g.
thegeneration of Mann (nora sg).
Although onlySmAnn$ is created as lexical string, the nullmorph has enriched the associated featurestructure with \[umlautung: -\] enforcing thegeneration of the surface string Mann byblocking the umlaut rule.Analysis works in a similar way.
When$mann$ is input as surface string, it is mappedto the lexical string unchanged.
It is nowassociated to the morph mann the featurestructure of which has been unified with therule filter providing it with \[umlautung: q. Tocreate a legal word form it must now be5 375combined with number and case markers.These can only be null morphs and theiragreement features must unify, which leads tothe correct interpretation.Another example from derivation shalldemonstrate how well the marking of stemvowels and the feature umlautung worktogether to define the occurence of umlautung.The verb klagen (to mourn) shows no umlaut inany of its forms.
The same is true for thenominalization Klage.
But the derived adjectivekldglich surprisingly exhibits an umlaut.
Acloser look shows that this behaviour conformsto what our system predicts.
The morph kIAgis marked as a stem which may take umlaut.Since all endings of weak verb conjugation aremarked with \[umlautung ~\] no umlautung takesplace for any of the verb forms.
The same istrue for the noun plural ending/tn.
But #1ichcomes with the feature \[umlautung +\] triggeringthe umlaut-rule to produce the surface formkldglich.Unfortunately in derivation and compositionthere are exceptions to the nile.
Contrary to ourexpectations we find the adjective handlichderived from the noun Hand.
Since the pluralform of the noun is Hdnde the morph mustclearly be stored as hAnd in the lexicon whichwould yield hdndlich which is incorrect.
Therem'e two solutions to this problem.
One can takethe stance that in such cases derivation is nolonger transparent and that these words shouldbe entered into the lexicon as a whole.The other solution would be to introduceexception markers with such morphs whichblock the application of the umlaut rule (say\[flex-uml-poss: -\] for flexion and \[deriv-umPposs: -\] for derivation).
Instead of the singlefeature umlautung for all affixes we then needto mark flexional endings and derivationalendings with the features flexional-umlautungand derivational-umlautung respectively.
Therule filters become more complex too.
Umlautrules are equipped with the following filter:{ \[flexional-umlaut: + \] \[flex-uml-poss: +\] }\[derivational-umlaut: +\] \[deriv-uml-poss: +\],the corresponding no-umlaut rules get anaccording one.
All morphs not explicitlymarked will behave like before, i.e.
takeumlautung in both cases.Conc lus ionWe have shown a hybrid system formou~hological analysis and synthesis, based ontwo-level morphology and unification-based376grammar ules.
By providing two-level ruleswith a filter in the form of a feature structure theapplication of these rules can be controlled bythe morphosyntactic grammar in a consistentway.
The filters are also used to transfermorphosyntactic information from the two-levelpart to the grammar.
This allows the descriptionof non-concatenative morphological phenomenausing such rules without the use of(phonologically) unmotivated diacritics.As an example, we have shown how oursystem can handle German umlautung in alinguistically satisfactory manner.
Translationof the umlaut is performed by a two-level rulewhich is filtered by a feature umlaumng.
Themorphosyntactic interpretation f the umlaut isonly performed at the level of the grammarrules.The proposed method can be applied to othernon-concatenative phenomena s well.
Theidea of filters seems also to be a promisingsolution for morphonological  phenomenawhich are restricted to certain classes ofmorphs (or words).Re ferences :Bear J.
(1988a): A Morphological Recognizer withSyntactic and Phonological Rules, COLING-86,Bonn, BRD.Bear J.
(1988a): Generation a d Recognition ofInflectional Morphology, in: H.Trost (ed.
),4.0sterreichische Artificial Intelligence-Tagung,Springer, Berlin, 3-7.Carson J.
(1988): Unification and transduction inComputational Phonology, COLING-88, Budapest,106-111.Gigerich H. (1987): Zur Schwa-Epenthese imStandarddeutschen, Linguistische B richte 112,449-469.G0rz G., Paulus D. (1988): A Finite State Approach toGerman Verb Morphology, COLING-88, Budapest,212-215.Karttunen L. (1983): KIMMO: A GeneralMorphological Processor, Texas Linguistic Forum22, 167-186.Koskenniemi K. (1983): Twoolevel Model forMorphological Analysis, UCAP83, Karlsruhe,BRD, 683-685.Schiller A., Steffens P. (1990): A Two-LevelMorphology for a German atural languageunderstanding system, IBM Stuttgart, manuscript.Trost H., Dorffner G. (1987): A System forMorphological Analysis and Synthesis of GermanTexks, in: D. Hainline (ext.
), New Developments inComputer-Assisted Language Le0Jaaing, ('roomsHelm, London./ .6
