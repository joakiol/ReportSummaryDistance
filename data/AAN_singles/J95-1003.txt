Automatic Referent Resolutionof Deictic and Anaphoric ExpressionsCarla Huls*University of NijmegenWim Claassen*University of NijmegenEdwin Bos*University of NijmegenDeictic and anaphoric expressions frequently cause problems for natural language analysis.
Inthis paper we present asingle model that accounts for referent resolution of deictic and anaphoricexpressions ina research prototype of a multimodal user interface called EDWARD.
The linguisticexpressions are keyed in by a user and are possibly accompanied by pointing estures.
The proposedmodel for reference resolution elaborates on Alshawi's (1987) notions of context factors andsalience and integrates both linguistic and perceptual context effects.
The model is contrasted withtwo alternative referent resolution models, namely, a simplistic one and the more sophisticatedmodel proposed by Grosz and Sidner (1986).
Based on empirical and analytical grounds, weconclude that the model we propose is preferable from a computational nd engineering point ofview.1.
IntroductionThis paper deals with the automatic referent resolution of deictic and anaphoric ex-pressions in a research prototype of a multimodal user interface called EDWARD.The primary aim of our project is the development and the assessment of an inter-face that combines the positive features of the language mode and the action modeof interaction (Claassen et al 1990).
EDWARD (Huls and Bos 1993; Bos et al 1994)integrates a graphical graph-editor called Gr 2 (Bos in press) and a Dutch natural lan-guage (NL) dialogue system called DoNaLD (Claassen and Huls 1991).
One of theapplication domains involves a file system environment with documents, authors, agarbage container, and so on.
The user can interact with EDWARD by manipulatingthe graphical representation f the file system (a directed graph), by menus, by writtennatural or formal language, or by combinations of these.
EDWARD responds in NL(either written or spoken) and graphics.In this paper we will go into the semantic and pragmatic processes involved in thereferent resolution of deictic and deixis-related expressions by EDWARD.
(Syntacticissues will not be discussed here; for these, see Claassen and Huls 1991.)
The properinterpretation f deictic expressions depends on the identity of the speaker(s) and theaudience, the time of speech, the spatial ocation of speaker and audience at the timeof speech, and non-linguistic communicative acts like facial expressions and eye, hand,and body movements.
Lyons (1977, p. 637), provides the following definition of deixis:* Nijmegen I stitute for Cognition and Information, P.O.
Box 9104, 6500 HE Nijmegen, The Netherlands.E-mail: huls@nici.kun.nl@ 1995 Association for Computational LinguisticsComputational Linguistics Volume 21, Number 1the location and identification of persons, objects, events, processesand activities being talked about, or referred to, in relation to thespatiotemporal context created and sustained by the act of utteranceand the participation in it, typically, of a single speaker and at leastone addressee.In the context of the present paper, we distinguish three types of deixis: personal, tem-poral, and spatial deixis.
Personal deixis involves first- and second-person pronouns(e.g., I, we, and you).
Temporal deixis is realized by the tense system of a language(e.g., he lives in Amsterdam) and by temporal modifiers (e.g., in an hour).
Temporal deixisrelates the time of speech to the relation(s) expressed by the utterance.
Spatial deixisinvolves demonstratives or other referring expressions that are produced in combi-nation with a pointing gesture (e.g., thisS file, in which 7 represents the pointinggesture).
In the present paper, most attention will be given to spatial deixis.Deictic expressions can be contrasted with anaphors.
Unlike deictic expressions,anaphors can be interpreted without regard to the spatiotemporal context of the speak-ing situation.
Their interpretation depends merely on the linguistic expressions thatprecede them in the discourse.
For example, this is an anaphor in Print the file aboutdialogue systems.
Delete this.
In many languages, the words used in deictic expressionsare also used in anaphoric expressions.Deictic and anaphoric expressions frequently cause problems for NL analysis.Sijtsma and Zweekhorst (1993) find referent resolution errors in all three commer-cial NL interfaces they evaluate.
In research laboratories, a couple of systems capableof interpreting deictic expressions recently have been developed.
Allgayer et al (1989)describe XTRA, a German NL interface to expert systems, currently applied to sup-porting the user's filling out a tax form.
XTRA uses a dialogue memory and a tax-formhierarchy to interpret multimodal referring expressions.
Data from the dialogue mem-ory and from gesture analysis are combined (e.g., by taking the intersection of two setsof potential referents uggested by these information sources).
Neal and Shapiro (1991)describe a research prototype called CUBRICON, which combines NL (English) withgraphics.
The application domain is military tactical air control.
Like XTRA, CUBRI-CON uses two models to interpret deictic expressions: an attentional discourse focusspace representation (adapted from Grosz and Sidner 1986) and a display model.
Stock(1991) describes ALFresco, a prototype built for the exploration of frescoes, using NL(Italian) and pictures.
For referent resolution in ALFresco, topic spaces (Grosz, 1978)are combined with Haji~ov~'s (1987) approach, in which entities are assumed to "fadeaway" slowly.
Cohen (1992) presents Shoptalk, a prototype information and decision-support system for semiconductor and printed-circuit board manufacturing with aNL (English) component.
In Shoptalk too, the interpretation process is based on theapproach of Grosz and Sidner.
We believe that the fact that these systems use twoseparate mechanisms for modeling linguistic and perceptual context is a disadvantageover the use of only one mechanism for referent resolution.
From a computationaland an engineering position, one mechanism that handles both deictic and anaphoricexpressions in the same way is preferable.We will (try to) show how both deictic and anaphoric references can be resolvedusing a single model.
We have used the framework presented by Alshawi (1987)to develop a general context model that is able to represent linguistic as well asnon-linguistic effects on the dialogue context.
This model is used, in conjunctionwith a knowledge base, by EDWARD's interpretation component to solve deictic andanaphoric referring expressions.
The same model and knowledge base are used byEDWARD's generation component to decide the form (e.g., he, the writer, a man), the60Carla Huls et al Deixis and AnaphoratextLgraphicslanguageinterpreterI,Tgraphicsinterpreterlanguagegeneratorgraphicsgenerator dialogue manager- lexicon I -interpreter knowledge sources generatortext/graphicsFigure 1The main components ofEDWARD.content (e.g., the writer, the husband), and the mode (e.g., linguistic or simulated point-ing gesture; Claassen 1992; Claassen et al 1993) of referring expressions.
In this paper,however, we focus on the use of the context model to resolve deictic and anaphoricexpressions keyed in by the user.The rest of this paper is structured as follows: in Section 2, we present an overviewof EDWARD.
Next, we describe the knowledge sources EDWARD uses to interpretdeictic and anaphoric expressions (Section 3).
In Section 4, we go into the process of in-terpreting deictic and anaphoric expressions in some detail.
Subsequently, in Section 5,we present some user interactions with EDWARD and we compare the results of ED-WARD's referent resolution model with two other models including that of Grosz andSidner (1986).2.
Overv iew of EDWARDEDWARD is implemented in Allegro Common Lisp and runs on DECstations.
Fig-ure 1 presents a schematic overview of EDWARD's system architecture.
The arrowsrepresent the information flow between the main components.
EDWARD accepts inputfrom two devices: ke.yboard and mouse device.
The output is directed to two deviceson the screen: a NL output ext window and a graphics display, and, optionally, to aspeech synthesizer.
The dialogue manager coordinates input and output expressionsand controls the linguistic and graphics processes.
It maintains the Context Model, theknowledge base, and the lexicon; in addition, it decides which individual instancesstored in the knowledge base must be represented on the graphics display, and itmakes sure that the display is always up to date.
The language interpreter and thelanguage generator consult he Context Model, the knowledge base, and the lexicon.Both the interpreter and the generator operate in an incremental fashion.
Figure 2illustrates how the user can interact with EDWARD.The area occupying most of the screen is the graphics display: a window calledModelwereld (Model World).
The tree shown in Figure 2 represents a hierarchy ofdirectories (depicted as bookcases) and files (e.g., reports, papers, e-mail messages,and books).
The viewport shows only part of the Model World window, which inprinciple extends indefinitely.
In the bottom-left corner of the viewport, a garbagecontainer and a copier are displayed.
The bear icon, at the bottom in the middle, rep-resents the system itself (i.e., EDWARD).
Using a mouse, the user can manipulate thegraphical representation f the domain objects by pointing, clicking, and dragging.
Atthe bottom of the Model World window, a mouse documentation bar is presented (the61Computational LinguisticsUlBIIl"li l l li i I T J J~ iY i l  I1Volume 21, Number 1J/~  ~ ~ ~~rt?$-~ge ls  ~cL~s-frans ~rtc~-duLt~I I?lilllil IInvoer : wie SC~lCeef donald_report?Ui~oe~ Wire schreef her over DoNaLD.Invo~ur  : kopieer ~le repporten behl lve dJt.II\[\] mdo~ d_zepo?
t<S~RT-BEAR* I  S;O> t< WASTEBASKETO185&~ 1?~RSCTO~ee~aS>.
1<CqRECTORVp~38>'  1.~RECTO~SO4S.
.?
mREcro~, ,aaz .
T< I~R~CTORV~01 >- t<DIRECTORVo4 | ~0>" IcD4RI~C~'ORVM15S> 1<~RECTORV~OZZ> :?
O4RECTORVIL4001 ?
I<~MAIke8753- :  1?
EMAILeS544 *:<EMJ~ILgS413~: T<EM~La5245~ I~ u  <SP I~-REPORTeSS58~ 1<SP I~-REPORTe5777 > 1<SP~-REPORTe$758> t<Sp IN .REPORTeS735~ i<SP IN .REPORT~4B~S> 1<PHO~COPIE~I  BSO~?O(/~LOGOE- SY~MO 1 ~6)  3?
MA~I  S~0~ S~SP Id -  REPORTe4Sk-~J> 38Figure 2A screen dump of EDWARD.
The user is entering the command: Kopieer alle rapporten behalvedit.
(Copy all reports except for this one.)
after selection of the file icon labeled donald_report.Dutch word Linkerknop means 'left button,' versleep means 'to drag,' and Rechterknopmeans 'right button').
In the bottom-left area of the screen is the NL interaction win-dow labeled Dialoog (Dialogue).
Here the user can enter NL commands, questions, orassertions.
Depending on the number of words and ambiguities in a linguistic expres-sion, interpretation takes between 0.5 and 1.5 seconds when running on a PersonalDECstation 5000.
In Figure 2, the user has requested the system to copy all reports exceptfor this one.
At the bottom right, the trace window Context displays the salience valuesof some of the discourse referents.
Referents are presented by the name of the conceptclass they belong to, followed by the number sign (#) and a unique number enclosedin angle brackets, e.g., <directory#4001> and <spin-report#4929> (spin-reports are aspecial kind of project reports).3.
Knowledge SourcesTo be able to interpret referring expressions, EDWARD uses three knowledge sources:a knowledge base, a context model, and a lexicon.
The knowledge base stores thepermanent generic and specific world knowledge of the system, whereas the ContextModel temporarily "memorizes" which individual instances from the knowledge basehave been referred to in the dialogue.
The lexicon specifies morphophonological ndsyntactic features of words and contains links between words and the knowledge base62Carla Huls et al Deixis and Anaphorathat represents lexical meaning.
In this section we will describe the knowledge baseand Context Model.3.1 The Knowledge BaseThe knowledge base is a semantic network implemented in CommonORBIT (De Smedt1987), a frame- based language somewhat similar to KL-ONE (Brachman and Schmolze1985).
The nodes in the network represent classes and instances of entities and rela-tions.
For example, the class <person> contains two subordinate classes, <man> and<woman>, and the concept of sending an object o someone is represented by a genericrelation called <send>.
Individual objects in the domain are represented by instances;e.g., an individual who is a man might be represented as <man#24>.
If he sends amessage, a relation instance is created; e.g., <send#89>.
Contrary to KL-ONE, relationshave a time interval associated with them, which represents he period of time duringwhich the relation is assumed to hold.
A time interval has a start value and an endvalue.
The end value may be *NOW*, which is a dynamic value representing open-endedness in a time interval.
Much like in KL-ONE, relations 1 contain role-filler classrestrictions and role-set restrictions.
For example, with the generic relation <send>,three semantic (case) roles are associated, called <agent>, <goal>, and <recipient>.The role-filler class restrictions then specify, for example, that the fillers of the <agent>and <recipient> roles must be either persons or institutions and that the filler of the<goal> role (the object hat is sent) must be concrete and excludes persons.
This in-formation is used by the interpretation component to restrict he referent sets of therole fillers of a relation.
The role-set restrictions specify, for example, that the filler ofthe <recipient> role in a <send> relation is not, at least not in our current domain,allowed to be identical to the filler of the <agent> role.
2 The interpreter could usethese restrictions to exclude certain referents from the set of potential referents.Depending on the domain EDWARD is being applied to, a filter is defined todetermine which concepts of the knowledge base should be visually represented onthe screen.
The file system domain filter, for instance, allows instances of particular filesystem classes, such as directories, e-mail messages, reports, and books.
The instancespassing the filter are represented by icons that depict their class.
The only relationinstances passing the file system domain filter are <contain> relations and <name>relations.
A <contain> relation is represented graphically by a straight line linkingthe icon that represents he container and the icon representing the object contained.<Name> relations (if present) are represented by a label underneath t e icon of thenamed object (see Figure 2).3.2 The Context ModelThe second knowledge source EDWARD uses to analyze referring expressions i theContext Model.
The central notion in this model is salience.
The intuitive notion ofsalience has two important characteristics.
In the first place, the salience of an instanceat a given moment is determined by a diversity of factors of varying importance.
Inwritten language, recency of mention is known to be an important factor, as are syntac-tic and semantic parallelism, the markedness of expressions and constructions, and soon.
Spoken language adds intonation, and when the situational context gets involved,various perceptual factors like visibility join in.
The second important characteristic1 KL-ONE represents relations by "roles" that correspond to two-placed predicates.2 Usually, the notion of C-command is used to handle these kind of restrictions.
However, this syntacticsolution works only for restrictions within one sentence.
The role-set restriction approach we propose isindependent of the size of units processed by the interpreter.63Computational Linguistics Volume 21, Number 1Table 1Context factors and their significance weights after successive updates.SuccessiveContext Factors Objects in Scope WeightsLinguistic CFsMajor-constituent referents CFSubject referent CFNested-term referent CFRelation CFReferents of subject, (in)direct object, \[3, 2,1, 0\]and modifierReferents of the subject phrase \[2,1, 0\]Referents of noun phrase modifiers \[1, 0\](e.g., prepositional phrase, relative clause)Relations expressed by subject, \[3, 2,1, 0\]prepositional phrase, and relative clausePerceptual CFsVisible referent CF Referents visible in the current viewport \[1,..., 1, 0\]Selected referent CF Referents selected in the model world \[2,..., 2, 0\]Indicated referent CF Referents indicated by a pointing esture \[30,1, 0\]of salience is its gradedness.
An individual instance may be more or less salient, maygradually become less salient, etc.Alshawi (1987) provides a general framework for modeling salience that does jus-tice to both characteristics mentioned above.
The central construct in this framework isthat of context factor (CF).
A CF is defined by a scope, which is a collection of individ-ual instances; a significance weight, represented by an integer; and a decay function,which indicates by what amount he CF's significance weight is to be decreased at thenext update.
In EDWARD we have adopted Alshawi's notion of CFs and elaboratedit.
Table 1 presents an overview of the CFs EDWARD uses.The salience value (SV) of an individual instance (inst) at any given moment isobtained simply by adding the current significance weights of the CFs which havethat instance in their scope:SV(inst) = ~ significance weight (CFinst).i=1Henceforward, we will say that an individual instance is in context if its SV is morethan 0.
The elegance of this particular notion of salience is that it allows for a unifiedmeasure of salience, which is determined by an indefinite number of independentfactors that can be monitored separately.
This architecture differs from the architecturesof related work on multimodal interfaces described in the introduction, which all adoptGrosz and Sidner's approach to modeling referents in context.
In Section 5, we willcompare their approach with ours.In EDWARD we presently use seven CFs (see Table 1): four serve to model lin-guistic context effects and three to model perceptual context effects.
The linguistic CFsare major-constituent referent CF, subject referent CF, nested-term referent CF, and re-lation CE Major-constituent referents are the referents of the subject, the direct object,the indirect object, and the main modifiers of a sentence.
They are the role fillers of therelation expressed by the main clause.
A major-constituent referent CF has an initialsignificance weight of 3.
(All significance weights have been determined by trial anderror and, as will be shown in Section 5, work fine.)
Subject referent CFs model the64Carla Huls et al Deixis and AnaphoraTable 2Example of salience value calculation.SV of Koen SV of Ria SV of the Article0 0 0Koen is de echtgenoot van Ria.
3 + 2 = 5 1 0Koen is the husband of Ria.
subject + major nestedHijschrijfteenartikel.
(3 -1+2-1)+3+2=8 1-1  =0 3He writes an article.
(existing) + subject + major existing majorHetartikelgaatoverzi jn (3 -1 -1+2-1-1+3 3 (3 -1 )+3+2=7vrouw.
-1+2-1)+1=5The article is about his wife.
(existing) + nested major (existing) + subject+ majorobservation that referents of subject noun phrases (NPs) are more salient than ref-erents of the other major clause constituents.
Their initial significance weight is 2.
3Nested-term referents are the referents expressed by NP modifiers.
These referentsare mentioned in the sentence, but they are less prominent han the subject referentsor major referents.
Nested-term referent CFs have an initial significance weight of 1.Relation CFs are created for all the relations expressed by a sentence, e.g., by the mainclause, or by NPs modifying prepositional phrases.
Their purpose is to make referencesto actions expressed in a sentence possible, as in, for example, do it again.
Their initialsignificance weight is 3.
The decay function of the linguistic CFs subtracts 1 from aCF's weight at each successive update.
If a CF's weight equals 0, the CF is discarded.Table 2 shows how the salience of some individual instances changes in the courseof a short dialogue.
The three rightmost columns present he SVs after the interpreta-tion of the utterance in the left column.
These values are used for the interpretation ofthe next sentence.
After each sentence, the existing CFs are updated by calling theirdecay functions, and new CFs are created.The perceptual CFs are as follows: visible referent CF, selected referent CF, andindicated referent CE Visible referent CFs cause referents that are visible to havea higher SV than referents that are not visible.
A visible referent CF has an initialsignificance weight of 1, so a referent hat is visible will be a little more salient than areferent that is not.
As soon as the graphical representations (icons) of the referents inthe scope of a visible referent CF become invisible (e.g., as a result of a scroll action),the weight drops to 0 and the CF will be discarded.
Selected referent CFs cause selectedreferents to be more salient than referents that are merely visible.
A selected referentCF is created when an icon has been selected by the user (by moving the mouse to theicon and clicking the left mouse button), or when the user has requested the system(in natural or formal language) to select icons.
Its significance weight is initially 2, andit remains 2 for as long as the icon remains elected.
As soon as the icon is deselected,the weight drops to 0 and the CF will be discarded.
An indicated referent CF, finally,causes a referent hat is indicated by either the system or the user to be very salientfor a short time.
Indication by the system is done by means of a simulated pointinggesture: a fat, animated growing arrow to a particular icon (for instance, generatedupon the question "Which e-mail message is about parsing?").
An indicated referentCF has an initial significance weight of 30 to make sure that the referent in its scope3 Note that the subject referent resides in two scopes: ubject and major-constituent CFs.65Computational Linguistics Volume 21, Number 1Table 3The four types of referring expressions.
Anaphoric expressionsare only possible in the NL mode.
EDWARD is able to deal withall four types.Referring ExpressionsMode Deictic AnaphoricNL (unimodal) this file on the left itthe dissertation this fileGraphics (unimodal) simulated pointing gesture -th is7  fileMultimodal IPF 7 -he7you7will be the most salient one immediately after the pointing has occurred.
After the firstupdate, its significance weight drops to 1, and at the next update, it becomes 0.
Noticethe difference between selection and indication.
Selection is an action only the usercan initiate; if the selection is done with a pointing action, both a selected referent CFand an indicated referent CF are created (e.g., for donald_report in Figure 2); otherwiseonly a selected referent CF is created.
However, both the user and EDWARD can point,creating indicated referent CFs; pointing has a more temporary effect than selection.4.
Interpreting Deictic and Anaphoric Expressions in EDWARDEDWARD is able to interpret he two kinds of referring expressions distinguished inthe introduction, viz., deictic and anaphoric expressions.
When combined with thethree categories of interaction modes- -unimodal  graphical, unimodal inguistic, andmult imodal--this results in the four types of referring expressions listed in Table 3.
4The basic principle that is used by EDWARD to solve referring expressions i thesame for all four types of referring expressions hown in Table 3.
Both EDWARD'sgraphics processes and its syntactic, semantic, and pragmatic interpretation processesoperate on line (i.e., interpretation starts directly and goes on while the user entersthe remaining of his utterance), incrementally (i.e., the interpretation is built up pieceby piece from left to right), and in parallel (i.e., more than one interpretation processcan be handled at every moment).To determine the referent of a phrase, first all individual instances atisfying thesemantic restrictions of the phrase are listed.
The one with the highest SV, being themost likely referent, is put at the front.
Next, after completion of the phrase, thesalience of each referent is retrieved by adding the significance weights of all CFs thathave this individual instance in their scope, s The most salient individual instance istaken to be the referent of the phrase.
In the final sentence of Table 2, for example,the referent of the phrase het artikel (the article), is the most salient individual instancebelonging to the class Karticle> or to any of its subordinate classes.
This approach4 Referring by name is not included in this table, because it is neither adeictic nor an anaphoricreference.
However, EDWARD solves referring by name the same as it does the other four types ofreferring expressions.5 The programming language CommonORBIT used in EDWARD provides pointers back from the objectto the CFs that have the object in its scope (which compares to Alshawi's notion of marking).66Carla Huls et al Deixis and Anaphoraimplies that if a particular individual instance has the highest SV, the user need notbe very specific and can use, for example, het (it), die (that one), die file (that file), ordat ding (that thing).
If the highest SV is shared by several instances (a tie), EDWARDwill ask the user to indicate which of the candidates i  intended (e.g., "Do you meandonald_report?").
The following three subsections describe how EDWARD deals withthe specifics of the four types of referring expressions in turn.4.1 Unimodal Linguistic Reference4.1.1 Anaphora.
Anaphoric expressions can be generated using demonstratives: .g.,dit (this), deze files (these files); personal pronouns, e.g., hij (he), het (it); and adverbs,e.g., daar (there).To determine the referent of an anaphoric expression, the interpretation componentretrieves the most salient, semantically appropriate referent.
The salience of a referentis influenced by both linguistic and perceptual context, as was described in Section 3.2.Plural reference is handled by using sets.
To illustrate this, suppose EDWARDhas just generated Het bevat gr2_report en qbgc.
(It contains gr2_report and qbgc.).
Atthat point, a set instance <set#1189> consisting of <spin-report#6362> and <spin-report#6173> is in context, as are the two individual file instances (though they havelower SVs than the set instance).
If the user enters Verwijder die.
(Remove them.
),die (them) is considered to refer to the most salient instance satisfying the semanticrestrictions, in this case <set#1189>.An interesting subset of anaphoric expressions are inferential anaphors.
Inferentialanaphors are references toindividual instances that are not explicitly introduced in thedialogue, but are implicitly introduced by associated instances: e.g., The secretary in thesentence pair The NICI has 80 employees.
The secretary is called Hil.
To identify the correctreferent, an inference must be made, in this case that institutes employ secretaries.Haviland and Clark (1974) called this type of inference a bridge.
There are (at least)two ways to have the system "cross the bridge" and resolve inferential anaphors.The first involves the incorporation of associative CFs that create some salience forassociates of individual instances just mentioned (e.g., upon mentioning of the NICI,creating associative CFs for the institute's secretary, its director, its hosting university,etc.).
We have discarded this option because it is unattractive from a computationalpoint of view.
In many domains, the number of associated individual instances ofa mentioned individual instance may be very high.
Creating associative CFs for allof these associate individual instances i computationally expensive, especially sincemost of them would have been created without being of any use (only seldom arethere several bridges to cross simultaneously).
In a worst case scenario, associative CFsinterfere with the referent resolution of normal anaphoric expressions.
Not-mentionedindividual instances that are in the intersection of the sets of associate individualinstances of several consecutively mentioned referents may become more salient haninstances that have been mentioned.
For example, suppose Herb, the brother of theboss of the NICI, and Catherine, the boss's sister, visit the NICI.
Upon interpretationof Herb and Catherine visit the NICI, the boss of the NICI would have some salienceowing to three associate CFs that have been created for it.
But any subsequent malepronoun (he, him, his) can refer only to Herb and not to the not-mentioned boss ofthe NICI.In the second solution, associate individual instances are not in focus as long asinterpretation f referring expressions can work as described above.
If no referent canbe found by the interpreter for a particular phrase, e.g., no secretary is in context in thecase of The NICI has 80 employees.
The secretary is called Hil, for all referents that are in con-text, starting with the one with highest salience, their associated individual instances67Computational Linguistics Volume 21, Number 1are retrieved and matched with the class of the phrase.
We currently use the followingtentative heuristic for associated individual instance retrieval: All relations are takeninto account between the referent in context (in this example, <department#276>,having a <name> relation with NICI) and a referent of the requested class that can beexpressed by the lemma van (of).
In the example, this simulates the NPs: the secretaryof the department.
6 An advantage of this approach is that referent resolution for phrasesother than inferential anaphors is not affected.
No effort is wasted in creating associa-tive CFs for individual instances that are not mentioned.
Starting the search processat the most salient instance saves computational costs.4.1.2 Deixis.Personal deixis.
The intension of the personal pronouns ik (I) and jij (you) is representedusing the following predicates:ik --* 3(x,y) cognizer(x) Atalking-to(x,y)jq --* 3(x,y) cognizer(x) Atalking-to(y,x)where the predicate cognizer is taken from Pylyshyn (1984), meaning any rationalagent, e.g., a person or a dialogue system, and talking-to is a predicate that representsthe dialogue situation at any time.
For example, when the user is entering an inputsentence, the clause talking-to(user, system) is true so the pronoun ik (I) refers to theuser.
It is the dialogue manager's task to keep track of who is talking to whom andto update the knowledge base accordingly.Temporal deixis.
The interpretation of temporal deixis critically depends on the timeof speech of the utterance.
EDWARD uses the machine time as an anchoring point.For example, the time interval of the relation <live-in#I> expressed by Koen woontin Nijmegen.
(Koen lives in Nijmegen.)
is an open-ended time interval starting at themachine time at the time of interpretation and ending at *NOW*.
If another elatedrelation is added to the knowledge base, e.g., <live-in#2> expressed by a subsequentKoen woont in Amsterdam.
(Koen lives in Amsterdam.
), the open-ended time intervalof the first <live-in> relation is closed, ending at the current machine time at thetime of interpretation of the second relation.
The first <live-in> relation can now bereferred to in simple past tense; the second, in present ense.
For example, in case of asubsequent question like Woont Koen in Amsterdam?
(Does Koen live in Amsterdam?
),the time interval of this question relation, viz., *NOW*, is included by the time intervalof <live-in#2> found in the knowledge base, and thus the system would respondwith Ja, hij woont er.
(Yes, he lives there.).
If, however, the question were Woont Koen inNijmegen?
(Does Koen live in Nijmegen?
), *NOW* is not included by the time intervalof <live-in# 1>, the relation no longer holds, and the system would respond negatively.Since the system, in this case, knows what <live-in> relation does hold, it can respondcooperatively with Nee, hij woont in Amsterdam.
(No, he lives in Amsterdam.).
Currently,simple present and simple past tense are the only two tenses handled.Spatial deixis.
The presence of a visible model world invites the user to generate re-ferring linguistic expressions involving the spatial environment.
We call definite NPsreferring to the only object of a certain type visible at that moment implicit spatial6 The heuristic an be seen as a practical solution to find attributes of a concept and in Dutch seems towork in almost every case.
A more general solution consists, of course, of specifying associated conceptlinks in the semantic network, which currently contains only is-a links.68Carla Huls et al Deixis and AnaphoraFigure 3Reference resolution of spatial descriptions: a schematic lay out of two directory icons and twofile icons.deixis.
An example is the NP the closed bookcase in the case that only one icon resem-bles a closed bookcase.
EDWARD solves this type of referring expression simply byobtaining the most salient object of the right type.
The object will be in the scope ofthe visibility CF, and if no other object of this type is in context, the visible object thuswill be selected as the referent.Explicit references to the spatial environment are references to spatial relations.Spatial relations can be divided into topological relations and projective relations (Retz-Schmidt 1988).
Examples of topological relations are IN, AT, and NEAR.
Topologicalrelations (e.g., the file near it) refer to topological relations between the referent and therelatum (in this example, the object referred to by it).
Examples of projective relationsare IN FRONT OF, BETWEEN, LEFTMOST, and BESIDE.
Projective relations conveyinformation about the direction in which an object is located with respect o anotherobject or to the world.
A particular linguistic expression describing a projective relationcan be used in three different ways: deictically, intrinsically, and extrinsically.
Thephrase the ball in front of the car, for example, can have three interpretations.
It couldmean that the bali's location is referred to in relation to the car from the speaker'spoint of view (deictic use), or with respect o the orientation of the car itself (intrinsicuse), or with respect o the actual direction of motion of the car (extrinsic use).In EDWARD all linguistic expressions describing spatial relations are interpreteddeictically.
For the time being, this restriction does not cause problems.
Extrinsic use of,for example, the projective preposition left of, i.e., left of an object hat is being draggedby the user, when looking in the direction of dragging, is currently impossible sincethe user cannot drag and write linguistic expressions simultaneously.
Intrinsic use of,for example, left of and right of is assumed to be rare in the current domain: none ofthe now more than 50 users that have interacted with EDWARD used it.To determine the referent of a spatial expression, the visible Model World isscanned for a referent, using the intension of the spatial relation and the relatum.The area to be scanned depends on the context.
For some relations, the boundariesof the Model World are searched for (e.g., the bottom most file); for others, the area inthe relatum's vicinity (e.g., the file left of donald_report), or the area of the most salientobjects (e.g., the file on the left if the directory containing that file is very salient) aresearched for.Now let us consider a more complex example.
Suppose there are two directoryicons and two file icons, positioned as schematically indicated in Figure 3.
Supposeall objects have a SV of 1, and no other files and directories are in context (i.e., havea SV greater than 0).69Computational Linguistics Volume 21, Number 1Both expressions, the file and the directory, are ambiguous and would force ED-WARD to start a clarifying user consult.
However, the spatial description the file belowthe directory is unambiguous.
Relatum and referent support each other in referencesolution.
EDWARD scans the vicinity of both relata <dir#1> and <dir#2>.
Since itfinds a referent (<file#I>) only for <dir#1>, it can determine <file#l> as referentand <dir#1> as relatum.4.2 Unimodal Graphical ReferenceBecause the notions of deixis and anaphora make sense only in the language mode,we cannot apply this distinction to the action mode.
All unimodal graphical referenceis considered eictic.The graphics analyzer interprets the pointing gestures produced by the user.
Anadditional opportunity in simulated pointing that is not available in normal gesturingis the provision of feedback about the success of a pointing gesture.
The indicatedobject, henceforward referred to as the demonstratum, (e.g., a file icon, directory tree,or screen position), is marked using reverse video and becomes elected.
Usually, theuser points to an object to indicate that it is the argument of the command he wantsto perform, e.g., a file copy command.
Objects remain selected until the user points toanother object or explicitly deselects the selected object.
The pointing gestures that thesystem produces have been designed not to interfere with user selection.
The graphicsanalyzer always immediately updates the selected CF of the demonstratum.The user can simulate pars-pro-toto and totum-pro-parte pointing gestures.
In pars-pro-toto pointing, an object is selected by pointing to a pixel that is within the object'sselection area (which encloses the area covered by its icon) and subsequently pressingthe select object mouse button.
By simultaneously pressing the multiple selection key,multiple objects can be selected.
In totum-pro-parte pointing, objects are selected eitherby enclosing the icons in a mouse-driven rectangle, or by pointing to an icon that ispart of a compound object, typically the root of a directory tree, and pressing the selectcompound object mouse button.Notice that all simulated pointing gestures are in principle ambiguous: they canrefer either to the positions themselves or to the objects located at these positions.When operating in the action mode, i.e., selecting and manipulating raphical repre-sentations, the gestures can be taken to refer to the objects at the positions indicated,since screen positions cannot be manipulated.4.3 Multimodal Referring ExpressionsMultimodal deictic referring expressions combine referring linguistic expressions withsimulated pointing gestures.
Since pointing to time is impossible, only spatial andpersonal deixis is possible in multimodal referring expression.
Demonstrative expres-sions (e.g., dit bestand/deze \[this file/this one\]) in combination with the realization of anappropriate pointing gesture are common examples of multimodal referring expres-sions.
Notice, however, that demonstrative phrases are not necessarily accompanied bypointing gestures (they can be used anaphorically as well; see Section 4.1.3).
Moreover,pointing gestures can also be combined with other, non-demonstrative d finite NPs:Het rapport over DoNaLD zit in ClaassenS.
(The report about DoNaLD is in ClaassenZ;with a pointing gesture to the Claassen directory).To determine the referent(s) of (multimodal) referring expressions, the interpreta-tion component retrieves the most salient referent that satisfies the semantic restrictionsof the input phrase.
The salience of a referent is influenced by both linguistic and per-70Carla Huls et al Deixis and Anaphoraceptual CFs, so the multimodal referring expressions are solved in exactly the sameway as unimodal referring expressions.
Consider, for instance, the interpretation f dit(this one) in sentence (2a) versus the interpretation in sentence (2b) following the NLcommand (1):(1) Zoek het rapport over Gr2.
(Find the report about Gr2.
)(2a) Kopieer alle rapporten behalve dit.
(Copy all reports except for this one.
)(2b) Kopieer alle rapporten behalve ditS.
(Copy all reports except for this/~ one;where the report named donald_report is the demonstratum).Let us assume .that the referent of the report about Gr2 has a SV of 3 just beforesentence (2a) or (2b) is interpreted.
The referent of dit (this one) in sentences (2a) and(2b) would be the most salient report at that moment, which would be the report aboutGr2 in sentence (2a), but the report pointed to (donald~report) in sentence (2b).
Noticethat multimodal expressions with a redundant pointing gesture (e.g., gr2_reportZ ifthere is just one object named gr2_report in the context) are solved the same way.Now, what happens if the user uses multiple pointing gestures within one utter-ance as in the example Zet deze file hierS, en dezeS daarT.
(Put this file hereS, andthis7 one thereT.)?
The fact that both EDWARD's graphics processes and its syn-tactic, semantic, and pragmatic interpretation processes operate on line, incrementally,and in parallel implies that the context effects of a pointing gesture can immediatelybe taken into account by the reference analysis process.
So, if the user points to anicon, the salience of its referent increases immediately, making it the most likely candi-date referent of the phrase at hand.
By the time the user starts to point a second time,the analysis of the previous multimodal referring expression has been completed, andthe context effect of the second pointing gesture is used to solve the correspondingreferring expression.Empirical evidence shows that deictic gestures are indeed exactly coordinated withtheir associated verbal expressions.
Marslen-Wilson et al (1982), for example, observedthat their subject's pointing gestures occurred simultaneously with the demonstrativein the associated NP, or when no demonstrative was used, with the head of the cor-responding NP.
They report no deictic gestures after completion of the correspondingNP.
This implies that the timing of their subject's pointing gestures would satisfy therestriction mentioned above.Since pointing yields both the screen location pointed to and the object positionedat that location, it is the interpreter's job to disambiguate.
Furthermore, more am-biguity arises if two objects have selection areas that partially overlap and the userpoints in this intersection area.
EDWARD cannot determine which object's area theuser referred to unless this pointing action is part of a multimodal expression suchas dit7 boek (thisZ book).
The graphics interpreter passes all candidates (in this case,for example, Kscreen-position#798>, <book#248>, Kreport#546>) onto the dialoguemanager, which brings them temporarily in the context.
That is, an indicated CF anda selected CF are created for each of them.
Guided by the language interpreter, thedialogue manager then decides which of the referents was intended.
In the case ofdit boek, pointing to a report or screen location was not intended, and thus the dia-logue manager decides that the indicated CFs and selected CFs update of the reportand screen location were invalid.
It kills these CFs and subsequently deselects theunintendedly selected object.71Computational Linguistics Volume 21, Number 15.
Assessing the Quality of EDWARD's Referent Resolution ModelTo assess the quality of EDWARD's referent resolution model, we collected a seriesof referring expressions, which were processed by three different referent resolutionmodels, namely that of EDWARD, as described above, a very simplistic model, andthe sophisticated and often applied model proposed by Grosz and Sidner (1986).
Sincethere are no benchmarks available to evaluate referent resolution models, we hadsubjects interact with EDWARD to compile a set of referring expressions.
Usually, NLtest sentences are made up by evaluators/designers themselves, but we think made-uptest sentences may to some extent be unconsciously biased.
In the course of developingEDWARD's referent resolution model, we used hundreds of test sentences made upby ourselves to debug and test the program.
Real referring expressions, generated byusers not familiar with the internal processes of the interpreter, provide a more solidempirical basis for evaluation.
In Section 5.1, we present an overview of these user-generated referring expressions.
In Section 5.2, we briefly describe the way the twoalternative referent resolution models work.
The results of feeding the test sentencesto the three different referent resolution models are given in Section 5.3.
In assessingthe quality of a referent resolution model, it is, however, also necessary to analyze theinternal affairs of the model and determine the inherent limitations that follow fromits design.
In Section 5.4, we present he inherent limitations of EDWARD's referentresolution model as well as those of the two alternative models.5.1 A Test Set of Referring ExpressionsBy having five subjects (two men and three women) interact with EDWARD, weobtained a total of 125 real, user-generated referring expressions.
The subjects all hadsome previous experience with the system, but this was limited to 1 or 2 hours anddated from 2 to 3 months before.
None of them had knowledge of the internal affairsof EDWARD's referent resolution model.
The subjects were to perform 19 tasks; mostwere information retrieval tasks, but some tasks involved effectuating a change in thefile system.
The subjects were not informed which words and syntactic and semanticconstructs could be handled by the system and which could not, but they all knew fromtheir previous encounters that the system was not an unrestricted NL interface.
Wedid explicitly encourage the subjects to use the shortest referring expression possiblewhenever they felt it was appropriate.
From earlier experiments with EDWARD (Hulsand Bos 1993; Huls et al 1993), we know that some users are reluctant to use referringexpressions other than by name (probably due to the impact of command languageinterfaces for familiar file management systems).
Examples of the tasks the subjectswere to perform are the following:...Find out who is the boss of the NICI; followed byFind out who is the secretary of the NICI.Find out who live in Nijmegen; followed byFind out whether all women living in Nijmegen work at the NICI.Put a copy of this \[experimentor points at leftmost file on screen\] file in this\[experimentor points again\] directory.These tasks were supposed to induce inferential anaphors (1), plural referring expres-sions (2), spatial deixis (3), and multimodal referring expressions (3).72Carla Huls et al Deixis and AnaphoraAs we expected, different subjects performed the tasks differently.
Some, for ex-ample, needed two questions to find out who is the secretary of the NICI, others justone, of which two subjects indeed used the induced inferential naphor.
Table 4 showsseveral translated sample sentences taken from the set of sentences the five subjectskeyed in to perform the 19 tasks.
To show the variety in use of referring expressions,we present under (a) the sentences with the largest amount of deictic and anaphoricexpressions keyed in by the subjects and under (b) the least amount.
For example,(19a) shows the sentence subject #4 used for task 19, with two pronouns, and (19b)shows subject #3's sentences with only one pronoun:The frequency with which the different ypes of referring expressions occurredcan be found in Table 5.
Here a clearer view on the variety among subjects in theway of referring is presented.
(The types of referring expressions of Table 5 do notexactly match the four types mentioned in Table 3.
Unimodal graphical deixis was notencouraged in the experiment and therefore did not occur; reference by name occurredfrequently, but this type of reference is not considered to be deictic or anaphoric, andtheir interpretation is therefore l ss interesting from a computational linguistics pointof view.
)Finally, we present some data on the frequencies of use of the two most commonwords that can feature in both deictic and anaphoric expressions, viz., dit and deze(two demonstrative pronouns, respectively neuter and non-neuter).
Table 6 shows thevariety in use.5.2 Two Alternative Referent Resolution ModelsThe sentences with the referring expressions as described in the previous ection wereprocessed by EDWARD's referent resolution model and two alternative referent reso-lution models.
The first alternative model is a very simplistic one.
It simply takes thelast mentioned semantically appropriate referent.
For example, in the sequence Thesecretary is Hil.
Where does she live?
the pronoun she is taken to refer to the last men-tioned female, in this case Hil.
We implemented this Simplistic Model and providedEDWARD with a switch to determine whether sentences should be processed eitherwith the original Context Model or with this alternative Simplistic Model.
Each ref-erent mentioned in the dialogue is put on a stack, and when interpreting a referringexpression, the stack is processed from top to bottom.
To prevent uncontrolled grow-ing of the stack, we had the system discard the object at the bottom of the stack assoon as the stack length exceeded a certain maximum.The second alternative r ferent resolution model is that of Grosz and Sidner (1986).Their model consists of two separate mechanisms, each resolving a specific type ofreferring expression.
The first mechanism is called focusing.
Focusing is used to limitthe information that must be considered in identifying the referents of certain classesof definite NPs.
A stack is created in which the focus spaces corresponding to thediscourse segment purposes are stored.
All entities mentioned in a discourse segmentpurpose and all related entities (e.g., parts of mentioned entities) are stored in a focusspace.
New focus spaces are put on top of the focus stack, and the referent for a NP willbe searched from the top down.
For our data analysis, we suppose a new discoursesegment purpose for each new sentence.
A second mechanism, called centering (orimmediate focusing), is used for pronoun resolution.
In brief, a backward-looking centeris associated with each utterance in a discourse segment.
Of all focused elements, thebackward-looking center is the one that is central in that utterance.
A combination ofsyntactic, semantic, and discourse information isused to identify the backward-lookingcenter.
The fact that some entity is the backward-looking center is used to constrainthe search for the referent of a pronoun in a subsequent utterance.
Unfortunately,73Computational Linguistics Volume 21, Number 1Table 4A translated compilation of the sentences the subjects used to perform the tasks.
Under (a),the sentences with the largest amount of deictic and anaphoric expressions are given; under(b), the sentences with the least amount of deictic and anaphoric expressions are g iven.User's Input EDWARD's Outputla Who is the boss of the NICI?
The boss of the NICI is Charles.2a Who is the secretary?
The secretary is Hil.b Who is the secretary of the NICI?3a Where does she live?
She lives in Nijmegen.b Where does the secretary of the NICI live?4a Who else lives there?
a Charles, Carla, Gerben, Alice, Gerard, Elena,b Who else lives in Nijmegen?
Francois, Edwin, Sacha and Ger live there.5a Do the women work for the NICI?
Yes, they do.b Do the women who live in Nijmegenwork for the NICI?6a Does Wim live in Nijmegen?
No, he lives in Lent.7a What is the name of his wife?
The name of his wife is Hanneke.8a What did he write?
He wrote donald_report andb What did Wim write?
conceptuele_generatie.9a Copy these files.
Ok.b Copy donald_report andconceptuele_generatie.10a What is the subject of thisSfi le?
The subject of this file is DoNaLD.11a Move it to Bos.
Ok.b Move donald_report to Bos.12a Close this.
Ok.b Close Bos.13a Who sent the left e-mail?
Wietske sent it to Carla.b Who sent thisSe-mai l?14a Which e-mails are sent by Alice?
Alice mailed thisTe-mai l  to Wim,thisTe-mai l  to Koen and this/~e-mailto Carla.15a She sent an e-mail about Bos to Wietske.
Ok.b Alice sent an e-mail about Bos to Wietske.16a Remove thisT.
Ok.b Remove this/-~e-mail.17a Move all e-mails of her to Dijkstra.
Ok.b Move all e-mails of Alice to Dijkstra.18a Her husband is called Lou.
Information added.b Alice's husband is called Lou.19a He lives in her hometown.
Information added.b He lives in the same town as Alice.a The original Dutch in 4a and 4b uses the third-person plural form.74Carla Huls et al Deixis and AnaphoraTable 5Numbers of occurrences of different ypes of referring expressions.Subject TotalType of Referring Expression # 1 #2 # 3 #4 # 5By name 18 14 13 12 16 73Normal anaphor 4 8 10 12 8 42Inferential anaphor 0 1 1 0 0 2Unimodal NL deictic 0 0 0 1 0 1Multimodal deictic 2 2 2 0 1 7Total 24 25 26 25 25 125Table 6Numbers of occurrences of the use of dit and deze (both meaning this) anaphorically anddeictically.Subject TotalType of Referring Expression #1 #2 #3 #4 #5dit + deze anaphorically 0 1 2 5 2 10dit + deze deictically 2 2 2 0 1 7Total 2 3 4 5 3 17Table 7The number of referring expressions interpreted correctly by the three referent resolutionmodels.SubjectReferent Resolution Models #1 #2 #3 #4 #5 TotalEDWARD's Context Model 24 25 26 25 25 125Simplistic Model 23 24 25 23 24 119Grosz and Sidner 24 25 26 25 24 124Grosz and Sidner's model presupposes several sorts of information at moments whenEDWARD's interpreter does not have these available.
Consequently, we could useonly a pen and paper analysis of how their model processes the test set of referringexpressions.5.3 How the Referent Resolution Models  Dealt with the Test SetThe sentences with 125 referring expressions entered by the five users to perform the19 tasks were processed by the three referent resolution models.
Table 7 shows thescores.5.3.1 Context Model.
EDWARD's Context Model determined the right referent in all125 referring expressions.
However, in the session of subject #2, we discovered an75Computational Linguistics Volume 21, Number 1error in the interpretation f a dozen sentences this subject keyed in just for curiosityafter she had completed the 19 tasks.
She continued as follows:Alice wrote him an e-mail.Put that e-mail in Dijkstra.Is thisTthe e-mail to Lou?Which one?What is in this e-mail?What is the topic of this e-mail?Where is her e-mail to Lou?OK, information added.OK, information added.No, thisTone is.ThisTone.Sorry, please rephrase.I don't know.Here, the referent of the pronoun her was mentioned too long ago for EDWARD to beable to locate the referent Alice.
EDWARD therefore had to ask the user Whom do youmean with 'her'?5.3.2 Simplistic Model.
The results of the simplistic referent resolution model weresurprising: we counted only 6 misses.
Task (15) particularly showed the restrictions ofthe Simplistic Model:(14) Which are the e-mails sent by Alice?Alice mailed thisSe-mail to Wim, thisTe-mail to Koen and thisTe-mail toCarla.
(15) She sent an e-mail about Bos to Wietske.The she of (15) is considered to refer to Carla, the last mentioned female, but the useractually referred to Alice.
Similar problems occurred with this in task (16).5.3.3 Grosz and Sidner.
Using a pen and paper analysis of how the Grosz and Sid-ner Model processes the sentences, we think their model resolves all but 1 referringexpression correctly.
The only problem we encountered concerned the use of two pro-nouns in one sentence: he lives in her town.
The original model excluded these doubleoccurrences.5.4 Inherent Limitations of the Referent Resolution ModelsIn this section, we describe several problems of the three reference resolution modelsthat follow from their design but did not become apparent in the test set evaluation.First, EDWARD's Context Model and the Simplistic Model do not make any pre-dictions about discourse intention.
Discourse intentions play a primary role in ex-plaining discourse structure, defining discourse coherence, and providing a coherentconceptualization f the term "discourse" (Grosz and Sidner 1986).
Discourse inten-tions can provide clues for the beginning and ending of dialogues and subdialogues.Referent resolution can make use of this structure to exclude referents to (sub)dialoguesthat are ended.
Furthermore, subdialogues do not interfere with the referent resolutionof the main dialogue.
Grosz and Sidner's theory of discourse structure, on the otherhand, does address these problems.The Context Model obviously still lacks several factors that can influence thesalience of a referent.
An example is the different context effects of reference by apronoun versus reference by a definite full-fledged NP.
Grosz and Sidner mention thisdistinction but do not, however, provide a thorough analysis of all syntactic, semantic,and pragmatic rules they envisage to play a role in either focusing or centering.76Carla Huls et al Deixis and AnaphoraA problem for all three of the referent resolution models is the resolution of cat-aphors.
In contrast with anaphors, cataphors refer to instances that will be introducedlater in the discourse (e.g., He will win who... ).
All three models will (try to) locate thereferent of he in the set of individual instances mentioned before.
The resolution ofcataphors, however, requires a more lazy evaluation.6.
Conclus ionsWe have collected some indications about the quality of the Context Model for refer-ent resolution we implemented in our multimodal user interface EDWARD.
We havecompared the capabilities of this model with two alternative models, both empirically,using a test set of 125 user-generated referring expressions obtained from interactionswith EDWARD and, analytically, studying the inherent limitations that follow fromthe models' designs.On empirical grounds we conclude that the Simplistic Model, in which anaphoricexpressions are considered to refer to the last mentioned semantically appropriateobject, is inadequate.
Though it performed, by far, better than we anticipated, toooften the wrong object is taken to be the referent.The quality of the other alternative model for referent resolution, the Grosz andSidner Model, seems to compare to the quality of EDWARD's Context Model.
Aswe understand the Grosz and Sidner Model, it processed 124 referring expressionscorrectly (but this may be inaccurate, since we do not have an implemented versionof the model at our disposal).
Furthermore, it will have problems with interpretingcataphora properly.
EDWARD's Context Model performed well on all 125 test expres-sions, but cataphora will also be misinterpreted.
The Grosz and Sidner Model has amuch broader scope.
In particular, their model addresses the notion of discourse co-herence.
It would be interesting to explore how the insights of Grosz and Sidner withrespect to discourse coherence can be used to elaborate EDWARD's Context Model torender it able to deal with subdialogues.EDWARD's Context Model differs significantly from the Grosz and Sidner Modelfrom an engineering and computational point of view.
The Context Model is relativelysimplistic.
EDWARD never needs to figure out the type of an expression that is beinganalyzed: for all referring expressions, the most salient referent is chosen.
Moreover,entities and relations are handled in a uniform fashion, and syntactic as well as percep-tual influences on salience are incorporated into one model.
The general applicabilityof the technique adds to its beauty.
The language generation component uses it as well.Both components use the role-filler class restrictions, the cardinality information, andthe role-set restrictions from the knowledge base, and they use the same CFs, withthe same initial significance weights, and the same decay functions of the ContextModel.
Grosz and Sidner propose a complex system of rules.
In the Context Model,on the other hand, influences originating from different levels and types of processingare modeled by individual CFs, which are created and managed locally, i.e., by theseprocesses themselves.
As a result, the influences on an object's alience are representeddistributed and independently, which is attractive from a computational point of view.Furthermore, the addition of new CFs, which would require explicit detailed changesin Grosz and Sidner's rules, will be easier because the procedures that use the salienceinformation can stay exactly the same.Though our empirical and analytical studies were only small and provide no firmbasis for drawing conclusions, we do find indications that the quality of EDWARD'sContext Model compares to a large extent to the quality of the more complex Grosz andSidner Model.
Therefore, if one is in need of a referent resolution model for a particular77Computational Linguistics Volume 21, Number 1NL interpreter in a setting where subdialogues are rare, we think that EDWARD'sContext Model is a good alternative to the complex rule system of Grosz and Sidner.The model is easy to build, to maintain, and to expand, and it is computational ly fairlyinexpensive.AcknowledgmentsThis research was performed within theframework of the research programme'Human-Computer Communication usingnatural anguage' (MMC).
The MMCprogramme is sponsored by SPINStimuleringsprojectteamInformaticaonderzoek, Digital EquipmentB.V., Sun Microsystems B.V., and ANDSoftware.
We wish to thank Koenraad DeSmedt, Gerard Kempen, and threeanonymous reviewers of ComputationalLinguistics for their helpful comments on apreliminary version of this paper.ReferencesAllgayer, Jiirgen; Jansen-Winkeln, Roman;Reddig, Carola; and Reithinger, Norbert(1989).
"Bidirectional use of knowledge inthe multi-modal NL access ystemXTRA."
In Proceedings, 11th InternationalJoint Conference on Artificial Intelligence,Detroit, Michigan.
1492-1497.
Los Altos,California: Morgan Kaufmann.Alshawi, Hiyan (1987).
Memory and Contextfor Language Interpretation.
Cambridge:Cambridge University Press.Bos, Edwin (in press).
"A multimodalgraph-editor."
In Syntax-Directed E iting,edited by L. Neal and G. Szwillus.
NewYork: Academic Press.Bos, Edwin; Huls, Carla; and Claassen, Wim(1994).
"EDWARD: Full integration oflanguage and action in a multimodal userinterface."
International Journal ofHuman-Computer Studies 40:473-495.Brachman, Ronald, and Schmolze, James(1985).
"An overview of the KL-ONEknowledge representation system.
"Cognitive Science 9:171-216.Claassen, Wim (1992).
"Generating referringexpressions in a multimodalenvironment."
In Aspects of AutomatedNatural Language Generation, edited byR.
Dale, E. Hovy, D. R6sner, and O. Stock,247-262.
Berlin: Springer.Claassen, Wim, and Huls, Carla (1991).
"DoNaLD: A Dutch natural anguagedialogue system."
SPIN/MMC ResearchReport no.
11, NICI, Nijmegen, TheNetherlands.Claassen, Wim; Bos, Edwin; and Huls, Carla(1990).
"The Pooh way inhuman-computer interaction: Towardsmultimodal interfaces."
SPIN/MMCResearch Report no.
5, NICI, Nijmegen,The Netherlands.Claassen, Wim; Bos, Edwin; Huls, Carla;and De Smedt, Koenraad (1993).
"Commenting on action: Continuouslinguistic feedback generation."
InProceedings, International Workshop onIntelligent User Interfaces, Orlando, Florida.141-148.Cohen, Philip (1992).
"The role of naturallanguage in a multimodal interface."
InProceedings, Fifth Annual ACM Symposiumon User Interface Software and Technology,Monterey, California.
New York: ACMPress.De Smedt, Koenraad (1987).
"Object-oriented programming in flavorsand CommonORBIT."
In ArtificialIntelligence Programming Environments,edited by R. Hawley, 157-176.
Chichester:Ellis Horwood.Grosz, Barbara J.
(1978).
"Discourseknowledge."
In Understanding SpokenLanguage, edited by D. Walker, 229-345.New York: North-Holland.Grosz, Barbara J., and Sidner, Candace L.(1986).
"Attention, intentions, and thestructure of discourse."
ComputationalLinguistics 12:175-204.Haji~ov~, E. (1987).
"Focusing: A meetingpoint of linguistics and artificialintelligence."
In Artificial Intelligence.II: Methodology, Systems, Applications,edited by P. Jorand and V. Sgurev.Amsterdam: Elsevier Science Publishers.Haviland, Susan E., and Clark, Herbert H.(1974).
"What's new?
Acquiring newinformation as a process incomprehension."
Journal of Verbal Learningand Verbal Behavior 13:515-521.Huls, Carla, and Bos, Edwin (1993).
"EDWARD: A multimodal interface."
InProceedings, TWLT5 Enschede, TheNetherlands.
89-98.Huls, Carla; Bos, Edwin; and Damen, Han(1993).
"Fully integrated multimodality:A case study."
Paper presented at HCLInternational '93, August 8-13, Orlando,Florida.Lyons, John (1977).
Semantics.
Volume 2.London: Cambridge University Press.Marslen-Wilson, William; Levy, Elena; andTyler, Lorraine K. (1982).
"Producing78Carla Huls et al Deixis and Anaphorainterpretable discourse: The establishmentand maintenance of reference."
In Speech,Place, and Action, edited by R. J. Jarvellaand W. Klein.
Chicester: John Wiley andSons Ltd.Neal, Jeanette G., and Shapiro, Stuart C.(1991).
"Intelligent multi-media interfacetechnology."
In Intelligent User Interfaces,edited by J. W. Sullivan and S. W. Tyler,11-43.
New York: ACM Press.Pylyshyn, Zenon W. (1984).
Computation andCognition.
Cambridge, Massachusetts:MIT Press.Retz-Schmidt, Gudula (1988).
"Variousviews on spatial prepositions."
BerichtNr.
3.
Universit~it des Saarlandes, SFB 314(VITRA).Sijtsma, Wietske, and Zweekhorst, Olga(1993).
"Comparison and review ofcommercial natural anguage interfaces.
"In Proceedings, TWLT5.
Enschede, TheNetherlands.
43-58.Stock, Oliviero (1991).
"Natural anguageand exploration of an information space:The ALFresco interactive system."
InProceedings, 12th International JointConference on Artificial Intelligence, Sydney,Australia, 972-978.
Los Altos, California:Morgan Kaufmann.79
