Mapping Scrambled Korean Sentences into English UsingSynchronous TAGsC Hyun S. Parkomputer  LaboratoryUniversity of Cambr idgeCambridge,  CB2 3QG, U.K.Hyun.
Park~c l .
cam.
ac .
ukAbst rac tSynchronous Tree Adjoining Grammarscan be used for Machine Translation.
How-ever, translating a free order language suchas Korean to English is complicated.
Ipresent a mechanism to translate scram-bled Korean sentences into English by com-bining the concepts of Multi-ComponentTAGs (MC-TAGs) and Synchronous TAGs(STAGs).1 Mot ivat ionTree Adjoining Grammars (TAGs) were first devel-oped by Joshi, Levy, and Takahashi (Joshi et al,1975).
There are other variants of TAGs such asSTAGs (Shieber and Schabes, 1990), and MC-TAGs(Weir, 1988).
STAGs in particular can be used formachine translation and were applied to Korean-English machine translation in a military messagedomain (Palmer et al, 1995).Park (Park, 1995) suggested a way of handlingKorean scrambling using MC-TAGs together with apriority concept.
However, as scrambled argumentstructures in Korean were represented assets usingMC-TAGs, a mechanism to combine MC-TAGs andSTAGs was necessary to translate Korean scrambledsentences into English.2 Korean-English MachineTranslation Using STAGsSTAGs are a variant of TAGs introduced to charac-terize correspondences between tree adjoining lan-guages.
They can be used to relate TAGs for two dif-ferent languages for machine translation (Abeill6 etal., 1990).
The translation process consists of threesteps.
The source sentence isparsed according to thesource grammar.
Each elementary tree in the deriva-tion is considered with the features given from thederivation through unification.
Second, the sourcederivation tree is transferred to a target derivation.This step maps each elementary tree in the sourcederivation tree to a tree in the target derivation treeby looking in the transfer lexicon.
And finally, thetarget sentence is generated from the target deriva-tion tree obtained in the previous tep.The transfer lexicon consists of pairs of trees, onefrom the source language and the other from thetarget language.
Within the pair of trees, nodes maybe linked.
Whenever adjunction or substitution isperformed on a linked node in a source tree, thecorresponding operation applies to the linked nodein the target ree.i "-':1 , "--'," i  i "?F ibre  1: The K-E Transfer LexiconCanonical ordering of the arguments of transitiveverbs in Korean is SOV.
Whereas the case markerin English is implicit in the word, case markers areexplicit in Korean.
This is reflected in the transferlexicon of Figure 1.
So, the pair a in Figure 1 showsthat Korean has an explicit subject case marker i,and the pair/~ shows that Korean has an explicit ob-ject case marker lul.
Also, the pair 7 shows the linksbetween SOV structure of Korean to SVO structureof English.K: Tom-i Jerry-lul ccossnunta.1 Tom-NOM Jerry-ACC chaseE: Tom chases Jerry.To translate sentence (1), we start with the pair 7in Figure 1, and we substitute the pair a on the linkfrom the Korean node SP to the English node NP.Then, pair/~ is substituted into the NP-OP pairs in7, thus correctly transferring sentence (1).3173 Handl ing of Scrambling in KoreanUs ing  MC-TAGsTAGs and related formalisms, due to the extendeddomain of locality, can combine alexical head and allof its arguments in a single elementary structure ofthe grammar.
However, Becker and Rambow showthat TAGs that obey the co-occurrence onstraintcannot handle the full range of scrambled sentences(Becket and Rainbow, 1990).
As a result, non-localMC-TAG-DL (Multi-Component TAG with Dom-inance Link) was proposed as a way of handlingscrambling 1.
Later, by adding a priority conceptto MC-TAG-DL, Park (Park, 1995) suggested a wayof handling scrambling in Korean.3.1 aAT~ & flAT~ structuresI " I F  .
.
.
\ ]  *" Tom, No: " ,{I-'C,,-,, '\] \[1,oIFor handling scrambling, the multi-adjunctionconcept in MC-TAGs can be used for combining ascrambled argument and its landing site.
For exam-ple, a subject (e.g., Tom) would have two Koreanstructures as above.
For notational convenience,call the two structures, aAT~s~, and ~AT~Gs~, re-spectively.
In general, aAT~G represents a canonicalNP structure and flAT~G represents a scrambled NPstructure.
~.A~s~, shows a pair of structures forrepresenting the scrambled subject argument.
Callthe left structure of ~AT~GsT~, flAT~s~, and theright structure, ~AT~g~,.
~A~g~s~, represents ascrambled subject, and ~.AT~G~, is used for repre-senting the place where the subject would have beenin the canonical sentence.
Similarly, flAT~Go~, de-notes a pair of structures for representing a scram-bled object argument.The basic idea is that whenever an argument isnot in a scrambled position, it should be substitutedinto an available mpty slot using the aAT~ struc-ture.
The fiAT~G structure will be used only whenthe argument is in a scrambled position so that theaAT~G structure cannot be used.3.2 An ExampleK: Jerry-lul Tom-i ccossnunLa.2 Jerry-ACC Tom-NOM ehase-DECLE: Tom chases JerryFrom the elementary trees in Figure 2, both sen-tences, (1) and (2) can be derived.
For example,Figures 2(a), 2(b), and 2(d) can be used for sentence(1), to derive Figure 3(a).
However, for sentence(2) where the order is OSV (the object argument isnAn additional constraint system called dominancelinks was added, thus giving rise to MC-TAG-DL.m u ?
; j o~,  0 j' I i(a) (b) (c)~AT~OoT~ (d)~i~ure 2: Elementary, Treesscrambled), Figures 2(a), 2(c), and 2(d) are used toderive Figure 3(b) (fl,4T~G~, is adjoined onto 5, and~,4T~G~ is substituted into OPl ~ node.).
As thetrace feature is locally set within each flAT~ struc-ture, two OP nodes in Figure 3(b) are co-referencedwith the same variable, < 1 >, indicating where theobject should have been in the canonical sentence.SA SP VpA ANP I OP VPN NO ~1 VI I II(a) Canonical!
l  " I\ J  ," - - - .
(b) ScrambledFi~tre 3: Derived TreesEach elementary tree is given a priority.
A higherpriority is given to aAT~G structure over flAT~G.Generally, when a structure given a higher prior-ity over others can be successfully used for the finalderivation of a sentence, the remaining structureswill not be tried at all.
Only when the highest pri-ority structure fails will the next available structurebe tried 2.4 Us ing  MC-TAGs  in  STAGsFor mapping Korean to English, the simple object(NP) structure of English (e.g., the right structure of/3 pair in Figure 1) can be mapped to two structures,i.e., aA~o~,  and ~AT~go~,, thus generating twopossible lexical pairs.~As a way of implementing a verb-final condition inKorean,/KA'/'~s~, structure is dominated by fl.AT~s~,,and each S-type verb elementary tree will nave an A/'.Aconstraint on the root node, which guarantees thatj3~4T~ type structure cannot be adjoined onto the par-tially derived tree unless its predicate structure (its S-type verb elementary tree) is already part of the partialderived tree up to that point.
An example includinglong-distance scrambling is shown in (Park, 1995).318For translating sentence (1), the aA~Go~,-NPpair is used for Jerry (similar to the/~ pair in Figure1).
However, in sentence (2), the/~AT~Go~,-NP pairshould be used instead for translating the scrambledargument Jerry (i.e., Figure 4(a)).
Thus, it is nec-essary that a Korean flA:RG structure (MC-TAG)be mapped to an English NP structure (TAG) totransfer a scrambled argument in Korean.
I assumethat there is one head structure for each MC-TAGstructure, and that the/~A~G ~ (place holder struc-ture) is the head structure for each/~AT~G struc-ture.
The root node of the head structure is al-ways mapped to the root node of the target (English)structure.Usually, the nodes in the source language shouldbe linked to each relevant node in the target lan-guage, and vice versa (in STAGs).
However, in thecase that it is a multi-component structure (e.g.,/~AT~), an adjunction ode need not necessarilybe linked to any node.
If it is not linked to anynode of the target language, the structure can befreely adjoined onto any available node of the par-tially derived tree of the source language, which isapproximately what scrambling is about.
However,substitution nodes will always be linked (the differ-ence between a substitution node and an adjunctionnode is that an adjunction ode does not introducea new structure to the partially derived tree whereasa substitution node always does).t~"-)'.,'.
"l "  .
.
.
.
.
}"(a)K - E Lexicon.,::"",,~/oP..~.-..
,~m .
,  .
.
.
.
- "kr  - - .
.
.
.~N ' ~p t " '11  " ' " - ii : ~:1 : ~) I .
,~ I : !~ ~ 'i " :  .
k 2 r / V . "
" k ~ \]" .
.
.
.
/  I .
JL.
.
.
, ,  ~..1 Y'am(b)K - E DerivedTrees After Applying (a)Figure 4: K-E Transfer Lexicon and Derived TreeIn Figure 4(a), the root node NP o f  an  EnglishTAG is mapped to the OP node of /~A~G~, ofa Korean TAG which is a head structure.
Allthe other nodes are mapped to each relevant nodeexcept S~.
As it is not linked, /~AT~,  can beadjoined onto any available node in the partiallyderived Korean tree.
Actually, the restriction onwhether flAT, GoLf, can be adjoined onto a certainnode does not come from the formalism of Syn-chronous TAGs, but purely from the grammar ofKorean TAGs.
Figure 4(b) shows the final derivedtrees for both Korean and English after applying4(a) to the partially derived trees.5 Conc lus ion  and  Future  D i rec t ionUsing MC-TAGs allows the scrambled argumentstructure to be represented as a single (set) struc-ture.
This makes possible the mapping of Koreanscrambled m'gument structures into English argu-ment structures.
The application of similar mech-anisms for other languages and for mapping quasilogical forms to logical forms (Alshawi et al, 1992)using STAGs is also being investigated.ReferencesAnne Abeilld, Yves Schabes, and Aravind K. Joshi.1990.
Using Lexicalized TAGs for Machine Trans-lation.
In Proceedings of the International Con-ference on Computational Linguistics (COLING'90), Helsinki, Finland.H.
Alshawi, D. Carter, J. Eijck, B. Gamback,R.
Moore, D. Moran, F. Pereira, S. Pulman,M.
Rayner, and A. Smith.
1992.
The Core Lan-guage Engine.
MIT Press.Tilman Becker and Owen Rainbow.Distance Scrambling in German.port, University of Pennsylvania.1990.
Long-Technical re-Aravind K. Joshi, L. Levy, and M. Takahashi.
1975.Tree Adjunct Grammars.
Journal of Computerand System Sciences.Martha Palmer, Hyun S. Park, and Dania Egedi.1995.
The Application of Korean-English Ma-chine Translation to a Military Message Domain.In Fifth Annual IEEE Dual-Use Technologies andApplications Conference.Hyun S. Park.
1995.
Handling of Scrambling inKorean Using MC-TAGs.
In Second Conferenceof Pacific Association for Computational Linguis-tics.Stuart Shieber and Yves Schabes.
1990.
Syn-chronous Tree Adjoining Grammars.
In Proceed-ings of the 13 th International Conference on Com-putational Linguistics (COLING'90), Helsinki,Finland.David J. Weir.
1988.
Characterizing MildlyContext-Sensitive Grammar Formalisms.
Ph.D.thesis, University of Pennsylvania.319
