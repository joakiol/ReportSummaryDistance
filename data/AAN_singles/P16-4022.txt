Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics?System Demonstrations, pages 127?132,Berlin, Germany, August 7-12, 2016.c?2016 Association for Computational Linguisticspigeo: A Python Geotagging ToolAfshin Rahimi, Trevor Cohn, and Timothy BaldwinDepartment of Computing and Information SystemsThe University of Melbournearahimi@student.unimelb.edu.au{t.cohn,tbaldwin}@unimelb.edu.auAbstractWe present pigeo, a Python geolocationprediction tool that predicts a location fora given text input or Twitter user.
We dis-cuss the design, implementation and appli-cation of pigeo, and empirically evaluateit.
pigeo is able to geolocate informaltext and is a very useful tool for users whorequire a free and easy-to-use, yet accurategeolocation service based on pre-trainedmodels.
Additionally, users can train theirown models easily using pigeo?s API.1 IntroductionGeolocation is the task of identifying a location fora user or document, and has applications in localsearch, recommender systems (Ho et al, 2012),targeted advertising (Lim and Datta, 2013), healthmonitoring (Paul et al, 2015), rapid disaster re-sponse (Ashktorab et al, 2014), and research witha regional restriction (Gutierrez et al, 2015), not-ing the potential privacy concerns associated withany such application (De Cristofaro et al, 2012).While primary service providers such as Twitterand Google are able to use metadata such as IPaddresses, WiFi traces and direct access to a GPSsignal to geolocate their users, this data is gen-erally not available to third parties.
This paperintroduces a resource that can be used to geolo-cate users given textual messages generated bythem, and the interactions between users encodedin those messages, focused particularly at Twitterdata.Both language use and social ties are geograph-ically biased, and thus can be used to recoverthe location of a user or a document.
Previ-ous research has shown that the geographical biasin language use can be used in supervised text-based geolocation models, to learn associationsbetween textual features and different regionsbased on large-scale collections of geotagged doc-uments/tweets (Wing and Baldridge, 2011; Hanet al, 2012; Maier and G?omez-Rodr?guez, 2014).Given an unseen piece of text or the text contentof a user?s timeline, the trained classifier can pre-dict the most likely location(s) associated with theinput.Although social media services such as Twitterremove the geographical barrier for users to com-municate, the majority of user interactions are stilllocal (Backstrom et al, 2010).
This geograph-ical bias can be utilised to geolocate a user byanalysing their social interactions.
Based on theassumption that social interactions are more likelyto be local, a user should be geographically closeto their connections.
The simplest approach to ge-olocation is to use the median location of a user?sfriends.
Recent studies have shown that using bothnetwork and text information can improve the cov-erage and keep the predictions accurate simultane-ously (Rahimi et al, 2015b).Despite the widespread use of geolocation,most services are proprietary, overly-simplistic,or complicated to use.
Supervised classificationmodels often require huge amounts of geotaggeddata and large amounts of computing power to betrained.
The performance is also heavily depen-dent on hyperparameter tuning, making the train-ing procedure more challenging for end-users.In this paper we introduce pigeo, a Pythongeolocation tool that has the following charac-teristics: (1) it comes with a pre-trained text-based model; (2) it is easy to use; (3) it has beentuned, benchmarked and proven to be accurate;(4) it supports both informal and formal text in-put; (5) it directly supports Twitter user geoloca-tion; and (6) it has an easy-to-use RESTful API.pigeo is available at http://github.com/afshinrahimi/pigeo.1272 Background and Related WorkPrior work on geolocation falls broadly into twomain categories: text-based and network-basedmethods.
Both approaches use geotagged sam-ples, and predict the location of an unseen docu-ment or user based on the trained model.
Thoseapproaches usually use GPS tags or user profilelocation fields as the ground truth both for train-ing and evaluating the model.
Geographical biasin language use is most evident for countries withdifferent languages (e.g.
Germany versus China),but also exists for countries which share the samelanguages (e.g.
in the spelling of centre vs. centerin British vs. American English).
The linguisticgeographical bias is not limited to these obviouscases, however, and includes the use of toponyms,names of people, sport teams, and dialectal terms.These differences in use of language can be cap-tured in text-based geolocation models.
Previouswork have used topic models (Eisenstein et al,2010) and supervised flat (Wing and Baldridge,2011; Han et al, 2012; Han et al, 2013; Han etal., 2014; Rahimi et al, 2015b) and hierarchical(Wing and Baldridge, 2014) classification models.The main idea is to learn the geographical distri-bution of a given word across different locationsfrom training data, and use it to predict a locationfor a new user.Social ties have also been used for social mediauser geolocation.
Backstrom et al (2010) showedthat Facebook users tend to interact more withnearby people (?location homophily?
), and usedthis property to geolocate users based on the loca-tion of their friends, hence popularising network-based geolocation approaches.
A graph is usuallybuilt based on Facebook friendship (Backstromet al, 2010), Twitter follows (Rout et al, 2013),Twitter reciprocal @-mentions (Jurgens, 2013), orTwitter @-mentions (Rahimi et al, 2015b).
Theproblem can also be formulated as classification(Rout et al, 2013) or regression over real-valuedcoordinates (Jurgens, 2013; Rahimi et al, 2015b).In classification models, the location label set canbe pre-existing regional boundaries (e.g.
countriesor cities) or automatically generated through dis-cretisation (e.g.
a k-d tree).
The label distributionof friends is then averaged and used as the locationof a given user.
In a regression model, the mediancoordinates of the friends of a user are often usedfor prediction.Network-based models are generally more ac-curate than text-based models but can?t geolocateusers who don?t interact with training users, whichis the case for more than 30% of users in the caseof reciprocal Twitter @-mentions (Jurgens et al,2015).
Relaxing the requirement on reciprocityincreases the coverage of users, at the expense oflower accuracy (Rahimi et al, 2015a).There are several other geolocation servicesand libraries which focus on Twitter, includ-ing pigeoTextGrounder (Wing and Baldridge,2014) with a focus on targeted advertising,pigeoCarmen (Dredze et al, 2013) with a fo-cus on help monitoring, pigeoMapAffil (Torvik,2015) for affiliation mapping, and pigeoTweedr(Ashktorab et al, 2014) for rapid disaster re-sponse.
Many companies have their own pro-prietary geolocation service, which are either notavailable for public use or not open source.
Inpigeo, we provide trained a text-based classifi-cation model and network-based regression modelfor geolocation prediction, which has been bench-marked against standard datasets.3 Methodologypigeo uses two pre-trained models for geoloca-tion: (1) LR-WORLD and (2) LP-WORLD.
Bothare trained on TWITTER-WORLD-EX, an ex-tended version of the TWITTER-WORLD dataset(Han et al, 2012).3.1 DataWe use TWITTER-WORLD-EX to train both thetext-based classification and the network-based re-gression model.
TWITTER-WORLD-EX is a Twit-ter dataset with global coverage (Han et al, 2012),comprising 1.3M geotagged users (188M tweets),of which 10K are held out for each of develop-ment and testing.
The dataset contains predomi-nantly English text, but also includes a rich varietyof other languages.
In TWITTER-WORLD, the lo-cation representation was cities, based on GEON-AMES.
For our purposes, we modify this to 930clusters based on a k-d tree, to derive a smallernumber of classes and remove class imbalance.Given that the dataset is about 5 years old, we ex-pect the off-the-shelf performance to be degradedon newer tweets (Dredze et al, 2016), particularlyin the case of the network-based model (Jurgens etal., 2015).LR-WORLD is a text-based classification modeltrained over TWITTER-WORLD-EX.
The train-128ing users of TWITTER-WORLD-EX are clusteredinto 930 regions with roughly the same numberof users per region (about 2400), using a k-dtree.
This results in many small regions/clustersin highly populated areas such as NYC, and a fewlarge regions in sparsely-populated areas or areaswith few Twitter users, such as the Sahara desertand China.
The region IDs are then used as la-bels for all the users in that region.
We use a bag-of-unigrams model of text with binary term fre-quency, inverse document frequency and l2nor-malisation of samples to create user vectors.
Logloss is used with ElasticNet regularisation (90%l1) as the cost function to train the model usingstochastic gradient descent.
Given an unseen textsample, one can vectorise the sample and use theclassifier to predict a region/label or a probabilitydistribution over regions.
The predicted label(s)can be mapped to coordinates or locations.The LP-WORLD model is a network-basedregression model, also trained on TWITTER-WORLD-EX.
An @-mention network is built overthe dataset, and the real-valued coordinates of thetraining users are iteratively propagated to all thementioned users.
The location of each user is setto the weighted median latitude and weighted me-dian longitude of all its connections.
The edgeweights are initially binary but are then normalisedby dividing them by the product of the degree ofthe two corresponding nodes.
The algorithm con-verges after 5 iterations.
The predicted coordi-nates for all users are stored in a gzipped Pythonpickled dictionary for later use by pigeo.
TheTwitter user names are hashed by the MD5 algo-rithm for privacy reasons.
The collision probabil-ity for MD5 hashing is very low and we didn?t ex-perience any collisions for our 7M nodes.
Givenan unseen Twitter user, the timeline of the useris downloaded and the @-mentions are extracted.The hashed content of each @-mention is lookedup in the saved user-coordinate mapping to see ifany predictions are available.
The median latitudeand longitude of geolocated @-mention connec-tions are then predicted as the Twitter user loca-tion.Although we experiment with the LP-WORLDmodel in this paper, we are unable to distribute it,due to Twitter?s terms of service.
It is possible,however, for a user to use pigeo to train theirown network model by providing data in the for-mat described in Section 4.Figure 1: pigeo?s web interface.
Given a pieceof text or a single Twitter user, it geolocates it andreturns the description and coordinates of the pre-dicted location and its most important textual fea-tures in the model.4 System ArchitectureThe main feature of pigeo is the ability to usethe trained text-based classification network-basedregression models that are distributed with the li-brary, for geolocation of both text documents andTwitter users.
Additionally, however, the librarysupports the training and storage of new text-basedclassification models.
The pigeo tool is writ-ten in Python 2.7 and consists of: (1) the mainpigeo.py script; (2) params.py, which storesthe global parameters; (3) twitterapi.py,which uses pigeo to connect to Twitter; and(4) an index.html file, which is used by theweb service.
The tool returns a JSON string withfields such as latitude, longitude, cityand label distribution.
pigeo.py pack-ages all the main functions that are required bypigeo.
It can be used in 3 modes: (1) Shell mode;(2) Web mode; and (3) Library mode.Shell mode: Shell mode is activated as follows:> python pigeo.py --mode shellIt takes an input text, geolocates it, and returns theresult in JSON format.
Shell mode uses the trainedLR-WORLD model stored in ./models/world andis best suited for testing pigeo.Web mode: Web mode is activated by running:> python pigeo.py --mode webpigeo uses Flask, a lightweight Python webframework, to provide web access to end-users.The default host and port are 127.0.0.1 and5000, respectively, which can be modifiedusing the --host and --port options on the129import pigeo# load the world model (default)pigeo.load_model()# geolocate a sentencepigeo.geo("gamble casino city")# geolocate a Twitter userpigeo.geo(?@POTUS?
)# geolocate a list of textspigeo.geo([?city centre?, ?city center?
])Figure 2: An illustration of Library modecommand line.
When the service is running,the user can use the web service by openinghttp://127.0.0.1:5000 via a web browseron their local machine shown, as illustrated inFigure 1.
Alternatively, the users are able to usethe curl command to geolocate a text or a Twitteruser:> curl 127.0.0.1:5000/geo?text=?beach?Library mode: pigeo can also be used as alibrary.
This is the suggested way of using it ifmany documents are needed to be geolocated, be-cause the batch functionality is only available inthis mode.
Note that running the pigeo.geo func-tion in a loop is not as efficient as running it witha list argument (in Batch mode).
The code snip-pet in Figure 2 shows how pigeo can be used inLibrary mode.Twitter user geolocation: pigeo takes theuser name of a Twitter user, crawls their time-line, and geolocates them on the basis of that data.This can be done in any of Shell, Web or Librarymodes, but requires an internet connection andvalid Twitter authentication information (Twitterkeys, tokens and secrets) which should be set intwitterapi.py.Training a newmodel: Training a new model ispossible in Library mode, using scikit-learn (Pe-dregosa et al, 2011) both for feature extractionand training the model.
The training data consistsof a list of text samples and a list of correspondingcoordinates as a (latitude, longitude) tuple.
Giventhe number of desired classes, pigeo discretisesthe training points and assigns a class to each train-ing sample.
The bag-of-unigram features are ex-tracted using TfidfVectorizer and the model isimport pigeo# train a model and save it in ?example?pigeo.train_model([?text1?, ?text2?
],[(lat1, lon1), (lat2, lon2)],num_classes=2, model_dir=?example?
)# load and use the new modelpigeo.load_model(model_dir=?example?
)Figure 3: An illustration of training a modelimport pigeo# load lpworldpigeo.load_lpworld()# geolocate a Twitter userpigeo.geo_lp(?@potus?
)Figure 4: An illustration of Twitter user geoloca-tion using the network modeltrained by SGDClassifier with log loss and Elas-ticNet regularisation.
The end-user can manuallytune the regularisation parameters using a held-outdevelopment set.
The procedure for training is il-lustrated in Figure 3.Network-based model: geolocation with thenetwork-based model can be done similarly toLR-WORLD, but since the data is not recent, theresults might not be as accurate as reported in Sec-tion 5.
Given a Twitter user, the timeline is down-loaded and the @-mentions are matched with thehashed user account names.
The median locationof the matched users is returned as the prediction.The procedure is illustrated in Figure 4.4.1 Trained modelsThe trained LR-WORLD model distributed withpigeo, and we additionally document theLP-WORLD, in terms of the files, formats andcharacteristics of the model.LR-WORLD contains 4 gzipped pickle files:?
clf.pkl.gz is a scikit-learnSGDClassifier instance trained onTWITTER-WORLD-EX, whose projectionmatrix is converted to a Scipy sparse matrixfor scalability.?
vectorizer.pkl.gz is a scikit-learnTfidfVectorizer instance fitted toTWITTER-WORLD-EX which, given a text,130extracts the bag-of-unigram features withbinary term frequency, inverse documentfrequency and l2normalisation of samples.Terms which occur in less than 10 documentsare excluded.?
coordinate address.pkl.gz is a dic-tionary that, given a (latitude, longitude) co-ordinate tuple, returns an address.
It onlycovers the coordinates of the LR-WORLDclasses and is based on geopy?s Open-StreetMap API.?
label coordinate.pkl.gz is a dictio-nary containing the classes/regions of theLR-WORLD model and their correspondinglatitude/longitude tuple, which is the medianof all the training points in that class.LP-WORLD is made up of a single gzippedpickle file userhash coordinate.pkl.gz,which is a dictionary of users mapped to predictedlocations using label propagation over real-valuedcoordinates of TWITTER-WORLD-EX dataset.
Aswe are unable to distribute this model, the userneeds to provide it themselves.5 EvaluationWe evaluate the performance of LR-WORLD andLP-WORLD model based on 3 evaluation mea-sures used in previous research (Cheng et al,2010; Eisenstein et al, 2010): the mean error(Mean), median error (Median), and the accuracyof geolocation within 161km of the actual location(Acc@161).Note that lower values are better for Meanand Median, and higher values are better forAcc@161.
The performance for the LR-WORLDand LP-WORLD models is shown in Table 1.Because there are no published results overTWITTER-WORLD-EX, we compared the perfor-mance of the models with previous work based onTWITTER-US (Wing and Baldridge, 2011).6 ConclusionWe introduced pigeo, an easy-to-use, accu-rate Python geolocation tool which is able togeolocate both text and Twitter users based ontwo trained geolocation models: LR-WORLD andLP-WORLD.
We described the implementation de-tails of pigeo, and evaluated it on a standardTwitter geolocation dataset.
It is our hope thatAcc@161 Mean MedianTWITTER-WORLD-EX datasetLR-WORLD 0.62 818 31LP-WORLD 0.67 829 4TWITTER-US datasetLR-NA 0.51 636 148LP-NA 0.50 610 144Wing and Baldridge (2014) 0.49 703 170Table 1: The performance of the LR-WORLD text-based classification model and the LP-WORLDnetwork-based regression model over the test setof TWITTER-WORLD-EX.
The model perfor-mance over TWITTER-US is compared to previ-ous work.pigeo will provides researchers with an accurateoff-the-shelf baseline geolocation model for appli-cations which require geolocation.ReferencesZahra Ashktorab, Christopher Brown, Manojit Nandi,and Aron Culotta.
2014.
Tweedr: Mining Twit-ter to inform disaster response.
In Proceedingsof The 11th International Conference on Informa-tion Systems for Crisis Response and Management(ISCRAM 2014), pages 354?358, University Park,USA.Lars Backstrom, Eric Sun, and Cameron Marlow.2010.
Find me if you can: improving geographi-cal prediction with social and spatial proximity.
InProceedings of the 19th International Conferenceon World Wide Web (WWW 2010), pages 61?70,Raleigh, USA.Zhiyuan Cheng, James Caverlee, and Kyumin Lee.2010.
You are where you tweet: a content-based ap-proach to geo-locating Twitter users.
In Proceedingsof the 19th ACM International Conference Infor-mation and Knowledge Management (CIKM 2010),pages 759?768, Toronto, Canada.Emiliano De Cristofaro, Claudio Soriente, GeneTsudik, and Albert Williams.
2012.
Hummingbird:Privacy at the time of Twitter.
In Proceedings ofthe 2012 IEEE Symposium on Security and Privacy(SP), pages 285?299, San Francisco, USA.Mark Dredze, Michael J Paul, Shane Bergsma, andHieu Tran.
2013.
Carmen: A twitter geolocationsystem with applications to public health.
In Pro-ceedings of the AAAI 2013 Workshop on Expand-ing the Boundaries of Health Informatics Using AI(HIAI), pages 20?24, Bellevue, USA.Mark Dredze, Miles Osborne, and Prabhanjan Kam-badur.
2016.
Geolocation for Twitter: Timing mat-ters.
In Proceedings of the North American Chap-ter of the Association for Computational Linguistics(NAACL 2016), San Diego, USA.131Jacob Eisenstein, Brendan O?Connor, Noah A Smith,and Eric P Xing.
2010.
A latent variable model forgeographic lexical variation.
In Proceedings of the2010 Conference on Empirical Methods in NaturalLanguage Processing (EMNLP 2010), pages 1277?1287, Boston, USA.Carlos Gutierrez, Paulo Figuerias, Pedro Oliveira,Ruben Costa, and Ricardo Jardim-Goncalves.
2015.Twitter mining for traffic events detection.
In Sci-ence and Information Conference (SAI), 2015, pages371?378.Bo Han, Paul Cook, and Timothy Baldwin.
2012.
Ge-olocation prediction in social media data by find-ing location indicative words.
In Proceedings ofthe 24th International Conference on Computa-tional Linguistics (COLING 2012), pages 1045?1062, Mumbai, India.Bo Han, Paul Cook, and Timothy Baldwin.
2013.
Astacking-based approach to Twitter user geolocationprediction.
In Proceedings of the 51st Annual Meet-ing of the Association for Computational Linguistics(ACL 2013): System Demonstrations, pages 7?12,Sofia, Bulgaria.Bo Han, Paul Cook, and Timothy Baldwin.
2014.Text-based Twitter user geolocation prediction.Journal of Artificial Intelligence Research, 49:451?500.Shen-Shyang Ho, Mike Lieberman, Pu Wang, andHanan Samet.
2012.
Mining future spatiotempo-ral events and their sentiment from online news arti-cles for location-aware recommendation system.
InProceedings of the First ACM SIGSPATIAL Interna-tional Workshop on Mobile Geographic InformationSystems, pages 25?32, Redondo Beach, USA.David Jurgens, Tyler Finethy, James McCorriston,Yi Tian Xu, and Derek Ruths.
2015.
Geolocationprediction in twitter using social networks: A criticalanalysis and review of current practice.
In Proceed-ings of the 9th International Conference on Weblogsand Social Media (ICWSM 2015), pages 188?197,Oxford, UK.David Jurgens.
2013.
That?s what friends are for:Inferring location in online social media platformsbased on social relationships.
In Proceedings of the7th International Conference on Weblogs and So-cial Media (ICWSM 2013), pages 273?282, Boston,USA.Kwan Hui Lim and Amitava Datta.
2013.
A topo-logical approach for detecting twitter communitieswith common interests.
In Ubiquitous Social MediaAnalysis, pages 23?43.
Springer.Wolfgang Maier and Carlos G?omez-Rodr?guez.
2014.Language variety identification in Spanish tweets.In Proceedings of the EMNLP2014 Workshop onLanguage Technology for Closely Related Lan-guages and Language Variants, pages 25?35, Doha,Qatar.Michael J Paul, Mark Dredze, David A Broniatowski,and Nicholas Generous.
2015.
Worldwide influenzasurveillance through twitter.
In AAAI Workshop onthe World Wide Web and Public Health Intelligence,Austin, USA.Fabian Pedregosa, Ga?el Varoquaux, Alexandre Gram-fort, Vincent Michel, Bertrand Thirion, OlivierGrisel, Mathieu Blondel, Peter Prettenhofer, RonWeiss, Vincent Dubourg, et al 2011.
Scikit-learn:Machine learning in Python.
The Journal of Ma-chine Learning Research, 12:2825?2830.Afshin Rahimi, Trevor Cohn, and Timothy Baldwin.2015a.
Twitter user geolocation using a unifiedtext and network prediction model.
In Proceedingsof the 53rd Annual Meeting of the Association forComputational Linguistics ?
7th International JointConference on Natural Language Processing (ACL-IJCNLP 2015), pages 630?636, Beijing, China.Afshin Rahimi, Duy Vu, Trevor Cohn, and TimothyBaldwin.
2015b.
Exploiting text and networkcontext for geolocation of social media users.
InProceedings of the 2015 Conference of the NorthAmerican Chapter of the Association for Compu-tational Linguistics ?
Human Language Technolo-gies (NAACL HLT 2015), pages 1362?1367, Denver,USA.Dominic Rout, Kalina Bontcheva, Daniel Preot?iuc-Pietro, and Trevor Cohn.
2013.
Where?s @wally?
:A classification approach to geolocating users basedon their social ties.
In Proceedings of the 24th ACMConference on Hypertext and Social Media (Hyper-text 2013), pages 11?20, Paris, France.Vetle I Torvik.
2015.
Mapaffil: A bibliographictool for mapping author affiliation strings to citiesand their geocodes worldwide.
D-Lib Magazine,21(11):9.Benjamin P Wing and Jason Baldridge.
2011.
Sim-ple supervised document geolocation with geodesicgrids.
In Proceedings of the 49th Annual Meeting ofthe Association for Computational Linguistics: Hu-man Language Technologies-Volume 1 (ACL-HLT2011), pages 955?964, Portland, USA.Benjamin P Wing and Jason Baldridge.
2014.
Hier-archical discriminative classification for text-basedgeolocation.
In Proceedings of the 2014 Confer-ence on Empirical Methods in Natural LanguageProcessing (EMNLP 2014), pages 336?348, Doha,Qatar.132
