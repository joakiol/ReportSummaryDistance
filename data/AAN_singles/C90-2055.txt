SE'SAMEA PORTABLE DATA BASE INTERFACE GENERATORSimon Sabbaghand the InterLN Development Team(*)CEDIAGBULL A.I.
Corporate Center68 Route de Versailles78430 LouveciennesFranceSirnon.Sabbagh@cediag.bull.frA|3STRACTSt!!
!SAME is being developed to provide an easyaccess to the content of relational data bases tousers without a specific computer training.
Queriesme typed in natural language either freely or with aguided mode.
The system dynamically proposesthrough menus the different words and phrases thatc;~n make up a query.
Users are able to exploit theresults of their queries with standard electronic officetor~ls or specialized applications.The SESAME system is a user interface generator.T,~J develop a particular application, differentknowledge bases have to be built: lexicon,conceptual schema of the data base... Knowledgebase editors and design methodologies provide helpfor the developement of applications.SESAME is a good example of techniques createdin research laboratories and applied to thedevelopment of an industrial product.
(*) Many people are taking part in the development ofSESAME.
For the Linguistic aspects: BlandineGelain, St~phane Guez, Jean-Michel Liaunet, FaribaOmmani, and Zhengce Peng, and for the InformationSystem and User Interface aspects: Pascal Fischer,Eli,: Kerbaje, Laurent Lacote, and Amaud Villemin.Olivier Deguine and Pierre Alain Vast were in chargeof lhe integration.INTRODUCTIONThe purpose of the SESAME project is to provideusers with the possibility of extracting data from aninformation system in a language as close aspossible to natural language.
Users will be allowedto express queries with concepts closer to theexternal model of an application than to the logicalschemas of data bases.
It is thus necessary to use amodel of the content of the information system at theconceptual level.
The semantics of the applicationwill be represented by a conceptual model.
Mappingmodules will be used to translate conceptualrepresentations into relational schemas.The natural language query expressed by the useris translated into a logical form by a parser.
Thisparser uses a grammar and a lexicon specific to aparticular application.
It has access to theconceptual schema to validate the semantics ofqueries.
The logical form is then translated into aSQL query, using the information provided by themapping between the conceptual schema and therelational schema.SESAME is an industrial product.
It only uses fairlystandard techniques.
It is an interface generator,portable, intended for a large diffusion.
Its mostimportant feature is that it allows people who are notcomputational linguistics specialists to develop anapplication fairly easily.
The whole design ofSESAME is intended to respect this very strongconstraint, even when it meant to use lesssophisticated techniques than what is available.Great care has been also put in the design of theuser environment for the querying steps as well asfor the manipulation of the results provided by the1 3'Y ldata base SESAME is interfaced with (Bates &Weischedel 1987).The SESAME system is made of four environments:The information system environment usedto build the conceptual schema of a givenapplication and to generate mapping rulesbetween the conceptual level and therelational evel.The linguistic environment to generate thelinguistic knowledge bases from theconceptual schema of the application and acorpus of the domain.The query environment provides the user withthe tools to query the data base.The results management environmentprovides the user with the tools to manipulatethe results of the query provided by theD.B.M.S.
and to exploit them through standardoffice systems or specialized applications.The first two environments are used by thedesigners of a particular application to generate theknowledge bases necessary for this application.
Thetwo other environments are intended for the regularuse of SESAME, once a particular application hasbeen implemented.THE INFORMATION SYSTEMENVIRONMENTThe information system environment is used todesign the information system parts of a particularapplication, which consist essentially of theconceptual schema of the application and mappingrules between the conceptual level and the database relational evel.The conceptual schema is a set of specificationswhich describe the semantic structure of the database.
It is specified in an entity relationship (ER)model.
This model contains the traditional concepts(entity, relationship, property) used in standarddesign methods (Merise, Yourdon, IDA...).
We havechosen to use this type of model instead of aknowledge representation language or a semanticnetwork, in order to ease the implementation ofapplications by people used to standard data basetools.
To respect the purpose of SESAME, it wasessential not to fall in the trap where only thedesigners of SESAME would be able to developapplications.
See (Grosz et al 1987) for a review ofexisting systems, regarding the problem ofportability.We have extended the ER model to includemultivalued properties, structured value domains(e.g.
the domain date will be built from the domainsday, month and year), and thegeneralization/specialization of entity types throughthe definition of inheritance relations between entitytypes.
It is possible to specify on a schema thedependencies between entitles, which makes thegeneration of a normalized schema easier for themapper.
It is also on this schema, at the conceptuallevel, that access rights for confidential data can bespecified.
They have their counterpart at thelinguistic level: only words expressing authorizedconcepts will be accessible for a particular user.The mapper produces a set of mapping rules whichare rewriting rules which link the conceptual schemawith the relational schema of the data base.
Anadditional module contains a description of thespecific features of the D.B.M.S.
used, in order to fillthe gap between standard SQL and the actual SQt.of the D.B.M.S.oInformation system environment318THE LINGUISTIC ENVIRONMENTThe linguistic environment is used to build thelinguistic knowledge bases of a particularapplication, lhe unification grammar formalism isused to describe the lexicon and the grammar(Shiebert 1986).A lexicon editor is used to generate the lexicon inthe unification grammar formalism.
The first sourceof information used is the conceptual model of thedata base: all the concepts have to be associatedwith words and the semantics of the naturallanguage interface is the semantics of theconceptual modelling of the application informationsystem.
But a natural language query may alsocontain semantic relations which are not directlyexpressed in the conceptual schema.
These "virtual"semantic relations are defined in the linguisticconceptual schema as rewriting rules on "real"relations from the conceptual schema.
Theseextensions of the lexicon are made possible by theanalysis of a domain corpus.The grammar is described in the unificationgrammar formalism: each grammatical category carlb4~, associated with a features structure representeda'.~; a tree.
Syntactic as well as semantic constraintsare expressed as contraints on the trees (featuresequations) and operated through unification.A grammar rule is made of a rewriting rule and a setof equations which specify the syntactic constraints.S,~;mantic onstraints (selection restrictions) are alsoexpressed as features equations.
-\[he values ofthese features specify the semantic types of theai:)plication.
"The lexicon is described in tile sameformalism.
Each lexical entry is associated with a setof equations which specify the category of the wordas well as tile value of certain features.
\]hes,;mantics of a natural language query isrepresented with a logical formalism.
Theconstruction principle of semantic representation iscompositionality.
Each syntactic rule is associatedwith equations which express the rules of semanticcomposition (Moore 1989).The grammar and the lexicon are compiled into aProlog program.
Unification which is a basic Prologoperation is thus directly and efficiently used.np :- det ,  noun,  n pp  &\[np, agr ,number \ ]  = \[noun, agr ,number \ ] ,\ [noun ,compl ,concept \ ]= \[n_pp, concept \ ] ,\[noun, compl ,p repos i t ion \ ]= \ [n_ iop ,prepos i t ion  \] .sa la ry  :- noun  &\ [concept \ ]  = sa la ry ,\ [agr ,nun~er \ ]  = s ing,{ compl  :\ [ concept \ ]  = employee ,\[type\] = rea l ,\ [p repos i t ion \ ]  = of,\ [p resence\ ]  = non  obl,\ [ semant ic  re la t ion \ ]  = sa la ry  }.Simplified descriptions of a grammar ule anda lexicon entryThe linguistic covering of the grammar and thelexicon is the sub-language of data base query,which include the processing of expressionsconcerning tile sorting of information, comparisons,etc.
The grammar also processes coordination,pronominal reference and it detects ambiguities.
Thecovering is large enough so that the presentgrammar should fit any standard application withoutany major addition.
Only very specializedapplications will require important changes, mainlyat the level of noun phrases.
This is a difference withNaturalLink which only provides a formalism: thesemantic grammar and the semantic representationbuilding rules have to be written by the applicationdeveloper (Texas Instruments 1985).THE QUERY ENVIRONMENTIn the SESAME project, we have taken great care ofthe user interface which is the only way to have afriendly access to the data base.
The queryenvironment provide the user with several powerfulfunctionalities.
If the analysis of a freely typed querysucceeds, then the SQL translation is completedafter a dialogue with tile user in order to specify theform of the answer.
If the analysis fails, the list ofpossible continuations after the failure point isproposed.
The user can select a word from this listor type it directly.
The remaining part of thesentence which has not been parsed is alsodisplayed so that the user can use it directly or edit it319to complete the query.
The user can also choose tocomplete the query in guided mode with the help ofdynamically synthesized menus.
For moreinformation on these techniques, see (Rincel &Sabatier 1989).
A graphic query interface has beenspecified, but not yet implemented.. .
.
.I l l!l ilconceptual schema.
It is a SQL like language wherejoins are replaced by semantic paths.
Tiletranslation into ER-SQL is completed in two steps.In a first step, the logical form which contains virtualrelations is translated into an equivalent logical formwhich only contains real predicates, using thelinguistic conceptual schema.
The second steptransforms a query expressed in a logical languagewith quantified variables into a query expressed inan algebraic language (ER-SQL) operating on theconceptual model.The ER-SQL query is translated into a standardSQL query, using the mapping rules generated bythe information system environment.
The translationprocess keeps trace of the direct link which is setbetween the conceptual data of the ER-SQL queryand the data which will make up the answer whenthe query is sent to the D.B.MS.
This information iskept in the form of conceptual data / data base datamapping rules.
These rules define the semantics ofthe content of the relational table the result of thequery is made of.
The results managementenvironment will use these mapping rules to presentand display the results of a query.
A writer modulerefines the query expressed in the standard SQLlanguage to fit the specific features of the particularD.BM.S.
used for the application.Query en vironmentAn history module provides the user with tools tomemorize, organize and manage the queries of aworking session and their results.
Usually 70% ofthe queries belong to a small fixed set, SESAMEinclude tools to manage a library of queries withparameters to be specified by the user, with theadvantage that queries in this library are expressedin natural language.
A help system, implementedwith hypertext ools, can be called at any point in theuser interface.
"This help facility is implementedthrough a hypertext system integrated to the projectgraphic toolbox.
The tutorial provides the user with ademo of the product and a learning session,including sketches with choice points so that theuser can control the demo.The logical form produced by the natural languageinterface is translated into a query expressed in ER-SQL.
ER-SQL is the query language of theTHE RESULTS MANAGEMENTENVIRONMENTThe results management environment must be ableto take the answers of the D.B.M.S.
and to presentthem in such a form that they can be exploited bythe user.
A broad choice of possibilities is given tothe user for the presentation of the results:environment in which the results are to be exploitedand type of tool used for this exploitation.
Thismodule uses the conceptual data / data base datamapping rules to retrieve the information specified atthe conceptual level, in the relational table which isreturned as the result of the query.
The results canthen be presented in the terms the user choose toexpress the query, and not with the logical namesprovided by the data base.
This module will makepossible a presentation of the structured domainsand the multivalued properties which do not exist atthe relational level.320CONCLUSIONSESAME is an insdustrial project designed from thebeginning with a strict life cycle and strong qualitycriteria.
The product will be announced before theend of 1990.
There is a French and an Englishversion, and other European languages are plannedfor the near future.
The software architecture ofSESAME is designed to fit various hardware andsoftware environments and network protocols.We are also taking part in a European EurekaProject strongly connected with SESAME.
Thisproject addresses the multi-lingual aspects of database interfaces and the integration betweengraphics and natural language.
Its results will beintegrated in future enhanced versions of SESAME.REFERENCESTexas Instruments (1985).
Explorer NaturalLanguage Menu System, Data Systems Group,Technical Report No 2533593-0001, Austin, Texas.Bates, M. and Weischedel, R. (1987).
Evaluatingnatural language interfaces - Tutorial at the 25thACL - Stanford University.Grosz, B.J.
et al (1987).
TEAM: An experiment inthe Design of Transportable Natural LanguageInterfaces, AI Journal, Vol.32, No.2, May 87, p.173-243.Moore, R.C.
(1989).
Unification based semanticinterpretation, Proceedings of the 27th ACL meeting,p.33-41, Vancouver, Canada.Rincel, Ph.
and Sabatier, P. (1989).
Leader: ung~n~rateur d'interfaces en langage naturel pourbases de donn~es relationnelles, Congr~s AFCET,RFIA 89, Paris.Shiebert, S.M.(1986).
An introduction to UnificationBased Approaches to Grammar, CSLI lecture.,~notes, number 4, CSLI, Stanford University,Stanford, California.5321
