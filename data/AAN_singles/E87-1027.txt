STRING-TREE CORRESPONDENCE GRAMMAR: A DECLARATIVE GRAMMAR FORMALISM FOR DEFININGTHE CORRESPONDENCE BETWEEN STRINGS OF TERMS AND TREE STRUCTURESYUSOFF ZAHARINGroupe d'Etudes pour la Traduction AutomatiqueB.P.
n ?
68Universit~ de Grenoble38402 SAINT-MARTIN-D'HERESFRANCEABSTRACTThe paper introduces a grammar formalism fordefining the set of sentences in a language, a setof labeled trees (not the derivation trees of thegrammar) for the representation of the interpreta-tion of the sentences, and the (possibly non-pro-jective) correspondence between subtrees of eachtree and substrings of the related sentence.
Thegrammar formalism is motivated by the linguisticapproach (adopted at GETA) where a multilevel inter-pretative structure is associated to a sentence.
Thetopology of the multilevel structure is 'meaning'motivated, and hence its substructures may not cor-respond projectively to the substrings of the rela-ted sentence.Grammar formalisms have been developed for va-rious purposes.
Generative-Transformational Gram-mars, General Phrase Structure Grammars, LexicalFunctional Gr-mmar, etc.
were designed to be expla-natory models for human language performance, whileothers like the Definite Clause Grammars were moregeared towards direct interpretability by machines.In this naper, we introduce a declarative grammarformalism for the task of establishing the relationbetween on one hand a set of strings of terms andon the other a set of structural representations -a structural representation being in a form amena-ble to processing (say for translation into anotherlanguage), where all and only the relevant conten~.sor 'meaning' (in some sense adequate for the purpo-se) of the related string are exhibited.
The gram-mar can also be interpreted to perform analysis(given a string of terms, to produce a structuralrepresentation capturing the 'meaning' of thestring) or to perform generation (given a structu-ral representation, to produce a string of termswhose meaning is captured by the said structuralrepresentation).It must be emphasised here that the grammarwriter is at liberty (within certain constraints)todesign the structural representation for a givenstring of terms (because its topology is indepen-dent of the derivation tree of the grammar), aswell as the nature of the correspondence betweenthe two (for example, according to certain linguis-tic criteria).
The grammar formalism is only a toolfor expressing the structural representation, therelated string, and the correspondence.The formalism is motivated by the linguisticapproach (adopted at GETA) where a multilevel in~r-pretative structure is associated to a sentence.The multilevel structure is 'meaning' motivated,and hence its substructures may not correspond pro-jectively to the substrings of the related sentenceThe characteristic of the linguistic approach isthe design of the multilevel structures,while the grammar formalism is the tool (notation)for expressing these multilevel structures, theirrelated sentences, and the nature of the correspon-dence between the two.
In this paper, we presentonly the grammar formalism ; a discussion on thelinguistic approach can be found in \[Vauquois 78\]and \[Zaharin 87\].For this grammar formalism, a structuralrepresentation is given in the form of a labeledtree, and the relation between a string of termsand a structural representation is defined as amapping between elements of the set of substringsof the string and elements of the set of subtreesof the tree : such a relation is called a string-tree correspondence.
An example of a string-treecorrespondence is given in fig.
I.TREE: NPI \[ 4..NP2 :AP J 8 :hunterI I IFig.1 - A string-tree correspondence.The example is taken from \[Pullum 84\] where hecalled for a 'simple' grammar which can analyse/generate the non-context free sublanguage of theAfrican language Bambara given by :L = ~ o ~I~ in N* for some set of nouns N,I N.l~l }and at the same time the grammar must produce a'linguistically motivated' structural representa-tion for the corresponding string of words.
Forinstance, the noun phrase "dog catcher hunter o dogcatcher hunter" means "any dog catcher hunter" andso the structural representation should describeprecisely that.160In the string-tree correspondence in fig.
I,there are three concepts involved : the TREE whichis a labeled tree taking the role of the structu-ral representation, the STRING which is a stringof terms, and finally the correspondence which isa mapping (given by the arrows ~--.-.~>) definedbetween substrings of STRING and subtrees of TREE(a more formal notation using indices would beless readable for demonstrational purposes).
Inthe TREE, a node is given by an identifier and alabel (eg.
|:NP).
To avoid a very messy diagram,in fig.
l we have omitted the other subcorrespon-dence between substrings and subtrees, for examplebetween the whole TREE and the whole STRING (tri-vial), between the subtree 4(5(6),7) and the twooccurrences of the substring "dog catcher" (non-trivial), etc.
We shall do the same in the restof this paper.
(Then again, this is the string-tree correspondence we wish to express for ourexamples - recall the remark earlier saying thatthe grammar writer is at liberty to define the na-ture of the string-tree correspondence he or shedesires, and this is done in the rules, see later).We also note that the nodes in the TREE are simplyconcepts in the structural representation and thusthe interpretation is independent of any grammarthat defines the correspondence (in fact, we haveyet to speak of a grammar) ; for instance, the TREEin fig.
1 does not necessitate the presence of arule of the form "AP NT hunter ~ NP" to be in thegrammar.A more complex string-tree correspondence isgiven in fig.
2 where we choose to define a struc-tural representation of a particular form for eachstring in the language anbnc n. Here, the case forn=3 is given?
The problem is akin to the 'respec-tively' problem, where for a sentence like "Peter,Paul and Mary gave a book, a pen and a pencil toJane, Elisabeth and John respectively", we wish toassociate a structural representation giving the'meaning' "Peter gave a book to Jane, Paul gave alen to Elisabeth, and Mary gave a pencil to John".TREE :21aSTRING aI:SI i3:b 4:c 5!S6:a 7:b 8:c 9:S1' ,  i, ,\ ~ ~k l~:a  l l :b 12:CFig.
2 - A non-projective string-treecorrespondence for a~bnc nAt this point, again we repeat our earlierstatement that the choice of such structural re-presentations and the need for such string-treecorrespondence are not the topics of discussion inthis paper.The aim of this paper is to introduce the tool, inthe form of a grammar formalism, which can definesuch string-tree correspondence as well as be inter-pretable for analysis and for generation betweenstrings of terms and structural representations.The grammar formalism for such a purpose iscalled the String-Tree Correspondence Grammar(STCG).
The STCG is a more formal version of theStatic Grammar developed by \[Chappuy 83\] \[Vauquois& Chappuy 85\].
The Static Grammar (shortly laterrenamed the Structural Correspondence SpecificationGrammar), was designed to be a declarative grammarformalism for defining linguistic structures andtheir correspondence with strings of utterances innatural languages.
It has been extensively used forspecification and documentation,as well as a (manua$reference for writing the linguistic programs (ana-lysers and generators) in the machine translationsystem ARIANE-78 \[Boitet-et-al 82\].
Relatively lar-ge scale Static Grammars have been written forFrench in the French national machine translationproject \[Boitet 86\] translating French intoEnglis~and for Malay in the Malaysian national project\[Tong 86\] translating English to Malay ; the twoprojects share a common Static Grammar for English(naturally).
The STCG derives its formal propertiesfrom the Static Gra~mmar, but with more formal defi-nitions of the properties.
In the passage from theStatic Grammar to the STCG, the form as well assome other characteristics have undergone certainchanges, and hence the change to a more appropriatename.
The STCG first appeared in \[Zaharin 86\],where the formal definitions of the grammar aregiven (but under the name Of the Tree Corresponden-ce Gran~nar).A STCG contains a set of correspondence rules,each of which defines a correspondence between astructural representation (or rather a set or fami-ly of) and a string of terms (similarly a set orfamily of).
Each rule is of the form :.Rule: RCORRESPONDENCE:( ~4~,  ) .
.
.
.
.
(~,,, "~)The simplest form of such a rule is when al,...a nare terms and B is a tree.
The rule then statesthat the string of terms ~l,...,ctn corresponds (")to the tree B, while the entry cORRESPONDENCE givesthe substring-subtree correspondence between theterms ~i, ,~_ and the subtrees BI,...,B_ of B.
An?
* ?
7 1  .
LL  *lexample is given by rule SI below whlch deflnes theIstring-tree correspondence in fig.
3.Rule : S ll :S(2:a)(3:b)(4:c) ~ 2:a 3:b 4:cCORRESPONDENCE :(2--2), (3~3), (4"4)161TREE : 1 : SI3:b 4:cSTRING : a b cFig.
3 - Correspondencedefined by SlAlthough in the example in fig.
3 above, theleaves of the TREE are labeled and ordered exactlyas the terms in the STRING, this is not obligatory.For example, it is indeed possible to change thelabel of node 2 to something else, or to move thenode to the right of node 4, or even to excludethe node altogether.
In short, the string-treecorrespondence defined by a rule need not beprojective.Such elementary rules el...cz ~8 (withul,..,u_ terms) can be generahsed to a form whereeach e."(i-l,..,n) represents a string of terms,say A..
I Here, generalities can be captured if u ispec~'~ies the name of a rule which defines a strlng-A.~T.
tree correspondence--i I (for some tree T. givenin the said rule, but it is of h t t le  slgnlflcancehere), in which case the interpretation of thestring-tree correspondence defined by el..e ~8 istaken to be AI..A ~8 (here AI..A means thenconca -tenation of ~he s~rings Al,?.
,A-~.
The substring-subtree correspondence will sti--~l be given by theentry CORRESPONDENCE.
Fig.
4 illustrates this.The alternative to the above is to give eachu.
in terms of a tree (ie.
without reference to anyr~le), but then there is no guarantee that thistree will correspond to some string of terms.
Evenif it does, one cannot be certain that it would bethe string of terms one wishes to include in therule - after all, two entirely different strings ofterms may correspond to the same tree (a paraphrase)by means of two different rules.We shall discard the alternative and adopt thefirst approach.The generalised rule ~l,..~n~8 (witheach u. being the name of a rule) can be extendedfurthe~ by letting u. be a list of rule names,?
1 where this is Interpreted as a choice for thestring-tree correspondence A.'-T.
to be referred to,and hence the choice for th~ist~ing of terms A.represented by u..
In such a situation, it ma~Isobe possible thatZwe wish the topology oT the treeB to vary according to the choice of A., and thisvariation to be zn terms of the subtrees of thetree T.. For these reasons, we specify each ~.
asa pairI(REFERENCE, STRUCTURE) where REFERENCEIisthe said list of rule names and STRUCTURE is a treeschema containing variables, such that the struc-ture represents the tree found on the right handside of the "~" in each rule referred to in thelist REFERENCE.
This way, the tree 8 can be defi-ned in terms of T i by means of the variables (forexample those appearing simultaneously in both u.and 8).
See the example later in fig.
5 for an iillustration.'
i t~ .
:  R t .
\[ RUZ.Z: RX~ R, .... R e are rule names;RULE, R^ I ~ the  cor respondence  byI~  Rule R~ is interpretedand henceRules RNI and RN2 below are examplesof STCG rules in the form discussedabove, where RN2 refers to RNI anditself.
Variables in the entry STRUCTUREare given in boxes, eg.
\ [ \ ]  , where eachvariable can be instantiated to a linearordered sequence of trees.
For a givenelement (REFERENCE, STRUCTURE), the ins-tanciations of the variables in STRUCTU-RE can be obtained only by identifying(an operation intuitively similar to thestandard notion of unification - again,see later in fig.
5) the STRUCTURE withthe right hand side of a rule given inthe entry REFERENCE.Fig.4 -Str ing-tree correspondence with reference to other rulesRule= RN2STRI~DI~RE=l=mP2 ) , ( z  ~ \].
)Rule :  RN1..Tt'Rt XTT~\]RE=1 z nounCORRP.(;PONDENCE.
:(1  N 1)cU0 =NI~..I1 ~ noun162As an immediate consequence to the above, anSTCG rule thus defines a correspondence between aset of strings of terms on one hand and a set oftrees on the other (by means of a linear sequenceof sets of trees).
The rule RN!
describes a corres-pondence between a single term and a treecontaining a node NP dominating a single leaf (forexample, it gives the respective structural repre-sentations for "dog", "catcher", etc.).
The ruleRN2 describes a correspondence between two or moreterms and a single tree - note the recursiveREFERENCE in the first element of RN2 (for example,it gives the structural representation for "catcherhunter" as well as for "dog catcher hunter", seelater in fig.
5).The entry STRUCTURE of an element may alsoact as a constraint by making explicit certainnodes in the STRUCTURE instead of just a nodedominating a forest (we have no examples for thisin this paper, but one can easily visualise theidea).
This means that the entry STRUCTURE of anelement u.
= (REFERENCE, STRUCTURE) in a rulei .
?
~I..~ ~B Is also a constralnt on the trees in T.,n .
.
1 and hence on the strlngs in A.
(as A. and T. are?
- - i  - - i  ?
now sets), in a correspondence A."T.
deflne~ by arule referred to by u.
In its entry REFERENCE.. .
I Whenever It is made use of, such a constralnt en-sures that only certain subsets of T., and hence of IA., are referred to and used in the correspondencedescrlbed by ~I..~ ~.nThe string-tree correspondence in fig.
| isdefined by rule RN3 below, which refers to rulesRN!
and RN2.
We show how this is done in fig.
5.Note that if two variables in a single rule havethe same label, then their instantiations must beidentical.
The concept of derivation as well as thederivation tree have been defined for the STCG\[Zaharin 86\], but it would be too long to explainthem here.
Instead, we shall use a diagram like theone in fig.
5, which should be quite self-explana-tory.Rulez RN3?
/ /  s ,~  /,,oJI, \ [~  JCORI~.SPOg~\]~:E( ~ ,~ i ), ( 4.~ 2 ), ( s ~ iGoing back to fig.
2 where the string-tree3 J 3 correspondence for a b c is given, each substruc-ture below a node S in the TREE corresponds to asubstring "abe", but the terms in this substringare distributed over the whole STRING.
In general,Jin a string-tree correspondence AI..A ~8 definedby a rule ~l..e--8, it is posslble that we w~sh to?
n deflne a substrlng-subtree correspondence of~ j jBk ,  are disjoint the form A.
.. where A.
''?
'~Jm --\]~ --J1substrings of the string A ...A and Sk is a sub-- - I  - -ntree of 8, and that 8 k cannot be expressed in termsof the respective structural representations (ifany) of ~j .... ~Jm" Such a correspondence cannot beIhandled by a rule of the form discussed so far be-cause a structural representation (STRUCTURE) foundon the left hand side can correspond only to a unit(connected) substring.We can overcome this problem by allowing a ruleto define a subcorrespondence between a substructu-re in the TREE (in the RHS) and a disjoint sub-string in the STRING (in the LHS), where this sub-correspondence is described in another rule (ie.using a reference - SUBREFERENCE - for a substruc-ture in the TREE, rather than uniquely for theelements in the LHS).
One also allows elements inthe LHS to be given in terms of variables which canbe instantiated to substrings.
Rule $2 (after fig.5) gives an example of such a rule where X,Y,Z arevariables.The rule $2 is of the following general type.
(Recall that we wish to define a substrinq-subtreecorrespondence of the form A .. .
.
~J~gk'm Where --JlA.
,..,A, m-J are disjoint substrings of the string--J1A ..A and B k is a subtree of B, and that ~k cannotbe expressed in terms of the respective structural,..,A.).
In the rule representations (if any) of ~Jl~ m..~n~B, the elements ~ ''''~n are to be as before I !except for those representing the substringsA.
,..,A. m-J which are to be left as unknowns, written--\]isay~j l  .... ~Jm respectively.
The correspondenceA .
.
.A ,~8 k is to be written in the entry CORRES---3 I --3 m|PONDENCE as ~.
.
.~.
~gk, and this is given a refe-r - - - r -~  ~the correspondence elsewhere in another rule.
InF~-)|this SUBREFERENCE, if a rule ~'..~'~8 is a possibi O2zNP I P i NP \[--~J|lity, the identification between the sequences K...X. and ~'..~' must be given?
The interpreta-3zany -\]i --3m I ption of the rule is that the SUBREFERENCE gives astring-tree correspondence A'..A'~8'which precise---I --p) \[y defines the string-tree correspondence?j s k ,where B k is identified with 8' andAj ..A. is identified with A'..A' with the1.
--Jm --i --~separation points being obtained from the predeter-mined identification between X. .
.X.
and ~'..e'mentioned above.
--3 1 --3 m l pA STCG containing the rules $I and $2 definesthe language anbnc n, and associates a structural re-presentation like the one in fig.2 to every stringin the language.
Fig.6 illustrates how this grammardefines the string-tree correspondence in fig.2.163Rule : RN3TREE:STRING:Identicalto givel u l l  A m A1 1~.1~ o NPRule :  RN2in  ~ISTRING: ~i~2 to  g iveTREE:  2 ' ~Unknown in TREE -F~Unknown in STRING -- A~2Rule: I~;i ISTRING: hunter~.~=~cz(~o .
.
I  to give "~<f .~.
~ ~  to ~ to g i~STRING: dog STRING: catcherFig.S - Rules RN1,R~2,RN3 to define the correspondence in fig.1164Rule:  $2~rR=2 :a  3:b 4:cCORRESPONDENCE:( 2 eu 2 ) , (  3 ,"d3 ) ,  ( 4 ,~ J  4 ) ,( x Y z ~ 5 ) - SUBR~r~ENCE(by) :l:Sl I i I2:a  3 :b  4 :0  5 :SIsl, _x- 2 ' ,  "'- 3 ' .
_~- 4'  " )  ~(2 ' ,3 ' ,4 '  in  re fer red  S1)P ors2 ,  _x- 2'_x', ~-  3'Y_', _z- 4 ' z '(2 '  ,3 '  ,4 '  , x '  ,_y' , z 'in referred S2 )Rule: $2 I:SI I I2:a  3 :b  4 :c  5 :SSTRING: a X b Y c Z( no R=r~NCE in LHS )Rule: $2' 1':S3' :bUnknown in tree - \ [ \ ]Onknown in STRING -x ,Y ,zSUBREFERENCE for Sto $2to give :I I "\[\]in S24':C 5':Sand _X=a_X 'Z -bX '_Z - c Z_'J~SUBREFERENCE for SJ ~/ to  g ive  :STRING: a X' b Y' c z ' /~  ~ and ~' - a( no ~.~uu~CE in LaS ) Y_' - b----~ Z' - c1:S Rule: $1TREE:2:a 3:b 4:cSTRING: a b cFig.6 - Rules SI,S2 to define the correspondence in fig.2165The informal discussion in this paper givesthe motivation and some idea of the formal defini-tion of the String-Tree Correspondence Grammar.The grammar stresses not only the fact that one canexpress string-tree correspondence like the oneswe have discussed, but also that it can be done ina 'natural' way using the formalism - meaning thestructures and correspondence are explicit in therule, and not implicit and dependent on the combi-nation of grammar rules applied (as in derivationtrees).
The inclusion of the substring-subtreecorrespondence is also another characteristic ofthe grammar formalism.
One also sees that thegrammar is declarative in nature, and thus it isinterpretable both for analysis and for generation(for example, by ~nterpretlng the rules as treerewriting rules with variables}.In an effort to demonstrate the principalproperties of the formalism, the STCG presented inthis paper is in a simple form, ie.
treating treeswith each node having a single label.
In its gene-ral form, the STCG deals with labels havingconsiderable internal structure (lists of features,etc.).
Furthermore, one can also expressconstraints on the features in the nodes - on indi-vidual nodes or between different nodes.As mentioned, the concepts of direct derivation(=>) and derlvatzon (->), as well as the derivationtree are also defined for the STCG.
(Note that therules with properties similar to the rule $2 entaila definition of direct derivation which is morecomplex than the classical definition).
The set ofrules in a grammar forms a formal grammar, ie.
itdefines a language, in fact two languages, one ofstrings and the other of trees.At the moment, there is no large applicationsof the STCG, but as the STCG derives its formalproperties from the Static Grammar, it would bequite a simple process to transfer applications inthe Static Grammar into STCG applications.
Like theStatic Grammar, the STCG is basically a formalismfor specification, but given its formal nature, onealso aims for direct interpretability by a machine.Though still incomplete, work has begun to buildsuch an interpreter \[Zajac 86\].ACKNOWLEDGEMENTSI would like to thank Christian Boitet whohad been a great help in the formulation of theideas presented here.
My gratitude also to HansKarlgren and Eva Haji~ova for their remarks andcriticisms on earlier versions of the paper.REFERENCES\[Boitet-et-al-82\]Ch.
Boitet, P. Guillaume, M. Quezel-Ambrunaz"Implementation and conversational environmerLof ARIANE-T8.4".Proceedings of COLING-82, Prague.\[Boitet 86\]Ch.
Boitet"The French National Project : technical orga-nization and translation results of CALLIOPE-AERO".IBM Conference on machine translation,Copenhagen, August 1986.\[Chappuy 83\]S. Chappuy"Formalisation de la description des niveauxd'interpr~tation des langues naturelles.Etude men~e en rue de l'analyse et de la g~n~-ration au moyen de transducteurs".Thase 3ame Cycle, Juillet 1983, INPG, Grenoble.\[Pullum 84\]G.K. Pullum"Syntactic and semantic parsability".Proceedings of COLING-84, Stanford.\[Tong 86\]Tong L.C.
"English-Malay translation system : a labora-tory prototype".Proceedings of COLING-86, Bonn.\[Vauquois 78\]B. Vauquois"Description de la structure interm~diaire".Communication pr~sent~e au Colloque deLuxembourg, Avril 1978, GETA dot., Grenoble.\[Vauquois & Chappuy 85\]B. Vauquois, S. Chappuy"Static Grammars : a formalism for the des-cription of linguistic models".Proceedings of the conference on theoreticaland methodological issues in machine transla-tion of natural languages, COLGATE Universit~New York, August 1985.\[Zaharin 86\]Zaharin Y.
"Strategies and heuristics in the analysis ofa natural language in machine translation".PhD thesis, Universiti Sains Malaysia, Penang,March 1986.
(Research conducted under theGETA-USM cooperation - GETA doc., Grenoble).\[Zaharin 87\]Zaharin Y.
"The linguistic approach at GETA : a synopsis~'GETA document, January 1987, Grenoble.\[Zajac 86\]R, Zajac"SCSL : a linguistic specification languagefor MT".Proceedings of COLING-86, Bonn.166
