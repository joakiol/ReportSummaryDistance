Proceedings of the 5th Workshop on Important Unresolved Matters, pages 17?24,Prague, Czech Republic, June 2007. c?2007 Association for Computational LinguisticsPerson Name Entity Recognition for ArabicKhaled ShaalanInstitute of InformaticsThe British University in DubaiP O Box 502216, Dubai, UAEKhaled.shaalan@buid.ac.aeHafsa RazaInstitute of InformaticsThe British University in DubaiP O Box 502216, Dubai, UAEhafsa.raza@gmail.comAbstractNamed entity recognition (NER) is nowa-days an important task, which is responsi-ble for the identification of proper names intext and their classification as differenttypes of named entity such as people, loca-tions, and organizations.
In this paper, wepresent our attempt at the recognition andextraction of the most important propername entity, that is, the person name, forthe Arabic language.
We developed thesystem, Person Name Entity Recognitionfor Arabic (PERA), using a rule-based ap-proach.
The system consists of a lexicon, inthe form of gazetteer name lists, and agrammar, in the form of regular expres-sions, which are responsible for recogniz-ing person name entities.
The PERA sys-tem is evaluated using a corpus that istagged in a semi-automated way.
The sys-tem performance results achieved were sat-isfactory and confirm to the targets setforth for the precision, recall, and f-measure.1 IntroductionThe recognition and classification of proper namesin text (e.g.
persons, locations, and organizations)has recently become considered of major impor-tance in Natural Language Processing (NLP) as itplays a significant role in various types of NLPapplications, especially in Information Extraction,Information Retrieval, Machine Translation, Syn-tactic Parsing/Chunking, Question-Answering,among others.
The valuable information in text isusually located around proper names, to collect thisinformation it should be found first (Abuleil, 2004;Chinchor, 1998).
In our presentation, we will con-centrate on the role of NER in Information Extrac-tion (IE).
IE is the NLP task that retrieves relevantinformation from unstructured texts and producesas a result a structured set of data.This paper describes work on recognizing andextracting the most important entities, that is, per-son names for the Arabic language.
We haveadopted the rule-based approach using linguisticgrammar-based techniques to develop PERA.
Thisapproach provides flexibility and adaptability fea-tures in our system and it can be easily configuredto work with different languages, NLP applications,and domains.
In order to determine the best rulesfor recognition of person names, various Arabictext corpora were analyzed.
Phrases containingperson names were retrieved, the underlying pat-tern was learned and person indicators such as ti-tles were identified.
Apart from this, person nameswere extracted from the available corpora andother resources to build up a lexicon, in the form ofgazetteer name lists, or gazetteer for short.
Thevarious Arabic naming conventions and the personindicators identified helped in deriving fine rulesthat gave high-quality recognition of person namesin Arabic text.
The recognition was done in twocycles using first the gazetteer and then the gram-mar rules.
The PERA system is evaluated using areference corpus that is tagged with person namesin a semi-automated way.
The achieved systemperformance results were satisfactory and confirm17to the targets set forth for the precision, recall, andf-measure.The paper is structured as follows.
Section 2presents the related work.
Section 3 describes thenaming conventions of person names used in Ara-bic language.
Section 4 presents methods of datacollection used.
Section 5 explains the system ar-chitecture and implementation.
Section 6 presentsthe experiment performed to evaluate the systemand finally Section 7 concludes the paper,summarizes our achievements, and highlights ourplans for future work..Larkey et al (2003) have conducted a study thatshowed the importance of the proper names com-ponent in cross language tasks involving searching,tracking, retrieving, or extracting information.
Inparticular, they have concluded that a combinationof static proper name (English-Arabic) translationplus transliteration provides a successful solution.
2 Related WorkAs in other NLP techniques, there are two mainapproaches to NER (Toral, 2005).
One is based onlinguistic knowledge, in particular grammar rulesand hence called rule-based, while the other isbased on machine learning techniques.
The re-quired resources for the knowledge approach areusually gazetteers and rules whereas the learningapproach needs an annotated (tagged) corpus.
Thelinguistic knowledge-based model achieve betterresults in specific domains, as the gazetteers can beadapted very precisely, and it is able to detectcomplex entities, as the rules can be tailored tomeet nearly any requirement.
However, if we dealwith an unrestricted domain, it is better to choosethe machine learning approach, as it would be inef-ficient to acquire and/or derive rules and gazetteersin this case.Name identification has been worked on quiteintensively for the past few years, and has beenincorporated into several products.
Many research-ers have attacked this problem in a variety of lan-guages but only a few limited researches have fo-cused on NER for Arabic text.
This is due to thelack of resources for Arabic NE and the limitedamount of progress made in Arabic NLP in gen-eral.Maloney and Niv (1998) developed TAGARABan Arabic name recognizer that uses a pattern-recognition engine integrated with morphologicalanalysis.
The role of the morphological analyzer isto decide where a name ends and the non-namecontext begins.
The decision depends on the part-of-speech of the Arabic word and/or its inflections.Abuleil (2004) presented a technique to extractproper names from text to build a database ofnames along with their classification that can beused in question-answering systems.
This workwas done in three main stages: 1) marking thephrases that might include names, 2) building upgraphs to represent the words in these phrases andthe relationships between them, and 3) applyingrules to generate the names, classify each of them,and saves them in a database.Pouliquen et al (2005) developed a tool for mul-tilingual person name recognition that focuses onthe "Who" part of the analysis of large news text.As multilingual NER is concerned, the translitera-tion of the NE has included alternative spellingvariants where the origin language of the name isusually not known.
Several variants could also befound in the same language.Samy et al (2005) has used parallel corpora inSpanish, and Arabic and an NE tagger in Spanishto tag the names in the Arabic corpus.
For eachsentence pair aligned together, they use a simplemapping scheme to transliterate all the words inthe Arabic sentence and return those matching withNEs in the Spanish sentence as the NEs in Arabic.While they report high precision and recall, itshould be noted that their approach is applicableonly when a parallel corpus is available.Zitouni et al (2005) has adopted a statistical ap-proach for the entity detection and recognition(EDR).
In this work, a mention can be eithernamed (e.g.
John Mayor), nominal (the president)or pronominal (she, it).
An entity is the aggregateof all the mentions (of any level) which refer toone conceptual entity.
This extended definition ofthe entity has proved the suitability of the ap-proach.3 Components of an Arabic Full NameArabic has well-defined naming practices.
TheArabic name elements may be divided into fivemain categories, Ibn Auda (2003):1.
An ism (pronounced IZM, as the final syllablein the word dogmatism), a personal, propername given shortly after birth, i.e.
the givenname.
Examples of such names are Muham-18mad [Mohammed], Musa [Moses], Ibrahim[Abraham].2.
A kunya (pronounced COON-yah), an honor-ific name or surname, as the father or motherof someone; e.g., abu Da'ud [the father ofDavid], umm Salim [the mother of Salim].
It ismeant as a prefix of respect or reverence.
Mar-ried persons (especially married ladies) are, asa general rule, simply called by their kunya(abu or umm + the name of their first-bornchild).
When using a person's full name, thekunya precedes the personal (given) name: AbuYusuf Hasan [the father of Joseph, Hasan],Umm Ja?far Aminah [the mother of Ja?far,Aminah].3.
By a nasab (pronounced NAH-sahb), a pedi-gree, as the son or daughter of someone; e.g.,ibn 'Umar [the son of Omar], bint 'Abbas [thedaughter of Abbas].
The nasab follows the ismin usage: Hasan ibn Faraj [Hasan the son ofFaraj], Sumayya bint Khubbat [Sumayya thedaughter of Khubbat].
Many historical person-ages are more familiar to us by their nasabthan by their ism: e.g., the historian ibnKhaldun, the traveler ibn Battuta, and the phi-losopher ibn Sina [Avicenna].Nasabs may be extended for several genera-tions, as may be noted in the example belowcontaining two generations nasab:Abu al-Qasim Mansur ibn al-Zabriqan ibnSalamah al-Namari4.
A laqab (pronounced LAH-kahb), a combina-tion of words into a byname or epithet, usuallyreligious, relating to nature, a descriptive, or ofsome admirable quality the person had (orwould like to have); e.g., al-Rashid [theRightly-guided], al-Fadl [the Prominent].Laqabs follow the ism: Harun al-Rashid[Aaron the Rightly-guided].5.
A nisba (pronounced NISS-bah), a name de-rived from a person's: trade or profession,place of residence or birth, religious affiliation,among others; e.g.
al-Hallaj [the dresser ofcotton], Al Msri [The Egyptian], Islami [Is-lamic].
Nisbas follow the ism or, if the namecontains a nasab (of however many genera-tions), generally follow the nasab.4 Data CollectionThe development of the system PERA depends oncollecting dictionaries of proper nouns and theirrelated indicators.
Techniques used for acquiringsuch data to build the dictionaries include:1.
Automatic collection of person names fromannotated corpus.
The person entities in theACE1 and Treebank corpus2 were recognizedand extracted using regular expression patternscoded within Python scripts.
Python is a strongstring processing language and widely used indeveloping NLP applications and tools.2.
Identification of person indicators.
Apart fromextracting the person names, these corporawere used also to extract noun phrases contain-ing the person names.
The surrounding se-quence of words around person names wasanalyzed to identify indicators of personnames.
A dictionary of these indicators wasformed which represented contextual cues ofperson names.3.
Name Database provided by government or-ganization.
The person name dictionary wasalso build from names collected from some or-ganizations including Immigration Depart-ments, Educational bodies, and Brokeragecompanies.4.
Internet Resources.
Names were retrieved fur-ther from various websites3 containing lists ofArabic names.
Some of these names are Ro-manized (written using the Latin alphabet) andhad to be transliterated from English to Arabic.This was done using the online translationsoftware ?Tarjim?
provided by Sakhr SoftwareCompany.
Notice that the variations in Roman-ized Arabic due to the lack of one to one corre-spondence between Arabic letters and Romanletters have also been reflected in the translit-eration, in reverse, from Romanized Arabic toArabic Script.The raw data received had to be further proc-essed to make it suitable for building gazetteers to1 ACE reference: http://projects.ldc.upenn.edu/ace/2 Treebank Corpus reference:http://www.ircs.upenn.edu/arabic/Both software are available to BUiD under license agreement.3 Web sites include:http://en.wikipedia.org/wiki/List_of_Arabic_names ,http://www.islam4you.info/contents/names/fa.php,  andhttp://www.mybabynamessite.com/list.php?letter=a19be incorporated within the system.
Some of theautomated preprocessing performed on these dataincludes:?
Removing extra whitespaces between firstand last names, or beginning and end ofnames for the efficient processing of themain gazetteer (dictionary) of completeperson names.?
Creating separate dictionaries (i.e.
first,last and middle names) without redun-dancy because the full names had to beparsed.
The extraction of each of these in-dividual components from full personnames was based on Python code andcommon sense.4.1 Typographic VariantsIn order to be able to recognize variant Arabicname entities, we added extra expressions in rulesand lexicon entries which lead to recognizingnamed entities and their typographic variants.
Ex-amples of typographic variants include:?
The drop of hamza initially, medially, andfinally (e.g.
?????
vs ?????
- [Ehessan]) ??????????
??
????
Two dots inserted on aleph maqsura, andtwo dots removed from yaa (e.g.
?????
vs-[Mousa])?
Dropping the madda from the aleph (e.g.vs  ?????
- [Al Khalifa])?
Hamza insertion below vs. above aleph(e.g.
?????
vs ?????-[Essraa])?
Two dots inserted on final haa, and twodots removed from taa marbouta (e.g.
?????
?vs ?????-[Fatma])?
Diacritics: partial, full, or none.
In the cur-rent version we remove diacritics.?
Typing hamza followed by aleph maqsuraseparately vs. together (e.g.
??????
vs  ????
?-[Hani]).4.2 DictionariesThe following dictionaries (gazetteers) are derivedusing the aforementioned data collection tech-niques.
A total of 472617 entries were collected.?
A dictionary of full person names (263598entries)?
A dictionary of first names (78956 entries)?
A dictionary of middle names (67595 en-tries)?
A dictionary of last names (33517 entries)?
A dictionary of job titles (19245 entries)?
A dictionary of honorifics used beforenames (173 entries)?
A dictionary of country names includingvariations in spellings (923 entries)?
A dictionary of nick names and laqabs(8169 entries)?
A dictionary of  person titles (20 entries)?
a dictionary of words and phrases that actas person indicators such as ?
?????????????????
(The sports supervisor) (421 en-tries)5 System Architecture and Implementa-tionFigure 1 shows the architecture of the PERA sys-tem.
Our system has two major components: thegazetteers and the Grammar.
A filtration mecha-nism is employed that enables revision capabilitiesin the system.Figure 1: Architecture of the System5.1 GazetteersThe main gazetteer (dictionary) of complete personnames plays the role of a fixed static dictionary offull person names.
It recognizes person name enti-DictionariesAcquisition from ACE& Treebank corpusArabicscriptInternet ResourcesNames DatabasesAnnotatedTextRule-based SystemWhitelistDictionaryBlacklistDictionaryText(3) Filter(2) GrammarConfiguration(1) GazetteerData Collection20ties by being applied as a Whitelist mechanism thataccepts matches which are reported as a result ofan intersection between the dictionary and the in-put text.
A Whitelist is a list of strings that must berecognized independent of the rules.
It containsentries in the following format:?????????
????
???????
?|Abdulrahman QasimMohammed AlshirawiSince the system being developed can be incor-porated in various applications independent of lan-guage constraints, the English transliterations ofthe Arabic names are included in the dictionary asmeta data.5.2 GrammarThe grammar performs recognition and extractionof person entities from the input text based oncombinations of regular expression patterns.
Thisrule definition is particularly challenging for theArabic language due to reasons such as:?
Arabic writing systems do not exhibit dif-ferences in orthographic case, such as ini-tial capitalized letters to indicate the pres-ence of a proper name.
This lack of spe-cific internal structure in the Arabic lan-guage poses great challenge for recogniz-ing person entities.?
Arabic is a highly inflected languagewhich entails a requirement of understand-ing of its morphological nature.
The in-flected Arabic word maybe composed ofprefixes such as prepositions and suffixessuch as pronouns.
These affixes need to beaddressed to ensure recognition of personnames alone.Due to the above complexities in the Arabiclanguage a deep contextual analysis of variousArabic scripts was performed using Python scriptsto build grammar rules based on keywords or trig-ger words forming a window around a personname.An Example Rule:The following rule recognizes a person name com-posed of a first name followed by optional middleand last names based on a preceding person indica-tor pattern.Description:?
The names should be verified against theirrespective dictionaries (i.e.
first, middle,and last names).?
The indicator pattern is composed of anhonorific such as "?????"
[The king] fol-lowed by an optional Nisba derived from alocation name such as "???????"
[Jordanian].These act as trigger words to recognize theperson name and should be verified againsttheir respective dictionaries of honorificand locations.?
The rule also matches an optional ordinalnumber appearing at the end of somenames such as "??????"
[II].?
The Arabic suffix letters "??"
and "?"
usedin the above pattern parses the inflectionsattached to Nisba derived from locationsthat are commonly found in Arabic text.Implementation:Writing conventions:(($honorific$ws*($location(\x{064A}|\x{0629})*$ws*)?)+$firsts_v(($ws*$middle_vv)|($ws*$lasts_v))?$ws*($number)?)?
$: reference to a slave schema.?
Firsts_v: dictionary of first names.?
Middle_vv: dictionary of middle names.?
Lasts_v: dictionary of last names.?
Ws: whitespace.?
Honorific:  dictionary of honorifics ap-pearing before names.?
Location: dictionary of locations.?
Number: Arabic ordinal numbers.Example:The following name would be recognized by theabove rule:???
????
??????????????????
[The Jordanian king Abdullah II]Apart from contextual cues, the typical Arabicnaming elements were used to formulate rules suchas nasab, kunya, etc.
Thereby the rules resulted in agood control over critical instances by recognizingcomplex entities.
((honorfic+ws(location(?|??)+ws)?)+firsts_v((ws+middle_vv)|(ws+lasts_v))?ws+(number)?
)215.3 FilterA filtration mechanism is used in the form of aBlacklist (rejecter) within the grammar configura-tion to filter matches that appear after person titlesbut are invalid person names.
In the following ex-ample:?
??????
?????
?????
???????????
???
?
[The Iraqi ForeignMinister the Secretary-General]The sequence of words ?????
????????
????????
[TheIraqi Foreign Minister] acts as a person indicatorand the word immediately following it is usually avalid person name.
However, in this example, thewords following the person indicator that is, ?
????????????
(the Secretary-General) is not a valid personname.
Hence the role of the blacklist comes intoplay by rejecting the incorrect matches recognizedby certain rules.5.4 The Implementation PlatformThe PERA system was implemented through in-corporation into the FAST ESP framework,(FAST,_).
FAST ESP is an integrated softwareapplication that provides searching and filteringservices.
It is a distributed system that enables in-formation retrieval from any type of information,combining real-time searching, advanced linguis-tics, and a variety of content access options into amodular, scalable product suite.The document processing stage within FASTESP system provides support for Entity Extraction.PERA is implemented through the customizabledocument processing pipelines within FAST ESP,which consists of multiple document processingstages.
A new search pipeline was created andstages containing the grammar configuration andgazetteers were added to this pipeline.
Figure 2indicates the functionality of the PERA systemincorporated in the pipeline within FAST ESP forrecognizing and tagging person entity in text.6 The ExperimentIn evaluating the PERA system we follow thestandard practice in the IE field of comparing sys-tem output against a reference corpus and measur-ing the performance of the Arabic person namedentity.Figure 2: PERA incorporated into FAST ESP pipe-line to produce Tagged text6.1 Reference CorpusThe text within the ACE and Treebank corpus wasused for creating the entity tagged reference corpusfor evaluating PERA.
The text was chosen ran-domly from files with ?sgm?
extension (containingthe Arabic script) within ACE & Treebank corpus.The tagging was automatically performed with aPython script and further a post manual check wasperformed to correct any invalid tags or identifythe missing ones.
The end product was an anno-tated text corpus in the xml format with the UTF-8encoding.
This was divided into a 46 test sets andeach evaluated individually with hurricane.
Thetotal size of the reference corpus build is around4MB.
The size and content of the corpus is suchthat it contains a representative amount of occur-rences of the person entity.6.2 Evaluation MethodWe have adopted the evaluation measures that arestandard in the IE community (De Sitter et al,2004), to evaluate and compare the results (preci-sion, recall and F-measures):correct entities recognizedPrecision= total entities recognizedPIPELINEPolitics of UkraineIn July 1994, Leonid Kuchma was elected as Ukraine's second president infree and fair elections.
Kuchma was reelected in November 1999 toanother five-year term, with 56 percent of the vote.
International observerscriticized aspects of the election, especially slanted media coverage;however, the outcome of the vote was not called into question.
In March2002, Ukraine held its most recent parliamentary elections, which werecharacterized by the Organization for Security and Cooperation in Europe(OSCE) as flawed, but an improvement over the 1998 elections.
The pro-presidential For a United Ukraine bloc won the largest number of seats,followed by the reformist Our Ukraine bloc of former Prime Minister ViktorYushchenko, and the Communist Party.
There are 450 seats in parliament,with half chosen from party lists by proportional vote and half from individ-ual constituenciesPerson PersonPerson22correct entities recognizedRecall= total correct entities2 x recall x precisionF-measure= recall + precisionPrecision indicates how many of the extractedentities are correct.
Recall indicates how many ofthe entities that should have been found, are effec-tively extracted.
Usually there is a trade off of re-call against precision.
Therefore, often an averageaccuracy is reported in the form of the F-measure,a harmonic mean which weights recall and preci-sion equally.
It was introduced to provide a singlefigure to compare different systems?
performances.The PERA system implemented within the FASTESP pipeline was evaluated using an InformationExtraction testing tool called ?hurricane?
that ap-plies these standard measures.6.3 ResultsFigure 3 is a snapshot of the evaluation performedby hurricane in terms of the above mentionedmeasure.Figure 3: An Extraction from Hurricane EvaluationThe extraction quality of the pipeline created forthe person name extractor confirms to the initialtarget set.
The required degree of precision (80%)and recall (70%), for the Person name extractor,has been achieved with the hurricane evaluation.Some of the entries within the gazetteers were ex-tracted from the same corpus used also for creatingthe reference corpus for evaluation.
However, theresults achieved are accurate since they indicatedrecognition of person entities not included in thegazetteers but being recognized by the grammarrules.Table1 indicates the performance figures pro-duced by 6 out of the 46 sets used for Hurricaneevaluation.The average Precision and Recall for the total 46sets in recognizing person names is 85.5% and89%, respectively.
And the average f-measure is87.5%.Test Set Precision Recall F-measureTreebank set 1 91.2 90.3 90.7Treebank set 2 94 96.3 95.1Treebank set  3  84.2 84.7 84.4ACE set 1 89.6 96.8 93.1ACE set 2 88.4 94.2 91.2ACE set 3  86.7 89 87.8Table 1: Evaluation result for 6 test sets.The missing accuracy can be overcome in thefollowing ways:?
Expanding the dictionary of personnames further.?
More Arabic text/corpus can be analyzedto identify strings that act as person indi-cators.?
Reducing negative effects on evaluationresults (true positive being treated asfalse positives) caused due to incompleteannotation of the test corpus.
The refer-ence corpus can be further fine tuned totag all person entities completely.?
Enhancing quality of transliteratednames used.?
Using Arabic text with error free spell-ing.?
Including all possible spelling variationsused for names in Arabic written text.7 Conclusion and Future WorkThe work done in this project is an attempt tobroaden the coverage for entity extraction by in-corporating the Arabic language, thereby pavingthe path towards enabling search solutions to theArabian market.Various data collection techniques were used foracquiring gazetteer name lists.
The rule-based ap-proach employed with great linguistic expertiseprovided a successful implementation of the PERAsystem.
Rules are capable of recognizing inflected23forms by breaking them down into stems and af-fixes.
A filtration mechanism is employed in theform of a rejecter within the grammar configura-tion that helps in deciding where a name ends andthe non-name context begins.
We have evaluatedour system performance using a reference corpusthat is tagged in a semi-automated way.
The aver-age Precision and Recall achieved for recognizingperson names was 85.5% and 89%, respectively.Suggestions for improving the system performancewere provided.This work is part of a new system for ArabicNER.
It has several ongoing activities, all con-cerned with extending our research to recognizeand categorize other entity Arabic named entitiessuch as locations, organization.AcknowledgementThis work is funded by the "Named Entity Rec-ognition for Arabic" joint project between TheBritish Univ.
in Duabi, Dubai, UAE and FASTsearch & Transfer Inc., Oslo, Norway.
We thankthe FAST team.
In particular, we would like tothank Dr. Petra Maier and Dr. J?rgen Oesterle fortheir technical support.Any opinions, findings and conclusions or rec-ommendations expressed in this material are theauthors, and do not necessarily reflect those of thesponsor.ReferencesSaleem Abuleil 2004.
Extracting Names from ArabicText for Question-Answering Systems, In Proceed-ings of Coupling approaches, coupling media andcoupling languages for information retrieval (RIAO2004), Avignon, France.
pp.
638- 647.Da'ud Ibn Auda.
2003.
Period Arabic Names and Nam-ing Practices, In Proceedings of the Known WorldHeraldic Symposium (SCA: KWHS Proceedings,2003), pp.
42-56, St. Louis, USA.FAST ESPhttp://www.fastsearch.com/thesolution.aspx?m=376Nancy Chinchor 1998.
Overview of MUC-7.
In Pro-ceedings of the Seventh Message UnderstandingConference (MUC-7).
Available at:http://www.itl.nist.gov/iaui/894.02/related_projects/muc/Leah S. Larkey, Nasreen Abdul Jaleel, Margaret Con-nell.
2003.
What's in a Name?
: Proper Names inArabic Cross Language Information Retrieval CIIRTechnical Report IR-278.
Available athttp://ciir.cs.umass.edu/pubfiles/ir-278.pdfJohn Maloney and Michael Niv.
1998.
TAGARAB: AFast, Accurate Arabic Name Recogniser Using HighPrecision Morphological Analysis.
In Proceedings ofthe Workshop on Computational Approaches to Se-mitic Languages.
Montreal, Canada.
August, pp.
8-15.Bruno Pouliquen, Ralf Steinberger, Camelia Ignat, IrinaTemnikova, Anna Widiger, Wajdi Zaghouani, andJan Zizka.
2005.
Multilingual person name recogni-tion and transliteration.
Journal CORELA-Cognition,Repr?sentation, Langage, Vol.
2,  ISSN 1638-5748.Available at http://edel.univ-poitiers.fr/corela/Doaa Samy, Antonio Moreno and Jose M. Guirao.
2005.A Proposal for an Arabic Named Entity Tagger Lev-eraging a Parallel Corpus, International ConferenceRANLP, Borovets, Bulgaria, pp.
459-465.An De Sitter, Toon Calders, and Walter Daelemans.2004.
A Formal Framework for Evaluation of Infor-mation Extraction, University of Antwerp,  Dept.
ofMathematics and Computer Science, Technical Re-port, TR 2004-0.
Available athttp://www.cnts.ua.ac.be/Publications/2004/DCD04Antonio Toral.
2005.
DRAMNERI: a free knowledgebased tool to Named Entity Recognition.
In Proceed-ings of the 1st Free Software Technologies Confer-ence.
A Coru?a, Spain.
pp.
27-32.Imed Zitouni, Jeffrey Sorensen, Xiaoqiang Luo andRadu Florian, 2005 The Impact of MorphologicalStemming on Arabic Mention Detection andCoreference Resolution, In the Proceedings of theACL workshop on Computational Approaches to Se-mitic Languages, 43rd Annual Meeting of the Asso-ciation of Computational Linguistics (ACL05).
June,Ann Arbor, Michigan, USA, pp.
63-70.24
