CONJUNCTIONS AND MODULARITY IN LANGUAGE ANALYSIS PROCEDURESRalph GrishmanDepartment of Computer ScienceCourant Institute of Mathematical SciencesNew York UniversityNew York, New York, U. S. A.SummaryThe further enrichment of naturallanguage systems depends in part onfinding ways of "factoring" the effectso f  various linguistic phenomena, so thatthese systems can be partit ioned intomodules of comprehensible size andstructure.
Coordinate conjunction has asubstantial impact on all aspects ofsyntactic analysis -- constituent struc-ture, grammatical constraints, andtransformations.
If the rules of syn-tactic analysis were directly expandedto accomodate conjunction, their sizewould increase severalfold.
We describebelow the mechanisms we have used to lo-calize the effect of conjunction in ournatural language analyzer, so that mostof the rules of our grammar need not ex-pl icit ly take conjunction into account.IntroductionProgress in computational ~inguis-tics depends in part on identifying waysof decomposing complex components of theanalysis procedure into more elementaryconstituents corresponding to separableor nearly separable aspects of l inguis-tic structure.
If this "factoring" issuccessful, the constituents will in sumbe substantial ly simpler than the compo-nent they replace, thus clarifying thelinguistic theory represented by the an-alysis procedure and paving the way forfurther enrichment of the language sys-tem.A familiar example of such factor-ing began with early context-free natur-al language parsers.
Such parsers triedto use a context-free grammar to des-cribe both the constituent structure ofsentences and the most basic grammaticalconstraints (e.g., number agreementbetween subject and verb and within nounphrases, subcategorization constraints).Because these grammatical constraintshave a mult ipl icative rather than addi-tive effect on the size of the grammar,this approach rapidly becomes unwieldy.In its place arose two component systemswith a separate procedural restrictioncomponent for expressing such constra-ints.We have devoted considerable effortto factoring out the effects of coordi-nate conjunction on language analysis.Conjunction greatly increases the numberof different possible structures whichthe components of syntactic and semanticanalysis must be able to process.
Ifeach component were simply expanded toaccomodate all these additional struc-tures, the resulting system would behuge and the essential function of thecomponents greatly obscured.
We havesought instead to isolate, as much aspossible, the effects of conjunctionwithin separate modules which modify theoperation of the parser and restructurethe result of the parse.Our System in BriefOver the past 15 years, members ofthe Linguistic String Project and Com-puter Science Department at New York Un-iversity have developed a powerful setof tools for natural language analysis\[1,2\].
Our primary objective has beenthe automated retrieval of informationfrom natural language texts; for thepast several years we have been applyingthese tools to the construction of sys-tems for gathering statistics andanswering questions about hospital re-cords (initially, radiology reports;currently, discharge summaries).We have divided the task of answer-ing questions about such texts into twosubtasks \[3\].
The first of these is theautomatic mapping of these texts into atabular data base structure called aninformation format.
We term this map-ping procedure formatting \[4\].
The sec-ond subtask is the retrieval of informa-tion from this data base in response tonatural language queries.
Both subtasks-- the analysis of the texts and the an-alysis of the queries -- involve severalstages of syntactic processing followedby several of semantic processing.
Thesyntactic processing is similar in thetwo cases, although the semantic pro-cessing is quite disparate: in the for-matting, it involves the mapping of sen-tence constituents into the format; inthe  question answering, it involves atranslation into logical form (an exten---500~sion of pred icate  calculus) and thenceinto a data base retr ieval  request.
Weshall  focus in this paper on the ef fectsof con junct ion  on the syntact ic  process-ing, a l though we shall  also comment atthe end on the interact ion of the syn-tact ic and semantic  processing.Syntact ic  process ing i s  done intotwo stages: pars ing and t rans format ion-al decompos i t ion .
Pars ing is done by atop-down context - f ree  parser augmentedby grammat ica l  const ra ints  expressed inan spec ia l -purpose  procedura l  language,Rest r ic t ion  Language \[2,5\].
The result -ing organ izat ion  is s imilar to that ofan augmented t rans i t ion network (ATN),a l though sharper separat ion is mainta-ined between the context - f ree grammarwhich def ines the const i tuent  structureand the rest r ic t ions  which implement thegrammat ica l  constra ints .
In contrast  tomost ATNs, t rans format iona l  decompos i -t ion is per formed as a separate stagefo l lowing the parse \[6\].
* The decompos i -tion regular izes  the sentence structureby such operat ions  as convert ing pass ivesentences to act ive, expanding re lat ivec lauses and other noun modi f ie rs  to fullsentent ia l  structures,  etc.Incorporat ing Coord inate  Con junct ionIn this sect ion we shall  br ief lyconsider  the ef fect  of coord inate  con-junct ion on each aspect of syntact icprocess ing,  and descr ibe how we haveadded modules  to our process ing compo-nents to account for these effects.Const i tuent  StructureLet us consider f i rst  the prob lemof the new st ructures  introduced by con-junction.
The al lowed patterns of con-jo in ings in a sentence are quite regu-lar.
Loose ly  speaking,  a sequence ofe lements  in the sentence tree may befol lowed by a con junct ion  and by some orall of the e lements  immediate ly  preced-ing the conjunct ion.
For example, ifthe top- level  sentence structure is sub-ject - verb - object  and an "and" ap-pears after the object,  the al lowed pat-terns of con jo in ings  include subject  -verb - object  - and - subject  - verb -object  ("I drank mi lk and Mary atecake.
"),  subject  - verb - object  - and -* The separat ion of const i tuent  struc"ture, restr ic t ions,  and t rans format ionsis another example of the modu lar i ty  wetry to achieve in our system.
See Pratt\[7\] for a d iscuss ion  of the modular i tyof augmented context - f ree analyzers.verb - object ("I drank milk and atecake.")
,  and subject - verb - object  -and - object ("I drank milk andseltzer .")
.
There are certa in excep-tions, known as gapping phenomena,  inwhich one of the e lements  fo l lowing thecon junct ion  may be omitted; for exam-ple, subject - verb - object  - and -subject  - object  ("I drank milk and Maryseltzer .")
.We could extend the context - f reecomponent  of our surface grammar to ac-count for these patterns.
For example,in p lace of the product ionS -> SUBJ VERB OBJwe would have the set of product ionsS -> SUBJ CA1 VERB CA20BJ  CA3CA1 -> SUBJ CA1 inullCA2 -> SUBJ CA1 VERB CA2 iVERB CA2 inullCA3 -> SUBJ CA1 VERB CA20BJ  CA3 IVERB CA20BJ  CA3 iOBJ CA3 1nullthis does not include gapping).
Thetrouble with coordinate con junct ions  isthat they can occur almost anywhere inthe structure of a sentence.
Thus thesame changes which we made above to thedef in i t ion  of S would have to be made toall (or at least many) of the produc-t ions in the grammar.
Clearly,  such anextens ion to the grammar could increaseits size by perhaps an order of magni -tude.One a l ternat ive is to automat ica l lygenerate  the addit ional  e lements andproduct ions  needed to account for con-junct ion as required during the pars ingprocess.
When a con junct ion is encoun-tered in the sentence, the normal pars-ing procedure is interrupted, a specialcon junct ion  node is inserted in theparse tree (such as the CAn nodesabove), and the appropr iate def in i t ionis generated for this con junct ion node.This def in i t ion  al lows for all the al-ternat ive conjo ined element sequences,l ike the def in i t ions  of the CAn shownabove.
Conjo in ings  not f i t t ing thebasic pattern,  such as gappings,  aresti l l  included expl ic i t ly  in the gram-mar.
An interrupt mechan ism of thissort is part  of the L inguist ic  Str ingPro ject  parser \[i\].
A similar mechan ismis included in Woods' augmented transi-t ion network parser \[8\] and a number ofother systems.--501--RestrictionsThe restrictions enforce grammati-cal constraints by locating and testingconstituents of the parse tree.
One ofthe simpler restrictions in the Linguis-tic String Project grammar is WSELI,verb-object selection for noun objects.Verbs may be marked (in the dictionary)as excluding certain classes of noun ob-jects; WSELI verifies that the objectis not a member of one of these classes.For instance, the verb "eat" is coded asexcluding objects of the class NSENTI,which includes such words as "fact","knowledge", and "thought.
"* The sen-tence "John ate his thought."
wouldtherefore fail WSELI and be marked asungrammatical by the parser.Explicit ly modifying each restric-tion to account for possible conjoinedstructures would expand that componentseveral fold.
Most restricions,however, apply distr ibutively to conjo-ined structures -- a constraint is sa-tisfied if it is satisfied separately byeach conjunct.
For example, when theobject is conjoined (verb nounl andnoun2) verb-object selection must be sa-tisfied both between verb and nounl andbetween verb and noun2.
Thus in "Johnate meat and potatoes.
", WSELI must sep-arately check selection between "ate"and "meat" and between "ate" and "pota-toes".
This constraint can exclude in-correct analyses for some conjoined sen-tences.
For instance, in "John ate hissandwich and thought about Mary.
", itexcludes the analysis where John ate histhought about Mary.Our implementation takes advantageof the fact that most restrictions applydistributively.
The restrictions arestated in terms of a set of grammaticalroutines which locate constituents ofthe parse tree; for example, the COREroutine locates the head noun of a nounphrase.
In a conjoined context, theseroutines are in effect multi-valued; in"John ate meat and potatoes.
", the COREOF THE OBJECT has two values, "meat" and"potatoes" We achieve this effectthrough a non-determinist ic programmingmechanism which is invoked by the rou-tines when a conjoined structure is en-countered \[2,9\].
This mechanism auto-matical ly reexecutes the remainder ofthe restriction for each value of theroutine (each conjunct).
In this way,* NSENTI is one of several noun classesdefined in the Linguistic String Projectgrammar in terms of the types of senten-tial right modifiers they can take (suchas "the fact that John is here").the effect of conjunction is largelyisolated within these grammatical rou-tines.
Restrictions which do not dis-tribute (such as number agreement) muststill be explicit ly modified for con-junction, but these represent a rela-tively small fraction of the grammar.Transformational decomposit ionThe transformations regularize theparse by incrementally restructuring theparse tree, and are therefore almost allaffected by the possible presence ofconjunctions in the portion of the treethey manipulate.
Most of the transfor-mations, however, only rearrange ele-ments within a single sentential struc-ture or noun phrase.
We therefore chosethe expand each conjoined structure intoconjoined complete sentential structuresor noun phrases at the beginning oftransformational decomposit ion (for ex-ample, "John baked cookies and madetea."
would be expanded to "John bakedcookes and John made tea.
); in this waymost of the transformations are unaf-fected by the presence of conjunctions.The rules for determining quantif i-cational structure, however, must takeaccount of the copying which occurs whenexpanding conjoined structures (for ex-ample, "Some people speak English andunderstand Japanese."
is not synonymouswith "Some people speak English and somepeople understand Japanese.").
In sim-plest terms, quantif iers derived fromnoun phrases which are copied duringconjunction expansion (such as "some pe-ople" in the last example) must be as-signed wider scope than the logical con-nective derived from the conjunction.We do this by assigning a unique indexto each noun phrase in the parse tree,copying the index along with the nounphrase in the transformations, andchecking these indices during the scopeanalysis which is a part of the transla-tion to logical form.
Similar accountmust be taken of copied determiners andquantif iers in conjoined noun phrases(because, for example, "ten colleges anduniversities" is not necessari ly synony-mous with "ten colleges and ten univer-sities").Sentence GenerationAs part of our question-answeringsystem, we generate answers by translat-ing from logical form (extended predi-cate calculus) into full English sen-tences \[10\].
There is a close parallelbetween the components for sentence ana-lysis and sentence generation; in par---502--ticular, the last major step in genera-tion is the application of a set of gen-erative transformations.
In accordancewith the basic symmetry between analysisand generation, the generative transfor-mations operate on trees containing con-junctions only of full sentential struc-tures and noun phrases.
Conjunction re-duction (changing, for example, "Johnate cake and John drank milk."
to "Johnate cake and drank milk.")
is performedat the end of the transformationalcycle.
Most of the generative transfor-mations operate within a single senten-tial structure or noun phrase.
As a re-sult, the generative transformations,like the analytic transformations, arefor the most part not affected by thepresence of conjoined structures.DiscussionIn the preceding sections we havedescribed the effect of coordinate con-junction on all the components of a syn-tactic analyzer.
We have shown how wehave been able to encapsulate thechanges required to these components --as an interrupt mechanism for our con-text-free parser; as anon-deterministic programming mechanisminvoked by the routines used by the res-trictions; as a set of expansion rou-tines preceding transformational decom-position.
We have thus avoided the needfor pervasive changes which would havesubstantially enlarged, complicated, andobscured the original components.
Inaddition, our approach has isolated andcharacterized the effect of conjunctionin such a way that it may be carriedforward to future systems and other gro-ups.Although modularity is generallyregarded as a desirable objective, it issometimes claimed that it imposes con-straints on the communication betweenmodules which will ultimately lead tounacceptable losses of efficiency.
Wewould respond that some constraints arenecessary if a complex system is to bemanageable and comprehensible.
If themode of in teract ion  is appropriatelychosen and sufficiently powerful (suchas the interrupt mechanism and thenon-deterministic programming mechanism)the resulting system will be both clear-ly structured and reasonably efficient.AcknowledgementsThe author wishes to acknowledgethe primary roles played by Naomi Sagerand Carol Raze Friedman in the design ofthe conjunction mechanisms.
CarolFriedman developed the routines and res-trictions for conjunction and the con-junction expansion procedure.
Ngo ThanhNhan implemented the conjunction trans-formations for question analysis and theconjunction reduction routine for sen-tence generation.This research has been supported inpart by Grant No.
N00014-75-C-0571 fromthe Office of Naval Research; in partby the National Science Foundation underGrants MCS78-03118 from the Division ofMathematical and Computer Sciences andIST-7920788 from the Division of Infor-mation Science and Technology; and inpart by National Library of MedicineGrant No.
LM02616, awarded by the Na-tional Institutes of Health, DHEW.Referencesi.
N. Sager, Syntactic Analysis of Na-tural Language.
Advances in Computers8, 153-188.
Academic Press, New York(1967).2.
R. Grishman, N. Sager, C. Raze,and B. Bookchin, The Linguistic StringParser.
AFIPS Conference Proceedings42, 427-434.
AFIPS Press, Montvale, NewJersey (1973).3.
R. Grishman and L. Hirschman,Question Answering from Natural LanguageMedical Data Bases.
Artif icialIntell igence Ii, 25-43 (1978).4.
N. Sager, Natural Language Informa-tion Formatting: The Automatic Conver-sion of Texts to a Structured Data Base.Advances i_nn Computers __17, 89-162.Academic Press, New York (1978).5.
N. Sager and R. Grishman, The Res-triction Language for Computer Grammarsof Natural Language.
Communications ofthe ACM 18, 390-400 (1975).6.
J. Hobbs and R. Grishman, The Au-tomatic Transformational Analysis of En-g l i sh  Sentences: An Implementation.Int'l J. of Computer Mathematics,Section A, 5, 267-283 (1976).7.
V. Pratt , Lingol -- A Progress Re-port.
Advance Papers Fourth Int'l JointConf.
Artif icial Intelli@ence, 422-428(1975) .8.
W. A.
Woods, An Experimental Pars-ing System for Transition Network Gram-mars.
Natural Language Processing,Courant Computer Science Symposium 8,111-154 (1973).9.
C. Raze, A Computational Treatmentof Coordinate Conjunctions.
Am.
J.Computational Linguistics, microfiche 52(1976).10.
R. Grishman, Response Generationin Question-Answering Systems.
Proc.17th Annl.
Meeting Assn.
ComputationalLin@uistics, 99-101 (1979).?
--503--
