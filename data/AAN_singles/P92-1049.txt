ELABORATION IN OBJECT DESCRIFFIONS THROUGH EXAMPLESVibhu O. MittalDepartment of  Computer ScienceUniversity of  Southern CaliforniaLos Angeles, CA 90089USC/Information Sciences Institute4676 Admiralty WayMarina del Rey, CA 90292AbstractExamples are often used along with textual descrip-tions to help convey particular ideas - especially ininstructional or explanatory contexts.
These accompa-nying examples reflect information i the surroundingtext, and in turn, also influence the text.
Sometimes,examples replace possible (textual) elaborations inthedescription.
It is thus clear that if object descriptionsare to be generated, the system ust incorporate strate-gies to handle xamples.
In this work, we shall inves-tigate some of these issues in the generation of objectdescriptions.INTRODUCTIONThere is little doubt that people find examples very ben-eficial in descriptions of new or complex objects, rela-tions,orprocesses.
Various tudies have shown that heinclusion of examples in instructional material signifi-cantly increases user comprehension (for e.g., (Houtz,Moore & Davis, 1973; MacLachlan, 1986; Pirolfi,1991; Reder, Charney & Morgan, 1986; Tennyson& Park, 1980)).
Users like examples because xam-pies tend to put abstract, heoretical information i toconcrete terms they can understand.
Few generationsystems have attempted tomake significant use of ex-amples, however.
In particular, most systems havenot integrated examples in the textual descriptions, buthave used them mostly on their own, independently ofthe explanation that may also have been provided atthat point.
However, examples cannot be generated inisolation, but must form an integral part of the descrip-tion, supporting the text hey help to illustrate.Most previous work (especially in the context oftutoring systems) focused on the issue offinding usefulexamples (for e.g., Rissland's CEG system (1981) andAshley's HYPO system (Ashley, 1991; Rissland &Ashley, 1986; Rissland, 1983)).
Work by Woolf andher colleagues considered issues in the generation of tu-torial discourse, including the use of examples (Woolf& McDonald, 1984; Woolf & Murray, 1987), but their315analysis did not address pecific issues of integratedexample and language generation.In this paper, we build upon some of these stud-ies and describe the issues in generating descriptionswhich include examples in a coordinated, coherentfashion, such that they complement and support eachother.AN EXAMPLEConsider for inst,'mce, the example in Figure 1, froma well known introductory book on the programminglanguage LISP.
It describes an object (a data structure)called a "fist."
There are a number of issues that canbe immediately seen to be relevant:I.
Should the system choose to elaborate on the objectattributes in text, or through the use of examples?For instance, the information i Figure I could alsohave been expressed textually as: "A list always be-gins with a left parenthesis.
Then come zero or morepieces of data (called the elements of a list), and aright parenthesis.
Data elements can be of any LISPtype, including numbers, symbols and strings".
Inthe figure, the examples arc used to elaborate on twoaslaeCtS of the data-elements: the variable numberof the elements, and the different types of  whichthese lements may belong to.
In some contexts, theexamples tend to re-iterate certain aspects (in thiscase, the number was mentioned in the explanationas well), while in others, the examples tend to elab-orate on aspects that are not mentioned explicitly inthe description (in our case, the type information).2.
Should the system use one example, or multiple x-amples?
Consider for instance, the following exam-ple of a LISP list:(FORMAT T "~2% ~ A ~ A - A"  12345678' James  ' Smi th  (address  person)  )It is not entirely obvious that single examples of thetype above arc always the most appropriate ones,A list always begins with a left parenthesis.
Then comezero or more pieces of data (called the elements of alist) and a right parenthesis.
Some examples of listsare:(AARDVARK) ;;; an atom(RED YELLOW GREEN BLUE);;; many atoms(2 3 5 11 19) ;;; numbers(3 FRENCH FRIES) ;;; atoms & numbersA list may contain other lists as elements.
Given thethree lists:(BLUE SKY) (GREEN GRASS) (BROWN EARTH)we can make a list by combining them all with aparentheses.
((BLUE SKY) (GREEN GRASS) (BROWN EARTH))Figure 1: A description of the object LIST using ex-amples (From (Touretzky, 1984), p.35)even though such examples are frequently seen intechnical reference material.
The system must here-fore be able to make reasonable decisions regardingthe granularity of information to be included in eachexample and structure its presentation accordingly.3.
If there are multiple examples that are to be pre-sented, their order of presentation is important too.Studies has shown that users tend to take into ac-count the sequence of the examples as a source ofimplicit information about the examples (Carnine,1980; Litchfield, IMiscoll & Dempsey, 1990; Ten-nyson, Steve & Boutwell, 1975).
For instance, inFigure 1, the first and second examples taken to-gether illustrate the point that the number of dataelements i not important.4.
When are 'prompts' necessary?
Examples oftenhave attention focusing devices such as arrows,marks, or as in the Figure 1, extra text, associatedwith them.
These help the user disambiguate hesalient from the irrelevant.
What information shouldbe included in the prompts, and in the case of text,how should be be phrased?5.
How should the example be positioned with respectto the text?
Studies of instructional texts reveal thatexamples can occur before the text (and the textelaborates upon the example), within the text, or (asin our figure), after the text (Feldman, 1972).There are other issues that need to be consideredin an integrated framework - some of these that affectmost of the issues raised above are the audience-type,the knowledge-type (whether the concept being de-scribed is a noun or a relation for instance) and thetext-type (tutorial vs. reference vs. report, ete).
The316DESCRI~I~L ISTIDATAl.mT $1t'NTA.CT\]C ~I natm.~z.I .I .I111'~1111~.
I~II~IIIM _. INI~QM._Figure 2: Plan skeleton for listing the main features ofa LIST.4.NU1BIR TYPBM MM M -, ~ M  m / zP i t~MID.CX~OUI~ LIST OFLm~I IM lqtolKr \[ - ATOMS - NU~K~ --/aDM$+ -- ~/~-/d$'~F iN  3: Partial text plan for generating the LISTexamples.issue of how the examples are selected (generated vs.retrieved is also an important issue, but we shall notdiscuss that here.STATUS OF  WORKWe are investigating these issues by implementing asystem that can generate examples within explanatorycontexts (within theEES framework (Neches, Swartout& Moore, 1985; Swartout & Smoliar, 1987)) using theMoore-Paris planner (1992, 1991 ) for discourse gener-ation.
Our initial system is for the automatic generationof documentation for small sub-sets of programminglanguages.
One reason for this choice is that it al-lows us to study a variety of example-rich texts in arelatively unambiguous domain.
A partial text-plangenerated by our planner for the description given inFigure 1 is given in Figures 2 and 3.
It shows some ofthe communicative goals that the planner needs to beable to satisfy in order to generate some of the simpleobject descriptions in our application.
These descrip-tions can make use of examples (instead of tex0 tolist and describe feature laborations, or use them inconjunction with a textual description to clarify andillustrate various points.Among issues that we plan to study are the differ-ences between opportunistic generation of examplesand top-down planning of text with examples, and theeffects arising from differences inthe knowledge type,the text-type and other sources of information.AcknowledgmentsThanks to C6cile Paris for critical discussions, differentperspectives and bright ideas.
This work was supportedin part by the NASA-Ames grant NCC 2-520 and underDARPA contract DABT63-91 42-0025.ReferencesAshley, K. D. (1991).
Reasoning with cases and hy-potheticals in HYPO.
International Journal ofMan-Machine Studies, 34(6), 753-796.Carnine, D. W. (1980).
Two Letter Discrimination Se-quences: High-Confusion-Alternatives first ver-sus Low-Confusion-Alternatives first.
Journal ofReading Behaviour, XII(1), 41-47.Feldman, K. V. (1972).
The effects of the numberof positive and negative instances, concept def-initions, and emphasis of relevant attributes onthe attainment of mathematical concepts.
In Pro-ceedings of the Annual Meeting of the AmericanEducational Research Association, Chicago, Illi-nois.Houtz, J. C., Moore, J. W., & Davis, J. K. (1973).
Ef-fects of Different Types of Positive and NegativeExamples in I.eaming "non-dimensioned" Con-cepts.
Journal of Educational Psychology, 64(2),206-211.Litchfield, B. C., Driscoll, M. P., & Dempsey, J. V.(1990).
Presentation Sequence and Example Dif-ficulty: Their Effect on Concept and Rule l..eam-ing in Computer-Based Instruction.
Journal ofComputer-Based Instruction, 17(1), 35-40.MacLachlan, J.
(1986).
Psychologically Based Tech-niques for Improving Learning within Comput-erized Tutorials.
Journal of Computer-Based In-struction, 13(3), 65-70.Moore, J. D. & Paris, C. L. (1991).
Discourse Struc-ture for Explanatory Dialogues.
Presented at theFall AAAI Symposium on Discourse Structure inNatural Language Understanding and Generation.Moore, J. D. & Paris, C. L. (1992).
User models anddialogue: An integrated approach to producingeffective xplanations.
To appear in the 'UserModel and User Adapted Interaction Journal'.Neches, R., Swartout, W. R., & Moore, J. D. (1985).Enhanced Maintenance and Explanation of Ex-pert Systems Through Explicit Models of TheirDevelopment.
IEEE Transactions on SoftwareEngineering, SE-11( l l ), 1337-1351.Pirolli, P. ( 1991).
Effects of Examples and Their Expla-nations in a Lesson on Recursion: A ProductionSystem Analysis.
Cognition andlnstruction, 8(3),207-259.Reder, L. M., Chamey, D. H., & Morgan, K. I.
(1986).The Role of Elaborations in learning a skill froman Inslructional Text.
Memory and Cognition,14(1), 64-78.Rissland, E. L. (1981).
Constrained Example Genera-tion.
COINS Technical Report 81-24, Departmentof Computer and Information Science, Universityof Massachusetts, Amherst, MA.Rissland, E. L. (1983).
Examples in Legal Reason-ing: Legal Hypotheticals.
In Proceedings of theInternational Joint Conference on Artificial Intel-ligence, (pp.
90--93), Karlsrnhe, Germany.Rissland, E. L. & Ashley, K. D. (1986).
Hypothet-icals as Heuristic Device.
In Proceedings ofthe National Conference on Artificial Intelligence(AAAI-86), (pp.
289-297).Swartout, W. & Smoliar, S. W. (1987).
Explaining thelink between causal reasoning and expert behav-ior.
In Proceedings of the Symposium on Com-puter Applications inMedical Care, Washington,D.C.Tennyson, R. D. & Park, 0.42.
(1980).
The Teachingof Concepts: A Review of Instructional DesignResearch Literature.
Review of Educational Re-search, 50(1), 55-70.Tennyson, R. D., Steve, M., & Boutwell, R. (1975).Instance Sequence and Analysis of Instance At-tribute Representation i  Concept Acquisition.Journal of Educational Psychology, 67, 821-827.Touretzky, D. S. (1984).
LISP: A Gentle Introductionto Symbolic Computation.
New York: Harper &Row Publishers.Woolf, B.
& McDonald, D. D. (1984).
Context-Dependent Transitions in Tutoring Discourse.
InProceedings of the Third National Conference onArtificial Intelligence (AAAI.84 ), (pp.
355-361).Woolf, B.
& Murray, T. (1987).
A Framework forRepresenting Tutorial Discourse.
In Proceedingsof the Tenth International Joint Conference onArtijicial Intelligence, (pp.
189-192).317
