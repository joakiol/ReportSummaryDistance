Generating Linear Orders of Text-Based EventsKathleen HornsbyNational Center for GeographicInformation and AnalysisUniversity of MaineOrono, ME 04469-5711khornsby@spatial.maine.eduSuzannah HallDepartment of Spatial InformationScience and EngineeringUniversity of MaineOrono, ME 04469-5711shall@spatial.maine.eduAbstractEvents described in textual narratives do notalways occur in neat, chronological order butoccur, for example, during or overlappingeach other or as simultaneous events.
Summa-rizations of narratives, however, benefit froma simpler, linear ordering of events.
This pa-per describes an approach for modeling eventsin text as event intervals and for generatinglinear orders of event intervals, useful for thesummarization of events or as the basis forquestion answering systems.
Linear orders arederived through reducing the set of thirteenpossible event interval relations to a set ofonly before or equal relations.
The mappingof event interval relations into before/after se-quences requires the support of additionalconstraints in order to preserve the originalsemantics of the events presented in the textand to derive plausible orders of events.1 IntroductionThe world is a dynamic place and the activities and ac-tions that are part of our everyday experience includesuch phenomena as the flow of traffic on the morningdrive to work, a person walking across a street, or thefluctuation of water bodies due to seasonal change.
Aninterest in developing computational models that conveythe dynamic aspects of the world has resulted in a moreexplicit focus on modeling events, i.e., actions that re-sult in some change to an entity over time, such as thecreation, elimination, or transmission of entities (Al-Taha and Barrera, 1994; Claramunt and Theriault, 1995;Claramunt and Theriault, 1996; Medak, 1999; Hornsbyand Egenhofer, 2000).
The segmentation of real-worldhappenings into events facilitates the processing andconveying of natural language information to a user(Zacks and Tversky, 2001).
An understanding of text isimproved if the event structure of the text can be recon-structed.
Alfonseca and Manandhar (2002) extractevents based on verbs that represent actions, verbs asso-ciated with the verb to be which represent states, andoccurrences of nouns that are specifications of verbs,such as arrival or accident.
Events are anchored in timerelative to either the time the text is written or to themain event, and reordered based on this anchoring andverb tenses.
Indexing and information retrieval for cur-rent and historical reports on infectious disease out-breaks is improved through an approach where eventsrelating to occurrences of infectious diseases are auto-matically extracted from news sources on the Internet(Grishman et al, 2002).
These events are then used topopulate a database with the view that coupling the text-based event extraction with a database approach, offersbetter indexing for reports on infectious disease out-breaks.Reasoning about events commonly requires assem-bling the events into a sequence or order of events suchthat a temporal pattern of events becomes distinguish-able (Frank, 1998) and more understandable.
For manyreasoning tasks involving events, users require a simple,total order of events, where for every pair of events, Aand B, either A is before B  or B  is before A (or both)(Frank, 1998).
The case where A is before B and B isbefore A describes the case where A occurs at the sametime as B.
This linear sequencing helps us to understandand communicate in a simpler fashion how events occurover time.In a typical database, the values of one or more at-tributes of data may be ordered through queries to thedatabase using a database query language such as SQL.Dynamic scenarios as captured in text-based narratives,for example, require alternative approaches to ordering,where orders are based on events or the relations amongevents even though the knowledge about these relationsmay be incomplete or uncertain (Pustejovsky et al,2003).
This paper presents methods to generate linearorders of events from more complex orderings of eventsin text.
These linear orders provide simpler, summarizedviews of the events in a narrative as well as a basis forevent-based question and answer systems.
Automatictext summarization strategies are necessary to supportdecision making from large textual narratives as well asthe large number of information resources available viathe Web (Mani and Maybury, 2001).
Temporal seman-tics and events have been considered in the context oftime-based summarization strategies that assist users tomonitor changes in news coverage over time (Allan etal., 2001).In this paper, entities refer to phenomena in the realworld, and an event results in some change to an entityover time.
Events are assumed to be linear with both astart point and an end point.
Events that are ongoing,i.e., have no end, are not treated here, nor are pre-existing events, i.e., those that have no known startpoint.The objective of this paper is to introduce an ap-proach for automatically generating plausible linearorders of events from partially-ordered sets of eventintervals drawn from text descriptions.
The remainder ofthis paper is structured as follows: Section 2 describesevents modeled as event intervals and the relations thathold between event intervals.
Section 3 presents an ap-proach to generating linear orders of event intervalswhere the set of 13 possible event interval relations arereduced to either before or equals.
In Section 4 an ex-ample is introduced to demonstrate this approach.
Thenext section further refines the ordering process by in-corporating constraints derived from the semantics ofthe original event interval relations, and Section 6 usesthe example scenario to illustrate the use of these  se-mantics in the ordering process.
Section 7 presents theconclusions and discusses future work.2 Events and relations among eventsEvents are often modeled as being instantaneous suchas, for example, an update to a bank account or thetransmission of an electronic message, i.e., changes ofstate having no duration (Hinze and Voisard, 2002).Alternatively, events may be modeled as occurring overa period of time and therefore have duration.
Theseevents are typically associated with a specific point intime (Motakis and Zaniolo, 1995), usually the point atwhich the event finishes (Galton and Augusto, 2002).
Inlinguistics and cognitive psychology, an event is mostoften modeled as occurring over a period of time(Larson, 1999; Pedersen and Wright, 2002), and humanperceptions of this event time are of particular interestto researchers.
For example, in a court case, a suspect?sclaim about events during a particular time period ver-sus a witness?
perception of the same events may affectthe jury and make a difference to the outcome of a trial(Pedersen and Wright, 2002).The events described in this paper are treated as in-tervals with a start point and end point, and are assumedto have some duration.
For example, LowPressure-Moves refers to an event?the movement of a low pres-sure system?modeled as an interval.
Text, such as aparagraph describing the weather over the past twenty-four hours, can be processed to yield a set of event-relation combinations.
Our focus in this paper is not somuch on event extraction from text but rather the meth-ods to automatically generate a plausible linear order ofevents.
As event intervals are assumed to be linear, Al-len?s temporal interval relations (Allen, 1983) describethe set of possible relations that hold among event inter-vals (Figure 1).
For example, scattered showers occurthis afternoon before drier air arrives from the westrelates two events, ScatteredShowersOccur and D ri-erAirArrives, by the temporal interval relation before.This approach assumes an underlying linear model oftime and excludes cyclic or branching time (Frank,1998; Hornsby et al, 1999).Figure 1.
Thirteen event interval relations (afterAllen 1983).Retrieving information about event intervals thatshows how events relate to each other is required for anunderstanding of how entities described in a narrativeevolve over space and time.
Generating orders of eventsis necessary such that useful information about events ispresented for users, either as a summarization tool forlarge information resources or as a method for questionanswering.3 Ordering eventsTo generate linear orders of events, the set of 13 possi-ble event interval relations is reduced to a set compris-ing only before or equal relations.
Given two eventintervals, A and B, for example, if the start point of A isbefore or equal to the start point of B and the end pointof A is before the end point of B, then Ais before Binthe linear order.
This holds for the cases of: A before B,A meets B , A  overlaps B, and A starts B (Figure 2a).Event A is also before B in cases where the start point ofBis after the start point of A, and the end point of B isbefore or equal to the end point of A, as in the occur-rence of A contains B and A ended_by B.Where the start point of A is after the start point of Band the end point of A is before or equal to the end pointof B, then B is before A in the linear order.
This holdsfor Aduring B and A ends B, as well as for cases, A afterB, A met_by B, A overlapped_by B, and A started_by B,where the start point of B is before or equal to the startpoint of A, and the end point of B is before the end pointof A (Figure 2b).A before B?A before BA meets B?A before BA overlaps B?A before BA starts B?A before BA contains B?A before BA ended_by B?A before B(a)A during B?B before AA ends B?B before AA after B?B before AA met_by B?B before AA overlapped_by B?B before AA started_by B?B before A(b)A equals B?A equals B(c)Figure 2.
The set of event interval relations arereduced to (a) A before B, (b) B before A, and (c)A equals B.Finally, where the start point of A is equal to thestart point of B and the end point of A is equal to the endpoint of B, then A  equals B in the linear order (Figure2c).
For these cases, the event intervals are consideredto be simultaneous.If all possible relations that hold between events areknown through the narrative, then only one plausiblelinear order will result.
More commonly, however, itmay not be known for certain how each event interval isrelated to the other intervals.
For these cases, partialorders exist, and the events in the narrative may corre-spond to multiple possible linear orders.In these cases, without filtering or abstracting someof the events, the number of possible orders generatedcan easily become too large for a user to comprehend.
Amethod for filtering or abstracting is necessary.
Onemethod of abstraction is to remove any events that occurat the same time as another event with a longer duration,and about which no other information is known.
Thusany event that occurs during another event would bediscounted if that event has no known relation to an-other event.
In addition, events that start other eventsare of shorter duration than the events that they start,and may also be abstracted if no other relation existsbetween the starting event and a third event.
An eventthat ends another event and about which no other infor-mation is known would also be abstracted.
This filteringwill prune many of the orders from the set.The next section presents an example scenariowhere orders of events are abstracted from a short text.4 Example ScenarioConsider a narrative describing vehicles traveling on abridge and boat traffic maneuvering in the harbor belowthe bridge, as well as activities on land in preparationfor a ferry?s arrival:While the car was crossing over thebridge, a   ferry passed underneath and anambulance went rushing past.
A planeflew over as the ferry passed under thebridge.
As the ferry reached the dock onthe other side of the bridge, a truck ar-rived to pick up goods from the boat.Events described in a narrative can be reduced to aset of event-relation combinations, where two eventintervals are related by one relation.
There are n eventintervals and m relations in the set, where m ?
13 is thenumber of possible event interval relations.In this example, there are n=6 event intervals in-cluding CarCrossesBridge, FerryUnderBridge, Ambu-lancePassesCar, FerryDocks, and TruckArrives.
Thereare also m=4 (unique) relations generating the followingevent-relation combinations:FerryUnderBridge during CarCrossesBridgeAmbulancePassesCar during CarCrossesBridgeFerryDocks after FerryUnderBridgeFerryUnderBridge overlaps PlaneFliesOverFerryDocks meets TruckArrivesFrom this set, the event intervals are extracted andcombined pairwise (Figure 3) such that a square matrixE is formed with rows i and columns j, where i=1?n-1and j=1?n-1.
Cells in E are denoted as ei,j.The matrix E is populated with the m relations thatexist between the events in the set.
Event-event combi-nations that do not exist in the set are represented by ~.All inverse relations are included in the matrix, therebyallowing all information about an event to be capturedby a single row.
The inverse of an equals relation isanother equals.
If orders are generated from the exam-ple matrix at this point, 15 linear orders are possible.
Toavoid such large result sets, filtering is performed on thematrix.
Each row of the matrix is checked for a singleduring, starts, or ends relation, and these rows areeliminated from the matrix.
The row for Ambulance-PassesCar contains only a during relation, so this rowand its corresponding column are eliminated.
The re-vised matrix E1(Figure 4) becomes the foundation forcomputing the orders.Applying the mappings to before for the relations inthe matrix E1now yields a total of 3 possible orders:(1) CarCrosseBridge before FerryUnderBridge beforeFerry-Docks before TruckArrives before PlaneFli-esOver(2) CarCrossesBridge before FerryUnderBridge beforeFerry-Docks before PlaneFliesOver beforeTruckArrives(3) CarCrossesBridge before FerryUnderBridge beforePlane-FliesOver before FerryDocks beforeTruckArrivesA key aspect to generating the linear orders is thatthe result set comprises orders that are plausible, i.e.,capture as closely as possible the semantics of the origi-nal text.
The next section describes a method for in-voking additional constraints that increase theplausibility of all orders that are derived.
Keeping theplausibility of the automatically generated linear ordersas high as possible, has the added benefit of reducingthe number of linear orders that are generated.FerryUnderBridge CarCrossesBridge AmbulancePassesCar FerryDocks PlaneFliesOver TruckArrivesFerryUnderBridge ~ during ~ before overlaps ~CarCrossesBridge contains ~ contains ~ ~ ~AmbulancePassesCar ~ during ~ ~ ~ ~FerryDocks after ~ ~ ~ ~ meetsPlaneFliesOver overlapped_by ~ ~ ~ ~ ~E=TruckArrives ~ ~ ~ met_by ~ ~Figure 3.
Matrix based on a set of event-relation pairsFerryUnderBridge CarCrossesBridge FerryDocks PlaneFliesOver TruckArrivesFerryUnderBridge ~ during before overlaps ~CarCrossesBridge contains ~ ~ ~ ~FerryDocks after ~ ~ ~ meetsPlaneFliesOver overlapped_by ~ ~ ~ ~E1=TruckArrives ~ ~ met_by ~ ~Figure 4.
Matrix of events and relations after abstraction5 Applying additional constraints basedon semantics of relationsEach event interval relation is associated with par-ticular semantics that should be maintained in orderto generate plausible linear orders.
For example, themeet relation describes a scenario in which two eventintervals, A and B, occur such that the start time of Bis simultaneous with the end-time of A.
No otherevents would be expected to occur between these twoevents in a resulting linear order.
Combine A meets Bwith A before C, however, and one resulting linearorder of events is A before C before B, in which eventC occurs between A and B.
Incorporating the seman-tics of the relations offers a way to increase the plau-sibility of linear orders of events.
Based on this work,mapping rules are defined that reduce the thirteenevent interval relations to either before or equals, andconstraints are applied to allow the preservation ofkey semantics associated with any given event inter-val relation.
These constraints provide the basis formapping event intervals and relations to a linear or-der of events.5.1 Semantics involving during and containsrelationsThe semantics associated with during and containsrelations capture cases where one event begins andends within the time that another event is occurring.Applying the mapping rules to a case where, for ex-ample, A before B and C during B, with no regard tothe semantics of the during relation, returns A beforeB  and B before C, i.e., the linear order, A before Bbefore C. If, in addition, D after A, one linear orderbecomes A before B before D before C and the eventsthat are originally related by during are no longertogether.
In order to preserve the semantics relatingto during and contains for a linear order of events,therefore, a constraint is applied where any eventsrelated by during, are always sequential in the re-sulting linear order of events and no intermediateevents can occur between them, i.e.
A duringB?B?pA and?/$ C | B?pC?pA, read A during B  leadsto B before A and there does not exist a C such that Bbefore C before A.
For cases where A contains B, Acontains B?A?pB and?/$ C | A?pC?pB.For cases where more than one event occurs dur-ing another event interval, for example if C during Aand A during B, the events can be put in order and thesemantics preserved.
C during A reduces to A beforeC and A during B reduces to B before A, resulting inthe order B before A before C. If it is also known thatevent D occurs before A and during B, the linear or-der then becomes B before D before A before C.  Inthis case, B and A are separated by event interval Dsince both A  and D  are during event B  but bothevents cannot immediately follow B.
Formally, Aduring B ?
B?p  A except if $ D |D during B , D be-fore A then B?p  D?p  A.5.2 Semantics involving meets, met_by,  starts,started_by, ended_by, and endsApplying the mapping rules to any of the relationsmeets, starts, or ended_by results in the relation beingreplaced by before.
I.e., A meets B ?
A before B, Astarts B ?
A before B, and A ended_by B ?
A beforeB.
In all of these cases, it is implausible that a thirdevent would occur between events A and B in a linearorder.
A constraint is applied to prevent this, andthus when R = meets, starts or ended_by, A R B ?A?pB and?/$ C | A?pC?pB.It is equally implausible that a third event wouldoccur between two events related by an inverse ofone of the above three relations, and a similar con-straint is applied: when R = met_by, started_by orends, A R B ?
B?pA and?/$ C | B?pC?pA.
Becausethe constraints for during take precedence over thosefor all other relations, some exceptions to the aboveconstraints are necessary.
In the case of meets andmet_by, if, in addition to an event-relation pair thatmeets, for example A meets B, there are events thatoccur during A, additional rules are necessary.
Forthese cases we allow events that meet to be separatedby other events in the resulting linear order.
For ex-ample, given A meets B and D during A, these event-relation pairs are mapped to A before B and A beforeD.
Two linear orders result, A before D before B, andA before B before D. The latter order is implausible,however, because event B occurs between two dur-ing-events, D and A.
To prevent this type of implau-sible order, an addition is made to the m e e t sconstraint, if $ D | D during A then A?pD?pB, or if $E | B during E and not A during E, then A?pE?pB.Similarly, A met_by B?B?pA and?/$ C | B?pC?pA,except if $ D | D during B then B?pD?pA, or if $ E |A during E and not B during E, then B?pE?pA.One exception to the constraints for starts andstarted_by occurs if, given A starts B or B started_byA, an event (e.g., C) or a set of events occurs duringevent A.
Here the resulting order is A before C beforeB.
Another exception is in the case where event B isduring a third event.
Given A starts B and D containsB, the resulting order is A before D before B.
Thus Astarts B ?
A?pB except if $ D | D contains B  thenA?pD?pB.
For A started_by B , A started_by B ?B?pA and?/$ C| B?pC?pA, except if $ D | D during Bthen B?pD?pA.An exception is made in the case of ends andended_by if, given A ends B or B ended_by A, a set ofevents occurs during the event that is ended_by theother.
In this case these events occur between the twoevents related by ends in the linear order.
For exam-ple, consider A ends B and C during B.
These map toB before A and B before C, and the resulting plausibleorder is B before C before A.
Event interval C fallsbetween B and A because C is related to event B byduring.
Thus A ends B ?
B?pA and?/$ C | B?pC?pA,except if $ D | D during B then B?pD?pA, or if $ E |A during E and not B during E, then B?pE?pA.
In thecase where A is ended_by B, A ended_by B ?
A?pBand?/$ C | A?pC?pB, except if $ D | D during A  thenA?pD?pB, or if $ E | B during E  and not A during E ,then A?pE?pB.5.3 Semantics involving overlaps and over-lapped_byThe semantics involving overlaps and overlapped_byprobably pose the most challenges for automaticallygenerating a linear sequence of events.
When oneevent interval overlaps another, the duration of theoverlap is not always known.
It is possible that twoevents almost coincide, approximating an equals re-lation.
It is also possible that the overlap is verysmall, such that one event is almost before the other,or that the two event intervals almost meet.
In thiswork, two event intervals, A and B, that overlap arereduced to A before B.
No additional constraint isapplied because it is assumed that the relation willhold even if there are intermediate events betweenthe events that overlap, and therefore, A overlaps B?
A?pB.
Overlapped_by is represented as  A over-lapped_by B ?
B?pA.5.4 Semantics involving before and afterWhen one event is before another event, this ordershould be preserved in the linear order of events.
Incontrast to the other relations, it is acceptable to haveadditional events occurring between any before-events, since the relation before continues to holdregardless of the number of events between the twoevents.
Therefore, no constraints are necessary and Abefore B ?
A?pB.
This same reasoning holds for anyevent intervals related by after, such that A after B ?B?pA5.5 Semantics involving equalsIf two events are equal to each other this relation ispreserved in the ordering of events.
As orders arebuilt, the events that are equal will remain together.Events that are not equal in the initial set of eventsand relations will not be equal in the final linear or-ders.6 Using a matrix to generate ordersThe matrix E1is the basis for generating linear or-ders.
The events are arranged in a linear order usingthe constraints and mapping rules presented in theprevious section.
Parsing each row of E1, the firstevent-event combination (e1,1) represents either a re-lation linking the two event intervals or is an emptycell, ~.
Empty cells obviously do not contribute toany linear order.
In this example, there is no validrelation for e1,1.Cell e1,2returns FerryUnderBridge during Car-CrossesBridge, and based on the mapping rules, anorder is instantiated, CarCrossesBridge before Fer-ryUnderBridge.The next cell encountered, e1,3, contains FerryUn-derBridge before FerryDocks, and the order is up-dated to CarCrossesBridge before FerryUnderBridgebefore FerryDocks.
Cell e1,4contains FerryUnder-Bridge overlaps PlaneFliesOver, and because therelation between PlaneFliesOver and FerryDocks isunknown, two possible orders result:(1) CarCrossesBridge before FerryUnderBridge beforePlaneFliesOver before FerryDocks(2) CarCrossesBridge before FerryUnderBridge beforeFerryDocks before PlaneFliesOverAt e1,5, there is no valid relation and no updatesare made to the orders.
The next event-event combi-nation considered is e2,1,  i.e., CarCrossesBridgecontains FerryUnderBridge.
This is redundant sinceFerryUnderBridge during CarCrossesBridge hasalready been considered, and so no changes are nec-essary to the orders.
No valid relations are present inthe remainder of the second row, and the next rela-tion encountered is e3,1, FerryDocks after FerryUn-derBridge.
The inverse of this relation has alsoalready been considered and no changes are made.However, e2,5contains FerryDocks meets TruckAr-rives, which does result in an update to each of theorders.
Adding the event TruckArrives such that theconstraints of meets are satisfied returns two orders:(1) CarCrossesBridge before FerryUnderBridge beforePlaneFliesOver before FerryDocks before TruckAr-rives(2) CarCrossesBridge before FerryUnderBridge beforeFerryDocks before TruckArrives before PlaneFli-esOverThe remaining two event interval relations ex-tracted from the matrix (PlaneFliesOver over-lapped_by FerryUnderBridge i n  e4,1andTruckArrives met_by FerryDocks in e5,3) are redun-dant because their inverses have already been consid-ered, and thus require no additional changes to theorders.
When all relations have been processed, theresult is a set O of all possible orders that are plausi-ble and maintain as closely as possible the originalsemantics of the relations:O= { CarCrossesBridge before FerryUnderBridge beforePlaneFliesOver before FerryDocks before TruckArrives,CarCrossesBridge before FerryUnderBridge before Ferry-Docks before TruckArrives before PlaneFliesOver }Using the semantics of the relations, both ordersgenerated are plausible.
PlaneFliesOver always oc-curs after the ferry is under the bridge, as does Fer-ryDocks .
FerryDocks  is always directly beforeTruckArrives with no intermediate events betweenthem.
If the result set O is compared to the set of or-ders generated in section 4, i.e., before the semanticconstraints were applied, O is shown to consist of asmaller number of orders.
These correspond to themost plausible orders given the original set of event-relation combinations present in the text.
Orders thatdo not meet the constraints based on semantics areeliminated and not presented to a user.7 Conclusions and future workThis paper introduces a method for abstracting eventsfrom text and generating a linear order of theseevents based on the temporal semantics associatedwith them.
These simpler orders are useful as sum-maries of the events contained in the textual descrip-tion.
They also provide a basis for reasoning aboutthe events and performing operations on the orders,such as returning, for example, all events that hap-pened before event X, or returning the first event, lastevent, etc.
The approach presented in the paper mod-els events as event interval relations and maps thethirteen possible event interval relations to before andequals.
A system of constraints that preserve the se-mantics associated with the original event relationsassists in generating orders that are plausible.
Forexample, when one event is during another, no in-termediate events will fall between these two eventsin a linear order.
Since for many cases not all rela-tions among events are known, it is possible thatthere are many candidate linear orders produced for agiven narrative.
In an effort to reduce the number oforders, methods are presented for filtering the ordersbased on event relations.This linear sequencing helps us to understand andcommunicate how events described in text occur overtime and serves as the basis for establishing a time-line  of events.
Timelines organize events intochronological order and provide a method of encap-sulation or summarization where detailed data arerendered in a simpler, temporally ordered fashion.Future work will focus on additional approaches forfiltering possible orders, for example, if the narrativeincludes the locations of events, this spatial informa-tion can be used to refine further the orders.
Eventsthat happen beyond a certain distance, or outside aknown area of interest, for example, can be ab-stracted from the orders.AcknowledgementsThis research is supported by the National Geospa-tial-Intelligence Agency under grant number,NMA201-00-1-200.
Kathleen Hornsby's research isfurther supported by a grant from the National Insti-tute of Environmental Health Sciences, NIH, undergrant number 1 R 01 ES09816-01.ReferencesKhaled Al-Taha and Renato Barrera.
1994.
Identitiesthrough Time.
In Proceedings of the Inter-national Workshop on Requirements for In-tegrated Geographic Information Systems,pages 1-12, New Orleans, LA.Enrique Alfonseca and Suresh Manandhar.
2002.
AFramework for Constructing TemporalModels from Texts.
In proceedings of theFLAIRS Conference, pages 456-460,Pensacola Beach, FL.James Allan, Rahul Gupta, and Vikas Khandelwal.2001.
Temporal Summaries of News Topics.In proceedings of SIGIR'01, New Orleans,Louisiana, September 9-12, 2001.James F. Allen.
1983.
Maintaining KnowledgeAbout Temporal Intervals.
Communicationsof the ACM 26(11): 832-43.Christophe Claramunt and Marius Theriault.
1995.Managing Time in GIS: An Event-OrientedApproach.
In Proceedings of the Interna-tional Workshop on Temporal Databases,pages 23-42, Zurich.Christophe Claramunt and Marius Theriault.
1996.Toward Semantics for Modelling Spatio-Temporal Processes within GIS.
In Pro-ceedings of the 7th International Symposiumon Spatial Data Handling, pages 47-63,Delft, NL.Andrew Frank.
1998.
Different Types of "Times" inGIS.
In Spatial and Temporal Reasoning inGeographic Information Systems, eds.
M.J.Egenhofer and R.G.
Golledge.
Oxford Uni-versity Press, New York.Antony Galton and Juan Carlos Augusto.
2002.
TwoApproaches to Event Definition.
In Pro-ceedings of the 13th International Confer-ence on Database and Expert SystemsApplications (DEXA'02), pages 547-556,Aix Provence, France.Ralph Grishman, Silja Huttunen, and Roman Yan-garber.
2002.
Real-Time Event Extractionfor Infectious Disease Outbreaks.
In Pro-ceedings of Human Language TechnologyConference, San Diego, CA, March 24-27,2002.Annika Hinze and Agnes Voisard.
2002.
A FlexibleParameter-Dependent Algebra for EventNotification Services.
Freie Universitat Ber-lin, Berlin.Kathleen Hornsby and Max J. Egenhofer.
2000.Identity-Based Change: A Foundation forSpatio-Temporal Knowledge Representa-tion.
International Journal of GeographicalInformation Science, 14 (3): 207-224.Kathleen Hornsby, Max J. Egenhofer, and PatrickHayes.
1999.
Modeling Cyclic Change.
Ad-vances in Conceptual Modeling, ER'99Workshop on Evolution and Change in DataManagement, pages 98-109, Paris, France.Richard Larson.
1999.
Time and Event Measure.
InProceedings of the Linguistic Society ofAmerica Meeting, Los Angeles, CA.Inderjeet Mani and Mark T. Maybury, eds.
2001.Advances in Automatic Text Summarization.Cambridge, Massachusetts: MIT Press.Damir Medak.
1999.
Lifestyles - an Algebraic Ap-proach to Change in Identity.
In Proceed-ings of the International Workshop, Spatio-Temporal  Database Management,STDBM'99, pages 19-38, Edinburgh, Scot-land.Iakovos Motakis and Carlo Zaniolo.
1995.
A FormalSemantics for Composite Temporal Eventsin Active Database Rules.
U.C.L.A.
Com-puter Science Department, Los Angeles.Alice C. I. Pedersen and Daniel B. Wright.
2002.
DoDifferences in Event Descriptions CauseDifferences in Duration Estimates?
AppliedCognitive Psychology 16: 769-83.James Pustejovsky, Jos?
Casta?o, Robert Ingria,Roser Saur?, Robert Gaizauskas, AndreaSetzer, and Graham Katz.
2003.
TimeML:Robust Specification of Event and TemporalExpressions in Text.
In Proceedings of AAAISpring Symposium, pages 28-34, Palo Alto,CA.Jeffrey Zacks and Barbara Tversky.
2001.
EventStructure in Perception and Conception.Psychological Bulletin 127(1): 3-21.
