Proceedings of the EACL 2009 Demonstrations Session, pages 41?44,Athens, Greece, 3 April 2009. c?2009 Association for Computational LinguisticsParsing, Projecting & Prototypes: RepurposingLinguistic Data on the WebWilliam D. LewisMicrosoft ResearchRedmond, WA 98052wilewis@microsoft.comFei XiaUniversity of WashingtonSeattle, WA 98195fxia@u.washington.edu1 IntroductionUntil very recently, most NLP tasks (e.g., parsing, tag-ging, etc.)
have been confined to a very limited numberof languages, the so-called majority languages.
Now,as the field moves into the era of developing tools forResource Poor Languages (RPLs)?a vast majority ofthe world?s 7,000 languages are resource poor?thediscipline is confronted not only with the algorithmicchallenges of limited data, but also the sheer difficultyof locating data in the first place.
In this demo, wepresent a resource which taps the large body of linguis-tically annotated data on the Web, data which can be re-purposed for NLP tasks.
Because the field of linguisticshas as its mandate the study of human language?infact, the study of all human languages?and has whole-heartedly embraced the Web as a means for dissemi-nating linguistic knowledge, the consequence is that alarge quantity of analyzed language data can be foundon the Web.
In many cases, the data is richly annotatedand exists for many languages for which there wouldotherwise be very limited annotated data.
The resource,the Online Database of INterlinear text (ODIN), makesthis data available and provides additional annotationand structure, making the resource useful to the Com-putational Linguistic audience.In this paper, after a brief discussion of the previouswork on ODIN, we report our recent work on extend-ing ODIN by applying machine learning methods tothe task of data extraction and language identification,and on using ODIN to ?discover?
linguistic knowledge.Then we outline a plan for the demo presentation.2 Background and Previous work onODINODIN is a collection of Interlinear Glossed Text (IGT)harvested from scholarly documents.
In this section,we describe the original ODIN system (Lewis, 2006),and the IGT enrichment algorithm (Xia and Lewis,2007).
These serve as the starting point for our currentwork, which will be discussed in the next section.2.1 Interlinear Glossed Text (IGT)In recent years, a large part of linguistic scholarly dis-course has migrated to the Web, whether it be in theform of papers informally posted to scholars?
websites,or electronic editions of highly respected journals.
In-cluded in many papers are snippets of language datathat are included as part of this linguistic discourse.The language data is often represented as InterlinearGlossed Text (IGT), an example of which is shown in(1).
(1) Rhoddodd yr athro lyfr i?r bachgen ddoegave-3sg the teacher book to-the boy yesterday?The teacher gave a book to the boy yesterday?
(Bailyn, 2001)The canonical form of an IGT consists of three lines:a language line for the language in question, a glossline that contains a word-by-word or morpheme-by-morpheme gloss, and a translation line, usually in En-glish.
The grammatical annotations such as 3sg on thegloss line are called grams.2.2 The Original ODIN SystemODIN was built in three steps.
First, linguistic docu-ments that may contain instances of IGT are harvestedfrom the Web using metacrawls.
Metacrawling in-volves throwing queries against an existing search en-gine, such as Google and Live Search.Second, IGT instances in the retrieved documentsare identified using regular expression ?templates?, ef-fectively looking for text that resembles IGT.
An exam-ple RegEx template is shown in (2), which matches anythree-line instance (e.g., the IGT instance in (1)) suchthat the first line starts with an example number (e.g.,(1)) and the third line starts with a quotation mark.
(2) \s*\(\d+\).*\n\s*.*\n\s*\[??"].
*\nThe third step is to determine the language of thelanguage line in an IGT instance.
Our original work inlanguage ID relied on TextCat, an implementation of(Cavnar and Trenkle, 1994).As of January 2008 (the time we started our currentwork), ODIN had 41,581 instances of IGT for 731 lan-guages extracted from nearly 3,000 documents.11For a thorough discussion about how ODIN was origi-nally constructed, see (Lewis, 2006).412.3 Enriching IGT dataSince the language line in IGT data does not come withannotations (e.g., POS tags, phrase structures), Xia andLewis (2007) proposed to enrich the original IGT andthen extract syntactic information (e.g., context-freerules) to bootstrap NLP tools such as POS taggers andparsers.
The enrichment algorithm has three steps: (1)parse the English translation with an English parser, (2)align the language line and the English translation viathe gloss line, and (3) project syntactic structure fromEnglish to the language line.
The algorithm was testedon 538 IGTs from seven languages and the word align-ment accuracy was 94.1% and projection accuracy (i.e.,the percentage of correct links in the projected depen-dency structures) was 81.5%.3 Our recent workWe extend the previous work in three areas: (1) im-proving IGT detection and language identification, (2)testing the usefulness of the enriched IGT by answer-ing typological questions, and (3) enhancing ODIN?ssearch facility by allowing structural and ?construc-tion?
searches.23.1 IGT detectionThe canonical form of IGT, as presented in Section 2.1,consists of three parts and each part is on a single line.However, many IGT instances, 53.6% of instances inODIN, do not follow the canonical format for variousreasons.
For instance, some IGT instances are missinggloss or translation lines as they can be recovered fromcontext (e.g., other neighboring examples or the textsurrounding the instance); other IGT instances havemultiple translations or language lines (e.g., one part inthe native script, and another in a Latin transliteration).Because of the irregular structure of IGT instances,the regular expression templates used in the originalODIN system performed poorly.
We apply machinelearning methods to the task.
In particular, we treat theIGT detection task as a sequence labeling problem: wetrain a classifier to tag each line with a pre-defined tagset,3 use the learner to tag new documents, and con-vert the best tag sequence into a span sequence.
Whentrained on 41 documents (with 1573 IGT instances) andtested on 10 documents (with 447 instances), the F-score for exact match (i.e., two spans match iff theyare identical) is 88.4%, and for partial match (i.e., twospans match iff they overlap) is 95.4%.4 In comparison,the F-score of the RegEx approach on the same test setis 51.4% for exact match and 74.6% for partial match.2By constructions, we mean linguistically salient con-structions, such as actives, passives, relative clauses, invertedword orders, etc., in particular those we feel would be of themost benefit to linguists and computational linguists alike.3The tagset extends the standard BIO tagging scheme.4The result is produced by a Maximum Entropy learner.The results by SVM and CRF learners are similar.
The detailswere reported in (Xia and Lewis, 2008).Table 1: The language distribution of the IGTs inODINRange of # of # of IGT % of IGTIGT instances languages instances instances> 10000 3 36,691 19.391000-9999 37 97,158 51.34100-999 122 40,260 21.2710-99 326 12,822 6.781-9 838 2,313 1.22total 1326 189,244 1003.2 Language IDThe language ID task here is very different from a typ-ical language ID task.
For instance, the number of lan-guages in ODIN is more than a thousand and could po-tentially reach several thousand as more data is added.Furthermore, for most languages in ODIN, our trainingdata contains few to no instances of IGT.
Because ofthese properties, applying existing language ID algo-rithms to the task does not produce satisfactory results.As IGTs are part of a document, there are oftenvarious cues in the document (e.g., language names)that can help predict the language ID of the IGT in-stances.
We designed a new algorithm that treats thelanguage ID task as a pronoun resolution task, whereIGT instances are ?pronouns?, language names are ?an-tecedents?, and finding the language name of an IGTis the same as linking a pronoun (i.e., the IGT) to itsantecedent (i.e., the language name).
The algorithmoutperforms existing, general-purpose language iden-tification algorithms significantly.
The detail of the al-gorithm and experimental results is described in (Xia etal., 2009).Running the new IGT detection on the original threethousand ODIN documents, the number of IGT in-stances increases from 41,581 to 189,244.
We then ranthe new language ID algorithm on the IGTs, and Table1 shows the language distribution of the IGTs in ODINaccording to the output of the algorithm.
For instance,the third row says that 122 languages each have 100 to999 IGT instances, and the 40,260 instances in this binaccount for 21.27% of all instances in ODIN.53.3 Answering typological questionsLinguistic typology is the study of the classificationof languages, where a typology is an organization oflanguages by an enumerated list of logically possibletypes, most often identified by one or more structuralfeatures.
One of the most well known and well studiedtypological types, or parameters, is that of canonicalword order, made famous by Joseph Greenberg (Green-berg, 1963).5Some IGTs are marked by the authors of the crawleddocuments as ungrammatical (usually with an asterisk ?
*?at the beginning of the language line).
Those IGTs are keptin ODIN too because they could be useful to other linguists,the same reason that they were included in the original docu-ments.42In (Lewis and Xia, 2008), we described a meansfor automatically discovering the answers to a numberof computationally salient typological questions, suchas the canonical order of constituents (e.g., sententialword order, order of constituents in noun phrases) orthe existence of particular constituents in a language(e.g., definite or indefinite determiners).
In these ex-periments, we tested not only the potential of IGT toprovide knowledge that could be useful to NLP, butalso for IGT to overcome biases inherent to the op-portunistic nature of its collection: (1) What we callthe IGT-bias, that is, the bias produced by the fact thatIGT examples are used by authors to demonstrate a par-ticular fact about a language, causing the collection ofIGT for a language to suffer from a potential lack ofrepresentativeness.
(2) What we call the English-bias,an English-centrism in the examples brought on by thefact that most IGT examples provide a translation inEnglish, which can potentially affect subsequent en-richment of IGT data, such as through structural pro-jection.
In one experiment, we automatically found theanswer to the canonical word order question for about100 languages, and the accuracy was 99% for all thelanguages with at least 40 IGT instances.6 In anotherexperiment, our system answered 13 typological ques-tions for 10 languages with an accuracy of 90%.
Thediscovered knowledge can then be used for subsequentgrammar and tool development work.The knowledge we capture in IGT instances?boththe native annotations provided by the linguists them-selves, as well as the answers to a variety of typologicalquestions discovered in IGT?we use to populate lan-guage profiles.
These profiles are a recent addition tothe ODIN site, and are available for those languageswhere sufficient data exists.
Following is an exampleprofile:<Profile><language code="WBP">Warlpiri</language><ontologyNamespace prefix="gold">http://linguistic-ontology.org/gold.owl#</ontologyNamespace><feature="word_order"><value>SVO</value></feature><feature="det_order"><value>DT-NN</value></feature><feature="case"><value>gold:DativeCase</value><value>gold:ErgativeCase</value><value>gold:NominativeCase</value>.
.
.</Profile>3.4 Enhancing ODIN?s Value to ComputationalLinguistics: Search and Language ProfilesODIN provides a variety of ways to search across itsdata, in particular, search by language name or code,language family, and even by annotations and their re-lated concepts.
Once data is discovered that fits theparticular pattern that a user is interested in, he/she can6Some IGT instances are not sentences and therefore arenot useful for answering this question.
Further, those in-stances marked as ungrammatical (usually with an asterisk?*?)
are ignored for this and all the typological questions.either display the data (where sufficient citation infor-mation exists and where the data is relatively clean) orlocate documents in which the data exists.
Additionalsearch facilities allow users to search across poten-tially linguistically salient structures and return resultsin the form of language profiles.
Although languageprofiles are by no means complete?they are subjectto the availability of data to fill in the answers withinthe profiles?they provide a summary of automaticallyavailable knowledge about that language as found inIGT (or enriched IGT).4 The Demo PresentationOur focus in this demonstration will be on the queryfeatures of ODIN.
In addition, however, we will alsogive some background on how ODIN was built, showhow we see the data in ODIN being used by both thelinguistic and NLP communities, and present the kindof information available in language profiles.
The fol-lowing is our plan for the demo:?
Very brief discussion on the methods used to buildODIN (as discussed in Section 2.2, 3.1, and 3.2)?
An overview of the IGT enrichment algorithm (asdiscussed in Section 2.3).?
A presentation of ODIN?s search facility andthe results that can be returned, in partic-ular language profiles (as discussed in Sec-tion 3.3-3.4).
ODIN?s current website ishttp://uakari.ling.washington.edu/odin.
Userscan also search ODIN using the OLAC7 searchinterfaces at the LDC8 and LinguistList.9 Somesearch examples are given below.4.1 Example 1: Search by Language NameThe opening screen for ODIN allows the user to searchthe ODIN database by clicking a specific languagename in the left-hand frame, or by typing all or partof a name (finding closest matches).
Once a languageis selected, our search tool will list all the documentsthat have data for the language in question.
The usercan then click on any of those documents, and searchtool will return the IGT instances found in those doc-uments.
Following linguistic custom and fair use re-strictions, only instances of data that have citations aredisplayed.
An example is shown in Figure 1.
Search bylanguage and name is by far the most popular search inODIN, given the hundreds of queries executed per day.4.2 Example 2: Search by LinguisticConstructionsThis type of query looks either at enriched data in theEnglish translation, or at the projected structures in the7Open Language Archives Community8http://www.language-archives.org/tools/search/9LinguistList has graciously offered to host ODIN, and itis being migrated to http://odin.linguistlist.org.
Completionof this migration is expected sometime in April 2009.43Figure 1: IGT instances in a documenttarget language data.
Figure 2 shows the list of linguis-tic constructions that are currently covered.Suppose the user clicks on ?Word Order: VSO?,the search tool will retrieve all the languages in ODINthat have VSO order according to the PCFGs extractedfrom the projected phrase structures (Figure 3).
Theuser can then click on the Data link for any language inthe list to retrieve the IGT instances in that language.Figure 2: List of linguistic constructions that are cur-rently supported5 ConclusionIn this paper, we briefly discussed our work on im-proving the ODIN system, testing the usefulness ofthe ODIN data for linguistic study, and enhancing thesearch facility.
While IGT data collected off the Web isinherently noisy, we show that even a sample size of 40IGT instances is large enough to ensure 99% accuracyin predicting Word Order.
In the future, we plan to con-tinue our efforts to collect more data for ODIN, in orderto make it a more useful resource to the linguistic andcomputational linguistic audiences.
Likewise, we willFigure 3: Languages in ODIN Determined to be VSOfurther extend the search interface to allow more so-phisticated queries that tap the full breadth of languagesthat exist in ODIN, and give users greater access to theenriched annotations and projected structures that canbe found only in ODIN.ReferencesJohn Frederick Bailyn.
2001.
Inversion, Dislocation and Op-tionality in Russian.
In Gerhild Zybatow, editor, CurrentIssues in Formal Slavic Linguistics.W.
B. Cavnar and J. M. Trenkle.
1994.
N-gram-based textcategorization.
In Proceedings of Third Annual Sympo-sium on Document Analysis and Information Retrieval,pages 161?175, Las Vegas, April.Joseph H. Greenberg.
1963.
Some universals of grammarwith particular reference to the order of meaningful el-ements.
In Joseph H. Greenberg, editor, Universals ofLanguage, pages 73?113.
MIT Press, Cambridge, Mas-sachusetts.William D. Lewis and Fei Xia.
2008.
Automatically Identi-fying Computationally Relevant Typological Features.
InProceedings of The Third International Joint Conferenceon Natural Language Processing (IJCNLP), Hyderabad,January.William D. Lewis.
2006.
ODIN: A Model for Adapting andEnriching Legacy Infrastructure.
In Proceedings of the e-Humanities Workshop, Amsterdam.
Held in cooperationwith e-Science 2006: 2nd IEEE International Conferenceon e-Science and Grid Computing.Fei Xia and William D. Lewis.
2007.
Multilingual struc-tural projection across interlinearized text.
In Proceedingsof the North American Association of Computational Lin-guistics (NAACL) conference.Fei Xia and William D. Lewis.
2008.
Repurposing Theoret-ical Linguistic Data for Tool Development and Search.
InProceedings of The Third International Joint Conferenceon Natural Language Processing (IJCNLP), Hyderabad,January.Fei Xia, William D. Lewis, and Hoifung Poon.
2009.
Lan-guage ID in the Context of Harvesting Language Data offthe Web.
In Proceedings of The 12th Conference of the Eu-ropean Chapter of the Association of Computational Lin-guistics (EACL), Athens, Greece, April.44
