Proceedings of the 3rd Workshop on Hybrid Approaches to Translation (HyTra) @ EACL 2014, pages 15?20,Gothenburg, Sweden, April 27, 2014. c?2014 Association for Computational LinguisticsControlled Authoring In A Hybrid Russian-English MachineTranslation SystemSvetlana SheremetyevaNational Research South Ural State University / pr.Lenina 74, 454080Chelyabinsk, RussiaLanA Consulting ApS/ Moellekrog 4, Vejby, 3210, Copenhagen, Denmarklanaconsult@mail.dkAbstractIn this paper we describe the design anddeployment of a controlled authoring module inREPAT, a hybrid Russian-English machinetranslation system for patent claims.
Controlledauthoring is an interactive procedure that isinterwoven with hybrid parsing and simplifies theautomatic stage of analysis.
Implemented in a pre-editing tool the controlled authoring module can bestand-alone and pipelined to any foreign MTsystem.
Although applied to the Russian-Englishlanguage pair in the patent domain, the approachdescribed is not specific for the Russian languageand can be applied for other languages, domainsand types of machine translation application.1 IntroductionMT systems have become an inherent part oftranslation activities in spite of generalunderstanding that it is impossible to get highquality machine translation (MT) without humanjudgment (Koehn, 2009).
In addition to lexicalambiguity, among the linguistic phenomena thatlower translatability indicators (Underwood andJongejan, 2001) is the syntactic complexity of asource text, of which the patent claim whosesentence can run for a page or so is an ultimateexample.A wide range of activities can be found in thearea of developing different techniques to ?help?an MT engine cope with the ambiguity andcomplexity of the natural language.
Recent workinvestigated the inclusion of interactivecomputer-human communication at each step ofthe translation process by, e.g., showing the uservarious ?paths?
among all translations of asentence (Koehn, cf.
), or keyboard-driving theuser to select the best translation (Macklovitch,2006).
One of the latest publications reports onPatent statistical machine translation (SMT) fromEnglish to French where the user drives thesegmentation of the input text (Pouliquen et.al,2011).
Another trend to cope with the source textcomplexity is to rewrite a source text into acontrolled language (CL) to ensure that the MTinput conforms to the desired vocabulary andgrammar constraints.
When a controlledlanguage is introduced, the number of parses persentence can be reduced dramatically comparedto the case when a general lexicon and grammarare used to parse specialized domain texts.Controlled language software is developedwith different levels of automation and normallyinvolves interactive authoring (Nyberg et al.,2003).
The users (authors) have to be taught theCL guidelines in order to accurately use anappropriate lexicon and grammar duringauthoring.
In line with these studies is theresearch on developing pre-editing rules, e.g.,textual patterns that reformulate the source textin order to improve the source text translatabilityand MT output.
Such rules implemented in asoftware formalism are applied for controlledlanguage authoring (Bredenkamp et al.
2000;Rayner et al.
2012).This paper focuses on the design, deploymentand utilization of a controlled language in theimplementation of the hybrid REPATenvironment for machine translation of patent15claims from Russian into English.
In selectingRussian as a source language we were motivatedby two major considerations.
Firstly, Russia hasa huge pool of patents which are unavailable fornon-Russian speakers without turning toexpensive translation services.
The situation is ofgreat disadvantage for international technicalknowledge assimilation, dissemination,protection of inventor?s rights and patenting ofnew inventions.
Secondly, in an attempt to findways that could lower efforts in developing MTsystems involving inflecting languages, forwhich statistical techniques normally fail(Sharoff, 2004), we were challenged to develop ahybrid technique for parsing morphologicallyrich languages on the example of such a highlyinflecting language as Russian.In what follows we first give an overview ofthe   REPAT machine translation environmentand then focuse on the components of the systemwhich are responsible for controlled authoring ofthe source texts with complex syntactic structure,such as patent claims.
These components raisethe translatability of patent claims and, second,improve their readability in both source andtarget languages, which for patent claims is ofgreat importance.
It is well known that anextremely complex syntactic structure of thepatent claim is a problematic issue forunderstanding (readability) even in a sourcelanguage (Shinmori et al., 2003), let alone intranslation.2 REPAT environment overviewThe REPAT system takes a Russian patentclaim as input and produces translations at twomajor levels, the level of terminology (not justany chunks), and the text level.
Full translationof a patent claim is output in two formats, - in theform of one sentence meeting all legalrequirements to the claim text, and as a betterreadable set of simple sentences in the targetlanguage.
In Figure 3 an example of the REPAToutput is shown for a fragment of a Russianclaim given below:???????????????
??????????
???????????????????????
?
????????????
?
????????,???????????
??
?, ???
?
???????
?????????
????????
?, ????????????
?????????
?
????????
?????????
?, ?
???????
???????????
???????????????
?????
???
??????????????
?????
??????????
???????????
???????
?????
?...The system also improves the readability of asource claim by decomposing it into a set ofsimple sentences that can be useful for aposteditor to better understand the input and thuscontrol the quality of claim translation.
TheREPAT translation environment includes hybridmodules for source language analysis, controlledauthoring, terminology management, knowledgedevelopment and rule-based modules for transferand target text generation.
All modules work oncontrolled language which is built into thesystem.
The overall architecture of the system isshown in Figure 1.
The workflow includes thesemain steps:Source claim shallow analysis based onhybrid techniques.
It serves two purposes : a) theon-the-fly translation of terminology; this can beused by a non-SL speaker for digest, and b) thepreparation of a raw document for authoring incase a full claim translation is needed; the inputis made interactive and the nominal andpredicate terms are highlighted, the predicateterminology is linked to the knowledge base.Terminology update.
The document is checkedagainst the system bilingual lexicon andunknown words are flagged.
If needed thelexicon can be updated.Authoring.
The document is authored toconform the controlled lexicon and grammar.Unknown words are either avoided or flagged.The source claim syntactic structure issimplified.
The simplification also serves thepurpose of improving the readability of a sourcelanguage claim.Document processing and translation.
Thisincludes document parsing into a formal contentrepresentation, generation of a source claim in acontrolled language, crosslinguistic transfer andgeneration of the target text.
The full translationis output in two controlled syntax formats, a) asone complex sentence meeting all legalrequirements to the claim text, and d) as a betterreadable set of simple sentences that might meetthe needs of the user in case the translation isneeded to assimilate technical knowledge ratherthan to be included in a patent document.
Thesimplified syntactic presentation of translationcan be useful for further automatic claimprocessing, e.g., when translation into otherlanguages is needed.16Figure 1.
An overall architecture of the hybrid REPAT system.3 Controlled languageThe system controlled language specifiesconstraints on the lexicon and constraints on thecomplexity of sentences.
It draws heavily on thepatent claim sublanguage on devices inautomobile industry, and in addition to theuniversal phenomena affecting translatability(Underwood and Jongejan, cf.)
it addresses theREPAT engine-specific constraints.Constraints of the REPAT controlled languageare mainly coded in the corpus-based systemlexicon, where ambiguous terms, thatunavoidably emerge in any doimain are split indifferent lexemes, each having only one domainmeaning.
Where possible ambiguous lexemes areput in the lexicon as components of longerterms/phrases with one meaning.
Todisambiguate the residue of ambiguous terms wehave created  a  method for disambiguation oflexical items that supports interactivedisambiguation by the user through the systemuser interface.Grammar restrictions on the structure ofsentences are set by an implicitly controlledgrammar which is associated with a controlledset of predicate/argument patterns in the systemlexicon rather than with syntactic sentence-levelconstraints.
The patterns code domain-basedinformation on the most frequent co-occurrencesof predicates in finite forms with their case-roles,as well as their linear order in the claim text.
Forexample, the pattern (1 x 3 x 2) corresponds tosuch clam fragment as1:boards  x: are 3:rotatably x: mounted 2: onthe pillarsThe controlled language restrictions areimposed on the source text semi-automatically.The system prompts the user to make correctauthoring decisions by providing structuraltemplates from the system knowledge base andby raising the users?
awareness about thelinguistic phenomena that can increase the17potential problems in machine translation.
Forexample, the users are encouraged to repeat apreposition or a noun in conjoined constructions,limit the use of pronouns and conjunctions, putparticiples specifying a noun in postposition, etc.4 Analyzer and authoring engineAuthoring engine is interwoven with thesystem hybrid analyzer.
The analyzer performstwo tasks in the REPAT system.
It analyzers theinput text into a formal internal representationand provides environment for authoring.
Inparticular, the analyzer performs the followingauthoring-related steps:Segmentation and lexicalization.
The inputtext is chunked into noun phrases (NPs)predicate phrases (VPs) and other types oflexical units.
Every chunk is lexicalized byassociating it with a known lexicon entry.The source NPs are chunked based on thedynamic knowledge automatically produced by astand-alone hybrid extractor, the core of theREPAT shallow parsing component.
It wasported to the Russian language following themethodology of NP extraction for Englishdescribed in (Sheremetyeva 2009).
Theextraction methodology combines statisticaltechniques, heuristics and a shallow linguisticknowledge.
The extractor does not rely on apreconstructed corpus, works on small texts,does not miss low frequency units and canreliably extract all NPs from an input text.
Theextraction results do not deteriorate when theextraction methodology is applied to inflectinglanguages (Russian in our case).The NPs are chunked by matching theextractor output (lists the source claim NPs intheir text form) against the claim text.
Here thelanguage rich inflection properties turn to be anadvantage: the NP chunking procedure proves tobe very robust with practically no ambiguity.NPs excluded, the rest of the claim lexica ischunked by the lexicon look-up practicallywithout (ambiguity) problems.
The analyzer thustrigs highlighting of the nominal and verbalterminology, flags unknown words and providesmeans for lexical disambiguation.
All lexicalizedchunks are tagged with supertags coding sets oftyped features as found in the morphologicalzones of the lexicon.Automatic and Interactive Disambiguation.Ambiguity of lexical units are resolved, eithervia a) automatic selection of the most likelymeaning, using a set of disambiguationheuristics, or b) interactive clarification with theuser.
Syntactic ambiguity is to be resolved byhuman-computer interaction with strongcomputer support in the form of predicatetemplates to be filled with claim segments.Content representation.
A formal internalrepresentation of the source  claim content isbuilt in the following two steps:Construction of the underspecified internalrepresentations resulting from the authoringprocedure of calling and filling predicatetemplates by the user.
A predicate template is avisualization of a corresponding predicate case-role pattern in the system lexicon.
The main slotin the template corresponds to the predicate,while other slots represent case-roles.
Bysupplying fillers into the slots of predicatetemplates the user in fact puts syntactic bordersbetween the argument phrases and determinesthe dependency relations between the predicatesand their arguments.Automatic completion of tagging andrecursive chunking by the deep parsercomponent that works over the set of thedisambiguating features of the underspecifiedcontent representation.
The final parse, a set oftagged predicate/argument structures, is thensubmitted into a) the source language generatorthat outputs a source claim in a more readableformat of simple sentences, and b) to the transfermodule and then to the target language generator,that outputs translations in two formats.5 Authoring InterfaceA screenshot of the REPAT authoring interfaceis shown in Figure 2.
In the left pane it shows aninteractive source claim with nominal andpredicate terminology highlighted in differentcolours.
Unknown words, if any, will be flagged.The user is encouraged not to use such wordsand remove the flag.
In case the user considersthem necessary, the flag stays (the terms arepassed to the developer for lexicon update).
Thehighlighted terminology improves the inputreadability and helps the user quicker and betterunderstand the input content and structure.
Tosimplify the input structure the user clicks on apredicate and gets a pop-up template whose slotsare to be filled out with texts strings.
Predicatetemplates are generated based on the case-rolepatterns in the system lexicon.18Figure 2.
A screenshot of the user interface showing the authoring set up for a fragment of the Russianclaim given in Section 2.
The source text  with visualized terms is shown in the left pane.
In themiddle is the template for the Russian predicate ????????
(is).
The English translations for theterminology are shown in the bottom of the right pane.Figure 3.
The two translation variants of the patent claim fragment given in Section 2.
On the top theclaim translation into English in the legal format of one nominal sentence is shown.
In the middle the?better readable?
claim translation in the form of simple sentences is displayed.
In the bottom theauthored Russian input text is given.19The main slot of the template is automaticallyfilled with a predicate in a finite form, notwithstanding in which form the predicate wasused in the text.
Other predicate slots arereferenced to particular case-roles whosesemantic statuses are explained to the user by thequestions next to the predicate slots.
The usercan either drag-and-drop appropriate segmentsfrom the interactive claim text or simply type thetext in the slots.
During the process of filling thetemplate the system shows translations of thelexica used in the bottom of the right pane.
Incase a unit put in the slot is not found in thelexicon, it is flagged.
The user is encouraged toeither avoid using a problematic unit orsubstitute it with a synonym known to thesystem.
Once the template is filled, the systemautomatically generates a grammatically correctsimple sentence in the source language anddisplays it for control.
In addition to constrainingthe complexity of the sentence structurepredicate templates also put certain constraintson the phrase level.
As templates are meant forsimple sentences only, coordination of verbalphrases (predicates) that may be ambiguous isavoided.
Prepositions or particles attached to theverb are put to the main (predicate) template slotthat resolves a possible attachment ambiguity.The authoring procedure completed, theunderspecified content representation built by theanalyzer ?behind the scenes?
is passed to theother modules of the REPAT for translation.
Theauthored claim in the source language can alsobe saved and input in any foreign MT system.ConclusionsWe presented an authoring environmentintegrated in the hybrid PATMT system fortranslating patent claims.
The efficiency of thesystem is conditioned by the controlled languageframework.
The controlled language data arecreated based on the domain-specific analysis ofthe patent corpus on devices in automobileindustry.
The constraints of the controlledlanguage are embedded into the systemknowledge base and included into acomprehensive, self-paced training material.The authoring environment is interwoven withhybrid analysis components specially developedfor inflecting languages.
Rich morphology turnsout to be an advantage in our approach.
A greatvariety of morphological forms significantlylowers ambiguity in source text chunking andlexicalization.The system is implemented in the programminglanguage C++ for the Windows operationalenvironment.ReferencesBredenkamp, A., Crysmann, B., and Petrea, M. 2000.Looking for Errors: A Declarative Formalism forResource-Adaptive Language Checking.Proceedings of LREC 2000.
Athens, Greece.Koehn Philipp.
2009.
A process study of computer-aided translation, Philipp Koehn, MachineTranslation Journal, 2009, volume 23, number 4.Macklovitch, Elliott.
2006.
TransType2: The lastword.
In proceedings of LREC06, Genoa, May.Nyberg E., T Mitamura, D. Svoboda, J. Ko, K. Baker,J.
Micher 2003.
An Integrated system for Sourcelanguage Checking, Analysis and Terminologymanagement.
Proceedings of MachineTranslation Summit IX, September.
New-Orleans.USAPouliquen Bruno, Christophe Mazenc Aldo Iorio.2011.
Tapta: A user-driven translation system forpatent documents based on domain-awareStatistical Machine.
Proceedings of the EAMTConference.
Leuven, Belgium, May.Rayner, M., Bouillon, P., and Haddow, B.
2012.Using Source-Language Transformations toAddress Register Mismatches in SMT.
InProceedings of the Conference of theAssociation for Machine Translation in theAmericas (AMTA), October, San Diego, USA.Sharoff, S. 2004.
What is at stake: a case study ofRussian expressions starting with a preposition.
In:Proceedings of the Second ACL Workshop onMultiword Expressions IntegratingProcessing.Sheremetyeva S. 2009    On Extracting Multiword NPTerminology for MT.
Proceedings of theThirteen Conference of European Associationof Machine Translation, Barcelona, Spain.
May14-15Shinmori A., Okumura M., Marukawa Y. IwayamaM.
2003.
Patent Claim Processing for Readability -Structure Analysis and Term Explanation,Workshop on Patent Corpus Processing.conjunction with ACL 2003, Sapporo.
Japan,July.Underwood N.L.
and Jongejan B.
2001.Translatability Checker: A Tool to Help DecideWhether to Use MT.
Proceedings of MT SummitVIII, Santiago de Compostela, Spain.20
