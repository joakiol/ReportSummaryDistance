Machine Translation: The Languages Network(versus the intermediate language.)P.C.
ROLFDpt.
of Computational LinguisticsLiterary FacultyNijmegen UniversityNL6500 HD NijmegenThe NetherlandsAbstractJonathan Slocmn /Slocum, 1985/ divides MT techniques froma linguistic point of view into three two-way perspectives which arenot quite disjunct: "direct versus indirect; interlingua versus trans-fer; and local versus global scope.
".in this paper we present a research paradigm which, in fact, does notexactly match any of these perspectives: The Languages Network.In this paradigm each pair of languages will he treated as withina transfer application hut with tbe characteristics of indirect trans-lation: analysis of the source language and synthesis of the targetlanguage are not totally dependent on each other.The proees must be split up into a large number of pieces which canbe connected into a huge network performing MT from and into sev-eral languages.hnplementations of this paradigm are |)eing carried out by the authorhy means of the translator generator SYGMART (see /Chauch6/,/Chauch~, 1974/ and /Rolf, 1985/), which pernfits the linguist toimplement whatever he wants in the field of MT in an efficient wayon a wide range of computers (t?om Atari1040STf via SUN's to IBMVM/CMS mainframes).1 The  goa l  o f  the  in termed ia te  language.In discussions on translation systems, the question is often askedwhether the system is based on direc| translation, whether it worksaccording to |he transfer method, or whether it uses an intermediatelanguage.
"\['his question suggests that translation systems can hedefined exactly by dividing them into these three categories.It is our conviction that solving problems in translation is more com-plex than is suggested by this question.
In this paper we will showprecisely where this question is inadequate, by looking at some as-pects of the translation process.1.1 Why an in termed ia te  language?The idea which leads to the definition of an intermediate languageoriginates from the wish that, in translation from one source lan-guage into several target languages, no completely different ransla-tion should have to he made for each pair of languages.Brandt Corstius /Brandt Corstius, 1978/expresses this idea as fol-lows (the citation has been translated from Dutch into English): "In-stead of making 90 programs in order to translate ten languagesinto one another (from each language into each of the nine others),it would be sufficient to have 20 translation programs (from eachlanguage into Maehinish, and fi'om Machinish into each of the lan-guages).
It is even conceivable that eighteen progrmns would besufficient, if one of the ten languages i given the role of this inter-mediate language.
"This standpoint implies an "efficient" method in terms of the amountof work, without indicating whether this method solves also any prin-cipal problems with respect o machine translation.On the contrary, Brandt Corstius remains ceptical about this.1.2 What  shal l  be def ined?Ideally the intermediate language will have to be an unambiguousrepresentation f the meaning of (each of) the source language(s).544This implies that a language should be found in which it is possibleto represent all possihle meanings in an unanfl)iguous way.If Brandt Corstius is followed in this, then in the translation h'omand into natural anguage this would have to he one of the naturallanguages.
But one of the main characteristics of natural anguageis precisely that it is efficient, which implies that with few words andconstructions a lot can be expressed in very many different circum-stances.The way in which each individual natural hulguage is etFlcient differsfrom language to hmguage: ambiguities and vagueness in a sourcelanguage cannot usually be projected in a one-to-one col'respondeneeonto a target language.So it would seem to be not entirely plausihle to select an interme-diate language from the languages to he translated, seeing that tt~demand of unambiguity is too heavy precisely for natural anguage.An intermediate language should not only be unaml)iguous, hut itshould also be able to represent all possible meanings.
We, are con-vinced that for every sentence of a natural anguage an imfinite setof meanings is possible, since meaning depends on the universe ofdiscourse and the set of possible universes of discourse is infinitelylarge.All in all there is enough cause for a fundamental pproach to theprohlem: what is to be achieved in defining an intermediate languagein the maclfine translation of a set of natural languages from and intoeach of the menfl)ers of that set?The need for an intermediate language originates, on the one hand,from the idea that the analysis of a source language will be largely thesame, irrespective of the target language into wieh it is to be trans-lated, and on the other hand, from the need to analyse the sourcelanguage in such a way that all ambiguities have been solved, andthat therefore the generation of the target language can take placewithout any further prohtems.With respect o the former, we, too, believe that the idea that theanalysis of a source language is partly the same, irrespective of theselected target language, is entirely correct.When we plot the translation process on a line from source languageto target language, this will be the part which is close to the sourcelanguage: to put it in rather more linguistic terms: the morphologi-cal analysis and that part of the other syntactic analysis that can besmmned up in the term surface grammar, so in any case the NP andVP detection, for instance.
We shall return to this below.The second need, viz.
completely disambiguating the source lan-guage, would seem to be too heavy a demand, as was formulatedbefore, with reference to ~all possible universes of discourse'.
Thetwo needs that have been mentioned cannot be fulfilled, but it canbe maintained that there is no need for the entire analysis of thesource language and the entire generation of the target language tobe done over and over again for every pair of languages.
It has to bedeternfined what the two paths, analysis and generation, will looklike.
Parts of these two paths will renmin the stone, for the sourcelanguage irrespective of the target language, and for the target lan-guage irrespective of the source language.2 The analysis of the  source  language.Since there is no reason to adopt an intermediate language as hasbeen argued, the problem facing us is the analysis of the source lan-guage, as well as the generation of the target language and the pro-cess between analysis and generation, which will be discussed in thefollowing two sections.The point of departure for both these sections, and, in fact, for thispaper is the hypothesis that tbe meaning of the source language de-pends on the objective one has in mind.
In the case of machinetranslation the meaning, expressed in the translation, depends onthe target language defined.In this line ot arguing translating i.
'~ therefore always a matter ofa specific relat:ionship between two lauguages.
When we plot theprocess of translation on a line, however~ we can distinguisb threephases, which can he referred to as analysis, translation and gener-ation.
The present and the next following two sections have beendivided on the basis of this principle.2.1 What  is ana lys i s?The analysis or a source language can be defined, in a very abstractway~ as the addition of information to the input.
It may seem triv-ial, but this st;u'ting point implies that no information must be lostin the analysing stage, lnlbrmation may only be added.
This alsoimplies that the input order must not be changed.
So, in our view, adependency grammar is not suitable for the analysis because of theloss of the input order.Changes in the input order can only be brought about on the basisof requirements posed by the target langnage.This brings us to a second aspect of the analysing stage: in this stageonly source language inherent data are worked with, to be subdividedinto static (lexical) and dynaufic (granmmtical) data.\]'he fact that in {:he analysing stage solely data inherent to the sourcelanguage are used, does not mean that the target language has notb~ing to do with the nature of the analysis.
That would clash with ourstarting point, viz.
that the meaning of the source language dependson the target language.The influence of the (set of) target language(s) extends over the wayit1 which the analysis is carried out, in other words, what type ofinformation has to be added to the text of the source language.Let us take, by way of example, the translation Dutch-English.
Wewill assume (for convenienee's sake) that in Dutch the word order insubelauses i S(ubject)-O(bject)-V(erb), while in English the stan-dard word order in subclauses i S(ubject)-V(erh)-O(bject).The change fr()m S-O-V into S-V-O does not belong to the analysingstage of Dutch, lbr it implies lnss of infornmtiou because of the wordorder cbange.
~\]owever, the translation i to English requires fron~ theanalysing stage of Dutch that, among other things, the categories S~0 and V are a~;signed.
The assignment of S and 0 implies that NP'shave to be ibn:od, etc.The analysing stage comprises all stages which belong to morphofogy~ surface grammar and possibly a large number of matters thatbelong to the field of semazatic nterpretation (see /Bakel, 1984/).This last category, semantic interpretation, is close to the translationstage and will possibly be different for groups of target languages.in the section headed 'Prospect' we will indicate schematically howthis semantic interpretation has to be situated in the whole of thetranslation process.2.2 A lgor i thmic  consequences ..~;tar ting ii'om the assumption that the addition of information (com-mitting abstractions) is brought about, anmng other things, by theapplication of some sort of dependency structure, what is needed isa form of graphic representation.For many languages, and certainly also for Dutch, the traditional treestructure clashes with our demand formulated earlier, that informa-tion should be retained: the original word order nmst be nmintainedduring the anMysing stage.
(In Dutch a postmodifier in an NP isoften extraposed, e.g.
"Ik heb de nmn gezien met de bril."
\]?ans-\[ated word by word: "I have the man seen with the spectacles.
")\],hn'thermore linguists should have the possibility of expressing lin-guistic notions in a way which is adequate to them.
For this purposea distinction has been made, in the SYGMART system, betweenthe morphololgical nalysis, which operates on words (the subsystemOPALE) and a tree transformational p rt (the subsystem TELESI),whicil ol)eral.es on nndti-dimensional trees over text(s) (the notionsentence does not exist in SYGMART).The surface gremlmar and the semantic interpretation cannot here-fore be algorithmically distinguished.This multi--dimensionality enat)les the linguist to establish relation-ships between sentence constituents which are far apart, withouthaving to extract them out of their original order.
This multi-dimensionality has to be looked upon as'the definition of graphsmore complex than trees over tbe input.
For a more detailed discus.sion of the mnltl-dimensionMity the reader is referred to/Chauch6,1984/.Our arguulents for not using the traditional grmmnatical types aregiven in /Roll, 1986/.
Part of the analysis of Dutch is shown inAppendix A.3 The t'eanslation.The translation stage is the stage between the source language inher-ent analysis and the target language inherent generation.
This stagecan be roughly compared to a transfer component, as suggested inthe beginning of section /.Two features arc characteristic for the translation, viz.
word orderchange and the addition of target language features.Word order change(s) (better: conlpouent or category nlovement) is(are) not per definition carried out separately for all possible targetlanguages.
If in the example of the word order change in subclauses,presented in the previous eclion, the rule SOV ---) SVO has to beal)plied to a subset of the target languages, tbis can be done tbr theentire sul)set prior to the introduction of target language specific fea-tures.This introduction of target language specific features is clone by thelexical translation, or the translation of the words.
We will assumehere that the analysing stage has provided all the necessary informa-tion to gel: the correct ranslation for every word.Because of the information added in the analysing stage the correcttranslation of a word implies the translation of a complex data strut-'ture into another complex data structure, in which the written baseforin in both cases is hut one wdue of that data structnre.On the basis of information that comes in after the lexical transla-tion, further word or.der changes will generally have to take place, aswell as the generation of grannnatical structures.A simple exaulple in this connection is the folh)wiug: the I)utrh verbhli jven is translated into English keel) , but in Dutch blijven iscompleted by an infinitive (blljven wachten), whereas in English agerund is expected (keep waiting).If on the basis of the new lexical information further grannnatiealrules have to be applied, such as nmving the verb in the gerund con-strut(ion (Dutch "ik blljf op hem waehten" into Englisb "l keepwaiting for hiln'), these rules also belong to the translation stage,not to the generation stage, unless the rules apply to all possiblesource languages with respect o English.As in the previous ection, here, too, the demand made of the algo-rithmic procedures and the possibility of building and manipulatingconlptex datastructures is heavier than in traditional gramlnaticaltypes.
Within SYGMART the subsystem TELESI is used for thetranslation stage, which does not imply that for each pair of lan-guages a separate TELESI implementation has to be made after all:SYGMART provides for the application of different TELESI gram--n|ars one after another.4 The generation of the target language.15-om the previous ections it has already beconle apparent that thegeneration of the target language does not come into play, until onlytarget language inhdrent matters are at issue smatters which holdirrespective of the source language that is used.They are in arty case all matters of a morphological nature whichin the entire translation process are the last to be dealt with.
Inthe translator generator SYGMART the generating morphology istreated by the sul)systen) .AGATE.5~5If there are grammatical rules which also have to be applied inde-pendently of the source language, they also belong to the generatingstage, in our set-up.
These rules will not be many, for that wouldimply that in a target lauguage certain constructions should occurfor which in no (source) language an analogous constrnction was tobe found.In our set-up the technical three-way division of SYGMART (OPA-LE, string into tree, TELESI tree into tree via network, AGATE, treeinto string) cannot be measured in a one-to-one correspondence ontothe three-way division of the translation process, viz.
analyses, Irans-lation and generation.
The morphological nalysis always takes placein OPALE and is a, rather small, part of the entire analysis.
Thegreatest part of the analysis, consequently, takes place in TELES1.Everytlfing belonging to the translation hapI)ens in TELESI.
As faras the generation is concerned, a small part is possibly carried outin TELESI, but the morphological generation, aturally, takes placein AGATE.5 Prospect: The Languages Network.From the foregoing it can be deduced that as far as we are concernedthe question formulated in the beginning disregards the complexityof the translation of natural language from and into one another.
Ingeneral the analysis of the source language is the most importantcomponent: once the analysis has been carried out on all possiblelevels in all possible details, generating the target language is 'rela-tively' siml)le: at that stage word meanings have, of course, been dis-ambiguated, semantic interpretation have been assigned, referenceshave been determined, etc., but all this has been done in relation tothe meaning, viz.
the translation.Seeing that we analyse on the basis of the requirements of the targetlanguage, analysis is only partly an unambiguous notion: not all theabstractions will be equal for all the target languages, nor will theybe required for all the target languages.If for each pair of languages the entire process is plotted on a linefrom source language to target language, it will be possible to pointto a number of points on that line, where analyses will go into dif-ferent directions (depending on the subset of target languages) andWhere translati6ns and generations merge.
These lines together formthe languages network.On the hasis of such a network it will be possible, in the future,to formulate relationships with reference to the affinity of languagesmutually.
This may sound speculative, but we are convinced thatwhat has been presented cannot be reduced to the definition of asingle intermediate language, unless it is done for subsets of naturallanguages which have been defined precisely.
Our objections ?
to thisare formulated in/Roll', 1986/./6 References .\[Chauehd, 1982\]Chauchd, J., V. Cheboldaeff, R. Leseoeur, M. Jatteau, Rapport deprdsentation du project relatif b l'6crlture des  spec i f i ca t ionsd'un syst$me de tradnctlon assistde par ordinateur, SLIGOS,Conseil, assistenee etrdalisations, produits informatiques, services degestion, Avril 1982.\[Chauclff, 1984\]Chaueh~, J.,Un outil multidimensionnel de l'analyse du discours,in: Proceedings of Coling84, Stanford University, California, pp.
11 - 15,1984.\[Landsbergen, 1982\]Landsbergen, J.
Machine Translation based on logical ly?
isomorphic Montague grammars, in: Horecky, J.
(ed.
), COLING 82,pp 175-182, North-Holland Amsterdam, 1982,\[Landsbergcn, 1984\]Landsbergen, Jan, Isomorphic Grammars and their use in theRosetta Translation System, Pbilips Research Laboratories Eindhoven- the Netherlands, (presented at the Tutorial on Machine Translation,April 2 - 6, 1984, Lngano), 1984.\[Rolf, 1983\]Rolf, P.C., Vertalen van getalsnamen, Verslagen Computerlingu~'stiekNo.
3 - 1983, KU Nijmegen.\[Roll, 1985\]Rolf, P.C., Beschrljving van het vertaalsysteem SYGMART,versie 4, intern verslag KU Nijmegen, 1985.\[Rolf, 1986\]Rolf, P.C.
and J. Chaucht4, Machine Translation and theSYGMART system., in: Computers and the Hmnanities, 1986, Vol.20,no 4,pp 283-288.\[Slocum, 1985\]Slocum, Jonathan, A Survey of Machine Translation: its History,Current Status, and Future Prospects.
in: ComputationalLinguistics, Vol 11, Number 1, January-March 1985.\[Witkam, 1983\]Witkam, A.P.M., Distributed Language Translation, FeasibilityStudy of a Multilingual Facility for Videotex Information Networks, BSO,Utrecht, 1983.A An example of the analysis of Dutch.The following is an extract of a running implementation f a part of theanalysis of Dutch in the SYGMART system.
It can be regarded as one ofthe nodes in the proposed Languages Network.This node constitutes a network in itself, with four possible ntry points,eharacterised by "&ENTREE:", and several end nodes, eharaeterised by"- -  >%STOP.
'.\[Brandt Corstius, 1978\]Brandt corstius, H, Computer-Taalkunde, Muiderberg, 1078.\[Bakel, 1984\]Bakel, Jan van, Automatic Semantic Interpretation, ForisPublications, Dordreeht, 1984.\[Barr, 1981\]Barr, Avron and Edward a. Feigenbanm , The Handbook of  Art i f ic ia lIntelligence, Stanford, 1981, VoI.L\[Chauchd, 1974\]Chauchd, Jacques, 'Pransducteurs 8z Arborescences, Etudes etr~alisations de syst~mes appliqu~es aux grammai restransformationnelles, Thbse d'Etat, Grenoble, 1974.\[Chauchd\]Chauchdl J., Systb.me de manipulations algorithmiques etr6cursives de texte, SYGMART,  Labotatoire de traitement del'information, Le Havre, France.~GRAHMAIRE./ *  Basisgrammatica's * /  "&GRAH: NP(E).FINDKERN: 0(1(* ) )  /1: ((NRDS00RT=SUBST)I(PRON=PERS))&(CATEGORY'=NCKERN)=> x(Y(1) )  /x: (CATEGORY=NBAR) ;Y: (CATEGORY=NCKERN).FINAPQP2: 0 ( I (2 ) , * ,3 )  /2: (NRDSOORT=ADJ)I(NRDS00RT=TELW);3: CATBGORY=~BAR=> X(*O<,1>*,Y(l(2),*3<,>*),*O<3,>*)X: 0 ;Y: 3 ;1: I (SUBCAT(2)).546RESTADJ: 0(1(2(0) ) , * ,3 (4 ) )  /2: WRDSOORT=ADJ;3: CATEGORY=NBAR;4: CAYEGORY=AP=> X(*O<,l>*,Y(Z(2,*4<,>*),*3<4,>*),*O<3,>*) /X: 0 ;Y: 3 ;Z: 4.FINDEOPI: 0(1(2),*,3) /2: (WRDSOORT=LIDW)I(WRDEOORT=TELW)LOCDE~PI(0,2,3)=> X(*O<,l>*,Y(l(2),3),*O<3,>*) /X: 0 ;Y: (KENCAT(3)) ;1: I(KENCAT(2)).RESDEQPI: 0(%1(Z2),*,3(4)) /O: (Vt\]RM='SENTENCE*****~)I(VORM='BIJZIN*****')I(CATEGORY=PVWWCL);2: (NRDSOORT'=LIDW)&(WRDSOORT'=TELW) /CATRES(3,4)=> X(*O<,I>*,ZI(Z2),?
(3(4)),*O<3,>*) /X: 0 ;Y: (KENCAT(3)).ONLYAD3: 0(1(2(*) ) )  /O: (VORM='SENTENCE*****')I(VORH='BIJZIN*****')I(CATEGORY=PVNNCL);1: CATEGORY'=AP;2: WRDSODRT=ADJ=> X(*O<,I>*,Y(I(2),KERN(EMPT)),*O<I,>*) /X: O;Y: (CATEGORY=NBAR);1: I(SUBCAT(2));KERN: (CATEGORY=NCKERN).-->ZNUL.&GRAM: NPCONS(E).PREPCON: 0(1(2),*,3) /2: NRDSOORT=PREP ;2: CATEGORY=NP=> X(*O<,l>*,Y(2,3),*O<3,>*) /X: 0 ;Y: *PkEP.-.-> ~NUL.~GRAM: WWCI.US(E).FINDWWCL: TOP(I,*,2) /TOP: VORM='SENTENCE*****';1: (WERKW'=WERKN.->O)&(WERKW'=PV)&(WERKW'=PV\[IMPERAT);2: (WERKW^=WERKW->O)a(WERKW'=PV)~(WERKW^=PV\]IMPERAT)WWCL( I ,2 )=> NEWTOP(*TOP<,I>*,NEW(1,2),*TOP<2,>*) /NEWTOP: TOP;NEW: (CATEGORY=WWCL;VERBUM=VERBUM(1));2: (KENWW(I,2)).FIBYPVCL: TOP(I,*,2) /TOP: VORM='SENTENCE*****~;1: (WERKW~>=PV);2: (WERKW'=WERKW->O) /PVWWCL(1,2)=> NEWTOP(*TOP<,I>*,NEW(1,2),*TOP<2,>*)NEWTOP: TOP;1: I(WERKW:PV);NEW: *PVWWCL;2: (KENWW(I,2)).FBYPVCI,2: TOP(2,*,I) /TOP: VORM='SENTENCE*****';I: (WERKW~>=PV);2: (WERKW'=WERKW->O)&(CATEGOR?
'=WWCL)PVWWCL(1,2)=> NEWTOP(*TOP<,2>*,NEW(2,1),*TfP<I,>*)NEWTOP; TOP;1: I(WEREW=PV);NEW: *PVWWCL;2: (EENWW(I,2)).FINDPVCL: TOP(I,2) /TOP: VORM='SENTENCE*****';I: (WERKW~>=PV);2: (WERKW~=WERKW->O) /PVWWCL(I,2)=> NEWTOP(*TOP<,I>*,NEW(1,*TDP<I,2>*,2),*TDP<2,>*) /NEWTOP: TOP;1: I(WERKW=PV);NEW: *PVWWCL;2: (KENWW(I,2)).FINDPV: TOP(1) /TOP: VORM='NENTENCE*****';1: (WERKW?>=PV)=> NEWTOP(*TDP<,I>*,NEW(NEWI(1)),*TOP<I,>*) /NEWTOP: TOP;NEW: (CATEGORY=PV);NEWt: (WERKW=PV;<(VERBSORT(1)'~>=COPULA): VERBSORT=ZELFST #VERBSORT=COPULA >).--->%NUL.hGRAM: BYZIN(E).BYZBEG: TOP(*) /TOP: (PRON=RELPRON) I(VOEGWRD=ONDER)=> NEWTOP(NEWR(TSP)) /NEWTOP: (VORM='BIJZIN*****';P~ON=PRON(TOP)).BYZREST: 0(I(2),*,3) /2: VORM='BIJZIN*****';3: (CATEGORY'=WWCL)k(CATEGORY'=PVWWCL)~(CATEGORY'=PV):> NEWTDP(*O<,1>*,I(NEW2(*2<,>*,3)),*O<3,>*) /NEWTOP: O;NEW2: 2.BYZEND: 0(1(2) ,* ,3)  /2: VflRH='BIJZIN*****';3: (CATEGORY=PV) i(CATEGORY=PVWWCL)i(CATEGDRY:WWCL)=> NEWTOP(*O<,I>*,I(NEW2(*2<,>*,3)),*9<3,>*)NEWTOP: O;NEW2: 2.RELBYNP: TOP(I ,*,3(4)) /1: CATEGORY=NP;4: (VORM='BIJZIN*****')h(PItON=RELPRUN)=> NEWTOP(*TOP<,I>*,I(3(4)),*TOP<3,>*) /NENTOP: TOP.--> ZNUL.aENTREE: TELWRD(1).DELTIGEN: 0(1(* ) , * ,2 (* ) )  /2: ((VORM='tig')\[(VORH='on')):> o(1) II: I(<VORH(2):'tig':SOORT=SOORT(2)>).KEERSM: 0 (1(* ) , * ,2 (* ) )  /1: SOORT:EENHEID ;2: SOORT=TIENTAL=> 0(2,1) .DEL_ENHO: 0 (1(* ) , * ,2 (* ) , * ,3 (* ) )  /i: (SOORT=DUIZTAL);2: (SDORT=EENHEID);3: (SOORT=HONDTAL)=> 0(1,2) /3: 3(REPR=REPR(2)).VULOP: 0 (1(* ) , * ,2 (* ) )  /O: (WRDSDORT=TELW) /AANW(I,2)=> 0(1,2,2)  {3: (KENTEL(J)).VULAAN: 0(1(*) ,* )  /1: (SOORT:DUIZTAL) I(SOORT=HONDTAL)I(SOORT=TIENTAL):> o(1,2) /2: (KENTEL(1)).547DEL_DU(*(*);O(2)): 0(1(*),*,2(*)) /I:(SOORT=EENEEID) I(SOORT=COMBI);2: (SOORT=DUIZTAL) J(SOORT=HONDTAL)=> 0(2) /2: 2(REPR=REPR(1)).--> ~STfP.aENTREE: ENGTLWD(I).TranstelSHLT(Transtel): blad(*) /blad: (TRANS=TRANS->O)=> blad /blad: blad(TRANS=TRANS(DICT(*))).CENGORD: O(een(*),*,en(*),*,tien(*),*,tig(*))een: SODRT=EENHEID ;on: VORH='en';tien: (S00RT=TIENTAL))(SDDRT=EENEEID);t ig:  VORH='tig'=> O(tien,tig,een).__> ZSTOP.&GRAM:REsTNP(1).RESTADJ.ONLYADJ.FINAPQPR(*(*);Y(2)).FINDEQPI(*(*);?(2)).RESDEQPI(*(*);?
(4)).--> ~STOP.&GRAM: HOUDOP(E).--> ZSTOP./* Netwerk van grammatica'S */&ENTREE: SEPARATE(1).ONBEKEND(*(*);O(1))$TRF(HDUDOP): 0(1) /i: DICT~>=ONBEKEND=> 0(1).LEESTSHLT(ONBEKEND): 1(2(4(*),*,3(*))) /3: LEEST-=LEEST->O=> NEWl(*I<,2>*,4),NEW2(3,*l<2,>*) /NEWI: I.LEEST2$ELT(ONBEKEND): 1(2(4(*),*,3(*))) /4: LEEST'=LEEST->O=> NEW1(*1<,2>*,4),NEW2(3,*1<2,>*) /NEW1: 1.SPLITB(*(*);X(P2,R))$HLT(LEEST,LEEST2,DNBEKEND):O(1(P1),2(P2)) /PI:  LEEST=EOSENT;P2: LEEST=EOSENT=> Y(*O<,I>*,1(P1),X(*O<I,2>*,2(P2)),*O<2,>*) /X: (VORM='SENTENCE***** ' ) ;Y: O.SPLITOP$HLT: O(I(P)) /P: LEEST=EOSENT=> Y(X(*O<,I>e,I(P)),*O<I,>*) /Y: O;X: (VORM='SENTENCE*****').--> PREPROC.&ENTREE: PREPROC(U,PREPROC,PREPROC).WW2(*(*);O(2)): 0(1(3(2(* ) ) ) )  /O: VORM='SENTENCE*****';I: WRDSOORT=WRDSOORT->O;2: WRDSOORT=VERB=> 0(1(3(2))) /1: I(VERBUM=VERBUM(2)).548WWl(*(*); l(2)): 1(2(*)) /I: WRDSBORT:WRDSOORT->O;2: WRDSOORT=VERB=> i(2) /I: I(VERBUM=VERBUM(2)).TEINF(*(*);TOP(4,2)): 0(1(2),*,3(4)) /2: VORH=Jte~;4: WERKW@>=INF=> TOP(*O<,I>*,NEWTOP(X(2,4)),*O<3,>*) /TOP: O;NEWTOP: (WRDSOORT=WRDSODRT(4);WERKW=TEINF;VERBSORT=VERBSORT(4));2: 2(WRDSOORT=WRDSOORT->0);4: 4(WERKW=INF);X: (WERKW=TEINF;VERBSORT=VERBSDRT(4)).--> TELW: 0(*) / O: (WRDSDORT=TELW)a(SODRT^=CYFER)&(SOORT'=SOORT->O) .--> FINDNPCL.~GRAM: TELW(E).TELWDRD(@TELWRD;O): 0(1(*))  /1: (WRDSOORT=TELW)&(SOORT'=CYFER)~(SOORT'=SDORT->O)=> o(1),--> FINDNPCL.--> ZNUL.&GRAM: FINDNPCL(I).FINDKERN(*(*);X(1))$HLT(FINDKRRN).FINDWWCL(*(*);NEW(2,1)).FIBYPVCL(*(*);NEW(2,1)),FBYPVCL2(*(*);NEW(2,1)).FINDPVCL(*(*);NEW(2,1)).RESTADJ.FINAPQP2(*(*);Y(2)).FINDEqPI(*(*);Y(2)).RESDEQPI(*(*);Y(4)).F!NDPV(*(*);NEWTOP(NEW)).UNLYADJ(*(*);X(EMPT,KERN,2)).--> FIBYZ: 0 / O: (PRON=RELPRON)\](VOEGWRD=ONDER).--> RELBYZIN: 0 / O: (WRDSODRT=PREP).--> TRANSLAT.~GRAM: FIBYZ(I).BYZBEGSHLT(BYZBEG).BYZEND(*(*);NKWTOP(S,NEW2)).~"B~'ZREST(*(*);NEWTOP(3)).--> RELBVgIN: 0 / O: (PRON=RELPRON)((WRDSOORT=PREP).--> TRANSLAT.&GRAM: RELBYZIN(I).RELBYNP.PREPCON(*(*);X(3)).--> TRANSLAT.&GRAM: TRANSLAT(U,TRANSLAT,TRANSLAT):<STAM^=STAM->O :TRANS=TRANS(DICT(*))>.--> ZSTOP.~FIN.
