Coling 2008: Companion volume ?
Posters and Demonstrations, pages 157?160Manchester, August 2008A Punjabi To Hindi Machine Translation SystemGurpreet Singh JosanLecturer, Yadvindra College ofEngineering, Talwandi Sabo Bathinda.josangurpreet@rediffmail.comGurpreet Singh LehalProfessor, Dept.
of Comp.
Sci.,Punjabi University Patiala.gslehal@gmail.comAbstractPunjabi and Hindi are two closely relatedlanguages as both originated from thesame origin and having lot of syntacticand semantic similarities.
Thesesimilarities make direct translationmethodology an obvious choice forPunjabi-Hindi language pair.
Thepurposed system for Punjabi to Hinditranslation has been implemented withvarious research techniques based onDirect MT architecture and languagecorpus.
The output is evaluated byalready prescribed methods in order toget the suitability of the system for thePunjabi Hindi language pair.1.
IntroductionThe Direct MT system is based upon exploitationof syntactic similarities between more or lessrelated natural languages.
Although itsdeficiencies soon became apparent, it remainspopular in certain situations due to its usefulness,robustness and relative simplicity.
One of suchsituation is machine translation of closely relatedlanguages.
The general opinion is that it is easierto create an MT system for a pair of relatedlanguages (Hajic et.al.
2000).
In the last decade,some of the systems utilizing this approach fortranslating between similar languages haveconfirmed this concept.
In this paper, our attemptto use the same concept for language pair ofPunjabi-Hindi is described.Punjabi and Hindi both are classified asIndo-Iranian languages.
Although they are in thesame family, but still they have lot of differencesin order to make them not mutually intelligible.Punjabi and Hindi are not mutually intelligible inwritten form.
As far as spoken form is?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unportedlicense (http://creativecommons.org/licenses/by-nc-sa/3.0/).
Some rights reserved.concerned, Punjabi and Hindi are mutuallyintelligible to certain degree.
This relation isfurther asymmetric with the speakers of Punjabimore able to understand Hindi but reverse is nottrue.1.1 Punjabi LanguagePunjabi is the official language of the Indianstate of Punjab and also one of the officiallanguages of Delhi.
It is used in government,education, commerce, art, mass media and inevery day communication.
A good deal of Sikhreligious literature is written in Punjabi language.According to SIL Ethnologue, Punjabi is thelanguage of about 57 million people and ranked20th among the total languages of the world.
It iswritten in Gurmukhy, Shahmukhy and romanscripts.1.2 Hindi LanguageHindi on the other hand has been one of the twoofficial languages of all of India.
Hindi is alanguage of about 577 million peoples all overthe world and is ranked as 5th most widelyspoken language by SIL Ethnologue.2.
The NeedIndia being a large and multilingual society, andin the interest of the regional languages, thegovernment of India has allowed to use regionallanguages as the official language of respectiveregion and adopt bilingual form (Hindi/English)as the official language of Union Government.Most of the state governments work in theirrespective regional languages whereas the uniongovernment?s official documents and reports arein bilingual form (Hindi/English).
In order tohave a proper communication there is a need totranslate these reports and documents in therespective regional languages and vice versa.Some other applications of Punjabi to Hindi MTsystem are Text Translation, WebsiteTranslation, Message Translation (Email), CrossLanguage Information Retrieval and WebService.157Existing system: Keeping in view theimportance of MT system among Indianlanguages, an MT system called ?Anusaarka?
hasbeen developed at IIIT Hyderabad covering allthe major Indian languages.
It is a languageaccessor and produces an image of sourcelanguage in target language.
Output will have tobe post-edited by a person, to make itgrammatically correct, stylistically proper, etc.Moreover, some amount of training will beneeded on the part of the reader to read andunderstand the output.
Our system is morepractical in nature than Anusaarka and it producemore grammatical and stylistic output.
Notraining is needed on the part of reader.3.
System descriptionTo start with, a direct translation system iscreated on windows platform, in which wordsfrom source language are chosen, theirequivalents in target language are found out fromthe lexicon and are replaced to get targetlanguage.
The source text is passed throughvarious pre processing phase and out put is alsopassed through a post processing phase.3.1 Lexical ResourcesIn this research work, we have developed andused various resources as follow:Root word Lexicon: It is a bilingual dictionarythat contains Punjabi language word, its lexicalcategory like whether it is noun, verb or adjectiveetc and corresponding Hindi word.
It alsocontains the gender information in case of nounsand type information (i.e.
transitive orintransitive) in case of verb.
This dictionarycontains about 33000 entries covering almost allthe root words of Punjabi language.inflectional form lexicon: It contains all theinflectional forms, root word and correspondingHindi word.
Ambiguous words has the entry?amb?
in the Hindi word field.
It contains about90,000 entries.Ambiguous word lexicon: It contains about1000 entries covering all the ambiguous wordswith their most frequent meaning.Bigram Table: Used for resolving ambiguity,this table contains Punjabi bigrams along withHindi meaning.
Bigrams are created from acorpus of 7 million words.Trigram Table: Same as Bigram, but containPunjabi trigrams used for resolving ambiguity.Created from 7 million words corpus.3.2 System ArchitectureThe system architecture, as shown in figure 3.1,has the following stages through which thesource text is passed.Text normalizationThere are number of ASCII based fonts torepresent Punjabi text and each font hasvariations in assigning ASCII code to PunjabiAlphabets.
This cause a problem while scanninga text.
Therefore, the first step is to normalize thesource text by converting it into Unicode format.It gives us three fold advantages; first it willreduce the text scanning complexity.
Secondly italso helps in internationalizing the system as ifthe output is in Unicode format then it can beused in various applications in various ways.Thirdly, it eases the transliteration task.TokenizationThe system is designed to do sentence leveltranslation in order to have a track about thecontext of a word.
Once the whole text isscanned, next step is to break up the data intosentences.
Individual words or tokens areextracted out from the sentence and processed tofind out its equivalent in the target language.Tokens are separated by using break characterslike space, comma, question mark etc.Translation EngineThe translation engine is responsible fortranslation of each token obtained from theprevious step.
It uses various lexical resourcesfor finding the match of a given token in targetlanguage.
It involves different modules likeNamed Entity Recognition, Repetitive constructhandler, Word Mapping, Ambiguity Resolution,and Transliteration.The token obtained in the previous stage ispassed through following stages:1.
The token is checked for proper names ofpersons as they need to be transliterated.2.
If token is not a proper name then it ischecked for repetitive units like{ghar??
ghar}(home to home) bycomparing the word and its root with next orprevious words and their roots.
A limitedmorph analysis is required for this step.
Therepetitive construct handling involves twostages.
First, detection of repetitive constructand second, handling of such construct.Detection: For detection of repetitiveconstruct, we check the next and previousword.
If the next and previous words aresame or the roots of next and previous wordsare same as that of current word, then we158Figure 3.1 System Architecturemark it as a repetitive construct.
The root ofthe words will be obtained from the databasediscussed earlier.Handling: If repetitive construct is foundthen the next step is to get the lexicalinformation of the token.
This information isagain obtained from the database.
The lexicalinformation of token is used to trigger thehandling process.
If the token is noun thenthe token is replaced by its root and thenpassed to the next step.
E.g.
in case of{ghar??
ghar}(home to home) wecheck the token and its root i.e.
withthe next token which in this case is again .Thus, system marks it as repetitiveconstructs.
Then the lexical category ofis checked from the database which comesout to be noun.
So we replace the  withits root  and pass the replaced token to thenext step.3.
Then the token is looked into the databasefor a match.
The Database contains varioustypes of tables.
First of all token is checkedin the root database and inflectional formdatabase.
It gives two types of output ifmatch occurs.
Either the corresponding Hindiword is produced or ?amb?
is appearedwhich shows that word is ambiguous.4.
For the ambiguous words, we call ?resolver?module that resolve the ambiguity with thehelp of n-gram language modeling.
Thesystem uses trigram table in the first place,which contains the two words in the vicinityof an ambiguous word and correspondingmeaning for that particular context.
If it failsto resolve the ambiguity then bigram table issearched.
Bigram table is similar to trigramtable except it contains only one word in thevicinity of ambiguous words.
If both trigramand bigram fails to resolve then module willuse most frequently used meaning.5.
If token is not matched in inflectional formdatabase, then word may be a foreign wordi.e.
word of other language like English.Such words and all those tokens, for whichno entry is found in database, aretransliterated.
Transliteration is performed inthree stages as follow:a.
Direct Mappingb.
Rule Based Improvementc.
Soundex technique Based improvement.6.
The system uses Direct mapping approach atfirst stage and then applies some rules tomake the spellings of output similar to targetlanguage.
In the third stage soundextechnique is used to deal with the specialcases like occurrence of half characters andother symbols not present in Punjabi.7.
All these steps are repeated for all thesentences in the source text.Target Language GenerationAfter converting all source text to target text,there are some discrepancies as discussedpreviously and need to be solved.
For removingthese discrepancies a rule base is used.
Thisdatabase gives the rules to make the textgrammatically correct.4.
ImplementationThe system is implemented in ASP.net at frontend and MSAccess at back end.
A class iscreated whose object will accept a string inPunjabi language and returns its correspondingHindi string.
Based on this class, various onlineapplications are created.
A web site is createdwith interface that enables a user to write hisinput sentence in Punjabi and system willproduce the output in Hindi.
Another applicationenables the user to translate a webpage inPunjabi to Hindi on the fly.
The user has toNormalized SourceTextTokenizationNamed Entity RecognitionRepetitive Construct HandlingLexicon Look upAmbiguity ResolutionTransliterationHit?Ambiguous?Target languagegenerationTarget TextNNoYYRoot word &InflectionalForm DBBigram &Trigram DBAmbiguousWord DBAppend in Output and retrieve next tokenIf tokenpresentYNPre ProcessingTranslationEnginePostProcessingRuleBase159mention the URL of webpage to be translated.
Inanother application, an online interface for crosslanguage information retrieval system has beencreated whereby a user can enter his key word inPunjabi.
These keywords are translated in Hindiand result is posted to Google search engine.
Theuser is presented with the results returned byGoogle from Hindi web pages.
Another interfaceenables the users to write E-mail in Punjabi.
Thismessage is translated to Hindi and send to thetarget email address.
The receiver get the mail inHindi.
For the developers who want to use thisPunjabi To Hindi MT module, a web service isalso created.5.
Results5.1 Subjective test analysisThe overall rating grade for Intelligibility of thetranslated text came out to be 2.76 on a 3 pointscale.
About 94% sentences are intelligible.The overall rating grade for fidelity of thetranslated text came out to be 2.72 on 3 pointscale.
Similarly, the accuracy percentage for thesystem is found out to be 90.67%.
The accuracyscore is comparable with other similar systems(Hajic J. et.al.
2000; Hric J. et.al.
2000; Homolaet.al.
2005) as shown in table 5.1.MT SYSTEM AccuracyRUSLAN 40% correct 40% withminor errors.
20% withmajor error.CESILKO(Czech-to-Slovak)90%Czech-to-Polish 71.4%Czech-to-Lithuanian 87.6%Our System 90.67%Table 5.1 Comparative analysis of %age accuracy5.2 Error AnalysisWord Error rate, which is the percentage oferroneous words from all words, is found out tobe 2.34%.
It is comparably lower than that of thegeneral systems like Salt, Incyta, Internostrum,where it ranges from 3.0 to 4.9 (Tomas J. et.al.,2003).
The Sentence Error rate is found out to be24.26%.6.
ConclusionThe accuracy of the translation achieved by oursystem justifies the hypothesis that the simpleword-for-word translation along with statisticaland rule based approach provides a highaccuracy and simple solution for language pair ofPunjabi and Hindi especially when the objectiveis just to have a rough idea on the subject matter.ReferencesAltintas K., Cicekli I., "A Machine TranslationSystem Between a Pair of Closely RelatedLanguages", In Proceedings of ISCIS 2002,October 2002, Orlando, Florida.Anusaarka-overcoming the language barrier in India,http://www.iiit.net/ltrc/Publications/anuvad.htmlBemova A., Oliva K. Panevova J.," Some Problems ofMachine translation between closely relatedlanguages", In Proceedings of the 12th conferenceon Computational linguistics - Volume 1,Budapest, Hungry, 1988 pp 46 - 48HAJIC J, HRIC J, KUBON V., "CESILKO?
an MTsystem for closely related languages", In ACL2000,Tutorial Abstracts and Demonstration Notes, pp.
7-8.
ACL, Washington.Hajic J., "Ruslan-An MT System between closelyrelated languages", In Proceedings of the 3rdConference of The European Chapter of theAssociation for Computational Linguistics,Copenhagen, Denmark, 1987, pp.113-117.HRIC J, HAJIC J, KUBON V., "Machine Translationof Very Close Languages", proceedings of the 6thApplied Natural Language Processing Conference,April 29--May 4, 2000, Seattle, Washington, USA.pp 7-12.Homola P., Kubon V., "A Machine TranslationnSystem into a Minority Language?, In Proceddingsof the Workshop on Modern Approaches inTranslation Technologies 2005 - Borovets,Bulgaria, pp 31-35.Marote R. C, Guillen E., Alenda A.G., Savall M.I.G.,Bellver A.I., Buendia S.M., Rozas S.O., Pina H.P.,Anton P.M.P., Forcada M.L., ?The Spanish-Catalan machine translation systeminterNOSTRM?, In proceedings of MT SummitVIII, 18-22 Sept. 2001, Santiago de Compostela,Galicia, Spain.Scannell K.P.,"Machine Translation for CloselyRelated language Pair", Proceedings of theWorkshop on Strategies for developing machinetranslation for minority languages at LREC 2006,Genoa, Italy, May 2006, pp103-107.Slype V., 1979.
"Critical Methods for Evaluating theQuality of Machine Translation," Prepared for theEuropean Commission Directorate GeneralScientific and Technical Information andInformation Management.
Report BR-19142.Bureau Marcel van Dijk.160
