Proc.
EACL 2012 Workshop on Applications of Tree Automata Techniques in Natural Language Processing, pages 11?20,Avignon, France, April 24 2012. c?2012 Association for Computational LinguisticsDeciding the Twins Property forWeighted Tree Automata over Extremal SemifieldsMatthias B?chse and Anja FischerDepartment of Computer ScienceTechnische Universit?t Dresden01062 Dresden, GermanyMatthias.Buechse@tu-dresden.deAbstractIt has remained an open question whetherthe twins property for weighted tree au-tomata is decidable.
This property is crucialfor determinizing such an automaton, andit has been argued that determinization im-proves the output of parsers and translationsystems.
We show that the twins propertyfor weighted tree automata over extremalsemifields is decidable.1 IntroductionIn natural-language processing (NLP), languageand translation are often modeled using somekind of grammar, automaton or transducer, suchas a probabilistic context-free grammar, a syn-chronous context-free grammar, a weighted treeautomaton, or a tree transducer, among others(May and Knight, 2006; Petrov et al, 2006; Chi-ang, 2007; Graehl, Knight and May, 2008; Zhanget al, 2008; Pauls and Klein, 2009).
In statisti-cal NLP, the structure of the grammar is extractedheuristically from a large corpus of example sen-tences or sentence pairs, and the rule weights areestimated using methods from statistics or ma-chine learning.In general, a grammar such as those namedabove will be ambiguous, i.e., offering severalways of deriving the same object (sentence or sen-tence pair).
While the derivation of an object iscrucial to the intrinsics of a system, it is neitherrelevant to the user nor observed in the corpus.Hence, we speak of spurious ambiguity (Li, Eis-ner and Khudanpur, 2009).As a consequence, the true importance of anobject can only be assessed by aggregating allits derivations.
Unfortunately, this proves com-putationally intractable in almost all cases: forinstance, finding the best string of a probabilis-tic regular grammar is NP hard (Sima?an, 1996;Casacuberta and de la Higuera, 2000).
Findingthe best derivation, on the other hand, is possiblein polynomial time (Eppstein, 1998; Huang andChiang, 2005), and thus, most NLP systems ap-proximate the importance of an object by its bestderivation (Li, Eisner and Khudanpur, 2009).There is, however, a line of research that dealswith the costly aggregating approach, and it isclosely related to determinization techniques fromautomata theory.For instance, May and Knight (2006) arguethat the output of a parser or syntax-based trans-lation system can be represented by a weightedtree automaton (wta), which assigns a weight toeach parse tree.
Under some circumstances, thewta can be determinized, yielding an equivalent,but unambiguous wta, which offers at most onederivation for each object.
Then the weight of anobject is equal to the weight of its derivation, andthe aforementioned polynomial-time algorithmsdeliver exact results.The caveat of the determinization approach isthat deterministic weighted automata are strictlyless powerful than their general counterparts,i.e., not every automaton can be determinized.B?chse, May and Vogler (2010) give a review ofknown sufficient conditions under which deter-minization is possible.
One of these conditionsrequires that (i) the weights are calculated in anextremal semiring, (ii) there is a maximal factor-ization, and (iii) the wta has the twins property.11Items (i) and (iii) guarantee that the wta only computesweight vectors that are scalar multiples of a finite number11Regarding (i), we note that in an extremal semi-ring the weight of a parse tree is equal to theweight of its best derivation.
It follows that, whilethe determinized wta will have at most one deriva-tion per parse tree, its weight will be the weight ofthe best derivation of the original wta.
The benefitof determinization reduces to removing superflu-ous derivations from the list of best derivations.Regarding (ii), the factorization is used inthe determinization construction to distribute theweight computation in the determinized automa-ton between its transition weights and its state be-havior.
A maximal factorization exists for everyzero-sum free semifield.Regarding (iii), the question whether the twinsproperty is decidable has remained open for a longtime, until Kirsten (2012)2 gave an affirmative an-swer for a particular case: weighted string au-tomata over the tropical semiring.
He also showedthat the decision problem is PSPACE-complete.In this paper, we close one remaining gap byadapting and generalizing Kirsten?s proof: weshow that the twins property is decidable for wtaover extremal semifields (Theorem 3.1).
We pro-ceed by recalling the concepts related to deter-minizing wta, such as ranked trees, semirings,factorizations, wta themselves, and the twinsproperty (Sec.
2).
Then we show our main the-orem, including two decision algorithms (Sec.
3).Finally, we conclude the paper with a discussionand some open questions (Sec.
4).2 Preliminaries2.1 Ranked TreesA ranked alphabet is a tuple (?, rk) where ?
is analphabet, i.e., a finite set, and rk : ??
N assignsan arity to every symbol ?
?
?.
Throughout thispaper we will identify (?, rk) with ?.
For everyk ?
N the set ?
(k) = {?
?
?
| rk(?)
= k}contains all symbols of arity k.Let H be a set and ?
a ranked alphabet.
Theset T?
(H) of trees over ?
indexed by H is de-fined inductively as the smallest set T such that:(i) H ?
T and (ii) ?
(?1, .
.
.
, ?k) ?
T for everyof vectors corresponding to a set of height-bounded trees,while Item (ii) ensures that the latter vectors suffice as thestates of the constructed deterministic wta; cf.
(B?chse, Mayand Vogler, 2010, Lm.
5.9 and Lm.
5.8, respectively).2A manuscript with the same content has been availableon Daniel Kirsten?s website for a year from Sept. 2010 on.k ?
N, ?
?
?
(k), and ?1, .
.
.
, ?k ?
T .
We writeT?
instead of T?(?
).For every ?
?
T?
(H), we define the setpos(?)
?
N?
of positions of ?
by(i) if ?
?
H , then pos(?)
= {?
};(ii) if ?
= ?
(?1, .
.
.
, ?k), then pos(?)
= {?}
?
{i ?
w | i ?
{1, .
.
.
, k}, w ?
pos(?i)}.The mapping ht: T?
(H) ?
N maps each tree ?to its height, i.e., the length of a longest positionof ?.
We denote the label of ?
at position w by?
(w), the subtree of ?
rooted at w by ?|w, and thetree obtained by replacing the subtree of ?
rootedat position w with ?
?, ??
?
T?
(H), by ?[??
]w.A ?-context is a tree in T?
({z}) that containsexactly one occurrence of the special symbol z.The set of all ?-contexts is denoted by C?.
Let?
?
T??C?
and ?
?
C?.
Then the concatenationof ?
and ?, denoted by ?
?
?, is obtained from ?
byreplacing the leaf z by ?.
If ?
?
T?, then so is?
?
?, and likewise for ?
?
C?.2.2 SemiringsA semiring (Hebisch and Weinert, 1998; Golan,1999) is a quintuple S = (S,+, ?, 0, 1) where Sis a set, + and ?
are binary, associative operationson S, called addition and multiplication, respec-tively, + is commutative, ?
distributes over + fromboth sides, 0 and 1 are elements of S, 0 is neu-tral with respect to +, 1 is neutral with respectto ?, and 0 is absorbing with respect to ?
(i.e.,s ?
0 = 0 = 0 ?
s).Let S = (S,+, ?, 0, 1) be a semiring.
In nota-tion, we will identify S with S. We call S commu-tative if the multiplication is commutative; a semi-field if it is commutative and for every a ?
S\{0}there is an a?1 ?
S such that a ?
a?1 = 1; zero-sum free if a + b = 0 implies a = b = 0; zero-divisor free if a ?
b = 0 implies a = 0 or b = 0;and extremal (Mahr, 1984) if a + b ?
{a, b}.
Wenote that every extremal semiring is also zero-sumfree and every semifield is zero-divisor free.Example 2.1 We present four examplesof semirings.
The Boolean semiringB = ({0, 1},?,?, 0, 1), with disjunctionand conjunction, is an extremal semifield.
Theformal-language semiring (P(??
),?, ?, ?, {?
})over an alphabet ?, with union and languageconcatenation, is neither commutative nor ex-tremal, but zero-divisor free and zero-sum free.The tropical semiring (R ?
{?
},min,+,?, 0),with minimum and conventional addition, is12an extremal semifield.
The Viterbi semiring([0, 1],max, ?, 0, 1) is a commutative, extremal,zero-divisor-free semiring, but not a semifield.
2Let Q be a set.
The set SQ contains all map-pings u : Q ?
S, or, equivalently, all Q-vectorsover S. Instead of u(q) we also write uq to de-note the q-component of a vector u ?
SQ.
TheQ-vector mapping every q to 0 is denoted by 0?.For every q ?
Q we define eq ?
SQ such that(eq)q = 1, and (eq)p = 0 for every p 6= q.2.3 FactorizationsWe use the notion of a factorization as defined in(Kirsten and M?urer, 2005).Let Q be a nonempty finite set.
A pair (f, g) iscalled a factorization of dimension Q if f : SQ \{0?}
?
SQ, g : SQ\{0?}
?
S, and u = g(u)?f(u)for every u ?
SQ \ {0?}.
A factorization (f, g) iscalled maximal if for every u ?
SQ and a ?
S,we have that a ?
u 6= 0?
implies f(a ?
u) = f(u).Example 2.2 Let Q be a nonempty finite set.
Weshow three factorizations of dimension Q.If S is an arbitrary semiring, g(u) = 1 andf(u) = u constitute the trivial factorization.
Itis not maximal in general.If S is a zero-sum free semifield, such as thetropical semiring or the semifield of non-negativereals, then g(u) =?q?Q uq and f(u) =1g(u) ?u constitute a factorization (B?chse, May andVogler, 2010, Lemma 4.2).
It is maximal: f(a ?u) = 1g(a?u) ?
(a ?
u) =1a?g(u) ?
a ?
u = f(u).As shown in (B?chse, May and Vogler, 2010,Lemma 4.4) a maximal factorization only existsif S is zero-divisor free or |Q| = 1.2.4 Weighted Tree AutomataA weighted tree automaton (?sik and Kuich,2003) is a finite-state machine that represents aweighted tree language, i.e., a mapping ?
: T?
?S.
It assigns a weight to every tree based onweighted transitions.Formally, a weighted tree automaton (wta) isa tuple A = (Q,?, S, ?, ?)
such that Q is anonempty finite set (of states), ?
is a ranked al-phabet, S is a semiring, ?
is the transition map-ping, mapping transitions (q1 ?
?
?
qk, ?, q) into Swhere q1, .
.
.
, qk, q ?
Q and ?
?
?
(k), and?
?
SQ maps every state to its root weight.A wta A is bottom-up deterministic if for ev-ery (q1 ?
?
?
qk, ?
), there is at most one q such that?
(q1 ?
?
?
qk, ?, q) 6= 0.Example 2.3 Let A = (Q,?, S, ?, ?)
be the wtawhere ?
= {?
(0), ?
(1), ?
(2)}, S is the arctic semi-ring (N ?
{??},max,+,?
?, 0), ?
is given bythe directed functional hypergraph in Fig.
1, and?
= (0,??).
Each node in the hypergraph(drawn as circle) corresponds to a state, and eachhyperedge (drawn as box with arbitrarily many in-going arcs and exactly one outgoing arc) repre-sents a weighted transition.
Ingoing arcs of a hy-peredge are meant to be read counter-clockwise,starting from the outgoing arc.
The final weight 0of q1 is indicated by an additional arc.
Transitionsnot shown have the weight ??.
2q1 q2?/00?/0?/1?/1?/0?/0?/1Figure 1: Hypergraph representation of wta A.Typically, wta are given initial-algebra seman-tics (Goguen et al, 1977).
In this paper, we usethe equivalent run semantics (F?l?p and Vogler,2009, Sec.
3.2) as it constitutes the basis for ourproofs.
In this setting, every node of a given tree isdecorated with a state; this decoration is called arun.
The label of a node, its state, and the states ofits successors comprise a transition.
The weightof a run is given by the product of the weightsof all these transitions (under ?
), calculated in thesemiring S. Roughly speaking, the weight of atree is then the sum of the weights of all runs onthat tree, again calculated in S.Now we formalize the notions of a run andits weight.
For our proofs, we will need runsand their weights to be as easily composable anddecomposable as trees and contexts.
Therefore,we will consider trees indexed by semiring ele-ments and even Q-vectors over S. Let H be a set,?
?
T?
(H), and q ?
Q.
The setRqA(?)
of all runson ?
that end in state q at the root of ?
isRqA(?)
= {(?, ?)
| ?
: pos(?)?
Q, ?(?)
= q} .13?q1?q2 ?q1?q1 ?q2?q1?q1Figure 2: A tree together with a run.We will denote the pair (?, ?)
just by ?
and indi-cate ?
by stating ?
?
RqA(?).
We will also omitthe subscript A.
We set R(?)
=?q?QRq(?
).Let w ?
pos(?)
and ?
?
Rq(?).
The fol-lowing notions are defined in the obvious way:(i) ?|w ?
R?
(w)(?|w), (ii) ?[??
]w ?
Rq(?[??
]w)for every ??
?
T?
(H) and ??
?
R?(w)(??
), and(iii) ?
?
??
?
Rq?(?
?
?)
for every q?
?
Q, ?
?
C?,and ??
?
Rq?(?)
that maps the z-labelled posi-tion to q.
We will abuse the above notation intwo ways: (i) we write ?
[z]w to denote ?[??
]wwhere ??
is the only element of R?
(w)(z), and(ii) for every s ?
S, we write s ?
?
to denote therun on s ?
?
which coincides with ?.Let ?
?
T?
(S ?
SQ) and ?
?
R(?).
We definethe weight ??
?A ?
S of ?
as follows (omitting thesubscript A): if ?
?
S, then ???
= ?
; if ?
?
SQ,then ???
= ??(?
); if ?
= ?
(?1, .
.
.
, ?k), then ???
=??|1?
?
.
.
.
?
??|k?
?
?(?
(1) ?
?
??
(k), ?, ?(?
)).We define the mapping J.KA : T?
(SQ) ?
SQsuch that J?KA(q) =???Rq(?)???.
Again, wewill often omit the subscript A.
If we have a fac-torization (f, g), we will shorten f(J?K) to fJ?K.We will often use relationships such as ??
?
???
=????
?
???
and J?
?
?K = JJ?K ?
?K.The weighted tree language run-recognizedby A is the mapping ?A : T?
?
S such that forevery ?
?
T?
we have ?A(?)
=?q?QJ?Kq ?
?q.Example 2.4 (Ex.
2.3 contd.)
Figure 2 shows atree together with a run ?.
We compute ???
(recallthat we use the arctic semiring):???
= ?
?|1?+ ?
?|2?+ ?
(q2q1, ?, q1)= ?
(?, ?, q2) + ?
(?, ?, q1) + ?
(q1, ?, q1)+ ?
(q1, ?, q1) + ?
(?, ?, q2)+ ?
(q1q2, ?, q1) + ?
(q2q1, ?, q1)= 0 + 0 + 1 + 1 + 0 + 1 + 1 = 4 .It can be shown that J?Kq1 = ht(?)
and J?Kq2 =0, and thus, that ?A = ht.
2For every ?
?
T?
(SQ) and ?
?
R(?)
we call?
victorious (on ?)
if ???
= J?K?(?).
The follow-ing observations are based on (B?chse, May andVogler, 2010, Obs.
5.11 and 5.12).Observation 2.5 Let S be an extremal semiring.For every ?
?
T?
(SQ) and q ?
Q there is a ?
?Rq(?)
such that ?
is victorious.Observation 2.6 Let ?
?
T?
(SQ), w ?
pos(?
),and ?
?
R(?)
victorious.
Then we obtain ???
=J(??|w?
?
e?
(w)) ?
?[z]wK?(?).PROOF.J(??|w?
?
e?
(w)) ?
?[z]wK?(?)=????R?(?)((??|w??e?(w))??[z]w)????=????R?(?)(?[z]w),??(w)=?(w)???|w?
?
???=????R?(?)(?[z]w),??(w)=?(w)?
?|w ?
??
?= ???
.For the last equation, we note that the summandson the left-hand side form a subset of {???
| ?
?R?(?)(?
)}, which contains ???.
Since S is ex-tremal and ???
= J?K?(?
), the equation holds.
2.5 Twins PropertyWe define two binary relations SIBLINGS(A) andTWINS(A) overQ as follows.
Let p, q ?
Q.
Then?
(p, q) ?
SIBLINGS(A) iff there is a tree ?
?T?
such that J?Kp 6= 0 and J?Kq 6= 0.?
(p, q) ?
TWINS(A) iff for every context ?
?C?
we have that Jep ?
?Kp 6= 0 and Jeq ?
?Kq 6=0 implies Jep ?
?Kp = Jeq ?
?Kq.The wta A is said to have the twins property ifSIBLINGS(A) ?
TWINS(A).Example 2.7 We cover two examples.First, consider the wta from Ex.
2.3.
Its twostates are siblings as witnessed by the tree ?
= ?.However, they are not twins, as witnessed by thecontext ?
= ?
(z): Jeq1 ?
?
(z)Kq1 = 1, whereasJeq2 ?
?
(z)Kq2 = 0.Second, consider the wta over the Viterbi semi-ring shown Fig.
3.
Its two states are siblings aswitnessed by the tree ?
= ?.
Furthermore, theyare twins because their transitions are symmetric.Hence, this wta has the twins property.
2The following observation shows that we canenumerate SIBLINGS(A) in finite time.14q1 q2?/0.5 ?/0.5?/0.5?/0.5?/0.5?/0.5Figure 3: Siblings and twins.Observation 2.8 If S is zero-sum free, we haveSIBLINGS(A) = SIB(A) where SIB(A) is de-fined like SIBLINGS(A), with the additional con-dition that ht(?)
< |Q|2.PROOF.
The direction ?
is trivial.
We show ?by contradiction.
Let p, q ?
Q and ?
?
T?
suchthat (i) J?Kp 6= 0 and J?Kq 6= 0, and (ii) (p, q) 6?SIB(A).
We assume that ?
is smallest, and weshow that we find a smaller counterexample.By (ii), we have (iii) ht(?)
?
|Q|2.
By (i),there are ?p ?
Rp(?)
and ?q ?
Rq(?)
such that(iv) ??p?
6= 0 and ??q?
6= 0.By (iii), there are positions w1, w2 such that w1is above w2, ?p(w1) = ?p(w2), and ?q(w1) =?q(w2).
Cutting out the slice between w1 and w2,we construct the tree ??
= ?
[?|w2 ]w1 .
Moreover,we construct the runs ?
?p and ?
?q accordingly, i.e.,?
?x = ?x[?x|w2 ]w1 .We have that ???p?
6= 0, ???q?
6= 0, because oth-erwise (iv) would be violated.
Since S is zero-sum free, we obtain J?
?Kp 6= 0, J?
?Kq 6= 0.
3 Decidability of the Twins PropertyThis section contains our main theorem:Theorem 3.1 The twins property of wta over ex-tremal semifields is decidable.The following subsections provide the infra-structure and lemmata needed for the proof of thetheorem.
Henceforth, we assume that S is an ex-tremal semifield.
As noted in Ex.
2.2, there is amaximal factorization (f, g).3.1 Rephrasing the Twins RelationIn the definition of TWINS(A), we deal with twovectors Jep ?
?K and Jeq ?
?K for each ?
?
C?.
Inthe following we concatenate these vectors intoone, which enables us to use a factorization.
Tothis end, we construct a wta A ?
A?
that runs twoinstances of A in parallel, as shown in Fig.
4.Let A = (Q,?, S, ?, ?)
a wta and A?
=(Q?,?, S, ?
?, ??)
be the wta obtained from A by re-naming states via q 7?
q?.
We construct the wtaA?
A?
= (Q ?
Q?,?, S, ?
?, ?
?)
where ??
coincideswith ?
and ??
on the transitions of A and A?, re-spectively; it maps all other transitions to 0; and ?
?coincides with ?
and ??
on Q and Q?, respectively.For every p, q ?
Q we define the set Tp,q ?SQ?Q?
by Tp,q = {J(ep + eq?)
?
?KA?A?
| ?
?
C?
};note that ep, eq?
?
SQ?Q?.
With this definition, weobserve the following trivial equivalence.Observation 3.2 Let p, q ?
Q.
Then (p, q) ?TWINS(A) iff for every u ?
Tp,q we have thatup 6= 0 and uq?
6= 0 implies up = uq?.For every pair (p, q) ?
SIBLINGS(A), a vectoru ?
SQ?Q?
is called a critical vector (for (p, q))if it does not fulfill the centered implication ofObs.
3.2.
Any critical vector in Tp,q thereby wit-nesses (p, q) 6?
TWINS(A).
Consequently, A hasthe twins property iff Tp,q contains no critical vec-tor for any (p, q) ?
SIBLINGS(A).
Deciding thetwins property thus amounts to searching for acritical vector.3.2 Compressing the Search SpaceIn this subsection we approach the decidabilityof the twins property by compressing the searchspace for critical vectors.
First we show that thevectors in Tp,q are scalar multiples of a finite num-ber of vectors.Lemma 3.3 Let S be a commutative, extremalsemiring.
Assume that A has the twins property.Then there is a finite set S?
?
SQ?Q?
such that forevery (p, q) ?
SIBLINGS(A) we haveTp,q ?
S ?
S?.PROOF.
We construct sets S?, S??
?
SQ?Q?
andshow the following inclusions:Tp,q ?
S ?
S??
?
S ?
S?.
(?)15?
:(ep + eq?)zp?Jep??KA?
??
?????......????p?????...1...?????
??
?epAq ?Jeq??KA?
??
?????......???
?q ?????...1...?????
??
?eqAJ(ep+eq?)??KA?A??Tp,q?
??
??????????????............?????????????p?q?
??????Q?????Q??????????????...1......1...??????????????
??
?(ep+eq?)p?q?
?A ?
A?Figure 4: Moving from parallel execution of A (left-hand side) to the union wta A ?
A?
(right-hand side).To this end, we consider each entry in each vectorto be induced by an according (victorious) run.In this spirit we define for every p, q ?
Q and?
?
C?
the set Cp,q(?)
?
R((ep + eq?)
?
?)Q?Q?
ofvectors of runs of A ?
A?
as follows: ?
?
Cp,q(?
)iff (i) ?r ?
Rr((ep + eq?)
?
?)
for every r ?
Q?
Q?and (ii) for every pair w1, w2 ?
pos(?)
with w1above w2 and ?r(w1) = ?r(w2) we have that?r|w1 is victorious on ((ep + eq?)
?
?
)|w1 .
We mapeach vector of runs to the corresponding weightvector as follows.
For every Q?
?
Q ?
Q?
let?Q?
: R((ep + eq?)
?
?)Q?Q?
?
SQ?Q?
be the map-ping such that for every ?
and q?
?
Q ?
Q?:?Q?(?)q?
={??q??
if q?
?
Q?0 otherwise.We set S??
= {?Q?(?)
| (p, q) ?
SIBLINGS(A),?
?
C?, ?
?
Cp,q(?
), Q?
?
Q?
Q?}.
The set S?
isdefined in the same way, with the additional con-dition that ht(?)
< 2|Q|2|Q|.The first inclusion of (?)
can be proved in thesame way as (B?chse, May and Vogler, 2010,Lemma 5.14).
Here we show the second inclu-sion by contradiction.
To this end, let s ?
S,(p, q) ?
SIBLINGS(A), ?
?
C?, ?
?
Cp,q(?
),and Q?
?
Q ?
Q?
such that s ?
?Q?(?)
6?
S ?
S?,and thus ht(?)
?
2|Q|2|Q|.
We can assume that??r?
6= 0 for every r ?
Q?
because otherwise wecould adjustQ?
without harm.
Finally, we assumethat ?
is smallest.We will construct a new context ?
?
and a cor-responding vector ??
?
Cp,q(?
?)
such that ?
?
issmaller than ?
and s ?
?Q?(?)
= s ?
s?
?
?Q?(??
)for some s?
?
S. Then, if the right-hand side is inS ?
S?, so is the left-hand side.
By contraposition,this shows that ?
was not a smallest counterexam-ple, yielding the contradiction.First, let w be the position in ?
labelled z. Weshow that we are able to find a pair (w1, w2) ofpositions such that w1 is above w2, ?r(w1) =?r(w2) for every r, and either both or none of w1and w2 are above w. To this end, we distinguishtwo cases (cf.
Fig.
5).
(a) If |w| ?
|Q|2|Q|, then the length of the com-mon prefix of w and any path of length at least2|Q|2|Q| can be at most |Q|2|Q|.
Hence, on such apath remain at least |Q|2|Q| + 1 positions that arenot above w. By the pidgeonhole principle, wefind said pair (w1, w2).
(b) If |w| > |Q|2|Q|, then we find the pair im-mediately on the path to the position labelled z.Second, we pick a pair (w1, w2) such that theposition w1 has minimal length.
Cutting out theslice between the positions w1 and w2 yields thesmaller context ?
?
= ?
[?|w2 ]w1 .
We construct ?
?accordingly, i.e., ?
?r = ?r[?r|w2 ]w1 for every r ?Q ?
Q?.
We have that ??
?
Cp,q(?
?
); for this we16(a)?
:w1w2?
?
?z(ep + eq?)=??
?
:w1z(ep + eq?)(b)?
:w1w2?
?
?z(ep + eq?)=??
?
:w1z(ep + eq?
)Figure 5: Two cases for the construction of ?
?
= ?
[?|w2 ]w1 .need that we chose w1 with minimal length.Third, we use the twins property to show thatthere is an s?
?
S such that s ?
?Q?(?)
= s ?
s?
??Q?(??).
If Q?
= ?, we set s?
= 0, and the proof isdone.
Otherwise we choose some r?
?
Q?
and sets?
= Je?r?
(w2)????K?r?
(w1) where ???
= ?
[z]w2 |w1 isthe slice we have cut out.
We prove that ?Q?(?)
=s???Q?(??).
To this end, let r ?
Q?, p?
= ?r(w1) =?r(w2), and q?
= ?r?
(w1) = ?r?(w2).
Then?Q?(?
)r = ??r?
= ???r|w1?
?
?r[z]w1?= ?J(??r|w2?
?
ep?)
?
???Kp?
?
?r[z]w1?
(Obs.
2.6)= ??r|w2?
?
Jep?
?
???Kp?
?
?1 ?
?r[z]w1?
(commutativity)= ??r|w2?
?
Jeq?
?
???Kq?
?
?1 ?
?r[z]w1?
(?
)= s?
?
???r|w2?
?
?r[z]w1?
(commutativity)= s?
?
???r?
= s?
?
?Q?(??
)r .At (?)
we have used the twins property.
We showthat this is justified.
First, we show that (p?, q?)
?SIBLINGS(A ?
A?).
To this end, we distinguishtwo cases.If z occurs in ?|w2 : by (p, q) ?
SIBLINGS(A)we obtain a tree ?
such that J?Kp 6= 0 and J?Kq 6=0.
By our assumption we have ??r?
6= 0, ??r??
6=0, and thus, ??r|w2?
6= 0, ??r?
|w2?
6= 0.
Since Sis extremal, and thus, zero-sum free, we obtainJ?
?
?|w2Kp?
6= 0, J?
?
?|w2Kq?
6= 0.If z does not occur in ?|w2 : we derive in a sim-ilar fashion that ??r|w2?
6= 0, ??r?
|w2?
6= 0, andthus, J?|w2Kp?
6= 0, J?|w2Kq?
6= 0.Second, by the twins property, we have that(p?, q?)
?
TWINS(A ?
A?).
Using again that??r?
6= 0, ??r??
6= 0, we derive ?
?r[z]w2 |w1?
6= 0,??r?
[z]w2 |w1?
6= 0.
Hence, Jep?
?
???Kp?
6= 0,Jeq?
?
?
??Kq?
6= 0.
Consequently, we have (?).
We note that u ?
SQ?Q?, u 6= 0?, is a criticalvector iff f(u) is a critical vector.
Hence, ap-plying the factorization to Tp,q for every (p, q) ?SIBLINGS(A) results in a compressed searchspace for critical vectors.
It follows from the pre-ceding lemma that the resulting search space isfinite.Lemma 3.4 Let (f, g) be a maximal factorizationof dimension Q?
Q?.
Assume thatA has the twinsproperty.
For every (p, q) ?
SIBLINGS(A) the setf(Tp,q \ {0?})
is finite.PROOF.
By Lemma 3.3 there is a finite set S?
withf(Tp,q \ {0?})
?
f(S ?
S?)
?
f(S?)
,where we used that (f, g) is maximal.
Since S?
isfinite, so is f(Tp,q \ {0?}).
17Algorithm 1 Decision algorithmRequire: A = (Q,?, S, ?, ?)
a wta, S commu-tative, extremal, (f, g) maximal factorizationEnsure: print ?yes?
iff A has the twins property1: compute SIBLINGS(A)2: for (p, q) ?
SIBLINGS(A) in parallel do3: for u ?
f(Tp,q \ {0?})
do4: if u is a critical vector then5: print ?no?
and terminate6: print ?yes?3.3 Two Decision AlgorithmsIn this section we consider two decision algo-rithms.
The first one is part of the following proof.PROOF (OF THM.
3.1).
Algorithm 1 proceeds asfollows.
First, it enumerates SIBLINGS(A).
Thisis possible as shown by Obs.
2.8.
Second, for each(p, q) ?
SIBLINGS(A) in parallel, it enumeratesf(Tp,q \ {0?
}), checking for critical vectors.
Forthis step, we distinguish two cases.Either A has the twins property.
Then, byLemma 3.4, f(Tp,q \ {0?})
is finite, and the algo-rithm will terminate without finding any criticalvector, in which case it outputs ?yes?.OrA does not have the twins property, but then,by Obs.
3.2, the algorithm is guaranteed to finda critical vector at some point, in which case itoutputs ?no?.
Note that the parallel processing(line 2) is critical in this case because there maybe (p, q) ?
SIBLINGS(A) such that f(Tp,q \ {0?
})is infinite, but does not contain a critical vector.
Note that Algorithm 1 basically enumerates theset?
(p,q)?SIBLINGS(A) f(Tp,q \ {0?}).
In principle,this can be done by enumerating C?
and comput-ing fJ(ep + eq?)
?
?K for each ?
?
C?.
However,the computation of weights already done for sub-contexts of ?
is not reused in this approach.In the following we show an alternative proce-dure (Algorithm 2) that does not enumerate C?explicitly but works on weight vectors instead,thereby avoiding redundant calculation.
This pro-cedure maintains a pair of subsets of SQ?Q?.
Itbegins with (?, ?)
and keeps adding vectors byapplying a monotone operation F until either thesecond component contains a critical vector or nonew vectors are added.To this end, we define the unary operation Fover pairs of subsets of SQ?Q?
by (T,C) 7?Algorithm 2 Improved decision algorithmRequire: A = (Q,?, S, ?, ?)
a wta, S commu-tative, extremal, (f, g) maximal factorizationEnsure: print ?yes?
iff A has the twins property1: compute SIBLINGS(A)2: (T,C)?
(?, ?
)3: repeat4: (T ?, C ?)?
(T,C)5: (T,C)?
F (T ?, C ?)
.
uses SIBLINGS(A)6: until C contains critical vector or C = C ?7: if critical vector has been found then8: print ?no?9: else10: print ?yes?
(T ?, C ?)
where T ?
and C ?
contain exactly the fol-lowing elements:(F1) for every k ?
0, ?
?
?
(k), andu1, .
.
.
, uk ?
T , if J?
(u1, .
.
.
, uk)K 6= 0?,then fJ?
(u1, .
.
.
, uk)K ?
T ?,(F2) for every (p, q) ?
SIBLINGS(A), we havef(ep + eq?)
?
C ?,(F3) for every k ?
1, ?
?
?
(k), i ?
{1, .
.
.
, k},ui ?
C, and u1, .
.
.
, ui?1, ui+1, .
.
.
, uk ?T , if J?
(u1, .
.
.
, uk)K 6= 0?, thenfJ?
(u1, .
.
.
, uk)K ?
C ?.Kleene?s fixpoint theorem (Wechler, 1992,Sec.
1.5.2, Theorem 7) yields that F has a leastfixpoint (where we use the pointwise subset or-der), and that it can be calculated by the satura-tion procedure outlined above.
In the forthcomingLemma 3.6, we show that said fixpoint containsthe desired set?
(p,q)?SIBLINGS(A) f(Tp,q \ {0?
}).This implies both the correctness of our procedureand its termination, by the same line of reasoningas for Algorithm 1.
As a preparation we recall twoauxiliary statements.Observation 3.5 Let S be commutative and(f, g) maximal.
Then for every k ?
0, ?
?
?
(k),and ?1, .
.
.
, ?k ?
T?
(SQ), we have thatJ?
(?1, .
.
.
, ?k)K = J?
(J?1K, .
.
.
, J?kK)K andfJ?
(J?1K, .
.
.
, J?kK)K = fJ?
(fJ?1K, .
.
.
, fJ?kK)K.PROOF.
By (F?l?p and Vogler, 2009, Sec 3.2)and (B?chse, May and Vogler, 2010, Lemma 5.5),respectively.
Lemma 3.6 Let (T f , Cf ) be the least fixpointof F .
Then (i) T f = f(JT?K \ {0?})
and (ii) Cf =?
(p,q)?SIBLINGS(A) f(Tp,q \ {0?}).18PROOF.
In this proof we will often use Obs.
3.5.For ???
of Statement (i), we refer to (B?chse,May and Vogler, 2010, Lemma 5.8).We prove ???
of Statement (i) by contradic-tion.
To this end, let ?
?
T?
a smallest tree suchthat J?K 6= 0?
and fJ?K 6?
T f .
By definition of T?,there are k ?
0, ?
?
?
(k), and ?1, .
.
.
, ?k ?
T?such that ?
= ?
(?1, .
.
.
, ?k).
We derivefJ?
(?1, .
.
.
, ?k)K = fJ?
(J?1K, .
.
.
, J?kK)K= fJ?
(fJ?1K, .
.
.
, fJ?kK)K .Now either fJ?iK ?
T f for every i ?
{1, .
.
.
, k},but then so is fJ?K, or ?
was not the smallest coun-terexample.For ???
of Statement (ii), we show that(T f ,?
(p,q)?SIBLINGS(A) f(Tp,q \ {0?
}))is a pre-fixpoint of F .
It is easy to see that (F1) and (F2)hold.
Now let k, ?, i, u1, .
.
.
, uk as in (F3) suchthat J?
(u1, .
.
.
, uk)K 6= 0?.
Hence, u1, .
.
.
, uk 6=0?.
By (i) there are ?1, .
.
.
, ?i?1, ?i+1, .
.
.
, ?k suchthat uj = fJ?jK for j 6= i.
Moreover there are(p, q) ?
SIBLINGS(A) and ?i ?
C?
such thatui = fJ(ep + eq?)
?
?iK.
We derivefJ?
(u1, .
.
.
, uk)K= fJ?
(fJ?1K, .
.
.
, fJ(ep + eq?)
?
?iK, .
.
.
, fJ?kK)K= fJ?
(J?1K, .
.
.
, J(ep + eq?)
?
?iK, .
.
.
, J?kK)K= fJ?
(?1, .
.
.
, (ep + eq?)
?
?i, .
.
.
, ?k)K= fJ(ep + eq?)
?
?
(?1, .
.
.
, ?i, .
.
.
, ?k)K ,which, by definition, is in f(Tp,q \ {0?
}).We prove ???
of (ii) by contradiction.
Tothis end, let (p, q) ?
SIBLINGS(A) and ?
?C?
a smallest context such that fJ(ep + eq?)
?
?K ?
f(Tp,q \ {0?})
\ Cf .
Hence, J(ep + eq?)
?
?K 6= 0?.
By (F2), we obtain ?
6= z. Hence,there are k ?
1, ?
?
?
(k), i ?
{1, .
.
.
, k},?1, .
.
.
, ?i?1, ?i+1, .
.
.
, ?k ?
T?, and ?i ?
C?such that ?
= ?
(?1, .
.
.
, ?i?1, ?i, ?i+1, .
.
.
, ?k).We have that J?jK 6= 0?
for j 6= i, and J(ep +eq?)
?
?iK 6= 0?.
We derivefJ(ep + eq?)
?
?K= fJ(ep + eq?)
?
?
(?1, .
.
.
, ?i, .
.
.
, ?k)K= fJ?
(?1, .
.
.
, (ep + eq?)
?
?i, .
.
.
, ?k)K= fJ?
(J?1K, .
.
.
, J(ep + eq?)
?
?iK, .
.
.
, J?kK)K= fJ?
(fJ?1K, .
.
.
, fJ(ep + eq?)
?
?iK, .
.
.
, fJ?kK)KBy (i), we have that fJ?jK ?
T f .
Now ei-ther fJ(ep + eq?)
?
?iK ?
Cf , but then so isfJ(ep + eq?)
?
?K, or ?
was not the smallest coun-terexample.
4 Discussion and Further ResearchThe notion that the twins property can be decidedby searching for critical vectors in a compressedsearch space is due to Kirsten (2012).
We havegeneralized his work in two ways: (i) We allowarbitrary extremal semifields instead of the trop-ical semiring.
To this end, we use the notion ofa maximal factorization, which is implicit in hiswork.
(ii) We consider weighted tree automatainstead of weighted string automata.
This makesthe proof more complex, as we have to distinguishbetween contexts and trees.Kirsten?s result that deciding the twins propertyis PSPACE-hard directly transfers to our setting,giving a lower bound on the complexity of our al-gorithms.
In addition, he shows that the problemis PSPACE-complete by giving an algorithm thatis in PSPACE.
We did not investigate whether thisresult can be transferred to our setting as well.To check for critical vectors, Algorithm 1 doesnot need all components from the vectors in Tp,qbut only the p- and q?-components; thus in theproof of Lemma 3.3 the height restriction ht(?)
?2|Q|2|Q| for S?
can ultimately be lowered toht(?)
?
2|Q|2.
It is an open question which ofthe two algorithms performs better in practice.For further research, it would be interestingto investigate sufficient properties for determiniz-ability that do not require the semifield to be ex-tremal.
Then the determinized wta could truly ag-gregate the weights of the original runs.AcknowledgmentsThe authors wish to thank Heiko Vogler for stim-ulating remarks on a draft, as well as the anony-mous referees for pointing out mistakes.
Thefirst author was financially supported by DFG VO1011/6-1.ReferencesB?chse, Matthias and May, Jonathan and Vogler,Heiko.
2010.
Determinization of Weighted TreeAutomata using Factorizations.
J. Autom.
Lang.Comb., 15(3/4).Casacuberta, Francisco and de la Higuera, Colin.2000.
Computational complexity of problems on19probabilistic grammars and transducers.
In Proc.ICGI, LNCS.
Springer.Chiang, David.
2007.
Hierarchical phrase-basedtranslation.
Comp.
Ling., 33(2):201?228.Droste, Manfred and Kuich, Werner and Vogler,Heiko, editors.
2009.
Handbook of Weighted Au-tomata.
EATCS Monographs in Theoretical Com-puter Science.
Springer.Eppstein, David.
1998.
Finding the k shortest paths.SIAM Journal on Computing, 28(2):652?673.
?sik, Zolt?n and Kuich, Werner.
2003.
Formal treeseries.
J. Autom.
Lang.
Comb., 8(2):219?285.F?l?p, Zolt?n and Vogler, Heiko.
2009.
Weighted treeautomata and tree transducers.
In (Droste, Kuichand Vogler, 2009), Chapter 9.Goguen, Joseph.
A. and Thatcher, James W. and Wag-ner, Eric G. and Wright, Jesse B.
1977.
Initial Al-gebra Semantics and Continuous Algebras.
J. ACM,24(1):68?95.Golan, Jonathan Samuel.
1999.
Semirings and theirApplications.
Kluwer Academic Publishers.Graehl, Jonathan and Knight, Kevin and May,Jonathan.
2008.
Training tree transducers.
Comp.Ling., 34(3):391?427.Hebisch, Udo and Weinert, Hanns Joachim.
1998.Semirings: Algebraic Theory and Applications inComputer Science, Series in Algebra, volume 5.World Scientific.Huang, Liang and Chiang, David.
2005.
Better k-bestparsing.
In Proc.
IWPT, pp.
53?64.
ACL.Kirsten, Daniel.
2012.
Decidability, Undecidability,and PSPACE-Completeness of the Twins Propertyin the Tropical Semiring.
Theoretical ComputerScience, 420:56?63.Kirsten, Daniel and M?urer, Ina.
2005.
On the deter-minization of weighted automata.
J. Autom.
Lang.Comb., 10:287?312.Li, Zhifei and Eisner, Jason and Khudanpur, Sanjeev.2009.
Variational decoding for statistical machinetranslation.
In Proc.
ACL-IJCNLP, pp.
593?601.ACL.Mahr, Bernd.
1984.
Iteration and summabilityin semirings.
Annals of Discrete Mathematics,19:229?256.May, Jonathan and Knight, Kevin.
2006.
A better N-best list: practical determinization of weighted fi-nite tree automata.
In Proc.
NAACL-HLT, pp.
351?358.
ACL.Pauls, Adam and Klein, Dan.
2009. k-best A* pars-ing.
In Proc.
ACL-IJCNLP, pp.
958?966.
ACL.Petrov, Slav and Barrett, Leon and Thibaux, Romainand Klein, Dan.
2006.
Learning accurate, com-pact, and interpretable tree annotation.
In Proc.COLING-ACL, pp.
433-440.Sima?an, Khalil.
1996.
Computational complexityof probabilistic disambiguation by means of tree-grammars.
In Proc.
COLING, pp.
1175?1180.ACL.Wechler, Wolfgang.
1992.
Universal Algebra forComputer Scientists, volume 25 of Monogr.
Theo-ret.
Comput.
Sci.
EATCS Ser.
Springer.Zhang, Min and Jiang, Hongfei and Aw, Aiti and Li,Haizhou and Tanm, Chew Lim and Li, Sheng 2008.A tree sequence alignment-based tree-to-tree trans-lation model.
In Proc.
ACL, pp.
559?567.
ACL.20
