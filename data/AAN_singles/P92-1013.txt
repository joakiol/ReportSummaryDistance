ACCOMMODATING CONTEXT CHANGEBonnie Lynn  Webber  and Breck BaldwinDepar tment  of Computer  and In format ion ScienceUniversity of Pennsy lvaniaPhi ladelphia,  PA 19104-6389Interact :  {bonnie~central ,breck@linc}.c is .upenn.edu*ABSTRACTTwo independent mechanisms of context changehave been discussed separately in the literature -context change by entity introduction and contextchange by event simulation.
Here we discuss theirintegration.
The effectiveness of the integration de-pends in part on a representation f events that cap-tures people's uncertainty about their outcome - inparticular, people's incomplete xpectations aboutthe changes effected by events.
We propose such arepresentation a d a process of accommodation thatmakes use of it, and discuss our initial implementa-tion of these ideas.I n t roduct ionConsider the following example:Example  1John made a handbag from an inner-tube.a.
He sold it for twenty dollars.b.
*He sold them for fifty dollars.c.
He had taken it from his brother's car.d.
Neither of them was particularly useful.Here two entities are introduced via indefinite nounphrases (NPs) in the first sentence.
The alternativefollow-ons (a-d) show that subsequent reference tothose entities is constrained.
In particular, (b) high-lights the difference in their existential status, eventhough there is no syntactic difference in how theyare introduced.
Now consider*This work was partially supported by ARO grant DAAL03-89-C-0031, DARPA grant N00014-90-J-1863, and NSFgrant IRI 90-16592 to the University of Pennsylvania.
Thepaper draws upon material first presented at the workshop onDefensible Reasoning in Semantics and Pragmatics held atthe European Summer School on Logic, Language and Infor-mation, Saarbr~cken, Germany, August 1991.Example 2Mix the flour, butter and water.a.
Knead the dough until smooth and shiny.b.
Spread the paste over the blueberries.c.
Stir the batter until all lumps are gone.In each of the alternative follow-on (a-c), a differentdefinite NP refers to the result of the mixing, eventhough the terms "dough", "paste" and "batter" arenot interchangeable.
(They denote substances withdifferent consistencies, from a pliant solid - dough -to a liquid - batter.
)In both these examples, events 1 are mentionedthat change the world being described.
These exam-ples will be used to show why the two mechanismsof context change discussed separately in the litera-ture (context change by entity introduction and con-text change by event simulation) must be integrated(Section 2).
For such integration to be effective, weargue that it must be based on a representation fevents that captures people's uncertainty about heiroutcome - in particular, people's incomplete xpec-tations about he changes effected by events.
An un-derstanding system can then use these expectationsto accommodate \[15\] the particular changes that arementioned in subsequent discourse (Section 3).
InSection 4, we discuss our initial implementation fthese ideas.This work is being carried out as part of a project(AnlmNL) aimed at creating animated task simu-lations from Natural Language instructions \[2; 4; 5;6; 7; 14; 20\].
Instructions are a form of text rich inthe specification ofevents intended to alter the worldin some way.
Because of this, the issues discussed inthis paper are particularly important to both under-standing and generating instructions.961Event is used informally to mean any kind of action orprocess .Mechanisms of ContextChangeComputational Linguistics research as recognizedtwo independent mechanisms of context change.
Thefirst to have been recognized might be called contextchange by entity introduction.
It was first imple-mented in Woods' question-answering system LU-NAR \[21; 22\].
For each non-anaphoric referentialnoun phrase (NP) in a question, including a ques-tioned NP itself, LUNAR would create a new con-stant symbol to represent the new entity, putting anappropriate description on its property list.
For ex-ample, if asked the question "Which breccias containmolybdenum?
", LUNAR would create one new con-stant to represent molybdenum and another to repre-sent the set of breccias which contain molybdenum.Each new constant would be added to the front ofLUNAR's history list, thereby making it available asa potential referent for subsequent pronominal anddefinite NP anaphors (e.g.
"Do they also contain ti-tanium?").
Webber \[19\] further developed this pro-cedure for introducing and characterizing discourseentities available for anaphoric referenceA similar mechanism of context change is embed-ded in formal dynamic theories of discourse, includ-ing Kamp's Discourse Representation Theory \[11\]and Heim's File Change Semantics \[10\].
We brieflydescribe Heim's approach, to show this similarity.Heim's files constitute an intermediate l vel of rep-resentation between the sentences of a text and themodel which gives them their truth values.
A sen-tence can be viewed as denoting a function from aninput file to an output file.
Each indefinite NP ina sentence requires a new file card in the output filewhich does not appear in the input file, on whichis inscribed the properties of the new entity.
Eachdefinite NP must either map to an existing file cardor have a semantic association with an existing card,allowing it to be accommodated into the discourse.In the latter case, a new file card is inserted in theinput file which the definite NP is now taken as map-ping to.
Context change therefore consists of newannotations to existing cards and new cards addedfor indefinite NPs and accommodated definite NPs.The files do not change in any other way that reflectsevents described in the text.Formal theories of discourse have been broadenedto allow for types of "embedded contexts" associatedwith modals \[17\] and with propositional ttitudes \[1\].Although they have also begun to deal with problemsof tense and the temporal relationship of events de-97scribed in a text \[12; 16\], there is still no connectionbetween the events described in a text and the indi-viduals introduced therein.Context change by event simulation is a feature ofDale's recent Natural Language generation systemEPICURE \[3\], which generates recipe texts from anunderlying plan representation.
In EPICURE, the in-dividuals available for reference change in step withthe events described in the text.
~ In a sense, EPI-CURE is simulating the effects of the events that thetext describes.In implementing this, Dale represents actions withSTRIPS-like operators which can change the worldfrom one state to another.
Each object and state inEPICURE has a unique index, with the set of ob-jects available in a given state constituting its work-ing set.
With respect o objects 3, an action can havetwo types of effects: it can change a property of anobject (e.g., from being an individual carrot to be-ing a mass of grated carrot), or it can add an objectto or remove it from the world, as represented inthe current working set (e.g., flour disappears as anindependent entity when combined with water, anddough appears).
The preconditions and postcondi-tions of each action indicate the objects required inthe working set for its performance and the changesit makes to objects in the working set as a result.For example, ADD (in the sense of "add X to Y")has as preconditions that X and Y be in the currentworking set and as post-conditions, that X and Yare absent from the resulting working set and a newobject Z is present whose constituents are X and Y.The form of recipe that EPICURE generates i thecommon one in which a list of ingredients i followedby instructions as to what to do with them.
Thusall entities are introduced to the reader in this ini-tial list (e.g., "four ounces of butter beans", "a largeonion", "some sea salt", etc.)
before any mention ofthe events that will (deterministically) change theirproperties or their existential status.
As a result, inthe text of the recipe, EPICURE only embodies con-text change by event simulation: no new entities areintroduced in the text that are not already knownfrom the list of ingredients.2In earlier work, Grosz \[8\] noticed that in task-oriented di-alogues, the performance of actions could alter what objectsthe speakers would take to be in .focus and hence take as theintended referents of definite pronouns and NPs.
However, ac-tual changes in the properties and existential status of objectsdue to actions were not part of Grosz' study.ZDale construes and also implements the notion of objectvery broadly, so that the term applies equally well to a two-pound package of parsnips and a tablespoon of saltOur work on integrating these two mechanisms ofcontext change involves dropping Dale's assumptionthat states are complete specifications of an underly-ing model.
(To emphasize that descriptions are par-tial, we will use the term situation rather than state.
)As in EP ICURE,  actions are represented here by op-erators - functions from one situation to another.The meaning of a clause is given in terms of theseoperators.
4 Also as in EP ICURE,  the term workingset is used for the set of entities in the discourse con-text.
For clarity, we refer to the working set associ-ated with the situation prior to the described eventas the WSi, and the working set associated with thesituation after it as the WSo.
An indefinite NP inthe clause may introduce an entity into the WSi.
Al-ternatively, it may denote an entity in the WSo thatcorresponds to a result of the event being described.Whether an entity introduced into WSi persists intoWSo will depend on the particular event.
This ischaracterized as in EPICURE by preconditions onWSi and postconditions on WSo, plus a default as-sumption, that if an action is not known to affect anobject and the text does not indicate that the objecthas been affected, then one assumes it has not been.For example, consider an operator correspondingto MAKE X FROM Y (in the sense used in Exam-ple 1).
Its precondition is that X is in WSi.
Itspostconditions are that X is not in WSo, Y is inWSo, and mainConstituentOf(Y,X).
In response tothe sentence "John made a handbag from an inner-tube" (or alternatively, "John made an inner-tubeinto a handbag"), a new entity (xx) correspondingto inner-tube would be introduced into the currentWSi.
The situation resulting from the MAKE actioncontains a new entity (z2) corresponding to its prod-uct, which is what "a handbag" is taken to denote.The postconditions on MAKE specify that zl  doesnot persist into WSo as a separate object.
5Now consider the alternative follow-ons to Exam-ple 1.
The sentenceHe sold it for $20.describes a subsequent event.
Its WSi is the WSo ofthe previous utterance, augmented by an entity in-troduced by the NP $20.
Entities introduced into4We are ignor ing a c lause's  aspectua l  character  here - thatit may  not  imply the complet ion of  the denoted action.
Whatis offered here are necessary but  not  sufficient features of asolut ion.SNon-destruct ive construct ive  act ions such as "bui ld",  "as-semble",  etc.
(e.g.
"bui ld a house of Lego blocks") do nothave this property:  const i tuent  entit ies reta in their individualexistence.98WSi that persist through to WSo continue to beavailable for reference in clauses describing subse-quent events, as illustrated by the subsequent ref-erence to John ('?ne") above.The alternative follow-onHe had taken it from his brother's car.describes the situation prior to the previous event.Its WSi is the WSi of the previous event, aug-mented by entities corresponding to "his brother"and "his brother's car.
The only way to referanaphorically to entities from different working setsis with a follow-on that refers aternporally across sit-uations (e.g.
"Neither of them was particularly use-ful).To date, we have not found any individual eventdescriptions whose semantics requires specifyingmore than the situations prior to and following theevent.
This is not to say that events cannot bedescribed in terms of a sequence of situations (e.g.
"John began to mix the flour, butter and water.He mixed them for 5 minutes.
He finished mixingthem.").
The point is that the semantics of a singleevent description appears to require no more thanspecifying properties of WSi and WSo.Before discussing Example 2 in detail in the nextsection, we would like to draw the reader's attentionto two variations of that example:ExAmple  3a.
Mix the flour and butter into a dough.b.
Mix the nuts and butter into the dough.What is of interest is the different roles that theprepositional phrase plays in these two cases and howthey are disambiguated.
In 3a, "into a dough" speci-fies the goal of the mixing.
An operator epresentingthis sense of MIX X INTO Y would, like the operatorfor MAKE Y FROM X above, have as its preconditionthat X is in WSi.
Its post-conditions are that Y is inWSo and that constituentsOf(Y,X).
In response to3a, the definite NP "the flour and butter" would haveto be resolved against entities already in WSi, while"a dough" would be taken to denote the new entityentered into WSo, corresponding to the product ofthe mixing.In 3b however, "into the dough" specifies the des-tination of the ingredients, with mixing having thisadditional sense of translational motion.
An opera-tor representing this sense of MIX X INTO Y wouldhave as its precondition that both X and Y are inWSi.
Its post-conditions are that Y is in WSo andthat X is added to the set of constituents of Y. Inresponse to 3b, not only would the definite NP "thenuts and butter" have to be resolved against entitiesalready in WSI, but "the dough" would have to beso resolved as well.With a definite NP in a MIX INTO prepositionalphrase, disambiguating between these two senses issimple: it can only be the latter sense, because ofthe precondition that its referent already be in WSi.With an indefinite NP however, it can only be a mat-ter of preference for the first sense.Expectat ion and Accommoda-tionFor the integration proposed above to effectivelyhandle Example 4 below (Example 2 from the Intro-duction) and Example 5, one needs both a more ac-curate representation f people's beliefs about eventsand a way of dealing with those beliefs.Example  4Mix the flour, butter and water.a.
Knead the dough until smooth and shiny.b.
Spread the paste over the blueberries.c.
Stir the batter until all lumps are gone.Example  5John carved his father a chair for his birthday.a.
The wood came from Madagascar.b.
The marble came from Vermont.If the definite NPs in examples 4 and 5 are taken asdefinite by virtue of their association with the pre-viously mentioned event (just as definites have longbeen noted as being felicitous by virtue of their as-sociation with previously mentioned objects), thenExample 4 shows people associating a variety of dif-ferent results with the same action and Example 5,a variety of different inputs.
To deal with this, weargue for1.
characterizing an agent's knowledge of an actionin terms of partial constraints on its WSi andpartial expectations about its WSo;2. accommodating \[15\] definite NPs in subsequentutterances as instantiating either a partial con-straint in WSi or a partial expectation i WSo.There appear to be three ways in which an agent'sknowledge of an action's constraints and expecta-tions may be partial, each of which manifests it-self somewhat differently in discourse: the knowledgemay be abstract, it may be disjunctive, or it may in-volve options that may or may not be realized.Abst ract  Knowledge.
An agent may believe thatan action has a predictable result, without being ableto give its particulars.
For example, an agent mayknow that when she adds white paint to any othercolor paint, she gets paint of a lighter color.
Its par-ticular color will depend on the color of the originalpaint and the amount of white she adds.
In suchcases, one might want to characterize the agent'spartial beliefs as abstract descriptions.
The agentmay then bring those beliefs to bear in generatingor understanding text describing events.
That  is, inboth narrative and instructions, the speaker is takento know more about what has happened (or shouldhappen) than the listener.
The listener may thusnot be able immediately to form specific expectationsabout the results of described events.
But she canaccommodate \[15\] a definite NP that can be takento denote an instantiation of those expectations.In Example 4, for example, one might character-ize the agent's expectation about the object result-ing from a blending or mixing action abstractly as amizture.
Given an instruction to mix or blend some-thing, the agent can then accommodate a subsequentdefinite reference to a particular kind of mixture - abatter, a paste or a dough - as instantiating this ex-pectation.An agent's knowledge of the input constraints onan action may be similarly abstract, characterizing,for example, the input to "carve" as a unit of solidmaterial.
Having been told about a particular carv-ing action, a listener can understand reference to aunit of particular material (stone, wood, ice, etc.)
asinstantiating this input object.D is junct ive  Knowledge.
An experienced agenthas, for example, alternative xpectations about theresult of beating oil into egg yolks: the resulting ob-ject will be either an emulsion (i.e., mayonnaise) or acurdled mass of egg yolk globules floating in oil.
Mostoften, one of the disjuncts will correspond to the in-tended result of the action, although "intended" doesnot necessarily imply "likely".
(The result may infact be quite unpredictable.)
In a text, the disjunc-tive knowledge that an agent has, or is meant o have,about actions is manifest in the descriptions given ofall (or several) alternatives.
Often, the unintendedalternatives are presented in a conditional mood.Opt ions .
A third type of partial knowledge that anagent may have about an action is that it may or maynot produce a particular, usually secondary, result,depending on circumstances.
As with disjunctive x-pectations, these results are unpredictable.
A corn-99mon way to specify options such as these in recipesis with the '~f any" construction, as inEx-mple  6Saute garlic until lightly browned.
Removethe burnt bits, if any, before continuing.Our work to date has focussed on modelling anagent's abstract knowledge of actions and how itcan be used in updating context and accommodat-ing subsequent referring expressions, as in Exam-ples 4 and 5. e These abstract constraints and ex-pectations can be applied immediately as a clausedescribing their associated action is processed.
Con-text changes will then reflect explicit lexical material,when present, as inMix the flour, butter and water into a paste.or simply the agent's (abstract) expectations, whenexplicit lexical material is not present, as inMix the flour, butter and water.In the latter case, a subsequent definite NP denotinga particular kind of mixture (the solution, the paste,etc) can be taken as referring to an entity that is inthe current working set, merely refining its descrip-tion, as in Example 4 above.In i t ia l  Imp lementat ionEntity Introduction and EliminationThe Natural Language and reasoning componentsof the AnimNL project are being implemented inProlog.
In our initial implementation f contextchange, entities can be entered into the context byeither entity introduction or event simulation, butthey are never actually removed.
Instead, actions aretreated as changing the properties of entities, whichmay make them inaccessible to subsequent actions.For example, mixing flour, butter and water (Exam-pies 3a and 4) is understood as changing the prop-erties of the three ingredients, o that they are nolonger subject o independent manipulation.
(Herewe are following Hayes' treatment of "liquid pieces"\[9\] which holds, for example, that the piece of wa-ter that was in a container still "exists" even afterbeing poured into a lake: It is just no longer indepen-dently accessible.)
This approach seems to simplifyeTenenberg has used an abstraction hierarchy ofaction de-scriptions to simplify the task of planning \[18\], and Kautz,to simplify plan inference \[13\].
This same knowledge can beapplied to language processing.100re~rence res~ution decisions, but we are not rigidlycommitted to it.The mechanism for changing propert~s and intro-ducing entit~s uses STRIPS-like operators such asmix(E,X,Y)precond: \[manipulable(X)\]delete: \[manipulable(X)\]postcond: \[mixture(Y) k manipulable(Y)& constituentsOf(Y,X)\]which would be instantiated in the case of mixingflour, butter and water tomix(el , ( f ,w,b},m) & f lour ( f )  ?
water(w)butter(b)  ~ de f in i te ( ( f ,w ,b})precond: \[manipulable({f,w,b})\]de le te :  \[manipulable({f,w,b})\]postcond:  \[mixture(m) ~ manipulable(m)k const ituentsOf(m,~f,w,b~)\]The predicate in the header definite({f.w,b}) isan instruction to the back chainer that unique an-tecedents need to be found for each member of theset.
(In recipes, the antecedents may be providedthrough either the previous discourse or the ingredi-ents list.)
If de f in i te  is absent, as in the case ofinterpreting "mix some flour, water and butter" ,theback chainer introduces new entities into the work-ing set.
It also inserts into the working set a new en-tity corresponding to the postcondition mixture(m),whether this entity has a lexical realization (as in Ex-ample 3a) or not (as in Example 4).Abstract Knowledge of ActionsThe mix operator shown above introduces a new en-tity in the WSo mixture(m) which is the the resultof successful mixing.
The definite NP in Example 4a"the dough" both takes m as an antecedent and pro-vides more information about m's make-up - that itis dough.
The definite reference resolution algorithmapplies the knowledge that the existence of a mixturein the discourse is consistent with that mixture beingdough, and the discourse is updated with dough(m).The application of unsound inference, in this casethat the mixture is dough (or in 4b, paste, or in 4c,batter) is supported in a backchaining environmentvia the following axioms:\[mixture(X)\] ==> \[dough(X)\]\[mixture(X)\] ==> \[paste(X)\]\[mixture(X)\] ==> \[batter(X)\]This axiomatization is problematic in not prevent-ing the back chainer from proving that the mixturewhich was subsequently referred to as dough, is alsoa batter.
That is, there is no mechanism which treatsthe axioms as being mutually exclusive.
This is han-dled by a consistency checker which takes every newassertation to the discourse model, and determinesthat it is consistent with all 1-place relations thathold of the entity.Disjunctive Knowledge about ActionsThe various forms of partial specification of actionscan be represented as explicit disjunction in an ac-tion knowledge base/  For example, mix has sev-eral operator realizations that reflect the action'scompletion and its success.
The first category of(un)successfully (in)completed actions is representedby an event modifier which determines which actiondescription is pulled from the action KB.
In the caseof mixing, successfully completed actions are repre-sented more fully as:mix(E,X,M) ~ complete(El ~ successful(Elprecond: \[manipulable (X)\]delete : \[manipulable(X)\]postcond: \[mixture(M) k manipulable(N)constituentsOf (M, X)\]This is the same basic representation as before, ex-cept with the 'to be mixed' entities unspecified, andthe event modifiers added.Agents differ in their expectations about incom-plete mixing action.
The following entry has thesame preconditions and delete list as above, but thepost-condition differs in that there is no mixture in-troduced to the discourse.mix(E,X) ~ incomplete(E)precond: \[manipulable (X)\]delete: \[manipulable(X)\]postcond: \[\]A different agent could have a different characteriza-tion of incomplete mixings - for example, a postcon-dition introducing an entity describable as mess (m),or incomplete\_mixture(m).
The point is that de-gree of completion does effect he introduction of newentities into the discourse model.
One can envisionother event modifiers that change the impact of anaction on the WSo, either with properties of entitieschanging or individuals being introduced or not.7An abstraction hierarchy has not yet been constructed.The next class of disjunctive action descriptionsare those that introduce contingencies that are notnaturally handled by event modifiers as above.
Con-sider the following representations of two differentoutcomes of sauteing arlic:saute(E,Y,X) k complete(Elprecond: \[sauteable(Y)\]delete: \[\]postcond: \[sauteed(Y) ?
burnt_b i t s (X) \ ]saute(E,Y) & complete(E)precond: \[sauteable(Y)\]delete: \[\]postcond: \[sauteed(Y)\]The only difference in the entries is that one intro-duces burnt bits and the other does not.
Ideally, onewould like to combine these representations under asingle, more abstract entry, such as proposed in \[18\].Even with appropriate abstract operators though,the fact that we are modelling discourse introducesa further complication.
That is, instructions mayaddress everal contingencies in the discourse, so theissue is not that one must be chosen for the discourse,but any number may be mentioned, for exampleExample 7Dribble I /2 c. oil into the egg yolks, beatingsteadily.
If you do this carefully, the resultwill be mayonnaise.
If it curdles, start again.This is a substantial challenge to representing themeaning of instructions in the discourse model be-cause (as above) the various outcomes of an actionmay be mutually exclusive.
Here, successful comple-tion of the action introduces 'mayonnaise(m)' intothe discourse model, while unsuccessful completionintroduces 'curdled_mess(m)'.One possible solution is to partition the discoursemodel into different contexts, corresponding to dif-ferent outcomes.
This too has been left for futureexploration.101ConclusionWe hope to have shown that is is both necessaryand possible to integrate the two types of contextchange mechanisms previously discussed in the lit-erature.
The proposed integration requires sensitiv-ity to both syntactic/semantic features of NaturalLanguage text (such as definiteness, tense, mood,etc)and to the same beliefs about actions that an agentuses in planning and plan inference.
As such, onehas some hope that as we become more able to en-dow Natural Language systems with abilities to planand recognize the plans of others, we will also be ableto endow them with greater language processing ca-pabilities as well.References\[1\] Asher, N. A Typology for Attitude Verbs andtheir Anaphoric Properties.
Linguistics andPhilosophy 10(2), May 1987, pp.
125-198.\[2\] Norman Badler, Bonnie Webber, Jeff Esakovand Jugal Kalita.
Animation from Instruc-tions.
Making Them Move: Mechanics, Con-trol and Animation of Articulated Figures.Morgan-Kaufmann, 1990.\[3\] Dale, R. Generating Referring Expressions:Constructing Descriptions in a Domain of Ob-jects and Processes.
PhD Thesis, University ofEdinburgh, 1989.
(Cambridge MA: MIT Press,forthcoming).\[4\] Di Eugenio, B.
Action Representation forNat-ural Language Instructions.
Proc.
1991 AnnualMeeting of the Assoc.
for Computational Lin-guistics, Berkeley CA, June 1991, pp.
333-334.\[5\] Di Eugenio, B.
Understanding Natural Lan-guage Instructions: The Case of PurposeClauses.
Proc.
1992 Annual Meeting of theAssoc.
for Computational Linguistics, NewarkDL, July 1992.\[6\] Di Eugenio, B. and Webber, B.
Plan Recogni-tion in Understanding Instructions.
Proc.
FirstInt'!
Conf.
on AI Planning Systems, CollegePark MD, June 1992.\[7\] Di Eugenio, B. and White, M. On the Interpre-tation of Natural Language Instructions.
Proc.1992 Int.
Conf.
on Computational Linguistics(COLING-92), Nantes, France, July 1992.102\[8\] Grosz, B.
The Representation and Use of Fo-cus in Dialogue Understanding.
Technical Note151, Artificial Intelligence Center, SRI Interna-tional, 1977.\[9\] Hayes, Patrick.
Naive Physics I: Ontologyfor Liquids.
Reprinted in J. Hobbs and R.Moore (eds.
), Formal Theories of the Com-monsense World.
Norwood NJ: ABLEX Pub-lishing, 1985.\[10\] Heim, I.
The Semantics of Definite and Indef-inite Noun Phrases.
PhD dissertation, Univer-sity of Massachusetts, Amherst MA,  1982.\[11\] Kamp, H. A Theory of Truth and SemanticRepresentation.
In J. Groenendijk, T. Janssenand M. Stokhof (eds.
), Truth, Interpretationand Information, Dordrecht: Foris, 1981, pp.1-41.\[12\] Kamp, H. and Rohrer, C. manuscript of bookon temporal reference.
To appear.\[13\] Kautz, H. A Circumseriptive Theory of PlanRecognition.
In J. Morgan, P. Cohen and M.Pollack (eds.
), Intentions in Communication.Cambrdige MA: MIT Press, 1990.\[14\] Levison, L. Action Composition for the Ani-mation of Natural Language Instructions.
Deptof Computer & Information Science, Univ.
ofPennsylvania, Technical Report MS-CIS-91-28, September 1991.\[15\] Lewis, D. Scorekeeping in a Language Game.J.
Philosophical Logic 8, 1979, pp.
339-359.\[16\] Linguistics and Philosophy 9(1), February1986.
Special issue on Tense and Aspect in Dis-course.\[17\] Roberts, C. Modal Subordinationand Pronominal Anaphora in Discourse.
Lin-guistics and Philosophy 12(6), December 1989,pp.
683-721.\[18\] Tenenberg, J. Inheritance in Automated Plan-ning.
Proc.
Principles of Knowledge Represen-tation and Reasoning (KR'89), Morgan Kauf-mann, 1989, pp.
475-485.\[19\] Webber, B.
A Formal Approach to DiscourseAnaphora.
Technical Report 3761, Bolt Be-ranek and Newman, Cambridge MA, 1978.
(Published by Garland Press, New York,1979.
)\[20\] Webber, B., Badler, N., Di Eugenio, B., Levi-son, L. and White, M. Instructing AnimatedAgents.
Proc.
First US-Japan Workshop onIntegrated Systems in Multi-Media Environ-ments, Las Cruces NM, December 1991.\[21\] Woods, W., Kaplan, R. and Nash-Webber, B.The Lunar Sciences Natural Language Infor-mation System: Final Report.
Technical Re-port 2378, Bolt Beranek and Newman, Cam-bridge MA, 1972.\[22\] Woods, W. Semantics and Quantification iNatural Language Question Answering.
Ad-vances in Computers, Volume 17, AcademicPress, 1978.103
