Tutorial Abstracts of ACL 2010, page 2,Uppsala, Sweden, 11 July 2010. c?2010 Association for Computational LinguisticsTree-based and Forest-based TranslationYang LiuInstitute of Computing TechnologyChinese Academy of Sciencesyliu@ict.ac.cnLiang HuangInformation Sciences InstituteUniversity of Southern Californialhuang@isi.edu1 IntroductionThe past several years have witnessed rapid ad-vances in syntax-based machine translation, whichexploits natural language syntax to guide transla-tion.
Depending on the type of input, most of theseefforts can be divided into two broad categories:(a) string-based systems whose input is a string,which is simultaneously parsed and translated by asynchronous grammar (Wu, 1997; Chiang, 2005;Galley et al, 2006), and (b) tree-based systemswhose input is already a parse tree to be directlyconverted into a target tree or string (Lin, 2004;Ding and Palmer, 2005; Quirk et al, 2005; Liu etal., 2006; Huang et al, 2006).Compared with their string-based counterparts,tree-based systems offer many attractive features:they are much faster in decoding (linear time vs.cubic time), do not require sophisticated bina-rization (Zhang et al, 2006), and can use sepa-rate grammars for parsing and translation (e.g.
acontext-free grammar for the former and a treesubstitution grammar for the latter).However, despite these advantages, most tree-based systems suffer from a major drawback: theyonly use 1-best parse trees to direct translation,which potentially introduces translation mistakesdue to parsing errors (Quirk and Corston-Oliver,2006).
This situation becomes worse for resource-poor source languages without enough Treebankdata to train a high-accuracy parser.This problem can be alleviated elegantly by us-ing packed forests (Huang, 2008), which encodesexponentially many parse trees in a polynomialspace.
Forest-based systems (Mi et al, 2008; Miand Huang, 2008) thus take a packed forest insteadof a parse tree as an input.
In addition, packedforests could also be used for translation rule ex-traction, which helps alleviate the propagation ofparsing errors into rule set.
Forest-based transla-tion can be regarded as a compromise between thestring-based and tree-based methods, while com-bining the advantages of both: decoding is stillfast, yet does not commit to a single parse.
Sur-prisingly, translating a forest of millions of treesis even faster than translating 30 individual trees,and offers significantly better translation quality.This approach has since become a popular topic.2 Content OverviewThis tutorial surveys tree-based and forest-basedtranslation methods.
For each approach, we willdiscuss the two fundamental tasks: decoding,which performs the actual translation, and rule ex-traction, which learns translation rules from real-world data automatically.
Finally, we will in-troduce some more recent developments to tree-based and forest-based translation, such as treesequence based models, tree-to-tree models, jointparsing and translation, and faster decoding algo-rithms.
We will conclude our talk by pointing outsome directions for future work.3 Tutorial Overview1.
Tree-based Translation?
Motivations and Overview?
Tree-to-String Model and Decoding?
Tree-to-String Rule Extraction?
Language Model-Integrated Decoding:Cube Pruning2.
Forest-based Translation?
Packed Forest?
Forest-based Decoding?
Forest-based Rule Extraction3.
Extensions?
Tree-Sequence-to-String Models?
Tree-to-Tree Models?
Joint Parsing and Translation?
Faster Decoding Methods4.
Conclusion and Open Problems2
