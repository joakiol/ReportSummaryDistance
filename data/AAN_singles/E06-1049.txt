A Machine Learning Approach to Extract Temporal Information fromTexts in Swedish and Generate Animated 3D ScenesAnders Berglund Richard Johansson Pierre NuguesDepartment of Computer Science, LTHLund UniversitySE-221 00 Lund, Swedend98ab@efd.lth.se, {richard, pierre}@cs.lth.seAbstractCarsim is a program that automaticallyconverts narratives into 3D scenes.
Carsimconsiders authentic texts describing roadaccidents, generally collected from websites of Swedish newspapers or transcribedfrom hand-written accounts by victims ofaccidents.
One of the program?s key fea-tures is that it animates the generated sceneto visualize events.To create a consistent animation, Carsimextracts the participants mentioned in atext and identifies what they do.
In thispaper, we focus on the extraction of tem-poral relations between actions.
We firstdescribe how we detect time expressionsand events.
We then present a machinelearning technique to order the sequenceof events identified in the narratives.
Wefinally report the results we obtained.1 Extraction of Temporal Informationand Scene VisualizationCarsim is a program that generates 3D scenes fromnarratives describing road accidents (Johansson etal., 2005; Dupuy et al, 2001).
It considers au-thentic texts, generally collected from web sitesof Swedish newspapers or transcribed from hand-written accounts by victims of accidents.One of Carsim?s key features is that it animatesthe generated scene to visualize events describedin the narrative.
The text below, a newspaper arti-cle with its translation into English, illustrates thegoals and challenges of it.
We bracketed the enti-ties, time expressions, and events and we anno-tated them with identifiers, denoted respectivelyoi, tj , and ek:En {bussolycka}e1 i s?dra Afghanistankr?vdee2 {p?
torsdagen}t1 {20d?dsoffer}o1 .
Ytterligare {39personer}o2 skadadese3 i olyckane4.Busseno3 {var p?
v?g}e5 fr?n Kanda-har mot huvudstaden Kabul n?r deno4under en omk?rninge6 k?rdee7av v?gbanano5 och voltadee8,meddeladee9 general Salim Khan,bitr?dande polischef i Kandahar.TT-AFP & Dagens Nyheter, July 8,2004{20 persons}o1 diede2 in a {busaccident}e1 in southern Afghanistan{on Thursday}t1.
In addition, {39persons}o2 {were injured}e3 in theaccidente4.The buso3 {was on its way}e5 fromKandahar to the capital Kabul whenito4 {drove off}e7 the roado5 whileovertakinge6 and {flipped over}e8,saide9 General Salim Khan, assistanthead of police in Kandahar.The text above, our translation.To create a consistent animation, the programneeds to extract and understand who the partici-pants are and what they do.
In the case of the ac-cident above, it has to:1.
Detect the involved physical entities o3, o4,and o5.2.
Understand that the pronoun o4 refers to o3.3.
Detect the events e6, e7, and e8.3854.
Link the participants to the events using se-mantic roles or grammatical functions and in-fer the unmentioned vehicle that is overtaken.5.
Understand that the order of the events is e6-e7-e8.6.
Detect the time expression t1 to anchor tem-porally the animation.In this paper, we describe how we address tasks3, 5, and 6 within the Carsim program, i.e., howwe detect, interpret, and order events and how weprocess time expressions.2 Previous WorkResearch on the representation of time, events,and temporal relations dates back the beginningof logic.
It resulted in an impressive number offormulations and models.
In a review of contem-porary theories and an attempt to unify them, Ben-nett and Galton (2004) classified the most influen-tial formalisms along three lines.
A first approachis to consider events as transitions between statesas in STRIPS (Fikes and Nilsson, 1971).
A sec-ond one is to map events on temporal intervalsand to define relations between pairs of intervals.Allen?s (1984) 13 temporal relations are a widelyaccepted example of this.
A third approach is toreify events, to quantify them existentially, andto connect them to other objects using predicatesbased on action verbs and their modifiers (David-son, 1967).
The sentence John saw Mary in Lon-don on Tuesday is then translated into the logicalform: ?[Saw(, j,m)?Place(, l)?T ime(, t)].Description of relations between time, events,and verb tenses has also attracted a considerableinterest, especially in English.
Modern work ontemporal event analysis probably started with Re-ichenbach (1947), who proposed the distinctionbetween the point of speech, point of reference,and point of event in utterances.
This separationallows for a systematic description of tenses andproved to be very powerful.Many authors proposed general principles toextract automatically temporal relations betweenevents.
A basic observation is that the tempo-ral order of events is related to their narrative or-der.
Dowty (1986) investigated it and formulated aTemporal Discourse Interpretation Principle to in-terpret the advance of narrative time in a sequenceof sentences.
Lascarides and Asher (1993) de-scribed a complex logical framework to deal withevents in simple past and pluperfect sentences.Hitzeman et al (1995) proposed a constraint-based approach taking into account tense, aspect,temporal adverbials, and rhetorical structure to an-alyze a discourse.Recently, groups have used machine learn-ing techniques to determine temporal relations.They trained automatically classifiers on hand-annotated corpora.
Mani et al (2003) achievedthe best results so far by using decision trees toorder partially events of successive clauses in En-glish texts.
Boguraev and Ando (2005) is anotherexample of it for English and Li et al (2004) forChinese.3 Annotating Texts with TemporalInformationSeveral schemes have been proposed to anno-tate temporal information in texts, see Setzer andGaizauskas (2002), inter alia.
Many of them wereincompatible or incomplete and in an effort to rec-oncile and unify the field, Ingria and Pustejovsky(2002) introduced the XML-based Time markuplanguage (TimeML).TimeML is a specification language whosegoal is to capture most aspects of temporal rela-tions between events in discourses.
It is basedon Allen?s (1984) relations and a variation ofVendler?s (1967) classification of verbs.
It de-fines XML elements to annotate time expressions,events, and ?signals?.
The SIGNAL tag marks sec-tions of text indicating a temporal relation.
Itincludes function words such as later and not.TimeML also features elements to connect entitiesusing different types of links, most notably tem-poral links, TLINKs, that describe the temporal re-lation holding between events or between an eventand a time.4 A System to Convert Narratives ofRoad Accidents into 3D Scenes4.1 CarsimCarsim is a text-to-scene converter.
From a nar-rative, it creates a complete and unambiguous 3Dgeometric description, which it renders visually.Carsim considers authentic texts describing roadaccidents, generally collected from web sites ofSwedish newspapers or transcribed from hand-written accounts by victims of accidents.
One ofthe program?s key features is that it animates thegenerated scene to visualize events.386The Carsim architecture is divided into twoparts that communicate using a frame representa-tion of the text.
Carsim?s first part is a linguisticmodule that extracts information from the reportand fills the frame slots.
The second part is a vir-tual scene generator that takes the structured rep-resentation as input, creates the visual entities, andanimates them.4.2 Knowledge Representation in CarsimThe Carsim language processing module reducesthe text content to a frame representation ?
a tem-plate ?
that outlines what happened and enables aconversion to a symbolic scene.
It contains:?
Objects.
They correspond to the physical en-tities mentioned in the text.
They also includeabstract symbols that show in the scene.
Eachobject has a type, that is selected from a pre-defined, finite set.
An object?s semantics isa separate geometric entity, where its shape(and possibly its movement) is determined byits type.?
Events.
They correspond intuitively to an ac-tivity that goes on during a period in timeand here to the possible object behaviors.
Werepresent events as entities with a type takenfrom a predefined set, where an event?s se-mantics will be a proposition paired with apoint or interval in time during which theproposition is true.?
Relations and Quantities.
They describe spe-cific features of objects and events and howthey are related to each other.
The most obvi-ous examples of such information are spatialinformation about objects and temporal in-formation about events.
Other meaningful re-lations and quantities include physical prop-erties such as velocity, color, and shape.5 Time and Event ProcessingWe designed and implemented a generic com-ponent to extract temporal information from thetexts.
It sits inside the natural language part ofCarsim and proceeds in two steps.
The first stepuses a pipeline of finite-state machines and phrase-structure rules that identifies time expressions, sig-nals, and events.
This step also generates a featurevector for each element it identifies.
Using thevectors, the second step determines the temporalrelations between the extracted events and ordersthem in time.
The result is a text annotated usingthe TimeML scheme.We use a set of decision trees and a machinelearning approach to find the relations betweenevents.
As input to the second step, the decisiontrees take sequences of events extracted by thefirst step and decide the temporal relation, possi-bly none, between pairs of them.
To run the learn-ing algorithm, we manually annotated a small setof texts on which we trained the trees.5.1 Processing StructureWe use phrase-structure rules and finite state ma-chines to mark up events and time expressions.
Inaddition to the identification of expressions, we of-ten need to interpret them, for instance to com-pute the absolute time an expression refers to.
Wetherefore augmented the rules with procedural at-tachments.We wrote a parser to control the processing flowwhere the rules, possibly recursive, apply regularexpressions, call procedures, and create TimeMLentities.5.2 Detection of Time ExpressionsWe detect and interpret time expressions with atwo-level structure.
The first level processes in-dividual tokens using a dictionary and regular ex-pressions.
The second level uses the results fromthe token level to compute the meaning of multi-word expressions.Token-Level Rules.
In Swedish, time expres-sions such as en tisdagseftermiddag ?a Tuesdayafternoon?
use nominal compounds.
To decodethem, we automatically generate a comprehensivedictionary with mappings from strings onto com-pound time expressions.
We decode other typesof expressions such as 2005-01-14 using regularexpressionsMultiword-Level Rules.
We developed agrammar to interpret the meaning of multiwordtime expressions.
It includes instructions on howto combine the values of individual tokens for ex-pressions such as {vid lunchtid}t1 {en tisdagefter-middag}t2 ?
{at noon}t1 {a Tuesday afternoon}t2?.The most common case consists in merging the to-kens?
attributes to form a more specific expression.However, relative time expressions such as i tors-dags ?last Tuesday?
are more complex.
Our gram-mar handles the most frequent ones, mainly those387that need the publishing date for their interpreta-tion.5.3 Detection of SignalsWe detect signals using a lexicon and na?ve stringmatching.
We annotate each signal with a sensewhere the possible values are: negation, before, af-ter, later, when, and continuing.
TimeML only de-fines one attribute for the SIGNAL tag, an identifier,and encodes the sense as an attribute of the LINKsthat refer to it.
We found it more appropriate tostore the sense directly in the SIGNAL element, andso we extended it with a second attribute.We use the sense information in decision treesas a feature to determine the order of events.
Ourstrategy based on string matching results in a lim-ited overdetection.
However, it does not break therest of the process.5.4 Detection of EventsWe detect the TimeML events using a part-of-speech tagger and phrase-structure rules.
We con-sider that all verbs and verb groups are events.
Wealso included some nouns or compounds, whichare directly relevant to Carsim?s application do-main, such as bilolycka ?car accident?
or krock?collision?.
We detect these nouns through a setof six morphemes.TimeML annotates events with three features:aspect, tense, and ?class?, where the class corre-sponds to the type of the event.
The TimeML spec-ifications define seven classes.
We kept only thetwo most frequent ones: states and occurrences.We determine the features using procedures at-tached to each grammatical construct we extract.The grammatical features aspect and tense arestraightforward and a direct output of the phrase-structure rules.
To infer the TimeML class, we useheuristics such as these ones: predicative clauses(copulas) are generally states and verbs in preteritare generally occurrences.The domain, reports of car accidents, makesthis approach viable.
The texts describe sequencesof real events.
They are generally simple, to thepoint, and void of speculations and hypotheticalscenarios.
This makes the task of feature identifi-cation simpler than it is in more general cases.In addition to the TimeML features, we extractthe grammatical properties of events.
Our hypoth-esis is that specific sequences of grammatical con-structs are related to the temporal order of the de-scribed events.
The grammatical properties con-sist of the part of speech, noun (NOUN) or verb(VB).
Verbs can be finite (FIN) or infinitive (INF).They can be reduced to a single word or part of agroup (GR).
They can be a copula (COP), a modal(MOD), or a lexical verb.
We combine these prop-erties into eight categories that we use in the fea-ture vectors of the decision trees (see ...EventStruc-ture in Sect.
6.2).6 Event OrderingTimeML defines three different types of links:subordinate (SLINK), temporal (TLINK), and aspec-tual (ALINK).
Aspectual links connect two event in-stances, one being aspectual and the other the ar-gument.
As its significance was minor in the visu-alization of car accidents, we set aside this type oflink.Subordinate links generally connect signals toevents, for instance to mark polarity by linking anot to its main verb.
We identify these links simul-taneously with the event detection.
We augmentedthe phrase-structure rules to handle subordinationcases at the same time they annotate an event.
Werestricted the cases to modality and polarity andwe set aside the other ones.6.1 Generating Temporal LinksTo order the events in time and create the tempo-ral links, we use a set of decision trees.
We applyeach tree to sequences of events where it decidesthe order between two of the events in each se-quence.
If e1, ..., en are the events in the sequencethey appear in the text, the trees correspond to thefollowing functions:fdt1(ei, ei+1) ?
trel(ei, ei+1)fdt2(ei, ei+1, ei+2) ?
trel(ei, ei+1)fdt3(ei, ei+1, ei+2) ?
trel(ei+1, ei+2)fdt4(ei, ei+1, ei+2) ?
trel(ei, ei+2)fdt5(ei, ei+1, ei+2, ei+3) ?
trel(ei, ei+3)The possible output values of the trees are: si-multaneous, after, before, is_included, includes,and none.
These values correspond to the relationsdescribed by Setzer and Gaizauskas (2001).The first decision tree should capture more gen-eral relations between two adjacent events with-out the need of a context.
Decision trees dt2 anddt3 extend the context by one event to the left re-spectively one event to the right.
They should cap-ture more specific phenomena.
However, they arenot always applicable as we never apply a decision388tree when there is a time expression between anyof the events involved.
In effect, time expressions?reanchor?
the narrative temporally, and we no-ticed that the decision trees performed very poorlyacross time expressions.We complemented the decision trees with asmall set of domain-independent heuristic rulesthat encode common-sense knowledge.
We as-sume that events in the present tense occur afterevents in the past tense and that all mentions ofevents such as olycka ?accident?
refer to the sameevent.
In addition, the Carsim event interpreterrecognizes some semantically motivated identityrelations.6.2 Feature VectorsThe decision trees use a set of features correspond-ing to certain attributes of the considered events,temporal signals between them, and some otherparameters such as the number of tokens separat-ing the pair of events to be linked.
We list belowthe features of fdt1 together with their values.
Thefirst event in the pair is denoted by a mainEvent pre-fix and the second one by relatedEvent:?
mainEventTense: none, past, present, future,NOT_DETERMINED.?
mainEventAspect: progressive, perfective, per-fective_progressive, none, NOT_DETERMINED.?
mainEventStructure: NOUN, VB_GR_COP_INF,VB_GR_COP_FIN, VB_GR_MOD_INF,VB_GR_MOD_FIN, VB_GR, VB_INF, VB_FIN,UNKNOWN.?
relatedEventTense: (as mainEventTense)?
relatedEventAspect: (as mainEventAspect)?
relatedEventStructure: (as mainEventStructure)?
temporalSignalInbetween: none, before, after,later, when, continuing, several.?
tokenDistance: 1, 2 to 3, 4 to 6, 7 to 10, greaterthan 10.?
sentenceDistance: 0, 1, 2, 3, 4, greater than 4.?
punctuationSignDistance: 0, 1, 2, 3, 4, 5, greaterthan 5.The four other decision trees consider moreevents but use similar features.
The values for the...Distance features are of course greater.6.3 Temporal LoopsThe process described above results in an overgen-eration of temporal links.
As some of them may beconflicting, a post-processing module reorganizesthem and discards the temporal loops.The initial step of the loop resolution assignseach link with a score.
This score is created by thedecision trees and is derived from the C4.5 metrics(Quinlan, 1993).
It reflects the accuracy of the leafas well as the overall accuracy of the decision treein question.
The score for links generated fromheuristics is rule dependent.The loop resolution algorithm begins with anempty set of orderings.
It adds the partial order-ings to the set if their inclusion doesn?t introducea temporal conflict.
It first adds the links with thehighest scores, and thus, in each temporal loop, theordering with the lowest score is discarded.7 Experimental Setup and EvaluationAs far as we know, there is no available time-annotated corpus in Swedish, which makes theevaluation more difficult.
As development andtest sets, we collected approximately 300 reportsof road accidents from various Swedish newspa-pers.
Each report is annotated with its publishingdate.
Analyzing the reports is complex becauseof their variability in style and length.
Their sizeranges from a couple of sentences to more than apage.
The amount of details is overwhelming insome reports, while in others most of the informa-tion is implicit.
The complexity of the accidentsdescribed ranges from simple accidents with onlyone vehicle to multiple collisions with several par-ticipating vehicles and complex movements.We manually annotated a subset of our corpusconsisting of 25 texts, 476 events and 1,162 tem-poral links.
We built the trees automatically fromthis set using the C4.5 program (Quinlan, 1993).Our training set is relatively small and the num-ber of features we use relatively large for the setsize.
This can produce a training overfit.
However,C4.5, to some extent, makes provision for this andprunes the decision trees.We evaluated three aspects of the temporal in-formation extraction modules: the detection andinterpretation of time expressions, the detectionand interpretation of events, and the quality of thefinal ordering.
We report here the detection ofevents and the final ordering.389Feature Ncorrect Nerroneous CorrectTense 179 1 99.4%Aspect 161 19 89.4%Class 150 30 83.3%Table 1: Feature detection for 180 events.7.1 Event DetectionWe evaluated the performance of the event detec-tion on a test corpus of 40 previously unseen texts.It should be noted that we used a simplified defi-nition of what an event is, and that the manual an-notation and evaluation were both done using thesame definition (i.e.
all verbs, verb groups, and asmall number of nouns are events).
The systemdetected 584 events correctly, overdetected 3, andmissed 26.
This gives a recall of 95.7%, a preci-sion of 99.4%, and an F -measure of 97.5%.The feature detection is more interesting andTable 1 shows an evaluation of it.
We carried outthis evaluation on the first 20 texts of the test cor-pus.7.2 Evaluation of Final OrderingWe evaluated the final ordering with the methodproposed by Setzer and Gaizauskas (2001).
Theirscheme is comprehensive and enables to comparethe performance of different systems.Description of the Evaluation Method.
Set-zer and Gaizauskas carried out an inter-annotatoragreement test for temporal relation markup.When evaluating the final ordering of a text, theydefined the set E of all the events in the text andthe set T of all the time expressions.
They com-puted the set (E ?
T )?
(E ?
T ) and they definedthe sets S`, I`, and B` as the transitive closuresfor the relations simultaneous, includes, and be-fore, respectively.If S`k and S`r represent the set S` for the an-swer key (?Gold Standard?)
and system response,respectively, the measures of precision and recallfor the simultaneous relation are:R = |S`k ?
S`r ||S`k |P = |S`k ?
S`r ||S`r |For an overall measure of recall and precision,Setzer and Gaizauskas proposed the following for-mulas:R = |S`k ?
S`r | + |B`k ?B`r | + |I`k ?
I`r ||S`k | + |B`k | + |I`k |P = |S`k ?
S`r | + |B`k ?B`r | + |I`k ?
I`r ||S`r | + |B`r | + |I`r |They used the classical definition of the F -measure: the harmonic means of precision and re-call.
Note that the precision and recall are com-puted per text, not for all relations in the test setsimultaneously.Results.
We evaluated the output of the Car-sim system on 10 previously unseen texts againstour Gold Standard.
As a baseline, we used a sim-ple algorithm that assumes that all events occur inthe order they are introduced in the narrative.
Forcomparison, we also did an inter-annotator evalu-ation on the same texts, where we compared theGold Standard, annotated by one of us, with theannotation produced by another member in ourgroup.As our system doesn?t support comparisons oftime expressions, we evaluated the relations con-tained in the set E ?
E. We only counted thereflexive simultaneous relation once per tuples(ex, ey) and (ey, ex) and we didn?t count relations(ex, ex).Table 2 shows our results averaged over the10 texts.
As a reference, we also included Set-zer and Gaizauskas?
averaged results for inter-annotator agreement on temporal relations in sixtexts.
Their results are not directly comparablehowever as they did the evaluation over the set(E ?
T ) ?
(E ?
T ) for English texts of anothertype.Comments.
The computation of ratios on thetransitive closure makes Setzer and Gaizauskas?evaluation method extremely sensitive.
Missing asingle link often results in a loss of scores of gener-ated transitive links and thus has a massive impacton the final evaluation figures.As an example, one of our texts contains sixevents whose order is e4 < e5 < e6 < e1 < e2 <e3.
The event module automatically detects thechains e4 < e5 < e6 and e1 < e2 < e3 correctly,but misses the link e6 < e1.
This gives a recall of6/15 = 0.40.
When considering evaluations per-formed using the method above, it is meaningfulto have this in mind.8 Carsim IntegrationThe visualization module considers a subset of thedetected events that it interprets graphically.
We390Evaluation Average nwords Average nevents Pmean Rmean FmeanGold vs. Baseline 98.5 14.3 49.42 29.23 35.91Gold vs. Automatic " " 54.85 37.72 43.97Gold vs. Other Annotator " " 85.55 58.02 68.01Setzer and Gaizauskas 312.2 26.7 67.72 40.07 49.13Table 2: Evaluation results for final ordering averaged per text (with P , R, and F in %).call this subset the Carsim events.
Once the eventprocessing has been done, Carsim extracts thesespecific events from the full set using a small do-main ontology and inserts them into the template.We use the event relations resulting from temporalinformation extraction module to order them.
Forall pairs of events in the template, Carsim queriesthe temporal graph to determine their relation.Figure 1 shows a part of the template represent-ing the accident described in Section 1.
It liststhe participants, with the unmentioned vehicle in-ferred to be a car.
It also shows the events andtheir temporal order.
Then, the visualization mod-ule synthesizes a 3D scene and animates it.
Fig-ure 2 shows four screenshots picturing the events.Figure 1: Representation of the accident in the ex-ample text.9 Conclusion and PerspectivesWe have developed a method for detecting timeexpressions, events, and for ordering these eventstemporally.
We have integrated it in a text-to-scene converter enabling the animation of genericactions.The module to detect time expression and inter-pret events performs significantly better than thebaseline technique used in previous versions ofCarsim.
In addition, it should to be easy to sep-arate it from the Carsim framework and reuse it inother domains.The central task, the ordering of all events,leaves lots of room for improvement.
The accu-racy of the decision trees should improve with alarger training set.
It would result in a better over-all performance.
Switching from decision trees toother training methods such as Support Vector Ma-chines or using semantically motivated features, assuggested by Mani (2003), could also be sourcesof improvements.More fundamentally, the decision tree methodwe have presented is not able to take into accountlong-distance links.
Investigation into new strate-gies to extract such links directly without the com-putation of a transitive closure would improve re-call and, given the evaluation procedure, increasethe performance.ReferencesJames F. Allen.
1984.
Towards a general theory ofaction and time.
Artificial Intelligence, 23(2):123?154.Brandon Bennett and Antony P. Galton.
2004.
A uni-fying semantics for time and events.
Artificial Intel-ligence, 153(1-2):13?48.Branimir Boguraev and Rie Kubota Ando.
2005.TimeML-compliant text analysis for temporal rea-soning.
In IJCAI-05, Proceedings of the NineteenthInternational Joint Conference on Artificial Intelli-gence, pages 997?1003, Edinburgh, Scotland.Donald Davidson.
1967.
The logical form of actionsentences.
In N. Rescher, editor, The Logic of Deci-sion and Action.
University of Pittsburgh Press.David R. Dowty.
1986.
The effects of aspectual classon the temporal structure of discourse: Semantics orpragmatics?
Linguistics and Philosophy, 9:37?61.391Figure 2: Animation of the scene and event visualization.Sylvain Dupuy, Arjan Egges, Vincent Legendre, andPierre Nugues.
2001.
Generating a 3D simulationof a car accident from a written description in nat-ural language: The Carsim system.
In ACL 2001,Workshop on Temporal and Spatial Information Pro-cessing, pages 1?8, Toulouse, France.Richard Fikes and Nils J. Nilsson.
1971.
Strips: Anew approach to the application of theorem provingto problem solving.
Artificial Intelligence, 2:189?208.Janet Hitzeman, Marc Noels Moens, and Clare Grover.1995.
Algorithms for analyzing the temporal struc-ture of discourse.
In Proceedings of the AnnualMeeting of the European Chapter of the Associa-tion of Computational Linguistics, pages 253?260,Dublin, Ireland.Bob Ingria and James Pustejovsky.
2002.
Specificationfor TimeML 1.0.Richard Johansson, Anders Berglund, MagnusDanielsson, and Pierre Nugues.
2005.
Automatictext-to-scene conversion in the traffic accidentdomain.
In IJCAI-05, Proceedings of the NineteenthInternational Joint Conference on Artificial Intelli-gence, pages 1073?1078, Edinburgh, Scotland.Alex Lascarides and Nicholas Asher.
1993.
Tem-poral interpretation, discourse relations, and com-mon sense entailment.
Linguistics & Philosophy,16(5):437?493.Wenjie Li, Kam-Fai Wong, Guihong Cao, and ChunfaYuan.
2004.
Applying machine learning to Chinesetemporal relation resolution.
In Proceedings of the42nd Meeting of the Association for ComputationalLinguistics (ACL?04), pages 582?588, Barcelona.Inderjeet Mani, Barry Schiffman, and Jianping Zhang.2003.
Inferring temporal ordering of events innews.
In Human Language Technology Conference(HLT?03), Edmonton, Canada.Inderjeet Mani.
2003.
Recent developments in tempo-ral information extraction.
In Nicolas Nicolov andRuslan Mitkov, editors, Proceedings of RANLP?03.John Benjamins.John Ross Quinlan.
1993.
C4.5: Programs for Ma-chine Learning.
Morgan Kauffman.Hans Reichenbach.
1947.
Elements of Symbolic Logic.Academic Press, New York.Andrea Setzer and Robert Gaizauskas.
2001.
A pi-lot study on annotating temporal relations in text.
InACL 2001, Workshop on Temporal and Spatial Infor-mation Processing, pages 73?80, Toulouse, France.Andrea Setzer and Robert Gaizauskas.
2002.
On theimportance of annotating temporal event-event rela-tions in text.
In LREC 2002, Workshop on Annota-tion Standards for Temporal Information in NaturalLanguage.Zeno Vendler.
1967.
Linguistics in Philosophy.
Cor-nell University Press, Ithaca, New York.392
