T IPSTER-COMPATIBLE  PROJECTS AT SHEFF IELDHamish Cunningham, Kevin Humphreys, Robert Gaizauskas, Yorick WilksDepartment  of Computer  Science / Inst i tute for Language, Speech and HearingUniversity of Sheffield, UK{hamish,kwh,robertg,yorick}@dcs.shef.ac.ukProjects currently underway at Sheffield may bemore appropriately described by the term LanguageEngineering than the well-established labels of Nat-ural Language Processing or Computational Linguis-tics.
This reflects an increased focus on viable ap-plications of language technology, promoting a viewof the software infrastructure ascentral to the devel-opment process.
To this end, Sheffield has producedGATE - a TIPSTER-compatible General Architec-ture for Text Engineering - providing an environmentin which a number of Sheffield projects are currentlybeing developed.GATEGATE is an architecture in the sense that it providesa common infrastructure for building language ngi-neering (LE) systems.
It is also a development envi-ronment that provides aids for the construction, test-ing and evaluation of LE systems (and particularlyfor the reuse of existing components in new systems).GATE presents researchers and developers withan environment in which they can easily use linguis-tic tools and databases from a user-friendly interface.Different processes, such as tagging or parsing, canbe applied to documents or collections and the re-sults compared and analysed.
System modules, orcombinations of modules which form complete sys-tems, e.g.
IE, IR or MT systems, can be config-ured and evaluated (e.g.
using the Parseval tools),then reconfigured and reevaluated, providing a kindof edit/compile/test cycle for LE components.GATE comprises three principal elements:?
the GATE Document Manager (GDM) - -  aTIPSTER-compatible database for storing in-formation about texts;?
the GATE Graphical Interface (GGI) - -  an in-terface for launching processing tools on dataand viewing and evaluating the results;?
a Collection of Reusable Objects for LanguageEngineering (CREOLE) - -  a collection of wrap-pers for algorithmic and data resources that in-teroperate with the database and interface.GDMGDM is based on the TIPSTER document manager.It provides a central repository or server that storesall the information an LE system generates about hetexts it processes.
All communication between thesystem components goes through GDM, thereby insu-lating parts from each other and providing a uniformAPI (applications programmer interface) for manip-ulating the data produced by the system.
1 Benefits ofthis approach include the ability to exploit he matu-rity and efficiency of database t chnology, easy mod-elling of blackboard-type distributed control regimes(of the type proposed by \[2\]), and reduced interde-pendence of components.GGIGGI is a graphical aunchpad for LE subsystems,and provides various facilities for testing and view-ing results, and interactively assembling LE compo-nents into different system configurations.
As webuilt Sheffield's MUC-6 entry, LaSIE \[6\], it was of-ten the case that we were unsure of the implicationsfor system performance ofusing tagger X instead oftagger Y, or gazetteer A instead of pattern matcherB.
In the GGI interface, substitution of componentsis a point-and-click operation.
This facility supportshybrid systems, ease of upgrading and open systems-style module interchangeability.
2Figure 1 shows the launchpad for a MUC-6 IEsystem.
Colours are used to indicate the status ofeach component with respect o the current docu-ment/collection: dark (red) components have alreadybeen run and their results are available for viewing;light (green) components have all their required in-puts available and are ready to run, and grey (amber)components require a currently unavailable input be-fore they can become runnable.IWhere very large data sets need passing between modules, other external databases can be employed if necessary.2Note that delivered systems can use GDM and CREOLE without GGI.121Figure 1: GGI - the GATE Graphical InterfaceCREOLEIn a GATE-based system, the real work of process-ing texts - analysis, summarisation, translation, etc.- is done by CREOLE modules.
Note that we usethe terms module and object rather loosely to meaninterfaces to resources which may be predominantlyalgorithmic or predominantly data, or a mixture ofboth.
We exploit object-orientation for reasons ofmodularity, coupling and cohesion, fluency of mod-elling and ease of reuse (see e.g.
\[3\]).A CREOLE object may be a wrapper around apre-existing LE module or database (e.g.
a tagger orparser, a lexicon or n-gram index), or may be de-veloped from scratch to conform to the T IPSTERarchitecture.
In either case, the object provides astandardised API to the underlying resources, withaccess via GGI and I /O via GDM.MULTEXT compatibilityMULTEXT \[9, 5, 1\] was an EU project to producetools for multilingual corpus annotation and sam-ple corpora marked-up according to the same stan-dards used to drive the tool development.
Annota-tion tools currently developed perform text segmen-tation, POS tagging, morphological nalysis and par-allel text alignment.
The project has defined an ar-chitecture centred on a model of the data passed be-tween the various phases of processing implementedby the tools.
The MULTEXT architecture is basedon a commitment to TEI-style \[8\] SGML \[7\] encodingof information about text.
The TEI defines tandardtag sets for a range of purposes including many rel-evant to LE systems.
Tools in a MULTEXT systemcommunicate via interfaces pecified as SGML doc-ument type definitions (DTDs - essentially tag setdescriptions).The MULTEXT tools are currently in use andare recommended by the EU.
GATE plans to sup-port conversions between T IPSTER annotations andMULTEXT SGML markup, allowing data producedby the TIPSTER-compliant CREOLE modules to bewritten out in SGML for processing by MULTEXTtools, and the SGML results then converted back intonative format.
The extensive work done on SGMLprocessing in MULTEXT could usefully fill a gap inthe current T IPSTER model, in which SGML capa-bility is not fully specified.
Integration of the resultsof both projects would seem to be the best of bothworlds, and we hope to achieve this in GATE.TIPSTER in EU ProjectsThe Sheffield NLP group is moving all its researchand development work to GATE, and therefore tothe T IPSTER architecture.
Several pan-Europeanprojects are involved, including:?
AVENTINUS - a research and developmentprogramme set up to build a multilingual in-formation extraction system for multinationaldrug enforcement;122with?
ECRAN - a language engineering researchproject designed to offer filtered access to mul-tilingual textual information delivered via TVscreen or personal computer;collaborators such as:Thompson-CSF, Paris, France;Intelligent Financial Systems, Berlin, Germany;ILSP, Athens, Greece;GMS, Munich, Germany (formerly Siemens Si-etec);?
four European drug enforcement agencies andEuropol;* The Universities of Fribourg, Germany;Gothenburg, Sweden; Ancona, Italy.SummaryIndustry (ref.
: YAE/8/5/1002) and the Engineer-ing and Physical Science Research Council (ref.
:GR/K25267).The authors would like to thank Malcolm Craw-ford of ILASH, University of Sheffield, for present-ing a version of this paper at the April 1996 TIP-STER workshop, and for extensive comments duringthe preparation of this paper.References\[1\] Ballim A.
"Abstract data types for MULTEXTtool I/O".
LRE 62-050 Deliverable 1.2.1, 1995.\[2\]Working with GATE, the researcher will from theoutset reuse existing components, the overhead fordoing so being much lower than is conventionally the \[3\]case - instead of learning new methods for each mod-ule reused, the common APIs of GDM and CREOLEmean that only one integration mechanism ust be \[4\]learned.
And as increasing numbers of CREOLEmodules and databases become available, throughcollaboration with sites able to provide single LEcomponents, e.g.
from the MULTEXT tools, we ex-pect GATE, and therefore the TIPSTER architec- \[5\]ture, to become widely used in the LE research com-munity.Availabil ity of GATEGATE is freely available for research purposes.
Theinitial release is delivered with a CREOLE set com-prising a complete MUC-compatible IE system calledVIE - a Vanilla IE system.
Some of the objects inVIE are freely available software (e.g.
the Brill part-of-speech tagger \[4\]), while others are derived fromSheffield's MUC-6 entry, LaSIE \[6\].Please contact gate@des, hef.
ac.uk for detailsof hardware and software requirements, and licencearrangements.AcknowledgementsThe research reported here has been supported bygrants from the U.K. Department of Trade andBoitet C. and Seligman M. "The "whiteboard"architecture: A way to integrate heterogeneouscomponents ofNLP systems".
In Proceedings ofthe 16th Insternational Conference on Computa-tional Linguistics (COLING-94).
1994.Booch G. Object-oriented Analysis and Design.Addison Wesley, 2nd edition, 1994.Brill E. "Some advances in transformation-basedpart of speech tagging".
In Proceedings of theTwelfth National Conference on Artificial Intel-\[6\]ligence (AAAI-94).
1994.Finch S., Thompson H. and McKelvie D. "Spec-ification of tool shell with discussion of data andprocess architecture".
LRE 62-050 Deliverable1.2.2, 1995.Gaizauskas R.J., Wakao T., Humphreys K.,Cunningham H. and Wilks Y.
"University ofSheffield: Description of the LaSIE system asused for MUC-6".
In Proceedings of the SixthMessage Understanding Conference (MUC-6).Morgan Kaufmann, 1995.\[7\] Goldfarb C.F.
The SGML Handbook.
Claren-don Press, 1990.\[8\] Sperberg-McQueen C.M.
and Burnard L.."Guidelines for electronic text encoding and in-terchange (TEI P3)".
ACH, ACL, ALLC, 1994.\[9\] Thompson H. "MULTEXT workpackage 2 mile-stone B deliverable overview".
LRE 62-050 De-liverable 2, 1995.123
