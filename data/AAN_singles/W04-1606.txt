Issues in Arabic Orthography and Morphology AnalysisTim BUCKWALTERLinguistic Data ConsortiumUniversity of PennsylvaniaPhiladelphia, PA 19104 USAtimbuck2@ldc.upenn.eduAbstractThis paper discusses several issues in Arabicorthography that were encountered in theprocess of performing morphology analysisand POS tagging of 542,543 Arabic words inthree newswire corpora at the LDC during2002-2004, by means of the BuckwalterArabic Morphological Analyzer.
The mostimportant issues involved variation in theorthography of Modern Standard Arabic thatcalled for specific changes to the Analyzeralgorithm, and also a more rigorous definitionof typographic errors.
Some orthographicanomalies had a direct impact on wordtokenization, which in turn affected themorphology analysis and assignment of POStags.1 IntroductionIn 2002 the LDC began using output from theBuckwalter Arabic Morphological Analyzer(Buckwalter, 2002), in order to performmorphological annotation and POS tagging ofArabic newswire text.
From 2002 to 2004 threecorpora were analyzed and over half a millionArabic word tokens were annotated and tagged(see Table 1).1Corpus Arabic Word TokensAFP 123,810Ummah 125,698Annahar 293,035Total 542,543Table 1: Arabic newswire corpora1 The tagged AFP, Ummah, and Annahar corporawere published as ?Arabic Treebank: Part 1 v 2.0?
(Maamouri 2003),  ?Arabic Treebank: Part 2 v 2.0?
(Maamouri 2004), and ?Arabic Treebank: Part 3 v 1.0?
(Maamouri 2004), respectively, and are available fromthe LDC website <http://www.ldc.upenn.edu >The author was responsible for developing andmaintaining the Analyzer, which primarilyinvolved filling in the gaps in the lexicon andmodifying the POS tag set in order to meet therequirements of treebanking efforts that wereperformed subsequently at the LDC with the sameannotated and POS-tagged newswire data.2 Lessons from the AFP corpusDuring the tagging of the AFP data, the firstcorpus in the series, the Buckwalter Analyzer wasequipped to handle basic orthographic variationthat often goes unnoticed because it is a commonfeature of written Arabic (Buckwalter, 1992).
Thisorthographic variation involves the writing (oromission) of hamza above or below alif in stem-initial position, and to a lesser extent, the writing(or omission) of madda on alif, also in stem-initialposition.
In both cases use of the bare alif withouthamza or madda is quite common and goes byunnoticed by most readers.
What took the LDCmorphology annotation team by surprise was tofind that in the AFP data the common omission ofhamza in this environment had been extended tostem-medial and stem-final positions as well, asseen in the following words from that corpus: ????????
??????
???
??????
?????
?????
?????
.This type of orthographic variation was notattested to the same extent in the two subsequentcorpora, Ummah and Annahar, which leads us toconclude that some orthographic practices mightbe restricted to specific news agencies.
It isimportant to note that most of the native Arabicspeakers who annotated the AFP data using theoutput from the Analyzer did not regard theseomissions of hamza on alif in stem-medial andstem-final positions as orthographic errors, andfully expected the Analyzer to provide a solution.3 Lessons from the Ummah corpusDuring the tagging of the Ummah data, adifferent set of orthographic issues arose.
Althoughthe Buckwalter Analyzer was equipped to handleso-called ?Egyptian?
spelling (where word-finalya?
is spelled without the two dots, making itidentical to alif maqsura), the Ummah corpuspresented the LDC annotation team with just theopposite phenomenon: dozens of word-final alifmaqsura?s spelled with two dots.2  Whereas someof the affected words were automatically rejectedas typographical errors (e.g., ???
????
??????
?????????
), others where gladly analyzed at face value(e.g., ???
???
???
).
Unfortunately, this led tonumerous false positive analyses: for example ??
?was analyzed as ?ali and ?alayya, but not as ?ala.Initially, these words were tagged as typographicalerrors, but their pervasiveness led the LDC team toreconsider this position, upon which the author wasasked to modify the Analyzer algorithm in order toaccommodate this typographic anomaly.
As aresult, all words ending in ya?
were now re-interpreted as ending in either ya?
or alif maqsura,and both forms were analyzed, as seen in thefollowing (abridged) output:3<token_Arabic> ??
?<variant>Ely<solution><lemmaID>EalaY_1</lemmaID><pos>Ealay/PREP+ya/PRON_1S</pos><gloss>on/above + me</gloss></solution><solution><lemmaID>Ealiy~_1</lemmaID><voc>Ealiy~N</voc><pos>Ealiy~/ADJ+N/CASE_INDEF_NOM</pos><gloss>supreme/high + [indef.nom.
]</gloss></solution><solution><lemmaID>Ealiy~_2</lemmaID><voc>Ealiy~N</voc><pos>Ealiy~/NOUN_PROP+N/CASE_INDEF_NOM</pos><gloss>Ali + [indef.nom.
]</gloss></solution></variant><variant>ElY<solution><lemmaID>EalaY_1</lemmaID><voc>EalaY</voc><pos>EalaY/PREP</pos><gloss>on/above</gloss></solution></variant></token_Arabic>4 Lessons from all three corporaThe Annahar corpus presented no orthographicsurprises, or at least nothing that the LDCannotation team had not seen before.
The Annahardata did contain some additional orthographic2 It is not entirely clear whether these ?dotted?
alifmaqsura?s were produced by human typists or by anencoding conversion process gone awry.
It is possiblethat the original keyboarding was done on a platformwhere word-final ya?
and alif maqsura are displayed viavisually identical ?un-dotted?
glyphs, so it makes nodifference which of the two keys the typist presses onthe keyboard: both produce the same visual display, butare stored electronically as two different characters.3 A key to the transliteration scheme used by theAnalyzer can be found at <http://www.ldc.upenn.edu/myl/morph/buckwalter.html>features that we now identify as being common toall three corpora, as well as corpora outside the setwe have annotated at the LDC.The first orthographic feature relates to thesomewhat free interchange of stem-initial hamzaabove alif and hamza below alif.
With some lexicalitems the orthographic variation simply reflectsvariation in pronunciation: for example, both?isbaniya (with hamza under alif) and ?asbaniya(with hamza above alif) are well attested.
But incases involving other orthographic pairs, moreinterpretations are possible.
Take, for instance,what we called the ?qala ?anna?
problem.
Thisproblem was identified after numerous encounterswith constructions in which qala was followed by?anna rather than ?inna, and for no apparentlinguistic reason.
Initially this was treated as atypographical error, but again, its pervasivenessforced us to take a different approach.One solution we considered was to modify theAnalyzer algorithm so that instances of stem-initialhamza on alif would also be treated as possibleinstances of hamza under alif, very much in thespirit of the approach we used for dealing with thealif maqsura / ya?
free variation cited earlier.However, there is compelling evidence that theorthography of hamza in stem-initial position is afairly reliable indication of the perceived value ofsubsequent short vowel: a or u for hamza abovealif, and i for hamza below alif.
In other words,there is no free variation.
The decision was takento regard ?qala ?anna?
constructions as gram-matically acceptable in MSA.45 Concatenation in Arabic orthographyThe second, and more serious, orthographicanomaly we encountered in all three corpora iswhat we call the problem of Arabic ?run-on?words, or free concatenation of words when theword immediately preceding ends with a non-connector letter, such as alif, dal, dhal, ra, za,waw, ta marbuta, etc.The most frequent ?run-on?
words in Arabic arecombinations of the high-frequency function wordsla and ma (which end in alif) with followingperfect or imperfect verbs, such as la-yazal, ma-yuram, and ma-zala ( ??????
??????
?????
).
The la of?absolute negation?
concatenates freely withnouns, as in la-budda, la-shakka ( ????
????
).
It canbe argued that these are lexicalized collocations,but their spelling with intervening space ( ????
??
?4 Badawi, Carter and Gully regard ?qala ?anna?constructions as grammatical but restricted to contexts?where the exact words of the speaker are not used orreported?
(Badawi, Carter and Gully 2004, p. 713).
Thisassertion could be investigated in the LDC corpora.???
??
?
??
??)
is just as frequent as their spelling inconcatenated form.Proper name phrases, especially those involvingthe word ?abd ( ????????
????????? )
are also writteneither separately or in concatenated form.
Part ofthe data annotation process at the LDC involvesassigning case endings to tokenized words, butthere is currently no mechanism in the Analyzer toassign two case endings (or several pairs of POStags) to what is being processed as a single wordtoken.
As a result of this, the phrase ?abd allah isassigned a single POS tag and case ending when itis written in concatenated form, but two POS tagsand two case endings when written withintervening space.The problem of assigning more than one caseending and POS tag to concatenations is moreobvious in fully lexicalized concatenations such askhamsumi?atin, sittumi?atin, sab?umi?atin, etc( ???????
?
??????
?
???????
).
When these numbers arewritten with intervening space ( ????
???
?
????
??
?????
???
), two case endings and two POS tags areassigned by the Analyzer.
But when they arewritten in concatenated form only one case endingand POS tag is assigned, and the ?infixed?
caseending of the first token is left undefined:khamsmi?atin, sittmi?atin, sab?mi?atin, etc.
5So far we have discussed relatively controlledconcatenation, involving mostly high-frequencyfunction words and lexicalized phrases.
Butconcatenation extends beyond that to randomcombinations of words?the only requirementbeing that the word immediately preceding endwith a non-connector letter.
These concatenationsare fairly frequent, as attested by their Googlescores (see Table 2).It is important to note that these concatenationsare not immediately obvious to readers due to thecharacteristics of proportionally spaced Arabicfonts.
Most of the native readers of Arabic at theLDC did not consider concatenations such as theseto be typographical errors.
Their logic was bestexpressed in the statement: ?I can read the text justfine.
Why can?t the Morphological Analyzer?
?5 We regard these as ?fully lexicalized?concatenations because the first of the two constituenttokens ends in a connector letter.
In other word, theirconcatenation is deliberate and not an accident oforthography.Concatenation GoogleFrequency???????
846????????????
719??????????
162???????????
158???????
138?????
130????????
99?????
77???????
54Table 2: Arabic Concatenations and their GoogleFrequencies (sample taken March 25,2004)6 ConclusionThere are several levels of orthographic variationin Arabic, and each level calls for a specificresponse to resolve the orthographic anomaly.
It isimportant that the output analysis record whichmethod was used to resolve the anomaly.
Themethods used for resolving orthographic anomalyrange from exact matching of the surfaceorthography to various strategies of orthographymanipulation.
Each manipulation strategy carrieswith it certain assumptions about the text, andthese assumptions should be part of the outputanalysis.
For example, an analysis of ???
obtainedby exact matching in a text known to containsuspicious word-final ya?s (that may be alifmaqsura?s) does not have the same value as ananalysis of the same word, using the same exactmatching, but in a text where word-final ya?s andalif maqsura?s display normal characterdistribution frequencies.The problem of run-on words in Arabic calls fora reassessment of current tokenization strategies,including the definition of ?word token?
itself.
6 Itshould be assumed that each input string representsone or more potential word tokens, each of whichneeds to be submitted individually for morphologyanalysis.
For example, the input string ?????
can besegmented as a single word token, yielding twomorphological analyses (faqad-tum and fa-qud-tum) or it can be segmented as two word tokens(fqd tm), yielding several possible analysis pairs(faqada / fuqida / faqd / fa-qad +  tamma).6 By ?tokenization?
we mean the identification oforthographically valid character string units that can besubmitted to the Analyzer for analysis.
The Analyzeritself performs a different kind of ?tokenization?
byidentifying prefixes and suffixes that are boundmorphemes but which may be treated as ?word tokens?in syntactic analysis.Syntactic analysis would be needed fordetermining which morphology analysis is mostlikely the correct one for each tokenization (fqdtmand fqd tm).7 AcknowledgementsOur thanks go to the Arabic annotation team atthe LDC, especially the team of native speakerinformants that provided the author with dailyfeedback on the performance of the MorphologicalAnalyzer, especially in areas which led to areassessment and better understanding oforthographic variation, as well as tokenization andfunctional definitions of typographical errors.ReferencesElsaid Badawi, M.G.
Carter, and Adrian Wallace.2004.
Modern Written Arabic: A ComprehensiveGrammar.
Routledge, London.Tim Buckwalter.
1992.
?Orthographic Variation inArabic and its Relevance to Automatic Spell-Checking,?
in Proceedings of the ThirdInternational Conference on MultilingualComputing (Arabic and Roman Script),University of Durham, U.K., December 10-12,1992.Tim Buckwalter.
2002.
Buckwalter ArabicMorphological Analyzer Version 1.0.
LinguisticData Consortium, catalog number LDC2002L49and ISBN 1-58563-257-0.
< http://www.ldc.upenn.edu/Catalog/CatalogEntry.jsp?catalogId=LDC2002L49 >Mohamed Maamouri, et al 2003.
ArabicTreebank: Part 1 v 2.0.
Linguistic DataConsortium, catalog number LDC2003T06 andISBN:  1-58563-261-9.
< http://www.ldc.upenn.-edu/Catalog/CatalogEntry.jsp?catalogId=LDC2003T06 >Mohamed Maamouri, et al 2004.
ArabicTreebank: Part 2 v 2.0.
Linguistic DataConsortium, catalog number LDC2004T02 andISBN:  1-58563-282-1.
< http://www.ldc.upenn.-edu/Catalog/CatalogEntry.jsp?catalogId=LDC2004T02 >Mohamed Maamouri, et al 2004.
ArabicTreebank: Part 3 v 1.0.
Linguistic DataConsortium, catalog number LDC2004T11 andISBN:  1-58563-298-8.
< http://www.ldc.upenn.-edu/Catalog/CatalogEntry.jsp?catalogId=LDC2004T11 >
