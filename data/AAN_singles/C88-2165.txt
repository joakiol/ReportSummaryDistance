A DISTRIBUTED MULTIoAGENTARCHITECTURE FOR NATURALLANGUAGE PROCESSINGDani lo  Fum ?, G iovann i  Gu ida* ,  Car lo  Tasso*o D ipar t imento  de l l 'Educaz ione ,  Un ivers i th  di Tr ieste,  Italy* D ipar f imento  di Matemat ica  e In format ica ,  Un ivers i th  di Udine,I ta lyAbstract - The paper presents a distributed multi-agentarchitecture for natural language processing.
Thisarchitecture proposes a novel concept of distributedproblem solving, which incorporates in a unitaryframework the fol lowing key-points:  large-grainedheterogeneous agents, central ized knowledge-basedcontrol,  and mixed event-dr iven and goal-dr ivenoperation.
It provides, moreover, a flexible tool for thedesign of natural language processing systems, bothmotivated from the cognitive point of view andcomputationally effective and robust.
The proposedarchitecture has been implemented in a fully runningprototype system, and has been successfully applied in thedomain of text understanding.I .
Mot ivat ions  and  ob jec t i - ,esBui lding artif icial systems for natural languageprocessing capable of performing with the same ability ofhumans, still presents several challenging issues.
Thiscomplex cognitive task implies, in fact, to model andreplicate knowledge, capabilities, and skills that humansexploit in their linguistic activity.
The main point istherefore that of identifying these skills and capabilities,discovering the knowledge on which they are grounded,and figuring out how this knowledge can be effectivelyput into use.
Thus, natural language processing turns outto be a knowledge intensive task, based on the cooperationamong a variety of different knowledge sources.Traditionally, natural language has been considered bylinguists as organized into a series of levels, whosestructure, organization and function are to some extentindependent from each other.
Linguistic knowledge hasbeen considered, therefore, as comprising a number ofdifferent components, each one related to a differentfunctional level and cognitive process (e.g., morphology,syntax, semantics, pragmatics, etc.).
One of the first ideasin designing natural language processing systems hasbeen to take advantage of this stratification by organizingthe comprehension process in a sequence of stages, eachone operating on the output produced by the precedingone and  providing input for the following.
Such stagedorganization shows, however, several drawbacks.
From astrictly computational point of view, a system organized ina sequential way is generally brittle.
If a problem appearsin an early stage the whole process fails, if, on the otherhand, it arises only in the last stages most of the work doneis wasted.
Every stage represents a separate bottleneck forthose that follow it, and no feedback among the variousstages is allowed.
Moreover, if we look at the languageprocessing activity in humans, it is clear that a simpleSequential model is inadequate from a cognitive standpoint(Marslen-Wilson, 1975; Tyler and Marslen-Wilson, 1977;Johnson-Laird, 1983).
To overcome these difficultics, inthe last few years several other kinds of organization havebeen proposed which are more flexible, robust, andpsychologically reliable.
It is possible, for example, tomaintain the advantages of stratification while increasingthe flexibility and power of a natural language processingsystem by separating tile structural levels from theprocessing sequence.
More precisely, it seems appropriateto adopt a distributed organization, where the naturallanguage processing problem is decomposed into a numberof disti~:ct subproblems, ,each one being tackled by adedicated problem solver.
Depending on the criteria usedfor operating this kind of decomposit ion, severalapproaches may result, each one featuring specificcharacteristics (Cullingford, 1981; Huang and Guthrie,1986; Small, 1981; Slack, 1986; Waltz and Pollack, 1985).This paper presents an approach to natural languageprocessing, which proposes a novel distributed problemsolving architecture.
This is based on the concept ofincremental, cooperative problem solving, and featurestwo main distinctive points.
First, it includes a set of large-grained, possibly heterogeneous, independent specialists,each one embodying competence in one of the severalaspects of language processing (e.g., morphology, syntox,semantics, common sense inference, anaphora resolution,quantification, temporal reasoning, etc.).
Second, it isbased on a centralized, knowledge-based control concept,which can implement flexible problem solving strategiesincluding both event-driven and goal-driven operation.The design of this architecture relies upon the results of awide experimental activity (Costantini, Fum, Guida,Montanari, and Tasso, 1987; Fum, Guida, and Tasso, 1987),and has been exploited and tested in the implementation ofa prototype system for descriptive text understanding.2.
Requi rementsAs a first step towards the goal of designing a noveldistributed architecture for natural language processingwhich will be both computationally effective andpsychologically reliable, a thorough analysis of functionalrequirements has been carried out.
The main results ofthis analysis are reported below.1.
The arch i tecture  should 'support funct ionaldecomposition of the natural language processingproblem at hand into interacting subproblems thatcorrespond to the main cognitive tasks which arefaced during natural language processing, such asBI2nlorphology,  syntax,  semant ics ,  common sensein ference,  anaphora reso lut ion,  quant i f i cat ion ,reference, temporal reasoning, etc.
The expectednumber of subproblems should be limited and theirgranularity medium to large,2.
The ar?
:hitecture should host a collection of individualproblem solvers, each one devoted to a singlesubproblem.
Furtherfirore, each problem solver shouldbe independent from the others, possibly exploitingdifferent representation and reasoning techniques.
Itshould be possible to develop problem solversindependently and to run them in parallel.3.
While no problem solver is supposed to have enoughconLpetonce to solve the entire natural languageprocessing problem at hand, no constraints are put onthe number of  problem solvers which might bedevoted to a single subproblem.
The resulting systemmay thns be redundant so as, whenever appropriate, asingle subproblem can be tackled from severaldif:ferel~t viewpoints,  thus extending the overallcapabilities of the global system,4.
The architecture should provide a specific dedicatedmechanism for controlling the cooperation among fileindividual problem solvers, in order to direct theglobal system behavior towards the complete solutionof the natural language processing problem at band.This mechanism should allow full separation betweenknowledge about the specific~ problem solvers andknowledge about strategies and methods for the globalproblem solving task.3~ Arch i tec ture  overv iewThe above requirements have motivated the design of anarchitecture where a set of autonomous agents, called~p_~_S_~,  cooperate together in order to solve a naturallanguage processing assigmnent.
Specialists are large-grained and heterogeneous.
None of them is capable tosolve the whole problem at hand, and more than one ofthem can be devoted to the same subproblem.The architecture is split into two different levels, namely:a ~pALcr_ed_iP~._l~x2~.l, where cooperation and interactionamong .,;pecialists is dealt with, and a ~_9_p.r~i_o_~!_c_v~_l,where problem solving in the specific subject domain ofeach individual specialist takes place.
Cooperation levelactivitie:~ ale centralized and they are performed by asingle dedicated specialist called the ~_.QP.p..e.LMj.O&I.~LY_e.J.I, Thisis specif ical ly devoted to identify and implementappropriate solution strategies for the problem at hand,and to coordinate the activity of the other specialists atproblem lew,'l towards the achievement of a global goal.Specialists at problmn level do not have any mutualknowledge or self  knowledge: only the cooperationmanager knows about specialists and their competence.The architecture is conceived to operate in a multi-processor environment, where all the special ists ( thecooperation manager included) can operate in parallel.4.
Bas ic  mode of operat ionThe basic mode of operation of the proposed architecture atcooperation level is iterative eo-routined (Lesser andCorkill, 1981): tentative partial results produced by singlespecialists are p~rogressively accumulated and iterativelyrevised under the supervision of the cooperation manager,until the desired final result is produced.
At problem level,specialist operation is organized in an "assign-execute-report" fashion: each specialist works at specific andprecise task,,; assigned to it by the cooperation manager,and whenever it obtains some (positive or negative) result,it reports to the cooperation martager.Communication among special ists is achieved throngh amessage~pa~,~ing mechanism, which allows exchange ofinformation between the cooperation manager on one sideand the ,~pecialists on the other.
More speci f ica l ly ,message,,~ are devoted to carry control and coordinationinformation, and to allow the cooperation manager to havea fidl visibility of tim problem level activities carried onby the special ists.
Direct specia l ist  to specia l istcommunication is not permitted, according to the abovement ioned choice of central iz ing knowledge aboutspecialist eapab i l i t ie ( ln  the cooperation manager.A message from the cooperation manager to a specialistmay concern: (1) the assignment of a new problem tosolve, (2) the answer to a help request issued by thespecialist.
On the other hand, a message from a specialist tothe cooperation manager may concern: (1) the solution toan assigned problem, when the specialist bas succeeded inits problem solving activity, (2) a fail announcement,when the speciali,,.t is unable to solve an assigned problem,(3) a help request, when the specialist has been successfulin decomposing and partially solving an assigned problem,but it needs help from other specialists to proceed fortlmrin the solution process.A major effort  in def in ing the above ment ionedcommunication mechanism has been devoted to the designof the interface between specialists and communicationmanager, which constitutes the only logical link amongspecial ists.S~ The  spec ia l i s t sAs already mentioned in the previous sections, specialistscan be designed and implemented according to anyapproach (algor i thmic,  non-determinist ic ,  knowledge-based, etc.)
which might be appropriate for each specificnatural  language process ing act ivity.
They share,however, a common interface towards the architecture:the way they communicate with the cooperation managerand manage internal problem solving tasks is the same forall of them.
The general structure of a specialist is divided,therefore, into two parts: (1) the ~ _ ,  devoted tohandle the links with the external world (the rest of thearchitecture), and (2) the ~ ,  which implementsthe actual problem solver in tile specific subject domain oftim specialist.
From the architectural point of view, onlythe interface is of interest here.The main point to be considered in the design of tbeinterface is that specialists operate concurrently, and thecooperation manager can request to the same specialist thesolution of a new subproblem, before the ~previousassignment has been completed.
For example, a syntaxspecialist could be asked to find the subject of a givensentence, while already engaged in checking a noun-pronoun agreement in another part of the text.
Tlmrefore,a specialist has to be able to manage more than oneassignment at a time.
Also, the processing status of eachassignment can be: (1) active: the processor is currentlyworking on it, (2) ready: waithlg for the processor to workon it, or (3) suspended: a help request for that assignmenthas been issued in the past and processing has to bedelayed until an answer to the help request will arrivefrom tile cooperation manager.
The interface includestherefore appropriate policies to manage these internalschedul ing problems.In the experimental activity performed so far concerningdescriptive text understanding, nine specialists have beenimplemented,  devoted to the fol lowing competencedomains: morphology, dictionary look-up, syntax, access toencyclopedic knowledge, semantics (two special ists) ,quantification, reference, and time.6.
The  cooperat ion  managerThe main capab, ility of this dedicated specialist is tomanage the global problem solving strategy and todynamical ly assign to tile various special ists specificsubproblems to solve.
Moreover, tile cooperation manageris able to appropriately react to events happening at theproblem level, i.e.
to messages coming from the specialists,namely:  so lut ions  to prev ious  ass ignments ,  failannouncements, or help requests.
To these purposes twokinds of operation modes have been designed: (1) gp_~lor top-down, where the cooperation managerB13develops autonomously its own problem solving strategiesand assigns appropriate tasks to problem level specialists,and (2) ~d..edl.t.
dr iven or bottom-up, where the cooperationmanager acts as an intelligent dispatcher of tile messagesreceived from the specialists.
These two modes of operationare dynamically combined, in such a way as to assure highlevels of flexibility, adaptativity, and cognitive evidence.The cooperation manager is designed using knowledge-based techniques, and incorporates explicit knowledgedevoted to support cooperation level reasoning.
Due to thelarge variety of cognitive tasks, competence and skillswhich should be covered by the knowledge base of thecooperation manager, both procedural and declarativerepresentation paradigms have been utilized.
The first one,implemented through event-graphs, is devoted to encodestructured strategic knowledge, which is in a senseprecompiled and immediate and requires little or noexplicit reasoning.
The second, implemented throughproduct ion-ru les,  concerns fragmentary unstructuredknowledge needed to implement more complex andsophisticated activities, where deep reasoning has acritical role, such as decision making, planning, errorrecovery, etc.
Procedural and declarative knowledge areinter-related, and are processed by an inference enginebased on a modified "recognize-acts" cycle, which includesmatching, conflict resolution, and execution phases.7.
Exper imenta l  ac t iv i ty ,  resu l t s  and fn tured i rec t ionsThe architecture illustrated in the previous sections hasbeen implemented in a prototype system written in Lispand running on a SUN workstation.
This prototypeimplements a general tool for designing distributed multi-agent systems, and has been used to develop anexperimental application in the field of descriptive textunderstanding.
The application system can map short  (onepage) excerpts extracted from scientific papers andtextbooks on operating systems into a formal internalrepresentation expressed in a rich, layered, propositionallanguage developed by the authors in the frame of aprevious research project (Fum, Guida, and Tasso, 1984).
Ithas been extensively tested with sample cases and hasproved the adequacy of the distributed approach proposedin several interesting cases of difficult parses.The work reported in the paper has brought two maincontributions.
From the point of view of distributedproblem solving, a novel general architecture has beenproposed which can fit a variety of applications in thebroad domain of cognitive modeling.
A critical comparisonwith related approaches (Lesser and Corkill, 1981; Davisand Smith, 1983; Ensor and Gabbe, 1985) would beappropriate, but is omitted here due to space constraints.From the more specific perspective of natural languageprocessing, the major advantages obtained are:the system is sufficiently sound and reliable from thecognitive point of view;it allows integration of different theories of cognitiveprocessing, since it does not commit to a particular pointof view (e.g., theories of lexical access, grammarrepresentation, etc.
);- it supports adoption of heterogeneous techniques forimplementing individual specialists, so as, for example, amorphology specialist can be implemented using atraditional imperative language, while a referencespecialist may be designed using a knowledge-basedtechnique;specialists can be developed, debugged, tested, andrefined in isolation, each one largely independentlyfrom the others;redundancy of specialists gives the system a highdegree of robustness;the global operation and performance of the system canbe changed in a quite transparent and effective waythrough appropriate actions at the cooperation level, soas system tuning, ref inement,  debugging andexperimentation are easy and natural.814The current research activity is mainly devoted to anextended experimentation of the distributed multi-agentapproach proposed, in order to better assess its validity andto focus some challenging open problems at thecooperation level (including, among others: relationshipsbetween procedural and declarative knowledge, design ofski l led global problem solv ing strategies ,  andimplementation of elementary learning mechanisms basedon generalization from past cases).
In particular, twoexperimental  application systems are presently inprogress: one devoted to understanding and importanceevaluation of descriptive texts (Fum, Guida, and Tasso,1987), and the other concerned with natural languagedialogue in the field of intelligent information retrieval(Brajnik, Guida, and Tasso, 1986).ReferencesBrajnik, G., G. Guida and C. Tasso.
1986.
An expert interfacefor effective man-machine interaction.
In L. Bolc, M.Jarke (Eds.
), C~ooperat ive ~Lo_ In format ion~_~L~- ,  Springer-Verlag, Berlin, FGR, 259-308.Costantini, C., D. Fum, G. Goida, A. Montanari and C. Tasso.1987.
Text understanding with multiple knowledgesources: An experiment in distributed parsing, rP_?p_~,~.LO..C~9.
!~ of hLh_~.
Eu r o p e a n h.~.
:.~Lp~ u.r P.!.f hLh~ A s s o c i ~ ~ i9 n_ .\[QZComputat iona l .~ ,  Copenhagen, DK, 75-79.Cullingford, R.E.
1981.
Integrating knowledge sources forcomputer "understanding" tasks.
~ ~ ,~ ,  M.a_q., imd.
~ iii.~ 11, 52-60.Davis, R. and R.G.
Smith.
1983.
Negotiation as a metaphorfor distributed problem solving.
~ Inte l l igence20, 63-109.Ensor, J.R. and J.D.
Gabbe.
1985.
Transactional blackboards.Pr_EL0_~ 8Lk I_n_L.
iL0.ja!L _C_0n_n_f_.
~n Ar t i f i c ia l  In~lligenc_~_,Karlsruhe, FRG, 340-344.Fum, D., G. Guida and C. Tasso.
1984.
A propositionallanguage for text representation.
In B.G.
Bara, G.
Guida(Eds.
), _Computat ional  _~9__d.g.J~f_I~LLRLalLan~uageP ~ ,  North-Holland, Amsterdam, NL, 121-150.Fum, D., G. Guida and C. Tasso.
1986.
Tailoring importanceevaluation to reader's goals: A contribution todescriptive text summarization.
~OL ING-86 ,  P_Lg..~ltthInt, Conf.
o..An ~L ingu is t i cs ,  Bonn, FRG, 256 u259.Fum, D., G. Guida and C. Tasso.
1987.
Variable-depth textunderstanding: Integrating importance evaluation intothe comprehension process.
In l. Plander (Ed.
),A r t i f i c ia l  In te l l igen~ iL0..d_Information - Cont ro l~.S.
?&LeAI~9.~_.0.1LO_kS.-.~.Z, North-Holland, Amsterdam, NL,31-39.Huang, X. and L. Guthrie.
1986.
Parsing in parallel.
~ -86, r\]~L9_~ l l th  Int.
~,.~tLf.,.on Comoutat ional  L inguist ics .Bonn, FRG, 140-145.Johnson-Laird, P.H.
1983.
~2,..~,al.
Mode ls .
CambridgeUniversity Press, Cambridge, UK.l_.esser, V.C.
and D.D.
Corkill.
1981.
Functionally accurate,cooperative distributed systems.
IEEE Trans, 9..0_Mall.~jLo.d.
Cybernetics 11, 81-96.Marslen-Wilson, W.D.
1975 .
Sentence perception as aninteractive parallel process.
Sc ience 189, 226-228.Slack, J.M.
1986 .
Distributed memory.
A basis for chartparsing.
COL ING-86 ,  rP_Lp.&_~llth L0.L.
Conf .
9_ILComputational Linguistics, Bonn, FRG, 476-481.Small, S.L.
1980.
W._W_0_LO_~~A__~.~fd i s t r ibuted  word-based  natura l  languageunders tand ing .
TR 954.
Department of ComputerScience, University of Maryland.Tyler, L.K.
and W.D.
Marslen-Wilson.
1977.
The on-lineeffect of semantic context on syntactic processing.Lo..ul.nAl.
fl?
Y_g.Lh.M.
Lt.edlLaJag.
iLtLd.
Y_c..I_h.aL B e h a v i o r 16,683 -692.Waltz, D.L.
and J.B. Pollack.
1985.
Massively ParallelParsing: A strongly interactive model of naturallanguage interpretation.
Coenit ive Science 9(1), 51-74.
