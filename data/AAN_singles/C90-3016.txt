Structured Meanings in Computational LinguisticsKees  van  DeernterInst itute for Perception ResearchP .O .Box  5"13, 5600 MB EindhovenThe Netherlands.22 March  19901 Introduct ionMany natural language processing systems em-ploy truth conditional knowledge representations (%-ret)resentations' , etc.)
to represent meanings of nat-arm language expressions.
T-representations havetheir strong and their weak sides.
A strong side islogic: a relation of logical consequence can be de-.fined between such representations.
A weak side isexpress ive  power :  the capacity of t-representationsto convey the subtleties of natural language is lim-ited.
For instance, let SL be a sentence that is trueon purely logical grounds; then it is predicted ttmtany sentence S is synonymous with "S and SL".
Thisdeficiency comes out clearest in propositional atti-tude constructions, i.e.
constructions of the form 'xV that S'; where V is an epistemic verb ('knows',~believes') and S a sentence.
Truth conditional ac-counts of nleaning (including intensional ones suchan \[Montague 1974\]) predict wrongly ~hat anybodywho knows that S is bound to also know that :'S andSL", since t;he two sentences are t-indistinguishable(\[Peters and Saarinen 1982\]).
The same lack of ex-pressive power dooms, for example, automatic trans-lation on the basis of t-representations to failure: t-representations contain only information that is rele-vant for the truth or falsity of a sentence, dismissingall other information, such an mood, topic-con:merit,,,tructure, etc.
(\[van Deemter-89\]).This paper investigates a remedy for the expres-sive poverty of t-representations, namely to let syn-tactic structure participate in the notion of mean-ing.
This old and persistent idea (\[Carnap 1947}),\[Lewis 1972\], \[Cresswell 1985\]) was recently taken upin the Rosetta automatic translation program.
We-will show how Rosetta's concept of meaning over-comes some weaknesses of earlier proposals and howa relation of logical consequence can be defined ont, op of it.2 An Old Idea: StructuredMeaningsIt has been argued that no theory of meaning thatis con:positional nd truth conditional can deal withpropoMtional attitudes.
For, whenever two expres-sions with different conlpositional (syntactic) struc-tures boil down - -  via the semantic operations con-netted with their respective structures - -  to the samemeaning, a person can fail to see the equivalence', hecan carry out the operations in the wrong way, ort, oo slowly (\[Cresswell 19851).
Cresswell and othershave concluded that syntactic structure has to takepart in meaning representations: t-indistinguishableexpressions may still have different meanings, due todifferences in syntactic structure.
D.Lewis, for in-stance, used semantically interpreted phrase markers(roughly: syntax trees with logical formulas attachedto the nodes) as meanings for natural language ex-pressions (\[Lewis 1972\]).
However, this leads to anextremely strict notion of synonymy:Perhaps we would cut thereby meanings toofinely.
For instance, we will be unuble to ~greewith someone who says that a double negationhas the same meaning as the corresponding af-firmative.
(\[Lewis 19721)Also, no relation of logical consequence has seen thelight for any notion of structured meaning.
In thesequel we will deal with the notion of meaning in-herent in the Rosetta automatic translation project(e.g.
\[Landsbergen 19821, \[Landsbergen 1985\],\[Landsbergen 1987\], or \[de Jong and Appelo 1987\]).This notion of meaning - -  essentially an elaborationof the one proposed by Lewis - -  allows a suitablyweaker notion of synonymy, and can also be providedwith a notion of logical consequence.
Thus, some ofthe weak sides of older "structured meanings" pro?posals are compensated for.853 Structured Meanings inRoset taRosetta uses a variant of Montague grammar(\[Montague 1974\]), in which each syntax rule has asemantic counterpart.
Each node in the syntacticderivation tree (D-tree) for a sentence is associatedwith a semantic rule.
Thus, each D-tree is associ-ated with a semantic tree (M-tree), whose nodes aresemantic rules and whose leaves are non-logical con-stants.
By applying the semantic rules to their ar-guments, a logical formula can be calculated for eachnode in the M-tree that stands for its truthcondi-tional me~ning.
We will call this fornmla the cor-responding formula of the node.
Now in Rosetta,a sentence meaning is not, as in \[Montague 1974\],identified with the formula that corresponds to thetop node of an M-tree, but with the entire tree.Thus, syntactic structure in Rosetta becomes a partof meaning in much the same way as proposed byD.Lewis (see above).
For instance, the EnglishNoun Phrase 'ItMian giri' and its Spanish equivalent'muchach~ Italiana' might, if we simplify, both berepresented by the same M-tree:M1/ \M2 M3where M2 stands for the sets of italians, M3 standsfor the set of girls and M1 stands for the operation ofset intersection.
M1 is expressed by different syntaxrules in English and Spanish:REIn1: If a is an Adjective and fl is a Noun,then o~fl is a Nom.RjSV": If c~ is an Adjective and fl is ~L Noun,then f la  t is a Nora, where a ~ is the adjectivea, adjusted to number and gender of thellOUn ft.By mapping both of these rules onto M1, the two NPsare designated as translations of each other.
Now M-trees in Rosetta are used as vehicles for inter-lingualtranslation, but we will view them as "general pur-pose" representations for the meanings of natural an-guage expressions.
Viewed in this way, the followingdefinition of synonymy (notation: '=' )  between D-trees (and, derivatively, for natural language xpres-sions) is forthcoming:Synonymy (first version): D1 ~ D2 ?
*ae/- D1 = Rl(al,...,a,~) and D2 =R2(bl, ..., b,,), where Rt and R~ snap ontothe same meaning rule, und where it holdsfor a l l l< i<nthat  ai ~b i ,  or- D1 and D2 are basic expressions whichmap onto the same basic meaning.
(Definition of synonynly for M-trees, at this stage,comes down to simple equality of the trees.)
Thisnotion of meaning takes syntactic structure into ac-count, but does not "cut meanings too finely", sinceany two linguistic constructions can be designatedas synonymous.
For instunce, Lewis' "double nega-tion" problem can be countered as follows: the syn-tax rules of double negation (Raou~ler~e~) and plainaffirmation (R~Hi .... ) can be mapped onto one andthe same meaning rule, if the grammar writer decidesthat they are semantically indistinguishable.
Alter-natively, the semantic relation between a D-tree ofthe formR-negation\[R-negationIDand its constituent ree D nl~y be accounted for ifboth trees are snapped onto one and the same M-tree.Effectively, this would come down to an extension ofRosetta with "rules of synonynly" for entire trees,rather than for individual syntax rules.4 Inference w i th  M-t reesArguably, our grip on the notion of nleaning is in-complete if only the limiting case of structural equiv-alence is dealt with, leaving aside the more generalcase of structural consequence (~v/) .
Under whatconditions does, for instance, one belief follow fromanother?
Rosetta's isomorphy-based notion of mean-ing seems ill-equipped to deal with inference, but weclaim theft an extrapolation is possible.A natural boundary conditions on ~M is logicalvalidity: no rule may lead from true premises to afalse conclusion.
Writing '~-' for the relation hold-ing between M-trees if the formulas corresponding totheir top-nodes tand in the relation of logical conse-quence, this gives:Val id i ty:  T,, ~M Tb only if T,, ~ Tt,.Given validity as an upper bound, we seek reason-able lower bounds on structural inference.
It is notgenerally valid to allow that a tree has all its sub-trees as structural consequences.
(For instance, the86 2negation of a tree T does not have the subtree T asa consequence.)
However, a solution can be found ifwe take the dual nature of our concept of meaninginto account: M-trees combine structural and logicalinformation.
Therefore, if one tree is a subtree of an-other tree, and also a purely logical consequence ofthe bigger tree, then the inference is indisputable; forthe inference is logically correct and there can be nodifference in syntactic structure:Subt ree  Pr inc ip le  (1 't version): If (i) T ,T~, and (ii) T1, is a subtree of T,~ then T,~~M Tb.However, we have to exclude as "pathological" casesall those situations ill which it is not one and the samesubtree Tt, that takes care of the logical and the struc-tural side: we cannot allow inferences uch as thefollowing - -  where S abbreviates a "paraphrase" ofS, namely a sentence that is logically, but not struc-turally, equivalent o S (see below) --.
even thoughthey fulfil both conditions of the Subt ree  Pr inc ip le:(2) -, a ( s  - ,  v~M St v s2.These inferences are not structurally valid, given thestructural differences between the conclusion and therelevant part of the premise.
Let an atomic sententialfragment (asj) be a sentential M-tree no proper partof which is sentential itseff.
To be on the safe side,we might forbid that "par&phases" of asps from theconclusion occur in the premisse:Subt ree  Pr inc ip le  (2 nd version): If (i) T,~Tt, and (ii) Tb is a subtree of T,~ and (iii)If T I  is an asf that occurs essentially in T,~and T2 is an asf that occurs essentially illTb, then T\].
is not a paraphrase of T2, thenTa t=M T~,,where a paraphrase is a logical equivalent hat fallsshort of structural equivalence:Paraphrase  (1 ~t version): T1 is a para-phrase of T2 ?~D,j Tl ~ T2 and T2 ~ Tlbut none of the two is a subtree of the other.The resulting logic is quite uncommon unless strongerlower bounds are given.
For instance, if (ii) is a nec-essary condition, there cannot be any tree T suchthat ~M T. Consequently, the Deduction Theoremwill not hold.
Also, if (iii) is a necessary condition,then Conjunction Elimination fails to hold.
In fact,it holds for all Sl and $2 that SI&S2 ~M $2.
Toremedy this defect, (iii) may be weakened to allowlogically inessential occurrences of paraphrases:Inessent ia l  occurrence: An occurrenceof T in the premisse (conclusion) of an inoference is inessential if the inference goesthrough when T is replaced by an arbitraryT' everywhere in the premisse (conclusion).For instance, the occurrence of S in (1) and (2) is es-sential, but its occurrence in S&S ~/~ S is inessen-tial and therefore harmless.
As a result of this change,a restricted version of Conjunction Elimination holds,to the effect that a conjunction will structurally im-ply ally of its eonjuncts, provided the conchslon con-junct does not contain two asf's that are paraphrasesof eachother.
This concludes our formalization of the"subtree" intuition.
If we want to cover more ground,we need a more liberal concept than the structuralno~ion of one tree being a subtree of another.
First, amore subtle structural notion may be employed.
Forinstance, an inference from Each dog barks loudly toEach black dog barks must be allowed, it seems, eventhough none of the two M-trees is a p,'u't of the other.Therefore, a relation of constituent-wise comparabil-ity (~,,  definition follows) is called for.
It is impor-tant to note that the "direction" of the comparison(which of the two subsumes which) is irrelevant, sincethe logical requirement (i) determines the direction ofthe inference:Subt ree  Pr inc ip le  (3 r'~ version): If (i) T,,Wl, and (ii) Ta ~ T1, and (iii) (as above),then T,~ ~M Tb.If the notation ~-.
stands for the symmetrical relationthat holds between two trees if one of them is a sub-tree of the other, this is the definition of the relationComparabi l i ty :  T,~ ~:  TI, ~D~\]~rn, n > 0 such that T,~ = < Tal,...,Ta,.~> and Tb = < Tbl,...,Tbm >, where eitherV Tai "-7 Tbi : Tai ~ Tbj or Y T~, s 3 T,,i :Tba' ~-- T,, .Here, T~ = < TuI,...,T~,, > means that T~ can bedecomposed (at an arbitrary level of the tree) as thesequence W,,1 ,...,Tun.Example :  The M-trees for Each black dog barks andEach dog barks stand in the relations ~c and ~, whilethe M-trees for Each dog barks loudly and Each blackdog barks do not stand ill the relation ~, but they dostand in the relation "~c.
They are constituent-wisecomparable, so since the first logically implies (~)the second, the first must also have the second as astructural consequence (~M):87Each dog barks loudlyTa/ \Each dog barks loudlyTal Ta2/ \ / \Each dog barks loudlyB1 B2 B3 B4Each black dog barksTb/ \Each bl .
d. barksTbl B3/ \B1 Tbl2Each black dog/ \B5 B2black dogHere, T~ ~ Tb holds, for T,~ = < B1, B2, T,~2 >, andT~, = < B1, T, n2, B3 >, while B2 is a subtree of Tb12and B3 is a subtree of T,~2.
End of  ExampleNote that, by replacing the subtree notion by thesymmetrical notion ~.c, we now allow a conclusionto introduce asf's that do not occur in the premisse.For instance, under appropriate assumptions, it willhold that S ~-M S and SL, for logically true SL.
Thisdefect can be remedied simply if we add a clause thatprevents a conclusion from contaiuing any novel asf's(see (iv), below)So far, the Subtree Principle still formalizes a strictlystructural approach.
But there ought to be more tllanthat.
In the ideolect of a given language user, twogrammar ules, or two lexical items, may be seman-tically related without any strictly structural notionbeing involved.
Within the bounds of Validity ~ndthe Subtree Principle, the grammar writer is free todesignate certain pairs of syntax rules or lexical itemsas semantically related.
Since, again, the direction ofthe relation is irrelevant, this refinement can easilybe built in into the definition of ~ .
If this is done,the relation ,~?
will also hold between Each mammalbarks loudly and Each black dog barks, assuming that'mammal' and 'dog' are semantically related.
Note,however, that these stipulations need not be the samefor all language users: different stipulations of struc-tural relatedness may reflect differences in linguisticcompetence (\[Partee 1982\]).
In short, ore' proposalimplements the hypothesis that structural relationshold for everyone, while linguistic relations allow in-dividual variation.If all the suggested improvements on the SubtreePrinciple are taken into account, one might venturethe followhlg definition of structural consequence:Subtree Principle(final version): T,, ~-'MTb ~?
:~Def (i) We, ~ W~, and (ii) T,~ ~c Tb and(iii) If T1 is an asf that occurs essentially inT~ and T2 is an asf that occurs essentiallyill Tb, theu T1 is not a paraphrase of T2,and (iv) all asf's of T~, occur in T~.Since the notion of a subtree has now been replacedby constituent-wise comparability, the notion of aparaphrase must be redefined:Paraphrase  (final version): T1 is a para-phrase of T~.
?>De.f T1 ~ T2 and T2 ~ T1but T1 ~ T2.Assuming that a notion of inference has been estab-lished along these lines, synonymy between M-treescan now be defined as nmtual structural consequence(synonymy of D-trees is analogous):Synonymy (final version): T1 and T2 aresynonymous ?>D~f TI bM T~ and To.
bMT1.If the clauses in the first or the second version ofthe Subtree Principle are taken as collectively suffi-cient and necessary, the defined notion of synonymycoincides with the original Rosetta notion of ~hav-ing the same M-tree".
(In this case, T,, ~M T~, andT~, ~M Z, ?~ T,~ = T~,.)
This conveniently simplesituation breaks down in later versions of the Sub-tree Principle, where the relation of constituent-wisecomparability is used.
A simple example'.
(a) John walks and John walks slowly, and(b) John walks slowly and John walks.The Subtree Principle (3 r?t or final version) impliesthat (Z, ~M Tb) & (Ti, ~M Ta), and therefore,(a) and (b) are predicted to be synonymous, despitethe difference between their corresponding M-trees- -  which would have made them nonsynonymous inRosettWs original notion of synonymy.5 App l icat ions  and L imita-t ionsIn section 4, we presented one among several possibleways ill which a notion of structural consequence an488be defined on the basis of Rosetta's M-trees.
iNow wewill indicate briefly how M-trees can be applied topropositional attitudes and to natural language gen-eration outside the context of automatic translation.But~ there is a caveat, discussed under the header of"mixed inference".P ropos i t iona l  A t t i tudes .
Given that meaningsare M-trees, the natural solution to the problem of"de dicto" propositional attitudes is to let epistemicattitudes denote a relation between an individual andan M-tree.
Consequently, if a person x knows thatS, while S' and S share the same M-tree, then x ispredicted to also know that S ~.
Since this amountsto a much stronger relation of synonymy than log-ical equivalence (t-equivalence), the problems notedin the in~roduction do not arise.
The general situa-tion is that if x knows that S and S ~-M S", then itis predicted that x also knows that S H.Natura l  Language Generat ion .
Even outsidethe domain of automatic translation, M-trees can beused for naturM language generation.
For example,in a natural anguage question-answering application,the M-tree derived from the input-question can serveas a basis for generation, after some operations on theoriginal M-tree, in which a yes-no question is changedinto an affirmative or negative answer, for instance.In most applications where there is no M?tree avail-able, other means than M-trees can be used.
Forinstance, when the user of a query system asks as-sistance from the computer's help facility, pre-storednatural language text can replace M-trees.M ixed  In ference.
We have seen that inferenceon the basis of M-trees is feasible, but how about in-ference on the basis of premises, some of which arepurely logical while others are fully dressed M-trees?Two obvious approaches (where ~,  denotes mixedinference, and T 4, is a variable over those M-trees hav-ing 4' corresponding to their top nodes) are(i) ?, T p-~ ?
~,~ ?
,x  t = ?
(x i s thecorresponding formula of T's top node),i I T ,  ~ rNeither solution is satisfying: the first leaves T's lin-guistic structure unused; and the second, which quan-tifies over all the possible ways in which ?
can beexpressed, is computationally intractable.
The prob-lem wi~h mixed inference illustrates the one weak sideof structured meanings: they let linguistic structurecontribute to the meaning of an expression, but; it isimpo~sible to say (in model theoretic terms) what itcontributes.6 References\ [Carnap 1947\] Carnap,R.
Meaning and Ne-cessity.
University of Chicago Press,Chicago.\[Cresswell 1985\] Cresswell, M.J. StructuredMeanings.
The Semantics of Propo-sitional Attitudes.
MIT Press, Cam?bridge,M~s.\[van Deemter -89\] Structured Meanings Re-visited, IPO Manuscript 693-II, to appearin Bunt and van Hour (eds.)
LanguageTechnology.
Foris, Dordrecht.\[de Jong and Appelo 1987\] de Jong,F.
Ap-pelo,L.
Synonymy and ~lYanslation, 1987In: Proceedings of the 6th.
AmsterdamColloquium.\[Landsbergen 1982\] Landsbergen,J.
Ma-chine Translation Based on Loglcally Iso-morphic Montague Grammars.
Proceed-ings COL1NG 1982.\[Landsbergen 1985\] L~ndsbergen,J.
Isomer-phie Grammars and their use in theROSETTA 'lYanslation System.
PhilipsResearch M.S.
12.950.
In King,M.
(ed.
),Machine Translation: the state of the art.Edinburgh University Press.\[Landsbergen 1987\]L,~ndsbergen,J.
Montague Grammar andMachine Translation, in Whitelock,P.
etal.
(eds.)
Linguistic Theory and Com-puter Applications, Acad.
Press, London.\[Lewis 1972\] General Seman-tics, in D.Davidson and G.H~rm,~n (eds.
)Semantics of Natural Language.
Reidel,Dordrecht.\[Montague 1974\] Montague,R.
The ProperTreatment of Quantification in OrdinaryEnglish.
In R.H.Thomason (ed.
), FormalPhilosophy.
Yale University Press, NewHaven ~md London.\[Partee 1982\] Partee,B.
Belief Sentences andthe Limits of Semantics.
In Peters andSaarlnen (eds.
)\[Peters and SnaP\]non 1982\] Peters,S.
andSaarinen,E.
(eds.)
Processes, Beliefs andQuestions, D.Reidel, Dordrecht.89
