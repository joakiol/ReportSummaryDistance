Proceedings of the Multiword Expressions: From Theory to Applications (MWE 2010), pages 64?72,Beijing, August 2010Standardizing Complex Functional Expressions in JapanesePredicates: Applying Theoretically-Based Paraphrasing RulesTomoko Izumi?
Kenji Imamura?
Genichiro Kikui?
Satoshi Sato?
?NTT Cyber Space Laboratories,NTT Corporation{izumi.tomoko, imamura.kenji,kikui.genichiro}@lab.ntt.co.jp?Graduate School of Engineering,Nagoya Universityssato@nuee.nagoya-u.ac.jpAbstractIn order to accomplish the deep semanticunderstanding of a language, it is essen-tial to analyze the meaning of predicatephrases, a content word plus functionalexpressions.
In agglutinating languagessuch as Japanese, however, sententialpredicates are multi-morpheme expres-sions and all the functional expressionsincluding those unnecessary to the mean-ing of the predicate are merged into onephrase.
This triggers an increase in sur-face forms, which is problematic forNLP systems.
We solve this by introduc-ing simplified surface forms of predi-cates that retain only the crucial meaningof the functional expressions.
We con-struct paraphrasing rules based on syn-tactic and semantic theories in linguistics.The results of experiments show that oursystem achieves the high accuracy of77% while reducing the differences insurface forms by 44%, which is quiteclose to the performance of manuallysimplified predicates.1 IntroductionThe growing need for text mining systems suchas opinion mining and sentiment analysis re-quires the deep semantic understanding of lan-guages (Inui et al, 2008).
In order to accomplishthis, one needs to not only focus on the meaningof a single content word such as buy but also themeanings conveyed by function words or func-tional expressions such as not and would like to.In other words, to extract and analyze a predi-cate, it is critical to consider both the contentword and the functional expressions (Nasukawa,2001).
For example, the functional expressionswould like to as in the predicate ?would like tobuy?
and can?t as in ?can?t install?
are key ex-pressions in detecting the customer?s needs andcomplaints, providing valuable information tomarketing research applications, consumer opi-nion analysis etc.Although these functional expressions areimportant, there have been very few studies thatextensively deal with these functional expres-sions for use in natural language processing(NLP) systems (e.g., Tanabe et al, 2001; Mat-suyoshi and Sato, 2006, 2008).
This is due to thefact that functional expressions are syntacticallycomplicated and semantically abstract and so arepoorly handled by NLP systems.In agglutinating languages such as Japanese,functional expressions appear in the form ofsuffixes or auxiliary verbs that follow thecontent word without any space.
This sequenceof a content word (c for short) plus several offunctional expressions (f for short) forms apredicate in Japanese (COMP for completiveaspect marker, NOM for nominalizer, COP forcopular verb).
(1) kat -chai -takat -ta -n -dabuy -COMP -want -PAST -NOM -COPc -f1 -f2 -f3 -f4 -f5?
(I) wanted to buy (it)?The meaning of ?want to?
is expressed by -tai(f2) and the past tense is expressed by -ta (f3).64The other functional expressions, -chai(f1), -n(f4),and -da(f5), only slightly alter the predicativemeaning of ?wanted to buy,?
as there is no directEnglish translation.
Therefore, (1) expresses thesame fact as (2).
(2)  kai -takat -tabuy -want -PAST?
(I) wanted to buy (it).
?As shown, in Japanese, once one extracts apredicate phrase, the number of differences insurface forms increases drastically regardless oftheir similarities in meaning.
This is becausesentential predicates are multi-word or multi-morpheme expressions and there are two differ-ent types of functional expressions, one which iscrucial for the extraction of predicative meaningand the other, which is almost unnecessary forNLP applications.
This increase in surface formscomplicates NLP systems including text miningbecause they are unable to recognize that theseseemingly different predicates actually expressthe same fact.In this study, we introduce paraphrasing rulesto transform a predicate with complex functionalexpressions into a simple predicate.
We use theterm standardize to refer to this procedure.Based on syntactic and semantic theories in lin-guistics, we construct a simple predicate struc-ture and categorize functional expressions aseither necessary or unnecessary.
We then pa-raphrase a predicate into one that only retains thecrucial meaning of the functional expression bydeleting unnecessary functional expressionswhile adding necessary ones.The paper is organized as follows.
In Section2, we provide related work on Japanesefunctional expressions in NLP systems as well asproblems that need to be solved.
Section 3introduces several linguistic theories and ourstandardizing rules that we constructed based onthese theories.
Section 4 describes theexperiments conducted on our standardizationsystem and the results.
Section 5 discusses theresults and concludes the paper.
Throughout thispaper, we use the term functional expressions toindicate not only a single function word but alsocompounds (e.g., would like to).2 Previous Studies and ProblemsShudo et al (2004) construct abstract semanticrules for functional expressions and use them inorder to find whether two different predicatesmean the same.
Matsuyoshi and Sato (2006,2008) construct an exhaustive dictionary offunctional expressions, which are hierarchicallyorganized, and use it to produce different func-tional expressions that are semantically equiva-lent to the original one.Although these studies provide useful in-sights and resources for NLP systems, if the in-tention is to extract the meaning of a predicate,we find there are still problems that need to besolved.
There are two problems that we focus on.The first problem is that many functional ex-pressions are unnecessary, i.e., they do not ac-tually alter the meaning of a predicate.
(3) yabure -teshimat -ta -no -dearurip -COMP -PAST -NOM -COPc -f1 -f2 -f3 -f4?
(something) ripped.?
(3) can be simply paraphrased as (4)(4) yabure -tarip -PASTc -f1In actual NLP applications such as text mining,it is essential that the system recognizes that (3)and (4) express the same event of something?ripped.?
In order to achieve this, the systemneeds to recognize -teshimat, -no, and -dearu asunnecessary (f1, f3, f4 ??).
Previous studies thatfocus on paraphrasing of one functional expres-sion to another (f ?
f?)
cannot solve this prob-lem.The second problem is that we sometimesneed to add certain functional expressions inorder to retain the meaning of a predicate (?
?f).
(5) (Hawai-ni) P1iki, P2nonbirishi -takat -ta(Hawaii-to)  go relax -want -PASTc1 c2 f1 f2?I wanted to go to Hawaii and relax.?
(5) has a coordinate structure, and two verbalpredicates, iki (P1) ?go?
and nonbirishi-takat-ta(P2) ?wanted to relax?, are coordinated.As the English translation indicates, the firstpredicate in fact means iki-takat-ta ?wanted to65go,?
which implies that the speaker was not ableto go to Hawaii.
If the first predicate was ex-tracted and analyzed as iku, the base (present)form of ?go,?
then this would result in a wrongextraction of predicate, indicating the erroneousfact of going to Hawaii in the future (Presenttense in Japanese expresses a future event).
Inthis case, we need to add the functional expres-sions takat ?want?
and ta, the past tense marker,to the first verbal predicate.As shown, there are two problems that needto be solved in order for a system to extract theactual meaning of a predicate.i.
Several functional expressions are neces-sary for sustaining the meaning of the eventexpressed by a predicate while others barelyalter the meaning (f ??).ii.
Several predicates in coordinate sentenceslack necessary functional expressions at thesurface level (?
?f) and this results in awrong extraction of the predicate meaning.Based on syntactic and semantic theories in lin-guistics, we construct paraphrasing rules andsolve these problems by standardizing complexfunctional expressions.3 Construction of Paraphrasing RulesThe overall flow of our standardizing system isdepicted in Figure 1.
The system works as fol-lows.i.
Given a parsed sentence as an input, it ex-tracts a predicate(s) and assigns a semanticlabel to each functional expression based onMatsuyoshi and Sato (2006).ii.
As for an intermediate predicate, necessaryfunctional expressions are added if missing(?
?f).iii.
From each predicate, delete unnecessaryfunctional expressions that do not alter themeaning of the predicate (f ??).iv.
Conjugate each element and generate asimplified predicate.There are two fundamental questions that weneed to answer to accomplish this system.A) What are UNNECCESARY functional ex-pressions (at least for NLP applications),i.e., those that do not alter the meaning ofthe event expressed by a predicate?B) How do we know which functional expres-sions are missing and so should be added?We answer these questions by combining what isneeded in NLP applications and what is dis-cussed in linguistic theories.
We first answerQuestion A.3.1 Categorization of Functional ExpressionsAs discussed in Section 1 and in Inui et al(2008), what is crucial in the actual NLP appli-cations is to be able to recognize whether twoseemingly different predicates express the samefact.This perspective of factuality is similar to thetruth-value approach of an event denoted by pre-dicates as discussed in the field of formal seman-tics (e.g., Chierchia and Mcconnel-Ginet, 2000;Portner, 2005).
Although an extensive investiga-tion of these theories is beyond the scope of thispaper, one can see that expressions such as tense(aspect), negation as well as modality, are oftendiscussed in relation to the meaning of an event(Partee et al, 1990; Portner, 2005).Tense (Aspect): Expresses the time in (at/for)which an event occurred.Negation: Reverses the truth-value of an event.Modality: Provides information such as possi-bility, obligation, and the speaker?s eagernesswith regard to an event and relate it to what istrue in reality.The above three categories are indeed useful inexplaining the examples discussed above.
(6) kat -chai -takat -ta -n -dabuy -COMP -want -PAST -NOM -COPaspect modality tense(aspect)(7) kai -takat -tabuy -want -PASTmodality tense(aspect)?wanted to buy?The predicate ?kat-chai-takat-ta-n-da?
in (6) and?kai-takat-ta?
in (7) express the same event be-cause they share the same tense (past), negation(none), and modality (want).
Although (6) hasthe completive aspect marker -chai while (7)does not, they still express the same fact.
This isbecause the Japanese past tense marker -ta alsohas a function to express the completive aspect.The information expressed by -chai in (6) is re-66dundant and so unnecessary.On the other hand, the predicate ?iku?
in (5)and ?iki-takat-ta,?
which conveys the actualmeaning of the predicate, express a different factbecause they establish a different tense (presentvs.
past) and different modality (none vs. want).As shown, once we examine the abstract se-mantic functions of functional expressions, wecan see the factual information in a predicate isinfluenced by tense (aspect), negation, and mod-ality.
Therefore, the answer to Question A is thatnecessary functional expressions are those thatbelong to tense (aspect), negation, and modality.Furthermore, if there are several functional ex-pressions that have the same semantic function,retaining one of them is sufficient.3.2 Adding Necessary Functional ExpressionsThe next question that we need to answer is howwe find which functional expressions are miss-ing when standardizing an intermediate predicatein a coordinate structure (e.g., (5)).
We solve thisbased on a detailed analysis of the syntacticstructure of predicates.Coordinate structures are such that severalequivalent phrases are coordinated by conjunc-tions such as and, but, and or.
If a predicate iscoordinated with another predicate, these twopredicates must share the same syntactic level.Therefore, the structure in (5) is indeed depictedas follows (What TP and ModP stand for will bediscussed later).
[TP[ModP[VP(Hawai-ni) iki][VPnonbirishi]takat]ta ][TP[ModP[VP(Hawaii-to) go][VPrelax] want]PAST]This is the reason why the first predicate ikishould be paraphrased as iki-takat-ta ?wanted togo.?
It needs to be tagged with the modality ex-pression tai and the past tense marker ta, whichseems to attach only to the last predicate.This procedure of adding necessary function-al expressions to the intermediate predicate isnot as simple as it seems, however.
(8) nemutai-mitai-de kaeri -tagatte -tei -tasleepy-seems-COP gohome-want-CONT-PAST?He seemed sleepy and wanted to go home.
?In (8), the first predicate nemutai-mitai-de ?seemto be sleepy?
should be paraphrased as nemutai-mitai-dat-ta, ?seemed to be sleepy,?
in whichonly the functional expression indicating past isrequired.
The other functional expressions suchas tagatte ?want,?
and the aspect marker tei(CONTinuation) should not be added (nemutai-mitai-de-tagat(want)-tei(CONT)-ta(PAST) iscompletely ungrammatical).InputA parsed SentenceHontoo-wa Hawai-ni iki, nonbirishi takat ta n da kedoReally-TOP Hawaii-to go relax want PAST NOM COP but?I wanted to go to Hawaii and relax if I could.?i.
Predicate Extraction &Labeling Semantic Classesto Functional Expressionsii.
ADD necessaryfunctional expressions(?
?
f)iii.
DELETE unnecessaryfunctional expressions(f ?
?)iv.
Conjugate andGenerate simple predicatesOutputSimplified Predicatesikigoc[[[VP] ?]
?
]iki tai tago want PASTc [??]
[??
]iki takat tago want PASTnonbirishi takat tarelax want PASTiki-takat-ta?wanted to go?nonbirishi-takat-ta?wanted to relax?Figure 1.
The flow of Standardization.iki tai tago want PASTc [??]
[??
]nonbirishi takat ta n da kedorelax want PAST NOM COP butc [??]
[??]
[??]
[??]
[????
]nonbirishi takat ta n da kedorelax  want PAST NOM COP butc [??]
[??]
[??]
[??]
[????
][[[VP]             ModP]    TP]67Furthermore, the intermediate predicate in thefollowing example does not allow any functionalexpressions to be added.
(9) (imawa) yasui-ga (mukashiwa) takakat-ta(today) inexpensive-but (in old days) expensive-PAST?
(They) are inexpensive (today), (but) used tobe very expensive (in the old days.
)?In (9), the first predicate yasui ?inexpensive?should not be paraphrased as yasukat-ta ?wasinexpensive?
since this would result in the un-grammatical predicate of ?
*(they) were inexpen-sive (today).
?In order to add necessary functional expres-sions to an intermediate predicate, one needs tosolve the following two problems.i.
Find whether the target predicate indeedlacks necessary functional expressions.ii.
If such a shortfall is detected, decide whichfunctional expressions should be added tothe predicate.We solve these problems by turning to the in-completeness of the syntactic structure of a pre-dicate.Studies such as Cinque (2006) and Rizzi(1999) propose detailed functional phrases suchas TopP (Topic Phrase) in order to fully describethe syntactic structures of a language.
We adoptthis idea and construct a phrase structure of Jap-anese predicates which borrows from the func-tional phrases of TP, ModP, and FocP (Figure 2).ModP stands for a modality phrase and this iswhere modality expressions can appear.1  FocPstands for a focus phrase.
This is the phrasewhere the copula da appears.
This phrase isneeded because several modality expressionssyntactically need the copula da in either thefollowing or preceding position (Kato, 2007).The existence of FocP also indicates that themodality expressions within the phrase are com-plete (no more modality phrase is attached).
TPstands for a tense phrase and this is where thetense marker appears.Note that this structure is constructed for thepurpose of Standardization and other functional1 The structure of Figure 2 is recursive.
A modality expres-sion can appear after a TP.
Also, more than one ModP canappear although ModP and FocP are optional.projections such as NegP (negation phrase) willnot be discussed although we assume there mustbe one.
Based on the predicate structure in Fig-ure 2, we solve the two problems as follows.The first problem: Detecting whether the targetpredicate lacks necessary functional expressions.?
If the predicate has the past tense marker taor if the coordinate conjunction followingthe predicate is for combining phrases withtense, then consider the predicate as com-plete and do not add any functional expres-sions.
Otherwise, consider the predicate asincomplete and add the appropriate func-tional expressions.The underlying principle of this rule is that if apredicate is tensed, then its syntactic structure iscomplete.
As often described in syntactic theo-ries (e.g., Adger, 2003), a sentence can be said tobe a phrase with tense (i.e., TP).
In other words,if a predicate is tensed, then it can stand alone asa sentence.By adopting this idea, we judge the com-pleteness of a predicate by the existence of tense.Because Japanese marks past tense by the pasttense marker -ta, if a predicate has -ta, it is com-plete and no functional expressions need be add-ed.However, Japanese does not hold an explicitpresent tense marker; the base form of a verb isalso a present form.
We solve this by looking atwhich conjunction follows the predicate.
As dis-cussed in Minami (1993), the finite state and thetype of conjunction are related; some conjunc-tions follow tensed phrases while others followinfinitival phrases.
Following this, we categorizeall the coordinate conjunctions based on whetherthey can combine with a tensed phrase.
Theseconjunctions are listed as tensed in Table 1.
IfTP3(FocP) T:ta PAST [??
]3(ModP)*   Foc:da COP [??
]3VP   Mod: mitai ?seems?
[??
]4iku ?go?Figure 2.
Structure of a predicate.68the target phrase is followed by one of thoseconjunctions, then we do not add any functionalexpressions to them because they are complete.The second problem: Finding the appropriatefunctional expressions for incomplete interme-diate predicates.As discussed, we assume that predicates arecoordinated at one of the functional phrase levelsin Figure 2.
Functional expressions that need tobe added are, therefore, those of the outer phras-es of the target phrase.For example, if the target phrase has da, thehead of FocP, then it only needs the past tensemarker to be added, which is located above theFocP (i.e., TP).
This explains the paraphrasingpattern of (8).
Therefore, by looking at whichfunctional expressions held by the target predi-cate, one can see that functional expressions tobe added are those that belong to phrases abovethe target phrase.As shown, the answer to Question B is thatwe only add functional expressions to incom-plete predicates, which are judged based on theexistence/absence of tense.
The appropriatefunctional expressions to be added are those ofouter phrases of the target phrase.3.3 Implementing the StandardizationIn this final subsection, we describe how we ac-tually implement our theoretical observations inour standardization system.CATEGORIZE functional expressionsFirst, we selected functional expressions thatbelong to our syntactic and semantic categoriesfrom those listed in Matsuyoshi and Sato (2006),a total of about 17,000 functional expressionswith 95 different semantic labels.
We use ab-stract semantic labels, such as ?completion,??guess,?
and ?desire?
for the categorization(Table 2).We divided those that did not belong to oursyntactic and semantic categories into Deletablesand Undeletables.
Deletables are those that donot alter the meaning of an event and are, there-fore, unnecessary.
Undeletables are those thatare a part of content words, and so cannot bedeleted (e.g., kurai [??]
?about?
as in 1-man-en-kurai-da ?is about one million yen?).
Basedon the categorization of semantic labels as wellas surface forms of functional expressions, oursystem works as follows;ADD necessary functional expressionsA-1: Examine whether the target predicate hasthe tense marker ta or it is followed by theconjunctions categorized as tensed.
If not,then go to Step A-2.A-2: Based on the semantic label of the targetpredicate, decide which level of syntacticphrase the predicate projects.
Add functionalexpressions from the last predicate that be-longs to outer phrases.DELETE unnecessary functional expressionsD-1: Delete all the functional expressions thatare categorized as Deletables.D-2: Leave only one functional expression ifthere is more than one same semantic label.For those categorized as Negation, however,delete all if the number of negations is even.Otherwise, leave one.D-3: Delete those categorized as Focus if theydo not follow or precede a functional expres-sion categorized as Modality.GENERATE simple predicatesLast, conjugate all the elements and generatesimplified surface forms of predicates.4 Experiments and Evaluations4.1 Constructing Paraphrase DataWe selected 2,000 sentences from newspaperand blog articles in which more than one predi-cate were coordinated.2 We manually extractedpredicates (c-f1-f2..fn).
Half of them were those inwhich the last predicate had three or more func-tional expressions (n ?
3).2 We use Mainichi Newspapers from the year 2000.Table 1.
Coordinate conjunctions.Not tensed Tensedgerundiveform, teshi, dakedenaku, ueni, bakarika,hoka(ni)(wa), keredo, ga, nonitai-shi(te),ippou(de),hanmen69We then asked one annotator with a linguisticbackground to paraphrase each predicate into thesimplest form possible while retaining the mean-ing of the event.3 We asked another annotator,who also has a background in linguistics, tocheck whether the paraphrased predicates madeby the first annotator followed our criterion, andif not, asked the first annotator to make at leastone paraphrase.
424 out of 4,939 predicates(8.5%) were judged as not following the crite-rion and were re-paraphrased.
This means thatthe accuracy of 91.5% is the gold standard of ourtask.One of the authors manually assigned a cor-rect semantic label to each functional expression.Procedure i in Figure 1 is, therefore, manuallyimplemented in our current study.4.2 Experiments and ResultsBased on the standardization rules discussed inSection 3, our system automatically paraphrasedfunctional expressions of test predicates intosimple forms.
We excluded instances that hadsegmentation errors and those that were judgedas inappropriate as a predicate.
4  A total of1,501 intermediate predicates (287 for develop-ment and 1,214 for test) and 1,958 last predi-cates (391 for development and 1,567 for test)were transformed into simple predicates.The accuracy was measured based on the ex-act match in surface forms with the manuallyconstructed paraphrases.
For comparison, we3 We asked to delete or add functional expressions fromeach predicate when paraphrasing.
Only the surface forms(and not semantic labels) were used for annotation.4 In Japanese, a gerundive form of a verb is sometimes usedas a postposition.
The annotators excluded these examplesas ?not-paraphrasable.
?used the following baseline methods.?
No Add/Delete: Do not add/delete anyfunctional expression.?
Simp Add: Simply add all functional ex-pressions that the intermediate phrase doesnot have from the last predicate.Table 3 indicates the results.
Our standardizingsystem achieved high accuracy of around 77%and 83 % in open (against the test set) andclosed tests (against the development set) com-pared to the baseline methods (No Add/Delete(open), 55%; Simp Add (open), 33%).We also measured the reduced rate of differ-ences in surface forms.
We counted the numberof types of functional expressions in the last pre-dicates (a sequence of f1-f2-f3 is counted as one)before and after the standardization.For comparison, we also counted the numberof functional expressions of the manually pa-raphrased predicates.
Table 4 lists the results.
Asshown, our standardizing system succeeded inreducing surface differences in predicates fromthe original ones at the rate of 44.0%, which isquite close to the rate achieved by the humanannotators (52.0%).5 Discussion and ConclusionOur standardization system succeeded in gene-rating simple predicates in which only functionalexpressions crucial for the factual meaning ofthe predicate were retained.The predicates produced by our systemshowed fewer variations in their surface formswhile around 77% of them exactly matched thesimplified predicates produced by human anno-tators, which is quite high compared to the base-line systems.Table 2.
Syntactic and semantic categorization of semantic labels.Syntactic  Semantic  Semantic LabelsT if thesurface is taTense(Aspect)??(completion),??,??,??,??,??,??,??,??
?, ??
?, ??,?
?, ?
?, ?
?Negation ??
(negation), ??,????,????,???,???,??
?, ??
?, ??
?Mod Modality ??
(guess),  ??(desire),??,??,??,??,??,?
?, ?
?, ?
?, ?
?, ???
?, ??
?, ???,???,??,???,??
?Foc Focus ??
(affirmation), ???,?
?Deletables ??(politeness),?-??,??,??,?-??,????,?
?, ?
?, ???
?, ??,?
?, ????,????,??,??,???Undele-tables??
(about), ??,??,???,???,??,??,??,?
?, ?
?, ????,?
?, ?
?, ?
?, ?
?, ?
?, ??
?, ??
?, ?
?, ??
?, ???
?, ???
?, ??,?
?, ??
?, ??,??,??,??,??,??,??,??,?
?70This was achieved because we constructedsolid paraphrasing rules by applying linguistictheories in semantics and syntax.
The quite lowaccuracy of the baseline method, especiallySimpAdd, further supports our claim that im-plementing linguistic theories in actual NLP ap-plications can greatly improve system perfor-mance.Unlike the study by Inui et al (2008), we didnot include the meaning of a content word fordeciding the factuality of the event nor did weinclude it in the paraphrasing rules.
This lowersthe accuracy.
Several functional expressions,especially those expressing aspect, can be de-leted or added depending on the meaning of thecontent word.
This is because content words in-herently hold aspectual information, and oneneeds to compare it to the aspectual informationexpressed by functional expressions.
Because weneed a really complicated system to compute theabstract semantic relations between a contentword and functional expressions, we leave thisproblem for future research.Regardless of this, our standardizing systemis useful for a lot of NLP applications let alnetext mining.
As mentioned in Inui et al (2008),bag-of-words-based feature extraction is insuffi-cient for conducting statistically-based deep se-mantic analysis, such as factual analysis.
If stan-dardized predicates were used instead of a singlecontent word, we could expect an improvementin those statistically-based methods because eachpredicate holds important information about factwhile differences in surface forms are quite li-mited.In conclusion, we presented our system forstandardizing complex functional expressions inJapanese predicates.
Since our paraphrasingrules are based on linguistic theories, we suc-ceeded in producing simple predicates that haveonly the functional expressions crucial to under-standing of the meaning of an event.
Our futureresearch will investigate the relationship be-tween the meaning of content words and those offunctional expressions in order to achieve higheraccuracy.
We will also investigate the impact ofour standardization system on NLP applications.ReferencesAdger, David (2003).
Core Syntax: A minimalist ap-proach.
New York: Oxford University Press.Chierchia, Gennaro, & Sally McConnell-Ginet (2000).Meaning and grammar: An introduction to se-mantics (2nd ed.).
Cambridge, MA: The MITpress.Cinque, Guglielmo (2006).
Restructuring and func-tional heads: The cartography of syntactic struc-tures, Vol.
4.
New York: Oxford University Press.Haugh, Michael (2008).
Utterance-final conjunctiveparticles and implicature in Japanese conversation.Pragmatics, 18 (3), 425-451.Inui, Kentaro, Shuya Abe, Kazuo Hara, Hiraku Mori-ta, Chitose Sao, Megumi Eguchi, Asuka Sumida,Koji Murakami, & Suguru Matsuyoshi (2008).Experience mining: Building a large-scale data-base of personal experiences and opinions fromweb documents.
Proceedings of the 2008IEEE/WIC/ACM International Conference onWeb Intelligence and Intelligent Agent Technolo-gy, Vol.
1., 314-321.Kato, Shigehiro (2007).
Nihongo-no jutsubu-kouzouto kyoukaisei [Predicate complex structure andmorphological boundaries in Japanese].
The an-nual report on cultural science, Vol.
122(6) (pp.97-155).
Sapporo, Japan: Hokkaido University,Graduate School of Letters.Matsuyoshi, Suguru, & Satoshi Sato (2006).
Compi-lation of a dictionary of Japanese functional ex-pressions with hierarchical organization.
Proceed-ings of the 21st International Conference onComputer Processing of Oriental LanguagesNormalization No Add/Delete Simp AddOpen (Intermediate) 77.7%(943/1214) 57.8%(702/1214) 32.8%(398/1214)Closed (Intermediate) 82.9%(238/287) 62.0%%(178/287) 35.2%(101/287)Open (Last) 76.2%(1194/1567) 51.9% (203/391) n.aClosed (Last) 83.4%(326/391) 48.1%(188/391) n.a.Table 3.
Results of our normalization system.Original 943 types Reduced RateNormalization 530 types 44.0%Human Annotation 448 types 52.0%Table 4.
Reduced rate of surface forms.71(ICCPOL), Lecture Notes in Computer Science,Vol.
4285, 395-402.Matsuyoshi, Suguru, & Satoshi Sato (2008).
Auto-matic paraphrasing of Japanese functional expres-sions using a hierarchically organized dictionary.Proceedings of the 3rd International Joint Confe-rence on Natural Language Processing (IJCNLP),Vol.
1, 691-696.Minami, Fujio (1993).
Gendai nihongobunpou-norinkaku [Introduction to modern Japanese gram-mar].
Tokyo: Taishuukan.Nasukawa, Tetsuya (2001).
Kooru sentaa-niokerutekisuto mainingu [Text mining application forcall centers].
Journal of Japanese society for Ar-tificial Intelligence, 16(2), 219-225.Partee, Barbara H., Alice ter Meulen, & Robert E.Wall (1990).
Mathematical methods in Linguistics.Dordrecht, The Netherland: Kluwer.Portner, Paul H. (2005).
What is meaning?
: Funda-mentals of formal semantics.
Malden, MA:Blackwell.Rizzi, Luigi (1999).
On the position ?Int(errogative)?in the left periphery of the clause.
Ms., Universit?di Siena.Shudo, Kosho, Toshifumi Tanabe, Masahito Takaha-shi, & Kenji Yoshimura (2004).
MWEs as non-propositional content indicators.
Proceedings ofsecond Association for Computational Linguistics(ACL) Workshops on Multiword Expressions: In-tegrating Processing, 32-39.Tanabe, Toshifumi, Kenji Yoshimura & Kosho Shu-do (2001).
Modality expressions in Japanese andtheir automatic paraphrasing.
Proceedings of the6th Natural Language Processing Pacific RimSymposium (NLPRS), 507-512.Tsujimura, Natsuko.
(2007).
An Introduction to Jap-anese Linguistics (2nd Ed.).
Malden, MA: Black-well.72
