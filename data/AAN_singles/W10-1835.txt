Proceedings of the Fourth Linguistic Annotation Workshop, ACL 2010, pages 217?221,Uppsala, Sweden, 15-16 July 2010. c?2010 Association for Computational LinguisticsAn integrated tool for annotating historical corporaPablo Picasso Feliciano de Faria?University of CampinasCampinas, Brazilpablofaria@gmail.comFabio Natanael Kepler?University of Sao PauloSao Paulo, Brazilkepler@ime.usp.brMaria Clara Paix?o de SousaUniversity of Sao PauloSao Paulo, Brazilmclara.ps@gmail.comAbstractE-Dictor is a tool for encoding, applyinglevels of editions, and assigning part-of-speech tags to ancient texts.
In short, itworks as a WYSIWYG interface to en-code text in XML format.
It comes fromthe experience during the building of theTycho Brahe Parsed Corpus of HistoricalPortuguese and from consortium activitieswith other research groups.
Preliminaryresults show a decrease of at least 50% onthe overall time taken on the editing pro-cess.1 IntroductionThe Tycho Brahe Parsed Corpus of Historical Por-tuguese (CTB) (Cor, 2010) consists of Portuguesetexts written by authors born between 1380 and1845.
Been one of the forefront works amongprojects dedicated to investigate the history of Por-tuguese language, it contributed to the renovationof the theoretical relevance of studies about thelinguistic change in different frameworks (Mat-tos e Silva, 1988; Kato and Roberts, 1993; deCastilho, 1998).This resulted in crescent work with ancient textsin the country (Megale and Cambraia, 1999), and,by the end of the 1990s, the work on Corpus Lin-guistics has given rise to a confluence betweenphilology and computer science, a relationship notso ease to equate.1.1 Philological and computational needsIn studies based on ancient texts, above all, onehas to guarantees fidelity to the original forms ofthe texts.
Starting with a fac-simile, a first op-tion would be the automatic systems of character?Thanks to FAPESP, n. 2008/04312-9, for funding partof the development of E-Dictor.?
Thanks to CAPES for the scholarship granted duringthe initial part of this work.recognition (OCR).
For the older texts, however,the current recognition technologies have proveninefficient and quite inadequate for handwrittendocuments (Paix?o de Sousa, 2009).
Anyway onecannot totally avoid manual transcription.There are different degrees of fidelity betweenthe transcription and the original text.
In prac-tice, one often prepares a ?semi-diplomatic?
edi-tion, in which a slightly greater degree of interfer-ence is considered acceptable ?
eg., typographicalor graphematic modernization.
A central goal ofthe philological edition is to make the text accessi-ble to the specialist reader, with maximum preser-vation of its original features.However, it needs to be integrated with compu-tational and linguistic requirements: the need forquantity, agility and automation in the statisticalwork of selecting data.
The original spelling andgraphematic characteristics of older texts, for ex-ample, may hinder the subsequent automatic pro-cessing, such as morphological annotation.
Thus,the original text needs to be prepared, or edited,with a degree of interference higher than that ac-ceptable for a semi-diplomatic edition and that iswhere the conflict emerges.1.2 BackgroundThe modernization of spellings and standardiza-tion of graphematic aspects, during the first yearsof CTB, made texts suitable for automated pro-cessing, but caused the loss of important featuresfrom the original text for the historical study oflanguage.
This tension has led to the project?Memories of the Text?
(Paix?o de Sousa, 2004),which sought to restructure the Corpus, basedon the development of XML annotations (W3C,2009), and to take advantage of the core features ofthis type of encoding, for example, XSLT (W3C,1999) processing.A annotation system was conceived and appliedto 48 Portuguese texts (2, 279, 455 words), which217allowed keeping philological informations whilemaking the texts capable of being computationallytreated in large-scale.
Since 2006, the system hasbeen being tested by other research groups, no-tably the Program for the History of PortugueseLanguage (PROHPOR-UFBA).
The system, then,met its initial objectives, but it had serious issueswith respect to reliability and, especially, ease ofuse.We noted that manual text markup in XMLwas challenging to some and laborious for every-one.
The basic edition process was: transcriptionin a text editor, application of the XML markup(tags plus philological edition), generation of astandardized plain text version to submit to auto-matic part-of-speech tagging, revision of both files(XML and tagged).
All in this process, except fortext tagging, been manually done, was too subjectto failures and demanded constant and extensiverevision of the encoding.
The need for an alter-native, to make the task more friendly, reliable,and productive, became clear.
In short, two thingswere needed: a friendly interface (WYSIWYG),to prevent the user from dealing with XML code,and a way to tighten the whole process (transcrip-tion, encode/edition, POS tagging and revision).1.3 Available toolsA search for available options in the market (freeand non-free) led to some very interesting tools,which may be worth trying:?
Multext1: a series of projects for corpora en-coding as well as developing tools and lin-guistic resources.
Not all tools seem to havebeen finished, and the projects seems to beoutdated and no longer being maintained.?
CLaRK2: a system for corpora developmentbased on XML and implemented in Java.
Itdoes not provide a WYSIWYG interface.?
Xopus3: an XML editor, which offers aWYSIWYG interface.
Some of its funcional-ities can be extended (customized) throught aJavascript API.?
<oXygen/> XML Editor4: a complete XMLdevelopment platform with support for all1http://aune.lpl.univ-aix.fr/projects/multext/.2http://www.bultreebank.org/clark.3http://xopus.com/.4http://www.oxygenxml.com/.major XML related standards.
An XMLfile can be edited in the following perspec-tives: XML text editor, WYSIWYG-like edi-tor, XML grid editor, tree editor.Unfortunately, all the cited tools lack the ca-pability of dealing proper with levels of editionfor tokens (words and punctuations) and an inte-grated environment for the whole process of edi-tion.
Thus, in spite of their amazing features, noneof them was sufficiently suitable, specially con-cerning spelling modernization and normalizationof graphematic aspects.
In fact, this is expectedfor the tools are intended to broader purposes.1.4 SolutionConception and development of a tool, E-Dictor,where the need for a WYSIWYG interface joineda second goal, ie., integrating the tasks of thewhole process, which would then be performedinside the same environment, with any necessaryexternal tools being called by the system, trans-parently.2 Integrated annotation tool2.1 General featuresE-Dictor has been developed in Python5 and, to-day, has versions for both Linux and Windows(XP/Vista/7) platforms.
A version for MacOS isplanned for the future.
It is currently at 1.0 betaversion (not stable).2.2 General interface featuresAs shown in Figure 1, the main interface has anapplication menu, a toolbar, a content area (di-vided into tabs: Transcription, Edition, and Mor-phology), and buttons to navigate throught pages.The tabs are in accordance with the flow of the en-coding process.
Many aspects of the functioningdescribed in what follows are determined by theapplication preferences.In the ?Transcription?
tab, the original textis transcribed ?as is?
(the user can view thefac-simile image, while transcribing the text).Throught a menu option, E-Dictor will automat-ically apply an XML structure to the text, ?guess-ing?
its internal structure as best as it can.
Then,in the ?Edition?
tab, the user can edit any token or5Available on internet at http://www.python.org/, last access on Jan, 21th, 2010.
Python has been usedin a number of computational linguistics applications, e.g.,the Natural Language Toolkit (Bird et al, 2009).218Figure 1: E-Dictor GUI.structural element (eg., paragraph).
Finally, in the?Morphology?
tab, tokens and part-of-speech tagsare displayed in token/TAG format, so they can berevised6.2.3 The XML structureThe XML structure specified meets two maingoals: (i) be as neutral as possible (in relation tothe textual content encoded) and (ii) suit philolog-ical and linguistic needs, i.e., edition must be sim-ple and efficient without losing information rele-vant to philological studies.
In the context of CTB,it was initially established a structure to encode thefollowing information:?
Metadata: information about the source text,e.g., author information, state of processing,etc.?
Delimitation of sections, pages, paragraphs,sentences, headers and footers, and tokens.?
Class of tokens (part-of-speech tags) andphonological form for some tokens.?
Types (levels) of edition for each token.?
Comments of the editor.?
Subtypes for some text elements, like sec-tions, paragraphs, sentences and tokens (eg.,a section of type ?prologue?
).6The current version of E-Dictor comes with a POS tag-ger, developed by Fabio Kepler, accessed by a menu option.2.4 Encoding flexibilityA key goal of E-Dictor is to be flexible enough soas to be useful in other contexts of corpora build-ing.
To achieve this, the user can customize the?preferences?
of the application.
The most promi-nent options are the levels of edition for tokens; thesubtypes for the elements ?section?, ?paragraph?,?sentence?, and ?token?
; and the list of POS tags tobe used in the morphological analysis.
Finally, inthe ?Metadata?
tab, the user can create the suitablemetadata fields needed by his/her project.2.5 FeaturesThrought its menu, E-Dictor provides some com-mon options (eg., Save As, Search & Replace,Copy & Paste, and many others) as well as thoseparticular options intended for the encoding pro-cess (XML structure generation, POS automatictagging, etc.).
E-Dictor provides also an optionfor exporting the encoded text and the lexiconof editions7 in two different formats (HTML andTXT/CSV).2.6 EditionTo conclude this section, a brief comment abouttoken (words and punctuation) edition, which isthe main feature of E-Dictor.
The respective in-terface is shown in Figure 2.
When a token is se-7The actual editions applied to words and punctuations ofthe original text.219Figure 2: Details of the token edition interface.lected, the user can: (i) in the ?Properties?
panel,specify the type of the token (according to the sub-types defined by the preferences), its foreign lan-guage, and format (bold, italic, and underlined);(ii) in the ?Edition?
panel, specify some otherproperties (eg., phonological form) of the tokenand include edition levels (according to the levelsdefined by the preferences).To each token, the user must click on ?Applychanges?
to effectivate (all) the editions made to it.The option ?Replace all?
tells E-Dictor to repeatthe operation over all identical tokens in the re-maining of the text (a similar functionality is avail-able for POS tags revision).3 DiscussionThe dificulties of encoding ancient texts in XML,using common text editors, had shown that a toolwas necessary to make the process efficient andfriendly.
This led to the development of E-Dictor,which, since its earlier usage, has shown promis-ing results.
Now, the user does not even have toknow that the underlying encoding is XML.
It isonly necessary for him/her to know the (philolog-ical and linguistics) aspects of text edition.E-Dictor led to a decrease of about 50% in thetime required for encoding and editing texts.
Theimprovement may be even higher if we considerthe revision time.
One of the factors for this im-provement is the better legibility the tool provides.The XML code is hidden, allowing one to prac-tically read the text without any encoding.
To il-lustrate the opposite, Figure 3 shows the commonedition ?interface?, before E-Dictor.
Note that thecontent being edited is just ?Ex.mo Sr. Duque?.Finally, the integration of the whole process intoone and only environment is a second factor for theoverall improvement, for it allows the user to movefreely and quickly between ?representations?
andFigure 3: Example of XML textual encoding.to access external tools transparently.3.1 ImprovementsE-Dictor is always under development, as we dis-cuss its characteristics and receive feedback fromusers.
There is already a list of future improve-ments that are being developed, such as extendingthe exporting routines, for example.
A bigger goalis to incorporate an edition lexicon, which wouldbe used by the tool for making suggestions duringthe edition process, or even to develop an ?auto-matic token edition?
system for later revision bythe user.3.2 PerspectivesBesides CTB, E-Dictor is being used by the BBDproject (BBD, 2010), and, recently, by varioussubgroups of the PHPB project (For a History ofPortuguese in Brazil).
These groups have largeexperience in philological edition of handwrittendocuments, and we hope their use of E-Dictor willhelp us improve it.
The ideal goal of E-Dictor is tobe capable of handling the whole flow of linguisticand philological tasks: transcription, edition, tag-ging, and parsing.220References[BBD2010] BBD.
2010.
Biblioteca Brasiliana Digital.
[Bird et al2009] Steven Bird, E. Klein, and E. Loper.2009.
Natural Language Processing with Python.O?Reilly.
[Cor2010] IEL-UNICAMP and IME-USP, 2010.
C?r-pus Hist?rico do Portugu?s Anotado Tycho Brahe.
[de Castilho1998] Ataliba Teixeira de Castilho.
1998.Para a hist?ria do portugu?s brasileiro, volume VolI: Primeiras id?ias.
Humanitas, S?o Paulo.
[Kato and Roberts1993] Mary A. Kato and Ian Roberts.1993.
Portugu?s brasileiro: uma viagem Di-acr?nica.
Editora da Unicamp, Campinas.
[Mattos e Silva1988] Rosa Virg?nia Mattos e Silva.1988.
Fluxo e refluxo: uma retrospectiva da ling?
?s-tica hist?rica no brasil.
D.E.L.T.A., 4(1):85?113.
[Megale and Cambraia1999] Heitor Megale and C?sarCambraia.
1999.
Filologia portuguesa no brasil.D.E.L.T.A., 15(1:22).
[Paix?o de Sousa2004] Maria Clara Paix?o de Sousa.2004.
Mem?rias do texto: Aspectos tecnol?gicosna constru?
?o de um corpus hist?rico do portugu?s.Projeto de p?s-doutorado ?
fapesp, Unicamp.
[Paix?o de Sousa2009] Maria Clara Paix?o de Sousa.2009.
Desafios do processamento de textos anti-gos: primeiros experimentos na brasiliana digital.
InI Workshop de Lingu?stica Computacional da USP,S?o Paulo, 11.
[W3C1999] W3C.
1999.
Extensible stylesheet lan-guage transformation.
[W3C2009] W3C.
2009.
Extensible markup language.221
