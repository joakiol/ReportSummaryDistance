Learning Morphology: Algorithms for the Identification of the Stem ChangesEvelin KuusikInstitute of the Estonian LanguageRoosikrantsi 6,Tallinn EE0100, Estoniae-mail: evelin@kki.eeThe aim of the current work is tocreate tools' for the automatic recognition ofthe Estonian stem changing rules'.
The mainproblem consists in bringing together the,fi)rmal classification,features available to thecomputer and classification based on humanknowledge.
This paper introduces twoalgorithms.
First, in STLearn the supervisedinductive learning technique is used to findout the suitable jeatures Jor automaticrecognising of the stem changes.
Two stemvariants" can be bounded by more than onestem change.
The second algorithm is createdJor the identifjdng the whole set of rules Jorstem pairs'.Current work is a part of a projectbased on the open model of language\[Viks94\] according to which all regular andproductive phenomena of the naturallanguage are represented bydifferent types ofrules and irregular phenomena are listed insmall dictionaries exception lists.
Thisapproach gives opportunity to process theregular words not listed in dictionaries - newderivatives, loan-words etc.Subsystem of morphology plays thecentral role in processing of themorphologically complex languages as theEstonian language is.The number of possible stem variantscan strongly vary in Estonian: in someinflection types there are no stem variants atall, in some of them a word can have evenfive different regular stem variants.
Currentwork presents tools ~br creating a formaldescription of the Estonian stem changingrules, starting from the pair of the stemvariants.
The Concise MorphologicalDictionary of the Estonian (CMD) \[Viks92\]serves as a bases for current work andcontains over 36 000 headwords, each ofthem has two stem variants on the averages.The principle types of changes are thefollowing:1.
Stem-grade changes.
Stem can occureither in a strong or a weak grade; thegrades are differentiated first of all byphonetic quantity (2nd or 3rd degree ofquantity marked by') that may beaccompanied by various sound changesenfblding the medial sounds.
For instancemembers of the stem pair h6ive-h'~ive aredistinguished only by the differentphonetic quantity; in case of couple aat2e-'aal2e the rewriting rule b --+ p isconcurrent with the phonetic quantitychange.2.
Stem-end changes.
Stem can appear eitheras a lemmatic stem or an inflection stem;stem variants are differentiated bychanges enfolding the final sounds ( e.g.
'aadel-aadli, j'alg \~bot\-j'alga, sipelgas"\ant\-sipelga).3.
Secondary changes.
These changes areconditioned by the certain context arisingafter either the stem-end or the stem-grade change (e.g.
k'uppel \dome\ --~* k'uppli --+ k'upli).About 20 % of stems tay changeless,mostly take place the stem-end or stem-gradechanges or both at the same time.Formally the recognition of the stemchange rules can be reduced to theclassification task with string pairs as theobjects to classify and possible rules of stemchanges as the classes.
System has to createclass descriptions from the 'available' data:characters and their belongness to the soundclasses.
The important demand to theclassification system is the linguistical1102correctness \[Kuus95\].
Because of that thetechnique of inductive supervised learning isthe most suitable for the current ask.Inductive supervised learning(learning from examples) is one of the maintechniques in machine learning.
Given a setof examples and counterexamples of a classthe learning system induces a general classdescription that covers all of the positiveexamples and none of the counterexamples.Most of the learning algorithmsassume the attribute-value pairs as input, withfixed number of attributes and known set ofvalues lbr every attribute.
In case of data,presented as strings, class is often defined bythe substring varying in length.
Determiningis the main attribute (in our case, charactercorresponding to the changing sound) and itsdirect environs - context hat consists of thecomplement attributes, in most cases thewidth of the determining context is unknownat first - the \[earning system has to deal withundefined nmnber of the attributes.The main specifying operation in caseof string data is the adding an attribute -extending the context.
As the length of thestrings can be very different and in mostcases strings are relatively long, then thelearning direction towards expanding thecontext is preferable.
The other way, toconsider all string as context at first and try tospeeit) the class description by dropping theredundant attributes arc much more complex(complexity depends directly on stringlength).
'\['he algorithm is designed to findclass description for each of the seven tbrmalrules of stem changes:1. deletion of the single character;2. insertion of the single character;3. replacement of the single character by thesingle character;4. replacement of the two characters by thesingle character;5. replacement of the single character by thetwo characters;6. replacement of the two characters by thetwo characters;7. replacement of the (final) suffixes.The six rules correspond to the stem-grade changes, the last one corresponds to thestem-end changes.
The seven tbrmal rules ofstem changes described above make up theset of classes.
As at the same time only one ofthese can be recognised is suitable to join thesingle class descriptions into decision listcovering the whole set of examples.
Decisionlist is the sequence of the (/ then.., else...clauses arranged according to the generalitylevel of the conditions, while the lastcondition (class description tbr the stem-endchanges in current case) is the constant rue.In other words il" between two stem wtriantsno stem-grade changes is observed, the stem-end change holds between them.For each stem-grade changing rule thesystem has to create the descriptiondifferentiating stem variant pairs placedunder it from all others.
Main attributes arcthe character(s) corresponding to changingsound in the first string and the character(s) inthe same position(s) in the second one.Theretbre the description is represented as adisjunction of the conjunctions:((aieconsonant)/~ (b,Evowel)) v ((aicvowel)/x (bi c vowel))...Inductive learning system needs thedomain expert who gives the possible classesand provides each class with examplesobjects belonging to this class.
Usually thecounterexamples objects which do notbelong to the class are given too.
In this workpositive examples are the stem variant pairssubordinating to current stein changing rule.Counterexamples are positive examples of allremaining classes.
The initial descriptionhypothesis takes into account only thecharacters correponding to the changingsound.
The description is specified by addingconditions - extending the context.
(',ontext can bc extended in twodirections: left, to the beginning of the stemand right, towards the end of the stem.Preferred is the direction in case of which thecover extent of the discriminative1103conjunctions are higher.
If tile cover extentsare equal, the domain specifc heuristics isused according to which the left context(context enfolding the medial sounds) is moreinfomlative and the left extension is choosen.The algorithmNotation:P'  - set of conjunctionspositive examples onlyP- - set of cot!junctionsnegative xamples onlyC - composing descriptionC' - current conjunctionvalid for thevalid tbr theSTLearnlnit (P', P-)C=P' \P-Whi le  P~ ~ P vt QGet_left context (P~, P-)Get_rightcontext (P~, P-)Select successor (P', P-, C')C=C ' w CUpdate (N', N- 1 ,+, P-)EndWhileOptimize (C)Procedure lnit sets up tile initial classdescriptions taking into account only thecharacters corresponding to the changingsound.Procedure Update refi-eshes the sets ofexamples.
Discriminative conjunctions areadded to the class description and examplescorresponding to them are removed from tiletraining setProcedures GetR ightContext  andGet Let:t Context extend the co~junctions byadding correspondingly the right and leftcontext.Procedure Select successor selectsthe best of two extended conjunctions.Procedure Optimize generalises fnatclass description to the terms of the soundclasses.Morphological and phonologicalphenomena arc usually described by rewritingrules.
To adhere to this tradition ill currentwork the stem changing rules are representedin tile following way:R " a -?/ ) /C /_  ('This says that tile string a is to be replaced by(rewritten as) the string b whenever it ispreceded by C/(the left context) and }bllowcdby C;.
(the right comext).
If a is equal to theempty string, then rewriting operation isreduced to the insertion, the same tbr thestring b means deletion.
As it is mentionedthe stem variants can be bounded by morethan one stem change.
For instance betweenstem variant pair sepp \smith\ -sepa hold tworules:stem-end change 0 --~ a / _#stem-grade change pp-+p / e aTherelbre the decision list compiledby STLearn should be used in cycle until allstem changes arc identified.
From theviewpoint of the modelling of the naturallanguage stem changes ystem the rule setsholding for stem variant pairs are moreinformative than single rules.
Eachestablished rule is immediately applied on thefirst string and the algorithm continues withintermediate word form (that may not exist inreal language) until the frst string becomesequal to the second one.
Domain theorysays that in Estonian can only one stem-endand/or stem-grade change appear between thepair of the stem variants.
As the string pair isparsed from left to right the stem- gradechange is observed betbre tile stem-endchange.
Ill the case of the rule set containingthe both type of rules the contexts need somecorrection (because some secondary changesin medial sounds can take place only afl:erapplying stem-end changes).
To correct thecontexts the rules are once more applied inright order (stem-end change at first) and thecontexts are updated.Generating the rule set:Let R-O be the initial rule set, a and h arc thestem variants and r is the current rule.l.
Search the stem-grade or stem-end change;11042.
Form the corresponding rule r;2.1. add rule to the rule set R;2.2. apply the rule r to the string a;3.
If a:-h then stop, otherwise search thesecondary changes;4.
1 f secondary change is observed4.
l. add the corresponding rule to theset R;4.2. apply the rule r to the stl:ing a;5. l l'a=b then stop, otherwise go to the step 1;6. if \[R I>1 thcn update the contexts.The test results of the algorithmsdescribed m the current work show that it ispossible to classify the stem changesaccording to lbrmal features available tiomthe text and at the same time to do it correctlyin linguistic sense.
Class descriptions wereformed using the 540 training exmples.Recognition algorithm was tested on 56120stein variant pairs of CMI), linguisticallyincorrectly classified pairs were not observed.l:urther work provides designing themethods for the generalisation of acquiredrule sets into tbrmal grammar ill term of thesound classes and elicitation ot:" thccorresponding exception lists.
Thisdescription will be adequate to the openmodel of language.References\[Kuus951 E.Kuusik.identification o1" thevariation rules.
InPresented at theCon/erence ()/Linguislics Noda/ida-95.1995, 86-89.\[Viks92\] 1'\].Viks.
A ConciseMorphological Dictionary of theEstonian.
Tallinn, 1992.\[Viks94\] \[).Viks.
A naorphologicalanalyzer for the Estonian language: thepossibilities and impossibilities ofautomatic analysis.
In AutomaticMo/7)holojzy o J Estonian 1.Tallinn, 1994.AutomaticEstonian stemShort Papers10th No rdic(:Oml)ulaliona/l lclsinki1105
