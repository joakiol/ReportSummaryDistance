Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 73?76,Avignon, France, April 23 - 27 2012. c?2012 Association for Computational LinguisticsNERD: A Framework for Unifying Named Entity Recognitionand Disambiguation Extraction ToolsGiuseppe RizzoEURECOM / Sophia Antipolis, FrancePolitecnico di Torino / Turin, Italygiuseppe.rizzo@eurecom.frRaphae?l TroncyEURECOM / Sophia Antipolis, Franceraphael.troncy@eurecom.frAbstractNamed Entity Extraction is a mature taskin the NLP field that has yielded numerousservices gaining popularity in the Seman-tic Web community for extracting knowl-edge from web documents.
These servicesare generally organized as pipelines, usingdedicated APIs and different taxonomy forextracting, classifying and disambiguatingnamed entities.
Integrating one of theseservices in a particular application requiresto implement an appropriate driver.
Fur-thermore, the results of these services arenot comparable due to different formats.This prevents the comparison of the perfor-mance of these services as well as their pos-sible combination.
We address this problemby proposing NERD, a framework whichunifies 10 popular named entity extractorsavailable on the web, and the NERD on-tology which provides a rich set of axiomsaligning the taxonomies of these tools.1 IntroductionThe web hosts millions of unstructured data suchas scientific papers, news articles as well as forumand archived mailing list threads or (micro-)blogposts.
This information has usually a rich se-mantic structure which is clear for the human be-ing but that remains mostly hidden to computingmachinery.
Natural Language Processing (NLP)tools aim to extract such a structure from thosefree texts.
They provide algorithms for analyz-ing atomic information elements which occur in asentence and identify Named Entity (NE) such asname of people or organizations, locations, timereferences or quantities.
They also classify theseentities according to predefined schema increas-ing discoverability (e.g.
through faceted search)and reusability of information.Recently, research and commercial communi-ties have spent efforts to publish NLP services onthe web.
Beside the common task of identifyingPOS and of reducing this set to NEs, they pro-vide more and more disambiguation facility withURIs that describe web resources, leveraging onthe web of real world objects.
Moreover, theseservices classify such information using commonontologies (e.g.
DBpedia ontology1 or YAGO2)exploiting the large amount of knowledge avail-able from the web of data.
Tools such as Alche-myAPI3, DBpedia Spotlight4, Evri5, Extractiv6,Lupedia7, OpenCalais8, Saplo9, Wikimeta10, Ya-hoo!
Content Extraction11 and Zemanta12 repre-sent a clear opportunity for the web community toincrease the volume of interconnected data.
Al-though these extractors share the same purpose -extract NE from text, classify and disambiguatethis information - they make use of different algo-rithms and provide different outputs.This paper presents NERD (Named EntityRecognition and Disambiguation), a frameworkthat unifies the output of 10 different NLP extrac-1http://wiki.dbpedia.org/Ontology2http://www.mpi-inf.mpg.de/yago-naga/yago3http://www.alchemyapi.com4http://dbpedia.org/spotlight5http://www.evri.com/developer6http://extractiv.com7http://lupedia.ontotext.com/8http://www.opencalais.com9http://www.saplo.com/10http://www.wikimeta.com11http://developer.yahoo.com/search/content/V2/contentAnalysis.html12http://www.zemanta.com73tors publicly available on the web.
Our approachrelies on the development of the NERD ontologywhich provides a common interface for annotat-ing elements, and a web REST API which is usedto access the unified output of these tools.
Wecompare 6 different systems using NERD and wediscuss some quantitative results.
The NERD ap-plication is accessible online at http://nerd.eurecom.fr.
It requires to input a URI of aweb document that will be analyzed and option-ally an identification of the user for recording andsharing the analysis.2 FrameworkNERD is a web application plugged on top ofvarious NLP tools.
Its architecture follows theREST principles and provides a web HTML ac-cess for humans and an API for computers to ex-change content in JSON or XML.
Both interfacesare powered by the NERD REST engine.
The Fig-ure 2 shows the workflow of an interaction amongclients (humans or computers), the NERD RESTengine and various NLP tools which are used byNERD for extracting NEs, for providing a typeand disambiguation URIs pointing to real worldobjects as they could be defined in the Web ofData.2.1 NERD interfacesThe web interface13 is developed in HTML/-Javascript.
It accepts any URI of a web documentwhich is analyzed in order to extract its main tex-tual content.
Starting from the raw text, it drivesone or several tools to extract the list of NamedEntity, their classification and the URIs that dis-ambiguate these entities.
The main purpose of thisinterface is to enable a human user to assess thequality of the extraction results collected by thosetools (Rizzo and Troncy, 2011a).
At the end ofthe evaluation, the user sends the results, throughasynchronous calls, to the REST API engine in or-der to store them.
This set of evaluations is furtherused to compute statistics about precision scoresfor each tool, with the goal to highlight strengthsand weaknesses and to compare them (Rizzo andTroncy, 2011b).
The comparison aggregates allthe evaluations performed and, finally, the useris free to select one or more evaluations to seethe metrics that are computed for each service in13http://nerd.eurecom.frreal time.
Finally, the application contains a helppage that provides guidance and details about thewhole evaluation process.The API interface14 is developed following theREST principles and aims to enable program-matic access to the NERD framework.
GET,POST and PUT methods manage the requestscoming from clients to retrieve the list of NEs,classification types and URIs for a specific tool orfor the combination of them.
They take as inputsthe URI of the document to process and a userkey for authentication.
The output sent back tothe client can be serialized in JSON or XML de-pending on the content type requested.
The outputfollows the schema described below (in the JSONserialization):e n t i t i e s : [{?
e n t i t y ?
: ?
Tim Berne r s?Lee ?
,?
t y p e ?
: ?
P e r so n ?
,?
u r i ?
: ?
h t t p : / / d b p e d i a .
o rg / r e s o u r c e /T i m b e r n e r s l e e ?
,?
nerdType ?
: ?
h t t p : / / ne rd .
eurecom .
f r /o n t o l o g y # P e r son ?
,?
s t a r t C h a r ?
: 30 ,?
endChar ?
: 45 ,?
c o n f i d e n c e ?
: 1 ,?
r e l e v a n c e ?
: 0 .
5} ]2.2 NERD REST engineThe REST engine runs on Jersey15 and Griz-zly16 technologies.
Their extensible frameworkallows to develop several components, so NERDis composed of 7 modules, namely: authenti-cation, scraping, extraction, ontology mapping,store, statistics and web.
The authentication en-ables to log in with an OpenID provider and sub-sequently attaches all analysis and evaluationsperformed by a user with his profile.
The scrap-ing module takes as input the URI of an articleand extracts its main textual content.
Extraction isthe module designed to invoke the external serviceAPIs and collect the results.
Each service pro-vides its own taxonomy of named entity types itcan recognize.
We therefore designed the NERDontology which provides a set of mappings be-tween these various classifications.
The ontol-ogy mapping is the module in charge to map theclassification type retrieved to the NERD ontol-ogy.
The store module saves all evaluations ac-cording to the schema model we defined in the14http://nerd.eurecom.fr/api/application.wadl15http://jersey.java.net16http://grizzly.java.net74Figure 1: A user interacts with NERD through a REST API.
The engine drives the extraction to the NLP extractor.The NERD REST engine retrieves the output, unifies it and maps the annotations to the NERD ontology.
Finally,the output result is sent back to the client using the format reported in the initial request.NERD database.
The statistic module enablesto extract data patterns from the user interactionsstored in the database and to compute statisticalscores such as Fleiss Kappa and precision/recallanalysis.
Finally, the web module manages theclient requests, the web cache and generates theHTML pages.3 NERD ontologyAlthough these tools share the same goal, they usedifferent algorithms and their own classificationtaxonomies which makes hard their comparison.To address this problem, we have developed theNERD ontology which is a set of mappings es-tablished manually between the schemas of theNamed Entity categories.
Concepts included inthe NERD ontology are collected from differentschema types: ontology (for DBpedia Spotlightand Zemanta), lightweight taxonomy (for Alche-myAPI, Evri and Wikimeta) or simple flat typelists (for Extractiv, OpenCalais and Wikimeta).
Aconcept is included in the NERD ontology as soonas there are at least two tools that use it.
TheNERD ontology becomes a reference ontologyfor comparing the classification task of NE tools.In other words, NERD is a set of axioms useful toenable comparison of NLP tools.
We consider theDBpedia ontology exhaustive enough to representall the concepts involved in a NER task.
For allthose concepts that do not appear in the NERDnamespace, there are just sub-classes of parentsthat end-up in the NERD ontology.
This ontologyis available at http://nerd.eurecom.fr/ontology.We provide the following example map-ping among those tools which defines theCity type: the nerd:City class is consid-ered as being equivalent to alchemy:City,dbpedia-owl:City, extractiv:CITY,opencalais:City, evri:City whilebeing more specific than wikimeta:LOC andzemanta:location.ne rd : C i t y a r d f s : C l a s s ;r d f s : s u b C l a s s O f wik ime ta :LOC ;r d f s : s u b C l a s s O f zemanta : l o c a t i o n ;owl : e q u i v a l e n t C l a s s alchemy : C i t y ;owl : e q u i v a l e n t C l a s s dbped ia?owl : C i t y ;owl : e q u i v a l e n t C l a s s e v r i : C i t y ;owl : e q u i v a l e n t C l a s s e x t r a c t i v : CITY ;owl : e q u i v a l e n t C l a s s o p e n c a l a i s : C i t y .4 Ontology alignment resultsWe conducted an experiment to assess the align-ment of the NERD framework according to theontology we developed.
For this experiment, wecollected 1000 news articles of The New YorkTimes from 09/10/2011 to 12/10/2011 and weperformed the extraction of named entities withthe tools supported by NERD.
The goal is to ex-plore the NE extraction patterns with this datasetand to assess commonalities and differences ofthe classification schema used.
We propose thealignment of the 6 main types recognized by alltools using the NERD ontology.
To conduct thisexperiment, we used the default configuration forall tools used.
We define the following variables:75AlchemyAPI DBpedia Spotlight Evri Extractiv OpenCalais ZemantaPerson 6,246 14 2,698 5,648 5,615 1,069Organization 2,479 - 900 81 2,538 180Country 1,727 2 1,382 2,676 1,707 720City 2,133 - 845 2,046 1,863 -Time - - - 123 1 -Number - - - 3,940 - -Table 1: Number of axioms aligned for all the tools involved in the comparison according to the NERD ontologyfor the sources collected from the The New York Times from 09/10/2011 to 12/10/2011.the number nd of evaluated documents, the num-ber nw of words, the total number ne of enti-ties, the total number nc of categories and nuURIs.
Moreover, we compute the following met-rics: word detection rate r(w, d), i.e.
the num-ber of words per document, entity detection rater(e, d), i.e.
the number of entities per document,entity detection rate per word, i.e.
the ratio be-tween entities and words r(e, w), category detec-tion rate, i.e.
the number of categories per docu-ment r(c, d) and URI detection rate, i.e.
the num-ber of URIs per document r(u, d).
The evaluationwe performed concerned nd = 1000 documentsthat amount to nw = 620, 567 words.
The worddetection rate per document r(w, d) is equal to620.57 and the total number of recognized enti-ties ne is 164, 12 with the r(e, d) equal to 164.17.Finally r(e, w) is 0.0264, r(c, d) is 0.763 andr(u, d) is 46.287.Table 1 shows the classification comparison re-sults.
DBpedia Spotlight recognizes very fewclasses.
Zemanta increases significantly classi-fication performances with respect to DBpediaobtaining a number of recognized Person whichis two magnitude order more important.
Alche-myAPI has strong ability to recognize Person andCity while obtaining significant scores for Orga-nization and Country.
OpenCalais shows good re-sults to recognize the class Person and a strongability to classify NEs with the label Organiza-tion.
Extractiv holds the best score for classifyingCountry and it is the only extractor capable of ex-tracting the classes Time and Number.5 ConclusionIn this paper, we presented NERD, a frameworkdeveloped following REST principles, and theNERD ontology, a reference ontology to map sev-eral NER tools publicly accessible on the web.We propose a preliminary comparison resultswhere we investigate the importance of a refer-ence ontology in order to evaluate the strengthsand weaknesses of the NER extractors.
We willinvestigate whether the combination of extractorsmay overcome the performance of a single tool ornot.
We will demonstrate more live examples ofwhat NERD can achieve during the conference.Finally, with the increasing interest of intercon-necting data on the web, a lot of research effort isspent to aggregate the results of NLP tools.
Theimportance to have a system able to compare themis under investigation from the NIF17 (NLP Inter-change Format) project.
NERD has recently beenintegrated with NIF (Rizzo and Troncy, 2012) andthe NERD ontology is a milestone for creating areference ontology for this task.AcknowledgmentsThis paper was supported by the French Min-istry of Industry (Innovative Web call) under con-tract 09.2.93.0966, ?Collaborative Annotation forVideo Accessibility?
(ACAV).ReferencesRizzo G. and Troncy R. 2011.
NERD: A Frameworkfor Evaluating Named Entity Recognition Tools inthe Web of Data.
10th International Semantic WebConference (ISWC?11), Demo Session, Bonn, Ger-many.Rizzo G. and Troncy R. 2011.
NERD: Evaluat-ing Named Entity Recognition Tools in the Web ofData.
Workshop on Web Scale Knowledge Extrac-tion (WEKEX?11), Bonn, Germany.Rizzo G., Troncy R, Hellmann S and Bruemmer M.2012.
NERD meets NIF: Lifting NLP ExtractionResults to the Linked Data Cloud.
5th InternationalWorkshop on Linked Data on the Web (LDOW?12),Lyon, France.17http://nlp2rdf.org76
