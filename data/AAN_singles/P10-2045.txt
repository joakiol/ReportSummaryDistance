Proceedings of the ACL 2010 Conference Short Papers, pages 241?246,Uppsala, Sweden, 11-16 July 2010. c?2010 Association for Computational LinguisticsGenerating Entailment Rules from FrameNetRoni Ben AharonDepartment of Computer ScienceBar-Ilan UniversityRamat Gan, Israelr.ben.aharon@gmail.comIdan SzpektorYahoo!
ResearchHaifa, Israelidan@yahoo-inc.comIdo DaganDepartment of Computer ScienceBar-Ilan UniversityRamat Gan, Israeldagan@cs.biu.ac.ilAbstractMany NLP tasks need accurate knowl-edge for semantic inference.
To this end,mostly WordNet is utilized.
Yet Word-Net is limited, especially for inference be-tween predicates.
To help filling this gap,we present an algorithm that generatesinference rules between predicates fromFrameNet.
Our experiment shows that thenovel resource is effective and comple-ments WordNet in terms of rule coverage.1 IntroductionMany text understanding applications, such asQuestion Answering (QA) and Information Ex-traction (IE), need to infer a target textual mean-ing from other texts.
This need was proposed as ageneric semantic inference task under the TextualEntailment (TE) paradigm (Dagan et al, 2006).A fundamental component in semantic infer-ence is the utilization of knowledge resources.However, a major obstacle to improving semanticinference performance is the lack of such knowl-edge (Bar-Haim et al, 2006; Giampiccolo et al,2007).
We address one prominent type of infer-ence knowledge known as entailment rules, focus-ing specifically on rules between predicates, suchas ?cure X ?
X recover?.We aim at highly accurate rule acquisition,for which utilizing manually constructed sourcesseem appropriate.
The most widely used manualresource is WordNet (Fellbaum, 1998).
Yet it is in-complete for generating entailment rules betweenpredicates (Section 2.1).
Hence, other manual re-sources should also be targeted.In this work1, we explore how FrameNet(Baker et al, 1998) could be effectively used forgenerating entailment rules between predicates.1The detailed description of our work can be found in(Ben Aharon, 2010).FrameNet is a manually constructed databasebased on Frame Semantics.
It models the semanticargument structure of predicates in terms of proto-typical situations called frames.Prior work utilized FrameNet?s argument map-ping capabilities but took entailment relationsfrom other resources, namely WordNet.
Wepropose a novel method for generating entail-ment rules from FrameNet by detecting the entail-ment relations implied in FrameNet.
We utilizeFrameNet?s annotated sentences and relations be-tween frames to extract both the entailment rela-tions and their argument mappings.Our analysis shows that the rules generated byour algorithm have a reasonable ?per-rule?
accu-racy of about 70%2.
We tested the generated rule-set on an entailment testbed derived from an IEbenchmark and compared it both to WordNet andto state-of-the-art rule generation from FrameNet.Our experiment shows that our method outper-forms prior work.
In addition, our rule-set?s per-formance is comparable to WordNet and it is com-plementary to WordNet when uniting the two re-sources.
Finally, additional analysis shows thatour rule-set accuracy is 90% in practical use.2 Background2.1 Entailment Rules and their AcquisitionTo generate entailment rules, two issues shouldbe addressed: a) identifying the lexical entailmentrelations between predicates, e.g.
?cure ?
re-cover?
; b) mapping argument positions, e.g.
?cureX ?
X recover?.
The main approach for gener-ating highly accurate rule-sets is to use manuallyconstructed resources.
To this end, most systemsmainly utilize WordNet (Fellbaum, 1998), beingthe most prominent lexical resource with broadcoverage of predicates.
Furthermore, some of its2The rule-set is available at: http://www.cs.biu.ac.il/?nlp/downloads241relations capture types of entailment relations, in-cluding synonymy, hypernymy, morphologically-derived, entailment and cause.Yet, WordNet is limited for entailment rule gen-eration.
First, many entailment relations, no-tably for the WordNet entailment and cause re-lation types, are missing, e.g.
?elect ?
vote?.Furthermore, WordNet does not include argumentmapping between related predicates.
Thus, onlysubstitutable WordNet relations (synonymy andhypernymy), for which argument positions arepreserved, could be used to generate entailmentrules.
The other non-substitutable relations, e.g.cause (?kill ?
die?)
and morphologically-derived(?meet.v?
meeting.n?
), cannot be used.2.2 FrameNetFrameNet (Baker et al, 1998) is a knowledge-base of frames, describing prototypical situations.Frames can be related to each other by inter-framerelations, e.g.
Inheritance, Precedence, Usage andPerspective.For each frame, several semantic roles are spec-ified, called frame elements (FEs), denoting theparticipants in the situation described.
Each FEmay be labeled as core if it is central to the frame.For example, some core FEs of the Commerce payframe are Buyer and Goods, while a non-core FEis Place.
Each FE may also be labeled with a se-mantic type, e.g.
Sentient, Event, and Time.A frame includes a list of predicates that canevoke the described situation, called lexical units(LUs).
LUs are mainly verbs but may also benouns or adjectives.
For example, the frame Com-merce pay lists the LUs pay.v and payment.n.Finally, FrameNet contains annotated sentencesthat represent typical LU occurrences in texts.Each annotation refers to one LU in a specificframe and the FEs of the frame that occur in thesentence.
An example sentence is ?IBuyer have topay the billsMoney?.
Each sentence is accompa-nied by a valence pattern, which provides, amongother info, grammatical functions of the core FEswith respect to the LU.
The valence pattern of theabove sentence is [(Buyer Subj), (Money Obj)].2.3 Using FrameNet for Semantic InferenceTo the best of our knowledge, the only work thatutilized FrameNet for entailment rule generationis LexPar (Coyne and Rambow, 2009).
LexParfirst identifies lexical entailment relations by go-ing over all LU pairs which are either in thesame frame or whose frames are related by one ofFrameNet?s inter-frame relations.
Each candidatepair is considered entailing if the two LUs are ei-ther synonyms or in a direct hypernymy relation inWordNet (providing the vast majority of LexPar?srelations), or if their related frames are connectedvia the Perspective relation in FrameNet.Then, argument mappings between each entail-ing LU pair are extracted based on the core FEsthat are shared between the two LUs.
The syntac-tic positions of the shared FEs are taken from thevalence patterns of the LUs.
A LexPar rule exam-ple is presented in Figure 3 (top part).Since most of LexPar?s entailment relationsare based on WordNet?s relations, LexPar?s rulescould be viewed as an intersection of WordNet andFrameNet lexical relations, accompanied with ar-gument mappings taken from FrameNet.3 Rule Extraction from FrameNetThe above prior work identified lexical entailmentrelations mainly from WordNet, which limits theuse of FrameNet in two ways.
First, some rela-tions that appear in FrameNet are missed becausethey do not appear in WordNet.
Second, unlikeFrameNet, WordNet does not include argumentmappings for its relations.
Thus, prior work forrule generation considered only substitutable rela-tions from WordNet (synonyms and hypernyms),not utilizing FrameNet?s capability to map argu-ments of non-substitutable relations.Our goal in this paper is to generate entail-ment rules solely from the information withinFrameNet.
We present a novel algorithm for gen-erating entailment rules from FrameNet, calledFRED (FrameNet Entailment-rule Derivation),which operates in three steps: a) extracting tem-plates for each LU; b) detecting lexical entailmentrelations between pairs of LUs; c) generating en-tailment rules by mapping the arguments betweentwo LUs in each entailing pair.3.1 Template ExtractionMany LUs in FrameNet are accompanied by an-notated sentences (Section 2.2).
From each sen-tence of a given LU, we extract one template foreach annotated FE in the sentence.
Each tem-plate includes the LU, one argument correspond-ing to the target FE and their syntactic relationin the sentence parse-tree.
We focus on extract-ing unary templates, as they can describe any ar-242Figure 1: Template extraction for a sentence con-taining the LU ?arrest?.gument mapping by decomposing templates withseveral arguments into unary ones (Szpektor andDagan, 2008).
Figure 1 exemplifies this process.As a pre-parsing step, all FE phrases in a givensentence are replaced by their related FE names,excluding syntactic information such as preposi-tions or possessives (step (b) in Figure 1).
Then,the sentence is parsed using the Minipar depen-dency parser (Lin, 1998) (step (c)).
Finally, apath in the parse-tree is extracted between each FEnode and the node of the LU (step (d)).
Each ex-tracted path is converted into a template by replac-ing the FE node with an argument variable.We simplify each extracted path by removingnodes along the path that are not part of the syn-tactic relation between the LU and the FE, suchas conjunctions and other FE nodes.
For example,?Authoritiessubj??
enterconj??
arrest?
is simplifiedinto ?Authoritiessubj??
arrest?.Some templates originated from different anno-tated sentences share the same LU and syntacticstructure, but differ in their FEs.
Usually, one ofthese templates is incorrect, due to erroneous parse(e.g.
?Suspectobj??
arrest?
is a correct template, incontrast to ?Chargesobj??
arrest?).
We thus keeponly the most frequently annotated template out ofthe identical templates, assuming it is the correctone.3.2 Identifying Lexical Entailment RelationsFrameNet groups LUs in frames and describes re-lations between frames.
However, relations be-tween LUs are not explicitly defined.
We next de-scribe how we automatically extract several typesof lexical entailment relations between LUs usingtwo approaches.In the first approach, LUs in the same framethat are morphological derivations of each other,e.g.
?negotiation.n?
and ?negotiate.v?, are markedas paraphrases.
We take morphological derivationinformation from the CATVAR database (Habashand Dorr, 2003).The second approach is based on our observa-tion that some LUs express the prototypical situ-ation that their frame describes, which we denotedominant LUs.
For example, the LU ?recover?
isdominant for the Recovery frame.
We mark LUsas dominant if they are morphologically derivedfrom the frame?s name.Our assumption is that since dominant LUs ex-press the frame?s generic meaning, their meaningis likely to be entailed by the other LUs in thisframe.
Consequently, we generate such lexicalrules between any dominant LU and any other LUin a given frame, e.g.
?heal?
recover?
and ?con-valescence?
recover?
for the Recovery frame.In addition, we assume that if two frames arerelated by some type of entailment relation, theirdominant LUs are also related by the same rela-tion.
Accordingly, we extract entailment relationsbetween dominant LUs of frames that are con-nected via the Inheritance, Cause and Perspectiverelations, where Inheritance and Cause generatedirectional entailment relations (e.g.
?choose ?decide?
and ?cure?
recover?, respectively) whilePerspective generates bidirectional paraphrase re-lations (e.g.
?transfer?
receive?
).Finally, we generate the transitive closure ofthe set of lexical relations identified by the abovemethods.
For example, the combination of ?sell?buy?
and ?buy?
get?
generates ?sell?
get?.3.3 Generating Entailment RulesThe final step in the FRED algorithm generateslexical syntactic entailment rules from the ex-tracted templates and lexical entailment relations.For each identified lexical relation ?left?
right?between two LUs, the set of FEs that are shared byboth LUs is collected.
Then, for each shared FE,we take the list of templates that connect this FE243Lexical Relation:cure?
recoveryTemplates:Patientobj??
cure (cure Patient)Afflictionof??
cure (cure of Affliction)Patientgen??
recovery (Patient?s recovery)Patientof??
recovery (recovery of Patient)Afflictionfrom??
recovery (recovery from Affliction)Intra-LU Entailment Rules:Patientgen??
recovery??
Patientof??
recoveryInter-LU Entailment Rules:Patientobj??
cure =?
Patientgen??
recoveryPatientobj??
cure =?
Patientof??
recoveryAfflictionof??
cure =?
Afflictionfrom??
recoveryFigure 2: Some entailment rules generated for thelexical relation ?cure.v?
recovery.n?.Configuration R (%) P (%) F1No-Rules 13.8 57.7 20.9LexPar 14.1 42.9 17.4WordNet 18.3 32.2 17.8FRED 17.6 55.1 24.6FRED ?WordNet 21.8 33.3 20.9Table 1: Macro average Recall (R), Precision (P)and F1 results for the tested configurations.to each of the LUs, denoted by T feleft and Tferight.Finally, for each template pair, l ?
T feleft and r ?T feright, the rule ?l ?
r?
is generated.
In addition,we generate paraphrase rules between the varioustemplates including the same FE and the same LU.Figure 2 illustrates this process.To improve rule quality, we filter out rules thatmap FEs of adjunct-like semantic types, such asTime and Location, since different templates ofsuch FEs may have different semantic meanings(e.g.
?Timebefore??
arrive?
?Timeafter??
arrive?
).Thus, it is hard to identify those template pairs thatcorrectly map these FEs for entailment.We manually evaluated a random sample of 250rules from the resulting rule-set, out of which wejudged 69% as correct.4 Application-based Evaluation4.1 Experimental SetupWe would like to evaluate the overall utility of ourresource for NLP applications, assessing the cor-rectness of the actual rule applications performedin practice, as well as to compare its performanceto related resources.
To this end, we follow the ex-perimental setup presented in (Szpektor and Da-gan, 2009), which utilized the ACE 2005 eventdataset3 as a testbed for entailment rule-sets.
Webriefly describe this setup here.The task is to extract argument mentions for26 events, such as Sue and Attack, from the ACEannotated corpus, using a given tested entailmentrule-set.
Each event is represented by a set ofunary seed templates, one for each event argu-ment.
Some seed templates for Attack are ?At-tackersubj??attack?
and ?attackobj?
?Target?.Argument mentions are found in the ACE cor-pus by matching either the seed templates or tem-plates entailing them found in the tested rule-set.We manually added for each event its relevantWordNet synset-ids and FrameNet frame-ids, soonly rules fitting the event target meaning will beextracted from the tested rule-sets.4.2 Tested ConfigurationsWe evaluated several rule-set configurations:No-Rules The system matches only the seedtemplates directly, without any additional rules.WordNet Rules are generated from WordNet3.0, using only the synonymy and hypernymy rela-tions (see Section 2.1).
Transitive chaining of re-lations is allowed (Moldovan and Novischi, 2002).LexPar Rules are generated from the publiclyavailable LexPar database.
We generated unaryrules from each LexPar rule based on a manuallyconstructed mapping from FrameNet grammaticalfunctions to Minipar dependency relations.
Fig-ure 3 presents an example of this procedure.FRED Rules are generated by our algorithm.FRED ?WordNet The union of the rule-sets ofFRED and WordNet.4.3 ResultsEach configuration was tested on each ACE event.We measured recall, precision and F1.
Table 1reports macro averages of the three measures overthe 26 ACE events.As expected, using No-Rules achieves the high-est precision and the lowest recall compared to allother configurations.
When adding LexPar rules,3http://projects.ldc.upenn.edu/ace/244LexPar rule:Lexemes: arrest ??
apprehendValencies: [(Authorities Subj), (Suspect Obj), (Offense (for))] =?
[(Authorities Subj), (Suspect Obj), (Offense (in))]Generated unary rules:Xsubj??
arrest =?
Xsubj??
apprehend , arrestobj??
Y =?
apprehendobj??
Y , arrestfor??
Z =?
apprehendin??
ZFigure 3: An example for generation of unary entailment rules from a LexPar rule.only a slight increase in recall is gained.
Thisshows that the subset of WordNet rules capturedby LexPar (Section 2.3) might be too small for theACE application setting.When using all WordNet?s substitutable rela-tions, a substantial relative increase in recall isachieved (32%).
Yet, precision decreases dramat-ically (relative decrease of 44%), causing an over-all decrease in F1.
Most errors are due to correctWordNet rules whose LHS is ambiguous.
Sincewe do not apply a WSD module, these rules arealso incorrectly applied to other senses of the LHS.While this phenomenon is common to all rule-sets,WordNet suffers from it the most since it containsmany infrequent word senses.Our main result is that using FRED?s rule-set,recall increases significantly, a relative increaseof 27% compared to No-Rules, while precisionhardly decreases.
Hence, overall F1 is the high-est compared to all other configurations (a rela-tive increase of 17% compared to No-Rules).
Theimprovement in F1 is statistically significant com-pared to all other configurations, according to thetwo-sided Wilcoxon signed rank test at the level of0.01 (Wilcoxon, 1945).FRED preforms significantly better than LexParin both recall, precision and F1 (a relative increaseof 25%, 28% and 41% respectively).
For example,LexPar hardly utilizes FrameNet?s argument map-ping capabilities since most of its rules are basedon a sub-set of WordNet?s substitutable relations.FRED?s precision is substantially higher thanWordNet.
This mostly results from the factthat FrameNet mainly contains common sensesof predicates while WordNet includes many rareword senses; which, as said above, harms preci-sion when WSD is not applied.
Error analysisshowed that only 7.5% of incorrect extractions aredue to erronous rules in FRED, while the majorityof errors are due to sense mismatch or syntacticmatching errors of the seed templates ot entailingtemplates in texts.FRED?s Recall is somewhat lower than Word-Net, since FrameNet is a much smaller resource.Yet, its rules are mostly complementary to thosefrom WordNet.
This added value is demon-strated by the 19% recall increase for the union ofFRED and WordNet rule-sets compared to Word-Net alne.
FRED provides mainly argument map-pings for non-substitutable WordNet relations, e.g.
?attack.n on X ?
attack.v X?, but also lexical re-lations that are missing from WordNet, e.g.
?am-bush.v?
attack.v?.Overall, our experiment shows that the rule-base generated by FRED seems an appropri-ate complementary resource to the widely usedWordNet-based rules in semantic inference andexpansion over predicates.
This suggestion is es-pecially appealing since our rule-set performs welleven when a WSD module is not applied.5 ConclusionsWe presented FRED, a novel algorithm for gener-ating entailment rules solely from the informationcontained in FrameNet.
Our experiment showedthat FRED?s rules perform substantially betterthan LexPar, the only prior rule-set derived fromFrameNet.
In addition, FRED?s rule-set largelycomplements the rules generated from WordNetbecause it contains argument mappings betweennon-substitutable predicates, which are missingfrom WordNet, as well as lexical relations that arenot included in WordNet.In future work we plan to investigate combin-ing FrameNet and WordNet rule-sets in a transitivemanner, instead of their simple union.AcknowledgmentsThis work was partially supported by the Rec-tor?s research grant of Bar-Ilan University, thePASCAL-2 Network of Excellence of the Eu-ropean Community FP7-ICT-2007-1-216886 andthe Israel Science Foundation grant 1112/08.245ReferencesCollin Baker, Charles Fillmore, and John Lowe.
1998.The berkeley framenet project.
In Proceedings ofCOLING-ACL, Montreal, Canada.Roy Bar-Haim, Ido Dagan, Bill Dolan, Lisa Ferro,Danilo Giampiccolo, Bernardo Magnini, and IdanSzpektor.
2006.
The second pascal recognising tex-tual entailment challenge.
In Second PASCAL Chal-lenge Workshop for Recognizing Textual Entailment.Roni Ben Aharon.
2010.
Generating entailment rulesfrom framenet.
Master?s thesis, Bar-Ilan University.Robert Coyne and Owen Rambow.
2009.
Lexpar: Afreely available english paraphrase lexicon automat-ically extracted from framenet.
In Proceedings ofthe Third IEEE International Conference on Seman-tic Computing.Ido Dagan, Oren Glickman, and Bernardo Magnini.2006.
The pascal recognising textual entailmentchallenge.
In Lecture Notes in Computer Science,volume 3944, pages 177?190.Christiane Fellbaum, editor.
1998.
WordNet: An Elec-tronic Lexical Database.
MIT Press, Cambridge,Massachusetts.Danilo Giampiccolo, Bernardo Magnini, Ido Dagan,and Bill Dolan.
2007.
The third pascal recogniz-ing textual entailment challenge.
In Proceedings ofthe ACL-PASCAL Workshop on Textual Entailmentand Paraphrasing.Nizar Habash and Bonnie Dorr.
2003.
A categorialvariation database for english.
In Proceedings ofthe North American Association for ComputationalLinguistics (NAACL ?03), pages 96?102, Edmonton,Canada.
Association for Computational Linguistics.Dekang Lin.
1998.
Dependency-based evaluation ofminipar.
In Proceedings of the Workshop on Evalu-ation of Parsing Systems at LREC.Dan Moldovan and Adrian Novischi.
2002.
Lexicalchains for question answering.
In Proceedings ofCOLING.Idan Szpektor and Ido Dagan.
2008.
Learning en-tailment rules for unary templates.
In Proceedingsof the 22nd International Conference on Compu-tational Linguistics (Coling 2008), pages 849?856,Manchester, UK, August.Idan Szpektor and Ido Dagan.
2009.
Augmentingwordnet-based inference with argument mapping.In Proceedings of the 2009 Workshop on AppliedTextual Inference, pages 27?35, Suntec, Singapore,August.Frank Wilcoxon.
1945.
Individual comparisons byranking methods.
Biometrics Bulletin, 1(6):80?83.246
