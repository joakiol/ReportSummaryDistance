Coling 2010: Poster Volume, pages 791?800,Beijing, August 2010Finite-state Scriptural TranslationM.
G. Abbas Malik Christian Boitet Pushpak BhattacharyyaGETALP ?
LIG (Grenoble Informatics Lab.
)University of GrenobleIIT BombayAbbas.Malik Christian.Boitet@imag.fr pb@iitb.ac.inAbstractWe use robust and fast Finite-State Machines(FSMs) to solve scriptural translation prob-lems.
We describe a phonetico-morphotacticpivot UIT (universal intermediate transcrip-tion), based on the common phonetic reposito-ry of Indo-Pak languages.
It is also extendableto other language groups.
We describe a finite-state scriptural translation model based on fi-nite-state transducers and UIT.
We report itsperformance on Hindi, Urdu, Punjabi and Se-raiki corpora.
For evaluation, we design twoclassification scales based on the word andsentence accuracies for translation systemclassifications.
We also show that subjectiveevaluations are vital for real life usage of atranslation system in addition to objectiveevaluations.1 IntroductionTransliteration refers to phonetic translationacross two languages with different writing sys-tems, such as Arabic to English (Arbabi et al,1994; Stall and Knight, 1998; Al-Onaizan andKnight, 2002; AbdulJaleel and Larkey, 2003).Most prior work on transliteration has been donefor MT of English, Arabic, Japanese, Chinese,Korean, etc., for CLIR (Lee and Choi., 1998;Jeong et al, 1999; Fujii and Ishikawa, 2001;Sakai et al, 2002; Pirkola et al, 2003; Virga andKhudanpur, 2003; Yan et al, 2003), and for thedevelopment of multilingual resources (Kangand Choi, 2000; Yan, Gregory et al, 2003).The terms transliteration and transcription areoften used as generic terms for various processeslike transliteration, transcription, romanization,transcribing and technography (Halpern, 2002).In general, the speech processing communityuses the term transcription to denote a process ofconversion from the script or writing system tothe sound (phonetic representation).
For exam-ple, the transcription of the word ?love?
in theInternational Phonetic Alphabet (IPA) is [l?v].While the text processing community uses theterm transliteration and defines it as a process ofconverting a word written in one writing systeminto another writing system while preserving thesound of the original word (Al-Onaizan andKnight, 2002; AbdulJaleel and Larkey, 2003).More precisely, the text processing communitydefines the term transliteration as two transcrip-tion processes ?source script to sound transcrip-tion?
and ?sound to target script transcription?and sometimes as one transcription process?source script to target script transcription?.We propose a new term Scriptural Translationfor this combined process.
Scriptural translationis a process of transcribing a word written in thesource language script into the target languagescript by preserving its articulation in the originallanguage in such a way that the native speaker ofthe target language can produce the original pro-nunciation.FSMs have been successfully used in variousdomains of Computational Linguistics and Natu-ral Language Processing (NLP).
The successfuluse of FSMs have already been shown in variousfields of computational linguistics (Mohri, 1997;Roche and Schabes, 1997; Knight and Al-Onaizan, 1998).
Their practical and advanta-geous features make them very strong candidatesto be used for solving scriptural translationproblems.First, we describe scriptural translation andidentify its problems that fall under weak transla-tion problems.
Then, we analyze various chal-lenges for solving weak scriptural translationproblems.
We describe our finite-state scripturaltranslation model and report our results on Indo-Pak languages.7912 Scriptural Translation ?
a weaktranslation problemA weak translation problem is a translation prob-lem in which the number of possible valid trans-lations, say N, is either very small, less than 5, oralmost always 1.Scriptural Translation is a sub-problem ofgeneral translation and almost always a weaktranslation problem.
For example, French-IPAand Hindi-Urdu scriptural translation problemsare weak translation problems due to their smallnumber of valid translations.
On the other hand,Japanese-English and French-Chinese scripturaltranslation problems are not weak.Scriptural translation is not only vital fortranslation between different languages, but alsobecomes inevitable when the same language iswritten in two or more mutually incomprehensi-ble scripts.
For example, Punjabi is written inthree different scripts: Shahmukhi (a derivationof the Perso-Arabic script), Gurmukhi and Deva-nagari.
Kazakh and Kurdish are also written inthree different scripts, Arabic, Latin and Cyrillic.Malay has two writing systems, Latin and Jawi(a derivation of the Arabic script), etc.
Figure 1shows an example of scriptural divide betweenHindi and Urdu.6 ?3[ 3e ??
?
?Z ??
]gzu[?
X???????
??
???
??
????
???[??n?j?
ko ?m?n ki z?rur??
h?.
]The world needs peace.Figure 1: Example of scriptural divideThus, solving the scriptural translation prob-lem is vital to bridge the scriptural divide be-tween the speakers of different languages as wellas of the same language.Punjabi, Sindhi, Seraiki and Kashmiri exist onboth sides of the common border between Indiaand Pakistan and all of them are written in two ormore mutually incomprehensible scripts.
TheHindi?Urdu pair exists both in India and Pakis-tan.
We call all these languages the Indo-Paklanguages.3 Challenges of Scriptural TranslationIn this section, we describe the main challengesof scriptural translation.3.1 Scriptural divideThere exists a written communication gap be-tween people who can understand each otherverbally but cannot read each other.
They arevirtually divided and become scriptural aliens.Examples are the Hindi & Urdu communities,the Punjabi/Shahmukhi & Punjabi/Gurmukhicommunities, etc.
An example of scriptural di-vide is shown in Figure 1.
Such a gap also ap-pears when people want to read some foreignlanguage or access a bilingual dictionary and arenot familiar with the writing system.
For exam-ple, Japanese?French or French?Urdu dictiona-ries are useless for French learners because of thescriptural divide.
Table 1 gives some figures onhow this scriptural divide affects a large popula-tion of the world.Sr.
Language Number of Speakers1 Hindi 853,000,0002 Urdu 164,290,0003 Punjabi 120,000,0004 Sindhi 21,382,1205 Seraiki 13,820,0006 Kashmir 5,640,940Total 1178,133,060Table 1: Number of Speakers of Indo-Pak languages3.2 Under-resourced languagesUnder-resourced and under-written features ofthe source or target language are the second bigchallenge for scriptural translation.
The lack ofstandard writing practices or even the absence ofa standard code page for a language makes trans-literation or transcription very hard.
The exis-tence of various writing styles and systems for alanguage leads towards a large number of va-riants and it becomes difficult and complex tohandle them.In the case of Indo-Pak languages, Punjabi isthe largest language of Pakistan (more than 70million) and is more a spoken language than awritten one.
There existed only two magazines(one weekly and one monthly) in 1992 (Rahman,1997).
In the words of (Rahman, 2004), ?
?there is little development in Punjabi, Pashto,Balochi and other languages??.
(Malik, 2005)reports the first effort towards establishing astandard code page for Punjabi-Shahmukhi andtill date, a standard code page for Shahmukhidoes not exist.
Similar problems also exist for theKashmiri and Seraiki languages.7923.3 Absence of necessary informationThere are cases where the necessary and indis-pensable information for scriptural translationare missing in the source text.
For example, thefirst word ????
[??n?j?]
(world) of the example sen-tence of Figure 1 misses crucial diacritical in-formation, mandatory to perform Urdu to Hindiscriptural translation.
Like in Arabic, diacriticalmarks are part of the Urdu writing system but aresparingly used in writings (Zia, 1999; Malik etal., 2008; Malik et al, 2009).Figure 2(a) shows the example word withoutdiacritical marks and its wrong Hindi conversionaccording to conversion rules (explained later).The Urdu community can understand the word inits context or without the context because peopleare tuned to understand the Urdu text or wordwithout diacritical marks, but the Hindi conver-sion of Figure 2(a) is not at all acceptable orreadable in the Hindi community.Figure 2(b) shows the example word with dia-critical marks and its correct Hindi conversionaccording to conversion rules.
Similar problemsalso arise for the other Indo-Pak languages.Therefore, missing information in the source textmakes the scriptural translation problem compu-tationally complex and difficult.?
= ??
????]?]
?[?
[ ?
]n]  ?[?
[ ?
]j [ ?]?[??????
= ?
]?
[ ??
]?
[ ?
]n [ ??
]?
[ ?
]j [ ??
]?
[(b) with necessary information?
= ????]?
[ ?
]n [ ?
]j [ ?]?[????
= ?
]?
[ ?
]n [ ?
]j [ ??
]?
[(a) without necessary informationFigure 2: Example of missing information3.4 Different spelling conventionsDifferent spelling conventions exist across dif-ferent scripts used for the same language or fordifferent languages because users of a script aretuned to write certain words in a traditional way.For example, the words ??
[je] (this) = ?
[j] + ?
[h]and ??
[vo] (that) = ?
[v] + ?
[h] are used in Urduand Punjabi/Shahmukhi.
The character ?
[h] pro-duces the vowel sounds [e] and [o] in the exam-ple words respectively.
On the other hand, theexample words are written as ??
[je] & ??
[vo] and?
?
[je] & ??
[vo] in Devanagari and Gurmukhi,respectively.
There exist a large number of suchconventions between Punjabi/Shahmukhi?Punjabi Gurmukhi, Hindi?Urdu, etc.Different spelling conventions are also drivenby different religious influences on differentcommunities.
In the Indian sub-continent, Hindiis a part of the Hindu identity, while Urdu is apart of the Muslim identity1 (Rahman, 1997; Rai,2000).
Hindi derives its vocabulary from San-skrit, while Urdu borrows its literary and scien-tific vocabulary from Persian and Arabic.
Hindiand Urdu not only borrow from Sanskrit and Per-sian/Arabic, but also adopt the original spellingsof the borrowed word due the sacredness of theoriginal language.
These differences make scrip-tural translation across scripts, dialects or lan-guages more challenging and complex.3.5 Transcriptional ambiguitiesCharacter level scriptural translation across dif-ferent scripts is ambiguous.
For example, theSindhi word ??????
[?
?s?n] (human being) can beconverted into Devanagari either as ?????
[?
?s?n] or????
* [?ns?n] (* means wrong spellings).
The trans-literation process of the example word fromSindhi to Devanagari is shown in Figure 3(a).The transliteration of the third character from theleft, Noon (?)
[n], is ambiguous because in themiddle of a word, Noon may represent a conso-nant [n] or the nasalization [?]
of a vowel.Figure 3: Sindhi transliteration exampleIn the reverse direction, the Sindhi Devanagariword ?????
[?
?s?n] can be converted into a set ofpossible transliterations [??????
,*??????
,??????*].
Allthese possible transliterations have the same pro-nunciation [?
?s?n] but have different spellings in1 The Hindi movement of the late 19th century playeda central role in the ideologization of Hindi.
Themovement started in reaction to the British Act 29 of1837 by which Persian was replaced by Hindusta-ni/Urdu, written in Persian script, as the official ver-nacular of the courts of law in North India.
It is themoment in history, when Hindi and Urdu started toemerge as Hindu and Muslim identities.793the Perso-Arabic script, as shown in Figure 3(b).Similar kinds of ambiguities also arise for otherpairs of scripts, dialects or languages.
Thus theseambiguities increase the complexity and difficul-ty of scriptural translation.3.6 Distinctive sound inventoriesSound inventories across dialects or languagescan be different.
Consider the English?Japanesepair.
Japanese make no distinction between the?L?
[l] and ?R?
[r] sounds so that these two Eng-lish sounds collapse onto the same Japanesesound (Knight and Al-Onaizan, 1998).For Indo-Pak languages, Punjabi/Gurmukhi (adialect of Punjabi spoken in India) possesses twoadditional sounds than Punjabi/Shahmukhi (adialect of Punjabi spoken in Pakistan).
Similarly,Hindi, Punjabi, Sindhi and Seraiki have the re-troflex form [?
], but Urdu and Kashmiri do not.Marathi has 14 vowels in contrast to Hindi?s 11vowels, shown in Table 2.Hindi Vowels?
[?]
?
[?]
?
[?]
?
[i] ?
[?]
?
[u] ?
[r]?
?
[e] ?
[?]?
[o] ?
[?
]Marathi Vowels?
[?]
?
[?]
?
[?]
?
[i] ?
[?]
?
[u] ?
[r]?
?
[e] ?
[?]?
[o] ?
[?]
??
[??]
??
[?h] ?
[l]?Table 2: Hindi and Marathi vowel comparisonScriptural translation approximates the pro-nunciation of the source language or dialect inthe target due to different sound inventories.Thus a distinctive sound inventory across scripts,dialects or languages increases ambiguities andadds to the complexity of the scriptural transla-tion problem.4 Universal Intermediate TranscriptionUIT (Universal Intermediate Transcription) is amultipurpose pivot.
In the current study, it isused as a phonetico-morphotactic pivot for thesurface morphotactic translation or scripturaltranslation.Although we have not used IPA as encodingscheme, we have used the IPA coding associatedwith each character as the encoding principle forour ASCII encoding scheme.
We selected theprintable ASCII characters to base the UIT en-coding scheme because it is universally portableto all computer systems and operating systemswithout any problem (Boitet and Tch?ou, 1990;Hieronymus, 1993; Wells, 1995).
UIT is a de-terministic and unambiguous scheme of tran-scription for Indo-Pak languages in ASCII range32?126, since a text in this rage is portableacross computers and operating systems(Hieronymus, 1993; Wells, 1995).Speech Assessment Methods Phonetic Alpha-bet (SAMPA)2 is a widely accepted scheme forencoding IPA into ASCII.
The purpose of SAM-PA was to form the basis of an internationalstandard machine-readable phonetic alphabet forthe purpose of international collaboration inspeech research (Wells, 1995).
The UIT encod-ing of Indo-Pak languages is developed as anextension of the SAMPA and X-SAMPA thatcovers all symbols on the IPA chart (Wells,1995).4.1 UIT encodingsAll characters of the Indo-Pak languages aresubdivided into three categories, consonants,vowels and other symbols (punctuations and di-gits).Consonants are further divided into aspiratedconsonants and non-aspirated consonants.
Foraspiration, in phonetic transcription a simple ?h?following the base consonant symbol is consi-dered adequate (Wells, 1995).
In the Indo-Paklanguages, we have two characters with IPA [h].Thus to distinguish between the ?h?
consonantsand the aspiration, we use underscore ?_?
tomark the aspirate and we encode an aspiration as?_h?.
For example, the aspirated consonants J[J[??
], J ?J [p?]
and J ?Y [??]
of the Indo-Pak languagesare encoded as ?t`_h?, ?p_h?
and ?t_S_h?
respec-tively.
Similarly for the dental consonants, weuse the ?_d?
marker.
For example, the characters?
[?]
and ?
[?]
are encoded as ?d_d?
and ?t_d?
inUIT.
Table 3 shows the UIT encodings of Hindiand Urdu aspirated consonants.Hindi Urdu UIT Hindi Urdu UIT?
J [J [b?]
b_h ???
|g [r?]
r_h?
J ?J [p?]
p_h ?
|g [??]
r`_h?
J[J [??]
t_d_h ?
J?
[k?]
k_h?
J[J [??]
t`_h ?
J?
[g?]
g_h?
J [Y [??]
d_Z_h ??
J?
[l?]
l_h?
J ?Y [??]
t_S_h ??
Jb [m?]
m_h2 http://www.phon.ucl.ac.uk/home/sampa/794?
|e [??]
d_d_h ??
J [J [n?]
n_h?
|e [??]
d`_hTable 3: UIT encodings of Urdu aspirated consonantsSimilarly, we can encode all characters of In-do-Pak languages.
Table 4 gives UIT encodingsof Hindi and Urdu non-aspirated consonants.
Wecannot give all encoding tables here due to short-age of space.Hindi Urdu UIT Hindi Urdu UIT?
?
[b] b ?
?
[s] s2?
?
[p] p ?
?
[z] z2?
?
[?]
t_d ?
?
[?]
t_d1?
?
[?]
t` ?
?
[z] z3?
?
[s] s1 - ?
[?]
??
?
[?]
d_Z ?
?
[?]
X?
?
[?]
t_S ?
?
[f] f?
?
[h] h1 ?
?
[q] q?
?
[x] x ?
?
[k] k?
?
[?]
d_d ?
?
[g] g?
?
[?]
d` ?
?
[l] l?
?
[z] z1 ?
?
[m] m?
?
[r] r ?
?
[n] n?
?
[?]
r` ?
?
[v] v?
?
[z] z ?
?
[h] h?
?
[?]
Z ?
?
[j] j?
?
[s] s ?
?
[?]
t_d2?
?
[?]
S ?
- [?]
n`?
?
[?]
S1 ??
?
[?]
~Table 4: UIT encodings of Urdu non-aspirated conso-nants5 Finite-state Scriptural TranslationModelFigure 4 shows the system architecture of ourfinite-state scriptural translation system.Text Tokenizer receives and converts theinput source language text into constituent wordsor tokens.
This list of the source language tokensis then passed to the UIT Encoder that en-codes these tokens into a list of UIT tokens usingthe source language to UIT conversion transduc-er from the repertoire of Finite-State Transduc-ers.
These UIT tokens are given to the UIT De-coder that decodes them into target languagetokens using the UIT to target language conver-sion transducer from the repertoire of Transduc-ers.
Finally, Text Generator generates thetarget language text from the translated targetlanguage tokens.Figure 4: System Architecture of fintie-state scripturaltranslation5.1 Finite-state TransducersBoth conversions of the source language text intothe UIT encoded text and from the UIT encodedtext into the target language text are regular rela-tions on strings.
Moreover, regular relations areclosed under serial composition and a finite setof conversion relations when applied to eachother?s output in a specific order, also defines aregular expression (Kaplan and Kay, 1994).
Thuswe model the conversions from the source lan-guage to UIT and from UIT to the target lan-guage as finite-state transducers.
These transla-tional transducers can be deterministic and non-deterministic.Character Mappings: Table 5 shows regularrelations for converting Hindi and Urdu aspiratedconsonants into UIT.IPA Hindi to UIT Urdu to UITb?
?
?
b_h J [J ?
b_hp?
?
?
p_h J ?J ?
p_h??
?
?
t_d_h J[J ?
t_d_h??
?
?
t`_h J[J ?
t`_h??
?
?
d_Z_h J [Y ?
d_Z_h??
?
?
t_S_h J ?Y ?
t_S_h795??
?
?
d_d_h |e ?
d_d_h??
?
?
d`_h |e ?
d`_hr?
???
?
r_h |g ?
r_h??
?
?
r`_h |g ?
r`_hk?
?
?
k_h J?
?
k_hg?
?
?
g_h J?
?
g_hl?
??
?
l_h J?
?
l_hm?
??
?
m_h Jb ?
m_hn?
??
?
n_h J [J ?
n_hTable 5: Regular rules for aspirated consonants ofHindi and UrduBy interchanging the UIT encodings beforethe arrow sign and the respective characters ofHindi and Urdu after the arrow, we can constructregular conversion relations from UIT to Hindiand Urdu.
We have used XFST (Xerox finite-state engine) to build finite-state transducers.Table 6 shows a sample XFST code.Contextual Mappings: A contextual mappingis a contextual rule that determines a desired out-put when a character appears in a certain context.The third command of Table 6 models anothercontextual mapping saying that ?????
is translatedby ?_h?
when it is preceded by any of the charac-ters ?, ?, ?, and ?.
The second last rule of Table 6models the contextual mapping rule that ?A1?
istranslated into ???
when it is at the end of a wordand preceded by a consonant.clear stackset char-encoding UTF-8read regex [??
-> I];read regex [?
-> [k "_" h], ?
-> [g"_" h], ?
-> [t "_" S "_" h], ?
-> [d "_" Z "_" h], ?
-> [t "`" "_"h], ?
-> [d "`" "_" h], ?
-> [t"_" d "_" h], ?
-> [d "_" d "_"h], ?
-> [p "_" h], ?
-> [b "_"h], ?
-> [r "`" "_" h], ?
-> s, ?-> [t "_" d], ?
-> r, ?
-> l, ?
->m, ?
-> n, ?
-> v, ?
-> h];read regex [[??
?]
-> ["_" h] || [?
|?
| ?
| ?]
_ ];compose netTable 6: Sample XFST codeVowel representations in Urdu, Punja-bi/Shahmukhi, Sindhi, Seraiki/Shahmukhi andKashmiri are highly context-sensitive (Malik etal., 2010).6 Experiments and ResultsA sample run of our finite-state scriptural trans-lation system on the Hindi to Urdu example sen-tence of Figure 1 is shown in Table 7.TextTokenizerUITEncoderUIT DecoderUniqueoutputAmbiguousoutputs??????
dUnIjA1 ??????
, ?????? ]
??????
]??
ko ??
, ?? ]
??
]???
@mn ??? ]
???
]??
ki ??
, ?? ]
??
]????
zrurt_d ?????
[ ?????
,??????
,??????
,??????
,??????
,?]??h{???
, ?? ]
???
]Table 7: Sample run of finite-state scriptural transla-tion model on Hindi to Urdu exampleText Generator converts the unique out-put of the UIT Decoder into an Urdu sentencewith one error in the fifth word (highlighted),shown in Figure 5.?
]gzEgi ??
?
?Z ??
6 ?3G[ 3 EeFigure 5: Unique output of the sample run by deter-ministic FSTsOn the other hand, from the ambiguous outputof the UIT Decoder, we can generate 240 outputsentences, but only one is the correct scripturaltranslation of the source Hindi sentence in Urdu.The correct sentence is shown in Figure 6.
Thesole difference between the output of the deter-ministic FST and the correct scriptural transla-tion is highlighted in both sentences shown inFigure 5 and 6.?
]gzEu [?
??
?
?Z ??
6 ?3G[ 3 EeFigure 6: Correct scriptural translation of the example6.1 Test DataTable 8 shows test sets for the evaluation of ourfinite-state scriptural translation system.796Dataset Language pairNo.
ofwordsNo.
ofsentences SourceHU1 Hindi?Urdu 52,753 -PlattsdictionaryHU2 Hindi?Urdu 4,281 200HindicorpusHU3 Hindi?Urdu 4,632 226UrducorpusPU Punjabi/Shahmukhi?Punjabi/Gurmukhi 5,069 500ClassicalpoetrySE Seraiki/Shahmukhi?Seraiki/Devanagari 2,087 509SeraikipoetryTable 8: Test Sets of Hindi, Urdu, Punjabi and SeraikiHU 1 is a word list obtained from the Plattsdictionary3 (Platts, 1884).6.2 ResultsFor Hindi to Urdu scriptural translation, we haveapplied the finite-state model to all Hindi inputsof HU Test sets 1, 2 and 3.
In general, it gives usan Urdu output with the necessary diacriticalmarks.
To evaluate the performance of Hindi toUrdu scriptural translation of our finite-state sys-tem against the Urdu without diacritics, we havecreated a second Urdu output by removing alldiacritical marks from the default Urdu output ofthe finite-state system.
We have calculated theWord Accuracy Rate (WAR) and Sentence Accu-racy Rate (SAR) for the default and theprocessed Urdu outputs by comparing them withthe Urdu references with and without diacriticsrespectively.
To compute WAR and SAR, wehave used the SCLITE utility from the SpeechRecognition Scoring Toolkit (SCTK)4 of NIST.The results of Hindi to Urdu scriptural transla-tion are given in Table 24.Test SetDefault output Processed outputWordLevelSentenceLevelWordLevelSentenceLevelHU 1 32.5% - 78.9% -HU 2 90.8% 26.5% 91.0% 27%HU 3 81.2% 8.8% 82.8% 9.7%Table 9:Hindi to Urdu scriptural translation restulsThe finite-state scriptural translation systemfor Hindi to Urdu produces an Urdu output withdiacritics.
However, we know that the Urducommunity is used to see the Urdu text withoutdiacritics.
Thus, we removed all diacritical marksfrom the Urdu output text that is more acceptableto the Urdu community.
By this post-processing,3 Shared by University of Chicago for research pur-poses.4 http://www.itl.nist.gov/iad/mig//tools/we gain more than 40% accuracy in case of HUTest Set 1.
We also gain in accuracy for the othertest sets.For the classification of our scriptural transla-tion systems, we have devised two scales.
Onecorresponds to the word accuracy rate and theother corresponds to the sentence level accuracy.They are shown in Figure 7 and 8.Figure 7: Classification scale based on the wordaccuracy rate for scriptural transaltionFigure 8: Classification scale based on the sentenceaccucary rate for scriptural translationAccording to the scale of Figure 7 and 8, theHindi to Urdu scriptural translation system isclassified as ?Good?
and ?Good Enough?, respec-tively.The subjective evaluations like usability, ef-fectiveness and adequacy depend on several fac-tors.
A user with a good knowledge of Hindi andUrdu languages would rate our Hindi to Urdusystem quite high and would also rate the Urduoutput very usable.
Another user who wants toread a Hindi text, but does not know Hindi,would also rate this system and the Urdu outputquite high and very usable respectively, becauseit serves its purpose.On the other hand, a user who wants to pub-lish a Hindi book in Urdu, would rate this systemnot very good.
This is because he has to localizethe Hindi vocabulary of Sanskrit origin as theacceptance of the Hindi vocabulary in the Urdu797community, target of his published book, is verylow.
Thus the subjective evaluation depends onvarious factors and it is not easy to compute suchmeasures for the evaluation of a scriptural trans-lation system, but they are vital in real life.For Urdu to Hindi scriptural translation, wehave two inputs for each HU Test Set.
One inputcontains all diacritical marks and the other doesnot contain any.
On Hindi side, we have a singleHindi reference with which we will compareboth Hindi outputs.
We already know that it willgive us less accuracy rates for the Urdu inputwithout diacritical marks that are mandatory forcorrect Urdu to Hindi scriptural translation.
Theresults for Urdu to Hindi scriptural translationare given in Table 10.Test SetWith diacritics Without diacriticsWordLevelSentenceLevelWordLevelSentenceLevelHU 1 68.0% - 31.2% -HU 2 83.9% 10% 53.0% 1%HU 3 98.4% 73.9% 58.9% 0.4%Table 10: Urdu to Hindi scriptural translation resultsFor the Urdu input with diacritics, the accura-cy of the Urdu to Hindi finite-state scripturaltranslation system is 83.9% at word level for HUTest Set 2 and it is classified as ?GOOD?
theclassification scale of Figure 7.
On the otherhand, it shows a sentence-level accuracy of 10%for the same test set and is classified as ?AVER-AGE?
by the classification scale of Figure 8.For the Urdu input without diacritics, the Urduto Hindi scriptural translation system is classifiedas ?OK?
by the scale of Figure 7 for HU Test set2 and 3.
It is classifies as ?NULL?
for HU TestSet 1.
According to the scale of Figure 8, it isclassified as ?NULL?
for all three test sets.For Punjabi scriptural translation, we also de-veloped two types of output default andprocessed for Gurmukhi to Shahmukhi transla-tion.
In the reverse direction, it has two types ofinputs, one with diacritics and the other withoutdiacritics.
Table 11 and 12 shows results of Pun-jabi scriptural translation.Test SetDefault output Processed outputWordLevelSentenceLevelWordLevelSentenceLevelPU 84.2% 27.8% 85.2% 29.9%Table 11: Gurmukhi to Shahmukhi scriptural transla-tion resultsTest SetWith diacritics Without diacriticsWordLevelSentenceLevelWordLevelSentenceLevelPU 98.8% 90.3% 67.3% 6.4%Table 12: Shahmukhi to Gurmukhi scripturaltranslation resultsCompared to the Hindi?Urdu pair, the Punja-bi/Shahmukhi?Punjabi/Gurmukhi pair is compu-tationally less hard.
The post-processing to thedefault out of the finite-state scriptural transla-tion systems for Punjabi/Gurmukhi to Punja-bi/Shahmukhi also helps to gain an increase ofapproximately 1% and 2% at word and sentencelevels respectively.
The Shahmukhi to Gurmukhiscriptural translation system is classified as?GOOD?
by both scales of Figure 7 and 8.
Thusthe usability of the Punjabi finite-state scripturaltranslation system is higher than the Hindi?Urdufinite-state scriptural translation system.In the reverse direction, the Shahmukhi toGurmukhi scriptural translation system gives anaccuracy of 98.8% and 67.3% for the Shahmukhiinput text with and without diacritics respective-ly.
For the Shahmukhi input text with diacritics,the scriptural translation system is classified as?EXCELLENT?
by both scales.
On the otherhand, it is classified as ?NULL?
according to thescale of Figure 8 for the Shahmukhi input textwithout diacritical marks.Similar to Hindi?Urdu and Punjabi finite-statescriptural translation, we have applied our finite-state system to the Seraiki test set.
Here again,we have developed a processed Serai-ki/Shahmukhi output from the default output ofour finite-state system by removing the diacrit-ics.
The results are given in Table 13 and 14.Test SetDefault output Processed outputWordLevelSentenceLevelWordLevelSentenceLevelSE 81.3% 19.4% 83.7% 20.3%Table 13: Seraiki/Devanagari to Seraiki/Shahmukhiscriptural translation resultsTest SetWith diacritics Without diacriticsWordLevelSentenceLevelWordLevelSentenceLevelSE 95.2% 76.4% 58.6% 8.6%Table 14: Seraiki/Shahmukhi to Seraiki/Devanagariscriptural translation resultsIn the case of the Seraiki/Devanagari to Serai-ki/Shahmukhi scriptural translation system, thepost-processing also helps to gain an increase inword accuracy of approximately 1 to 2 percent798both at the word and the sentence levels.
Theaccuracy for both the default and the processedSeraiki/Shahmukhi outputs is also more than80% at word level.
The system is classified as?GOOD?
and ?GOOD ENOUGH?
according tothe scale of Figure 7 and 8 respectively.The absence of diacritical marks in the Serai-ki/Shahmukhi has a very bad effect on the accu-racy of the finite-state scriptural translation sys-tem.
The scriptural translation system is classi-fied as ?NULL?
for the Seraiki/Shahmukhi inputtext without diacritics.7 ConclusionFinite-state methods are robust and efficient toimplement scriptural translation rules in a veryprecise and compact manner.The missing information and the diacriticalmarks in the source text proved to be very criti-cal, crucial and important for achieving high andaccurate results.
The above results support ourhypothesis that lack of important information inthe source texts considerably lowers the qualityof scriptural translation.
They are crucial andtheir absence in the input texts decreases the per-formance considerably, from more than 80% toless than 60% at word level.
Thus restoration ofthe missing information and the diacritical marksor reducing the effect of their absence on thescriptural translation is one of the major ques-tions for further study and work.In general, only word accuracy rates are re-ported.
We have observed that only word accura-cy rates may depict a good performance, but theperformance of the same system at sentence-level may be not very good.
Therefore, subjec-tive evaluations and usage of translation resultsin real life should also be considered while eva-luating the translation quality.AcknowledgmentsThis study is supported by Higher Education Com-mission (HEC), Government of Pakistan under itsoverseas PhD scholarship scheme.
We are also thank-ful to Digital South Asian Library, University of Chi-cago for sharing Platts dictionary data (Platts, 1884).ReferencesAbdulJaleel, N. and L. S. Larkey.
2003.
StatisticalTransliteration for English-Arabic Cross LanguageInformation Retrieval.
12th internationalConference on information and KnowledgeManagement (CIKM 03), New Orleans.
139-146.Al-Onaizan, Y. and K. Knight.
2002.
MachineTransliteration of Names in Arabic Text.Workshop on Computational Approaches ToSemitic Languages, the 40th Annual Meeting ofthe ACL, Philadelphia, Pennsylvania, 1-13.Arbabi, M., S. M. Fischthal, V. C. Cheng and E. Bart.1994.
Algorithms for Arabic NameTransliteration.
IBM J. Res.
Dev.
38(2): 183-193.Boitet, C. and F. X. Tch?ou.
1990.
On a Phonetic andStructural Encoding of Chinese Characters inChinese texts.
ROCLING III, Taipeh.
73-80.Fujii, A. and T. Ishikawa.
2001.
Japanese/EnglishCross-Language Information Retrieval:exploration of query translation and transliteration.Computers and the Humanities 35(4): 389-420.Halpern, J.
2002.
Lexicon-based OrthographicDisambiguation in CJK Intelligent InformationRetrieval.
3rd workshop on Asian languageresources and international standardization, the19th International Conference on ComputationalLinguistics (COLING), Taipei, Taiwan.
1-7.Hieronymus, J.
1993.
ASCII Phonetic Symbols for theWorld's Languages: Worldbet.
AT&T BellLaboratories.Jeong, K. S., S. H. Myaeng, J. S. Lee and K.-S. Choi.1999.
Automatic Identification and Back-transliteration of Foreign Words for InformationRetrieval.
Information Processing andManagement 35: 523-540.Kang, B. and K. Choi.
2000.
AutomaticTransliteration and Back Transliteration byDecision Tree Learning.
2nd InternationalConference on Evaluation and LanguageResources (ELRC), Athens.Kaplan, R. M. and M. Kay.
1994.
Regular Models ofPhonological Rule Systems.
20(3).Knight, K. and Y. Al-Onaizan.
1998.
Translation withFinite-State Devices 3rd Conference of theAssociation for Machine Translation in theAmericas on Machine Translation and theInformation Soup (AMTA-98), Pennsylvania.421-437.Lee, J. S. and K. S. Choi.
1998.
English to KoreanStatistical Transliteration for InformationRetrieval.
Computer Processing of Orientallanguages 12(1): 17-37.Malik, M. G. A.
2005.
Towards a UnicodeCompatible Punjabi Character Set.
27thInternationalization and Unicode Conference,Berlin.Malik, M. G. A., L. Besacier, C. Boitet and P.Bhattacharyya.
2009.
A Hybrid Model for UrduHindi Transliteration.
Joint conference of the 47thAnnual Meeting of the Association ofComputational Linguistics and the 4th799International Joint Conference on NaturalLanguage Processing of the Asian Federation ofNLP ACL/IJCNLP Workshop on Named Entities(NEWS-09), Singapore, 177?185.Malik, M. G. A., C. Boitet and P. Bhattacharyya.2008.
Hindi Urdu Machine Transliteration usingFinite-state Transducers.
22nd InternationalConference on Computational Linguistics(COLING), Manchester, 537-544.Malik, M. G. A., C. Boitet and P. Bhattacharyya.2010.
Analysis of Noori Nast'aleeq for MajorPakistani Languages.
2nd Workshop on SpokenLanguage Technologies for Under-resourcedLanguages SLTU-2010, Penang, Malaysia.Mohri, M. 1997.
Finite-state Transducers in Languageand Speech Processing.
23(2).Pirkola, A., J. Toivonen, H. Keskustalo, K. Visala andK.
J?rvelin.
2003.
Fuzzy Translation of Cross-lingual Spelling Variants.
26th Annualinternational ACM SIGIR Conference onResearch and Development in informaionRetrieval, Toronto.Platts, J. T. 1884.
A Dictionary of Urdu, ClassicalHindi and Englsih.
W. H. Allen & Co.Rahman, T. 1997.
Language and Politics in Pakistan.Oxford University Press, Lahore.Rahman, T. 2004.
Language Policy and Localizationin Pakistan: Proposal for a Paradigmatic Shift.Crossing the Digital Divide, SCALLA Conferenceon Computational Linguistics, Katmandu.Rai, A.
2000.
Hindi Nationalism.
Orient LongmanPrivate Limited, New Delhi.Roche, E. and Y. Schabes, Eds.
1997.
Finite-stateLanguage Processing.
MIT Press,  Cambridge.Sakai, T., A. Kumano and T. Manabe.
2002.Generating Transliteration Rules for Cross-language Information Retrieval from MachineTranslation Dictionaries.
IEEE Conference onSystems, Man and Cybernatics.Stall, B. and K. Knight.
1998.
Translating Names andTechnical Terms in Arabic Text.
Workshop onComputational Approaches to Semitic Languages,COLING/ACL, Montreal, 34-41.Virga, P. and S. Khudanpur.
2003.
Transliteration ofProper Names in Cross-language Applications.26th Annual international ACM SIGIRConference on Research and Development ininformaion Retrieval, Toronto.Wells, J. C. 1995.
Computer-coding the IPA: aproposed extension of SAMPA.
UniversityCollege London.Yan, Q., G. Gregory and A. E. David.
2003.Automatic Transliteration for Japanese-to-EnglishText Retrieval.
26th annual international ACMSIGIR conference on Research and developmentin information retrieval, 353-360.Zia, K. 1999.
Standard Code Table for Urdu.
4thSymposium on Multilingual InformationProcessing (MLIT-4), Yangon.800
