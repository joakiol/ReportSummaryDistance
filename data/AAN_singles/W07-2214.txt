Proceedings of the 10th Conference on Parsing Technologies, pages 106?108,Prague, Czech Republic, June 2007. c?2007 Association for Computational LinguisticsPomset mcfgsMichael J PanUniversity of California Los Angelesmjpan@cs.ucla.eduAbstractThis paper identifies two orthogonal dimen-sions of context sensitivity, the first beingcontext sensitivity in concurrency and thesecond being structural context sensitivity.We present an example from natural lan-guage which seems to require both types ofcontext sensitivity, and introduce partiallyordered multisets (pomsets) mcfgs as a for-malism which succintly expresses both.IntroductionResearchers in computer science and formal lan-guage theory have separately investigated contextsensitivity of languages, addressing disjoint dimen-sions of context sensitivity.
Researchers in paral-lel computing have explored the addition of con-currency and free word order to context free lan-guages, i.e.
a concurrency context sensitivity (Gis-cher, 1981; Warmuth and Haussler, 1984; Pratt,1985; Pratt, 1986; Lodaya and Weil, 2000).
Com-putational linguistis have explored adding cross-ing dependency and discontinuous constituency, i.e.a structural context sensitivity (Seki et al, 1991;Vijay-Shanker et al, 1987; Stabler, 1996).Research considering the combination of two di-mensions of expressing context sensitivity have beensparse, e.g.
(Becker et al, 1991), with research ded-icated to this topic virtually nonexistent.
Naturallanguages are not well expressed by either form ofcontext sensitivity alone.
For example, in Table 1,sentences 1-8 are valid, but 9, 10 are invalid con-structions of Norwegian.
In addition to the cross-ing dependency between the determiner and adverbphrase, this example can be described by eitherDerfor ga Jens Kari kyllingen tydeligvis ikke lenger kaldTherefore gave Jens Kari the chicken evidently not longer coldDerfor ga Jens Kari tydeligvis kyllingen ikke lenger kaldDerfor ga Jens tydeligvis Kari kyllingen ikke lenger kaldDerfor ga Jens tydeligvis Kari ikke kyllingen lenger kaldDerfor ga Jens tydeligvis Kari ikke lenger kyllingen kaldDerfor ga Jens tydeligvis ikke lenger Kari kyllingen kaldDerfor ga tydeligvis Jens ikke lenger Kari kyllingen kaldDerfor ga tydeligvis ikke Jens lenger Kari kyllingen kald* Derfor ga Jens ikke tydeligvis Kari lenger kyllingen kald* Derfor ga Jens ikke tydeligvis kyllingen lenger Kari kaldTable 1: Bobaljik?s paradox/shape conservation exampleBobaljik?s paradox (Bobaljik, 1999), which assertsthat relative ordering of clausal constituents are notunambiguously determined by the phrase structure,or shape conservation (Mu?ller, 2000), i.e.
that lin-ear precedence is preserved despite movement op-erations.
In other words, the two structurally con-text sensitive components (due to the crossing de-pendency between them) can be shuffled arbitrarily,leading to concurrent context sensitivity.This paper proposes pomset mcfgs as a formal-ism for perspicuously expressing both types of con-text sensitivity.
1 The rest of the paper is organizedas follows.
Section 1 introduces pomsets, pomsetoperations, and pomset properties.
Section 2 pro-vides a definition of pomset mcfgs by extending thestandard definition of mcfgs, defined over tuples ofstrings, to tuples of pomsets.
Section 3 discussespomset mcfg parsing.1Other pomset based formalisms (Lecomte and Retore,1995; Basten, 1997; Nederhof et al, 2003) have been limitedto the use of pomsets in context free grammars only.1061 PomsetsIn this section, we define pomsets as a model for de-scribing concurrency.
A labelled partial order (LPO)is a 4 tuple (V, ?, , ?)
where V is a set of ver-tices, ?
is the alphabet,  is the partial order on thevertices, and ?
is the labelling function ?:V?
?.A pomset is a LPO up to isomorphism.
The con-catenation of pomsets p and q is defined as ;(p,q)= (Vp?Vq,?p ?
?q,p ?
q ?Vp?Vq,?p ?
?q).The concurrency of pomsets p and q is definedas ?
(p,q) = (Vp?Vq,?p ?
?q,p ?
q,?p ?
?q).Pomset isolation (?)
is observed only in the con-text of concurrency.
The concurrence of an isolatedpomset with another pomset is defined as ?
(?p,q) =({vp}?Vq,p?
?
?q,q,{(p?,vp)}?
?q), where ?p isthe set of linearizations for p, and p?
is a functionwhich returns an element of ?p.
Let ?i be a pomsetconcurrency operator restricted to an arity of i. Be-cause concurrency is both associative and commu-tative, without isolation, ?m?n = ?n?m = ?m+n, de-feating any arity restrictions.
Isolation allows us torestrict the arity of the concurrency operator, guaran-teeing that in all linearizations of the pomset, the lin-earizations of the isolated subpomsets are contigu-ous.2 A mildly concurrent operator ?
?n, i.e.
an n-concurrent operator, is a composite operator whoseconcurrency is isolated and restricted to an arity of n,such that it operates on at most n items concurrently.2 Pomset mcfgsThere are many (structural) mildly context sensitivegrammar formalisms, e.g.
mcfg, lcfrs, mg, and theyhave been shown to be equivalent (Vijay-Shanker etal., 1987).
In this section we construct mcfgs overpomsets (instead of strings) to define grammars withboth types of context sensitivity.A pomset mcfg G is a 7-tuple (?,N,O,P,F,R,S)such that ?
is a finite non-empty set of atoms, i.e.terminal symbols, N is a finite non-empty set of non-terminal symbols, where N?
?=?, O is a set of validpomset operators, P is a set of i-tuples of pomsetslabelled by ?
?N, F is a finite set of pomset rewrit-ing functions from tuples of elements of P into ele-ments in P, F?
{ g:Pn ?P | n>0 }, R is a finite set2Pomset isolation is similar to proposals in for string iso-lation in linear specification language (Goetz and Penn, 2000),locking in idl-expressions (Nederhof and Satta, 2004), and in-tegrity constraints in fo-tag (Becker et al, 1991).of rewrite rules which pair n-ary elements of F withn+1 nonterminals, and S?N is the start symbol, andd(S) = 1.This definition extends the standard mcfg defini-tion (Seki et al, 1991), with two main differences.First, strings have been generalized to pomsets, i.e.P is a set of i-tuples of pomsets instead of i-tuples ofstrings.
It follows that F, the set of functions, oper-ate on tuples of pomsets instead of tuples of strings,and so forth.
Second, pomset mcfgs explicitly spec-ify O, the set of possible operators over the pomsets,e.g.
{;, ?
?2}; string mcfgs have an implied operatorset O={;} (i.e.
just string concatenation).Additionally, just as in mcfgs, where the arity ofstring components are limited, we can limit the ar-ity of the concurrency of pomsets.
A n-concurrentpomset mcfg is a pomset mcfg such that for all con-currency operators ?i in the grammar, i?n.
A pom-set mcfg with no concurrency among its componentsis a 1-concurrent pomset mcfg, just as a cfg is a 1-mcfg.3 ParsingIn this section we propose a strategy for parsingpomset mcfgs, based on IDL parsing (Nederhof andSatta, 2004).
We define pomset graphs, which ex-tend IDL graphs and pom-automata and are definedover tuples of pomsets (or tuples of idl expressions),rather than single pomsets or idl expressions.
An in-formal analysis of the computational complexity forparsing pomset mcfgs follows.Pomset graphs The construction is quite straightforward, as pomsets themselves can already be con-sidered as DAGs.
However, in the pomset graph,we add two vertices, the start and end vertices.
Wethen add precedence relations such that the start ver-tex precedes all minimal vertices of the pomset, andthat the end vertex succeeds all maximal vertices ofthe pomset.
For any nonempty pomset, we defineVmin ?V and Vmax ?V to be the minimal andmaximal, respectively, vertices of V. Informally, novertex in a pomset precede Vmin and none succeedany in Vmax.
Formally, ?
v?V, v?
?V,v?6=v, Vmin ={ v | (v?,v) 6? } and Vmax = { v | (v,v?)
6? }.
Thestart vertex is then labelled with the empty string, ,and the end vertex is labelled with ?
?, a symbol notin ?.107Given a pomset p= (Vp,?,,?p), a pomsetgraph for p is a vertex labelled graph ?
(p) =(V?
,E,??)
where V?
and E are a finite set of ver-tices and edges, where V?=Vp?
{vs,ve} and E= ?vs?Vmin?Vmax?ve, ??=??{,??
}, where ??
isa symbol not in ?, and ??=?p?{(vs,),(ve,??)}
isthe vertex labelling function.
Having defined thepomset graph, we can apply the IDL parsing algo-rithm to the graph.Complexity While the complexity of the mem-bership problem for pomset languages in generalis NP-complete (Feigenbaum et al, 1993), by re-stricting the context sensitivity of the pomset gram-mars, polynomial time complexity is achievable.The complexity of the parsing of IDL graphs isO(n3k) (Nederhof and Satta, 2004) where k is thewidth of the graph, and the width is a measurementof the number of paths being traversed in parallel,i.e.
the arity of the concurrent context sensitivity.Our intuition is that the parameterization of the com-plexity according to the number of parallel pathsapplies even when structural context sensitivity isadded.
Thus for a k-concurrent m-structural mcfg,we conjecture that the complexity is O(n3km).4 ConclusionIn this paper we identified two types of context sen-sitivity, and provided a natural language examplewhich exhibits both types of context sensitivity.
Weintroduced pomset mcfgs as a formalism for describ-ing grammars with both types of context sensitivity,and outlined an informal proof of the its polynomial-time parsing complexity.ReferencesTwan Basten.
1997.
Parsing partially ordered multisets.International Journal of Foundations of Computer Sci-ence, 8(4):379?407.Tilman Becker, Aravind K. Joshi, and Owen Rambow.1991.
Long distance scrambling and tree adjoininggrammars.
In Proceedings of EACL-91, the 5th Con-ference of the European Chapter of the Association forComputational Linguistics.Jonathan David Bobaljik.
1999.
Adverbs: The hierarchyparadox.
Glot International, 4.Joan Feigenbaum, Jeremy A. Kahn, and Carsten Lund.1993.
Complexity results for pomset languages.
SIAMJournal of Discrete Mathematics, 6(3):432?442.Jay Gischer.
1981.
Shuffle languages, Petri nets, andcontext-sensitive grammars.
Communications of theACM, 24(9):597?605, September.Thilo Goetz and Gerald Penn.
2000.
A proposed lin-ear specification language.
Technical Report 134, Ar-beitspapiere des SFB 340.A.
Lecomte and C. Retore.
1995.
Pomset logic as analternative categorial grammar.
In Glyn Morrill andRichard Oehrle, editors, Formal Grammar, pages 181?196.K.
Lodaya and P. Weil.
2000.
Series-parallel languagesand the bounded-width property.
Theoretical Com-puter Science, 237(1?2):347?380.Gereon Mu?ller.
2000.
Shape conservation and remnantmovement.
In Proceedings of NELS 30.Mark-Jan Nederhof and Giorgio Satta.
2004.
IDL-expressions: A formalism for representing and parsingfinite languages in natural language processing.
Jour-nal of Artificial Intelligence Research, 21:287?317.Mark-Jan Nederhof, Giorgio Satta, and Stuart M.Shieber.
2003.
Partially ordered multiset context-freegrammars and ID/LP parsing.
In Proceedings of theEighth International Workshop on Parsing Technolo-gies, pages 171?182, Nancy, France, April.Vaughan R. Pratt.
1985.
The pomset model of paral-lel processes : Unifying the temporal and the spatial.Technical report, Stanford University, January.Vaughan R. Pratt.
1986.
Modelling concurrency withpartial orders.
International Journal of Parallel Pro-gramming, 15(1):33?71.Hiroyuki Seki, Takashi Matsumura, Mamoru Fujii, andTadao Kasami.
1991.
On multiple context free gram-mars.
Theoretical Computer Science, 88:191?229.Edward P. Stabler.
1996.
Derivational minimalism.In Christian Retore?, editor, LACL, volume 1328 ofLecture Notes in Computer Science, pages 68?95.Springer.K.
Vijay-Shanker, D. J. Weir, and A. K. Joshi.
1987.Characterizing structural descriptions produced byvarious grammatical formalisms.
In Proceedings ofthe ACL, pages 104?111, Stanford, CA.Manfred K. Warmuth and David Haussler.
1984.
On thecomplexity of iterated shuffle.
J. Comput.
Syst.
Sci.,28(3):345?358.108
