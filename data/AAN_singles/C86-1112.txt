GENERALIZED MEMORY MANIPULATING ACTIONS FORPARSING NATURAl.
LANGUAGElrina Prodanof Giacomo FcrrariIstituto di Linguistica Computazionale Department of LinguisticsCNR-Pisa Unwersity of PisaAbstractCurrent (computational) inguistic theories have developed specificfos'malisllls for representing linguistic phenomena such as unboundeddependencies, relatives, etc, In this contribution we present a model ellinguistic structures storing and accessing, which accounts for the samephenomena in a procedural way.
Such a model has been implemented inthe frame of an ATN parser.1.
IntroductionLiterature on parsing natural language has recentlybeen concerned with topics which are unfamiliar totraditional Computational Linguistics such as functionalsimilarities of different syntactic constructions (I),reanalysis of 'indelible' structures (9), manipulation of'indelible' trees (7)Must of the linguistic problems involved are connectedwith unbounded dependencies and antecedent-referentbinding.
Grammatical formalisms have been developed, whichrepresent certain linguistic phenomena in terms ofdiscontinuous constituents (10), or generate unboundedlydependent symbols on the basis of specific conventions (4,5lHowever, the corresponding parsing algorithms are simplemodifications of traditional parsers, where the extentions ofh)rmalisms are not adequately accounted for on the proceduralsideOur approach to the problem of parsing NaturalLanguage is to identify a set of processing strategieswhich may not only process, but also represent he alludedphenomena within the frame of a psychologically motivatedCF parsing algorithm,~_.
General ized memory manipu lat ing  actionsEXAM-LC (EXtondend Access and Manipulation of the LeftContext) is a model of linguistic structures toring andaccessing designed according to such a psychologicalprocedural approach.
It relies upon the following assumptions-.
the left context, ie.
the structure corresponding to thecurrently analyzed part of the input string, is often affected insome way by newly incoming information and may containinformation which affect further analysis Therefore, it mustbe accessible beyond possible limits imposed by the structureof the parser.
In fact, in many cases the data within the scopeof the current  constituent or rule are more freely accessiblethan the others.
On the contrary, the scope of accessibilityto the left context should be specified according to how farit is affected or affects the current analysis;-a  set of general actions can be defined correspondingto mental operations actually accomplished during theprocess of comprehension.
Any surface construction isdescribed both by its (deep) representation and by theoperations which perform the mapping These actions can beassumed as linguistic procedural universals:-.
it is possible that syntactic phenomena, that have differentstructural explications, are handled by a common process orsequence of operationsA common space of memory is assumed to contain thecurrent hypothesis about the analysis of the parsed segmentof the input from the beginning We will refer to such astructured space as Current Global \]lypethesis (CGH) Thefollowing set of abstract operations on the space of memoryhas been defined till nowa) an opening and a closing action wsll respectively startand end the storing of the information related to aphrase/clause in a current subspace subsequently mergedwith the global space The way of storlrtg depends upot't therepresentation f the output and the corresponding actionsare desgined ill accordance Io itb) a t'et)'Jevth,?
action revolving two part lcipants a symbolthat triggers the action {trig,goD and the information to beretrieved (the target ef tile actk)nl will retrieve ent~;econstituents which appear to be possible antecedentsfragments of structure, or even simple lexical features Thetrigger may be a gap a pronoun an ellipsis and any otherphenomenon whicil requires the search for an antecedent(,garRet}.
or the need for an agreementAfter the identification of such a t1:4?Rcr the actton isdecomposed in three stepsi) extraction of constraints which must guide the searchfor the targeti i l scanning of the CG\[I under the specified conditionsandiii) retrieving of the requtretl information f)n thisfunctional ground this description fits to more or less all thecases mentioned in ( 1 )The action of searching back may be constrainedby several types of restrictions, includingi) morphologicalfeatures i  the gender and number of apronoun or those required for agreement by the syntacticenvironment (e g the verb),ii) syntactic idiosyncrasies of a lexical item: this is thecase of ~,TRAN.q verbs t ie these verbs requir ing acomplement clause) that determine which of theirarguments i to be the subject of the complement, as shown in( 1 )a A credette di udire tm rumereA thought to hear a noiseb A persuase B a fuggireA persuaded B to run awayc A ordino' a B di sedateh imposed to B to sit downiii) semantic features or cognitive descriptionsthat may be introduced in the process, andiv) syntactic determination of the scope of the search.such as, for instance, Suh/aceao"Retrieving of an antecedent may actually correspondto two different operations depending upon whether theantecedent te be bound linearly proceeds or follows the473symbol it is to be bound to.
In fact, in many commonsentences the antecedent linearly follows its dependent, asin(2)a Ouando_, si arrabbia, Giovanni diventa fosseWhen (he) gets angry, John becomes redb Se 1o vedi.
saluta Giovanni da parte miaIf (you) see him, say hallo to John on my behalfIn this case, the binding should take place in two steps, theflagging of the need for a forward binding and the moving ofthe pointer from the antecedent, once detected, tothe flagc) Many of the retrieving actions are to end up with abinding or, more generally, with a movlhd?
action.
This canbe realized at least in two ways.
by actually copying theretrieved constituent into the trigger's ubspace or simplymoving a pointer from one to the other.
Also in this case thechoice is a matter of representation.d ) A ri?oafih, tlt'ation action is necessary in order to modify anah'eady (partially) built structure, as new incominginformation indicate the need for such a change The typesof modifications to be performed again depend upon therepresentation f the output, but the one required by therelative pronoun is likely to be a general one.Relative pronouns need tO be bound to an antecedentand, besides, are the surface signal of an embedding No'.~pecial processing difficulty is proposed by the sentence(3) il ragazzo che correthe boy whorunswhere the relative pronoun occurs exactly where theembedding begins In this case a scope restriction canlimit the search for an antecedent to the immediatelyproceeding NP But in the case of p/ed-plpiag as in(4) il cane della fedelta' del quale nessuno dubitathe dog about he fidelity of which nobody doubtsthe relative clause bounderyis et three (in english four)words before the relative pronoun.
In the framework we havebeen discussing an action which structurally modifies theleft context can be proposed, which should embed thecomponent(s) being processed in a relative clause as therelative pronoun is mete ) A final type of access to the left context is the relabe/ling ofa processed component, ah'eady used for the passivetransformation.3.
An experimental implemnntationAn experimental realization of the above discussedideas has been implemented in the frame of the ATNparsing algorithm (13) running a functional grammar a'laM.
Kay (6),ATN has been preferred because it meets therequirements of being a psychologically motivated CF parser.Moreover ATN can be considered a very well stabilizedparsing algorithm.
The data structure is a list which ismainly accessed with a typical LIFO stack policy.. Itrepresents a unique memory space non splitted into registers.it contains at any point of the process the CGH, i.e.
the entireleft context literally represented in terms of attribute-valuepairs, as required by functional grammar.We give hereafter a list of the functions which access the474CGH in Backus notation.1.
A ctJon sa.
<storing actions>::-ADD pair location \[ASSIGN label path,location,::= NILl<form><label>::= any label<pair>:: = label value<value>:.= "l<form>b.
<list manipulation,:::PUSH tPOP tINSERT data item<data>::= any datadtem>: = <form>2.FormsFIND path test level dtypeFINDVAL path test level dtype fLOCATE path test level dtype<path ,:~= <label, ><test>:: = Tinny test<level>::- TICL<dtype> :=TINDJLThe basic storing action is ADD which is used to store anyincoming piece of structure.Extraction of information is done by the forms FIND,which returns a pair, and FINDVAL, which returns only thevMue of a pair.
LOCATE works exactly in the same way,,butreturns a pointer to a given radix.
All the three functions canwork in different modes They can search either only thecurrent level (CI.)
or through the entire list (T) In this lattercase the current level is excluded and, if no further optionsare specified, the lower (the nearest to the top) occurrence isreturned Another option (dtype) returns all the occurrenceseither appended in a list (L) or one by one.non-deterministically (ND).
A third option evaluates conditionsin order to select the component identified by the specifiedpath.The three last actions.
PUSH, POP, and INSERT, manipulatethe items in the list.
PUSlt adds anew (empty) item in front ofthe list.
The elements of the component being analysed(phrases or sentences) are ADDed in this top item, which hasbeen therefore referred to as current level.
POP removesthe current top-item and embeds it into the new top-item,possibly assigning a label to the corresponding component.Finally INSERT inserts an item, corresponding toa new level,somewhere back between 'item' and the front part of the list,and fills it with 'data'.
It is the only instance ofreconfiguration action designed till now while others canbe introduced according to the studied phenomena and theadopted representation.List manipulation takes place independently from thestarting or the ending of the process expressed in a subnet.Thus a component can be POPed after the end of itsrecognition procedure, when also its function is clarified.This list of actions is open-ended and is supposed to beupdated as new general operations are identified.The retrieving action scans the entire left contextaccording to specified searching constraints and is able toreturn any required fragment, regardless of its structure.
Inparticular, information associated to the loxical items alreadyinserted in it structure can be extracted for further processingat any point, without having previously been saved in aregister or raised to higher nodes, as often lexical features are.This turns out to be particularly usofull for the treatment oflexical idiosyncrasies.
We have already mentioned that anSTRANS verb determines which of its arguments i to be thesubject of the complement clause.
Many other words havespecial linguistic behaviours.
The possibility of treatingsuch syntactic peculiarities of lexical items by associatingparticular fragments of grammar to lexical entries andprocessing them when needed has already been experimented(3) A wider and easier use of such a device contributes toourparser certain advantages of word expert parsing still stickingto a syntactic model of analysis.The details of this implementation a d some examples ofprocessing have been discussed in ( I 1 ).4.
An  intuitive psychological argumentIt has been shown (7, 11) that a recoafiguration action.which modifies the structure of the already analysed part ofthe input string limits backtrack, since a certain class ofparsing errors can be corrected without actually restartingthe processing of the input string.
Under a psychologicalviewpoint the hypothesis that during the comprehension ofa sentence guesses (CGH's) are progressively enriched andstored in a space of memory.
In this process errors may occurFor some of them, such as relative clauses (11) and adjectiveattachment (7), it is enough to modify the previous guess whilefor others a real backtrack and reanalysis is necessary Apossible explanation is that in the activity of sentencecomprehension a phase of structuring isdistinguished from aphase of perception.
Errors occuring in the former areremedied by modifying a guess, while those occuring in tilelatter need backtrack and the choice of another strategy5.
Parsing eff ic iencyA relevant claim is that the data structure and the set oractions of EXAM.-LC-ATN improve the computationalefficiency of an ATN parser.
This depends upon twopeculiarities of the parser, the reduction in register settingand storage accesses and the limitation of backtrack.
In ATN,register setting is done by searching through a registertable; if the called register is already present i is set to the newdeclared value, while if it is not, it is initialized and filled.
InEXAM-LC.ATN ordinary register setting (SETR} is substitutedby an operation which stores information in an alreadyinitialized memory subspace.
Thus, for an equivalentgrammar, the number of storage accesses in EXAM-I,C-ATN isexactly the same of a traditional ATN, but no searching orinitialization is performed.
There is a similarity between aregister initialization operation and the opening of a newmemory subspace (PUSH}.
However, this is done only for thehigher level constituents, such as S, NP, PP, etc, while in anATN new registers are activated even for the storage ofterminals or features.Extra register setting, commonly used in an ATN to laterallypass parameters to different levels of computation from thecurrent one (SENDR, LIFTR), is unnecessary in EXAM-LC-ATN.In fact.
the required parameters are retrieved if and whenthey are needed from the level where they are needed.This guarantees efficiency in two ways.
On one hand.
theSENBR/LIFTR - GETR pairs are substituted by a single searchthrough the left context Within a memory subspace thesearch proceeds linearly as for pattern-matching.
On theother hand.
the overhead ue to the sending or lifting ofparameterswhich may turn out to be useless at the next upperor lower level is eliminated.
In conclusiom the average ofstorage spaces activation operations and storage accesses i  infavour of EXAM-LC-ATN.Backtrack is the typical mechanism by whichnon-deterministic depth first parsers like ATN manage thechoice of alternatives.
It consists in going back to the nearestchoice point and trying the following alternative Itinvolves also a restoring of the input pointer to the element inthe input string where it was before the currentalternative was chosen, and reprocessing of the input fromthat point in the new alternative.
Generally thismechanism is activated when some incoming piece ofinformation signals that the chosen alternative is the wrongone In some cases, the information give meaningfullindications about the correct alternative analysis to bechosen.
In these cases backtrack can be substituted by specialtechniques for modifying the output of the analysis withoutroprocessing the involved segment of the input stringINSERT is a case of such a modification action and avoidsbacktrack The fiJll access to the left context allows forthe introduction of other ways of limiting backtrackREFERENCES1 Berwick R.C., i o inborg  A.S. Syntactic Constraints andEfficient Parsability.
in Proceedings of the 21thAnnual Meeting of ACI,, Cambridge MA.
15-17 June1983.
pp.119.122:2 Borwick R,C, A Deterministic Parser with Broad Coverage,in Proceedings of the Eighth International JointConference on Artificial Intel l igence, l:arlsruhe8.12 August 1983 pp71ffT12,3 Cappelli A., Ferrari G., Moretti L., Prodanof I.. StockO.. Parsing an Italian Text with an ATN ParserNT.ILC-CNR, Paso.
1978,4 Gazdar G., Klein E.. Pullum G., Sag 1, (;eneralizedPhrase Structure Grammar.
Blackwell, 1985,5 Kaplan R., Bresnan J., l,exical Functional Grammar AFormal System for Grammatical Representation iBresnan J, (ed,), The Mental representation ofGrammatical Relations.
MIT Press 1982. pp 173-2816 Kay M.. Functional Grammar in PJ'oceedings of the 3thMeeting of the Berkeley Linguistic Society.
Berkeley1979, pp 142-158,7 Lvsmo L.. Torasso P., A Flexible Natural ,anguage ParserBased on a Two-Level Representation f Syntax, inProceedings of the First Conference of the EuropeanChapter of the ACT,, 1983, pp.l 14-121 :,g Marcus M. A Theory of Syntactic Recognition for NaturalLanguage, MIT Press.
Cambridge MA 19809 Marcus M., I l indle B,, Fleck M., D-Theory Talking aboutTalking about Trees, in Proceedings of the 21thAnnual Meeting of ACL, Cambridge MA.
15.17 June1983,pp,129-138:10 Pero i ra  F.. Extraposition Grammars, in AJCI,, 7, 4, 1981,pp 243.-256,11 Prndanuf  I., Fer rar i  G., Extended Access to the LeftContext in an ATN Parser.
in Proceedings of the FirstConference of the European Chapter of the ACL, 1983,pp 58-63;12.
Shipman W.D., Marcus M., Towards Minimal DataStructure for Deterministic Parsing, in Proceedingsof the 6th International Joint Conference onArtificial Intelligence, Tokyo, August 20-23 1979.pp 815-817;13.
Stock O., ATNSYS: Un Sistema per l'Analisi GrammaticaleAutomatica delle Lingue Naturali, NI B76-29, IEI, CNR475
