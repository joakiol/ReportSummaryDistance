Proceedings of the BioNLP Shared Task 2013 Workshop, pages 109?115,Sofia, Bulgaria, August 9 2013. c?2013 Association for Computational LinguisticsImproving Feature-Based Biomedical Event Extraction System by In-tegrating Argument InformationLishuang Li, Yiwen Wang, Degen HuangSchool of Computer Science and TechnologyDalian University of Technology116023 Dalian, Chinalilishuang314@163.com yeevanewong@gmail.comhuangdg@dlut.edu.cnAbstractWe describe a system for extracting biomedi-cal events among genes and proteins frombiomedical literature, using the corpus fromthe BioNLP?13 Shared Task on Event Extrac-tion.
The proposed system is characterized bya wide array of features based on dependencyparse graphs and additional argument informa-tion in the second trigger detection.
Based onthe Uturku system which is the best one in theBioNLP?09 Shared Task, we improve the per-formance of biomedical event extraction byreducing illegal events and false positives inthe second trigger detection and the second ar-gument detection.
On the development set ofBioNLP?13, the system achieves an F-score of50.96% on the primary task.
On the test set ofBioNLP?13, it achieves an F-score of 47.56%on the primary task obtaining the 5th place intask 1, which is 1.78 percentage points higherthan the baseline (following the Uturku sys-tem), demonstrating that the proposed methodis efficient.1 IntroductionExtracting knowledge from unstructured text isone of the most important goals of Natural Lan-guage Processing and Artificial Intelligence.
Re-sources in the internet are expanding at an expo-nential speed, especially in the biomedical do-main.
Due to the astronomical growth of biomed-ical scientific literature, it is very important andurgent to develop automatic methods for know-ledge extraction system.In the past few years, most researchers in thefield of Biomedical Natural Language Processingfocused on extracting information with simplestructure, such as named entity recognition(NER), protein-protein interactions (PPIs) (Air-ola et al 2008; Miwa et al 2009) and disease-gene association (Chun et al 2006).
While PPIsconcern the flat relational schemas with nonested structures, bio-molecular events describethe detailed behavior of bio-molecules, whichcapture the biomedical phenomena from textswell.
The BioNLP?09 shared task (Kim et al2009) provides the first entry to bio-event extrac-tion.
As described in BioNLP?09, a bio-eventconsists of a trigger and one or more arguments,where a trigger is a contiguous textual string con-taining one or more tokens and an argument is aparticipant (event or protein) with a correspond-ing type.
For example, in the snippet ?interferonregulatory factor 4 gene expression?, the eventtrigger is ?expression?
which is tagged by theevent type ?Gene_expression?
and the event ar-gument is ?interferon regulatory factor 4?.
Not-ably, bio-events may have arbitrary argumentsand even contain other events as arguments, re-sulting in nested events.The complex event structure makes this taskparticularly attractive, drawing initial interestfrom many researchers.
Bj?rne et als (2009)system (referred to hereinafter as Uturku system)was the best pipeline system in BioNLP?09,achieving an F-score of 51.95% on the test datasets.
After that, Miwa et al(2010a, 2010b) com-pared different parsers and dependency represen-tations on bio-event extraction task and obtainedan F-score of 57.79% on development data setsand 56.00% on test data sets with parser ensem-ble.
In contrast to the pipeline system which di-vided the event process into three stages, triggersdetection, arguments detection and postprocessing, Poon and Vanderwende?s (2010) andRiedel et als (2009) joint models combinedtrigger recognition and argument detection byusing a Markov logic network learning approach.After the BioNLP?09, the Genia event task (Bi-oNLP?11 task 1, hereafter) in the BioNLP?11Shared Task (Kim et al 2011) introduced asame event extraction task on a new dataset.There were still some pipeline systems applied toGenia task 1, e.g.
Bj?rne et als (2011) systemand Quirk et als (2011) system.
To the best of109our knowledge, Miwa et als (2012) pipelinesystem incorporating domain adaptation and co-reference resolution, is the best biomedical eventextraction system on BioNLP'11 task 1 so far.The Genia event extraction task (BioNLP'13task 1, hereafter) (Kim et al 2013) in Bi-oNLP'13 Shared Task is consistent with the Ge-nia task in BioNLP'11 Shared task.
Nevertheless,BioNLP'13 task 1 focuses on event extractionfrom full texts while BioNLP?11 task 1 containsabstracts and full texts.
Furthermore, the corefe-rence resolution task separated from event ex-traction task in BioNLP'11 is integrated to Bi-oNLP'13 task 1, and there are more event typesin the BioNLP'13 task 1 than those in BioNLP'11task 1.
The BioNLP?13 shared task containsthree parts, the training corpus, the developmentcorpus and the test corpus.
The training corpusconsists of 10 full texts containing 2792 events.The development corpus for optimizing the pa-rameters involves 10 full texts containing 3184events, while the test corpus is composed of 14full texts including 3301 events.
To avoid theresearchers optimizing parameters on the testcorpus, it is not published, and we have the per-mission to combine the training corpus and thedevelopment corpus as training set.
However, weextend BioNLP'13 training set by adding the ab-stracts of training set and development set in Bi-oNLP'11 task 1 rather than merging the devel-opment set of BioNLP'13 into the training set.Our system generally follows the Uturku sys-tem reported by Bj?rne et al(2009), and uses asimple but efficient way to reduce the cascadingerrors.
The Uturku system was a pipeline of trig-ger detection, argument detection and post-processing.
Each of its components was simpleto implement by reducing event extraction taskinto independent classification of triggers andarguments.
Moreover, the Uturku system devel-oped rich features and made extensive use ofsyntactic dependency parse graphs, and the rulesin the post-processing step were efficient andsimple.
However, the stages of the pipeline in-troduced cascading errors, meaning that the trig-ger missed in the trigger detection would neverbe recalled in the following stages.
By changingthe pipeline and adding argument information intrigger detection, we construct a model for ex-tracting complex events using rich features andachieve better performance than the baseline sys-tem implemented according to Bj?rne et als(2009) paper.2 Our Event Extraction SystemFig.1 shows the overall architecture of the pro-posed system.
Since 97% of all annotated eventsare fully contained within a single sentence, oursystem deals with one sentence at a time, whichdoes not incur a large performance penalty butgreatly reduces the size and complexity of themachine learning problems (Bj?rne et al 2009).The system?s components are different fromthose of the Uturku system by adding a secondtrigger detection component and a second edgedetection component (argument detection).
Trig-ger detection component is used to recognize thetrigger words that signify the event, and edgedetection component is used to identify the ar-guments that undergo the change.
Semantic post-processing component generates events consis-tent with the restrictions on event argument typesand combinations defined in the shared task.Input dataSentence splittingToken zationParsingFirst Triggerdetection(multi-class SVM)First Edge detection(multi-class SVM)Second Triggerdetection(multi-class SVM)Second Edgedetection(multi-class SVM)Semanticpost-processing(Rule based)Output dataFigure 1.
The flow chart of our system.In the following sections, we present the im-plementation for these stages in our biomedicalevent extraction system in detail and evaluate oursystem on the BioNLP?13 data sets.2.1 Trigger Detectionnuclear extracts showed decreased or absent p65 protein levelsNeg_reg ProThemeFigure 2.
An example of the trigger consisting of twohead tokensTrigger detection assigns each token an eventclass or a negative class (if the token is not atrigger).
The head token is chosen when the realtrigger consists of several tokens, which does not110Type FeaturePrimary features The tokenPart-Of-Speech of the tokenBase formThe rest part of the token, getting rid of the stem wordToken feature Token has a capital letterToken has a first letter of the sentenceToken has a numberToken has a symbol like ?-?,?/?,?\?N-grams (n = 2, 3) of charactersGovern and Dependent feature Dependency typePart-Of-Speech (POS) of the other tokenCombine the POS and the dependency typeThe word form of the other tokenFrequency features Number of named entities in the sentenceBag-of-word counts of token texts in the sentenceShortest path Token features of the token in the pathN-grams of dependencies (n =2, 3, 4)N-grams of words (base form + POS) (n =2, 3, 4)N-grams of consecutive words (base form + POS) representingGovernor-dependent relationships (n =1, 2, 3)Table 1: Features for the first trigger detectionType FeaturePath feature The token in the pathThe POS of the token in the pathThe dependency type of edges in the path(all these features are combined with direction, length and the entity type)Table 2: Added feature for the second trigger detectionincur performance penalty with the approximatespan matching/approximate recursive matchingmode (Kim et al 2009).
Two head tokens maybe chosen from one trigger when the trigger con-sists of two appositives.
For example, for thesnippets ?decreased or absent p65 protein le-vels?, both ?decreased?
and ?absent?
are thehead token of the trigger ?decreased or absent?,shown in Fig 2.
Rich features are extracted forthe first trigger detection, shown in Table 1.To remove the erroneous events and correctthe event type assigned in the first trigger detec-tion, a second trigger detection is added in oursystem.
Thus the second trigger detection is dif-ferent from the first one.
Uturku system showsthat the trigger information improves the edgedetection because of the constraints on the typeof arguments.
Naturally, the edge information ishelpful for trigger detection with the same reason.As a result, this method can improve the preci-sion of trigger performance.In order to leverage the argument information,we explore a lot of features of the edges whichare the arguments detected in the first edge de-tection.
The edge information concerns the fea-tures of the edges attached to the token.
In thesecond trigger detection, we add all the path fea-tures between the candidate trigger and argu-ments attached to the candidate trigger detectedin the first edge detection.
These features containthe entity information of the argument, the de-pendency path between the trigger and the argu-ment and so on.
Specially, the added featurescannot contain any trigger type information ob-tained in the first trigger detection, or the addedfeatures cannot do any help.
The reason is thatSVM classifier will classify samples only relyingon the label feature if it is in the feature set.
Theadded features are shown in Table 2.111Type FeaturesN-grams N-grams of consecutive tokens(n=2,3,4) in the pathN-grams of vertex walksTerminal node feature Token feature of the terminal nodesThe entity type of the terminal nodesRe-normalized confidences of all event classFrequency feature The length of the pathThe number of entities in the sentenceEdges feature in the path Dependency type of the edges in the pathThe POS of the tokens in the pathThe tokens in the pathTable 3: Features for edge detection2.2 Edge DetectionSimilar to the trigger detector, the edge detectoris based on a multi-class SVM classifier.
Anedge is from a trigger to a trigger or from a trig-ger to a protein.
The edge detector classifies eachcandidate edge as a theme, a cause, or a negativedenoting the absence of an edge between the twonodes in the given direction.
The features in edgedetection are shown in Table 3.
As the triggerinformation is helpful in edge detection, the ter-minal node feature contains it.
Additionally?thefirst edge detection is completely the same as thesecond one, that is, they share the same featuresand machine learning strategy.2.3 Semantic Post-processingAfter the trigger detection and edge detection,the biomedical event cannot be produced directly.Some simple events may be attached with sever-al proteins, and complex events may form circles.We develop a custom rule-based method to gen-erate events that are consistent with the restric-tions on event argument types and combinationsdefined in the shared task.
For details, Bj?rne etal.
?s (2009) paper can be referred to.3 Tools and Component CombinationWe use the support vector machine (SVM) mul-ti-class classifier (Crammer and Singer (2002),Tsochantaridis et al(2004)) in the trigger detec-tion and edge detection.
Besides, the dependencyparser used in our system is McClosky-Charniakdomain-adapted parser (McClosky and  Charniak(2008)) and the dependency parse was providedin the share task1 .
To optimize the precision-recall trade-off, we introduce ?
that decreases theclassifier confidence score given to the negative1 http://2013.bionlp-st.org/supporting-resourcestrigger class as formula (1) as the Uturku systemdoes (2009).score = score-(1-?
)*abs(score)       (1)where abs(score) means the absolute value ofscore and ??
[0,1].4 Evaluations and Discussion4.1 EvaluationsFirstly, our system is evaluated on the develop-ment set.
Table 4 compares the performance be-tween our system and the baseline.
The baselineis implemented based on Bj?rne et als (2009)paper.
Compared to baseline, the precision of oursystem is 6.08 percentage points higher while therecall increases 0.91 percentage points.
FromTable 4 we can see that our system is 2.85 F-score higher than the baseline system.Recall  Precision F-scoreBaseline  43.15 54.37 48.12Ours 44.06 60.45 50.97Table 4: Performance comparison on the developmentset using approximate span and recursive matchingSecondly, the performance of our system isevaluated on the test data set with online evalua-tion2.
Table 5 shows the results for the baselineand the proposed system with argument informa-tion to evaluate the importance of argument in-formation.
Integrating argument information, oursystem archives 1.78% F-score improvement.Compared to the baseline, the performance forcomplex events is very encouraging with about7.5 percentage points improvement in the Phos-phorylation events, 1.77 percentage points im-provement in the regulation events, 2.91 percen-2 http://bionlp-st.dbcls.jp/GE/2013/eval-test/112Event type # Our system BaselineR/P/F-score R/P/F-scoreGene_expression 619 77.54/82.76/80.07 79.48/78.10/78.78Transcription 101 49.50/65.79/56.50 53.47/62.79/57.75Protein_catabolism 14 78.57/55.00/64.71 78.57/45.83/57.89Localization 99 35.35/89.74/50.72 38.38/84.44/52.78=[SIMPLE ALL]= 833 69.15/80.56/74.42 71.43/75.80/73.55Binding 333 40.84/44.16/42.43 42.64/44.65/43.63Protein_modification 1 0.00/0.00/0.00 0.00/0.00/0.00Phosphorylation 160 75.00/77.42/76.19 69.38/68.10/68.73Ubiquitination 30 0.00/0.00/0.00 0.00/0.00/0.00Acetylation 0 0.00/0.00/0.00 0.00/0.00/0.00Deacetylation 0 0.00/0.00/0.00 0.00/0.00/0.00=[PROT-MOD ALL]= 191 62.83/77.42/69.36 58.12/68.10/62.71Regulation 288 15.28/42.72/22.51 14.58/35.90/20.74Positive_regulation 1130 29.20/44.47/35.26 26.11/42.51/32.35Negative_regulation 526 26.81/41.47/32.56 25.10/35.11/29.27=[REGULATION ALL]= 1944 26.49/43.46/32.92 24.13/39.51/29.96==[EVENT TOTAL]== 3301 40.81/57.00/47.56 39.90/53.69/45.78Table 5: Approximate span matching/approximate recursive matching on test data set.Th(E1)Triggering of the human interleukin-6 gene by interferon-gamma and tumor necrosis factor-alphaBinding Pro Pro ProTh(E2) Th(E1)Th(E2)(a) Th(E1)Triggering of the human interleukin-6 gene by interferon-gamma and tumor necrosis factor-alphaPos-Reg Pro Pro ProCause(E2) Cause(E1)Th(E2)(b)Figure 3: (a) A result of a fragment using the first trigger detection.
(b) A result of a fragment using the secondtrigger detection.tage points improvement in the positive regula-tion events and 3.29 percentage points increasein the negative regulation events, but not muchloss in other events.
As a consequence, the totalF-score of our system is 47.56%, 1.78 percentagepoints higher than the baseline system and ob-tains the 5th place in BioNLP'13 task 1.4.2 DiscussionOur system achieves better performance than thebaseline thanks to the second trigger detection.The second trigger detection improves the per-formance of event extraction in two ways.
Firstly,the triggers that cannot form events are directlydeleted, and therefore the corresponding errone-ous events are deleted.
Secondly, since the erro-neous triggers are deleted or the triggers recog-nized in the first trigger detection are given theright types in the second trigger detection, thecorresponding arguments are reconstructed toform right events.
Fig.3 shows an example.
Inthe first trigger detection, the trigger ?triggering?is recognized as the illegal type of ?binding?
sothat ?interferon-gamma?
and ?tumor necrosisfactor-alpha?
are illegally detected as theme ar-guments of ?triggering?, resulting in erroneousevents.
However, in the second trigger detection,113?triggering?
is correctly revised as the type ofpositive regulation, so the arguments are recon-structed, which makes the positive regulationevents (E1 and E2) right.
As a result, the preci-sion of event detection increases as well as therecall.The proposed method is an efficient way toreduce cascading errors in pipeline system.Moreover, Riedel and McCallum (2011) pro-posed a dual decomposition-based model, anoth-er efficient method to get around cascading er-rors.
Following Riedel et als (2011) paper, weimplement a dual decomposition-based systemusing the same features in our system.
Table 6shows the performance comparison on the devel-opment set of BioNLP?09 between our systemand dual decomposition-based system.
The com-parison indicates that the proposed method iscomparable to the stat-of-the-art systems.Recall  Precision F-scoreDual Decom-position50.08 63.66 56.06Ours 53.88 59.67 56.63Table 6: Performance comparison on the developmentset of BioNLP?09 using approximate span and recur-sive matching based on different methods5 ConclusionsWe proposed a simple but effective method toimprove event extraction by boosting the triggerdetection.
The added edge information in thesecond trigger detection improves the perfor-mance of trigger detection.
Features from thedependency parse graphs are the main featureswe use for event extraction.The future work includes: the first trigger de-tection should classify a token into three classes:simple event type, complex event type and noneevent type; discovering some more helpful edgefeatures in the second trigger detection; solvingcoreference problem with coreference resolutionapproach.
Besides, the dual decomposition-basedmethod will be improved and further comparedwith the pipeline system.AcknowledgmentsThis work is supported by grant from the Nation-al Natural Science Foundation of China (no.61173101, 61173100).ReferencesAntti Airola, Sampo Pyysalo, Jari Bj?rne, Tapio Pa-hikkala, Filip Ginter, and Tapio Salakoski.
2008.All-paths graph kernel for protein-protein interac-tion extraction with evaluation of cross-corpuslearning.
BMC Bioinformatics, 9(Suppl 11):S2.Chris Quirk, Pallavi Choudhury, Michael Gamon, andLucy Vanderwend.
2011.
MSR-NLP Entry in Bi-oNLP Shared Task 2011.
In Proceedings of the Bi-oNLP 2011 Workshop Companion Volume forShared Task, Portland, Oregon, June.
Associationfor Computational Linguistics.David McClosky and Eugene Charniak.
2008.
Self-training for biomedical parsing.
In Proceedings ofACL-08: HLT, Short Papers, pages 101?104.
Asso-ciation for Computational Linguistics.Hoifung Poon, Lucy Vanderwende.
2010.
Joint Infe-rence for Knowledge Extraction from BiomedicalLiterature.
In Proceedings of the North AmericanChapter of the Association for Computational Lin-guistics-Human Language Technologies 2010 con-ference.Hong-Woo Chun, Yoshimasa Tsuruoka, Jin-DongKim, Rie Shiba, Naoki Nagata, Teruyoshi Hishiki,and Jun?ichi Tsujii.
2006.
Extraction of gene-disease relations from medline using domain dic-tionaries and machine learning.
In Proceedings ofthe Pacific Symposium on Biocomputing (PSB?06),pages 4?15.Ioannis Tsochantaridis, Thomas Hofmann, ThorstenJoachims, and Yasemin Altun.
2004.
Support vec-tor machine learning for interdependent and struc-tured output spaces.
In Proceedings of the Twenty-first International Conference on Machine Learn-ing (ICML?04), pages 104?111.
ACM.Jari Bj?rne, Juho Heimonen, Filip Ginter, Antti Airola,Tapio Pahikkala, and Tapio Salakoski.
2009.
Ex-tracting complex biological events with rich graph-based feature sets.
In Proceedings of the BioNLP2009 Workshop Companion Volume for SharedTask, pages 10?18, Boulder, Colorado, June.
Asso-ciation for Computational Linguistics.Jari Bj?rne and Tapio Salakoski.
2011.
Generalizingbiomedical event extraction.
In Proceedings of theBioNLP 2011 Workshop Companion Volume forShared Task, Portland, Oregon, June.
Associationfor Computational Linguistics.Jin-Dong Kim, Tomoko Ohta, Sampo Pyysalo, Yo-shinobu Kano, and Junichi Tsujii.
2009.
Overviewof BioNLP?09 Shared Task on event extraction.
InProceedings of the NAACL-HLT 2009 Workshopon Natural Language Processing in Biomedicine(BioNLP?09).
ACL.Jin-Dong Kim, Sampo Pyysalo, Tomoko Ohta, RobertBossy, and Jun?ichi Tsujii.
2011.
Overview of Bi-114oNLP Shared Task 2011.
In Proceedings of the Bi-oNLP 2011 Workshop Companion Volume forShared Task, Portland, Oregon, June.
Associationfor Computational Linguistics.Jin-Dong Kim, Yue Wang and Yamamoto Yasunori.2013.
The Genia Event Extraction Shared Task,2013 Edition - Overview.
In Proceedings of the Bi-oNLP Shared Task 2013 Workshop, Sofia, Bulgaria,Aug.
Association for Computational Linguistics.Koby Crammer and Yoram Singer.
2002.
On the al-gorithmic implementation of multiclass kernel-based vector machines.
Journal of Machine Learn-ing Research, 2:265?292.Makoto Miwa, Rune S?tre, Yusuke Miyao, and-Jun?ichi Tsujii.
2009.
A rich feature vector forprotein?protein interaction extraction from mul-tiple corpora.
In EMNLP?09: Proceedings of the2009 Conference on Empirical Methods in Natu-ral Language Processing, pages 121?130, Morris-town, NJ, USA.
Association for ComputationalLinguistics.Makoto Miwa, Sampo Pyysalo, Tadayoshi Hara, andJun?ichi Tsujii.
2010a .
A comparative study ofsyntactic parsers for event extraction.
In Proceed-ings of BioNLP?10  p. 37?45.Makoto Miwa, Sampo Pyysalo, Tadayoshi Hara, andJun?ichi Tsujii.
2010b.
Evaluating dependency re-presentation for event extraction.
In Proceedings ofthe 23rd International Conference on Computa-tional Linguistics, COLING ?10, Association forComputational Linguistics, 2010; p. 779?787.Makoto Miwa, Paul Thompson, and Sophia Anania-dou.
2012.
Boosting automatic event extractionfrom the literature using domain adaptation and co-reference resolution.
Bioinformatics.Sebastian Riedel, Hong-Woo Chun, Toshihisa Taka-gi,and Jun?ichi Tsujii.
2009.
A Markov logic ap-proach to bio-molecular event extraction.
In Bi-oNLP?09: Proceedings of the Workshop on BioNLP,pages 41-49, Morristown, NJ, USA.
Associationfor Computational Linguistics.Sebastian Riedel and Andrew McCallum.
2011.
Ro-bust Biomedical Event Extraction with Dual De-composition and Minimal Domain Adaptation.
InProceedings of the BioNLP 2011 Workshop Com-panion Volume for Shared Task, Portland, Oregon,June.
Association for Computational Linguistics.115
