An Explanation Facility for a Grammar Writing SystemLoong Cheong TONGInstitute of Systems Science,National University of Singapore,Kent Ridge,SINGAPORE 0511.E-mail: ISSTLC@NUSVM.BITNETAbstractExplanation has become a standard feature inmany expert systems today.
Adapting fromthis work, a study was made to determine thetypes of explanation required in a grammarwriting system and to investigate design andiimplementation ssues.
The first version of thisexplanation facility is based on a derivationalhistory of the inferencing process, and althoughno supplementary knowledge is used, thisexplanation facility is able to furnish answers tothe traditional why, how and what type ofqueries, and even the what-if (simulation)query.
The explanation is also enhancedthrough the use of special files containingcanned-text for describing rammar rules andvariables.~1.
Introduct ionExplanation for expert systems has beenstudied very extensively, and has become a~tandard feature in these systems.
Itsobjectives are to enable users to understandhow conclusions are reached, to be convincedt:hat hese conclusions are reasonable, and todebug the knowledge base and possiblyproblem solving behavior as well.
Viewed in amore general context, research into explanationis an essential component of the study into thesymbiosis between man and machine,supported by the empirical fact that mostknowledge-based systems are intended to assisthuman endeavor and are almost never intendedto be autonomous agents.Grammar writing systems (GWS) used inNatural Language Processing (NLP) work havebeen compared to expert systems (Boitet andGerber, 1984) by equating the knowledge baseto the grammar, and the problem-solvingactivity to the transformation performed on thetext representation structure.
Existing GWSsdo not provide any explanation because theirusage is usually confined to expert users whocan understand low-level programs or ruletraces, and moreover, the inferencing processfor NLP applications i  normally carried out inbatch mode.
If users do interact with thesystem, it is usually for the purpose ofresolving ambiguities (for example), which isobviously quite different from explanation.The presence of explanation is one of the mainreason why expert systems have found asubstantial degree of success with users, soperhaps NLP systems could also benefit fromsuch a service, especially in gaining end-useracceptance.In this investigation, we are not studyingthe nature of explanation per se, but rather,starting from an existing system, determinewhat explanations can be provided and how.The system under consideration is the GWSassociated with a machine translationenvironment known as JEMAH (Tong, 1988;1989).Previous studies on explanation (see, forexample ,  Swartout ,  1984, andChandrasekharan, 1989) have shown thatproviding effective explanation frequentlyrequires upplementary knowledge in additionto the existing knowledge base.
For example,the metamorphosis f rom MYCIN toNEOMYCIN (Clancey, 1983) requires theaddition of meta-rules to explicitly represent thediagnostic strategy and the relationship betweenrules.
The research described in this paper willascertain the level and degree of explanationwhich can be provided without resorting to theuse of supplementary knowledge, more or lessalong the same lines as Wick and Slagle(1989), who studied the type of explanationfacility that can be provided based on currentexpert system methodologies wheresupplementary knowledge is not available.Besides the knowledge content required forsuch explanation, the other side issues related1 359to explanation like presentation, user modellingbased on goals and background knowledge,and dialogue structure are not included in thispaper.
This first prototype of an explanationfacility for the JEMAH system uses simplemenus and pre-defined ialogs.?
2 .
Explanation in Expert SystemsThere are 3 major types of explanation whichhave been studied for expert systems: (a)explaining the (dynamic) inferencing on aspecific input data set, (b) explaining the (static)knowledge base itself, and (c) explaining thecontrol strategy.
The fn'st type of explanation,based on the original work in MYCIN (Scott etal., 1977), has been adopted by almost allcommercial expert system shells.
Such trace-based explanation will answer queries on why(is a question being asked?
), how (is thisconclusion reached?)
and what (is the currentvariable/rule?
).The second type of explanation isexemplified by the Xplain system (Swartout,1983), whose implementation-level knowledgebase is compiled from an explicitly-representeddeep knowledge model.
Xplain can explain itsknowledge base by referring to this deepknowledge, as well as knowledge about thecompiling process itself.
For grammar writingsystems, such a scheme corresponds to thestatic and dynamic grammars in Vauquois andChappuy (1985) and the meta and (low-levelcompiled) object grammars in Bogureav et al(1988).
Most commercial expert system shellsonly explain its implementation levelknowledge base through the use of canned-texts associated with rules and variables.NEOMYCIN (Clancey, 1983) generalizesthe diagnostic problem by explicitlyrepresenting the diagnostic tasks, whosestrategy can then be explained for any one dataset, and this implements the third type ofexplanation mentioned above.
Anotherexample is the generalized task-based approachadopted by Chandrasekaran (1989).This paper will concentrate mainly on trace-based explanation, since the other twoobviously require supplementary knowledge.The execution trace of the processing of a NLtext contains a wealth of information, but thiscrude data must first be transformed into a morewell-ordered structure and then rearranged intoa form suitable for explanation purpose.Hence, explanation is viewed here as aninformation refining process (analogizing on anoil refinery).3.
Explanation in a Grammar  Writ ingSystemAny explanation system must first address thequestion of who its users are, and veryfrequently, a user classification based on userexpertise, which covers the spectrum fromnovice to expert, is used for this purpose.Knowledge of a user's class will influence theamount of explanation to be provide, d, as wellas its form and content.
In the JEMAHgrammar writing system, we have identified 3groups of users: the translator, the linguist andthe grammar writer (corresponding to the end-user, the expert and the knowledge ngineer inan expert system).
The grammar writer mayuse the explanation facility to debug thegrammar elated to the rules and the controlstrategy, the linguist to study the variouslinguistic phenomena which are associated withthe translation process, and the translator tobetter understand the translation output, andhence, better able to edit it.For the grammar writer and the linguist, thedetailed trace of execution provided by theJEMAH system contains superfluousunstructured information.
One way ofcontrolling the level of detail and the form ofinformation is through the use of abstractionhierarchies (Clancey, 1983), and one method ofimplementation is to attach numeric markers toeach rule to denote its level of importance andcomplexity.
A similar scheme has beenadopted by the JEMAH explanation facility.The following examples will illustrate thetypes of explanations encountered in grammarwriting systems.
(a) "Why is the rule XYZ applied?
""Why is the noun phrase ... attached to theverb?
"This is explaining the inferencing process andanswers can be found directly in the executiontrace.
(b) "What other ules affect noun phrases?
""What is the function of the rule XYZ?
"This is explaining the grammar itself andanswers can be generated using canned-text andabstraction hierarchies.360 2(c) "Why is the rule PQR not applied?
"This is explaining the control strategy.
(d) "What if the rule ABC is applied first?
"This is the simulation type of explanation.4.
Design and Implementat ionIn most commercial expert system shells,explanations are provided during theinferencing process.
For grammar writingsystems in machine translation, this isperfomled at the end, after storing all relevantderivational (or inferencing) history.Therefore, the most important design decisionis to determine how to represent thisderivational history, and what to store in it.
Inthe JEMAH system, the derivational historyconsists of a sequence of snapshots of the treestructure taken after each transformation.Backtracking through this derivational historywill provide all necessary information on howthe translation was carried out.
JEMAH alsoprovides the what-if explanation (simulation)through its restart capability; i.e.
JEMAH canbacktrack to a certain point in the translationprocess, reset specific values, and then restartthe translation process from that point?Explaining the control strategy is obviouslymuch more difficult, depending on whether thecontrol information is explicit or implicit.
InROBRA (Boitet et al, 1978), where thisstrategy is explicit (user-defined), anyexplanation will involve explaining the flow ofcontrol within its transformational subsystem.If implicit (as in JEMAH), then explanation hasto be hard-coded into inference ngine, as donein SOPHIE (Brown et al, 1982).The derivational history of a translationcarried out by the JEMAH system isrepresented as a sequence of events.
Eachevent is a single transformation on the treestructure resulting fi'om the successfulapplication of a grammar rule.
The informationcontent of each event consists of:TREERULE-NAMEPIVOT-NODEDELETED-NODESNEW-NODESACTIVE-NODESresultant tree structure,applied rule,pivot node,list of deleted nodes,list of created nodes,list of modified nodes andtheir annotations.The full derivational history of a translationfrom source text to target text is stored in 3sequences of events (see Fig.
1),corresponding to the analysis (*AS-TRACE*),transfer (*TS-TRACE*) and generation phase(*GS-TRACE*), as well as the final event(*GM-TRACE*).
Each sequence has a startevent (Eo) and a final event (En).
A start eventdiffers from the other events in that it has nullvalues for RULE-NAMF, PIVOT-NODE, andDELETED-NODES, and all nodes of TREE areincluded in NEW-NODES and in ACTIVE-NODES; this represents the initial conditionsfor each event in a phase.The computations involved in the 3dictionary processes of morphological nalysis,lexical analysis and morphological generationare not recorded in the derivational history.Each of these phases is considered as a singletransformation; for example, lexical analysiscauses the transformation from En of *AS-TRACE* to Eo of *TS-TRACE*.
Since thereis no dictionary process between structuraltransfer and structural generation, the event Enof *TS-TRACE* is the same as the event Eo of*GS-TRACE*.
*AS-TRACE* *TS-TRACE* *GS-TRACE* *GM-TRACE*l I_ 1~ph~:~ica l  \] I :a;~is ~ \[ mgerp?oltginCal lFigure 1.
Events in the Derivafional History of the Translation Process3 361r~ EXPLANATIONlJ r l iHC.
DiSPlay Variables---3 C .
EXPLAINFigure' 2.
Explanation Facility User InterfaceFig.
2 shows the simplified user interfacedialog that controls the explanation facility ofJEMAH.
The 4 buttons on the top half of thedialog represent the 4 query elements: Rule,Variable, Source Text, Target Text.
Selecting(clicking on) any of these 4 buttons willautomatically pop-up a list of all rules,variables, source words or target wordsrespectively.
User-selected items will then beused to determine the content and form of theexplanation provided when the user click on theEXPLAIN button.
The user can also reducethe amount of details by selecting only theinterested variables for display by using the"Display Variables" button.
Once items in anyof these 4 query elements have been selected bythe user, the system will extract he relevantevents from the derivational history and thengenerate an output ext based on a pre-definedtemplate structure.All explanation output texts will involvedescribing rules and variables.
Instead of usinga single word (rule name or variable name) todescribe ach of them, special supplementaryfiles consisting of canned-text have beencreated to provide a more meaningfulexplanation.
For example, the grammar in eachtranslation phase is associated with asupplementary file describing all rules in thatgrammar, and each record has the followingfields: .rule-name, .author, date (of lastmodif icat ion) ,  ru le - type ,  keywords ,descriotion.
The rule-type field is to identify arule's ievel of importance and its relevance to aparticular group of users, while the .~.ywordsfield is used for indexed retrieval as well asgrammar partitioning.
The descriptio, field isdivided into 2 sub-fields, an abstract and a maintext, to provide 2 levels of explanation details.A similar canned-text approach is used forvariables, each of which is described with thefollowing fields: variable.ham.e, kevwords,(morphological, syntactic, semantic, etc.
),(2 levels), rule-name (rules thateither test or assign values to that variable).A sample explanation of the translation ofthe word "activate" in the sentence "Thisinformation is the input to activate the inventorycontrol application."
(translated into Malay as"Maklumat ini adalah input untukmenggerakkan {menghidupkan giat} penerapankawalan inventori.")
is shown below.
"menggerakkan" is translated from "activate",analyzed morphologically aslexical unit ACTIVATEwith information (CAT V SUBV VB VL1N TENSE PRES NUM PLU VEND 2).In structural nalysis, it is processed as follows:Rule ELEVATE-VCL constructs a VCL from a verbal.with changes: (SF GOV)Ru~e TO-VCL constructs an infinitive clause from TO + VCL.with changes: (K PARTCL SVL I SLOCK IMP)Rule PCL-NP absorbs a following NP into a PARTCL.with changes: (AVL1N SEMI ABST)Rule VCL-PCLCIRC absorbs the right PARTCL as circumstantial nto the clause.with changes: (SF CIRC)In lexical transfer, it is translated totarget GERAKwith alternative translations (MENGHIDUPKAN GIAT).In structural transfer, it is processed as follows:Rule ASP-TENSE->ASPEK maps the English TENSE, VOICE and ASPect to Malay ASPEK.with changes: (ASPEK NORMAL)In structural generation, it is processed as follows:Rule CL-ARGI=ACT positions ARG1 to the right of the governor fan active clause.with changes: (RSV CAUSE)362 45.
Supplementary KnowledgeThe JEMAtt system explanation facility is verytightly coupled to the execution trace, andhence, to the grammar knowledge base.Advanced work with explanation systems havestrongly indicated the need for supplementaryknowledge to improve the explanationprovided, and lately, some experts have evenargued for the complete decoupling ofknowledge used by the explanation systemfrom the knowledge used by the expert system.Future work on the explanation facility ofJEMAH will include supplementary knowledgeto improve the quality and range ofexplanations provided.In describing NEOMYCIN, Clancey andLetsinger (1984, pg 380) stated that:"To explain diagnosis, it is useful to havepsychological model of problem solving.In particular, we need to incorporate intoour model the medical knowledge andstrategies an expert uses for initial problemformulation.
"In the grammar writing system context,there is a similar need for a linguisticknowledge model, as well as aparsing/generation strategy model.
Normally,the linguistic knowledge refers to knowledgeabout the specific grammar underconsideration, and does not include knowledgeabout linguistics in general, although thispossibility should not be ruled out in futurework.
The pre-compilation process in theJEMAH system (see Tong, 1989) extractsinformation about rules' relationships, and thiscan be considered as a kind of meta-knowledgeabout the grammar.
Furthermore, since thismeta-knowledge is used in JEMAtt to optimizethe control strategy, it seems fair to assume thatit can also contribute towards explaining theparsing/generation strategy.
This singleconcept is obviously insufficient to providecomprehensive explanation to the user, butdoes serve as an example of the kind ofsupplementary knowledge required.A second feature which is already availablewithin the JEMAH system is that of grammarpartitioning.
Rules are grouped according tocertain linguistic properties, and this can beused as a source of supplementary knowledgein providing explanations.
A more elaboratemethod would be to construct a classificationscheme in the form of a hierarchical treestructure, like the refinement structure in Xplain(see pg.
392 in Swartout, 1984).The variables and their values used in a.grammar obviously play a very important rolean explanation; in NEOMYCIN, for example,relationships between variables and newvariables are created solely for the purpose ofexplanation.
In JEMAH, this type of meta-knowledge about variables may include, forexample, information on mutual exclusion(between morphosyntactic class and wordcategory), equivalent set of values (valencies 1and 2) and hierarchical relationship(subcategory SUBA of category A).6.
ConclusionThis paper has described the explanation facilityfor a grammar writing system in a machinetranslation environment, including its designand implementation which is based on previouswork on explanation for expert systems.
Thecurrent system makes use of the derivationalhistory of the translation process, and futurework will concentrate on enhancing it withsupplementary knowledge.ReferencesBoitet, C.; Guillaume, P.; and Quezel-Ambrunaz, M. 1978.
Manipulationd'm'borescences et par,'dlelisme: le systemeROBRA.
Proc.
COLING-78, Bergen.Boitet, C. and R. Gerber.
1984.
Expertsystems and other new techniques in MT.Proc.
COLING-84, Stanford University,Calif., 468-471.Boguraev B., J. Carroll, T. Briscoe and C.Grover.
1988.
Software support forpractical grammar development.
Proc.COLING-88, Budapest: 54-58.Brown, J.S., R.R.
Burton and J. de Kleer.1982.
Pedagogical, natural language andknowledge ngineering techniques in SophieI, II and III.
in Intelligent TutoringSystems, D. Sleeman and J.S.
Brown,eds., Academic Press, London, UK: 227-282.Chandrasekaran, B., M.C.
Tanner and J.R.Josephson.
1989.
Explaining controlstrategies in problem solving.
1EEE Expert,4(1): 9-24?5 363Clancey, W.RJ.
1983.
The epistemology of arule-based expert system - a framework forexplanation.
Artificial Intelligence, May:215-251.Clancey, W.J.
and R. Letsinger.
1984.NEOMYCIN: reconfiguring a rule-basedexpert system for application to teaching.
InW.J.
Clancey and E.H. Shortliffe (eds.
),Readings in Medical ArtificialIntelligence.
Addison-Wesley, 361-381.Scott, A.C., W.J.
Clancey, R. Davis andE.H.Shortliffe.
1977.
Explanationcapabilities of knowledge-based productionsystems.
American Journal ofComputational Linguistics Microfiche 62.Swartout, W.R. 1983.
Xplain: a system forcreating and explaining expert consultingprograms.
Artificial Intelligence, Sept: 285-325.Swartout, W.R. 1984.
Explaining andjustifying expert consulting programs.
InW.J.
Clancey and E.H. Shortliffe (eds.
),Readings in Medical ArtificialIntelligence.
Addison-Wesley, 382-399.Tong, L.C.
1989.
A Data-Driven ControlStrategy for Grammar Writing Systems.Machine Translation, 4(4) Dec 1989: 177-193.Tong, L.C.
1988.
The JEMAH SystemReference Manual.
CAT Project Tech.Report, Universiti Sains Malaysia.Vauquois, B. and Chappuy, S. 1985.
Staticgrammars.
A formalism for the descriptionof linguistics models.
International Conf.on Theoretical nd Methodological Issues inMachine Translation of Natural Language,Colgate University, 14-16.Wick, M.R.
and J.R. Slagle.
1989.
Anexplanation facility for today's expertsystems.
IEEE Expert, 4(1): 26-36.364 6
