R. Dale et al (Eds.
): IJCNLP 2005, LNAI 3651, pp.
438 ?
449, 2005.?
Springer-Verlag Berlin Heidelberg 2005A Rule Based Syllabification Algorithm for SinhalaRuvan Weerasinghe, Asanka Wasala, and Kumudu GamageLanguage Technology Research Laboratory, University of Colombo School of Computing,35, Reid Avenue, Colombo 7, Sri Lankaarw@ucsc.cmb.ac.lk, {awasala, kgamage}@webmail.cmb.ac.lkAbstract.
This paper presents a study of Sinhala syllable structure and an algo-rithm for identifying syllables in Sinhala words.
After a thorough study of theSyllable structure and linguistic rules for syllabification of Sinhala words and asurvey of the relevant literature, a set of rules was identified and implementedas a simple, easy-to-implement algorithm.
The algorithm was tested using30,000 distinct words obtained from a corpus and compared with the samewords manually syllabified.
The algorithm performs with 99.95 % accuracy.1   IntroductionSyllabification algorithms are mainly used in text-to-speech (TTS) systems in produc-ing natural sounding speech, and in speech recognizers in detecting out-of-vocabularywords.
The key objectives of this study are to identify the syllable structures in modernSinhala language and to define an algorithm to syllabify a given Sinhala word to beused in our TTS system.
Syllabification algorithms have been proposed for differentlanguages including English, German, Spanish and Hindi, among others.
Although afew researchers have documented attempts at syllabifying modern Sinhala words in theLinguistics literature, this is the first known documented algorithm for Sinhala syllabi-fication and certainly the first evaluation of any syllabification scheme for Sinhala.Languages differ considerably in the syllable structures that they permit.
For mostlanguages, syllabification can be achieved by writing a set of declarative grammaticalrules which explain the location of syllable boundaries of words step-by-step.
It hasbeen identified that most of these rules adhere to well known theories such as theMaximum Onset Principle and the Sonority Profile.
The association of consonantswith the syllable nucleus is derived by the Maximum Onset Principle (MOP).Maximum Onset Principal: First make the onset as long as it legitimately can be; thenform a legitimate coda [2].Sonority Profile: The sonority of a syllable increases from the beginning of the sylla-ble onward, and decreases from the beginning of the peak onwards [2].Sonority is related to the acoustic intensity of a sound.
Thus, by measuring theacoustic intensities of sounds, the sonority of a sound can be estimated [1].
Theclasses of vowel and consonant sounds (segments) that are usually distinguishedalong this dimension are listed in the order of increasing sonority, and this list is re-ferred to as the Sonority Scale [2].A Rule Based Syllabification Algorithm for Sinhala 439Sonority Scale:Obstruents ?
Nasals ?
Liquids ([l, r] etc.)
?
Glides ([w, j]) etc.)
?
VowelsMany syllabification algorithms have been developed based on these two theories.For example, the Festival Speech Synthesis System (the framework we use in ourSinhala TTS) by default syllabifies words by finding the minimum sonorant positionbetween vowels [3].
Another sonority scale based syllabification algorithm is pre-sented in detail in [4].
The sonority theory of the syllable does not, however, accountfor all the phenomena observed in language.
Many examples have been provided inthe literature to demonstrate this [1], [2].
To avoid the difficulties encountered whenusing the sonority profile, most of the language specific syllabication schemes aremodeled by using finite state machines or neural networks.
A multilingual syllabifica-tion algorithm using weighted finite-state transducers has been proposed in [5].In this research, an algorithm to divide Sinhala words into syllables is proposed.The algorithm was tested by using a text corpus containing representative words foreach grammatical rule, and its performance was then measured in terms of the per-centage of correctly syllabified words.
The rest of this paper is organized as follows:Section 2 gives an overview of the Sinhala Phonemic Inventory and Section 3 brieflyreviews the linguistic background of modern Sinhala word syllabification includingissues we identified and our proposed solutions.
Section 4 describes the implementa-tion of the algorithm.
The paper concludes with the results & discussion in Section 5.2   The Sinhala Phonemic InventorySinhala is one of the official languages of Sri Lanka and the mother tongue of the ma-jority (about 74%) of its population.
Spoken Sinhala contains 40 segmental pho-nemes; 14 vowels and 26 consonants as classified below in Table 1 and Table 2 [6].There are two nasalized vowels occurring in two or three words in Sinhala.
They are/a ~/, /a~:/, /?~/, and /?~~:/ [6].
Spoken Sinhala also contains the following Diph-thongs, /iu/, /eu/, /?u/, /ou/, /au/, /ui/, /ei/, /?i/, /oi/, and /ai/ [7].A separate letter for vowel /\/ has not been provided by the Sinhala writing sys-tem.
In terms of distribution, the vowel /\/ does not occur at the beginning of a syl-lable except in the conjugational variants of verbs formed from the verbal stem/k\r\/ (to do.).
In contrast to this, though the letter ?
?
exists in Sinhala writing sys-tem (corresponding to the consonant sound /j~/), it is not considered a phoneme inSinhala.Table 1.
Spoken Sinhala vowel classificationFront  Central BackShort Long Short Long Short LongHigh i      i:       u     u:Mid e    e:   \ \: o     o:Low ?
?
:   a a:?440 R. Weerasinghe, A. Wasala, and K. GamageTable 2.
Spoken Sinhala consonant classificationLabial Dental Alveolar Retroflex Palatal Velar GlottalVoiceless p    t      ?
k      StopsVoiced b    d     ?
?Voiceless     c      AffricatesVoiced     jPre-nasalizedvoiced stopsb~    d~     ?~      ~?Nasals m    n      ?
?Trill   rLateral   lSpirants f     s       s`    hSemivowels v       y3   Syllable Structure3.1   MethodologyThe methodology adopted in this study was to first examine the Sinhala syllable struc-ture from the Linguistics literature to gather the views of scholars from the variouslinguistic traditions.
It was expected that this study would reveal the main issues re-lated to the syllabification of Sinhala and how these issues are addressed by scholarsin the literature.
This was then subjected to the scrutiny of an algorithm in order to se-lect from among alternative theories.3.2   Sinhala Syllable Structure3.2.1   BackgroundWords in the Sinhala language can be divided in to three groups namely Nishpanna,Thadbhava and Thathsama as described below:Nishpanna: Words that are of local origin.Thathsama: Words borrowed from other languages in their (near) original form.Thadbhava: Words derived from other languages but modified to be incorporated toSinhala (mainly from Sanskrit and Pali).The high impact of Sanskrit in Sinhala vocabulary formation is due to the fact that,Sinhala and Sanskrit belong to the same Indo-Aryan language family.
Further, as thevehicle of Buddhism to Sri Lanka, the Pali (spoken) language has also significantlyinfluenced the vocabulary of Sinhala.
Due to various cultural, historical and socio-linguistic factors, other languages such as Tamil, Portuguese, Dutch and English havealso impacted the structure and vocabulary of Sinhala.It is important to note that the Thathsama, and Thadbhava, categories of words areavailable in modern Sinhala and are indistinguishable to the layman from words inthe Nishpanna Category.
While no documented evidence exists, it is thought that theA Rule Based Syllabification Algorithm for Sinhala 441percentage of words in the Nispanna category is less than 5%, while the percentage ofwords in the Thathsama and Thadbhava categories in Sinhala (the remaining > 95%),are more or less equal.
However, for words in the Thathsama and Thadbhava catego-ries, no official syllable structures were found in literature.
This puts the onus on anyTTS researcher dealing with Sinhala syllabification to pay urgent attention to thestudy of the Thathsama and Thadbhava categories of words.3.2.2   Syllabification of Words Belonging to the Nishpanna CategoryIt has been identified that there are four legal syllable structures in Sinhala, namely V,VC, CV and CVC for words which belong to the Nishpanna category [7].
This canalso be represented using the expression: (C)V(C).
Though a large number of exam-ples for syllabified words belonging to each of the above structures are presented inthe literature [7], the methodology or grammatical rules describing how to syllabify agiven word has not been presented.
A word can be syllabified in many ways retainingthe permitted structures, but only a single correct combination of structures is ac-cepted in a properly syllabified word.For example, a word having the consonant-vowel structure VCVCVC can be syl-labified in the following different ways, retaining the valid syllable structures de-scribed in the literature: (V)(CVC)(VC), (VC)(VC)(VC), (VC)(V)(CVC).
However,only one of these forms represents the properly syllabified word.The determination of a proper mechanism leading to the identification of the cor-rect combination and sequence of syllable structures in syllabifying a given word be-came the major challenge in this research.Further review of the literature and empirical observation led to the followingmodel with regard to Sinhala syllabification;1.
A fundamental assumption that the accurately syllabified form of a word can beuniquely obtained by formulating a set of rules.2.
That the following set of rules can be empirically shown to be effective.Syllabification Procedure for the Nishpanna Categorya.
Reach the first vowel of the given word and then,1.
If the phoneme next to this vowel is a consonant followed by another vowel,then mark the syllable boundary just after the first vowel.
(Rule #1)i.e.
a word having a consonant-vowel structure xVCV?
Should be syllabifiedas (xV)(CV?
), where x denotes either a single consonant or zero consonant.2.
If the phoneme next to this vowel is a consonant followed by another consonantand a vowel, then mark the syllable boundary just after the first consonant.
(Rule #2)i.e.
a word having a consonant-vowel structure xVCCV?
should be syllabifiedas (xVC)(CV?
), where x denotes either a single consonant or zero consonant.3.
If the phoneme next to this vowel is another vowel, then mark the syllableboundary just after the first vowel.
(Rule #3)i.e.
a word having a consonant-vowel structure xVV?
should be syllabified as(xV)(V?
), where x denotes either a single consonant or zero consonant.
Only afew words were found in Sinhala having two consecutive vowels in a singleword.
e.g.
?giriullt\?
(Name of city.
), ?aa:v\?
(Alphabet).
The syllable structure(V) mostly occurs at the beginning of the word, except for this type of rare word.442 R. Weerasinghe, A. Wasala, and K. Gamageb.
Having marked the first syllable boundary, continue the same procedure for therest of the phonemes as in the case of a new word.i.e.
Repeat the step (a) for the rest of the word, until the whole word is syllabified.The accuracy of this model was first tested by calculating the syllable boundariesusing the examples given in the literature.
Convinced that the results were consistentwith the descriptive treatment of the subject in the literature, it was concluded that theabove set of rules could describe an accurate syllabification algorithm for words be-longing to the Nishpanna category.3.2.3   Syllabification of Words of the Thathsama and Thadbhava CategoriesIn the syllabification of foreign words, it has been observed that words borrowed fromSanskrit play a major role compared to those borrowed from other languages.
The rea-son behind this is the presence of a large number of Sanskrit words in Sinhala (about75% of the Thathsama category [8]), and the complexity of codas and onsets of thesewords when they intermix with the Sinhala phonetic inventory.
Defining proper syl-labic structures for words borrowed or derived from Sanskrit therefore became a pri-mary focus in this study due to this reason.
For this purpose, a carefully chosen list ofwords in this category (see Appendix A) was presented to recognized scholars of Sin-hala and Sanskrit for syllabification and recommendations.
A careful analysis of the in-formation and views gathered, led to the identification of a new set of rules distinctfrom those defined in previous section, on how to syllabify these borrowed Sanskritwords.
It is proposed that Syllabic structures for words originating from Sanskrit canbe represented using the consonant-vowel pattern (C)(C)(C)V(C)(C)(C).
It is alsonoteworthy to mention that the syllabic structures for words belong to the category ofNishpanna i.e.
(C)V(C) is in fact a subset of this structure.Languages are unique in syllable structures.
Syllabification of words belonging tothe categories of Thathsama and Thadbhava do not completely adhere to the syllabi-fication rules imposed in the language from which the word originated.
Syllabifica-tion of such words will naturally be altered according to the phonetic inventory andexisting syllable structures of the host language, Sinhala in this case.
This view wasexpressed by all of the scholars whom we consulted regarding the syllabification offoreign words.
In support of this observation, it was evident that the syllabification ofalmost all  the words borrowed from languages other than Sanskrit (e.g.
Pali, Tamiland English) are also consistent with the above set of syllabification rules and syllabicstructures produced by them.
An algorithm to capture this feature of the language ispresented below:Syllabification Procedure for Thathsama and Thadbhava Categorya.
Reach the first vowel of the given word and then,1.
If the vowel is preceded by a consonant cluster of 3, followed by a vowel,?
If the consonant preceded by the last vowel is /r/ or /y/ then mark the syl-lable boundary after the first consonant of the consonant cluster.
(Rule #4)i.e.
a word having a consonant-vowel structure xVCC[/r/ or /y/]V..,should be syllabified as (xVC)(C[/r/ or /y/]V?
), where x denotes zero orany number of consonants.A Rule Based Syllabification Algorithm for Sinhala 443?
In the above rule, if the consonant preceded by the last vowel is a phonemeother than /r/ or /y/ then,?
If the first two consonants in the consonant cluster are both stop conso-nants, then mark the syllable boundary after the first consonant of the con-sonant cluster.
(Rule #5)i.e.
a word having a consonant-vowel structure xV[C-Stop][C-Stop]CV...,should be syllabified as (xVC)(CCV...), where x denotes zero or any numberof consonants.?
In other situations, mark the syllable boundary after the second consonantof the consonant cluster.
(Rule #6)i.e.
a word having a consonant-vowel structure xVCCCV?, should be syl-labified as (xVCC)(CV...), where x denotes zero or any number of conso-nants.2.
If  this vowel is preceded by a consonant cluster of more than  3 consonants ,?
If the consonant just before the last vowel is /r/ or /y/ then, mark the syl-lable boundary before 2 consonants from the last vowel.
(Rule #7)i.e.
a word having a consonant-vowel structure xVCCC?
[/r/ or /y/]V...should be syllabified as (xVCCC?
)(C[/r/ or /y/]V..), where x denoteszero or any number of consonants.?
In other situations, mark the syllable boundary just after the minimum sono-rant consonant phoneme of the consonant cluster.
(Rule #8)i.e.
a word having a consonant-vowel structure xVCCC?CV..., should besyllabified just next to the minimum sonorant consonant in the consonantcluster.b.
Having marked the first syllable boundary, continue the same procedure for therest of the phonemes as in a new word.i.e.
Repeat the step (a) for the rest of the word, until the whole word is syllabified.The words with consonant clusters of more than 3 consonants are rarely found inSinhala, and to avoid the confusion of syllabification of words in such situations, thealgorithm makes use of the universal sonority hierarchy in deciding the proper posi-tion to mark the syllable boundary.
In these situations, the syllable boundary ismarked next to the first occurrence of a minimum sonorant consonant.3.2.4   Ambisyllabic Words in SinhalaSome ambisyllabic words are also found in Sinhala.
This situation arises due to thefact that some words with complex coda or onset can be syllabified in several ways.For example, a word such as /sampre:k?\n\/ (transmit)  the /p/ can be interpretedas a coda with respect to the preceding vowel, as in /samp/re:k/?\/n\/or as an on-set with respect to the following vowel, as in /sam/pre:k/?\/n\/.More examples for this kind of word include, /mats/y\/, /mat/sy\/ (fish);/sank/ya:/,  /san/kya:/ (number) and /lak?/y\/,/lak/?y\/(point).Some Sanskrit loan words in Sinhala (including word internal clusters ending in /r/and preceding a vowel) can either be syllabified by reduplicating the first consonantsound of the cluster or by retaining the original word as in the following examples.444 R. Weerasinghe, A. Wasala, and K. Gamage/kr\/mak/r\/m\/y\/?
/kr\/mak/kr\/m\/y\/ (gradually)/ap/r\/ma:/n\/?
/ap/pr\/ma:/n\/ (unlimited)/ja/yag/ra:/hi:/?
/ja/yag/gra:/hi:/ (victory)This description demonstrates that the rules and procedures determined above arecomplied with even by ambisyllabic words.
It is important to note that while bothforms are acceptable, one of these will be provided by the algorithm stated above.4   The Syllabification AlgorithmThe rules identified in sections 3.2.2 and 3.2.3 are sensitive to the sequence since theyinteract with each other.
In this section, the Sinhala syllabification rules identifiedabove are presented in the form of a formal algorithm.
The function syllabify() ac-cepts an array of phonemes generated by our Letter-To-Sound module1 for a particularword, along with a variable called current_position which is used to determine theposition of the given array currently being processed by the algorithm.Initially the current_position variable will be initialized to 0.
The syllabify() func-tion is called recursively until all phonemes in the array are processed.
The functionmark_syllable_boundary(postion) will mark the syllable boundaries of an accepted ar-ray of phonemes.
The other functions used within the syllabify() function are de-scribed below.?
no_of_vowels(phonemes): accepts an array of phonemes and returns the number ofvowels contained in that array.?
is_a_vowel(phoneme): accepts a phoneme and returns true if the given phoneme isa vowel.?
count_no_of_consonants_upto_next_vowel(phonemes, position): accepts an arrayof phonemes and a starting position; and returns the count of consonants from thestarting position of the given array until the next vowel is found.?
is_a_stop(phoneme):   returns true if the accepted phoneme is a stop consonant.?
find_min_sonority_position(phonemes, position): returns the minimum sonorantposition of a given array of phonemes, by starting the search from the given  posi-tion.A complete listing of the algorithm is provided in Appendix B.5   Results and DiscussionOur algorithm was tested on 30,000 distinct words extracted from the (unbalanced)UCSC Sinhala Corpus BETA, and compared with correctly hand syllabified words.Text obtained from the category ?News Paper > Feature Auricles > Other?
was cho-sen for testing the algorithm due to the heterogeneous nature of these texts and hencethe perceived better representation of the language in this section of the corpus2.
A list1Discussed in another paper in preparation.2This accounts for almost two-thirds of the size of this version of the corpus.A Rule Based Syllabification Algorithm for Sinhala 445of distinct words was first extracted, and the 30,000 most frequently occurring wordschosen for testing our algorithm.The 30,000 words yielded some 78,775 syllables which were distributed as followsamong the 8 rules of the algorithm given: Rule #1: 67,350; Rule #2: 10,899; Rule #3:71; Rule #4: 324; Rule #5: 28; Rule #6: 77; Rule #7: 21 and Rule #*: 5.
Note howeverthat owing to the syllable structure of words in the Nishpanna category being a subsetof those of the Thathsama and Thadbhava categories, nothing can be inferred aboutthe actual percentages of words in each category from this analysis alone.The algorithm achieves an overall accuracy of 99.95% when compared with thesame words manually syllabified by an expert.
An error analysis revealed the follow-ing two types of errors:1.
Words composed by joining two or more words (i.e.
Single words formed by com-bining 2 or more distinct words; such as in the case of the English word  ?thereaf-ter?).
In this case, syllabification needs to be carried out separately for each wordof the compound word, and then concatenated to form a single syllabified word.2.
Foreign (mainly English) words directly encoded in Sinhala.A detailed study of Sinhala syllabification is presented in the research above.Though a great number of diverse algorithms have been proposed for syllabificationin different languages, to the best of our knowledge this is the first such study for Sin-hala syllabification proposing a formal algorithm describing the process.
The initialstudy of the literature revealed certain unresolved issues which this study resolvedwith the aid of scholars.
A significant task was carried out in identifying valid syllablestructures for words borrowed from Sanskrit.
A major effort was also made in identi-fying and defining a formal set of linguistic rules for syllabification, and then translat-ing same into a simple and easy-to-implement algorithm.
Finally, the effectiveness ofthe proposed algorithm was demonstrated using a set of words extracted from a Sin-hala corpus.Syllabification is an important component of many speech and language processingsystems, and this algorithm is expected to be a significant contribution to the field,and especially to researchers working on various aspects of the Sinhala language.AcknowledgementThis work has been supported through the PAN Localization Project, (http://www.PANL10n.net) grant from the International Development Research Center (IDRC),Ottawa, Canada, administered through the Center for Research in Urdu LanguageProcessing, National University of Computer and Emerging Sciences, Pakistan.
Theauthors are indebted to Sinhala Language scholars, Prof. Wimal G. Balagalle, Prof.S.A.G.
Wijesinghe, Prof. R.M.W.
Rajapaksha, and Prof. J.B. Dissanayake for theirinvaluable support and advice throughout the study.
We also wish to acknowledge thecontribution of Mr. Viraj Welgama, Mr. Dulip Herath, and Mr. Nishantha Medagodaof Language Technology Research Laboratory of the University of Colombo Schoolof Computing, Sri Lanka.446 R. Weerasinghe, A. Wasala, and K. GamageReferences1.
Ladeforged, P., A Course In Phonetics, 3rd  edn., Harcourt Brace Jovanovich College Pub-lishers, 301, Commerce Street, Suite 3700, Fort Worth TX 76102 (1993)2.
Gussenhoven, C., Jacobs, H., Understanding Phonology, Oxford University Press Inc, 198,Madison Avenue, New York, NY 10016 (1998)3.
Black, A.W., Taylor, P., Caley R., The Festival Speech Synthesis System: System Docu-mentation, University of Edinburgh, Edinburgh (1999)4.
Brasington, R., ?A simple syllabifier?, (LOGO and natural language), Available:http://www.personal.rdg.ac.uk/~llsling1/Logo.WWW/Sound.patterns/Simple.syllabifier.html,(Accessed: 2005, February, 02)5.
Kiraz, G.A., Mobius, B., "Multilingual Syllabification Using Weighted Finite-State Trans-ducers", Bell Labs ?
Lucent Technologies, Murray Hill, NJ 07974, USA, In Proceedings ofthe Third ESCA Workshop on Speech Synthesis (Jenolan Caves, Australia, 1998) (1998)6.
Karunatillake, W.S., An introduction to spoken Sinhala, 3rd edn., M.D.
Gunasena & Co. ltd.,217, Olcott Mawatha, Colombo 11 (2004)7.
Disanayaka, J.B., The structure of spoken Sinhala, National Institute of Education, Ma-haragama (1991)8.
Jayathilake, K., Nuthana Sinhala Vyakaranaye Mul Potha, Pradeepa Publications, 34/34,Lawyers?
Office Complex, Colombo 12, (1991)Appendix A: Word-Listk u: t o: p a k k r \ m \p r u t a g j a n \k r \ m a k k r \ m \ y e ns t r i: nv i d y a: j ?
\ y a:k r u m i y a:p i: t t r u: ns a u b a: g y \k a: v y o: p \ d e: ?
\ y \a v i d y a: v \p r a j ?
a: v \k o ?
s t a n t i n o: p \ l \ y \s v a p  n \?
a l y \ k a r m \p a: r l i m e: n t u w \d v a n d v \h \ r d \ s p a n d \ n \ y \s a m p r e: k  ?
\ n \?
e: ?
t r \p r \ v u r t ip r \ v u r j ya:A Rule Based Syllabification Algorithm for Sinhala 447p r \ ?
r a b d i y \s a n s k r u t\springs s p r i ?
g sscratched s k r ?
c ?straights s t r e: i t sstrength s t r e n t spostscript p o: s t s k r i p tarea e: r i a:Appendix B: Syllabification Algorithmfunction syllabify (phonemes, current_position)if no_of_vowels(phonemes) is 1 thenmark_syllable_boundary(at_the_end_of_phonemes)elseif is_a_vowel(phonemes[current_position]) is truethenno_of_consonants=count_no_of_consonants_upto_next_vowel(phonemes,current_position)if no_of_consonants is 0 thenif is_a_vowel(phonemes[current_position+1]) istrue thenmark_syllable_boundary(current_position) % Rule#3syllabify(phonemes, current_position+1)end ifelseif no_of_consonants is 1 thenmark_syllable_boundary(current_position) % Rule#1syllabify(phonemes, current_position+2)end ifif no_of_consonants are 2 thenmark_syllable_boundary(current_position+1)syllabify(phonemes, current_position+3) % Rule#2end ifif no_of_consonants are 3 then448 R. Weerasinghe, A. Wasala, and K. Gamageif phonemes[current_position+3] is( ?r?
or ?y?)
thenmark_syllable_boundary(current_position+1)% Rule#4syllabify(phonemes, current_position+4)elseif is_a_stop(phonemes[current_posi+1]) istrue and is_a_stop(phonemes[current_posi+2])) istrue thenmark_syllable_boundary(current_position+1)% Rule#5syllabify(phonemes, current_position+4)elsemark_syllable_boundary(current_position+2)% Rule#6syllabify(phonemes, current_position+4)end ifend ifend ifif no_of_consonants are greater than 3 thenif phonemes[current_position+no_of_consonants]is( ?r?
or ?y?)
thenmark_syllable_boundary(current_position+no_of_consonants-2) % Rule#7Syllabify(phonemes, current_position+no_of_consonants-1)       elsesyllable_boundary=find_min_sonority_position(phonemes,current_postion)mark_syllable_boundary(syllable_boundary)% Rule#8Syllabify(phonemes, syllable_boundary+1)end ifend ifA Rule Based Syllabification Algorithm for Sinhala 449end ifelsetemp=current_postionrepeattemp = temp + 1;until(is_a_vowel(phonemes[temp]) is truesyllabify(phonemes,temp)end ifend if
