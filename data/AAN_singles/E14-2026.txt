Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 101?104,Gothenburg, Sweden, April 26-30 2014.c?2014 Association for Computational LinguisticsA Spinning Wheel for YARN:User Interface for a Crowdsourced ThesaurusPavel BraslavskiUral Federal UniversityKontur Labspbras@yandex.ruDmitry UstalovUral Federal UniversityIMM UB RASdau@imm.uran.ruMikhail MukhinUral Federal Universitymfly@sky.ruAbstractYARN (Yet Another RussNet) projectstarted in 2013 aims at creating a largeopen thesaurus for Russian using crowd-sourcing.
This paper describes synsetassembly interface developed within theproject ?
motivation behind it, design, us-age scenarios, implementation details, andfirst experimental results.1 IntroductionCreation of linguistic resources and annotationsusing crowdsourcing and gamification is becom-ing a common practice.
Untrained workers con-tribute to development of thesauri, dictionaries,translation memories, and corpora annotations.Crowdsourcing can employ both paid workers,e.g.
on Amazon Mechanical Turk (AMT) plat-form1and volunteers as in case of Wiktionary2?a large wiki-style online multilingual dictionary.The goal of the YARN (Yet Another RussNet)project3launched in 2013 is to create a large openthesaurus for Russian language using crowdsourc-ing (Braslavski et al., 2013).
Despite the factthat there were several attempts to create a Rus-sian Wordnet (Azarova et al., 2002; Balkova et al.,2004; Gelfenbein et al., 2003; Loukachevitch andDobrov, 2002), there is no open resource of ac-ceptable quality and coverage currently available.The choice of crowdsourcing is also advocated bysuccessful projects that are being evolved by vol-unteers: Russian Wiktionary4, corpus annotationproject OpenCorpora5and a wiki for linguistic re-sources related to Russian NLPub6.1http://www.mturk.com/2http://www.wiktionary.org/3http://russianword.net/4http://ru.wiktionary.org/5http://opencorpora.org/6http://nlpub.ru/Wordnets had been traditionally developedwithin small research teams.
This approach main-tains conceptual consistency and project manage-ability, facilitates informal exchange of ideas in asmall group of contributors.
However, this prac-tice is hardly scalable and can potentially leadto a biased description of linguistic phenomenacaused by the preferences of a close group ofresearchers.
Crowdsourcing can possibly reducecosts, increase development pace, and make theresults more robust, but puts additional demandson project management and tools, including userinterface.
Requirements for a crowdsourcing the-saurus development interface are as follows: 1) alow entry threshold for new users and a graduallearning curve; 2) no need for users to install addi-tional software; 3) central data storage, collabora-tive work for several users in a competitive mode,and permission management; 4) change historytracking to protect data against vandalism.Princeton WordNet editors had worked directlywith lexicographer files stored in a version controlsystem (Fellbaum, 1998).
In later thesauri creationprojects specialized tools were developed that fea-tured more user-friendly interface, graphical rep-resentation of thesaurus relationships, centralizeddata storage, possibility of collaborative work, anddata consistency checks.
Examples of thesauridevelopment tools are DEBVisDic (Hor?ak et al.,2006), GernEdiT (Henrich and Hinrichs, 2010), aswell as WordNetLoom (Piasecki et al., 2012) (see(Piasecki et al., 2012) for a brief overview of the-sauri editing tools).
Wiktionary and OmegaWiki7use MediaWiki engine and wiki markup to encodedictionary information.In the preparatory stage of the project we con-sidered adoption of the above mentioned tools.However, we estimated that the amount of workneeded for adaptation of existing tools to YARN7http://www.omegawiki.org/101data formats and usage scenarios is quite costlyand decided to develop a series of specializedtools.The paper briefly describes YARN project andits noun synsets assembly interface in particular ?motivation behind it, current state and appearance,usage scenarios, as well as results of a preliminaryuser study and future plans.2 Project OutlineYARN is conceptually similar to Princeton Word-net (Fellbaum, 1998) and its followers: it con-sists of synsets ?
groups of quasi-synonyms cor-responding to a concept.
Concepts are linkedto each other, primarily via hierarchical hy-ponymic/hypernymic relationships.
According tothe project?s outline, YARN contains nouns, verbs,and adjectives.
We aim at splitting the process ofthesaurus creation into smaller tasks and develop-ing custom interfaces for each of them.
The firststep is an online tool for building noun synsetsbased on content of existing dictionaries.
The goalof this stage is to establish YARN core content,test and validate crowdsourcing approach, prepareannotated data for automatic methods, and createa basis for the work with the other parts of speech.As mentioned above, important characteristicsof the project are its openness and recruitment ofvolunteers.
Our crowdsourcing approach is differ-ent, for example, from the one described in (Bie-mann and Nygaard, 2010), where AMT turkersform synsets using the criterion of contextual sub-stitutability directly.
In our case, editors assem-ble synsets using word lists and definitions fromdictionaries as ?raw material?.
Obviously, sucha task implies minimal lexicographical skills andis more complicated than an average task offeredto AMT workers.
Our target editors are collegeor university students, preferably from linguisticsdepartments, who are native Russian speakers.
Itis desirable that students are instructed by a uni-versity teacher and may seek their advice in com-plex cases.
As in the case of Wikipedia and Wik-tionary, we foresee two levels of contributors: lineeditors and administrators with the correspondingprivileges.
According to our expectations, the to-tal number of line editors can reach two hundredsthroughout a year.3 Raw Materials for YARNWe used two sources of ?raw materials?
forYARN: 1) Russian Wiktionary and 2) SmallAcademic Dictionary (SAD).
Russian Wiktionarydump as of March 2012 was parsed and con-verted to database format using Wikokit software(Krizhanovsky and Smirnov, 2013).
Wiktionarydump contains 51,028 nouns, including 45,646single-word nouns; 30,031 entries have at leastone definition.
Besides the words and definitionsWiktionary dump contains occasionally synonymreferences and word usage examples.
SAD datacontain 33,220 word entries and 51,676 defini-tions.
All single-word nouns were provided withfrequencies based on the Russian National Cor-pus8.4 User InterfaceThe current synset editing interface can be ac-cessed online9; its main window is presented inFigure 1.?Raw data?
are placed on the left-hand side ofthe interface: definitions of the initial word and ex-amples, possible synonyms for each of the mean-ings in turn with definitions and examples.
Theright-hand part represents resulted synsets includ-ing words, definitions, and examples.
In principle,an editor can assemble a ?minimal?
synset fromthe dictionary ?raw material?
simply with severalmouse clicks, without any typing.Synset assembly begins with a word, or ?synsetstarter?.
The editor selects an item from the listof words ranked by decreasing frequency; alreadyprocessed words are shaded.
The editor can gothrough the words one after another or choose anarbitrary word using search box.The top left-hand pane displays definitions ofthe initial word and usage examples if any.
To sim-plify the view, editor can turn out examples or toblind individual definitions.
Possible synonyms ofthe initial word are listed at the bottom-left pane,in turn with definitions and examples.
The top-right pane displays a list of synsets containing theinitial word.
The editor can copy definitions andusage examples of the initial word from the top leftof the interface to the current synset with mouseclicks.
From the synonyms pane one can transferbare words or words along with definitions and ex-amples.
The editor can add a new word to the list8http://ruscorpora.ru/en/9http://russianword.net/editor102Figure 1: Main window of YARN synset assembly interface (interface captions are translated for con-venience of readers into English; originally all interface elements are in Russian): 1) initial word; 2)definitions and examples of the initial word; 3) possible synonyms of the initial word with definitionsand examples; 4) a list of synsets containing the initial word (active synset is highlighted); 5) words con-stituting the current synset; 6) definitions of the current synset.
The arrows show how the informationitems from the left-hand side form synsets in the right-hand side.of synonyms; it will appear with dictionary defini-tions and examples if presented in the parsed data.If the editor is not satisfied with the collected def-initions, they can create a new one ?
either fromscratch or based on one of the existing descrip-tions.
Additionally, a word or a definition within asynset can be flagged as ?main?
; and be providedwith labels.
All synset edits are tracked and storedin the database along with timestamps and editorID.YARN software is implemented using Ruby onRails framework.
All data are stored in a Post-greSQL database.
User authentication is per-formed through an OAuth endpoint provided byFacebook.
The user interface is implemented asa browser JavaScript application.
The applica-tion interacts with the server application via JSONAPI.
The entire source code of the project is avail-able in an open repository10.10https://github.com/russianwordnet5 Preliminary ResultsIn the fall 2013 we conducted a pilot user studywith 45 students of the linguistics department atthe Ural Federal University.
The experiment re-sulted in 1390 synsets; 970 of them are ?non-trivial?, i.e.
contain more than a single word (253contain 2 words, 228 ?
3 words, 207 ?
4, 282 ?5+).
Editors spent about two minutes on buildinga ?non-trivial?
synset on average, which we find avery good result.
Figure 2 shows the distributionof edit times for 2+ word synsets.
Distribution ofcompleted synsets by students is also skewed, e.g.top-5 contributors account for more than a third ofall non-trivial synsets (329).Figure 3 shows a linear trend of time spent byfive top contributors on constructing consecutivenon-trivial synsets.
Four out of five demonstratea learning effect: average time per synset tends todecrease while the editor proceeds through tasks.In general, students were very positive about10303060900 120 240 360 480 600 720 840editing time, secsynsetsFigure 2: Distribution of times spent on non-trivialsynset editing.their participation in the experiment and theYARN interface.
Participants mentioned flaws inparsed data, inability to delete an existing synset(we disabled this option during the experiment),and the inconvenience of label assignments asmain disadvantages.6 ConclusionsYARN synset assembly tool passed an initial test-ing and proved to be a usable tool for creation ofthesaurus building blocks.
Upon reading simpleinstructions, volunteers were able to quickly learnan intuitive interface and accomplish the synset as-sembly task without problems.During the experiment we were able to diag-nose some flaws related to interface design, editorguidelines, and internal data representation.
In thefuture we will elaborate instructions and learningmaterials, clean existing and add more dictionarydata, and perform a thorough evaluation of the in-terface.
Then, we will work on an interface forlinking synsets and expand YARN with verbs andadjectives.Acknowledgments.
This work is supported bythe Russian Foundation for the Humanities,project #13-04-12020 ?New Open Electronic The-saurus for Russian?.ReferencesIrina Azarova et al.
2002.
RussNet: Building a Lex-ical Database for the Russian Language.
In Proc.of Workshop on WordNet Structures and Standardi-sation, and How These Affect WordNet Applicationsand Evaluation, Gran Canaria, Spain, pages 60?64.2550751001250 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75synset, #editing time,secuser 1 2 3 4 5Figure 3: Linear trend of time spent on sequentialedits of nontrivial synsets by top-5 contributors.Valentina Balkova et al.
2004.
Russian wordnet.
InProc.
of the Second Global WordNet Conference,pages 31?38.
Citeseer.Chris Biemann and Valerie Nygaard.
2010.
Crowd-sourcing Wordnet.
In Proc.
of the 5th Global Word-Net conference, Mumbai, India.Pavel Braslavski et al.
2013.
YARN Begins.
In Proc.of Dialog-2013 (in Russian).Christiane Fellbaum.
1998.
WordNet: An ElectronicDatabase.Ilya Gelfenbein et al.
2003.
Avtomaticheskij perevodsemanticheskoj seti WORDNET na russkij yazyk.In Proc.
of Dialog?2003 (in Russian).Verena Henrich and Erhard Hinrichs.
2010.
GernEdiT-The GermaNet Editing Tool.
In ACL (SystemDemonstrations), pages 19?24.Ale?s Hor?ak et al.
2006.
DEBVisDic?First Version ofNew Client-Server Wordnet Browsing and EditingTool.
In Proc.
of the Third International WordnetConference.Andrew Krizhanovsky and Alexander Smirnov.
2013.An Approach to Automated Construction of a Gen-eral Purpose Lexical Ontology Based on Wiktionary.Journal of Computer and Systems Sciences Interna-tional, 52(2):215?225.Natalia Loukachevitch and Boris Dobrov.
2002.
De-velopment and Use of Thesaurus of Russian Lan-guage RuThes.
In Proc.
of Workshop on Word-Net Structures and Standardisation, and How TheseAffect WordNet Applications and Evaluation, GranCanaria, Spain, pages 65?70.Maciej Piasecki et al.
2012.
WordnetLoom: a WordnetDevelopment System Integrating Form-based andGraph-based Perspectives.
International Journal ofData Mining, Modelling and Management.104
