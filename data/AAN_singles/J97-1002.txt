The Reliability of a Dialogue StructureCoding SchemeJean Carletta"University of EdinburghStephen Isard tUniversity of EdinburghGwyneth Doherty-Sneddon~University of StirlingAmy Isard ?University of EdinburghJacqueline C. Kowtko tUniversity of EdinburghAnne H. Anderson ~University of GlasgowThis paper describes the reliability of a dialogue structure coding scheme based on utterancefunction, game structure, and higher-level transaction structure that has been applied to a corpusof spontaneous task-oriented spoken dialogues.1.
IntroductionDialogue work, like the rest of linguistics, has traditionally used isolated examples,either constructed or real.
Now many researchers are beginning to try to code largedialogue corpora for higher-level dialogue structure in the hope of giving their findingsa firmer basis.
The purpose of this paper is to introduce and describe the reliabilityof a scheme of dialogue coding distinctions that have been developed for use on theMap Task Corpus (Anderson et al 1991).
These dialogue structure distinctions weredeveloped within a larger "vertical analysis" of dialogue encompassing a range ofphenomena, beginning with speech characteristics, and therefore are intended to beuseful whenever an expression of dialogue structure is required.2.
Other Dialogue Structure Coding SchemesA number of alternative ways of coding dialogue are mentioned in the recent literature.Walker and Whittaker (1990) mark utterances as assertions, commands, questions, orprompts (utterances that do not express proposition content) in an investigation ofmixed initiative in dialogue.
Sutton et al (1995) classify the possible responses to aquestion in terms of whether or not they answer the question and how completeand concise the answer is, as part of designing an automated spoken questionnaire.Alexandersson et al (1995) devise a set of 17 "speech acts" that occur in dialoguesbetween people setting the date for a business meeting; some of these speech acts aretask-specific.
They use these speech acts to derive statistical predictions about whichspeech act will come next within VERBMOBIL, a speech-to-speech dialogue translationsystem that operates on demand for limited stretches of dialogue.
Nagata and Mori-Human Communication Research Centre, 2 Buccleuch Place, Edinburgh EH8 9LW, Scotland.t Centre for Speech Technology Research, 80 South Bridge, Edinburgh EH1 1HN, Scotland.Psychology Department, Stirling FK9 4LA, Scotland.?
Human Communication Research Centre, 56 Hillhead Street, Glasgow G12 9YR, Scotland.
(~) 1997 Association for Computational LinguisticsComputational Linguistics Volume 23, Number 1moto (1993) use a set of nine more task-independent illocutionary force distinctions fora similar purpose.
Ahrenberg, Dahlback, and J6nsson (1995) divide moves in Wizard-of-Oz information-seeking dialogues into initiations and responses and then furtherclassify them according to the function they serve in the information transfer, in orderto show how this relates to the focus structure of the dialogues.
Condon and Cech(1996), while investigating the difference between face-to-face and computer-mediatedcommunication, classify utterances according to the role they take in decision making.The coding described in this paper differs from all of these coding schemes in threeimportant ways.
First, although the move categories are informed by computationalmodels of dialogue, the categories themselves are more independent of the task thanschemes devised with particular machine dialogue types in mind.
Second, althoughother coding schemes may distinguish many categories for utterances segmented ac-cording to the discourse goals they serve, by showing game and transaction structuresthis coding scheme attempts to classify dialogue structure at higher levels as well.
Fi-nally, although the other coding schemes appear to have been devised primarily withone purpose in mind, this coding scheme is intended to represent dialogue structuregenerically so that it can be used in conjunction with codings of many other dialoguephenomena.3.
The Dialogue Structure CodingThe coding distinguishes three levels of dialogue structure, similar to the three middlelevels in Sinclair and Coulthard's (1975) analysis of classroom discourse.
At the highestlevel, dialogues are divided into transactions, which are subdialogues that accomplishone major step in the participants' plan for achieving the task.
The size and shape oftransactions i largely dependent on the task.
In the Map Task, two participants haveslightly different versions of a simple map with approximately fifteen landmarks on it.One participant's map has a route printed on it; the task is for the other participant toduplicate the route.
A typical transaction is a subdialogue that gets the route followerto draw one route segment on the map.Transactions are made up of conversational games, which are often also called di-alogue games (Carlson 1983; Power 1979), interactions (Houghton 1986), or exchanges(Sinclair and Coulthard 1975), and show the same structure as Grosz and Sidner'sdiscourse segments (1986) when applied to task-oriented dialogue.
All forms of con-versational games embody the observation that, by and large, questions are followedby answers, statements by acceptance or denial, and so on.
Game analysis makesuse of this regularity to differentiate between initiations, which set up a discourseexpectation about what will follow, and responses, which fulfill those expectations.In addition, games are often differentiated by the kind of discourse purpose theyhave--for example, getting information from the partner or providing information.
Aconversational game is a set of utterances starting with an initiation and encompassingall utterances up until the purpose of the game has been either fulfilled (e.g., the re-quested information has been transferred) or abandoned.
Games can nest within eachother if one game is initiated to serve the larger goal of a game that has already beeninitiated (for instance, if a question is on the floor but the hearer needs to ask for clar-ification before answering).
Games are themselves made up of conversational moves,which are simply different kinds of initiations and responses classified according totheir purposes.
All levels of the dialogue coding are described in detail in Carlettaet al (1996).14Carletta et al Dialogue Structure CodingIs the utterance an initiation, response, or preparation?INITIATIONls the utterance a command, statement,COMMAND STATEMENT JINSTRUCT E X ~QUESTIONIs the person who is transferring informationasking a question in an attempt to get evidencethat the transfer was successful, so they canmove on?YES NOALIGN Does the question ask for confirmation ofmaterial which the speaker believes might beinferred, given the dialogue context?YES NOCHECK Does the question ask for a yes-noanswer, or something more complex?YES-NO COMPLEXQUERY-YN QUERY-WFigure 1Conversational move categories.RESPONSEDoes the response contribute task/domaininformation, or does it only show evidencethat communication has been successful?PREPARATIONREADYCOMMUNICATION INFORMATIONACKNOWLEDGEMENT Does the response contain justthe information requested, or isit amplified?AMPL|FIEDCLARIFYINFO REQUESTEDDoes the response mean yes, no,or something more complex?YES NO COMPLEXREPLY-Y REPLY-N REPLY-W3.1 The Move Coding SchemeThe move coding analysis is the most substantial level.
It was developed by extendingthe moves that make up Houghton's (1986) interaction frames to fit the kinds of in-teractions found in the Map Task dialogues.
In any categorization, there is a trade-offbetween usefulness and ease or consistency of coding.
Too many semantic distinctionsmake coding difficult.
These categories were chosen to be useful for a range of pur-poses but still be reliable.
The distinctions used to classify moves are summarized inFigure 1.3.1.1 The INSTRUCT Move.
An INSTRUCT move commands the partner to carry out anaction.
Where actions are observable, the expected response could be performance of15Computational Linguistics Volume 23, Number 1the action.
The instruction can be quite indirect, as in example 3 below, as long asthere is a specific action that the instructor intends to elicit (in this case, focusing onthe start point).
In the Map Task, this usually involves the route giver telling the routefollower how to navigate part of the route.
Participants can also give other INSTRUCTmoves, such as telling the partner to go through something again but more slowly.
Inthese and later examples, G denotes the instruction giver, the participant who knowsthe route, and F, the instruction follower, the one who is being told the route.
Editorialcomments that help to establish the dialogue context are given in square brackets.Example 1G: Go right round, ehm, until you get to just above them.Example 2G: If you come in a wee bit so that you're about an inch away from bothedges.Example 3G: We're going to start above th ...  directly above the telephone kiosk.Example 4F: Say it .. .
start again.Example 5F: Go.
\[as first move of dialogue; poor quality but still an instruction\]3.1.2 The EXPLAIN Move.
An EXPLAIN states information that has not been directlyelicited by the partner.
(If the information were elicited, the move would be a response,such as a reply to a question.)
The information can be some fact about either thedomain or the state of the plan or task, including facts that help establish what ismutually known.Example 6G: Where the dead tree is on the other side of the stream there's farmedland.Example 7G: I've got a great viewpoint away up in the top left-hand corner.Example 8F: I have to jump a stream.Example 9F: I 'm in between the remote village and the pyramid.Example 10F: Yeah, that's what I thought you were talking about.3.1.3 The CHECK Move.
A CHECK move requests the partner to confirm informationthat the speaker has some reason to believe, but is not entirely sure about.
Typically16Carletta et al Dialogue Structure Codingthe information to be confirmed is something the partner has tried to convey explicitlyor something the speaker believes was meant to be inferred from what the partnerhas said.
In principle, CHECK moves could cover past dialogue events (e.g., "I toldyou about the land mine, didn't I?")
or any other information that the partner is ina position to confirm.
However, CHECK moves are almost always about some infor-mation that the speaker has been told.
One exception in the Map Task occurs when aparticipant is explaining a route for the second time to a different route follower, andasks for confirmation that a feature occurs on the partner's map even though it hasnot yet been mentioned in the current dialogue.Example 11G: .. .
you go up to the top left-hand corner of the stile, but you're only, sayabout a centimetre from the edge, so that's your line.F: OK, up to the top of the stile?Example 12G:F:G:F:Ehm, curve round slightly to your right.To my right?Yes.As I look at it?Example 13G: Right, em, go to your right towards the carpenter's house.F: Alright well I'll need to go below, I've got a blacksmith marked.G: Right, well you do that.F: Do you want it to go below the carpenter?
\[*\]G: No, I want you to go up the left hand side of it towards green bay andmake it a slightly diagonal ine, towards, em sloping to the right.F: So you want me to go above the carpenter?
\[**\]G: Uh-huh.F: Right.Note that in example 13, the move marked * is not a CHECK because it asks fornew information F has only stated that he'll have to go below the blacksmith--butthe move marked ** is a CHECK because F has inferred this information from G's priorcontributions and wishes to have confirmation.3.1.4 The ALIGN Move.
An ALIGN move checks the partner's attention, agreement, orreadiness for the next move.
At most points in task-oriented dialogue, there is somepiece of information that one of the participants i trying to transfer to the other par-ticipant.
The purpose of the most common type of ALIGN move is for the transfererto know that the information has been successfully transferred, so that they can closethat part of the dialogue and move on.
If the transferee has acknowledged the infor-mation clearly enough, an ALIGN move may not be necessary.
If the transferer needs17Computational Linguistics Volume 23, Number 1more evidence of success, then alignment can be achieved in two ways.
If the trans-ferer is sufficiently confident hat the transfer has been successful, a question suchas "OK?"
suffices.
Some participants ask for this kind of confirmation immediatelyafter issuing an instruction, probably to force more explicit responses to what theysay.
Less-confident transferers can ask for confirmation of some fact that the transfereeshould be able to infer from the transferred information, since this provides trongerevidence of success.
Although ALIGN moves usually occur in the context of an un-confirmed information transfer, participants also use them at hiatuses in the dialogueto check that "everything is OK" (i.e., that the partner is ready to move on) withoutasking about anything in particular.Example 14G: OK?
\]after an instruction and an acknowledgment\]Example 15G: You should be skipping the edge of the page by about half an inch, OK?Example 16G: Then move that point up half an inch so you've got a kind of diagonalline again.F: Right.G: This is the left-hand edge of the page, yeah?
\[where the query is askedvery generally about a large stretch of dialogue, "just in case"\]3.1.5 The QUERY-YN Move.
A QUERY-YN asks the partner any question that takes a yesor no answer and does not count as a CHECK or an ALIGN.
In the Map Task, thesequestions are most often about what the partner has on the map.
They are also quiteoften questions that serve to focus the attention of the partner on a particular part ofthe map or that ask for domain or task information where the speaker does not thinkthat information can be inferred from the dialogue context.Example 17G: Do you have a stone circle at the bottom?Example 18G: I've mucked this up completely have I?Example 19F: I've got Dutch Elm.G: Dutch Elm.
Is it written underneath e tree?Example 20n~F:G:F:Have you got a haystack on your map?YeahRight just move straight down from there, then,Past the blacksmith?
\[with no previous mention of blacksmith or anydistance straight down, so that F can't guess the answer\]18Carletta et al Dialogue Structure Coding3.1.6 The QUERY-W Move.
A QUERY-W is any query not covered by the other categories.Although most moves classified as QUERY-W are wh-questions, otherwise unclassifiablequeries also go in this category.
This includes questions that ask the partner to chooseone alternative from a set, as long as the set is not yes and no.
Although technicallythe tree of coding distinctions allows for a CHECK or an ALIGN to take the form of awh-question, this is unusual in English.
In both ALIGN and CHECK moves, the speakertends to have an answer in mind, and it is more natural to formulate them as yes-noquestions.
Therefore, in English all wh-questions tend to be categorized as QUERY-W. Itmight be possible to subdivide QUERY-W intO theoretically interesting categories ratherthan using it as a "wastebasket," but in the Map Task such queries are rare enoughthat subdivision is not worthwhile.Example 21G: Towards the chapel and then you'veF: Towards what?Example 22G: Right, okay.
Just move round the crashed spaceship so that you've.. .
you reach the finish, which should be left ... just left of the .. .
thechestnut ree.F: Left of the bottom or left of the top of the chestnut ree?Example 23F: No I've got a ...
I've got a trout farm over to the right underneathIndian Country here.G: Mmhmm.F:I want you to go three inches past that going south, in other words justto the level of that, I mean, not the trout farm.To the level of what?3.2 Response movesThe following moves are used within games after an initiation, and serve to fulfill theexpectations set up within the game.3.2.1 The ACKNOWLEDGE Move.
An ACKNOWLEDGE move is a verbal response thatminimally shows that the speaker has heard the move to which it responds, and oftenalso demonstrates that the move was understood and accepted.
Verbal acknowledg-ments do not have to appear even after substantial explanations and instructions,since acknowledgment can be given nonverbally, especially in face-to-face settings,and because the partner may not wait for one to occur.
Clark and Schaefer (1989)give five kinds of evidence that an utterance has been accepted: continued attention,initiating a relevant utterance, verbally acknowledging the utterance, demonstratingan understanding of the utterance by paraphrasing it, and repeating part or all ofthe utterance verbatim.
Of these kinds of evidence, only the last three count as AC-KNOWLEDGE moves in this coding scheme; the first kind leaves no trace in a dialoguetranscript o be coded, and the second involves making some other, more substantialdialogue move.19Computational Linguistics Volume 23, Number 1Example 24G: Ehm, if you ...  you're heading southwards.F: Mmhmm.Example 25G: Do you have a stone circle at the bottom?F: No.G: No, you don't.3.2.2 The REPLY-Y Move.
A REPLY-Y is any reply to any query with a yes-no surfaceform that means "yes", however that is expressed.
Since REPLY-Y moves are elicitedresponses, they normally only appear after QUERY-YN, ALIGN, and CHECK moves.Example 26G: See the third seagull along?F: Yeah.Example 27G: Do you have seven beeches?F: I do.Example 28F: Green Bay?G: Uh-huh.Example 29G: Do you want me to run by that one again?F: Yeah, if you could.3.2.3 The REPLY-N Move.
Similar to REPLY-Y, a reply to a query with a yes-no surfaceform, that means "no" is a REPLY-N.Example 30G: Do you have the west lake, down to your left?F: No.Example 31G: So you're at a point that's probably two or three inches away from boththe top edge, and the left-hand side edge.
Is that correct?F: No, not at the moment.One caveat about the meaning of the difference between REPLY-Y and REPLY-N:rarely, queries include negation (e.g., "You don't have a swamp?
"; "You're not any-where near the coast?").
As for the other replies, whether the answer is coded as aREPLY-Y or a REPLY-N depends on the surface form of the answer, even though in thiscase "yes" and "no" can mean the same thing.20Carletta et al Dialogue Structure Coding3.2.4 The REPLY-W Move.
A REPLY-W is any reply to any type of query that doesn'tsimply mean "yes" or "no.
"Example 32G: And then below that, what've you got?F: A forest stream.Example 33G: No, but right, first, before you come to the bakery do another wee lumpF: Why?G: Because I say.Example 34F: Is this before or after the backward s?G: This is before it.3.2.5 The CLARIFY Move.
A CLARIFY move is a reply to some kind of question in whichthe speaker tells the partner something over and above what was strictly asked.
If theinformation is substantial enough, then the utterance is coded as a reply followed byan EXPLAIN, but in many cases, the actual change in meaning is so small that codersare reluctant o mark the addition as truly informative.
Route givers tend to makeCLARIFY moves when the route follower seems unsure of what to do, but there isn't aspecific problem on the agenda (such as a landmark now known not to be shared).Example 35G: And then, have you got the pirate ship?F: Mmhmm.G: Just curve from the point, go right ...  go down and curve into the righttil you reach the tip of the pirate shipF: So across the bay?G: Yeah, through the water.F: So I just go straight down?G: Straight down, and curve to the right, til you're in line with the pirateship.Example 36\[ .
.. instructions that keep them on land ... \]F: So I'm going over the bay?G: Mm, no, you're still on land.3.2.6 Other Possible Responses.
All of these response moves help to fulfill the goalsproposed by the initiating moves that they follow.
It is also theoretically possible atany point in the dialogue to refuse to take on the proposed goal, either because theresponder feels that there are better ways to serve some shared higher-level dialogue21Computational Linguistics Volume 23, Number 1goal or because the responder does not share the same goals as the initiator.
Oftenrefusal takes the form of ignoring the initiation and simply initiating some other move.However, it is also possible to make such refusals explicit; for instance, a participantcould rebuff a question with "No, let's talk about .
.
.
.  "
an initiation with "What do youmean--that won't work!
", or an explanation about he location of a landmark with "Isit?"
said with an appropriately unbelieving intonation.
One might consider these casesakin to ACKNOWLEDGE moves, but with a negative slant.
These cases were sufficientlyrare in the corpora used to develop the coding scheme that it was impractical to includea category for them.
However, it is possible that in other languages or communicativesettings, this behavior will be more prevalent.
Grice and Savino (1995) found that sucha category was necessary when coding Italian Map Task dialogues where speakerswere very familiar with each other.
They called the category OBJECT.3.3 The READY MoveIn addition to the initiation and response moves, the coding scheme identifies READYmoves as moves that occur after the close of a dialogue game and prepare the con-versation for a new game to be initiated.
Speakers often use utterances such as "OK"and "right" to serve this purpose.
It is a moot point whether READY moves shouldform a distinct move class or should be treated as discourse markers attached to thesubsequent moves, but the distinction is not a critical one, since either interpretationcan be placed on the coding.
It is sometimes appropriate to consider READY moves asdistinct, complete moves in order to emphasize the comparison with ACKNOWLEDGEmoves, which are often just as short and even contain the same words as READY moves.Example 37G: Okay.
Now go straight down.Example 38G: Now I have banana tree instead.Example 39G: Right, if you move up very slightly to the right along to the right.3.4 The Game Coding SchemeMoves are the building blocks for conversational game structure, which reflects thegoal structure of the dialogue.
In the move coding, a set of initiating moves are dif-ferentiated, all of which signal some kind of purpose in the dialogue.
For instance,instructions signal that the speaker intends the hearer to follow the command, queriessignal that the speaker intends to acquire the information requested, and statementssignal that the speaker intends the hearer to acquire the information given.
A conver-sational game is a sequence of moves starting with an initiation and encompassing allmoves up until that initiation's purpose is either fulfilled or abandoned.There are two important components of any game coding scheme.
The first is anidentification of the game's purpose; in this case, the purpose is identified simply bythe name of the game's initiating move.
The second is some explanation ofhow gamesare related to each other.
The simplest, paradigmatic relationships are implemented incomputer-computer dialogue simulations, uch as those of Power (1979) and Houghton(1986).
In these simulations, once a game has been opened, the participants workon the goal of the game until they both believe that it has been achieved or thatit should be abandoned.
This may involve embedding new games with subservient22Carletta et al Dialogue Structure Codingpurposes to the top-level one being played (for instance, clarification subdialoguesabout some crucial missing information), but the embedding structure is always clearand mutually understood.
Although some natural dialogue is this orderly, much of itis not; participants are free to initiate new games at any time (even while the partner isspeaking), and these new games can introduce new purposes rather than serving somepurpose already present in the dialogue.
In addition, natural dialogue participantsoften fail to make clear to their partners what their goals are.
This makes it verydifficult to develop a reliable coding scheme for complete game structure.The game coding scheme simply records those aspects of embedded structure thatare of the most interest.
First, the beginning of new games is coded, naming the game'spurpose according to the game's initiating move.
Although all games begin with aninitiating move (possibly with a READY move prepended to it), not all initiating movesbegin games, since some of the initiating moves serve to continue existing games orremind the partner of the main purpose of the current game again.
Second, the placewhere games end or are abandoned is marked.
Finally, games are marked as eitheroccurring at top level or being embedded (at some unspecified epth) in the gamestructure, and thus being subservient to some top-level purpose.
The goal of thesedefinitions is to give enough information to study relationships between game struc-ture and other aspects of dialogue while keeping those relationships simple enoughto code.3.5 The Transaction Coding SchemeTransaction coding gives the subdialogue structure of complete task-oriented ia-logues, with each transaction being built up of several dialogue games and corre-sponding to one step of the task.
In most Map Task dialogues, the participants breakthe route into manageable segments and deal with them one by one.
Because trans-action structure for Map Task dialogues is so closely linked to what the participantsdo with the maps, the maps are included in the analysis.
The coding system has twocomponents: (1) how route givers divide conveying the route into subtasks and whatparts of the dialogue serve each of the subtasks, and (2) what actions the route followertakes and when.The basic route giver coding identifies the start and end of each segment and thesubdialogue that conveys that route segment.
However, Map Task participants do notalways proceed along the route in an orderly fashion; as confusions arise, they oftenhave to return to parts of the route that have already been discussed and that oneor both of them thought had been successfully completed.
In addition, participantsoccasionally overview an upcoming segment in order to provide a basic context fortheir partners, without the expectation that their partners will be able to act upon theirdescriptions (for instance, describing the complete route as "a bit like a diamond shape?..
but .
.
,  a lot more wavy than that.. .
").
They also sometimes engage in subdialoguesnot relevant o any segment of the route, sometimes about the experimental setup butoften nothing at all to do with the task.
This gives four transaction types: NORMAL,REVIEW, OVERVIEW, and IRRELEVANT.Other types of subdialogues are possible (such as checking the placement of allmap landmarks before describing any of the route, or concluding the dialogue byreviewing the entire route), but are not included in the coding scheme because of theirrarity.Coding involves marking where in the dialogue transcripts a transaction startsand which of the four types it is, and for all but IRRELEVANT transactions, indicatingthe start and end point of the relevant route section using numbered crosses on a copyof the route giver's map.
The ends of transactions are not explicitly coded because,23Computational Linguistics Volume 23, Number 1generally speaking, transactions do not appear to nest; for instance, if a transactionis interrupted to review a previous route segment, participants by and large restartthe goal of the interrupted transaction afterwards.
It is possible that transactions aresimply too large for the participants to remember how to pick up where they left off.Note that it is possible for several transactions (even of the same type) to have thesame starting point on the route.The basic route follower coding identifies whether the follower action was drawinga segment of the route or crossing out a previously drawn segment, and the start andend points of the relevant segment, indexed using numbered crosses on a copy of theroute follower's map.4.
Reliability of Coding SchemesIt is important o show that subjective coding distinctions can be understood andapplied by people other than the coding developers, both to make the coding crediblein its own right and to establish that it is suitable for testing empirical hypotheses.Krippendorff (1980), working within the field of content analysis, describes a way ofestablishing reliability, which applies here.4.1 Tests of reliabilityKrippendorff argues that there are three different ests of reliability with increasingstrength.
The first is stability, also sometimes called test-rest reliability, or intertestvariance; a coder's judgments hould not change over time.
The second is repro-ducibility, or intercoder variance, which requires different coders to code in the sameway.
The third is accuracy, which requires coders to code in the same way as someknown standard.
Stability can be tested by having a single coder code the same dataat different imes.
Reproducibility can be tested by training several coders and com-paring their results.
Accuracy can be tested by comparing the codings produced bythese same coders to the standard, if such a standard exists.
Where the standard isthe coding of the scheme's "expert" developer, the test simply shows how well thecoding instructions fit the developer's intention.Whichever type of reliability is being assessed, most coding schemes involve plac-ing units into one of n mutually exclusive categories.
This is clearly true for the di-alogue structure coding schemes described here, once the dialogues have been seg-mented into appropriately sized units.
Less obviously, segmentation also often fits thisdescription.
If there is a natural set of possible segment boundaries that can be treatedas units, one can recast segmentation as classifying possible segment boundaries aseither actual segment boundaries or nonboundaries.
Thus for both classification andsegmentation, the basic question is what level of agreement coders reach under thereliability tests.4.2 Interpreting reliability resultsIt has been argued elsewhere (Carletta 1996) that since the amount of agreement onewould expect by chance depends on the number and relative frequencies of the cate-gories under test, reliability for category classifications should be measured using thekappa coefficient.
1 Even with a good yardstick, however, care is needed to determine1 The kappa coefficient (K) (Siegel and Castellan 1988) measures pairwise agreement among a set ofcoders making category judgments, correcting for chance expected agreement.K = (P (A)  - P (E ) ) / (1  - P(E)), where P(A)  is the proportion of times that the coders agree and P(E)  isthe proportion of times that one would expect hem to agree by chance.24Carletta et al Dialogue Structure Codingfrom such figures whether or not the exhibited agreement is acceptable, as Krippen-dorff (1980) explains.
Reliability in essence measures the amount of noise in the data;whether or not that will interfere with results depends on where the noise is and thestrength of the relationship being measured.
As a result, Krippendorff warns againsttaking overall reliability figures too seriously, in favor of always calculating reliabilitywith respect to the particular hypothesis under test.
Using a, a generalized version ofkappa, which also works for ordinal, interval, and ratio-scaled ata, he remarks thata reasonable rule of thumb for associations between two variables that both rely onsubjective distinctions i to require a > .8, with .67 < a < .8 allowing tentative con-clusions to be drawn.
Krippendorff also describes an experiment by Brouwer in whichEnglish-speaking coders reached a = .44 on the task of assigning television charactersto categories with complicated Dutch names that did not resemble English words!
It isinteresting to note that medical researchers have agreed on much less strict guidelines,first drawn up by Landis and Koch (1977), who call K < 0 "poor" agreement, 0 to .2"slight", .21 to .40 "fair", .41 to .60 "moderate", .61 - .80 "substantial", and .81 to 1"near perfect".
Landis and Koch describe these ratings as "clearly arbitrary, but useful'benchmarks'" (p. 165).Krippendorff also points out that where one coding distinction relies on the re-sults of another, the second istinction cannot be reasonable unless the first also is.
Forinstance, it would be odd to consider a classification scheme acceptable if coders wereunable to agree on how to identify units in the first place.
In addition, when assessingsegmentation, it is important to choose the class of possible boundaries sensibly.
Al-though kappa corrects for chance xpected agreement, i  is still susceptible to order ofmagnitude differences in the number of units being classified, when the absolute num-ber of units placed in one of the categories remains the same.
For instance, one wouldobtain different values for kappa on agreement for move segment boundaries usingtranscribed word boundaries and transcribed letter boundaries, imply because thereare so many extra agreed nonboundaries in the transcribed letter case.
Despite thesewarnings, kappa has clear advantages over simpler metrics and can be interpreted aslong as appropriate care is used.4.3 Reliability of Move CodingThe main move and game cross-coding study involved four coders, all of whom hadalready coded substantial portions of the Map Task Corpus.
For this study, they simplysegmented and coded four dialogues using their normal working procedures, whichincluded access to the speech as well as the transcripts.
All of the coders interactedverbally with the coding developers, making it harder to say what they agree uponthan if they had worked solely from written instructions.
On the other hand, thisis a common failing of coding schemes, and in some circumstances it can be moreimportant to get the ideas of the coding scheme across than to tightly control how itis done.4.3.1 Reliability of Move Segmentation.
First, the move coders agree on how to seg-ment a dialogue into moves.
Two different measures of agreement are useful.
In thefirst, kappa is used to assess agreement on whether or not transcribed word boundariesare also move segment boundaries.
On average, the coders marked move boundariesroughly every 5.7 words, so that there were roughly 4.7 times as many word bound-aries that were not marked as move boundaries as word boundaries that were.
The sec-ond measure, similar to information retrieval metrics, is the actual agreement reachedmeasuring pairwise over all locations where any coder marked a boundary.
That is,the measure considers each place where any coder marked a boundary and averages25Computational Linguistics Volume 23, Number 1the ratio of the number of pairs of coders who agreed about that location over the totalnumber of coder pairs.
Note that it would not be possible to define "unit" in the sameway for use in kappa because then it would not be possible for the coders to agree ona nonboundary classification.
Pairwise percent agreement is the best measure to usein assessing segmentation tasks when there is no reasonable independent definition ofunits to use as the basis of kappa.
It is provided for readers who are skeptical aboutour use of transcribed word boundaries.The move coders reached K = .92 using word boundaries as units (N = 4, 079\[the number of units\], k = 4 \[the number of coders\]); pairwise percent agreementon locations where any coder had marked a move boundary was 89% (N = 796).Most of the disagreement fell into one of two categories.
First, some coders marked aREADY move but the others included the same material in the move that followed.
Onecoder in particular was more likely to mark READY moves, indicating either greatervigilance or a less restrictive definition.
Second, some coders marked a reply, whileothers split the reply into a reply plus some sort of move conveying further informationnot strictly elicited by the opening question (i.e., an EXPLAIN, CLARIFY, or INSTRUCT).This confusion was general, suggesting that it might be useful to think more carefullyabout the difference between answering a question and providing further information.It also suggests possible problems with the CLARIFY category, since unlike EXPLAINand INSTRUCT moves, most CLARIFY moves follow replies, and since CLARIFY movesare intended to contain unelicited information.
However, in general the agreement onsegmentation reached was very good and certainly provides a solid enough foundationfor more classification.4.3.2 Reliability of Move Classification.
The argument that move classification is reli-able uses the kappa coefficient; units in this case are moves for which all move codersagreed on the boundaries urrounding the move.
Note that it is only possible to mea-sure reliability of move classification over move segments where the boundaries wereagreed.
The more unreliable the segmentation, the more data must be omitted.
Clas-sification results can only be interpreted if the underlying segmentation is reasonablyrobust.Overall agreement on the entire coding scheme was good (K = .83, N = 563,k = 4), with the largest confusions between (1) CHECK and QUERY-YN, (2) INSTRUCT andCLARIFY, and (3) ACKNOWLEDGE, READY, and REPLY-Y.
Combining categories, agreementwas also very good (K = .89) for whether a move was an initiation type or a responseor ready type.
For agreed initiations themselves, agreement was very high (K -~ .95,N = 243, k = 4) on whether the initiation was a command (the INSTRUCT move),a statement (the EXPLAIN move), or one of the question types (QUERY-YN, QUERY-W,CHECK, or ALIGN).
Coders were also able to agree on the subclass of question (K = .82,N = 98, k = 4).
Coders could also reliably classify agreed responses as ACKNOWLEDGE,CLARIFY, or one of the reply categories (K = .86, N = 236, k = 4).
However, codershad a little more difficulty (K = .75, N = 132, k = 4) distinguishing between differenttypes of moves that all contribute new, unelicited information (INSTRUCT, EXPLAIN, andCLARIFY).4.3.3 Reliability of Move Classification from Written Instructions.
For a workshopsponsored by the University of Pennsylvania, three non-HCRC computational linguistsand one of the original coding developers, who had not done much coding, movecoded a Map Task dialogue from written instructions only, using just the transcriptand not the speech source.
Agreement on move classification was K = .69 (N  139,k = 4).
Leaving the coding developer out of the coder pool did not change the results26Carletta et al Dialogue Structure Coding(K = .67, k = 3), suggesting that the instructions conveyed his intentions fairly well.The coding developer matched the official Map Task coding almost entirely.
One codernever used the CHECK move; when that coder was removed from the pool, K = .73(k = 3).
When CHECK and QUERY-YN were conflated, agreement was K = .77 (k =4).
Agreement on whether a move was an initiation, response, or ready type wasgood (K = .84).
Surprisingly, non-HCRC coders appeared to be able to distinguish theCLARIFY move better than in-house coders.
This amount of agreement seems acceptablegiven that this was a first coding attempt for most of these coders and was probablydone quickly.
Coders generally become more consistent with experience.4.3.4 Reliability of Move Coding in Another Domain.
Move coding is perhaps thelevel of coding most useful for work in other domains.
To test how well the schemewould transfer, it was applied by two of the coders from the main move reliabilitystudy to a transcribed conversation between ahi-fi sales assistant and a married coupleintending to purchase an amplifier.
Dialogue openings and closings were omitted sincethey are well understood but do not correspond to categories in the classificationscheme.
The coders reached K -- .95 (N -- 819,k = 2) on the move segmentationtask, using word boundaries as possible move boundaries, and K -- .81 (N -- 80, k --2) for move classification.
These results are in line with those from the main trial.The coders recommended adding a new move category specifically for when oneconversant completes or echoes an utterance begun by another conversant.
Neither ofthe coders used INSTRUCT, READY, or CHECK moves for this dialogue.4.4 Reliability of Game CodingThe game coding results come from the same study as the results for the expert movecross-coding results.
Since games nest, it is not possible to analyze game segmentationin the same way as was done for moves.
Moreover, it is possible for a set of coders toagree on where the game begins and not where it ends, but still believe that the gamehas the same goal, since the game's goal is largely defined by its initiating utterance.Therefore, the best analysis considers how well coders agree on where games startand, for agreed starts, where they end.
Since game beginnings are rare compared toword boundaries, pairwise percent agreement is used.Calculating as described, coders reached promising but not entirely reassuringagreement on where games began (70%, N = 203).
Although one coder tended tohave longer games (and therefore fewer beginnings) than the others, there was nostriking pattern of disagreement.
Where the coders managed to agree on the begin-ning of a game (i.e., for the most orderly parts of the dialogues), they also tendedto agree on what type of game it was (INSTRUCT, EXPLAIN, QUERY-W, QUERY-YN, ALIGN,or CHECK) (K ---- .86, N = 154, k -- 4).
Although this is not the same as agreeingon the category of an initiating move because not all initiating moves begin games,disagreement s ems from the same move naming confusions (notably, the distinctionbetween QUERY-YN and CHECK).
There was also confusion about whether a game withan agreed beginning was embedded or not (K -- .46).
The question of where a gameends is related to the embedding subcode, since games end after other games that areembedded within them.
Using just the games for which all four coders agreed on thebeginning, the coders reached 65% pairwise percent agreement on where the gameended.
The abandoned game subcode turned out to be so scarce in the cross-codingstudy that it was not possible to calculate agreement for it, but agreement is probablypoor.
Some coders have commented that the coding practice was unstructured enoughthat it was easy to forget to use the subcode.To determine stability, the most experienced coder completed the same dialogue27Computational Linguistics Volume 23, Number 1twice, two months and many dialogues apart.
She reached better agreement (90%;N = 49) on where games began, suggesting that one way to improve the coding wouldbe to formalize more clearly the distinctions that she believes herself to use.
When sheagreed with herself on where a game began, she also agreed well with herself aboutwhat game it was (K = .88, N = 44, the only disagreements being confusions betweenCHECK and QUERY-YN), whether or not games were embedded (K = .95), and where thegames ended (89%).
There were not enough instances of abandoned games marked totest formally, but she did not appear to use the coding consistently.In general, the results of the game cross-coding show that the coders usually agree,especially on what game category to use, but when the dialogue participants beginto overlap their utterances or fail to address each other's concerns clearly, the gamecoders have some difficulty agreeing on where to place game boundaries.
However,individual coders can develop a stable sense of game structure, and therefore if nec-essary, it should be possible to improve the coding scheme.4.5 Reliability of Transaction CodingUnlike the other coding schemes, transaction coding was designed from the beginningto be done solely from written instructions.
Since it is possible to tell uncontroversiallyfrom the video what the route follower drew and when they drew it, reliability hasonly been tested for the other parts of the transaction coding scheme.The replication involved four naive coders and the "expert" developer of thecoding instructions.
All four coders were postgraduate students at the University ofEdinburgh; none of them had prior experience of the Map Task or of dialogue ordiscourse analysis.
All four dialogues used different maps and differently shapedroutes.To simplify the task, coders worked from maps and transcripts.
Since intonationalcues can be necessary for disambiguating whether some phrases uch as "OK" and"right" close a transaction or open a new one, coders were instructed to place bound-aries only at particular sites in the transcripts, which were marked with blank lines.These sites were all conversational move boundaries except those between READYmoves and the moves following them.
Note that such move boundaries form a set ofindependently derived units, which can be used to calculate agreement on transactionsegmentation.
The transcripts did not name the moves or indicate why the potentialtransaction boundaries were placed where they were.Each subject was given the coding instructions and a sample dialogue xtract andpair of maps to take away and examine at leisure.
The coders were asked to returnwith the dialogue xtract coded.
When they returned they were given a chance to askquestions.
They were then given the four complete dialogues and maps to take awayand code in their own time.
The four coders did not speak to each other about theexercise.
Three of the four coders asked for clarification of the OVERVIEW distinction,which turned out to be a major source of unreliability; there were no other queries.4.5.1 Measures.
Overall, each coder marked roughly a tenth of move boundaries astransaction boundaries.
When all coders were taken together as a group, the agreementreached on whether or not conversational move boundaries are transaction boundarieswas K = .59 (N = 657, k = 5).
The same level of agreement (K = .59) was reachedwhen the expert was left out of the pool.
This suggests the disagreement is generalrather than arising from problems with the written instructions.
Kappa for differentpairings of naive coders with the expert were .68, .65, .53, and .43, showing consider-able variation from subject o subject.
Note that the expert interacted minimally withthe coders, and therefore differences were not due to training.28Carletta et al Dialogue Structure CodingAgreement on the placement of map reference points was good; where the codersagreed that a boundary existed, they almost invariably placed the begin and endpoints of their segments within the same four centimeter segment of the route, andoften much closer, as measured on the original A3 (296 x 420 mm) maps.
In contrast,the closest points that did not refer to the same boundary were usually five centime-ters apart, and often much further.
The study was too small for formal results abouttransaction category.
For 64 out of 78 boundaries marked by at least two coders, thecategory was agreed.4.5.2 Diagnostics.
Because this study was relatively small, problems were diagnosedby looking at coding mismatches directly rather than by using statistical techniques.Coders disagreed on where to place boundaries with respect o introductory questionsabout a route segment (such as "Do you have the swamp?
", when the route giverintends to describe the route using the swamp) and attempts by the route follower tomove on (such as "Where do I go now?").
Both of these confusions can be correctedby clarifying the instructions.
In addition, there were a few cases where coders wereallowed to place a boundary on either side of a discourse marker, but the coders didnot agree.
Using the speech would probably help, but most uses of transaction codingwould not require boundary placement this precise.
OVERVIEW transactions were toorare to be reliable or useful and should be dropped from future coding systems.Finally, coders had a problem with "grain size"; one coder had many fewer trans-actions than the other coders, with each transaction covering a segment of the routewhich other coders split into two or more transactions, indicating that he thought heroute givers were planning ahead much further than the other coders did.
This is ageneral problem for discourse and dialogue segmentation.
Greene and Cappella (1986)show very good reliability for a monologue segmentation task based on the "idea"structure of the monologue, but they explicitly tell the coders that most segments aremade up of two or three clauses.
Describing a typical size may improve agreement,but might also weaken the influence of the real segmentation criteria.
In addition,higher-level segments such as transactions vary in size considerably.
More discussionbetween the expert and the novices might also improve agreement on segmentation,but would make it more difficult for others to apply the coding systems.5.
ConclusionsSubjective coding has been described for three different levels of task-oriented dialoguestructure, called conversational moves, games, and transactions, and the reliability ofall three kinds of coding discussed.
The codings were devised for use with the HCRCMap Task Corpus.
The move coding divides the dialogue up into segments correspond-ing to the different discourse goals of the participants and classifies the segments into1 of 12 different categories, ome of which initiate a discourse xpectation and someof which respond to an existing expectation.
The coders were able to reproduce themost important aspects of the coding reliably, such as move segmentation, classifyingmoves as initiations or responses, and subclassifying initiation and response types.
Thegame coding shows how moves are related to each other by placing into one game allmoves that contribute to the same discourse goal, including the possibility of embed-ded games, such as those corresponding to clarification questions.
The game codingwas somewhat less reproducible but still reasonable.
Individual coders can come tointernally stable views of game structure.
Finally, the transaction coding divides theentire dialogue into subdialogues corresponding to major steps in the participants'plan for completing the task.
Although transaction coding has some problems, the29Computational Linguistics Volume 23, Number 1coding can be improved by correcting a few common confusions.
Game and movecoding have been completed on the entire 128 dialogue Map Task Corpus; transactioncoding is still experimental.Game and move coding are currently being used to study intonation both in one-word English utterances (Kowtko 1995) and in longer utterances across languages(Grice et al 1995), the differences between audio-only, face-to-face, text-based, andvideo-mediated communication (Doherty-Sneddon et al, forthcoming; Newlands, An-derson, and Mullin 1996), and the characteristics of dialogue where one of the partic-ipants is a nonfluent Broca-type aphasic (Merrison, Anderson, and Doherty-Sneddon1994).
In addition, the move coded corpus has been used to train a program to spotthe dialogue move category based on typical word patterns, in aid of speech recogni-tion (Bird et al 1995).
The move categories themselves have been incorporated into acomputational model of move goals within a spoken dialogue system in order to helpthe system predict what move the user is making (Lewin et al 1993).AcknowledgmentsThis work was completed within theDialogue Group of the HumanCommunication Research Centre.
It wasfunded by an Interdisciplinary ResearchCentre Grant from the Economic and SocialResearch Council (U.K.) to the Universitiesof Edinburgh and Glasgow and grantnumber G9111013 of the Joint CouncilsInitiative.
Authors JC and AI areresponsible for developing the transactioncoding scheme and for carrying out thereliability studies; all authors contributed tothe development of the move and gamecoding schemes.
We would like to thankour anonymous reviewers for theircomments on the draft manuscript.ReferencesAhrenberg, Lars, Nils Dahlb/ick, and ArneJ6nsson.
1995.
Coding schemes for studiesof natural language dialogue.
InProceedings ofthe AAAI 1995 SpringSymposium on Empirical Methods inDiscourse Interpretation and Generation,pages 8-13, March.Alexandersson, Jan, Elisabeth Maier, andNorbert Reithinger.
1995.
A robust andefficient hree-layered dialoguecomponent for a speech-to-speechtranslation system.
In Proceedings oftheSeventh European Meeting of the Associationfor Computational Linguistics, pages188-193.Anderson, Anne H., Miles Bader,Ellen Gurman Bard, Elizabeth Boyle,Gwyneth Doherty, Simon Garrod,Stephen Isard, Jacqueline Kowtko, JanMcAllister, Jim Miller, Catherine Sotillo,Henry Thompson, and Regina Weinert.1991.
The HCRC Map Task Corpus.Language and Speech, 34(4):351-366.Bird, Stuart, Sue Browning, Roger Moore,and Martin Russell.
1995.
Dialogue moverecognition using topic spottingtechniques.
In ESCA Workshop on SpokenDialogue Systems--Theories and Applications,pages 45-48, May.Carletta, Jean.
1996.
Assessing agreement onclassification tasks: The kappa statistic.Computational Linguistics, 22(2):249-254.Carletta, Jean, Amy Isard, Stephen Isard,Jacqueline Kowtko, GwynethDoherty-Sneddon, a d Anne Anderson.1996.
HCRC dialogue structure codingmanual.
Technical Report HCRC/TR-82,Human Communication Research Centre,University of Edinburgh, June.Carlson, Lauri.
1983.
Dialogue Games: AnApproach to Discourse Analysis.
D. Reidel.Clark, Herbert and Edward Schaefer.
1989.Contributing to discourse.
CognitiveScience, 13:259-294.Condon, Sherri L. and Claude G. Cech.1996.
Functional comparison offace-to-face and computer-mediateddecision-making interactions.
In SusanC.
Herring, editor, Computer-MediatedConversation: Linguistic, Social andCross-Cultural Perspectives, pages 65-80.John Benjamins.Doherty-Sneddon, Gwyneth, Anne H.Anderson, Claire O'Malley, SteveLangton, Simon Garrod, and Vicki Bruce.Forthcoming.
Face-to-face and videomediated communication: A comparisonof dialogue structure and taskperformance.
Human CommunicationResearch Centre.Greene, John O. and Joseph N. Cappella.1986.
Cognition and talk: The relationshipof semantic units to temporal patterns offluency in spontaneous speech.
Languageand Speech, 29(2):141-157.30Carletta et al Dialogue Structure CodingGrice, Martine, Ralf Benzrnuller, MichelinaSavino, and Bistra Andreeva.
1995.
Theintonation of queries and checks acrosslanguages: Data from Map Taskdialogues.
In Proceedings ofthe ThirteenthInternational Congress of Phonetic Sciences,volume 3, pages 648-651, August.Grice, Martine and Michelina Savino.
1995.Intonation and communicative function ina regional variety of Italian.
In Phonus 1,pages 19-32.
Institute of Phonetics,University of the Saarland.Grosz, Barbara nd Candace Sidner.
1986.Attentions, intentions, and the structureof discourse.
Computational Linguistics,12(3):175-204.Houghton, George.
1986.
The Production ofLanguage in Dialogue: A ComputationalModel.
Ph.D. thesis, University of Sussex,April.Kowtko, Jacqueline C. 1995.
The function ofintonation in spontaneous and readdialogue.
In Proceedings ofthe XIIIthInternational Congress of Phonetic Sciences,volume 2, pages 286-289.Krippendorff, Klaus.
1980.
Content Analysis:An introduction to its Methodology.
SagePublications.Landis, J. R. and G. G. Koch.
1977.
Themeasurement of observer agreement forcategorical data.
Biometrics, 33:159-174.Lewin, Ian, Martin Russell, David Carter,Sue Browning, Keith Ponting, andStephen Pulman.
1993.
A speech basedroute enquiry system built from generalpurpose components.
In Proceedings ofthe3rd European Conference on SpeechCommunication a d Technology(EUROSPEECH-93), September.Merrison, Andrew John, Anne H. Anderson,and Gwyneth Doherty-Sneddon.
1994.
Aninvestigation i to the communicativeabilities of aphasic subjects in taskoriented ialogue.
Technical ReportRP-50, Human Communication ResearchCentre, June.Nagata, Masaaki and Tsuyoshi Morimoto.1993.
An experimental statistical dialoguemodel to predict he speech act type ofthe next utterance.
In Katsuhiko Shirai,Tetsunori Kobayashi, and YasunariHarada, editors, Proceedings oftheInternational Symposium on Spoken Dialogue,pages 83--86.Newlands, Alison, Anne H. Anderson, andJim Mullin.
1996.
Dialog structure andcooperative task performance in twoCSCW environments.
In J. Connolly,editor, Linguistic Concepts and Methods inCSCW.
Springer-Verlag, chapter 5, pages41--60.Power, Richard J. D. 1979.
The organisationof purposeful dialogues.
Linguistics,17:107-152.Siegel, Sidney and N. J. Castellan, Junior.1988.
Nonparametric Statistics for theBehavioral Sciences, econd edition.McGraw-Hill.Sinclair, John M. and R. Malcolm Coulthard.1975.
Towards an Analysis of Discourse: TheEnglish Used by Teachers and Pupils.
OxfordUniversity Press.Sutton, Stephen, Brian Hansen, TerriLander, David G. Novick, and RonaldCole.
1995.
Evaluating the effectiveness ofdialogue for an automated spokenquestionnaire.
In Proceedings ofthe AAAI1995 Spring Symposium on EmpiricalMethods in Discourse Interpretation andGeneration, pages 156-161, March.Walker, Marilyn and Steve Whittaker.
1990.Mixed initiative in dialogue: Aninvestigation i to discourse segmentation.In Proceedings ofthe 28th Annual Meeting,Association for Computational Linguistics,pages 70-78.31
