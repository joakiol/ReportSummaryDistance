Towards Ontology-Based Natural Language ProcessingDominique Estival, Chris Nowak and Andrew ZschornHuman Systems Integration GroupDefence Science and Technology OrganisationPO Box 1500, Edinburgh SA 5111AUSTRALIA{Dominique.Estival,Chris.Nowak,Andrew.Zschorn}@dsto.defence.gov.auAbstractConceptualising a domain has long beenrecognised as a prerequisite forunderstanding that  domain and processinginformation about it.
Ontologies areexplicit specifications of conceptualisationswhich are now recognised as importantcomponents of information systems andinformation processing.
In this paper, wedescribe a project in which ontologies arepart of the reasoning process used forinformation management and for thepresentation of information.
Bothaccessing and  presenting information  aremediated via natural language and theontologies are coupled with the lexiconused in the natural language component.1 IntroductionOntologies are now being recognised as importantcomponents of information systems andinformation processing.
It is commonly acceptedthat an ontology is an explicit specification of aconceptualisation (Gruber, 1995).
In the areas ofknowledge representation and reasoning (KR) andof conceptual modelling, it has long beenrecognised that conceptualising a domain is aprerequisite for understanding the domain andprocessing information about the domain,especially in the case of large, non-trivial domains.Nowadays, there is no clear-cut border betweenlarge and small domains, simply becauseinformation systems are no longer isolated but areparts of the global information system and need tobe interoperable.
Hence, conceptualisations andontologies are required for all kinds of informationsystems and information processing.
In somecases it is not clear yet what functions andadvantages ontologies can offer, but there is nodoubt that in every case ontologies do offersomething: at the very least they offer a way toaddress meaning of terms (concepts, relations)required for information processing.This paper attempts to provide some suggestionson how natural language processing can benefitfrom using ontologies.
We present a large-scaleresearch project in which ontologies are part of thereasoning process used for informationmanagement and for the presentation ofinformation.
Users' access to information and thepresentation of information to users are bothmediated via natural language, and the ontologiesused in the reasoning component are coupled withthe lexicon used in the natural languagecomponent.In Section 2,  we describe the FOCAL (FutureOperations Centre Analysis Laboratory) project:both the ontological processing and the naturallanguage processing work presented here are basedon the relevant aspects of FOCAL.
In Section 3,we present ontology-related work for FOCAL andin Section 4, the NLP-related aspects of FOCAL.In Section 5, we show how ontologies and NLP arecombined.
Section 6 summarises the current stateof this work and indicates directions for futureresearch.2 Future Operations Centre AnalysisLaboratory (FOCAL)The Future Operations Centre Analysis Laboratory(FOCAL) is a research project whose goal is to"pioneer a paradigm shift in commandenvironments through a superior use of capabilityand greater situation awareness" (FOCAL TaskPlan).
In part, this involves building a high-levelinformation fusion system for the military domain(Lambert, 2003; FOCAL, 2002).To support this goal, the FOCAL facility wasdesigned to experiment with innovativetechnologies.
FOCAL contains a large-screen(150?)
semi-immersive virtual reality environmentas its primary display, allowing vast quantities ofinformation (real or virtual) to be displayed.Spoken dialogue with virtual characters known asVAs (Virtual Advisers) is one of the means ofdelivering information (Estival et al, 2003).Within the FOCAL project, the NaturalLanguage Processing (NLP) and the KnowledgeRepresentation and Reasoning (KR) workpackages are tasked with providing appropriateNLP and KR functionalities, including processingnatural language queries and providing aformalisation of the domain and reasoningcapabilities.
These two work packages are closelyrelated in that a natural language query is to beprocessed, mapped to its formal representation andanswered by a reasoning subsystem, and then anatural language answer is returned to the user.Current FOCAL work is focused onimplementing a scenario, which is located within aparticular military situation and describes amilitary domain, a limited (in space and time)region of the world, and other relevant elements ofthat situation.
Among other things, the domaindescription requires dealing with geography,logistics and planning.The FOCAL architecture is agent-based anduses the CoABS (Control of Agent Based Systems)Grid as its infrastructure (Global InfoTek, 2002).The CoABS Grid was designed to allow a largenumber of heterogeneous procedural, object-oriented and agent-based systems to communicate.FOCAL agents process information, communicateand collaborate.
Most agents are implemented inATTITUDE and communication between agents isaccomplished via string messages (Wark et al,2004).Humans are also involved in FOCAL, as the endusers who interact with the system to perform theirwork and achieve their goal: successfully planningand conducting an operation.
The current scenarioprovides a testbed for the system.
Extensions ofthe scenario and new scenarios for differentdomains will ensure that FOCAL functions asexpected outside of the limited domain of thecurrent scenario.There are many aspects of FOCAL which arenot directly related to NLP and KR activities, andwhich are therefore excluded from this discussion.In the rest of this paper, only aspects relevant toNLP and KR are considered.3 Ontological Reasoning for FOCALThe main task of the KR work package within theFOCAL project is to provide the FOCAL userswith automated knowledge management and withautomated reasoning capabilities about a complexdomain.
Ontologies have been chosen as the typeof representation most suited for this task, and theprovision of  ontological reasoning capabilities hasbeen one of the main thrusts.
An ontology forFOCAL has been built and a number of reasoningactivities are now ontology-based.3.1 ConceptualisationLambert (2001) advocated Dennett's IntentionalStance framework (Dennett, 1987).
Dennettidentified three means by which people predict andexplain outcomes.1.
The first is the Physical Stance, where oneengages principles of Physics to predictoutcomes.
People employ this when playingsnooker or assessing the trajectories ofprojectile weapons.2.
The second is the Design Stance, where oneengages principles of design to predict andexplain outcomes.
People employ this whentroubleshooting an automobile fault or codingand maintaining computer programs.3.
The third is the Intentional Stance, where oneengages principles of rationality to predictoutcomes.
People employ this whenforecasting the actions of a fighter pilot orwhen competing with an advanced computergame.The Design Stance is used whenever the physics ofthe situation is too difficult or laborious.
TheIntentional Stance is used whenever the designunderpinning the situation is too difficult orlaborious.Lambert (2001, 2003) adopts Dennett'sframework for representing knowledge about theworld, but adds two other layers: a metaphysicallayer below the physical layer, and a social layerabove the intentional layer.
Therefore, formaltheories that allow one to represent and reasonabout the world, would be assigned to thefollowing levels:1.
Metaphysical theories, for what there is, whereand when.2.
Physical theories, for the operation of aspectsof the environment.3.
Functional theories, for the operation ofdesigned artefacts.4.
Intentional  theories, for the operation ofindividual minds.5.
Social theories, for the operation of groups ofindividuals.This five level framework proposed by Lambertsuggests a way to conceptualise the domain interms of processes, namely metaphysical, physical,functional, intentional and social processes (M, P,F, I, S processes).
The resulting conceptualisationis referred to as a Mephisto conceptualisation(Nowak, 2003) and is the basis for the ontologieswe are constructing for FOCAL.3.2 Ontological languagesOntologies are concerned with the meaning ofterms.
It is therefore appropriate when selecting anontological   language to choose a language whichis equipped with a formal semantics.
Thisrequirement excludes XML from the list ofpossible candidates, as XML does not offersemantics, but only syntax.
RDF provides somesemantics, but proper, formal semantics requireslanguages based on logics.
Description logics(DL) provide some frameworks, and severallanguages used for building and processingontologies are DL-based, e.g.
DAML andDAML+OIL languages, including such languagesas SHF and SHIQ, and the OWL language(Horrocks et al, 2003).A commonly  used view of an architecture forthe Semantic Web is a layered architecture, withXML as the bottom layer, RDF as the middlelayer, and logic (e.g.
DL) as the top layer(sometimes the top layer distinguishes ontologicalvocabulary, logic, proof;  on top of the logic layera trust layer is sometimes placed).
The logic layeris a necessary component if the Semantic Web is tobe equipped with a formal semantics; this logiclayer can be based on a description logic (such asSHIQ or OWL), on first-order logics, KIF orCycL, and whichever logic is used determines theexpressibility and tractability of the framework,but in every case a formal semantics is added.Frameworks based on DL (description logics) aremost successful, because they provide expressivelanguages with practical tractability.
SHIQ is onesuch language, another is the closely relatedlanguage OWLThe ontological language chosen for FOCAL isSHIQ, a DL language of the DAML+OIL project(http://www.daml.org/), a successor of   the OILproject (http://www.ontoknowledge,org/oil/).FaCT (http://www.cs.man.ac.uk/~horrocks/FaCT/)is a reasoner for the SHIQ logic employed in theOilEd ontology editor (http://oiled.man.ac.uk/).The logic SHIQ has also been implemented in the(www.cs.concordia.ca/~faculty/haarslev/racer/)RACER project.SHIQ is closely related to OWL (Horrocks etal., 2003).
In fact, there are a few variants ofOWL, namely OWL Lite, OWL DL and OWLFull.
OWL Lite is similar to a description logicSHIF(D), while OWL DL is similar to adescription logic SHOIN(D).
The languageimplemented in the RACER framework is aversion of SHIQ, which provides somefunctionalities for dealing with individuals, anddealing with concrete domains; this makes theRACER?s version of SHIQ very close to OWLLite.
A proper discussion on these languages isbeyond the scope of the paper, but clearly theRACER language is an implemented  language andreasoner for a logic very close to OWL DL.References related to OWL, SHIQ and OIL include(Horrocks et al, 2003), (Bechhofer and Horrocks,2003) and  (Horrocks, Sattler and Tobies, 2000).3.3 Ontological frameworksOntology frameworks provide formalisms forbuilding ontologies, but do not provide thecontents.
Therefore, they should do at least twothings:?
provide a formal language in which theontologies can be   expressed or specified, and?
provide some reasoning capabilities, so that anontology can be  demonstrated to be consistent(i.e.
free of contradictions, assuming thatcontradictions indicate modelling mistakes orerrors).Given this standpoint, frameworks that do notprovide reasoning capabilities are unsatisfactory.Note also that a formal language is usually alogical language, with clearly specified syntax andsemantics, and the logic should be sound,complete, decidable, and hopefully tractable (ortractable in practice).
These properties of thelogical framework are necessary to obtainreasoning facilities.
The most attractive ontologyframeworks seem to be the following (see Table 1for a more detailed comparison of the differentframeworks):1. the OIL framework based on descriptionlogics,2.
the OntoEdit/OntoBroker framework (F-logic),3. the Ontolingua framework based on the KIFlogic.For FOCAL, we have chosen to employ the OILand RACER frameworks.
Ontologies are builtusing the OilEd ontology editor and verified usingFaCT.
At run-time, a RACER agent is initialisedwith the ontology (see section 3.4).Higher order relations and Description LogicAlthough description logics on which OIL andRACER are based allow only binary relations, weuse OIL and Racer in a way that also allows us toemploy arbitrary n-ary relations and higher-orderrelations.
Given that a ternary relation can berepresented as a binary relation that takes anotherbinary relation as one of its argument, any n-aryrelations can be represented via higher-orderrelations, i.e.
relations which take other relations asarguments.
Suppose that we want to implement asecond-order relation that takes as its firstargument a binary relation- more precisely, thesecond order relation takes as its first argumentinstances of that binary relation- rather thaninstances of a concept.
The instances of the binaryrelation can be mapped to instances of a newlycreated concept, i.e.
the concept of individualswhich are single entities but correspond to (and arelinked to) the instances of the binary relation.There is an exact correspondence between thesecond-order relation taking a binary relationinstance as its first argument and itsimplementation in terms of a binary relation thattakes as its first argument an instance of theconcept which has instances of the other binaryrelation as its individuals.
The approach wedescribed here has now been used to implement inthe FOCAL ontology information which extendsbeyond the binary relation based language.Multiple facts involving n-ary relation and higher-order relation are present in the current version ofthe FOCAL ontology.
ATTITUDE agents arecurrently being built to allow automated reasoningwith this extended language.Implemented OntologyAs mentioned in section 1 the FOCAL scenario,which is based on real material for trainingexercise, provides background information in anumber of domains, including geography, politicalsituation, logistics, weather.
For now, the scenarioalso specifies what kinds of questions can be askedby FOCAL users, to be answered by the FOCALagents.
The ontology serves as a formal, clearlyspecified knowledge base containing thebackground information and allowing the agents toquery that knowledge base and to get replieshelping them to answer the queries.An initial version of the FOCAL ontology hasbeen created manually using OilEd and verifiedusing FaCT.1 There are in fact several ontologies,for the different domains covered in the scenario,and an important research issue is that of thecombining (or merging) of the ontologies in thelarger FOCAL one.
Another issue is that themanual creation of the ontologies is a timeconsuming and tedious process, but the existenceof tools such as FaCT ensures that the result isconsistent and free of mistakes due to user inputerrors.3.4 Ontological reasoning1The FOCAL ontology currently contains over 300concepts, about 80 relations and over 100 individuals(plus a large number of facts connecting all of these).Both the FaCT and RACER reasoning agentsprovide reasoning facilities, FaCT during thebuilding of the ontologies to ensure coherence andconsistency, and RACER at run-time.
Whenintegrated within the FOCAL system, the RACERserver can be initialised with a given ontology andthere is a RACER client wrapped as a CoABSagent on the grid, which  can connect to the server.Other FOCAL agents, e.g.
the Dialogue Manager(see section 4.1), can then communicate with theRACER server (via the RACER client agent) andreceive answers using the ontology.The ontology can be also be accessed andqueried outside of the FOCAL system, still using aclient-server connection.?
Using OilEd, the ontology "focal.daml" can besaved in the DIG format as a file named"focal.dig".2?
The RACER server can be started andinitialised to the "focal.dig" ontology.?
A java package called jracer includes a testclient (http://www.lsi.upc.es/~jalvarez/) whichcan be used to connect to the RACER server.At the ">" prompt, queries can be entered.
Thequeries are received and replied to by the server.For instance, we show in (1) an example of a queryas to whether (the individual) AUSTRALIA is aninstance of (the concept) nation, and give theserver's answer to that query, i.e.
T (for true).
(1)  >  (individual-instance?
AUSTRALIA nation)T3.5 Hierarchies of concepts and relationsA DL-based ontology, such as our OilEd "Focal"ontology,  is a knowledge base (KB) expressed in aDL language.
Every DL language providesfacilities for defining concepts, with the relation ofsubsumption between the concepts being the corerelation and the basis for building the definitions.The set of concepts can be seen as an ordered set,the subsumption relation being the orderingrelation; hence, we have a hierarchy of concepts.There is also a hierarchy of relations ordered bythe subsumption relation.
These two  hierarchies,together with the concepts' definitions, can betaken to form a lexicon, i.e.
a list of words (for2OilEd can export to SHIQ, OWL and other formats.concepts and relations) with well-definedmeanings for those words.These two hierarchies of concepts and relationsthus provide a basis for a domain specific lexiconand one of the advantages which ontologies canoffer NLP systems is that a properly builtknowledge base (as on ontology) will allow thesemi-automatic creation of a lexicon.4 NLP in FOCALThe underlying architecture for dialoguemanagement has been developed using ATTITUDEagents (Estival et al, 2003).
Input from FOCALusers can be either spoken or typed and isprocessed by the same NLP component.
We useNuance for speaker-independent speechrecognition (Nuance, 2002) and the open sourceRegulus NLP package  (Rayner et al, 2001) forgrammar development.3 We are in the process ofintegrating language input with input from otherdevices, e.g.
pointing devices such as mouse orwand, gesture tracking device and, in the future,gaze tracking.4.1 Dialogue AgentsThe FOCAL Dialogue Agents can be divided into3 categories: Input Agents, Internal ReasoningAgents and Output Agents.
The Input Agentscomprise:?
Speech InputThe Speech Input agent is a straightforwardwrapper around a Nuance Client implementation.It forwards on to the Input Fuser the interpretationsof speech recognition results (in the form of lists ofAttribute-Value pairs), notifications of failedrecognition events and the interpretations of typedinput.
It also passes on instructions to activate andde-activate the recogniser.?
Input FuserThe Input Fuser (IF) is responsible for receivingand combining user input.
This input can be viaspeech (Nuance), keyboard (typed input), gesture,gaze etc.
The IF turns streams of input events intoa Bayesian network of discrete communicative acts3The existing grammar was developed using Regulus 1,but we are currently developing a larger, more flexiblegrammar with Regulus 2 (Rayner et al, 2002) whichwill provide a broader coverage, allowing the morena?ve users to be recognised more easily.which are then interpreted by the DialogueManager.The Internal Reasoning Agents comprise:?
Reference ResolverThis is currently a stub, but the Reference Resolveris meant to assist other agents (particularly theInput Fuser and the Dialogue Manager) resolveanaphoric references found in user communicativeacts by maintaining context and linking dialoguevariables to referents.?
Dialogue ManagerThe Dialogue Manager (DM) is activated by amessage that includes an activation contextsymbol.
The DM receives the Bayesian network ofinterpretations of user(s) communicative acts fromthe IF and it finds the interpretation with thehighest probability that unifies with the currentdialogue context.
The DM then informs the IF ofwhich interpretation of the communicative act waschosen, so the IF can forward the full informationon to the Transcriber.
At the same time, the DMrequests that the Presentation Planner present theresponse to this communicative act; this request istermed a communicative goal.?
Presentation PlannerThe Presentation Planner (PP) receives requestsfrom the DM to achieve communicative goals.
Fornow a communicative goal will succeed if there isa presentation clip which is marked-up with theconjunction of the DM's activation context and themeaning representation for the query, but currentwork is extending the PP agent along the linesgiven in (Colineau and Paris, 2003).The Output Agents comprise:?
TranscriberThe Transcriber agent receives notification ofuser's communicative acts from IF and of thesystem's communicative acts from DM.
It producesan HTML listing of these communicative acts,which includes speech recognition results and alink pointing to the audio recording.?
Text-to-SpeechIf the output is to be presented verbally by theVirtual Advisers, it is sent to the Text-to-Speech(TTS) component.
We use the rVoice TTS system,which gives us a choice of voices for the differentVAs (rVoice, 2002).4.2 Lexicon for NLPAs described above, language processing isperformed by the Nuance/Regulus grammar.Regulus is an Open Source environment whichcompiles typed unification grammars into context-free grammar language models compatible with theNuance Toolkit.4The lexicon for Regulus 2 is of the form shownin (2) and (3), where the macro in (2) defines theproperties of a noun class, and the instances in (3)specify the lexical items belonging to that class, inthis case result, results, outcome, outcomes.
(2) macro defining noun classmacro(noun_like_result(Words,Sem),@noun(Words, [sem= @noun_sem(abstract, Sem),sem_n_type=abstract, takes_det_type=def\/null,n_of_mod_type=_])).
(3) examples of nouns for that class:@noun_like_result([result, results], result).
@noun_like_result([outcome, outcomes], result).4.3 Meaning representationThe Meaning Representation produced by the NLPcomponent, and passed on by the Speech Inputagent, is translated into an ATTITUDE expression.For example, if a user can ask the question givenin (4.a), it will first be translated into the(simplified)  list of  attribute value pairs given in(4.b) and sent to the Speech Input agent.
SpeechInput then translates these attribute value pairs intothe (simplified) ATTITUDE expression given in(4.c) and forwards it on to the Input Fuser agent.
(4) a.
What is our relationship with PNG?b.
(question whquestion concept relationship obj1Australia obj2 Papua_New_Guinea)c. (comm_act (?relationship AustraliaPapua_New_Guinea) from speaker type whquestion )5 Natural Language & Ontological Processingfor FOCALThere are at least two ways that ontologies canfacilitate language processing.
Firstly, an ontologycan be used directly when building the lexicon,defining the terms (concepts and relations) forcontent words.
Secondly, an ontology is aknowledge base  (KB), expressed in a formallanguage, and therefore it provides (formally4Regulus is described in detail in (Rayner et al, 2001).expressed) knowledge for more complex languageprocessing.5.1 Ontology and the lexiconWe view an ontology as a knowledge base,consisting of a structured list of concepts, relationsand individuals.
The ontology provides partialdefinitions for these, through the taxonomyrelation between the terms and the propertiesspecified for them.
An example of how a fragmentof a lexicon, for the content words in the domain,can be obtained from an ontology is presentedbelow.We give in (6) an ontology fragment, whereevery concept is listed in the format shown in (5).
(5)  (  concept_nlist-of-parents_of_concept_nlist-of-children_of_concept_n  )(6)   ( ( |ship|(|platform|)(|frigate|) )( |platform|(|asset|)(|aircraft| |ship|) )( |frigate|(|ship|)(|ffg|) ) )For completeness, we give in Figure 1 the actualOWL format for this fragment.<?xml version="1.0" encoding="ISO-8859-1"?><owls:Ontology xmlns:owls=http://www.w3.org/2002/OWL-XMLSchemaxmlns:xsd="http://www.w3.org/2001/XMLSchema"xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://www.w3.org/2002/OWL-XMLSchemahttp://potato.cs.man.ac.uk/owl/schemas/owl1-dl.xsd"><owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#platform"><owls:Classowls:name="file:/D:/ontology/focal.daml#asset"/></owls:Class> <owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#ffg"><owls:Classowls:name="file:/D:/ontology/focal.daml#frigate"/></owls:Class><owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#ship"><owls:Classowls:name="file:/D:/ontology/focal.daml#platform"/></owls:Class><owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#frigate"><owls:Class owls:name="file:/D:/ontology/focal.daml#ship"/></owls:Class><owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#aircraft"><owls:Classowls:name="file:/D:/ontology/focal.daml#platform"/></owls:Class><owls:Class owls:complete="false"owls:name="file:/D:/ontology/focal.daml#asset"/></owls:Ontology>Fig.
1:  FOCAL ontology fragment in OWL formatSimplified lexical entries for the words aircraft,airplane, airplanes, plane, planes, ship, ships,frigate, frigates and FFG are shown in (7) and (8).
(7) macro for noun class "platform":macro(noun_like_platform(Words,Sem),@noun(Words, [sem= @noun_sem(platform, Sem),sem_n_type=platform, takes_det_type=def\/null,n_of_mod_type=_])).
(8) examples of nouns for class "platform":@noun_like_platform([frigate, frigates], ship).
@noun_like_platform([ffg], ship).
@noun_like_platform([ship, ships], ship).@noun_like_platform([airplane,airplanes,plane,planes],aircraft).
@noun_like_platform([aircraft], aircraft).This example shows how synonyms are handledin our system, with the same semanticinterpretation, and the same parent class, given to anumber of lexical items.5.2 Ontology as knowledgeSince an ontology is a knowledge base expressedin a formal language, it provides formallyexpressed  knowledge for language processing.Although at this point not all this knowledge canbe used directly by the speech recognition systemwhich processes the speech input, nor by thegrammar which builds the meaningrepresentations, some of this knowledge canalready be used by the other Dialogue agents, inparticular the Dialogue Manager, and later by theReference Resolver.The best example is the resolution of ambiguity,such as the polysemy of some terms.
For instancethe name Adelaide can refer to a city (Adelaide inSouth Australia), a ship ("HMAS Adelaide"), ariver (the Adelaide River in the Northern Territoryof Australia), or even a person, (e.g.
"QueenAdelaide").
While, as shown in Section 5.1,synonymy is handled by the lexicon, polysemy isresolved by drawing on a variety of sources,including the ontology.When the Dialogue Manager receives from theInput Fuser a set of communicative acts, if one ofthese communicative acts correspond to distinctplausible interpretation results, e.g.
"Adelaide:{city, ship}", it can try to resolve theambiguity by using the context information and bysending a request to the KR agent.6 ConclusionThis paper has described our current work withinthe FOCAL project to combine ontologies builtwith the OIL/RACER framework with our spokendialogue system.
It provides some suggestions onhow ontologies can help a natural languageprocessing component build semanticrepresentations which are directly used in acomplex information management system.This is work in progress and a formal evaluationhas not yet been put in place.
However, thereviewers for this paper have rightly asked howthis would be conducted.
In the agent-basedarchitecture we use, each agent can be tested inisolation and we have already conducted tests toensure that the answers returned by the KR agentfor specific questions in our scenario are correctand consistent.
A more interesting evaluation willbe possible when the scenario is expanded, to seewhether unplanned answers returned when thesystem is asked new unscripted questions are infact useful to the users.
This will take place in thenext phase of the project.For now, we conclude that an ontology is aknowledge base which can serve as the basis forcreating the part of the lexicon for domain contentwords.
This is achieved by producing a list ofterms with their meanings, i.e.
partial definitionsgiven the two hierarchies in the ontology, and weare exploring methods to automate this process.ReferencesS.
Bechhofer and Ian Horrocks.
2003.
The Wonder WebOntology Language.
Report and Tutorial.S.
Blackburn.
1996.
The Oxford Dictionary ofPhilosophy.
Oxford University Press.Nathalie Colineau and C?cile Paris.
2003.
Frameworkfor the Design of Intelligent Multimedia PresentationSystems: An architecture proposal for FOCAL.CMIS Technical Report 03/92, CSIRO, May 2003.Daniel C. Dennet.
1987.
The Intentional Stance.Cambridge: MIT Press.Dominique Estival, Michael Broughton, AndrewZschorn, Elizabeth Pronger.
2003.
"Spoken Dialoguefor Virtual Advisers in a semi-immersive Commandand Control environment".
In Proceedings of the 4thSIGdial Workshop on Discourse and Dialogue,Sapporo, Japan.
pp.125-134.FOCAL.
2002.
DSTO and Virtual Reality.http://www.dsto.defence.gov.au/isl/focal.pdf.Global InfoTek Inc. 2002.
Control of Agent BasedSystems.
http://coabs.globalinfotek.com.T.
R. Gruber.
1995.
"Toward Principles for the Designof Ontologies Used for Knowledge Sharing".
Humanand Computer Studies,  vol.
43, no.
5-6.Ian Horrocks, Peter F. Patel-Schneider and Frank vanHarmelen.
2003.
"From SHIQ and RDF to OWL:The Making of a Web Ontology Language".
Journalof Web Semantics,vol.1, no,1, pp.7-26.Ian Horrocks, U. Sattler and S. Tobies.
2000.
"Practicalreasoning for very expressive description logics".Logic Journal of the IGPL, 8(3):239-263.Dale A. Lambert.
2001.
"An Exegesis of Data Fusion".In Soft Computing in Measurement and InformationAcquisition, eds.
L. Reznik and V. Kreinovich.Physica-Verlag.Dale A. Lambert.
2003.
"Grand Challenges ofInformation Fusion".
In Proceedings of the SixthInternational Conference on Information Fusion.Cairns, Australia.Chris Nowak.
2003.
"On ontologies for high-levelinformation fusion".
In Proceedings of the SixthInternational Conference on Information Fusion.Cairns, Australia.Nuance.
2002.  http://www.nuance.com/.Manny Rayner, John Dowding, Beth Ann Hockey.2001.
"A Baseline method for compiling typedunification grammars into context free languagemodels".
In Proceedings of Eurospeech 2001, pp729-732.
Aalborg, Denmark.Manny Rayner, Beth Ann Hockey, John Dowding.2002.
"Grammar Specialisation meets LanguageModelling".
ICSLP 2002.
Denver, USA.rVoice.
2002.
Rhetorical Systems,http://www.rhetoricalsystems.com/rvoice.html.Steven Wark, Andrew Zschorn, Michael Broughton,Dale Lambert.
2004.
"FOCAL: A CollaborativeMultimodal Multimedia Display Environment".
InProceedings of  SimTecT.
Canberra, Australia.
