Proceedings of the ACL 2007 Demo and Poster Sessions, pages 45?48,Prague, June 2007. c?2007 Association for Computational LinguisticsSemantic enrichment of journal articles using chemical named entityrecognitionColin R. BatchelorRoyal Society of ChemistryThomas Graham HouseMilton RoadCambridgeUK CB4 0WFbatchelorc@rsc.orgPeter T. CorbettUnilever Centre for Molecular Science InformaticsUniversity Chemical LaboratoryLensfield RoadCambridgeUK CB2 1EWptc24@cam.ac.ukAbstractWe describe the semantic enrichment of journalarticles with chemical structures and biomedi-cal ontology terms using Oscar, a program forchemical named entity recognition (NER).
Wedescribe how Oscar works and how it can beenadapted for general NER.
We discuss its imple-mentation in a real publishing workflow and pos-sible applications for enriched articles.1 IntroductionThe volume of chemical literature published has ex-ploded over the past few years.
The crossover betweenchemistry and molecular biology, disciplines which of-ten study similar systems with contrasting techniques anddescribe their results in different languages, has also in-creased.
Readers need to be able to navigate the literaturemore effectively, and also to understand unfamiliar termi-nology and its context.
One relatively unexplored methodfor this is semantic enrichment.
Substructure and simi-larity searching for chemical compounds is a particularlyexciting prospect.Enrichment of the bibliographic data in an article withhyperlinked citations is now commonplace.
However,the actual scientific content has remained largely unen-hanced, this falling to secondary services and experimen-tal websites such as GoPubMed (Delfs et al, 2005) orEBIMed (Rebholz-Schuhmann et al, 2007).
There area few examples of semantic enrichment on small (a fewdozen articles per year) journals such as Nature Chemi-cal Biology being an example, but for a larger journal itis impractical to do this entirely by hand.This paper concentrates on implementing semanticenrichment of journal articles as part of a publishingworkflow, specifically chemical structures and biomedi-cal terms.
In the Motivation section, we introduce Oscaras a system for chemical NER and recognition of ontol-ogy terms.
In the Implementation section we will discusshow Oscar works and how to set up ontologies for usewith Oscar, specifically GO.
In the Case study section wedescribe how the output of Oscar can be fed into a pub-lishing workflow.
Finally we discuss some outstandingambiguity problems in chemical NER.
We also comparethe system to EBIMed (Rebholz-Schuhmann et al, 2007)throughout.2 MotivationThere are three routes for getting hold of chemicalstructures from chemical text?from chemical compoundnames, from author-supplied files containing connectiontables, and from images.
The preferred representationof chemical structures is as diagrams, often annotatedwith curly arrows to illustrate the mechanisms of chem-ical reactions.
The structures in these diagrams are typ-ically given numbers, which then appear in the text inbold face.
However, because text-processing is more ad-vanced in this regard than image-processing, we shallconcentrate on NER, which is performed with a sys-tem called Oscar.
A preliminary overview of the sys-tem was presented by Corbett and Murray-Rust (2006).Oscar is open source and can be downloaded fromhttp://oscar3-chem.sourceforge.net/As a first step in representing biomedical content, weidentify Gene Ontology (GO) terms in full text.1 (TheGene Ontology Consortium, 2000) We have chosen a rel-atively simple starting point in order to gain experiencein implementing useful semantic markup in a publishingworkflow without a substantial word-sense disambigua-tion effort.
GO terms are largely compositional (Mungall,2004), hence incomplete matches will still be useful, andthat there is generally a low level of semantic ambiguity.For example, there are only 133 single-word GO terms,which significantly reduces the chance of polysemy forthe 20000 or so others.
In contrast, gene and protein1We also use other OBO ontologies, specifically those fornucleic acid sequences (SO) and cell type (CL).45(.
*) activity$ ?
(\1)(.
*) formation$ ?
?(.
*) synthesis$ ?
?ribonuclease ?
RNAse?
ribonuclease?alpha- (etc.)
?
?- (etc.)?
alpha- (etc.
)pluralize nounsstopwords ?
?Table 1: Example rules from ?Lucinda?, used for generat-ing recogniser input from OBO filesnames are generally short, non-compositional and oftenpolysemous with ordinary English words such as Cat orRat.3 ImplementationOscar is intended to be a component in larger workflows,such as the Sciborg system (Copestake et al, 2006).
Itis a shallow named-entity recogniser and does not per-form deeper parsing.
Hence there is no analysis of thetext above the level of the term, with the exception ofacronym matching, which is dealt with below, and sometreatment of the boldface chemical compound numberswhere they appear in section headings.
It is optimizedfor chemical NER, but can be extended to handle generalterm recognition.
The EBIMed system, in contrast, is apipeline, and lemmatizes words as part of a larger work-flow.To identify plurals and other variants of non-chemicalNEs we have a ruleset, nicknamed Lucinda, outlined inTable 1, for generating the input for the recogniser fromexternal data.
We use the plain-text OBO 1.2 format,which is the definitive format for the dissemination of theOBO ontologies.We strive to keep this ruleset as small as possible, withthe exception of determining plurals and a few other reg-ular variants.
The reason for keeping plurals outside theontology is that plurals in ordinary text and in ontologiescan have quite different meanings.There is also a short stopword list applied at this stage,which is different from Oscar?s internal stopword han-dling, described below.3.1 Named entity recognition and resolutionOscar has a recogniser to identify chemical names andontology terms, and a resolver which matches NEs to on-tology IDs or chemical structures.
The recogniser classi-fies NEs according to the scheme in Corbett et al (2007).The classes which are relevant here are CM, which iden-tifies a chemical compound, either because it appears inOscar?s chemical dictionary, which also contains struc-2 5 8 5 \s4 5 8 0 \sX1626 2 2 \s X 1 63X 1 6 4Figure 1: Cartoon of part of the recogniser.
The mappingbetween this automaton and example GO terms is givenin Table 2.GO term Regex pairbud neck 2585\s4580\s2585\s4580\sX162bud neck polarisome 2585\s4580\s622\s2585\s4580\s622\sX163polarisome 622\s622\sX164Table 2: Mapping in Fig.
1.
The regexes are purely il-lustrative.
IDs 162, 163 and 164 map on to GO:0005935,GO:0031560 and GO:0000133 respectively.tures and InChIs,2 or according to Oscar?s n-gram model,regular expressions and other heuristics and ASE, a sin-gle word ending in ?-ase?
or ?-ases?
and representing anenzyme type.
We add the class ONT to these, to coverterms found in ontologies that do not belong in the otherclasses, and STOP, which is the class of stopwords.We sketch the recogniser in Fig.
1.
To build the recog-niser: Each term in the input data is tokenized and thetokens converted into a sequence of digits followed by aspace.
These new tokens are concatenated and convertedinto a pair of regular expressions.
One of these expres-sions has X followed by a term ID appended to it.
Theseregex?regex pairs are converted into finite automata, theunion of which is determinized.
The resulting DFA is ex-amined for accept states.
For each accept state for whicha transition to X is also present, the sequences of digitsafter the X is used to build a mapping of accept states toontology IDs (Table 2).To apply the recogniser: The input text is tokenized,and for each token a set of representations is calculatedwhich map to sequences of digits as above.
We then makean empty set of DFA instances (a pointer to the DFA,2An InChI is a canonical identifier for a chemical com-pound.
http://www.iupac.org/inchi/46which state it?s in and which tokens it has matched sofar), and for each token, add a new DFA instance for eachDFA, and for each representation of the token, clone theDFA instance.
If it does not accept the digit-sequencerepresentation of the token, throw it away.
If it is in anaccept state, note which tokens it has matched, and if theaccept state maps to an ontology ID (ontID), we have anNE which can be annotated with the ontID.Take all of the potential NEs.
For all NEs that have thesame sequence of tokens, share all of the ontIDs.
Assignits class according to a priority list where STOP comesfirst and CM precedes ASE and ONT.
For the system inFig.
1, the phrase ?bud neck polarisome?
matches threeIDs.
We choose the longest?leftmost sequence.
If theresolver generates an InChI for an NE, we look up thisInChI in ChEBI (de Matos et al, 2006), a biochemicalontology, and take the ontology ID.
This has the effectof aligning ChEBI with other databases and systematicnomenclature.3.2 Gene OntologyIn working out how to mine the literature for GO terms,we have taken our lead from the domain experts, the GOeditors and the curators of the Gene Ontology Annotation(GOA) database.The Functional Curation task in the first BioCreativeexercise (Blaschke et al, 2005) is the closest we havefound to a systematic evaluation of GO term identifica-tion.
The brief was to assign GO annotations to humanproteins and recover supporting text.
The GOA curatorsevaluated the results (Camon et al, 2005) and list somecommon mistakes in the methods used to identify GOterms.
These include annotating to obsolete terms, pre-dicting GO terms on too tenuous a link with the originaltext, for example in one case the phrase ?pH value?
wasannotated to ?pH domain binding?
(GO:0042731), diffi-culties with word order, and choosing too much support-ing text, for example an entire first paragraph of text.So at the suggestion of the GO editors, Oscar works onexact matches to term names (as preprocessed above) andtheir exact (within the OBO syntax) synonyms.The most relevant GO terms to chemistry concern en-zymes, which are proteins that catalyse chemical pro-cesses.
Typically their names are multiword expressionsending in ?-ase?.
The enzyme A B Xase will often berepresented by GO terms ?A B Xase activity?, a descrip-tion of what the enzyme does, and ?A B Xase complex?,a cellular component which consists of two or more pro-tein subunits.
In general the bare phrase ?A B Xase?
willrefer to the activity, so the ruleset in Table 1 deletes theword ?activity?
from the GO term.We shall briefly compare our method with the algo-rithms in EBIMed and GoPubMed.
The EBIMed algo-rithm for GO term identification is very similar to ours,except for the point about lemmatization listed above, andits explicit variation of character case, which is handledin Oscar by its case normalization algorithm.
In contrast,the algorithm in GoPubMed works by matching short?seed?
terms and then expanding them.
This copes withcases such as ?protein threonine/tyrosine kinase activity?
(GO:0030296) where the full term is unlikely to be foundin ordinary text; the words ?protein?
and ?activity?
aregenerally omitted.
However, the approach in (Delfs etal., 2005) cannot be applied blindly; the authors claim forexample that ?biosynthesis?
can be ignored without com-promising the reader?s understanding.
In chemistry jour-nal articles most mentions of a chemical compound willnot refer to how it is formed in nature; they will refer tothe compound itself, its analogues or other processes.
Infact, our ruleset in Table 1 explicitly disallows GO termsynonyms ending in ?
synthesis?
or ?
formation?
sincethey do not necessarily represent biological processes.
Itis also not clear from Delfs et al (2005) how robust thealgorithm is to the sort of errors identified by Camon etal.
(2005).4 Case studyThe problem is to take a journal article, apply meaningfuland useful annotations, connect them to stable resources,allow technical editors to check and add further annota-tions, and disseminate the article in enriched form.Most chemical publishers use XML as a stable formatfor maintaining their documents for at least some stagesof the publication process.
The Sciborg project (Copes-take et al, 2006) and the Royal Society of Chemistry(RSC) use SciXML (Rupp et al, 2006) and RSC XMLrespectively.
For the overall Sciborg workflow, standoffannotation is used to store the different sets of annota-tions.
For the purposes of this paper, however, we makeuse of the inline output of Oscar, which is SciXML with<ne> elements for the annotations.Not all of the RSC XML need be mined for NEs;much of it is bibliographic markup which can confuseparsers.
Only the useful parts are converted into SciXMLand passed to Oscar, where they are annotated.
TheseSciXML annotations are then pasted back into the RSCXML, where they can be checked by technical editors.In running text, NEs are annotated with an ID localto the XML file, which refers to <compound> and<annotation> elements in a block at the end, whichcontain chemical structure information and ontology IDs.This is a lightweight compromise between pure standoffand pure inline annotation.We find useful annotations by aggressive threshold-ing.
The only classes which survive are ONTs, and thoseCMs which have a chemical structure found by the re-solver.
This enables the chemical NER part of Oscarto be tuned for high recall even as part of a publishing47workflow.
Only CMs which correspond to an unambigu-ous molecule or molecular ion are treated as a chemicalcompound; everything else is referred to an appropriateontology.
We use the InChI as a stable representation forchemical structure, and the curated OBO ontologies forbiomedical terms.The role of technical editors is to remove faulty anno-tations, add new compounds to the chemical dictionary,based on chemical structures supplied by authors, sug-gest new GO terms to the ontology curators, and extendthe stopword lists of both Oscar and Lucinda as appropri-ate.
At present (May 2007), this happens after publicationof articles on the web, but is intended to become part ofthe routine editing process in the course of 2007.This enriched XML can then be converted into HTMLand RSS by means of XSL stylesheets and databaselookups, as in the RSC?s Project Prospect.3 The imme-diate benefits of this work are increased readability of ar-ticles for readers and extensive cross-linking with otherarticles that have been enhanced in the same way.
Fu-ture developments could easily involve structure-basedsearching, ontology-based search of journal articles, andfinding correlations between biological processes andsmall molecule structures.5 Ambiguity in chemical NEROne important omission is disambiguating the exact ref-erent of a chemical name, which is not always clear with-out context.
For example ?the pyridine 6?, is a class de-scription, but the phrase ?the pyridine molecule?
refers toa particular compound.
ChEBI, which contains an ontol-ogy of molecular structure, uses plurals to indicate chem-ical classes, for example ?benzenes?, which is often, butnot always, what ?benzenes?
means in text.
CurrentlyOscar does not distinguish between singular and plural.Amino acids and saccharides are particularly trouble-some on account of homochirality.
Unless otherwisespecified, ?histidine?
and ?ribose?
specify the moleculeswith the chirality found in nature, or to be precise,L-histidine and D-ribose respectively.
What is evenworse is that ?histidine?
seldom refers to the independentmolecule; it usually means the histidine residue, part of alarger entity.6 AcknowledgementsWe thank Dietrich Rebholz-Schuhmann for useful dis-cussions.
CRB thanks Jane Lomax, Jen Clark, AmeliaIreland and Midori Harris for extensive cooperation andhelp, and Richard Kidd, Neil Hunter and Jeff White atthe RSC.
PTC thanks Ann Copestake and Peter Murray-Rust for supervision.
This work was funded by EPSRC(EP/C010035/1).3http://www.projectprospect.org/ReferencesChristian Blaschke, Eduardo Andres Leon, MartinKrallinger and Alfonso Valencia.
2005.
Evaluationof BioCreAtIvE assessment of task 2 BMC Bioinfor-matics 6(Suppl 1):S16Evelyn B. Camon, Daniel G. Barrell, Emily C. Dimmer,Vivian Lee, Michele Magrane, John Maslen, DavidBinns and Rolf Apweiler.
2005.
An evaluation of GOannotation retrieval for BioCreAtIvE and GOA BMCBioinformatics 6(Suppl 1):S17Ann Copestake, Peter Corbett, Peter Murray-Rust, C. J.Rupp, Advaith Siddharthan, Simone Teufel and BenWaldron.
2006.
An Architecture for Language Tech-nology for Processing Scientific Texts.
In Proceedingsof the 4th UK E-Science All Hands Meeting.
Notting-ham, UK.Peter Corbett, Colin Batchelor and Simone Teufel.
2007.Annotation of Chemical Named Entities.
In Proceed-ings of BioNLP in ACL (BioNLP?07).Peter T. Corbett and Peter Murray-Rust.
2006.
High-throughput identification of chemistry in life sciencetexts.
LNCS, 4216:107?118.P.
de Matos, M. Ennis, M. Darsow, M. Guedj, K. Degt-yarenko, and R. Apweiler.
2006.
ChEBI - ChemicalEntities of Biological Interest Nucleic Acids Research,Database Summary Paper 646.The Gene Ontology Consortium.
2000.
Gene Ontology:Tool for the Unification of Biology Nature Genetics,25:25?29.Ralph Delfs, Andreas Doms, Alexander Kozlenkov andMichael Schroeder.
2004.
GoPubMed: ExploringPubMed with the GeneOntology.
Proceedings of Ger-man Bioinformatics Conference, 169?178.Christopher J. Mungall.
2004.
Obol: integrating lan-guage and meaning in bio-ontologies.
Comparativeand Functional Genomics, 5:509?520.Dietrich Rebholz-Schuhmann, Harald Kirsch, MiguelArregui, Sylvain Gaudan, Mark Riethoven and PeterStoehr.
2007.
EBIMed?text crunching to gatherfacts for proteins from Medline.
Bioinformatics,23(2):e237?e244.C.
J. Rupp, Ann Copestake, Simone Teufel and BenjaminWaldron.
2006.
Flexible Interfaces in the Applicationof Language Technology to an eScience Corpus.
InProceedings of the 4th UK E-Science All Hands Meet-ing.
Nottingham, UK.48
