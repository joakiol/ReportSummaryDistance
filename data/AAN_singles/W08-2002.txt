Coling 2008: Proceedings of 3rd Textgraphs workshop on Graph-Based Algorithms in Natural Language Processing, pages 9?16Manchester, August 2008Learning to Map Text to Graph-based Meaning Representations viaGrammar InductionSmaranda MuresanLaboratory for Computational Linguistics and Information ProcessingInstitute for Advanced Computer StudiesUniversity of MarylandCollege Park, MD 20742, USAsmara@umiacs.umd.eduAbstractWe argue in favor of using a graph-basedrepresentation for language meaning andpropose a novel learning method to mapnatural language text to its graph-basedmeaning representation.
We present agrammar formalism, which combines syn-tax and semantics, and has ontology con-straints at the rule level.
These constraintsestablish links between language expres-sions and the entities they refer to in thereal world.
We present a relational learningalgorithm that learns these grammars froma small representative set of annotated ex-amples, and show how this grammar in-duction framework and the ontology-basedsemantic representation allow us to di-rectly map text to graph-based meaningrepresentations.1 IntroductionRecent work (Wong and Mooney, 2007; Zettle-moyer and Collins, 2005; He and Young, 2006)has developed learning algorithms for the problemof mapping sentences to their underlying semanticrepresentations.
These semantic representationsvary from ?-expressions (Bos et al, 2004; Zettle-moyer and Collins, 2005; Wong and Mooney,2007) to DB query languages and command-likelanguages (RoboCup Coach Language, CLang)(Ge and Mooney, 2005).In this paper we focus on an ontology-basedsemantic representation which allows us to en-code the meaning of a text as a direct acyclicgraph.
Recently, there is a growing intereston ontology-based NLP, starting from efforts indefining ontology-based semantic representationsc?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.
(Nirenburg and Raskin, 2004), to using ontologi-cal resources in NLP applications, such as ques-tion answering (Basili et al, 2004; Beale et al,2004), and building annotated corpora, such as theOntoNotes project (Hovy et al, 2006).There are three novel properties to ontology-based semantics that we propose in this paper:?
There is a direct link between the ontologyand the grammar through constraints at thegrammar rule level.
These ontology con-straints enable access to meaning during lan-guage processing (parsing and generation).?
Our ontology-based semantic representationis expressive enough to capture various phe-nomena of natural language, yet restric-tive enough to facilitate grammar learning.The representation encodes both ontologicalmeaning (concepts and relations among con-cepts) and extra-ontological meaning, such asvoice, tense, aspect, modality.?
Our representation and grammar learningframework allow a direct mapping of text toits meaning, encoded as a direct acyclic graph(DAG).
We consider that ?understanding?
atext is the ability to correctly answer, at theconceptual level, all the questions asked w.r.tto that text, and thus Meaning = Text + allQuestions/Answers w.r.t that Text.
Under thisassumption, obtaining the meaning of a textis reduced to a question answering process,which in our framework is a DAG matchingproblem.First, we review our grammar formalism intro-duced in (Muresan, 2006; Muresan and Rambow,2007), called Lexicalized Well-Founded Gram-mars.
Second, we present a relational learning al-gorithm for inducing these grammars from a rep-resentative sample of strings annotated with theirsemantics, along with minimal assumptions about9I.
Semantic Moleculesa.
(major/adj)?= 0BBBBBBB@h1264cat adjhead X1mod X2375b1DX1.isa = major, X2.Y=X1E1CCCCCCCAb.
(damage/noun)?= 0BBBBBBB@h2264cat nounnr sghead X3375b2DX3.isa = damageE1CCCCCCCAc.
(major damage)?= 0BBBBBB@h264cat nnr sghead X375bDX1.isa = major, X.Y=X1, X.isa=damageE1CCCCCCAII.
Constraint Grammar RuleN(w,?hb?)
?
Adj(w1,?h1b1?
), N(w2,?h2b2?)
: ?c(h, h1, h2), ?o(b)?c(h, h1, h2) = {h.cat = n, h.head = h1.mod, h.head = h2.head, h.nr = h2.nr, h1.cat = adj, h2.cat = n}?o(b) returns ?X1.isa = major, X.degree = X1, X.isa = damage?Figure 1: Examples of three semantic molecules (I), and a constraint grammar rule together with thesemantic composition and ontology-based interpretation constraints, ?cand ?o(II)syntax.
Then, we describe the levels of represen-tation we use to go from utterances to their graph-based meaning representations, and show how ourrepresentation is suitable to define the meaning ofan utterance/text through answers to questions.
Asa proof of concept we discuss how our frameworkcan be used to acquire terminological knowledgefrom natural language definitions and to query thisknowledge using wh-questions.2 Grammar FormalismLexicalized Well-Founded Grammars (LWFGs)introduced in (Muresan, 2006; Muresan and Ram-bow, 2007) are a type of Definite Clause Gram-mars (Pereira and Warren, 1980) where: (1) thecontext-free backbone is extended by introducinga partial ordering relation among nonterminals (thebasis for ?well-founded?
); (2) each string is as-sociated with a syntactic-semantic representationcalled a semantic molecule; and (3) grammar ruleshave two types of constraints: one for semanticcomposition and one for ontology-based semanticinterpretation.
The last two properties allow us tohave a syntactic-semantic grammar.
The ontologyconstraints provide access to meaning during lan-guage learning, parsing and generation.
The firstproperty allows us to learn these grammars from asmall set of annotated examples.The semantic molecule is a syntactic-semanticrepresentation of natural language strings w?
=(hb), where h (head) encodes the information re-quired for semantic composition, and b (body) isthe actual semantic representation of the string.Figure 1 gives examples of semantic molecules foran adjective, a noun and a noun phrase, as pre-sented in (Muresan and Rambow, 2007).The head h of the semantic molecule is a flatfeature structure (i.e., feature values are atomic),having at least two attributes that encode the syn-tactic category of the associated string, cat, andthe head of the string, head.
In addition, attributesfor agreement and other grammatical features canbe present (e.g., nr, pers for number and person).The set of attributes is finite and known a-priori foreach syntactic category.
Being a one-level featurestructure, no recursive or embedded structures areallowed (unlike other grammar formalisms such asHPSG, LFG), which makes this representation ap-pealing for a learning framework.
Recursion in thegrammar is obtained through the recursive gram-mar rules and the composition constraint.The body, b, of a semantic molecule is a flat rep-resentation, called OntoSeR (Ontology-based Se-mantic Representation).
No embedding of pred-icates is allowed, as in Minimal Recursion Se-mantics (MRS) (Copestake et al, 1999).
UnlikeMRS, OntoSeR is a logical form built as a con-junction of atomic predicates ?concept?.?attr?
=?concept?, where variables are either concept orslot (attr) identifiers in an ontology.
For example,the adjective major is represented as ?X1.isa =major,X2.Y = X1?, which says that the meaningof an adjective is a concept X1(X1.isa = major)that is the value of a property of another conceptX2(X2.Y = X1) in the ontology.A LWFG specifies one or more semanticmolecules for each string that can be parsed bythe grammar.
The lexicon of a LWFG consists ofwords paired with their semantic molecules shownin Figure 1(Ia and Ib).
In addition to the lexicon, aLWFG has a set of constraint grammar rules.
Anexample of a LWFG rule is given in Figure 1(II).Grammar nonterminals are augmented with pairsof strings and their semantic molecules.
Thesepairs are called syntagmas, and are denoted by?
= (w,w?)
= (w,(hb)).
This rule generates thesyntagma corresponding to major damage whosesemantic molecule is given in Figure 1(Ic).
Thereare two types of constraints at the grammar rulelevel ?
one for semantic composition (how the10meaning of a natural language expression is com-posed from the meaning of its parts) and one forontology-based semantic interpretation.
The com-position constraints ?care applied to the heads ofthe semantic molecules, the bodies being just con-catenated.
Figure 1 shows that the body of the se-mantic molecule for major damage is a concate-nation of the bodies of the adjective major andnoun damage, together with a variable substitu-tion.
This variable substitution {X2/X,X3/X} isa result of ?c, which is a system of equations ?a simplified version of ?path equations?
(Shieberet al, 1983), because the heads are flat featurestructures.
These constraints are learned togetherwith the grammar rules.
The ontology-based con-straints ?orepresent the validation on the ontol-ogy, and are applied to the body of the semanticmolecule associated with the left-hand side non-terminal.
The ontology-based interpretation is notdone during the composition operation, but after-words.
Thus, for example, the head of the nounphrase major damage does not need to store theslot Y , a fact that allows us to use flat featurestructures to represent the head of the semanticmolecules.
The ontology-based constraints are notlearned; rather, ?ois a general predicate appliedto the logical form semantic representation whichfully contains all the required information neededfor validation on the ontology.
Thus, it is indepen-dent of grammatical categories.
This predicate cansucceed or fail as a result of querying the ontology?
when it succeeds, it instantiates the variables ofthe semantic representation with concepts/slots inthe ontology (Y = degree).
For example, giventhe phrase major damage, ?osucceeds and returns?X1.isa = major,X.degree = X1, X.isa =damage?, while given major birth it fails.3 Grammar Learning AlgorithmUnlike stochastic grammar learning for syntac-tic parsing (e.g., (Collins, 1999)), LWFG is wellsuited to learning from reduced-size training data.Furthermore, unlike previous formalisms used fordeeper representations (e.g, HPSG, LFG), ourLWFG formalism is characterized by a formalguarantee of polynomial learnability (Muresan,2006).A key to these properties is the partial order-ing among grammar nonterminals, i.e., the set ofnonterminals is well-founded.
This partial order-ing among nonterminals allows us to define therepresentative examples of a LWFG, and to learnLWFGs from this small set of examples.
The rep-resentative examples ERof a LWFG, G, are thesimplest syntagmas ground-derived by the gram-mar G ?
i.e., for each grammar rule, there ex-ists a syntagma which is ground-derived from it inthe minimum number of steps.
Informally, repre-sentative examples are building blocks from whichlarger structures can be inferred via reference to alarger corpus E?which can be only weakly anno-tated (i.e., bracketed), or unannotated.
This largercorpus, E?, is used for generalization during learn-ing (Figure 2).The theoretical learning model is GrammarApproximation by Representative Sublanguage(GARS) introduced in (Muresan, 2006; Muresanand Rambow, 2007).
We proved that the searchspace for grammar induction is a complete gram-mar lattice, and we gave a learnability theorem forLWFG induction.
The GARS model uses a poly-nomial algorithm for LWFG learning that takesadvantage of the building blocks nature of repre-sentative examples.
The learning algorithm be-longs to the class of Inductive Logic Programmingmethods (ILP), based on entailment (Muggleton,1995; Dzeroski, 2007).
Unlike existing ILP meth-ods that use randomly-selected examples, our al-gorithm learns from a set of representative exam-ples allowing a polynomial efficiency for learn-ing a syntactico-semantic constraint-based gram-mar, suitable to capture large fragments of naturallanguage (Muresan, 2006).The LWFG induction algorithm is a cover set algorithm, where at each step a new constraint gram-mar rule is learned from the current representativeexample, ?
?
ER.
Then this rule is added to thegrammar rule set.
The process continues until allthe representative examples are covered.
We de-scribe below the process of learning a grammarrule from the current representative example, illus-trated as well in Figure 2.Step 1.
In the first step, the most specific gram-mar rule is generated from the current represen-tative example.
The category name annotatedin the representative example gives the name ofthe left-hand-side nonterminal (?predicate inven-tion?, in ILP terminology), while a robust parserreturns the minimum number of chunks cover-ing the representative example.
The categoriesof the chunks give the nonterminals of the right-hand side of the most specific rule.
For ex-11cat adjhead X1mod X2cat nounhead X3nr     sgcat   nhead Xnr     sg<X1.isa=major, X.Y=X1, X.isa=X1>)(major damage,N A N:major damagevery beautiful paintingloud clear noiseNNNAdj   Noun:A  Noun:A  N:(score=1)(score=2)(score=3)CANDIDATE GRAMMAR RULESr1r3r2N Adj  Noun:Adj (major, )<X1.isa=major, X2.Y=X1>(damage,<X3.isa=damage>)NounBACKGROUND KNOWLEDGEPerformance CriteriaCURRENT REPRESENTATIVE  EXAMPLEMOST SPECIFIC CONSTRAINT GRAMMAR RULEREPRESENTATIVE SUBLANGUAGEBEST RULESTEP 1 (ROBUST PARSING)chunks={[Adj(major), A(major)],[Noun(damage), N(damage)]}AANAdj:Adv A:Noun:N ......STEP 2 (RULE GENERALIZATION)=h.nr=h2.nr, h1.cat=adj, h2.cat=noun }{h.cat=n, h.head=h1.mod, h.head=h2.head,PSfrag replacementsri?E?r?c1?c2?c3?c4?c4?c4?c5?c6?c6Figure 2: An iteration step of the learning algorithmample, in Figure 2, given the representative ex-ample major damage annotated with its seman-tic molecule, and the background knowledge con-taining the already learned rules A ?
Adjand N ?
Noun,1 the robust parser generatesthe chunks corresponding to the adjective majorand the noun damage: [Adj(major),A(major)] and[Noun(damage),N(damage)], respectively.
Themost specific rule generated is thus N ?Adj Noun : ?c4, where the left hand side nonter-minal is given by the category of the representativeexample, in this case n. The compositional con-straints ?c4are learned as well.
It can be seen thatthe annotation of the representative example doesnot require us to provide ontology-specific roles orconcepts.
Thus, grammar learning is general, andcan be done using a small, generic lexicon.Step 2.
In the second step, this most specific rule isgeneralized, obtaining a set of candidate grammarrules.
The performance criterion in choosing thebest grammar rule among these candidate hypothe-ses is the number of the examples in the represen-tative sublanguage E?
(generalization corpus) thatcan be parsed using the candidate grammar rule to-gether with the previous learned rules.
In Figure2 given the representative sublanguage E?={ ma-jor damage, loud clear noise, very beautiful paint-ing} the learner will generalize to the recursiverule N ?
A N : ?6, since only this rule can parse1For readability, we only show the context-free backboneof the grammar rules, and ?oare not discussed since they arenot learned.all the examples in E?.4 Levels of RepresentationIn order to transform natural language utterancesto knowledge, we consider three levels of repre-sentation: the utterance level, the text level and theontology level.
In Section 4.4 we show that theselevels of representation allow us to define meaningas Meaning=Text+all Questions/Answers w.r.t thatText, using a DAG matching approach.4.1 Utterance-level RepresentationAt the utterance level, the semantic representationcorresponds directly to a syntagma ?
after the on-tology constraint ?ois applied.
This representa-tion is called Ontology-based Semantic Represen-tation OntoSeR.
At this level, the attrIDs are in-stantiated with values of the slots from the ontol-ogy, while the conceptIDs remain variables to al-low further composition to take place.
At OntoSeRlevel we can exploit the reversibility of the gram-mar, since this representation is used during pars-ing/generation.In Figure 3 we show the semantic represen-tation OntoSeR for the utterance Hepatitis B isan acute viral hepatitis caused by a virus thattends to persist in the blood serum, obtained usingour parser in conjunction with our learned gram-mar.
The composition constraints bind the con-ceptID variables, while the ontology constraint in-stantiates the attrID variables with values of slotsin the ontology.
The ontology constraint can be12Hepatitis B is an acute viral hepatitis caused by a virus that tends to persist in the blood serum.OntoSeR = ?
(A.name=hepatitisB)HepatitisB, (A.tense=pr)is, (A.det=an)an, (B.is a=acute, A.duration=B)acute,(C.is a=viral, A.kind of=C)viral, (A.is a=hepatitis)hepatitis, (D.vft=ed, D.voice=pas, D.is a=cause, D.ag=E,D.th=A)caused, (ag.is a=by, D.ag=E)by, (E.det=a)a, (E.is a=virus)virus, (E.is a=that)that, (F.tense=pr, F.is a=tend,F.no ag=E, F.prop=G)tends, (G.vft=to, G.is a=persist, G.th=E)to persist, (loc.is a=in, G.loc=H)in, (H.det=the)the,(I.is a=blood, H.of=I)blood, (H.is a=serum)serum?TKR?29.name= hepatitisB ?33.det= virus?29.tense= pr ?33.is_a= that?20.det= an ?34.tense= pr?30.is_a= acute ?34.is_a= tend?29.duration=?2 ?34.no_role=?33?31.is_a= viral ?34.prop=?35?29.kind_of=?3 ?35.vft= to?29.is_a= hepatitis ?35.is_a= persist?32.vft= ed ?35.th=?33?32.voice= pas loc.is_a= in?32.is_a= cause ?35.loc=?36?32.ag=?5 ?36.det= the?32.th=?1 ?37.is_a= bloodag.is_a= by ?36.of=?37?32.ag=?33 ?36.is_a= serum?33.det= aOKR#viral#acute#hepatitisB #virus33#cause32 #persist35#tend34#serum36#bloodth agduration kind_of ofth locprop#hepatitissubFigure 3: Example of an utterance and its levels of representationseen as a local semantic interpretation at the ut-terance/grammar rule level, providing access tomeaning during parsing/generation.
In this pa-per, this semantic interpretation is based only ona weak ?ontological model?.
For the verb the-matic roles we considered the thematic roles de-rived from Dorr?s LCS Database (e.g., ag=agent,th=theme, prop=proposition) (Dorr, 1997).
Foradjectives and adverbs we took the roles (prop-erties) from WordNet (Miller, 1990).
For prepo-sitions we considered the LCS Database.
Wealso have manually added specific/dummy seman-tic roles when they were not present in these re-sources (e.g., of between blood and serum).The example in Figure 3 shows the output ofour parser in conjunction with the learned gram-mar for a definitional sentence that contains severallinguistic phenomena such as copula to-be predica-tive, reduced relative clauses (caused by ...), rel-ative clauses (virus that ...), raising construction(tends to persist, where virus is not the argumentof tends but the argument of persist), and nouncompounds (blood serum).
For readability, we in-dicate what part of OntoSeR corresponds to eachlexical item.
It can be noticed that OntoSeR con-tains representations of both ontological meaning(concepts and relations among concepts) as well asextra-ontological meaning such as tense and voice(D.voice = pas; F.tense = pr).4.2 Text-level RepresentationThe text-level representation TKR, or discourselevel representation, represents asserted represen-tations.
ConceptIDs become constants, and nocomposition can happen at this level.
However, westill have (indirect) reversibility, since TKR repre-sents all the asserted OntoSeRs.
Therefore, all theinformation needed for reversibility is still present.Figure 3 shows an example of the TKR for theabove utterance.4.3 Ontology-level RepresentationOntology-level knowledge representation OKR isobtained after task-specific interpretation, whichcan be seen as a global semantic interpretation.OKR is a directed acyclic graph (DAG) G =(V,E).
Edges, E, are either semantic roles givenby verbs, prepositions, adjectives and adverbs,or extra-ontological meaning properties, such astense, aspect, modality, negation.
Vertices, V areeither concepts (corresponding to nouns, verbs,adjectives, adverbs, pronouns, cf.
Quine?s crite-rion (Sowa, 1999, page 496)), or values of theextra-ontological properties such as present cor-responding to tense property.
In this paper, thetask-specific interpretation is geared mainly to-wards terminological interpretation.
We filter fromOntoSeR determiners and some verb forms, suchas tense, aspect, since temporal relations appearless in terminological knowledge than in factual13knowledge.
However, we treat modals and nega-tion, as they are relevant for terminological knowl-edge.
An example of OKR for the above utteranceis given in Figure 3.We consider both concepts (e.g., #acute,#blood), and instances of concepts (e.g., #virus33,#cause32).
Concepts are denoted in OKR by#name concept, and they form a hierarchy of con-cepts based on the subsume relation (sub), whichis the inverse of the is a relation.
An instance ofa concept is denoted by the name of a concept fol-lowed by the instance number (e.g., #virus33).
Aconcept and an instance of this concept are two dif-ferent vertices in OKR, having the same name.
Atthe OKR level we assume the principle of conceptidentity which means that there is a bijection be-tween a vertex in OKR and a referent.
For exam-ple, if we do not have pronoun resolution, the pro-noun and the noun it refers to will be representedas two separate vertices in the graph.
Currently,our semantic interpreter implements only a weakconcept identity principle which facilitates struc-ture sharing and inheritance.To give these two properties we first introducesome notations.
A DAG is called rooted at a vertexu ?
V , if there exists a path from u to each vertexof the DAG.
We have the following definition:Definition 1.
Two subDAGs rooted at two verticesu, u?
are equal if the set of the adjacent vertices tou and u?
respectively, are equal and if the edges in-cident from u and u?
have the same semantic rolesas labels.Property 1 (Structure Sharing).
In an OKR, allvertices u, u?
?
V with the same name, and whosesubDAGs are equal are identical (i.e., the samevertex in OKR).Using a hash table, there is a linear algorithmO(|V | + |E|) which transforms an OKR to anequivalent OKR which satisfies Property 1.
In Fig-ure 4 it can be seen that the OKRs of HepatitisA and Hepatitis B share the representation corre-sponding to blood serum (i.e., blood serum is thesame concept instance and due to Property 1 wehave that #serum36=#serum27 and thus they havethe same vertex in the OKR).Property 2 (Inheritance).
A concept in a hierarchyof concepts can be linked by the sub relation onlyto its parent(s), and not to any other ancestors.
AsubDAG defining a property of a concept from thehierarchy of concepts can be found only once inthe OKR at the level of the most general conceptthat has this property.For terminological knowledge we have that anyinstance of a concept is a concept, and the defi-nition is the naming of a concept instance.
Forexample, the definition of Hepatitis B, is an in-stance of a concept #hepatitis which has additionalattributes acute, viral and caused by a virus thattends to persist in the blood serum.
Thus, anadditional instance of concept #hepatitis is cre-ated, which is named #hepatitisB.
The fact thatwe can have the definition as a naming of a con-cept instance is facilitated also by our treatmentof copula to-be at the OntoSeR level (A.name =hepatitisB, .
.
.
, A.is a = hepatitis in Figure 3)4.4 Meaning as Answers to QuestionsWe consider that ?understanding?
a text is the abil-ity to correctly answer, at the conceptual level,all the questions asked w.r.t to that text, and thusMeaning = Text + all Questions/Answers w.r.t thatText.
In our framework we consider the principleof natural language as problem formulation, andnot problem solving.
Thus, we can represent atOKR level a paradox formulation in natural lan-guage, even if the reasoning about its solution can-not be emphasized.
Our levels of representationsallow us to define the meaning of questions, an-swers and utterances using a DAG matching ap-proach.Definition 2.
The meaning of a question, q, withrespect to an utterance/discourse, is the set of allanswers that can be directly obtained from that ut-terance/discourse.
The semantic representation ofa question is a subgraph of the utterance graphwhere the wh-word substitutes the answer con-cept(s).Definition 3.
The answer to a question is the con-cept that matches the wh-word through the DAGmatching algorithm between the question?s sub-DAG and the utterance/discourse DAG.Definition 4.
The meaning of an utterance u is theset of all questions that can be asked w.r.t that ut-terance, together with their answers.Unlike meaning as truth conditions, where theproblem of meaning equivalence is reduced tological form equivalence, in our case meaningequivalence is reduced to semantic equivalence ofDAGs/subDAGs which obey the concept identityprinciple (weak, or strong).
The matching algo-14rithm obtains the same answers to questions, rela-tive to semantic equivalent DAGs.
If we consideronly the weak concept identity principle given byProperties 1 and 2, the problem is reduced toDAG/subDAG identity.5 DiscussionThe grammar formalism, learning model and ourontology-based representation allow us to directlymap text to graph-based meaning representations.Our method relies on a general grammar learn-ing framework and a task-specific semantic inter-preter.
Learning is done based on annotated ex-amples that do not contain ontology-specific rolesor concepts as we saw in Section 3, and thus ourlearning framework is general.
We can use anyontology, depending on the application.
The task-specific semantic interpreter we are currently usingis targeted for terminological knowledge, and usesa weak ?ontological model?
based on admissibilityrelations we can find at the level of lexical entriesand a weak concept identity principle.In (Muresan, 2006) we showed that our gram-mar formalism and induction model allow us tolearn diverse and complex linguistic phenomena:complex noun phrases (e.g., noun compounds,nominalization), prepositional phrases, reducedrelative clauses, finite and non-finite verbal con-structions (including, tense, aspect, negation), co-ordination, copula to be, raising and control con-structions, and rules for wh-questions (includinglong-distance dependencies).In this section we discuss the processesof knowledge acquisition and natural languagequerying, by presenting an example of construct-ing terminological knowledge from definitions ofhepatitis, Hepatitis A and Hepatitis B.
The defi-nitional text and OKRs are presented in Figure 4,OKR being shown only for the last two definitionsfor readability reasons.
A question and answer re-lated to the resulting OKR are also given.The definiendum is always a concept, and it ispart of the sub hierarchy.
The concepts in the subhierarchy are presented in bold in Figure 4.
In ad-dition to the concepts that are defined, we can alsohave concepts that are referred (i.e., they are partof the definiens), if they do not have any modifi-cation (e.g., #blood in definition of Hepatitis A,and Hepatitis B).
If a referred concept has modi-fications, it is represented as an instance of a con-cept in OKR.
As a consequence, various verbal-izations of concept properties can be differentiatedin OKR, allowing us to obtain direct answers thatare specific to each verbalization.
For example, theterm virus appears in the definition of both Hepati-tis A and Hepatitis B.
In OKR, they are two differ-ent instances of a concept, #virus25 and #virus33,since they have different modifications: persistsin the blood serum, does not persists in the bloodserum, respectively.
These modifications are an es-sential part of the differentia of the two concepts#hepatitisA and #hepatitisB, causing the distinc-tion between the two.
When we ask the questionWhat is caused by a virus that persists in the bloodserum?
we obtain only the correct answer #hepati-tisB (Figure 4).Another important aspect that shows the ade-quacy of our representation for direct acquisitionand query is the OKR-equivalences that we ob-tain for different syntactic forms.
They are relatedmainly to verbal constructions.
Among OKR-equivalences we have: 1) active and passive con-structions; 2) -ed and -ing verb forms in reducedrelative clauses are equivalent to passive/activeverbal constructions; 3) constructions involvingraising verbs, where we can take advantage of thefact that the controller is not the semantic argumentof the raising verb (e.g., in the definition of Hep-atitis B we have .
.
.
caused by a virus that tends topersist in the blood serum, while the question canbe asked without the raising verb What is causedby a virus that persists in the blood serum?
; seeFigure 4).Besides acquisition of terminological knowl-edge, our grammar and semantic interpreter facil-itates natural language querying of the acquiredknowledge base, by treatment of wh-questions.Querying is a DAG matching problem, where thewh-word is matched to the answer concept.6 ConclusionsThis paper has presented a learning frameworkto automatically map natural language to graph-based meaning representations via grammar in-duction.
We presented an ontology-based seman-tic representation that allows us to define meaningas Meaning=Text+all Questions/Answers w.r.t thatText, using a DAG matching approach.In the future, we plan to extend this work in twomain directions.
First, we plan to use a strongersemantic context with hierarchies of concepts andsemantic roles, selectional restrictions, as well as151.
Hepatitis is a disease caused by infectious or toxic agents andcharacterized by jaundice, fever and liver enlargement.2.
Hepatitis A is an acute but benign viral hepatitis caused by a virusthat does not persist in the blood serum.3.
Hepatitis B is an acute viral hepatitis caused by a virus that tendsto persist in the blood serum.#persist26 #cause24y #virus25#disease#hepatitis#hepatitisA #hepatitisB#benign#acute#viral#serum27#tend34#persist35#virus33#cause32#bloodlocneg th agthsubsub subdurationdurationkind_ofbenignity kind_ofagpropthlocofthQ1: What is caused by a virus that persists in theblood serum?#serum #virus #what#cause#persist#bloodth ag thoflocA1: #hepatitisB#hepatitis#hepatitisB#acute #viral#cause32#virus33 #serum27#blood#persist35subduration kind_ofth ag th locofFigure 4: Acquisition/Query of terminological knowledgesemantic equivalences based on synonymy andanaphora.
The second direction is to enhance theontology with probabilities.ReferencesBasili, Roberto, Dorte H. Hansen, Patrizia Paggio,Maria Teresa Pazienza, and Fabio Zanzotto.
2004.
On-tological resources and question answering.
In Workshopon Pragmatics of Question Answering, held jointly withNAACL 2004.Beale, Stephen, Benoit Lavoie, Marjorie McShane, SergeiNirenburg, and Tanya Korelsky.
2004.
Question answer-ing using ontological semantics.
In ACL 2004: SecondWorkshop on Text Meaning and Interpretation.Bos, Johan, Stephen Clark, Mark Steedman, James R. Cur-ran, and Julia Hockenmaier.
2004.
Wide-coverage seman-tic representations from a CCG parser.
In Proceedings ofCOLING-04.Collins, Michael.
1999.
Head-Driven Statistical Models forNatural Language Parsing.
Ph.D. thesis, University ofPennsylvania.Copestake, Ann, Dan Flickinger, Ivan A.
Sag, and Carl Pol-lard.
1999.
Minimal Recursion Semantics: An introduc-tion.Dorr, Bonnie J.
1997.
Large-scale dictionary construction forforeign language tutoring and interlingual machine trans-lation.
Machine Translation, 12(4):271?322.Dzeroski, Saso.
2007.
Inductive logic programming in a nut-shell.
In Getoor, Lise and Ben Taskar, editors, Introductionto Statistical Relational Learning.
The MIT Press.Ge, Ruifang and Raymond J. Mooney.
2005.
A statisticalsemantic parser that integrates syntax and semantics.
InProceedings of CoNLL-2005.He, Yulan and Steve Young.
2006.
Spoken language un-derstanding using the hidden vector state model.
SpeechCommunication Special Issue on Spoken Language Under-standing in Conversational Systems, 48(3-4).Hovy, Eduard, Mitchell Marcus, Martha Palmer, LanceRamshaw, and Ralph Weischedel.
2006.
Ontonotes: The90% solution.
In Proceedings of HLT-NAACL 2006.Miller, George.
1990.
WordNet: An on-line lexical database.Journal of Lexicography, 3(4):235?312.Muggleton, Stephen.
1995.
Inverse Entailment and Progol.New Generation Computing, Special Issue on InductiveLogic Programming, 13(3-4):245?286.Muresan, Smaranda and Owen Rambow.
2007.
Grammar ap-proximation by representative sublanguage: A new modelfor language learning.
In Proceedings of the 45th AnnualMeeting of the Association for Computational Linguistics(ACL).Muresan, Smaranda.
2006.
Learning constraint-based gram-mars from representative examples: Theory and applica-tions.
Technical report, PhD Thesis, Columbia University.Nirenburg, Sergei and Victor Raskin.
2004.
Ontological Se-mantics.
MIT Press.Pereira, Fernando C. and David H.D Warren.
1980.
DefiniteClause Grammars for language analysis.
Artificial Intelli-gence, 13:231?278.Shieber, Stuart, Hans Uszkoreit, Fernando Pereira, JaneRobinson, and Mabry Tyson.
1983.
The formalism andimplementation of PATR-II.
In Grosz, Barbara J. andMark Stickel, editors, Research on Interactive Acquisitionand Use of Knowledge, pages 39?79.
SRI International,Menlo Park, CA, November.Sowa, John F. 1999.
Knowledge Representation: Logical,Philosophical, and Computational Foundations.
BrooksCole Publishing Co., Pacific Grove, CA.Wong, Yuk Wah and Raymond Mooney.
2007.
Learning syn-chronous grammars for semantic parsing with lambda cal-culus.
In Proceedings of the 45th Annual Meeting of theAssociation for Computational Linguistics (ACL-2007).Zettlemoyer, Luke S. and Michael Collins.
2005.
Learningto map sentences to logical form: Structured classificationwith probabilistic categorial grammars.
In Proceedings ofUAI-05.16
