Proceedings of the EACL 2009 Workshop on GEMS: GEometical Models of Natural Language Semantics, pages 91?95,Athens, Greece, 31 March 2009. c?2009 Association for Computational LinguisticsA Graph-Theoretic Algorithm for Automatic Extension of TranslationLexiconsBeate Dorow Florian Laws Lukas Michelbacher Christian Scheible Jason UttInstitute for Natural Language ProcessingUniversita?t Stuttgart{dorowbe,lawsfn,michells,scheibcn,uttjn}@ims.uni-stuttgart.deAbstractThis paper presents a graph-theoreticapproach to the identification of yet-unknown word translations.
The proposedalgorithm is based on the recursive Sim-Rank algorithm and relies on the intuitionthat two words are similar if they estab-lish similar grammatical relationships withsimilar other words.
We also present a for-mulation of SimRank in matrix form andextensions for edge weights, edge labelsand multiple graphs.1 IntroductionThis paper describes a cross-linguistic experimentwhich attempts to extend a given translation dic-tionary with translations of novel words.In our experiment, we use an English anda German text corpus and represent each cor-pus as a graph whose nodes are words andwhose edges represent grammatical relationshipsbetween words.
The corpora need not be parallel.Our intuition is that a node in the English and anode in the German graph are similar (that is, arelikely to be translations of one another), if theirneighboring nodes are.
Figure 1 shows part of theEnglish and the German word graph.Many of the (first and higher order) neighborsof food and Lebensmittel translate to one another(marked by dotted lines), indicating that food andLebensmittel, too, are likely mutual translations.Our hypothesis yields a recursive algorithm forcomputing node similarities based on the simi-larities of the nodes they are connected to.
Weinitialize the node similarities using an English-German dictionary whose entries correspond toknown pairs of equivalent nodes (words).
Thesenode equivalences constitute the ?seeds?
fromwhich novel English-German node (word) corre-spondences are bootstrapped.We are not aware of any previous work using ameasure of similarity between nodes in graphs forcross-lingual lexicon acquisition.Our approach is appealing in that it is languageindependent, easily implemented and visualized,and readily generalized to other types of data.Section 2 is dedicated to related research onthe automatic extension of translation lexicons.
InSection 3 we review SimRank (Jeh and Widom,2002), an algorithm for computing similarities ofnodes in a graph, which forms the basis of ourwork.
We provide a formulation of SimRank interms of simple matrix operations which allowsan efficient implementation using optimized ma-trix packages.
We further present a generalizationof SimRank to edge-weighted and edge-labeledgraphs and to inter-graph node comparison.Section 4 describes the process used for build-ing the word graphs.
Section 5 presents an experi-ment for evaluating our approach to bilingual lex-icon acquisition.
Section 6 reports the results.
Wepresent our conclusions and directions for futureresearch in Section 7.2 Related Work on cross-lingual lexicalacquisitionThe work by Rapp (1999) is driven by the ideathat a word and its translation to another lan-guage are likely to co-occur with similar words.Given a German and an English corpus, he com-putes two word-by-word co-occurrence matrices,one for each language, whose columns span a vec-tor space representing the corresponding corpus.In order to find the English translation of a Ger-man word, he uses a base dictionary to translateall known column labels to English.
This yieldsa new vector representation of the German wordin the English vector space.
This mapped vectoris then compared to all English word vectors, themost similar ones being candidate translations.91food Lebensmittelreceive erhaltenaward Preisprovide liefernevidence Beweisbuy kaufenbook Buchpublish verlegenboat Hauswaste ablehnenFigure 1: Likely translations based on neighboring nodesRapp reports an accuracy of 72% for a smallnumber of test words with well-defined meaning.Diab and Finch (2000) first compute word sim-ilarities within each language corpus separatelyby comparing their co-occurrence vectors.
Theirchallenge then is to derive a mapping from onelanguage to the other (i.e.
a translation lexicon)which best preserves the intra-language word sim-ilarities.
The mapping is initialized with a few seed?translations?
(punctuation marks) which are as-sumed to be common to both corpora.They test their method on two corpora writtenin the same language and report accuracy rates ofover 90% on this pseudo-translation task.
The ap-proach is attractive in that it does not require aseed lexicon.
A drawback is its high computationalcost.Koehn and Knight (2002) use a (linear) com-bination of clues for bootstrapping an English-German noun translation dictionary.
In addition tosimilar assumptions as above, they consider wordsto be likely translations of one another if they havethe same or similar spelling and/or occur with sim-ilar frequencies.
Koehn and Knight reach an accu-racy of 39% on a test set consisting of the 1,000most frequent English and German nouns.
Theexperiment excludes verbs whose semantics aremore complex than those of nouns.Otero and Campos (2005) extract English-Spanish pairs of lexico-syntactic patterns from asmall parallel corpus.
They then construct con-text vectors for all English and Spanish words byrecording their frequency of occurrence in each ofthese patterns.
English and Spanish vectors thusreside in the same vector space and are readilycompared.The approach reaches an accuracy of 89% on atest set consisting of 100 randomly chosen wordsfrom among those with a frequency of 100 orhigher.
The authors do not report results for low-frequency words.3 The SimRank algorithmAn algorithm for computing similarities of nodesin graphs is the SimRank algorithm (Jeh andWidom, 2002).
It was originally proposed for di-rected unweighted graphs of web pages (nodes)and hyperlinks (links).The idea of SimRank is to recursively com-pute node similarity scores based on the scoresof neighboring nodes.
The similarity Sij of twodifferent nodes i and j in a graph is defined asthe normalized sum of the pairwise similarities oftheir neighbors:Sij =c|N(i)| |N(j)|?k?N(i),l?N(j)Skl.
(1)N(i) and N(j) are the set of i?s and j?s neigh-bors respectively, and c is a multiplicative factorsmaller than but close to 1 which demotes the con-tribution of higher order neighbors.
Sij is set to 1if i and j are identical, which provides a basis forthe recursion.3.1 Matrix formulation of SimRankWe derive a formulation of the SimRank similarityupdates which merely consists of matrix multipli-cations as follows.
In terms of the graph?s (binary)adjacency matrix A, the SimRank recursion reads:Sij =c|N(i)| |N(j)|?k?N(i),l?N(j)Aik Ajl Skl(2)noting that AikAjl = 1, iff k is a neighbor of iand l is a neighbor of j at the same time.
This is92equivalent toSij = c?k,lAik|N(i)|Ajl|N(j)| Skl (3)= c?k,lAik??
Ai?Ajl??
Aj?Skl.The Sij can be assembled in a square node sim-ilarity matrix S, and it is easy to see that the indi-vidual similarity updates can be summarized as:Sk = c A?
Sk?1A?T (4)where A?
is the row-normalized adjacency matrixand k denotes the current level of recursion.
A?
isobtained by dividing each entry of A by the sum ofthe entries in its row.
The SimRank iteration is ini-tialized with S = I , and the diagonal of S, whichcontains the node self-similarities, is reset to onesafter each iteration.This representation of SimRank in closed ma-trix form allows the use of optimized off-the-shelfsparse matrix packages for the implementation ofthe algorithm.
This rendered the pruning strate-gies proposed in the original paper unnecessary.We also note that the Bipartite SimRank algorithmintroduced in (Jeh and Widom, 2002) is just a spe-cial case of Equation 4.3.2 Extension with weights and link typesThe SimRank algorithm assumes an unweightedgraph, i.e.
a binary adjacency matrix A. Equa-tion 4 can equally be used to compute similaritiesin a weighted graph by letting A?
be the graph?srow-normalized weighted adjacency matrix.
Theentries of A?
then represent transition probabili-ties between nodes rather than hard (binary) adja-cency.
The proof of the existence and uniquenessof a solution to this more general recursion pro-ceeds in analogy to the proof given in the originalpaper.Furthermore, we allow the links in the graph tobe of different types and define the following gen-eralized SimRank recursion, where T is the set oflink types and Nt(i) denotes the set of nodes con-nected to node i via a link of type t.Sij =c|T |?t?T1|Nt(i)| |Nt(j)|?k?Nt(i),l?Nt(j)Skl.
(5)In matrix formulation:Sk =c|T |?t?TA?t Sk?1A?tT (6)where At is the adjacency matrix associated withlink type t and, again, may be weighted.3.3 SimRank across graphsSimRank was originally designed for the com-parison of nodes within a single graph.
However,SimRank is readily and accordingly applied tothe comparison of nodes of two different graphs.The original SimRank algorithm starts off with thenodes?
self-similarities which propagate to othernon-identical pairs of nodes.
In the case of two dif-ferent graphs A and B, we can instead initialize thealgorithm with a set of initially known node-nodecorrespondences.The original SimRank equation (2) then be-comesSij =c|N(i)| |N(j)|?k,lAik Bjl Skl, (7)which is equivalent toSk = c A?
Sk?1 B?T , (8)or, if links are typed,Sk =c|T |?t?TA?t Sk?1 B?tT .
(9)The similarity matrix S is now a rectangularmatrix containing the similarities between nodesin A and nodes in B.
Those entries of S whichcorrespond to known node-node correspondencesare reset to 1 after each iteration.4 The graph modelThe grammatical relationships were extractedfrom the British National Corpus (BNC) (100 mil-lion words), and the Huge German Corpus (HGC)(180 million words of newspaper text).
We com-piled a list of English verb-object (V-O) pairsbased on the verb-argument information extractedby (Schulte im Walde, 1998) from the BNC.
TheGerman V-O pairs were extracted from a syntacticanalysis of the HGC carried out using the BitParparser (Schmid, 2004).We used only V-O pairs because they consti-tute far more sense-discriminative contexts than,for example, verb-subject pairs, but we plan to ex-amine these and other grammatical relationshipsin future work.We reduced English compound nouns to theirheads and lemmatized all data.
In English phrasal93English GermanLow Mid High Low Mid HighN V N V N V N V N V N V0.313 0.228 0.253 0.288 0.253 0.255 0.232 0.247 0.205 0.237 0.211 0.205Table 1: The 12 categories of test words, with mean relative ranks of test wordsverbs, we attach the particles to the verbs to dis-tinguish them from the original verb (e.g put offvs.
put).
Both the English and German V-O pairswere filtered using stop lists consisting of modaland auxiliary verbs as well as pronouns.
To reducenoise, we decided to keep only those relationshipswhich occurred at least three times in the respec-tive corpus.The English and German data alike are then rep-resented as a bipartite graph whose nodes divideinto two sets, verbs and nouns, and whose edgesare the V-O relationships which connect verbs tonouns (cf.
Figure 1).
The edges of the graph areweighted by frequency of occurrence.We ?prune?
both the English and German graphby recursively removing all leaf nodes (nodes witha single neighbor).
As these correspond to wordswhich appear only in a single relationship, there isonly limited evidence of their meaning.After pruning, there are 4,926 nodes (3,365nouns, 1,561 verbs) and 43,762 links in the En-glish, and 3,074 nodes (2,207 nouns, 867 verbs)and 15,386 links in the German word graph.5 Evaluation experimentThe aim of our evaluation experiment is to testthe extended SimRank algorithm for its ability toidentify novel word translations given the Englishand German word graph of the previous sectionand an English-German seed lexicon.
We use thedict.cc English-German dictionary 1.Our evaluation strategy is as follows.
We se-lect a set of test words at random from among thewords listed in the dictionary, and remove their en-tries from the dictionary.
We run six iterations ofSimRank using the remaining dictionary entriesas the seed translations (the known node equiv-alences), and record the similarities of each testword to its known translations.
As in the originalSimRank paper, c is set to 0.8.We include both English and German test wordsand let them vary in frequency: high- (> 100),1http://www.dict.cc/ (May 5th 2008)mid- (> 20 and ?
100), and low- (?
20) fre-quent as well as word class (noun, verb).
Thus, weobtain 12 categories of test words (summarized inTable 1), each of which is filled with 50 randomlyselected words, giving a total of 600 test words.SimRank returns a matrix of English-Germannode-node similarities.
Given a test word, we ex-tract its row from the similarity matrix and sort thecorresponding words by their similarities to thetest word.
We then scan this sorted list of wordsand their similarities for the test word?s referencetranslations (those listed in the original dictionary)and record their positions (i.e.
ranks) in this list.We then replace absolute ranks with relative ranksby dividing by the total number of candidate trans-lations.6 ResultsTable 1 lists the mean relative rank of the referencetranslations for each of the test categories.
Thevalues of around 0.2-0.3 clearly indicate that ourapproach ranks the reference translations muchhigher than a random process would.Relative rankFrequency0.0 0.2 0.4 0.6 0.8 1.0051525Figure 2: Distribution of the relative ranks of thereference translations in the English-High-N testset.Exemplary of all test sets, Figure 2 shows thedistribution of the relative ranks of the referencetranslations for the test words in English-High-N.The bulk of the distribution lies below 0.3, i.e.
inthe top 30% of the candidate list.In order to give the reader an idea of the results,we present some examples of test words and their94Test word Top 10 predicted translations Rankssanction Ausgangssperre WirtschaftssanktionAusnahmezustand Embargo MoratoriumSanktion Todesurteil Geldstrafe Bu?geldAnmeldungSanktion(6)Ma?nahme(1407)delay anfechten revidieren zuru?ckstellenfu?llen verku?nden quittieren vertagenverschieben aufheben respektierenverzo?gern(78)aufhalten(712)Kosten hallmark trouser blouse makup uniformarmour robe testimony witness jumpercost(285)o?ffnen unlock lock usher step peer shut guardhurry slam closeopen(12)undo(481)Table 2: Some examples of test words, their pre-dicted translations, and the ranks of their truetranslations.predicted translations in Table 2.Most of the 10 top-ranked candidate transla-tions of sanction are hyponyms of the correcttranslations.
This is mainly due to insufficientnoun compound analysis.
Both the English andGerman nouns in our graph model are singlewords.
Whereas the English nouns consist only ofhead nouns, the German nouns include many com-pounds (as they are written without spaces), andthus tend to be more specific.Some of the top candidate translations of de-lay are correct (verschieben) or at least acceptable(vertagen), but do not count as such as they aremissing in the gold standard dictionary.The mistranslation of the German noun Kostenis due to semantic ambiguity.
Kosten co-occurs of-ten with the verb tragen as in to bear costs.
Theverb tragen however is ambiguous and may aswell be translated as to wear which is strongly as-sociated with clothes.We find several antonyms of o?ffnen among itstop predicted translations.
Verb-object relation-ships alone do not suffice to distinguish synonymsfrom antonyms.
Similarly, it is extremely difficultto differentiate between the members of closedcategories (e.g.
the days of the week, months ofthe year, mass and time units) using only syntacticrelationships.7 Conclusions and Future ResearchThe matrix formulation of the SimRank algorithmgiven in this paper allows an implementation usingefficient off-the-shelf software libraries for matrixcomputation.We presented an extension of the SimRankalgorithm to edge-weighted and edge-labeledgraphs.
We further generalized the SimRank equa-tions to permit the comparison of nodes from twodifferent graphs, and proposed an application tobilingual lexicon induction.Our system is not yet accurate enough to beused for actual compilation of translation dictio-naries.
We further need to address the problem ofdata sparsity.
In particular, we need to remove thebias towards low-degree words whose similaritiesto other words are unduly high.In order to solve the problem of ambiguity, weintend to apply SimRank to the incidence repre-sentation of the word graphs, which is constructedby putting a node on each link.
The proposed al-gorithm will then naturally return similarities be-tween the more sense-discriminative links (syn-tactic relationships) in addition to similarities be-tween the often ambiguous nodes (isolated words).ReferencesM.
Diab and S. Finch.
2000.
A statistical word-level translation model for comparable corpora.
InIn Proceedings of the Conference on Content-BasedMultimedia Information Access (RIAO).G.
Jeh and J. Widom.
2002.
Simrank: A measure ofstructural-context similarity.
In KDD ?02: Proceed-ings of the eighth ACM SIGKDD International Con-ference on Knowledge Discovery and Data Mining,pages 538?543.P.
Koehn and K. Knight.
2002.
Learning a translationlexicon from monolingual corpora.
In Proceedingsof the ACL-02 Workshop on Unsupervised LexicalAcquisition, pages 9?16.P.
Gamallo Otero and J. Ramon Pichel Campos.
2005.An approach to acquire word translations from non-parallel texts.
In EPIA, pages 600?610.R.
Rapp.
1999.
Automatic identification of word trans-lations from unrelated English and German corpora.In Proceedings of the 37th Annual Meeting of theAssociation for Computational Linguistics on Com-putational Linguistics, pages 519?526.Helmut Schmid.
2004.
Efficient parsing of highly am-biguous context-free grammars with bit vectors.
InCOLING ?04: Proceedings of the 20th InternationalConference on Computational Linguistics, page 162.Sabine Schulte im Walde.
1998.
Automatic Se-mantic Classification of Verbs According to TheirAlternation Behaviour.
Master?s thesis, Insti-tut fu?r Maschinelle Sprachverarbeitung, Universita?tStuttgart.95
