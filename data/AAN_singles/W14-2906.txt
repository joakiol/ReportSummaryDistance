Proceedings of the 2nd Workshop on EVENTS: Definition, Detection, Coreference, and Representation, pages 35?44,Baltimore, Maryland, USA, June 22-27, 2014.c?2014 Association for Computational LinguisticsConceptual and Practical Steps inEvent Coreference Analysis of Large-scale DataFatemeh Torabi Asr1, Jonathan Sonntag2, Yulia Grishina2and Manfred Stede21MMCI Cluster of Excellence, Saarland University, Germanyfatemeh@coli.uni-saarland.de2Applied Computational Linguistics, University of Potsdam, Germanysonntag|grishina|stede@uni-potsdam.deAbstractA simple conceptual model is employedto investigate events, and break the taskof coreference resolution into two steps:semantic class detection and similarity-based matching.
With this perspective analgorithm is implemented to cluster eventmentions in a large-scale corpus.
Resultson test data from AQUAINT TimeML,which we annotated manually with coref-erence links, reveal how semantic conven-tions vs. information available in the con-text of event mentions affect decisions incoreference analysis.1 IntroductionIn a joint project with political scientists, we areconcerned with various tasks of indexing the con-tent of a large corpus of newspaper articles.
Tosupplement other NLP tools and as an interest-ing information for the political scientists by itself,we are interested in keeping track of discussionsaround headline events such as attacks and crises.The main challenges in the project include:1. proposing a definition of event identity, and2.
finding the actual mentions in natural text,to construct clusters of, so-called, coreferentialevents.
We refer to the former task as a formalconvention, a vital step in order for useful resultsto be delivered to the human text analysts.
The lat-ter is basically an information extraction task oncea clear problem specification is obtained.The main objective of the paper is to shedlight on each of the above tasks by applying athree-layer event ontology1.
Terminologies from1The term ontology is used to refer to a conceptual modelof events and connections between them rather than a partic-ular knowledge base implementation.earlier theories (Davidson, 1969) up until recentwork (Hovy et al., 2013a) are combined to draw anintegrated picture of the event coreference prob-lem.
The semantic layer is established with thehelp of WordNet synsets.
Related entities andtimestamps are considered as fundamental eventattributes that in practice can be resolved from thecontext of a mention.
We implement an incremen-tal event clustering algorithm with respect to theadapted ontology of events and use a minimal lin-guistic procedure to extract values from text forevery event attribute.
This system is being devel-oped to work within a pipeline annotation projectwhere incremental clustering performs efficientlyon large-scale data.In order to evaluate our proposed method, wehave manually annotated a random selection ofevent mentions in the AQUAINT TimeML cor-pus (UzZaman et al., 2013).
Performance of theautomatic system in pair-wise coreference reso-lution is comparable to that of more sophisti-cated clustering methods, which at the same timeconsider a variety of linguistic features (Bejanand Harabagiu, 2010).
The differences betweenthe human annotator pair-wise decisions and theoutput of our clustering algorithm reveal inter-esting cases where coreference labeling is per-formed based upon the adapted semantic conven-tion rather than information available in the textabout time, location and participants of an eventinstance.
In the following, we provide an overviewof the adapted ontology, background on eventcoreference, and finally our implementation andexperiments within the proposed framework onreal data as well as the annotated corpus.
We pointto related work at the various appropriate places inthe paper.2 An Object Oriented OntologyThe general impression one gets by a review ofthe coreference literature, is that at the semantic35formalism level, events are engaged with a higherdegree of complexity and more variety than en-tities.
That is probably because of the concretenature of entities: intuitively, an event happens,whereas, an entity exists.
As a subject matter, thelatter is more straightforward to get decomposedinto smaller components and be identified by cer-tain feature attributes.
The ontology explained inthis chapter is general in the sense that one could(perhaps should) start understanding it by exam-ples about entities.A realized entity belongs to a class of enti-ties sharing the same set of attributes.
For ex-ample, president Obama, as long as being talkedin a political context is considered as an instanceof the class PRESIDENT, comprising attributessuch as Country, Party and Duration ofpresidency.
Any other president can be comparedagainst Obama, with respect to the attribute valuesassociated with them.
Therefore, Bush is a differ-ent instance of the class PRESIDENT regardingthe fact that a different political Party as wellas a different presidential Duration are assignedto him.
Detecting mentions of these PRESIDENTinstances in text corpora would be a technical taskonce the semantic representation was fixed.
At thislevel, instead we face questions like, whether ornot a named entity somewhere in the text detectedby our text processor, e.g., ?Barack Hossein?, isreferring to the one PRESIDENT instance that wenamed above as Obama.Figure 1 illustrates similar levels of abstractionfor event classes, event instances, and event men-tions.
The distinction between the second and thethird layer are more obvious and previously con-sidered as clearly in other frameworks.
The dis-tinction between the first and the second layer,though, is often left implicit, even in recently pub-lished event annotation guidelines.
For example ina Grounded Annotation for Events (GAF, Fokkenset al.
2013), event mentions are clearly distin-guished from instances.
However, the first twolayers have been taken as one, i.e., the semanticlayer.
In their work, event type which is an artifactof the adapted semantic ontology (SEM, Klyneand Carroll 2004), implicitly works similar to theclasses in our definition.
Nevertheless, these threelayers are intuitively separable and familiar for lin-guists working on event and entity recognition.Bejan and Harabagiu (2010), for example, intro-duce the event coreference resolution with an ex-ample put into a similar three-layer hierarchy, de-spite their purely data-driven approach leaving offprior semantic specifications.
Here, we explaineach layer of the model separately.
Issues specificto coreference detection will be presented in thefollowing section.2.1 Event ClassesThe first layer of the ontology determines eventtype definitions.
Each class can have totally dif-ferent attributes depending on the interests of aparticular study.
Some events might be identi-fied only by their time and place, while others byparticipants of prioritized importance.
A very flatsemantic representation would attribute all typesof events with a fixed set of entities, e.g.
: par-ticipants, time and location.
Note, however, thatstructural and semantic differences exist amongevents of different natures, even if these complexphenomena are reduced into something more fa-miliar and tangible such as verb frames (Fillmoreet al., 2003).
For example, a KILLING event is es-sentially attributed with its Agent and Patient,while salient attributes of an EARTHQUAKEinclude Location, Magnitude, Time andHuman Impacts, in a typical news context.This becomes even more clear when event typesare taken and compared against one another fromdifferent genres of text (Pivovarova et al., 2013;Shaw, 2013).
A scientific attitude toward theanalysis of EARTHQUAKE events might character-ize them with Natural Impacts rather thanHuman Impacts.
Thus, the first layer of themodel needs to be designed with respect to thespecific information extraction goals of the partic-ular study, be it a pure linguistic or an application-oriented one.Ambiguities about the granularity of attributes,subevent-ness, scope and most importantly, iden-tity between event instances are dealt with at thedefinition layer for and between classes.
For ex-ample, if the modeler wants to allow coreferencebetween instances of KILLING and SHOOTINGto indicate some type of coreference between anevent and its possible subevent then this needs tobe introduced at the class level, along with a pro-cedure to compare instances of the two classes,which possess different sets of attribute2.
Remarks2The same applies even to a more flexible case, whenthe modeler wants to allow coreference between KILLINGand DYING instances (e.g., if a KILLING?s Patient is thesame as a DYING?s Theme).36Class KILLINGAgent;Patient;Time;Location;Class SHOOTINGAgent;Patient;Time;Location;Weapon;Class EARTQUAKEMagnitude;Human Impacts;Time;Location;Shooting instance 1Agent: Lee Harvey OswaldPatient:  John Fitzgerald KennedyWeapon: a rifleTime: 22.11.1963Location: Dealey Plaza, DallasMention 4?
Shortly after noon on November 22, 1963, President John F. Kennedy was assassinated as he rode in a motorcade through Dealey Plaza.
?Earthquake instance 1Magnitude: 6.6 to 7Human Impacts:  injury and deathTime: 20.04.2013Location: Sichuan, ChinaMentions 2 and 3?
Lushan, China (CNN) -- A strong earthquake that struck the southwestern Chinese province of Sichuan this weekend has killed 186 people, sent nearly 8,200 to hospitals and created a dire dearth of drinking water, Chinese state-run Xinhua reported Sunday.
Earlier reports had said as many as 11,200 people were injured.
?1 n m qFormalism                                  Realization                                           TextKilling instance 1Agent: Lee Harvey OswaldPatient:  John Fitzgerald KennedyTime: 22.11.1963Location: Dealey Plaza, DallasKilling instance 2Agent: an earthquakePatient: local peopleTime: 20.04.2013Location: Sichuan, ChinaMention 1?
President Kennedy was killed three days before he was to make these amendments public.
?Figure 1: A three-layer ontology of events: classes, instances and mentionsof Hovy et al.
(2013b) on different types of iden-tity according to lexicosyntactic similarity, syn-onymy and paraphrasing indicate that the model-ers have a wide choice of identity definition forevent types.
In section 4.3 we explain how to adaptan extended version of synonymy in order to de-fine event classes prior to similarity-based cluster-ing of the mentions.2.2 Event InstancesLayer 2 indicates perfect instantiation, representa-tive of the human common sense intuition of phe-nomena in real world.
Instances in this layer corre-spond to the Davidsonian notion of events as con-crete objects with certain locations in space-time,something that is happening, happened, or willhappen at some point (Davidson, 1969).
There-fore, links from classes to instances representa one-to-many relation.
Every instance of theEARTHQUAKE is determined with a unique setof attribute values.
Two EARTHQUAKE instanti-ations with exactly similar attribute values are justidentical.
In order to keep a clear and simple rep-resentation specific to the study of coreference,the model does not allow any connection or rela-tion between two event instances unless via theirclasses.
Note that in Figure 1, for each realizedobject, only attributes included in the formalismlayer are presented with their values, while in re-ality events occur with possibly infinite number ofattributes.2.3 Event MentionsFacing an event mention in the text, one shouldfirst determine its class and then the unique eventinstance, to which the mention points.
Detectionof the class depends on the semantic layer defi-nitions, while discovering the particular instancethat the mention is talking about relies on the at-tribute values extractable from the mention con-text.Usually, mentions provide only partial informa-tion about their target event instance.
They canbe compared against one another and (if available)against a fully representative mention, which mostclearly expresses the target event by providing allnecessary attribute values.
Fokkens et al.
(2013)refer to such a mention as the trigger event.
Some-times it is possible that the context is even more in-formative than necessary to resolve the unique realworld corresponding event (see details about theimpact of the earthquake in mention 3, Figure 1).In natural text a mention can refer to more thanone event instance of the same type, for examplewhen a plural case is used: ?
... droughts, floodsand earthquakes cost China 421 billion yuan in2013?.
Hovy et al.
(2013b) propose partial coref-erence between singular and plural mentions.
In37our model plural mentions are not treated seman-tically differently, they only point to several in-stances, thus, are coreferential with any singlemention of them as long as the attribute values al-low3.With respect to the above discussion, links fromlayer 2 to 3 represent many-to-many relations: anevent instance can have several mentions in thetext, and a single mention can point to more thanone event instance at a time.3 Towards Coreference AnalysisIn terms of method, two different approaches havebeen tried in the literature under the notion ofevent coreference resolution (Chen and Ji, 2009;Bejan and Harabagiu, 2010; Lee et al., 2012;Hovy et al., 2013b).
The first and most theoreti-cally founded strategy is to decide for every pairof event mentions, whether or not they refer tothe same event instance.
Since in this approachdecisions are independently made for every pairof event mentions, a clear formalism is needed todetermine exactly what types of coreference arepossible and how they are detected by lookingat textual mentions (Chen and Ji, 2009; Hovyet al., 2013b).
Some related work on predicatealignment also fit into this category of research(Roth and Frank, 2012; Wolfe et al., 2013).Alternatively, in automatic event clustering, theobjective is basically discovering event instances:all we know about an event in the world is thecollective information obtained from mentionsreferring to that in a text corpus.
Each clusterin the end ideally represents a unique event inreality with all its attribute values (Bejan andHarabagiu, 2010; Lee et al., 2012).
Some formaland technical differences exist between the twoapproaches.Boolean choice: traditionally, clusters shape withthe idea that all mentions within a cluster are ofthe same identity.
Every randomly chosen pairof mentions are coreferent if they are found in asingle cluster at the end, and non-coreferent oth-erwise.
Therefore, taking this approach implies alevel of formalism, which rules out partial coref-erence.
On the other hand, pair-wise classifica-tion could consider partial coreference whenever3The other type of quasi-identity discussed by Hovy et al.
(2013b) engaged with sub-events is handled in the semanticlevel.two event mentions are neither identical nor totallydifferent (Hovy et al., 2013b).
Soft-clustering cancompensate some deficiencies of traditional clus-tering approaches4.Transitivity: all mentions in a single clusterare coreferential, whereas pair-wise labels allowfor non-transitive relations among event mentions.Depending on the specific goal of a study, thiscould be an advantage or a disadvantage.
Lackof transitivity could be considered as an error if itis not consciously permitted in the underlying se-mantic formalism.Complexity and coverage: event mentions canappear in noisy or sparse context where informa-tion for detection of their target event instance isnot available.
Dealing with such cases is usuallyeasier in a clustering framework where similarityscores are calculated against the collective infor-mation obtained from a population of mentions,rather than an individual occurrence.
Classifica-tion approaches could comparatively handle thisonly if sufficiently representative labeled data isavailable for training.Exploration: a general advantage of cluster anal-ysis is that it provides an exploratory frameworkto assess the nature of similar input records, andat the end it results in a global distributionalrepresentation.
This is specially desired here,since computational research on event coreferenceis in its early ages.
Evaluation corpora andmethodology are still not established, thus, theproblem is not yet in the phase of ?look for higherprecision?
!The method we are going to propose in the nextsection combines a rule-based initial stage with asimilarity-based clustering procedure.
This is par-tially inspired by the work of Rao et al.
(2010),where entity coreference links are looked up inhigh-volume streaming data.
They employ a lex-icon of named entities for cluster nomination toreduce the search space.
Once a mention is visitedonly the candidates among all incrementally con-structed clusters up to that point are examined.
In-cremental clustering strategies are in general suit-able for a pipeline project by efficiently providingsingle visits of every mention in its context.
Fea-ture values of a mention can be extracted from thedocument text, used for clustering, and combined4For example, multi-assignment would allow plural men-tions to take part in several different clusters, each represen-tative of one event instance.38into the feature representation of the assigned clus-ter in a compressed format.4 Event Coreference SystemThe original data in our study is a text corpus au-tomatically annotated with several layers of syn-tactic and semantic information (Blessing et al.,2013).
The English portion includes news andcommentary articles of several British and Amer-ican publishers from 1990 to 2012.
An approx-imate average of 100 event mentions per docu-ment with the large number of total documents permonth (avg.
1200) requires us to think of differentways to reduce the search space and also design alow-complexity coreference resolution algorithm.4.1 PartitioningIn cross-document analysis, typically, a topic-based document partitioning is performed prior tothe coreference chain detection (Lee et al., 2012;Cybulska and Vossen, 2013).
Since we are in-terested to track discussions about a certain eventpossibly appearing in different contexts, this tech-nique is not desired as coreference between men-tions of a single real word event in two differ-ent topics would remain unknown.
For example,when an articles reviews several instances of a cer-tain event type such as different attacks that hashappened in a wide temporal range and in differ-ent locations, such articles would not be includedin any of the individual topics each focused onone event instance.
As an alternative to the pre-vious approach, we perform a time-window par-titioning based on the article publication date be-fore feeding the data into the coreference analysisalgorithm.
Larger windows would capture morecoreference links: this is a parameter that can beset with respect to the available resources in trade-off with the desired search scope.
In the future, wewould like to invent an efficient procedure to com-bine the resulting clusters from consecutive time-windows in order to further enhance the recall ofthe system.4.2 Event Mention and Feature IdentificationIn order to extract event mentions we use theClearTK UIMA library (Ogren et al., 2008), checkthe PoS of the head word in the extracted textspan and take all verbal and nominal mentionsinto account.
In the current implementation allevent classes are identified by a fixed set of at-tributes including Timestamps and RelatedEntities.
While being very coarse-grained,this way of attribution is quite intuitive: eventsare identified by times, places and participantsdirectly or vaguely attached to them.
Temporalexpressions are extracted also by ClearTK andnormalized using SUTime (Chang and Manning,2012).
Named entities of all types except Dateare used which are obtained from previous workon the same dataset (Blessing et al., 2013).4.3 The Two-step AlgorithmHaving all required annotations, we select atime window and perform the following twosteps for event mentions of the TimeML classesOccurrence, I-Action, Perception andAspectual5.1) Semantic class identification: WordNetsynsets provide a rich resource in order to beadapted as event classes (Fellbaum, 1999).
Theycover a large lexicon and the variety of rela-tional links between words enables us to specifya clear semantic convention for the coreferencesystem.
In addition to the mentions coming fromthe same synset, we allow coreference betweenevents belonging to two different synsets that aredirectly connected via hypernymy or morphose-mantic links.
While every WordNet synset com-prises words only from a single part of speech,morphosemantic relations allow the model to es-tablish cross-PoS identity among words sharinga stem with the same meaning which is desiredhere: observe (verb) and observation (noun)6.
AJava library is employed to access WordNet anno-tations (Finlayson, 2014).2) Similarity-based clustering: A mention iscompared against previously constructed clus-ters with respect to the attribute values that areextractable from its context.
In order to fillthe Timestamps attribute we have employed aback-off strategy: first we look at all time expres-sions in the same paragraph where the event men-tion appears, if we found enough temporal infor-mation, that would suffice.
Otherwise, we lookinto the content of the entire article for tempo-ral expressions.
The Related Entities at-5Other types, namely, Report, State and I-Stateevents are not interesting for us, therefore such mentions aresimply skipped.6When a mention is visited all compatible synsets accord-ing to the head lemma are tried because in the current imple-mentation we do not perform word sense disambiguation.39tribute is filled similarly by looking at the namedentities in the context of the event mention.
Thefirst step is a procedure to candidate clusters con-taining mentions of related types.
If no clusteris a candidate, a singleton cluster is created andits class is added to the index of visited eventtypes (synsets).
If candidate clusters already ex-ist, we calculate the feature-based similarity scorefor each.
If the best score is below a threshold anew singleton cluster is created but in this case forthe reason that, perhaps, not a new type but a newevent instance is visited.5 Manual Annotation and EvaluationThe Event Coreference Bank, which is the largestavailable corpus with cross-document corefer-ence labels, supports only a within topic evalu-ation (ECB, Bejan and Harabagiu 2010).
In or-der to perform a more realistic evaluation of themethod presented in this paper, we selected a sub-set of events from the AQUAINT TimeML cor-pus and annotated those with coreferentiality.
TheAQUAINT TimeML data has recently served asone of the benchmarks in the TempEval sharedtask (UzZaman et al., 2013) and is available forpublic use7.
It contains 73 news report docu-ments from four topics, annotated with 4431 eventmentions and 652 temporal expressions whichmake it suitable for our task.
Two main differ-ences between our annotation and the ECB dataare: 1) event mentions here are selected semi-randomly8and across topics rather than topic-based, 2) they are shown pair-wise to the anno-tator (in order to catch the transitivity patternsafter the analysis), whereas, in the ECB, eventmentions are clustered.
Furthermore, the dataalready comes with manually assigned mentionboundaries, event types, temporal expressions andlinks between events and temporal expressions, allaccording to the TimeML standards (Hobbs andPustejovsky, 2003).
These serve exactly as fea-tures that our algorithm uses for construction ofclusters.
We only had to perform named entityrecognition automatically to have data ready forevaluation of the model.
The manual annotation7http://www.cs.york.ac.uk/semeval-2013/task18Since the number of coreferential mentions is muchsmaller than non-coreferent ones, we adapted a heuristic mea-sure to make sure that we will have some similar mentionsamong the 100 records.
Therefore, we would call it a semi-random selection, still different from the fully selective strat-egy employed for ECB.of 4950 pairs resulting from 100 selected eventmentions (100!2!(100?2)!)
was done with the help of asimple user interface, which showed each of thetwo event mentions within its context to the an-notator and asked for pushing yes, no or next(undecided) button to proceed to the next pair.After studying the annotation guideline publishedby Cybulska and Vossen (2014), our expert spentsome hours during a week for the job.
Decisionsmade in shorter than 500 ms were revised after-wards.
There was one no answer which the an-notator found unsure after revision, as it resultedin a transitivity violation, but we left it unchangeddue to the nature of pair-wise decisions.
In the endwe came up with a total of 36 yes, and 4914 nopairs.6 ExperimentsThis section provides an insight into how clustersof event mentions are created for a portion of ourlarge news corpus.
We also run the algorithm onthe manually annotated data to perform an erroranalysis.6.1 Construction of Event ClustersNews text from New York Times and Washing-ton Post are combined to demonstrate a show-case of clustering for a time-window of two weeks(250 articles)9.
Figure 2 shows the creation curveof event classes (type index entries) and eventinstances (clusters) as the number of the vis-ited mentions increases.
Comparison between thenumber of mentions with that of clusters indicatesthat a great deal of event instances are mentionedonly once in the text.
Since, for each mention, allcompatible synsets are added to the type index (ifnot there already) during the early stages of clus-tering the number of the type index entries is timesthe number of visited mentions.
In the middleto the end phases the type index contains a largecollection of event classes, also a decent numberof non-singleton clusters (repeatedly mentionedevent instances) are created.
Statistics of the typeof clusters obtained after performing the algorithmon the processed mentions are presented in Ta-ble 1.
A significant number of non-singleton clus-ters contain mentions only from a single paragraphor a single article, which is expected given the type9This collection is processed within a few minutes on anormal PC by the proposed algorithm starting with zero clus-ters.40Figure 2: Number of clusters and the type index entries as mentions are visited in 250 articlesof features; remember that Timestamps andNamed Entities are looked up in a paragraphscope.
Clusters containing mentions from severalarticles, namely, the popular ones are most inter-esting for us as they would be representative of thesystems performance on cross-document corefer-ence analysis.
By looking at those we found thatthe named entities have a very important role infinding similar subtopics within and between doc-uments.
Temporal expressions are less helpful asthey are rare, and otherwise introduce some noisewhen documents are already being processed ina specific publication time-window.
For example,the word today which appears in most articles ofthe same day (and would be normalized to thatday?s date, e.g., ?1990.01.12?)
would gather men-tions of a general event type, e.g., meet, although,they might not be pointing to the same instance.The employed semantic convention establishes abalance between efficiency and recall of the sys-tem.
Nevertheless, it sometimes allows clusteringof intuitively unrelated actions.
In order to en-hance the clustering performance in terms of theprecision, we have a parameter to give priority towithin synset coreference.Cluster type Freq.
Avg.
contentSingleton 12895 1Single paragraph 1360 2.36Single article 807 3.95Popular 182 2.99Table 1: Different types of resulting clusters6.2 Error AnalysisWe fed all event mentions from the AQUAINTTimeML corpus into the algorithm exactly in thesame way that we did in case of our large newscorpora.
The algorithm has a few parameterswhich we set by looking at samples of resultingclusters prior to the measurement on the labeledportion.
This is a minimal NLP system given thatneither syntactic/semantic dependency of entitiesto the event head word nor the type of attachmentto temporal expressions in the context are takeninto account.
Nevertheless, we obtain 51.3% pre-cision and 55.6% recall for the pair-wise corefer-ence resolution task on the annotated data.
Theresulting F-score of 53.4% is comparable with thebest F-scores reported in the work of Bejan andHarabagiu (52.1% on ECB for the similar task)while they use a rich linguistic feature set, as wellas a more sophisticated clustering method.Coreference Total Related class Same doc.True positive 20 100% 25%True negative 4895 16% 2%False positive 19 100% 36%False negative 16 33% 7%Total 4950 15% 2%Table 2: Pair-wise decisionsTable 2 shows false positive and negative answersseparately.
As reflected in the results, positivelabels are given only to mention pairs of relatedclasses (headwords need to share a synset, or arerelated via hypernym and morphosemantic linksin WordNet).
36% of positive labels are given topairs within some article which is expected giventhat common contextual features are easy to findfor them.
In such cases, usually linguistic featuresare needed to resolve participants or the relativetemporality of one mention against the other:a. some people are born rich, some are bornpoor.b.
the bullet bounced off a cabinet and rico-cheted into the living room.41In some cases, on the other hand, the disagreementdepends on the semantic approach to the defini-tion of identity, and therefore, is more controver-sial.
The human annotator has apparently beenmore conservative to annotate coreference whenthe head words of the mentions were a bit differentin meaning, whereas the system?s decision bene-fited from some flexibility:a. the immigration service decided the boyshould go home.
/ they made a reasonabledecision Wednesday in ruling that...b. if he goes, he will immediately become...It is not clear, for example, whether ruling is a sub-event of the decision or exactly the same event.
Asimilar distinction needs to be made in case of thefalse negative labels.
The automatic clustering isnot able to detect coreference mostly in case ofsparse context, where enough information is notavailable to resolve the similarity.
That is whyfalse negative happens more frequently for men-tions coming from different articles (specificallyparagraphs sharing few named entities) and only7% of the time when they happen within a docu-ment:a. the Clinton administration has pushed forthe boy?s return.
/ his son said he didn?twant to go.Sparse context results either in the creation of asingleton cluster for the mention or careless as-signment to some wrong cluster, which in the fu-ture would decrease the chance of meeting coref-erent mentions.
False negatives happening formentions of unrelated semantic classes are due tothe missing links between possibly synonym wordsin WordNet, one of the issues that need to be in-vestigated and cured in the future work.7 ConclusionThis paper presented a variety of material concern-ing event coreference resolution:1.
A general ontology is explained that can beemployed in different studies on events.2.
An algorithm is designed, regardingly, togather coreferential event in a large corpus.3.
A set of event mentions in AQUAINTTimeML is annotated with pair-wise corefer-ence tags within and between topics10.4.
An implementation of the method consider-ing simple and scalable features is tested onreal data and the annotated corpus.5.
Finally, we performed an error analysis of theautomatically assigned labels to identify fu-ture directions.Separating the semantic layer definition of coref-erence from textual attribution of event mentionshas two benefits in our framework.
First, it pro-vides us with an efficient partitioning procedureto reduce the search space.
Second, it makes themodel flexible to allow for different possible se-mantic conventions which could vary from oneapplication to another.
Our adaptation of Word-Net synsets allows for integrative future exten-sion of the model ?
e.g., to capture metaphori-cal and subevent relations based on Methonymyand Entailment links.
The intuition of usingnamed entities for identification of important real-world events resulted in balanced precision and re-call on the test data.
In the future, we would like toinvestigate the effect of linguistic features on im-proving the performance of the algorithm.
In par-ticular, it would be interesting to see whether exactspecification of event head arguments would out-perform the vague attribution with related entities.The state-of-the-art result in the supervised predi-cate alignment approach is a hint for rich linguisticfeatures to be helpful (Wolfe et al., 2013).
On theother hand, depending on the adapted event iden-tity definition, coreferential events might not re-ally share identical arguments (Hasler and Orasan,2009).
There are differences between real datacollections and the available annotated corpora,including ours, which needs to be investigated aswell.
For example, small collections do not in-clude enough same-class event mentions pointingto different event instances, and it brings aboutunrealistic evaluations.
Furthermore, annotationguidelines are usually biased towards a specifictheory of event identity which affect the resultingdata in one way or another.
Some applications de-mand different semantic conventions perhaps withbroader/narrower definition of identity.
This is adilemma that needs to be resolved through moretheoretical studies in touch with real world prob-lems such as the one we introduced in this paper.10The annotation is available at: http://www.coli.uni-saarland.de/?fatemeh/resources.htm42ReferencesBejan, C. A. and Harabagiu, S. (2010).
Unsuper-vised event coreference resolution with rich lin-guistic features.
In Proceedings of the 48th An-nual Meeting of the Association for Computa-tional Linguistics, pages 1412?1422.
Associa-tion for Computational Linguistics.Blessing, A., Sonntag, J., Kliche, F., Heid, U.,Kuhn, J., and Stede, M. (2013).
Towards atool for interactive concept building for largescale analysis in the humanities.
In Proceed-ings of the 7th Workshop on Language Technol-ogy for Cultural Heritage, Social Sciences, andHumanities, pages 55?64, Sofia, Bulgaria.
As-sociation for Computational Linguistics.Chang, A. X. and Manning, C. (2012).
Sutime:A library for recognizing and normalizing timeexpressions.
In LREC, pages 3735?3740.Chen, Z. and Ji, H. (2009).
Graph-based eventcoreference resolution.
In Proceedings of the2009 Workshop on Graph-based Methods forNatural Language Processing, pages 54?57.Association for Computational Linguistics.Cybulska, A. and Vossen, P. (2013).
Semantic re-lations between events and their time, locationsand participants for event coreference resolu-tion.
In RANLP, volume 2013, page 8.Cybulska, A. and Vossen, P. (2014).
Guidelines forecb+ annotation of events and their coreference.Technical report, Technical Report NWR-2014-1, VU University Amsterdam.Davidson, D. (1969).
The individuation of events.In Essays in honor of Carl G. Hempel, pages216?234.
Springer.Fellbaum, C. (1999).
WordNet.
Wiley Online Li-brary.Fillmore, C. J., Johnson, C. R., and Petruck, M. R.(2003).
Background to framenet.
Internationaljournal of lexicography, 16(3):235?250.Finlayson, M. A.
(2014).
Java libraries for ac-cessing the princeton wordnet: Comparison andevaluation.
In Proceedings of the 7th GlobalWordnet Conference, pages 78?85.Fokkens, A., van Erp, M., Vossen, P., Tonelli, S.,van Hage, W. R., SynerScope, B., Serafini, L.,Sprugnoli, R., and Hoeksema, J.
(2013).
Gaf: Agrounded annotation framework for events.
InNAACL HLT, volume 2013, page 11.Hasler, L. and Orasan, C. (2009).
Do corefer-ential arguments make event mentions corefer-ential.
In Proc.
the 7th Discourse Anaphoraand Anaphor Resolution Colloquium (DAARC2009).Hobbs, J. and Pustejovsky, J.
(2003).
Annotatingand reasoning about time and events.
In Pro-ceedings of AAAI Spring Symposium on LogicalFormalizations of Commonsense Reasoning.Hovy, E., Mitamura, T., and Palmer, M. (2013a).The 1st workshop on events: Definition, detec-tion, coreference, and representation.Hovy, E., Mitamura, T., Verdejo, F., Araki, J.,and Philpot, A.
(2013b).
Events are not sim-ple: Identity, non-identity, and quasi-identity.NAACL HLT 2013, page 21.Klyne, G. and Carroll, J. J.
(2004).
Resourcedescription framework (rdf): Concepts and ab-stract syntax.
w3c recommendation, 10 feb.2004.Lee, H., Recasens, M., Chang, A., Surdeanu,M., and Jurafsky, D. (2012).
Joint entity andevent coreference resolution across documents.In Proceedings of the 2012 Joint Conferenceon Empirical Methods in Natural LanguageProcessing and Computational Natural Lan-guage Learning, pages 489?500.
Associationfor Computational Linguistics.Ogren, P. V., Wetzler, P. G., and Bethard, S.
J.(2008).
Cleartk: A uima toolkit for statisti-cal natural language processing.
Towards En-hanced Interoperability for Large HLT Systems:UIMA for NLP, 32.Pivovarova, L., Huttunen, S., and Yangarber, R.(2013).
Event representation across genre.NAACL HLT 2013, page 29.Rao, D., McNamee, P., and Dredze, M. (2010).Streaming cross document entity coreferenceresolution.
In Proceedings of the 23rd Inter-national Conference on Computational Linguis-tics: Posters, pages 1050?1058.
Association forComputational Linguistics.Roth, M. and Frank, A.
(2012).
Aligning predicateargument structures in monolingual comparabletexts: A new corpus for a new task.
In Proceed-ings of the First Joint Conference on Lexicaland Computational Semantics-Volume 1: Pro-ceedings of the main conference and the shared43task, and Volume 2: Proceedings of the Sixth In-ternational Workshop on Semantic Evaluation,pages 218?227.
Association for ComputationalLinguistics.Shaw, R. (2013).
A semantic tool for historicalevents.
NAACL HLT 2013, page 38.UzZaman, N., Llorens, H., Derczynski, L., Verha-gen, M., Allen, J., and Pustejovsky, J.
(2013).Semeval-2013 task 1: Tempeval-3: Evaluat-ing time expressions, events, and temporal rela-tions.
In Second joint conference on lexical andcomputational semantics (* SEM), volume 2,pages 1?9.Wolfe, T., Van Durme, B., Dredze, M., Andrews,N., Beller, C., Callison-Burch, C., DeYoung,J., Snyder, J., Weese, J., Xu, T., et al.
(2013).Parma: A predicate argument aligner.44
