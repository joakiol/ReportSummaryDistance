Proceedings of NAACL HLT 2009: Tutorials, pages 9?10,Boulder, Colorado, June 2009. c?2009 Association for Computational LinguisticsOpenFst: An Open-Source, Weighted Finite-State Transducer Libraryand its Applications to Speech and LanguageMichael Riley, Cyril Allauzen, and Martin Jansche, Google Inc.Finite-state methods are well established in language and speech processing.
OpenFst (available fromwww.openfst.org) is a free and open-source software library for building and using finite automata, inparticular, weighted finite-state transducers (FSTs).
This tutorial is an introduction to weighted finite-state transducers and their uses in speech and language processing.
While there are other weightedfinite-state transducer libraries, OpenFst (a) offers, we believe, the most comprehensive, general andefficient set of operations; (b) makes available full source code; (c) exposes high- and low-level C++APIs that make it easy to embed and extend; and (d) is a platform for active research and use amongmany colleagues.1 Tutorial Outline1.
Introduction to OpenFstThe first part of the tutorial introduces operations on weighted automata such as determiniza-tion and intersection/composition as well as the corresponding OpenFst binaries and library-levelAPIs that implement those operations.
We describe how to read FSTs from simple textual de-scriptions and combine them into larger and more complex machines, and optimize them usingsimple command-line and library calls.?
Introduction?
Motivating examples?
Finite-state methods in NLP and Speech?
A quick tour of OpenFst?
Finite-state machines and operations?
OpenFst binaries?
High-level C++ API?
Human-readable file formats?
Comparison of OpenFst and competing libraries?
Comparison with the AT&T FSM LibraryTM?
Brief comparison with SFST and related libraries?
Advanced usage of OpenFst?
Low-level C++ API?
Constructing and modifying Fst objects programmatically?
Implementing new concrete Fst classes?
Adding new weight semirings?
Customizing matchers and filters for composition92.
ApplicationsThe second part of the tutorial focuses on several application areas of interest to the NAACL HLTaudience, including speech recognition, speech synthesis, and general text processing.
In eachapplication area we discuss a straightforward example in detail, then delve into an advanced ex-ample that highlights important features of OpenFst, common pitfalls, efficiency considerations,new research directions, etc.
These examples are drawn from our extensive experience in applyingOpenFst to problems in speech and language processing.?
Automatic speech recognition?
Context dependency transducers?
Language models and grammars?
Natural Language Processing?
Unicode processing?
Text analysis, text normalization?
Pronunciation models?
Other areas?
Computational biology?
Pattern matching2 Target AudienceThis tutorial is intended for students, researchers, and practitioners interested in applying finite-statemethods.
It is suitable for participants of a variety of backgrounds, including those without any back-ground in finite-state techniques as well as advanced users of existing software packages.
For thoseunfamiliar with finite-state transducers, the first portion of the tutorial provides an introduction to thetheory and application areas.
Users of other finite-state libraries will particularly benefit from the con-trastive description of the unique features of OpenFst, its C++ API, and the examples drawn fromreal-world applications.3 PresentersMichael Riley began his career at Bell Labs and AT&T Labs where he, together with Mehryar Mohri andFernando Pereira, introduced and developed the theory and use of weighted finite-state transducers (WF-STs) in speech and language.
This work was recognized in best paper awards from the journals SpeechCommunication and Computer Speech and Language.
He has been a research scientist at Google, Inc.since 2003.
He is a principal author of the OpenFst library and the AT&T FSM LibraryTM.
He has givenseveral tutorials on WFSTs before: at ACL 1994, Coling 1997 and Interspeech 2002.Cyril Allauzen is another key author of the OpenFst library.
His main research interests are in finite-statemethods and their applications to text, speech and natural language processing and machine learning.Before joining Google, he worked as a researcher at AT&T Labs ?
Research and at NYU?s CourantInstitute of Mathematical Sciences.Martin Jansche has applied the OpenFst library to several speech and language problems at Google.
HisFST-related interests are in text processing for speech tasks and in learning and applying pronunciationand transliteration models.10
