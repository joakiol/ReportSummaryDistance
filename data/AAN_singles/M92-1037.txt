UNIVERSITY OF MARYLAND/CONQUEST :DESCRIPTION OF THE ICTOAN SYSTEM A SUSED FOR MUC- 4James MayfieldComputer Science DepartmentUniversity of Maryland Baltimore Count yBaltimore, MD 21228-5398 US Amayfield@cs.umbc.eduINTRODUCTIONThe ICTOAN system is a natural language processing system developed jointly by ConQuest, Inc .
and theUniversity of Maryland Baltimore County.
The system was written from scratch during the first five monthsof 1992 using an estimated eight person-months of labor .
The template generation routines were reused fromour MUC-3 system [1], providing leverage of perhaps one person-month .
Adaptation of software designedfor the ConQuest text retrieval system provided leverage of another six person-months .The system code was written by the author and by Paul Nelson of ConQuest, Inc .
The semantic netrepresentations of world knowledge were developed by Alexander Ho .
Roy Cutts, Terri Hobbs, Mark Wil-son, and the author wrote the various grammars .
Terri Hobbs also cleaned up significant portions of thedictionaries .
Paul Riddle modified our MUG3 template generation software to work with the new templat especifications .We had two main goals in designing the system :1. to develop a flexible architecture that would support the interleaving of top-down and bottom-upprocessing .2. to produce a fast system .We were largely successful at achieving both of these goals .
The ICTOAN system architecture allows low-level and high-level processes to be interleaved and duplicated in arbitrary configurations, which are specifie dat run-time .
And the system is quite fast, processing 100 texts in under twenty minutes .276ARCHITECTUREThe ICTOAN system architecture is based on the idea of multiple parallel streams of data .
Each streamcarries a particular class of information about the text being processed .
For example, a constituent strea mcarries all linguistic constituents found in the text, while an object stream carries semantic net nodes repre-senting the meaning of those constituents .The data in the streams travel in parallel through a pipeline of processes .
Each process can read itemsfrom one or more streams, make any inferences it chooses about those items, and place those same items o rnew items it creates onto one or more streams .The processes used for the MUC-4 evaluation first build a semantic net representation of the input story ,then fill out templates based on this representation .
Three main types of processes were used by ICTOA Nto generate a semantic net representation of a MUC-4 input text :1.
Parsing processes : these processes attempt to uncover the linguistic structure of the input text .2.
Disambiguation processes : these processes reject unlikely interpretations of the input text .3.
Interpretation processes: these processes build semantic net structures that represent the meanin gof portions of the input text .The system is designed so that these three types of processes can be intermingled in any desired order .This provides the researcher with an environment in which it is easy to test the effectiveness of a particula rprocess, and affords the system designer great flexibility in tailoring the system to a particular application .KNOWLEDGE REPRESENTATIO NSemantic NetsICTOAN uses a semantic net representation language (a variant of the KODIAK knowledge representatio nlanguage [2]) for meaning representation .
Each process has access to the entire semantic net for the stor ybeing processed, as well as to the semantic net representing the systems world knowledge .
For MUC-4, theworld knowledge semantic net contained 3652 concepts .Dictionarie sICTOAN used the ConQuest dictionaries for its lexical knowledge .
These dictionaries, which were derive dfrom the Proximity Linguistic System, contain 70,000 word senses for 40,000 words with part-of-speec hinformation as well as limited syntactic features .277GrammarsTwo types of grammar were used for our evaluation system .
Simple context-free grammars with mino raugmentations were used for the initial parses .
The sentence interpretation component used a grammar tha tclosely resembles a unification grammar (although strict unification is not used) .
This grammar enforcessemantic constraints by verifying that any interpretation to be built meets all constraints expressed in thesemantic net .
For example, the following rule was used to interpret sentences based on the verb `assaulted 'or the verb `attacked' :(assaulted attacked) {syntax ssubject np* verb vp+past+activeobject upsemantics assault.actionactor subjectvictim object}In the section labeled `syntax,' the names `subject,' `verb,' and `object' are labels given to the semanticrepresentations of the corresponding sub-constituents .
The asterisk means that the vp is the head of the abeing built .
The section labeled `semantics' indicates that the semantic net representation of the sentence i san ASSAULLACTIOY, for which the ACTOR slot is filled by the semantics of the subject, and the PLACE slot isfilled by the semantics of the object .STREAMSThe ICTOAN system used three streams during the MUC-4 evaluation :1.
A constituent stream, which carried syntactic constituents (e .g.
noun phrases, prepositional phrases ,etc .2.
An object stream, which carried semantic net nodes representing the meaning of constituents on th econstituent stream .3.
An attack stream, which carried semantic net nodes that represent attacks described in the story .The template generator simply observed the attack stream and generated one template for each attack thatwent by.PROCESSESThe following five main processes were included in the MUC-4 evaluation system :278?
Statistical word sense disambiguation.
ICTOAN can store multiple word senses for each word inits dictionary .
To eliminate some of the ambiguity that arises when processing a word with multiplesenses, a statistical process is used to reject some of the less likely senses .
This process does a prelimi-nary syntactic parse of each sentence, relative to a fairly complete context-free grammar for sentences .Each word sense is then rated according to the size of the largest constituent that contains it .
Thisinformation is used during the initial parse to eliminate unlikely parses .?
Initial parse .
Once word sense has been assigned a likelihood, an initial syntactic parse is don erelative to a context-free grammar.
This parse is primarily aimed at detecting noun phrases, althoug hin the evaluation system it produced other constituents as well (such as prepositional phrases and verbgroups) .
No semantic information is used at this time ; simple features are used to eliminate parses ,but they are purely syntactic in nature .
The statistics generated by the previous process are used hereto eliminate unlikely parses .?
Phrase interpretation.
The phrase interpreter attempts to build a semantic net representation o feach constituent .
In the evaluation system, the semantic net was searched for a node with the sam ename as the head word of the constituent being interpreted .
This allowed a wide variety of phrases t obe assigned a basic interpretation without a complicated mechanism .?
Sentence interpretation.
Sentence interpretation is done by using a unification-like grammar t ocombine the meanings of subconstituents into a single semantic net node representing the meaning o fthe sentence .
This grammar was described in the subsection entitled `Grammars' above .?
Template generation.
A template is generated for each attack that passes along the attack stream .The semantic net node representing a particular slot filler is located by traversing a fixed path shap efrom the node representing the attack .
Set fills are then generated by table lookup, while string fillsare generated by tracing back from the semantic net node to the longest substring of the input tex tthat has that node as its interpretation .EXAMPL EThis section describes ICTOAN's processing of the sentence `GUERRILLAS ATTACKED MERINO' SHOME IN SAN SALVADOR 5 DAYS AGO WITH EXPLOSIVES' from text TST2-MUC4-0048 .
Theinitial parsing process first produces a set of possible constituents .
Note that some ambiguity remains atthis point :[NP : [XNOUNS : GUERRILLAS (UNKNOWN)] ][VP : [VERB_GROUP: ATTACKED (VERB)] ][NP : [XNOUNS : MERINO'S (NOUN) HOME (NOUN)] ][NP : [XNOUNS : MERINO'S (NOUN)] ][VP : [VERB_GROUP : HOME (VERB)] ][XPPS : [PP : IN (PREPOSITION )[NP : [XPROPERS : SAN SALVADOR (PROPER)]]] ][NP : [SPECIFIER: [POST_DETERMINER: 5 (NUMBER)]][XNOUNS : DAYS (NOUN)] ][XADJS : AGO (ADJECTIVE) ][XADVS : AGO (ADVERB) ][XPPS: [PP: WITH (PREPOSITION)[NP: [XNOUNS : EXPLOSIVES (NOUN)]]] ].
(PUNCT)Next, semantic interpretation is performed on each phrase, and the resulting semantic net nodes are com-bined by the phrase interpreter .
Since the basic rule for the verb `attack ' (shown above in the `Grammars '279subsection) has no provision for the attachment of prepositional phrases, only the subject and direct objectare interpreted as part of the resultant ASSAULT.CTION .
Here is the structure that is produced :S : [NP: [XNOUNS : GUERRILLAS (UNKNOWN) ]= GUERRILLAS .
198][VP: [VERB_GROUP : ATTACKED (VERB)] ][NP: [XNOUNS : MERINO'S (NOUN) HOME (NOUN) ]= HOME.201 ]= ASSAULT_ACTION .203 ]Finally, a template is generated for this attack :Generating template number 3for story TST2-MUC4-0048from action node ASSAULT.ACTION .203Generating string fill for GUERRILLAS .198String fill selected for GUERRILLAS .198 is "GUERRILLAS"Generating string fill for GUERRILLAS .198String fill selected for GUERRILLAS .198 is "GUERRILLAS "Generating string fill for HOME .201String fill selected for HOME .201 is "MERINO'S HOME "Here is the resultant template :0.
MESSAGE : ID TST2-MUC4-004 81 .
MESSAGE : TEMPLATE 32 .
INCIDENT: DATE3 .
INCIDENT: LOCATION4.
INCIDENT: TYPE ATTACK5 .
INCIDENT: STAGE OF EXECUTION ACCOMPLISHED6 .
INCIDENT: INSTRUMENT ID7 .
INCIDENT: INSTRUMENT TYPE8 .
PERP : INCIDENT CATEGORY TERRORIST ACT9 .
PERP : INDIVIDUAL ID "GUERRILLAS "10 .
PERP : ORGANIZATION ID "GUERRILLAS "11 .
PERP : ORGANIZATION CONFIDENCE12 .
PHYS TGT: ID "MERINO'S HOME "13 .
PHYS TGT: TYPE CIVILIAN RESIDENCE14.
PHYS TGT: NUMBER15.
PHYS TGT: FOREIGN NATION16.
PHYS TGT: EFFECT OF INCIDENT17.
PHYS TGT : TOTAL NUMBER18.
HUM TGT : NAME19.
HUM TGT : DESCRIPTION20.
HUM TGT : TYPECIVILIAN21.
HUM TGT : NUMBER22.
HUM TGT: FOREIGN NATION23.
HUM TGT: EFFECT OF INCIDENT24.
HUM TGT : TOTAL NUMBER280References[1] James Mayfield and Edwin Addison .
Synchronetics : Description of the Synchronetics system used fo rMUC-3 .
In Beth Sundheim, editor, Proceedings of the Third Message Understanding Conference (MUC-3), pages 207-211 .
Morgan Kaufmann, 1991 .
[2] Robert Wilensky.
Some problems and proposals for knowledge representation .
Memorandum UCB/CSD87/351, University of California, Berkeley Electronic Research Laboratory, 1987 .281
