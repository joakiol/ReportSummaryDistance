A Dynamic Temporal Logic of Events, Intervals and States forNominalization in Natural LanguageRaft NaumannSeminar ftir Allgemeine SprachwissenschaftUniversity of DtisseldorfD-40225 Dtisseldorf, GermanyAbstractThe interpretation of nominalized expressions inEnglish poses several problems.
First, it must beexplained how their meanings are derived from themeanings of the underlying verbs.
Second, diffe-rent forms of nominalizations differ in their se-mantic behaviour.
Finally, aspectual restrictionswhich exist for ingofnominals must be explained.The solution to be proposed is based on the as-sumption that non-stative verbs denote changes.Changes can be conceived of in two differentways, either as objects which bring about a parti-cular result or as relations between states.
A dyna-mic structure of events, intervals and states is defi-ned in which both perspectives can be expressedby means of sorting the universe D. The basic ideais to augment a transition system for DynamicLogic (DL) by a further domain of events suchthat programs from DL can be described either asobjects or relations between states.
The interpreta-tion of verbs is based on the second perspective:they denote (generalized) relations between states.The interpretation of nominalized expressions usesthe first perspective: they denote changes as ob-jects.
Different forms of nominalizations denotedifferent sorts of objects which are systematicallyrelated to the denotation of the underlying verb.1 Data and EvidenceIn English (at least) three forms of nominalizationsexist.
(1) a. the performance of the song (by the so-prano)b. the performing of the song (by the sopra-no)c. the soprano's performing the songThe NP in (la) is usually called a derived nominal,the NP in (lb) an ingolnominal and the NP in (lc)a gerundive nominal.
It is commonly assumed thatthese forms are morphologically and semanticallyderived from the underlying verb, i.e.
perform in(1).
Evidence for this assumption comes from thefollowing data.
First, sentence (2a) is true just incase its corresponding 'statement of occurrence'(Zucchi (1993)) (2b) is true.
(2) a.
The soprano performed the song at 9:00.b.
A performance/performing of the song bythe soprano occurred at 9:00.For gerundive nominals a similar equivalenceexists.
(3a) is a paraphrase of (3b) which is truejust in case (3b) is true.
(3) a.
The soprano's inging the song surprisedUS.b.
That the soprano performed the song sur-prised us.From this equivalence it cannot be inferred that agerundive nominal and a that-clause have the samedenotation.
Only the latter can be arguments ofverbs like believe and know or of predicates like istrue or is false.
This is the so-called distribution-problem.
This first set of data gives rise to thefollowing constraint which a semantic analysis ofnominalizations must satisfy (Zucchi (1993)): Thesemantic properties of ingof, derived and gerun-dive nominals should be accounted for withoutassuming that they are listed in the lexicon, butrather by assuming that they are generated by arule from the meanings of the corresponding verbs.Second, similar to 'ordinary' nouns like'man' derived/ingofnominals (but not gerundive10nominals) allow determiners (4a), yet al forms ofnominalization can occur in subject-position (4b,c).
(4) a. the/a/one performing/performance of thesongb.
Performing the song is strange.c.
The performing (performance) of thesong is strange.These data show that nominalized NPs should getan interpretation which m~kes their type compati-ble with that assigned to 'ordinary' NPs like 'aman' or 'John'.
Otherwise, predicates like 'isstrange' will be type ambiguous, making it neces-sary to explain in a systematic way the (semantic) (7)relationship that exists between different occurren-ces of a predicate.
This yields a second constraint:Derived and ingofnominals must be assigned mea-nings in such a way that it is possible to give auniform interpretation of determiners like some orthe.A third set of data concerns emantic diffe-rences between derived and ingof nominals (whichbehave semantically (almost) alike) on the onehand and gerundive nominals on the other.
First, 2whereas a sentence containing a derived/ingofno-minal has two readings, the corresponding sentencewith a gerundive nominal admits of only one rea-ding.
(5) a.
The soprano's performing of the songsurprised us.b.
The soprano's performing the song sur-prised us.
(5a) has two readings.
According to the first, theexistential-reading, it is the mere performancewhich surprised us and not some specific qualitythe performance had.
On the second reading, theproperty-reading, it is some property the perfor-mance had which was surprising and not the factthat it occurred at all.
By contrast, sentence (5b)with a gerundive nominal has only the existential-reading according to which the soprano was notexpected to perform the song.
The property-rea-ding is excluded.
A second difference concernsselectional distinctions: gerundive and ingofnomi-nals do not occur with the same range of predica-tes.
(6) a.
The performing of the song by the sopra-b.no was slow/sudden/took a long time.
*The Soprano's performing the song wasslow/sudden/took a long time.Whereas gerundive nominals are not possible withpredicates like is slow or take a long time, they areacceptable with surprise.
For ingofnominals thereare no such restrictions.
A final difference has todo with restrictions on which predicates do at alladmit a particular type of nominalization.
Whereasall verbs admit gerundive nominals, ingofnomina-lization is excluded with stative verbs like know orlove.a.
*John's knowing of the answer (*theknowing of the answer by John)b.
*Bill's loving of Mary (*the loving ofMary by Bill)A third constraint therefore is that an analysis mustadmit an explanation of the semantic distinctionsbetween the different forms of nominalization.A Dynamic-Temporal Event-StructureIn Naumann (I 996,1997a,b) a theory of aspectualphenomena has been developed which is based onthe intuition that non-stative verbs like eat or runexpress changes.
The intuitive notion of a changecomprises at least the following two aspects whichare complementary to each other.
(i) something (an object) which brings about hechange(ii) something (a result) which is brought aboutby the change which did not hold before thechange occurred-The notion of a change that is used in (i) and (ii),respectively, refers in each case to the other aspect.In (i) 'change' is understood as the result that isbrought about, i.e., in the sense that is captured by(ii), whereas in (ii) 'change' is meant as the objectthat brings about the result.The second aspect can be described as atransformation of state.
Before the change occur-red, the world was in a particular state, say s, inwhich some condition (property) d~ did not hold,11whereas after the change has occurred, the world isin a state s' in which ~ does hold.
This perspecti-ve is captured in Dynamic Logic (DL).
Some in-put-state s in which -~?
holds is transformed intoan output-state s' in which ?
holds.
Program-let-ters ~ are interpreted as binary relations on thedomain S of states: \[r~\] c S x S. The elements of\[r~\] (pairs of states) can be interpreted as particu-lar executions of the program.
Each program letterdefines an accessibility relation such that DL is apolymodal logic.
The fact that (s,s') ~ \[~1 meansthat state s' can be reached (or is accessible) fromstate s by executing the program rc in s. It is there-fore possible to view the program letter n as alabel by which transitions between states can bedecorated: s ---~(rc) s' holds just in case (s,s')\[rc\] and is to be read as 'by executing rc in states state s' is reached'.The disadvantage of the perspective whichunderlies DL is that changes are only derived ob-jects, i.e.
pairs of states or relations between states,that are defined in terms of the domain S of states.There is no separate domain E the elements ofwhich are interpreted as bringing about the trans-formations of a state s to a state s' denoted by re.It is therefore not possible to interpret r~, when itis used to label a transition, as the object thatbrings about this transition because it is not inter-preted as an independent object.
What is not cap-tured in DL, therefore, is the first perspectivementioned above in (i) according to which a chan-ge can be understood as an object which bringsabout a particular result.
This perspective is captur-ed, among others, in event-semantics (ES), Kfifka(1992), where events are interpreted as elements ofa separate domain E. What is missing in ES is thesecond perspective of a change as a state-trans-former according to which events effect changesby bringing about some result ~.The two perspectives can be combined in thefollowing way.
Each event e is of a particular typePv where the index v corresponds to some (non-stative) verb from English, say eat or run.
The ele-ments of the event-type Pv are characterized bybringing about (or effecting) a change with respectto some property.
For instance, events of type eatbring about changes with respect o the mass of anobject.
This object is denoted by the internal argu-ment of eat, say an apple in eat an apple.
Theresult ~ that holds with respect to this propertyupon termination of the event is that the mass iszero, i.e., the object has vanished.
Events of typerun, on the other hand, bring about a change withrespect o the location of the object that is denotedby the external argument, e.g.
John in John ran.The location of the object at the end of the eventis different from its location at the beginning ofthe event (to be precise, the change need not al-ways consist in a change of location.
Events oftype run around the park are possible counterex-amples.
Rather, the object traverses a non-emptypath.
Whereas the path is empty when the event isstarted, it is non-empty at its end).Events of type eat differ from those of typerun in the way the result d~ is brought about.
Thiscan be illustrated by means of the notion of a nu-cleus-structure (Moens/Steedman (1988)).
A nu-cleus-structure consists of three parts: the incep-tion-point (IP), the development-portion (DP) andthe culmination-point (CP).Nuc leus -St ructureeS S'.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
\[IP DP CPFigure 1The result ?
is evaluated at each part of the nu-cleus-structure.
(Sequential) events of type eat andrun agree on how ~ is evaluated at the IP and atthe CP: it is false at the IP and true at the CP.They differ with respect o the DP.
Whereas ~b isconstantly false on the DP for events of type eat,it continuously holds for events of type run.
Fromthis it follows that for events of type eating ~ onlyholds at the CP and is therefore true at exactly onepoint of the nucleus-structure, whereas for eventsof type running ~ is false at only one point of thenucleus-structure, namely at the IP.
The distinctionbetween events of type eat and those of type runis therefore made in terms of how the result ~ isevaluated at intermediate states of an occurrence.Aspectually it is therefore not the mere input-out-put behaviour that is important but also what hap-pens in between the beginning and the end of anoccurrence.From a procedural perspective the nucleus-structure can be interpreted as the execution-se-quence ~ of some program n. The IP corresponds12to the input-state s, the CP to the output-state s'and the DP to the set of intermediate states s" inbetween s and s': s < s" < s' (where < is the orde-ring on G or some global ordering induced on thedomain S).
Thus, to each event e corresponds itsexecution-sequence G (= (s,s')) such that eachevent-type P, induces a binary relation R,, on Ssuch that each element of R.v is the execution se-quence of a (completed) event e e P~.
The binaryrelation R~ is the result of applying a so-calleddynamic mode to a property of states Q.
The dyna-mic modes corresponding to an accomplishment-verb like eat  and an activity-verb like run are gi-ven in (8a) and (8b), respectively.
(8) a. Con-BEC mode:~,Q~.ss'\[-~Q(s) A Q(s') AVs"\[s < s" < s' -> Q(s")\]\]b. Min-BEC mode:~Q~.ss'\[~Q(s) A Q(s') ^Vs"\[s < s" < s' -> -~Q(s")\]\]In (8) Q is a property of states corresponding tothe result that an event of type P~ is supposed tobring about.
Not all events of type P~ will satisfyOPv(Q) (for OPt the dynamic mode assigned to P~)on their execution-sequence but only a certainsubset, namely the completed sequential ones (fordetails see Naumann (1998) and section (2.1) be-low).
The MIN-BEC-mode (partly) characterizesthe class of accomplishments.
This means that averb-type v which belongs to this class is assignedthis mode.
Activity-verbs like push  are assignedCon-BEC, the mode characterizing the class ofactivities.
Other aspectual classes are characterizedby different modes, Naumann (1997a,b), Nau-mann/Moil (1998).
The dynamic mode assigned toan event-type P~ determines therefore the way inwhich a change ffected by an event of this type isbasically brought about.
On this view events are asort of 'reification' of particular executions of theprogram ~.
In terms of ~ as a label of transitionsthis means that instead of s -o(r0 s' one now hass--o(e) s' such that e ~ P~ and (s,s') e R~ (= Ire\])where R~ is the binary relation induced by P,.
Incontrast o the DL-perspective the label e can beinterpreted as the object that brings about the tran-sition from s to s'.13DL-perspectiveI .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
I ( s , s ' )  e in\]S S'new perspectiveee  P,I .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
IS S'Figure 2The above considerations are made precise in thefollowing definition.Definition: a dynamic-temporal structure of events,intervals and states of signature <VERB~, VERBs,VAR, TR, DM> is a tuple<D, E, S, O,T ,  I, c~, B, g, y, 5, K, ~?
*, {Re}v'~ VERBs, {0i} i~TR, coingco 0,cog~> such that(i) D is the domain of entities (or individuals)(ii) E = <E, m, {Pv} v ~ VERBn~ > is aneventuality structure with- E is a set of events- m is a binary relation on E (the part-ofrelation on E) which is a partial order- the Pv are unary relations on E(iii) S = <S, { Rop(Q )} OP ~ DM, { Qp} pc VAR>is a transition structure with- S is a set of states- {Rop(Q)} OP ~ DM is a set of parametri-zed relations on S. For each Q ~ {Qp} pVAR RopcQ ) is a set of (finite) sequen-ces, i.e.
a subset of S* (S* is the set ofall finite sequences of elements from S)on which Q is evaluated in the same way.the Qp are unary relations on S; they re-present properties of states which can bechanged by events of an appropriate type.
(iv) O is the domain of urelements ('ordinary'objects)(v) T = <T,< > is a (time-)point-structure withT the domain of time-points (moments oftime)< is a strict partial, linear and discreteordering on T(vi) I = <I, <~, m > is the interval-structure indu-ced by T such that(vii)(viii)(ix)(x)(xi)(xii)I is the set of all non-empty fini-te convex sets (intervals) over<T, <>\[t,t'\] <I \[h,h'\] iff t' < t I\[t,t'\] ~ \[h,tl'\] iff tt_<t and t'<_ h'Instead of construing the interval-structu-re I from the point-structure, one can takeintervals as primitive and define a rela-tion In between elements of T and ele-ments of I which holds just in case t isan element of i in the structure I inducedby T.cx :E ->Tand13 : E -> T ass ign  to anevent e its beginning-time o~(e) and end-time 13(e), respectively (it is required thatco(e) < 13(e)).
The functions c~ and B indu-ce a function x : E -> I which assigns toeach e e E its run-time interval x(e) suchthat z(e) = i = {t ~ T I ~(e) _< t _< 13(e)}Thus, z can also be defined as the pro-duct-mapping <ct,13> : E -> T x T.It : T -> S is a function which assigns toeach time point t ~ T the state It(t) ~ Swhich holds at ty :  {P~} -> \[{Qp} -> {Rdm(Q)} \] is a func-tion which assigns to each P~ a dynamicmode, i.e., a relation between propertiesof states and (finite) sequences of states(see (8) above for details).~5: {P~} v ~ VERB.,-> {Qp} p~ VARassigns to each event-type P, a propertyof states QpThis definition is too simple because theproperty depends on some argument x(e.g., it is the mass of an apple that getschanged).
Therefore, ~i should be definedas a function which assigns to each P~ forsome v a function from D to {Qp}.
Asthe simplified definition does have nonegative consequences for the analysis, itwill be chosen for the sake of simplicity.The {Rv, } v' ~ VERB s are n+2-ary rela-tions on D" x S x S (for variable n)which are used to interpret stative verbs.VERB, = { know, love, believe, be ill .... }is the set of stative verbs in English.Thus, VERB = VERBn, u VERB, is theset of (basic) verbs in English.The 0~ i e TR are thematic relations (ineffect, partial functions) like Agent or Pa-14(xiii)tient, i.e.
relations between events andindividuals (not necessarily urelements,that is individuals of sort o).K : {P,} v e VERB~ -> 0* assigns toeach P, an n-tuple of 0-relations, namelyall those relations for which events oftype P~ are defined (0" is the set of finitesequences (tuples) of thematic relations).The role of ~?
is similar to that of axiomslike (i) which are used in ES:(i) Ve\[Pgiv,(e) -> ~Xl,X2,X3\[(e,x I) ~ 0ngen t A(e, x2) e 0soo~:o A (e, X3) e 0~,~\]\]K* is a (partial) function which assigns toan event-type P and an event e an n-tupleof objects:*(P)(e) = <x I..... x,> iff (i) e e P, (ii)K(P) = <01 ..... 0~> and (iii) ni\[~c(P)\](e) =xi(xiv)(xv)where ~ is the n-th projection functionwhich when applied to the value of ~c forsome P yields the n-th element of ~c(P): if~:(P) = <0~ ..... 0,>, then ~i(n(P)) = 0 i if 1_< i _< n, undefined otherwise.EcD,  S c D, Tc  D, O ~D,  I cDThe functions coi,g~o  and co~ are definedbelow in sections (2.1) and (2.2) respec-tively.The composition of o~ and It as well as that of 13and It assign to each event e its source-state It -c~(e) and target-state It ?
13(e), respectively.
(xvi) ~*(e) = s iff c~(e) = t and It(t) = s(a* = It ?
a)13"(e) = s' iff 13(e) = t' and It(t') = s'(B* = la " 8)The product-mapping <cz*,8*> (=x*): E -> S*assigns to each event e its execution sequencex*(e).
The function It which assigns to each t itscorresponding state It(t) can be extended to inter-vals i e I such that It* : I -> S ?
assigns to eachinterval i a finite sequence of states in accordancewith It, i.e., It*0) = cs such that Vi : 1 _< i _< n, s i =It(ti).
Thus, o = It(h)...it(tn) with t I = t, t, = t' andi = \[t,t'\].
~* is the composition of x and It*: "~* =la* ?
,~.According to (xiv), the domain D of entitiesis structured such that there are the subdomains E,S, T, I and O corresponding to the sorts E (event),s (state), tp (time-point), i (interval) and o (urele-ment, 'ordinary' object).
D itself corresponds tothe universal sort e (note that 'e' is used ambi-guously: it is either the universal sort or an ele-ment of E).
Objects of basic sort ct are ct,tx' andct" for (x = i,s,tp or o.
Thus, ct will be used ambi-guously for sort symbols and objects of this sort.
x iare objects of the universal sort, i.e.
elements fromD.2.1 The Interpretation of ingofNominalsIn the previous ection it was shown that the intui-tive notion of a change covers two different, yetcomplementary perspectives.
A change can beviewed either as an object or as a transformationof state.
The first perspective is related to theeventuality structure E whereas the second per-spective is linked to the dynamic transition structu-re S. These two complementary perspectives willbe used for the interpretation of verbs and deri-ved/ingofnominals.
In principle, each of the twoperspectives can be used for the interpretation ofboth verbs and defived/ingofnominals.
In ES thefirst perspective is chosen for the interpretation ofverbs.
An n-place verb v is interpreted as the n+l-place relation (9).
(9) ~.x I ... XxnXe\[P,(e ) ^01(e,xl) ^ ... ^  0n(e,x,) \]In contrast o ES, the translation of verbs in thepresent approach will be based on the second per-spective of a change.
This decision is based ontwo reasons.
First, 'ordinary', i.e.
non-derivednouns, like man for instance, are usually analyzedas denoting sets of objects of the basic domain D.Using type-theory, this means that they are trans-lated as expressions of type <e,t> (where D, = D).From this it follows that derived and ingofnomi-nals should be interpreted as denoting sets of basicentities too.
In the present framework there arefive basic domains: O,E,I,T and S. It is thereforepossible to distinguish between five different (non-logical) sorts of basic expressions because eachdomain can be taken to be the domain for expres-sions of a corresponding sort 13 where 8 is either o,E, i, tp or s, i.e.
the sort of objects, events, inter-vals, time-points or states.
Above D was defined asthe union of the basic domains.
The sorting of theuniverse D can be used at the level of types of ex -pressions by letting each expression of type <B,t>for g e {o,e,i,s,tp} be also of type <e,t>.
It is thenpossible to translate nouns uniformly as expres-sions of type <e,t>, i.e.
as denoting sets ofelements from D, which can be further subclassi-fled according to the sorts o, e, i, tp and s. For in-stance, the translation of man will be an expressionof type <o,t>, denoting sets of 'ordinary' objects(that is, elements from O).
Derived nouns like per-formance of the song by the soprano and ingofnominals like performing of the song by the sopra-no are translated as expression s of type <e,t>which denote sets of events.
The second reasonhas to do with the distinction between the trans-lations of verbal and nominal expressions.
On thepresent account, an n-place verb will be translatedas an expression of type <(z~..., <ctn,<s,<s,t>>>...>,where the ct i, l_<i_<n, are the types of the (transla-tions of the) subcategodzed ('ordinary') arguments.From this it follows that the translations of senten-ce radicals like John run or Mary eat an apple areof type <s,<s,t>>.
They denote binary relations onS and, consequently, no sets of basic objects.
Thisis in contrast o nominal expressions the transla-tions of which are of type <ctn,<13,t>> for (x n a(possibly empty) sequence of types and 8 a basictype.
After the first n arguments have been disch-arged, nominal expression like man or performingof the song by the soprano therefore denote sets ofelements of some basic domain D B.
Thus, verbalexpressions are semantically distinguished fromnominal ones.
Whereas (the dynamic componentsof) the latter denote sets of entities, the (dynamiccomponents of) former denote binary relations onS.
The main task consists in showing how the non-relational perspective can be derived from the rela-tional perspective that is used for the interpretationof verbs in the lexicon.Each event e of type P, for some v is relatedto an n+2 tuple <x 1 ..... xn,s,s'> of objects (indivi-duals): 'v'e ~ Pv3xl...xn3ss'\[(e,xl) ~ 01 ^  ... (e,xn)0 n A x*(e) = (s,s')\] by means of the functions ix*,13", ~: and ~*.
The pair (s,s') is the execution-se-quence of e. The xi are the values for e of thethematic relations for which the event-type Pv isdefined according to ~:.
From this it follows thateach Pv induces an n+2-ary relation Rv defined in(lo).15(10) a.b.Rv(X~)...(x~)(s)(s') = 1 iff there is an ePv such that(i) ~?
*(P,)(e) = <x~ ..... x~>(ii) ct*(e) = s(iii) B*(e) = s'Rv = {<x~,...x,,s,s'> ~ D n x S x S I 3e\[ePv A (e,xi) ~ 0 i A x*(e) = (s,s')\]}The condition (i) requires that the value for e ofeach e-role for which Pv is defined is an argumentof the relation and that the i-th argument of R isthe value of e for the i-th e-role assigned to Pv.The second requirement implies that (e,x~) ~ 0 i.
In(10b) and the definitions that follow condition (i)will therefore be reduced to (e,x~) ~ 0 i.Let {Rv} v ~ VERB~ be the set of (induced)binary relations corresponding to (10).
Rv will beused in the interpretation f the verb v in the lexi-con although this relation itself cannot be taken asthe denotation of the verb.
Rather, v denotes asubset of Rv, namely that subset such that (s,s')OP(Q) with OP = ~P~) and Q = 8(P0.
Recall thaton the present account each transformation f sta-tes is supposed to be brought about by some evente of a particular type Pv.
For a particular v, thechange is brought about in some specific way de-termined by the dynamic mode ~Pv) with respectto the property Q (= 8(Pv)).
For instance, events oftype eating bring about a change with respect othe mass of an object that is denoted by the inter-nal argument and the property Q is that the massbe zero.
An attempt to bring about Q by eating canfail.
For instance, if only half of the object is ea-ten, Q does not hold in the final state of the execu-tion.
At the program-level the execution is a non-completed one which is a proper prefix of acompleted one, where a completed execution is anexecution (s,s') such that (s,s') ~ ~P,)(8(P~)).
If?
~P) = Min-BEC, no proper prefix of an execu-tion-sequence that is an element of the program isitself an element of the program.
Yet these non-completed execution-sequences too are transforma-tions of states that are brought about by an evente' of type eating but they are not denoted by eatbecause 8(Pv) does not hold in their final states.Events e of type Pv the execution-sequencesof which satisfy ~Pv)(8(P,)) are denoted by ex-pressions where the arguments are non-mass andsingular like John eat the apple or The studentpush the cart to the station.
From a programmingperspective, these transitions correspond to (exe-cutions of) a sequential program.
If the argumentsare plural as in eat three apples or eat apples, theprogram must be executed for each apple separa-tely such that one gets a parallel program thatconsists of three (or n) sequential subprogramseach of which is of type ~P,)(8(Pv)).
The execu-tion sequence of the parallel program need notsatisfy ~P0(8(Pv)) which is exactly what is requi-red witness the well-known aspectual contrast bet-ween eat three apples and eat apples.
As shown inNaumann (1997a, 1998), given 8 and y, it is pos-sible to calculate the dynamic mode for the resultQ' (which is a function of the results for the se-quential subprograms).
The relation that is denotedby verbs in the lexicon is given in (11) (OP =~P,), Q = 8(P~)).
(11) R,,?o~o9 ~ = {<x~,...x,,s,s'> ~ D" x S x S I3e\[e ~ Pv A (e,x i) E 0 i A x*(e)= (s,s') A (S,S') ~ OP(Q)\]} (1 -<i_<n)For a given v, Rv~oPcoo~ is a subset of Rv.
Similarlyto R,, it is determined by ~?, ~?
*, ~* and, additio-nally, by 8 and y.
According to (11), a non-stativeverb in the lexicon denotes a (generalized) relationbetween states, i.e., it is an expression of sort<ct,<s,<s,t>>> where ?x is a (non-empty) sequenceof basic sorts, as required at the beginning of thissection.
The relation R~ (or Rv~opcoo~) represents theperspective of a change as a relation between sta-tes.The relationship between P~ and R,,cOp~Q~ ) canalso be expressed by means of a function p : {Pv}-> {R~optQ~ } v ~ VERB,~ which maps an event-type Pv to the corresponding relation Rv?op~Q)~ (P isa variable which ranges over the P~).
(12) p = ~.P~xp..~,xo~ss'3e\[e ~ P ^ (e,xi)~ 0 i ^x*(e) = (s,s') A (S,S') ~ ~Pv)(8(Pv))\]The perspective on which a change is a basic ob-ject can be defined in a similar way by means ofthe functions K:, ~:*, x*, 8 and y.
(13) a.
Rctv~(OpCQ)~(x)...(x.
)(e)= 1 iff( i)  e e Pv(ii) K*(Pv)(e) = <x 1 ..... xn>(iii) X*(e) ~ ~Pv)(8(P0)b. Rc~v~(OpCQ) ~ = {<x t..... x.,e> ~ D" x E I \[eP~ A (e,xi) ~ 0i ^  x*(e) ~ ~Pv)(8(Pv))\]}16Similarly to the relational perspective, a functionp* : {Pv} -> {R.{~){oPtop)} v e VERB~ can be defi-ned that expresses the relationship between P,, andRecv)(o~)-(14) p*= XPXxr..Xx.Xe\[e ~ P ^ (e,x i) ~0 i ^x*(e) ~ NP,)(~(P,))\]There is a 1-1 correspondence between the P~ andthe R,t~) (or R,c~)toPcop)).
On the assumption that forvcv' v,v' ~ VERBo~ tL,co~op) ~: tL,.~o~)), there is 1-1 correspondence 11 between {R,~)~o~))} and{R~tov~op)}.
If "~*(e) = (s,s') then <x~ ..... x?,s,s'>tL,toP(o~) <-> <x~ ..... xo,e> ~ P~{v)~oe(op).
For a given v,the relation (13) is the denotation of the correspon-ding ingo:nominal.
The ingo/-morphem is theninterpreted as mapping R~oP~op) to the correspon-ding relation Rc(o~Q ,, i.e.
as the function coi,g{oO :{R~(o~,~ } -> {R~){O~(Q, } which assigns to eachelement in its domain the corresponding relation inits range: cO~?~oo(R.,~O~<Q~)) = R (~)<Op~Q,.
Using X-nota-tion (and the equivalence between sets and theircharacteristic functions), coiog(oO is defined in (15).
(R ranges over the relations in the domain ofCOing(oO)"(15) ~i~toO =XRkx~...Xx,Xe\[\[rfl(R)\](x0...(x,)(e)\]According to (15), coi.g~o o is the inverse of 1"1.
Theingo/-morphem does not change the argument-grid:each argument of the verb is also an argument ofthe nominalized expression (see Zucchi (1993) fordetails).
Furthermore, ingof is polymorphic in thesense that it applies to expressions of differentarity.The definition of ~i,g(oO in (15) is based on arelation between R~c~)(oP{o9 ) and R~,cOp(Q~).
As wasshown above, the relations R,,(OptQ) ) and R, cv)~oPco9 )can be determined as the ranges of two functionsp and p*, respectively, which map P~ to theserelations.
From these two relationships it followsthat R~(~)(oP(o9 ) can be defined in terms of R~(oP(op) ifit is possible to 'recover' P, from IL,(op(Q,.
This isthe case if P is injective (i.e., for v ~: v', p(P~) ?:p(P?)).
C0ing(o o can then be defined as the composi-tion of p-i and p*, (16a), which yields (16b) whenspelled out:(16) a.
(.oing(o 0 = p ,  .
p-ib.
(.0ing(o 0 =XRXxr..Xx,Xe\[e fiX(R) ^ (e,x i) ~ 0 i ^x*(e) a ~P~)(~i(P~))\] (l_<i_<n)According to (16), first p" is applied to R.,(oP~oj)(i.e., the result of p for P,), yielding Pv, and nextp* is applied to P, yielding Rccv~OPCOp): R~?oPco~ ~ --*(P") Pv -~ (P*) Rc~v~opcoprThe aspectual restriction on ingofnominals iexplained as follows.
Stative verbs like know orlove do not express changes.
This is captured byinterpreting them as generalized binary relations onS to which no events correspond (the relations Rev' ~ VERB, in (xi) above).
The relations are there-fore not derived from event-types Pv but are rathertaken to be primitive.
Consequently, there are noR,<~) (and R~c~)~opco~)) such that the function p (orp*) and therefore co~,g(o o is not defined for them.Stative verbs denote sequences of states on whichsome condition Q continuously holds.
The dyna-mic mode that corresponds to stative verbs isHOLD = XQXss'Vs"\[s < s" < s' -> Q(s")\] whichcan be interpreted as a kind of (iterated) test-program from DL.2.2 The Interpretation of gerundive NominalsIn section (2.1) the derivation of ingofnominalsfrom verbs was semantically analyzed as a map-ping that makes use of the double perspective inwhich a change can be described in the dynamicevent-structure defined above.
The analysis ofgerundive nominals is based on a third perspective.Whenever an event e of some type P occurs, acorresponding sequence 6 is (partially) realized onthe run-time "t(e) of e, namely that sequence t~such that x(e) = i and p*(i) = (s,s') (i.e.
x*(e) =(s,s')).
The occurrence of e therefore partly deter-mines the world when it occurs by bringing about~(P) in the way corresponding to 7(P).
Thus, eachevent e can be said to leave some trace behind.This trace concerns the property that is changed bythe event, e.g.
the location of some object.
Thetrace of an event can be defined as a pair <i,OP(Q)> and thus as a property of intervals.
Pro-perties of intervals can be taken to be states ofaffairs (SOAs), i.e., partial constellations the worldis in during some period.
SOAs as properties ofintervals are a third perspective in which a changecan be described.
It will be argued that gerundivenominals denote SOAs.17First, intervals are objects which are neitherslow or sudden nor can they be said to take a longtime.
Second, on the existential reading it is theoccurrence of an event which is surprising.
Butwhenever an event has occurred, a correspondingSOA has been realized.
This explains the equiva-lence between The singing of the song by the so-prano surprised us and The soprano's inging thesong surprised us on the existential reading.
Whatis surprising about e's run-time interval is the factthat OP(Q) is realized on it.
Third, for an event ethere is the further possibility that some other pro-perty of it is surprising besides its property of ha-ving occurred at all.
Fourth, as the domain D isstructured such that E,I, and O are subsets of Dand gerundive nominals are of sort <i,t>, eachexpression of this sort is also of sort <e,t>.
Onecan therefore explain why NPs with gerundivenominals (and ingofnominals ) can occur in subject-position of verbs like is strange without having toassume that the latter is ambiguous.
Fifth, not onlytraces of events are states of affairs but any pro-perty of intervals for some OP, including HOLD,such that there are no aspectual restrictions ongerundive nominals.
Therefore, the notion of aSOA not only comprises changes as intervals onwhich a change of some property Q occurred butalso intervals on which Q continuously holds (as aresult of some change brought about by an evente).
The state of affairs that OP(Q) has been reali-zed is defined in (17).
(17) SOAop(Q ) = {ieI I  \[p*(i) e OF(Q)\]}SOAop(Q ) is that property which an interval i hasjust in case OP(Q) is realized on it in the sensethat the corresponding sequence p*(i) satisfies thisproperty.
SOAop(Q ) is the largest set such thatOP(Q) is realized on some i.
The following subsetscan be defined.
First, the set of those intervalswhich are the run-time of an event e which bringsabout OP(Q): SOA~.op(Q ), (18a).
The events corre-sponding to SOA~.op(Q ) need not all belong to thesame type P, because OP(Q) can be brought aboutby events of different types.
The restriction ofSOA,.op(Q ~ to intervals which are the run-times ofevents of type P, bringing about OP(Q), SOA,.op(Q),is defined in (18b).
(18) a.  SOAc,op(Q ) ={i e I I 3e3P\[e P ^ x(e) = i ^ 8(P) =Q ^ T(P) = OP ^ g*(i) ~ OP(Q)\]}b. SOAv.oP(o) ={i e I I  Be e E\[e ~ Pv A "~(e) = i ^ 8(Pv)= Q A NPv) = OP A g*(i) e OP(Q)\]}Syntactically, ingo:nominals differ from gerundivenominals by the fact that the former can co-occurwith determiners whereas this is excluded for thelatter: the performing of the song (by the soprano)vs. *the performing the song.
There are differentmethods of how this difference can be handled(Zucchi (1993)).
I follow Zucchi (1993) and applythe ingg,-morphem after the ordinary argumentshave been discharged that such ingg, applies to anexpression of sort <s,<s,t>>.
For the sake of sim-plicity I will assume that the result is basically anexpression of sort <i,t>.
Using a type-shifting rulethe type can be lift to <<i,t>,t>.The ingg, denotes the funct ion  oog, :{R*,(Op(Q~) } v ~ VERB, ,  u {R*v.(HOLD(Q,D}v'~ VERB s -> ~o(I) which maps those binary rela-tions R on S which result from an n+2-nary rela-tion R~(op(o:) v ~ VERB after the first n argumentshave been discharged to the set of intervals i onwhich an element of R has been actualized.
Thus,for a non-stative verb v with non-mass singulararguments, R*~(op(Q , is the parametrized relation{<s,s'> ~ S x S I 3e\[e e P, A (e,xi) e 0 i A "~*(e)= (S,S') A (S,S') e y(Pv)(8(P~))\]} such that<xv--,x,,s,s'> e Rv(oP(Q)r For other types of argu-ments, i.e.
plural ones, the situation is more com-plicated, as explained in section (2.
I).
In this casethe sequence (s,s') need not be an element ofT(P,)(8(P~)) because it is the execution-sequenceof a parallel event.
What is the case, rather, is thatthe execution-sequence of each sequential part isan element of Y(Pv)(8(Pv)).
R*v,(HOLD(Q.))
is definedsimilarly for a stative verb v'.
cog.
is defined in(19) using X-notation.
(R ranges over the domainof cog.
)(19) o~, = XRki3ss'\[R(s)(s') A la*(i) = (s,s')\]On the assumption that R is denoted by an expres-sion with non-mass ingular arguments, the folio-wing cases can be distinguished.
If R = R*v. forsome v' e VERBs, each (s,s') e R satisfiesHOLD(Q?).
If, on the other hand, R = R*~(Op(Q~for some v e VERB,s, R corresponds to an event-type P~, such that each (s,s') e R satisfies OP(Q)for Q = 8(P~) and OP = T(P~).
The intervals i are18then the run-times of the events of the correspon-ding subtype P'v of Pv.
(for instance, if R is therelation denoted by John eat the apple, P'v = Pjo~c~ ~ vpl,).
If R is denoted by an expression withplural argu-ments, one gets the following.
For anon-stative verb, the sequence (s,s') is the join ofthe execution-sequences ~ of a set of sequentialevents such that each ~ is an element of~P~)(~5(Pv)).
For a stative verb v', (s,s') is the joinof sequences each of which is an element ofHOLD(Qv.).
In each case the interval i is the joinof intervals i' such that i'e SOA~cop(Q~.3 ConclusionThe analysis of nominalization i English presen-ted in this paper is based on two assumptions.
(i) Non-stative verbs denote changes(ii) The notion of change comprises differentaspectsFrom (i) it follows that any theory must admit tomodel the intuitive notion of change.
This seemsto require some form of Dynamic Logic or someother form of programming logic in which thedevelopment of something oing on in time can berepresented.
The second assumption seems to re-quire the use of a (many-) sorted model such thatthe domains corresponding to the different sortsare systematically related to each other.
Each do-main must be equipped with some structure.
Thedifferent aspects that the notion of change com-prises are then linked to the different domains andtheir corresponding structures.
Thus, besides sor-ting the universe, there must be enough structurein order that the different aspects can be modeledin an adequate way.
This makes it necessary to usesome form of a decompositional analysis of verbs.In the present approach the decomposition isdone first with respect o the argument structu-re: n-place verbs are analyzed as denotingn+2-ary relations, and second with respect othe semantic ontent of a verb.
This content issplit into a dynamic and a static component.The dynamic omponent denotes ome type oftransition between states which is broughtabout by an event.
This component is therefo-re closely related to the first decompositionalcomponent.
The static component concems therelationship between the arguments that areintroduced by the decompositional analysisand the 'ordinary', subcategorized arguments.This relationship is expressed by thematic re-lations.ReferencesKrifka, M. (1992) Nominal Reference, TemporalConstitution and Thematic Relations, in: Sag, I.et al (eds.
): Lexical Matters, CSLI Publications,Stanford, pp.29-53Moens, M./Steedman, M. (1988).
Temporal Ontol-ogy and Temporal Reference, J. of Computatio-nal Linguistics, 14Naumann, R. (1996).
Aspectual Composition inDynamic Logic, Proc.10th Amsterdam Collo-quium- (1997a).
A Dynamic Temporal Logic for Aspec-tual Phenomena in Natural Language, to appearin Proceedings 2. International Conference onTemporal Logic, (D. Gabbay/H.
Barringer(eds.
)), Kluwer- (1997b).
A Dynamic Decompositional Event-Semantics, talk given at the 2. conference on'Sinn und Bedeutung', Berlin, submitted to Lin-guistics and Philosophy- (1998).
A Dynamic Logic of Events and Statesfor the Interaction between Plural Quantificationand Verb Aspect in Natural Language, to appe-ar in Proc.
5th WoLLIC, Sao Paulo, BrazilNaumann, R./Mori,Y.
(1998).
An Analysis of De-finite and Indefinite Japanese Aspectualities inDynamic Decompositional Event Semantics, toappear in Proc.
6th Symposium on Logic andLanguage, BudapestZucchi, A.
(1993).
The Language of Propositionsand Events, Dordrecht, Kluwer19
