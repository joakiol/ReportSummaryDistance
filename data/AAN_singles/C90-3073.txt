Knowledge Representation and Semantics in a Complex Domain:The UNIX Natural Language Help System GOETHEGerhard Heyer, Ralf Kese, Frank Oenfig, Friedrich DuddaOLIVETTI D.O.R.
- TA RESEARCH LABTA TRIUMPH-ADLER AGFiirtherstr.
21.28500 Nuremberg (West Germany)1 AbstractNatural language help systems for complexdomains requirc, in our view, an integrationof semantic representation and knowledgebase in order to adequately and efficientlydeal with cognitively misconceived user in-.put.
We present such an integration by wayof the notiml of a frame-semae~tics that hasbeen implemented for the purposes of anatural anguage help system for UNIX.2 IntroductionIt is commonly agreed ihat natural languagesystems fox" semantically rich domains re-quire a level of sema~tic representation iorder to provide for a sufficiently deepprocessing of the natural language input.The level of semantic representation issometimes called a representation of lingu-istic knowledge.
In addition, a naturallanguage help system also requires alo~owledge base of the application domain inorder to answer the requests for domainspecific help.
The level of knowledgerepresentation is sometimes called a re-presentation of world knowledge.
Mostpresent day natural language processingsy,'stems, including, amongst others, SRI'sCore I_,anguage Engine (Alshawi et.al.
1986),ESPRIT I project ACORD (Bez et.al.
1990),and the UNIX natural language help systemsUNIX-Consultant (Wilensky et.al.
1988),SINIX-Consultant (Wahlster et.al.
1988), andAQUA (Ouilici et.al.
1986), keep the twolevels of representation distinct.
In ad-dition, there usually is no feed-back ofinformation between the semantic represen-tation and the knowledge base.
Thus,parsing is supposed to result in a completesemantic representation of the user inputwhich then is passed on to tilt knowledgebase manager for further processing.
Thiskind of architecture follows a strategy, thatcan be called stepwise processing.
We claimthat for complex domains this kind of ap-proach is inadequate because it ig,mrcs theuser's cognitive misconceptions about theparticular application.
Instead, we wish toargue that at least with respect to seman-tics and knowledge representation i naturallanguage help systems an h~tegmted ap-proach should be preferred, in the approachwe advocate, semantics and knowledgerepresentation interact to correct (orcomplete) a possibly incorrect (or incom-plete) semantic representation.
The mecha-nism by which this is achieved is based onthe notion of a fi'ame-semandcs (cf.
Heyeret.al.
1988, tlausser 1989).
We demonstrateour "integrated approach with examples fromGOETHE, a natural language help systemfor UNIX as a complex domain.GOETHE (cf.
Kese/ Oemig 1.989) has beendeveloped together with OLIVETTI AI Cen-ter, Ivrea, and Tecsicl AI Lab, Rome, forUNIX V on the OLIVETTI LSX 30xxCompu-ter Series.
The present prototype includes aprotocol for monitoring user's actions andhas the natural language mode of inter-action fully integrated into a graphicalDeskTop under InterViews (based oll acooperation with Fraunhofer Society,Stuttgart), thus allowing also for deicticnatural language and graphical interactions.It covers all of UNIX' file handling,containing a static knowledge base of morethan 70 UNIX programs.
It is written inQuintus-PROLOG and C, and takes byaverage less than 10 seconds for generatingan answer to a user's request.3613 Requirements on Knowledge Re-presentation and Semantics for aUNiX natural language help systemIt is the task of the knowledge base in aUNIX natural language help system to serveas a baals for correctly and adequatelyanswering a user's questions in one of thefollowing situations: (1) the user needs toknow a UNIX cormnand, or series ofcommands in order to carry out a certaini:ask, (2) hc has sent off a I JNIX commandand the system has resulted in a different.qa\[e !ban he expected, or (3) he wants togc.t irffcrmalion about a UNIX command.
Ing,.mcr~fl, !hi:; ',,,'ill require two knowledge~,:)urces: 5'laEc knowledge about UNIX as aco\]!c;ction of possible, man-machine inter-actions, and dynamic knowledge about therespc'cl.i-,e UNIX st:ate (in particular, i-node~ a~d the associated files with theirpermissions), the u.-,~:t ..... s actions, and thei'"' ...... " r~:actions (in particular, error ': ~ l.,~ ill ,~messages), it is the task of the semanticrepresentation to provide ,t .. ,'~c knowledgebase manager wi:\[t a corrc.ct and adequatesemantic representation of \[he user's inputSi\[ ll\[ff\[ I on)  (in -~ spccii!ic : ' ' There basicallyare two strat?oies..:, .
available at this point.
()q ~.he (:re na~.
:d, adhering to the idea thatc~-occur~en:e ...,,~, ..ns va,so for missing:.
c u-,.
:t,g q ,.
:.cc2d to be treated as realres!ric{io~u,, p., ;:-ibly even as syntactic:c.<tric:ions (('homsky !965), we can insistthat ;:' there is a semantic representation~>f an input sentence at all, it will beCOITCCl zl~cl c'ot?,\])IU.e ~-: '  O., .~ respect to thedomain e,f .q)p!ication).
He.nee, the systemwill " ' tat !
~X) prov ide  ~\[I1 ;&nswer  to  a user ' s\[tilde z,.
he rCqt lCSt  ~ t .
.
.
.
D~rases his question in acorrect and comp!ctc way.
On the otherhand, co-occurrence restrictions may not be~ak6'n as; real restrictions but rather asscnzezmic d@z,/ts which may be over-written by additional knowledge baseitfformatic.,n.
Fhis allows for a much moreuse>friendly and cooperative naturallanguage processing, but requires that these:n}antic re'presentation is closely tied to)- 'd'.e know edge base.For the purpost:s el!
the GOETHE system,we have opted for the second alternative,because the cognitive misconceptions a usermay have about UNIX not only cause himto invoke the help system, but also causehim in most cases to phrase his questions~1 the way he does: If the system ispresented with a semantically incorrectquestion, this is to be taken as an indi-cation, that the user needs help, and areminder that he better rephrase hisquestion in a correct way will not be ofmuch use to him.
Of course, it would havealso been possible to relax tile syntacticco-occurrence restrictions.
In effect,however, this would have resulted in aduplication of knowledge base informationin the lexicon.
The second alternative,therefore, not only appears to be the moreadequate, but also the more efficientsolution.4 Frame SemanticsOutput of the parser in GOETHE is apossibly incorrect, or incomplete, semanticrepresentation where the meaning of tileindividual- and predicate-constants of tilelogical representation are represented asframe-theoretic icons (Hcyer et.al.
:19881).We call this kind of semantic representationflame-semantics, or database-semantics(Hausser 1989).
Taking the frame represen-tation of UN\[X (including attached proce-dares and, additionally, the protocolledhistory) as the context-model relative towhich a user's input is interpreted, thisflame-semantics allows for a simple andefficient processing of a semantic represen-tation for correction, completion, or theretrieval of the requested information viathe knowledge base manager.
As an illu-stration, consider the following examples:1) "How can I edit a text named 'test"?
"\[qword(how),\[action(edit),line(file) ,attr(name,test)\]\]\]3622) "Why didn't you list dir 'tc.stdir'sorted by date!
"\[qword(why-not),\[action(show),\[so(directory),attr (narne,testdir)\],\[mo(file),quant(all)\],attr(name,_),app(descending, attr(date,_))\]\](Note that "list directory" = "show allfiles"; "so" = source object, "too" = mainobject, "attr" = attribute).Why: search for a fl'ame representing aprogram in the history and compare theused commands with the intended goalwith respect o identitiesWhy-not: search for a flame representinga program in the history and compare theused commands with the intended goalwith respect to differences.LiteratureIn these lists (which might equally berepresented as trees), each argument pointsto a frame in the UNIX knowledge base.Semantic processing then basically consistsof successively unifying each of theseframes (where the predicates are slots inthe frame referred to by the respectivemother-node).In case the unification of a set of framesfails, GOETttE tries a number of heuristicsto actfieve unification, including: Identifi-catior,.
(identifying the referents of propernames as denoting a file, a directory, aUNIX command, an owner, or a group),generalisation (taking .
:he frame-generali-sation of the (first) action node as acandidate for unification), and precondition-checlc (checking whether existence of a file,ownership, and read-, write-, execution-rights are fulfilled a:; required).Once a set of frames is consistent,retri~:ving the answer to a request is stirredby the frames for How, Why, and Why-not,always appearing on the top-level node ofthe '~emantic representation.
These framescan be understood as representing strategiesfor searching the knowledge base asfollows:ltow: Search for a frame with a goalcomponent containing a specialcommand entryAlshawi et.al.
1986, "Feasibility Studyfor a Research Prograrmne in Natural-language Procesosing", SRI International,Cambridge, \]986.Bez et.at.
1990, "Construction andInterrogation of Knowledge-Bases usingNatural Language Text and Graphics:ESPRIT Project 393, ACORD.
Final Report",Springer Verlag, 1990 (in print).Chomsky 1965, "Aspects of the Theoryof Syntax", M.I.T.
Press, 1965.Hausser 1989, "Computation of Lan-guage", Springer Verlag, 1989.Heyer et.al.
1988, "Specification of theKB-Manager: A Frame-Extension of DRSsfor Supporting Conceptual Reasoning",ACORD Project, Deliverable T5.4, 1988.Ralf Kese, Frank Oenfig 1989, "GOETHE:Ein kontextsensitives Beratungssystem fiJrUNIX", LDV-Forum, Vol.6, 1989.A.E.Quilici, M.G.
Dyer, M.Flowers, 1986,"AQUA: An intelligent UNIX Advisor",Proceedings of the 7th European Conferenceon Artificial Intelligence (ECAI), 1986,Vol.II.W.Wah!ster, M.Hecking, C.Kemke, 1988,"SC: Ein intelligentes Hilfesystem farSINIX", in: Gollan, Paul, Schmitt (eds.
):'In-novative Informationsinfrastrukturen",Informatik-Fachberichte Nr.184, 1988.R.Wilensky, D.Chin, M.Luria, J.Martin,J.Mayfield, D.Wu: "The Berkeley UNIXConsultant Project", Computational Lingui-stics, Vo1.14, No.4, 1988.363
