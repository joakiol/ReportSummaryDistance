CLASSICAL  LOGICS FOR ATTRIBUTE-VALUE LANGUAGESJ iirgen WcdekindXerox Palo Alto Research CenterandC.S.L.I.- Stanford UniversityUSAAbst rac tThis paper describes a classical ogic for attribute-value (or fea-ture description) languages which ate used in urfification gram-mar to describe a certain kind of linguistic object commonlycalled attribute-value structure (or feature structure).
Tile al-gorithm which is used for deciding satisfiability of a featuredescription is based on a restricted eductive closure construc-tion for sets of literals (atomic formulas and negated atomicformulas).
In contrast to the Kasper/Rounds approach (cf.\[Kasper/Rounds 90\]), we can handle cyclicity, without the needfor the introduction of complexity norms, as in \[Johnson 88Jand \[Beierle/Pletat 88\].
The deductive closure construction isthe direct proof-theoretic correlate of the congruence closurealgorithm (cf.
\[Nelson/Oppen 80\]), if it were used in attribute-value languages for testing satisfiability of finite sets of literals.1 In t roduct ionThis paper describes a classical ogic for attribute-value (or fea-ture description) languages which are used in unification gram-mar to describe a certain kind of linguistic object commonlycalled attribute-value structure (or fcz~ture structure).
From alogical point of view an attribute-vMue structure like e.g.
tilefollowing (in matrix notation)PRED 'PROMISE'TENSE PASTsuBJ Pl  :i) ' JOliN'\]XCOMP \[ SUBJ m \]PRED 'COME'can be regarded as a graphical representation of a mini-mal model of a satisfiable feature description.
If we assumethat the attributes (in the example: PRED, TENSE, SUB J,XCOMP) are unary partial function symbols and the values(a, 'PROMISE',  PAST, ' JOI IN' ,  'COME') are constants thenthe given feature structure represents graphically e.g.
the min-imal model of the following description:'PRED SUBJa ~ ' JOI IN'  &TENSEa ~, PAST &PREDa ~ 'PROMISE'  & SUBJa ~ SUBJ XCOMPa &PRED XCOMPa ~ 'COME' )I Note that the terms arc h)rnlcd without using brackets.
(Sinceall function symbols are unary, the introduction of brackets wouldSo, in the following attribute-value languages are regarded &quantifier-free sublanguages of classical first order language~with equality whose (nonlogical) symbols are given by a set o"unary partial function symbols (attributes) and a set of con-stants (atomic and complex values).
The logical vocabularyincludes all propositional connectives; negation is interpreted(:lassically.
2For quantifier-free attribute-value languages L we give an ax-iomatic or IIilbert type system ll?v which simply results froman ordinary first order system (with partial function symbols),if its language were restricted to the vocabulary of L. Accord-ing to requirements of tile applications, axioms for the constant-consistency, constant/complex-consistency and acyclicity canbe added to force these properties for the feature structures(models).For deciding consistency (or satisfiability) of a feature descrip-tion, we assume .first, that the conjunction of the formulasill,the feature dc'scription is converted to disjunctive normalform.
Since a formula in disjunctive normal form is consis.tent, ill" at least one of its disjuncts is consistent, we only needall algorithm for.deciding consistency of finite sets of literals(atomic formulas or negated atomic formulas) S. In contrastto the reduction algorithms which normalize a set S accord.ing to a complexity norm in a sequence of norm decreasingrewrite steps 3 wc use a restricted eductive closure algorithmfor deciding the consistency of sets of literMs.
4 The restric-tion results from the fact that it is sufficient for deciding theconsistency of S to consider proofs of equations from ,.q witha certain subterm property.
For tile closure construction onlythose equations are derived from S whose terms are subterms ofthe terms occurring in the formulas of S. This guarantees thatthe construction terminates with a finite set of literals.
The ad-equacy of this subterm property restriction, which was alreadyshown for the number theoretic alculus K in \[Kreisel/Tait 61\]by \[Statman 74\], is a necessary condition for the developmentof more efficient Cut-free Gentzen type systems for attribute-not improve tile readability essentially.)
Therefore we write e.g.PRED SUBJa instead of PRED(SUBJ(a)).2For intuitionistic negation cf.
e.g.
\[Dawar/Vijay-Shanker 90\]and \[Langholm 89\].aCf.
e.g.
\[Kreisel/Tait 61\], \[Knuth/Bendix 70\], and ap-plied to attrlhute-value languages \[Johnson 88\], \[Beierle/Plntat 88\],\[Smolka 89\].4Since we allow cyclicity, unrestricted eductive closure algo-rithms (cf.
e.g.
\[Kasper/Rounds 86\] and \[Kasper/nounds OO\]) can-not be applied.- 2 0 4  -value languages)Moreover, this closure construction is the direct prooI.theoretic correlate of the congruence closure algorithm (cf.\[Nelaon/Oppen 80\]), if it were used for testing satisffability offinite sets of literals in HOt,.
As it is shown there, the congru-ence closure algorithm can bc used to test consistency if theterms of the equations are represented as labeled graphs andthe equations as a relation on the nodes of that graph.O~ the basis of the algorithm for deciding satlsfiability of finitesets o| formulas we then show the completeness and decidabilityof//~t,.2 At t r ibute -Va lue  LanguagesIn this section we define the type of lauguagc wc want to con-sider i~nd introduce some additional notation.2.t  Syntax2.1.
DEFINITION.
A quantifier-free attribute-value language(L.:%~) consists of the Jogical connective~ ?
(false), ~ (nega-tion), :) (implication), the equality symbol ,~ and the paren-theses (,).
The nonlogical vocabulary is given by a finite set ofconstants C and a finite set of unary partial Junction symbolsr; (?nr~ =~).2.2.
DEFINITION.
The class of terms (7") of L is recursivelydefined as follows: each constant is a term; if f is a functionsymbol and r is a term, then f r  is a term.2.3.
DEFINITION.
The set of atomic formulas: of L is!n ~ "~ I r,, r~+7,} u {?}.2.4.
DEFINITION.
The formulas of L are the atomic formulas4nd, whenever ~ and ~b are formulas, then so are (+ ~b) and~.5.
DEFINITION.
If ~ is a well-formed expressio n (term orformula), then a\[r~/r~\] is used to designate an expression ob-tained from a by replacing some (possibly all or none) occur-r?nces Of r~ in ~ by r~.We assume that the connectives V (disjunction), ~:(conjunc-tion) and ~ (equivalence) are introduced by their usual defi-nitions, Furthermore, we write sometimes ri ~ rz ;instead of-,, ~'~ ~ r2 and drop the parentheses according tolthe usualconventions, e2~2 Semant icsA model|or L consists of a nonempty universclt anti an inter.pre~a|ion function 9.
Since not every term denotes an elementIn M if the function symbols are interi)reted as unary partialfunctions, we generalize the partiality of the denotation by as-stltl~l~Ig that ~) itself is a partiM function.
Thus in general nottCf.
also \[Statmml 77\].sWe drop the outermost brackets, assume that the connectivesh~ty e the precedence ,~> & > v >:), _-- and are left associative.all of the constants and function symbols are interpreted by ~).Redundancies which result from the fact that non-interpretedfunction symbols and function symbols interpreted as emptyfunctions are then regarded as distinct are removed by requiringthese partial funct~ions to be nonempty.
Suppose \[X ,-, Y~(p)designates the set of all (partial) functions from X to Y~ thena model is defined as  follows:2.6.
DEFINITION.
A model for L is a pair M = (//, ~)), cpn-sisting of a nonempty set U and an interpretation function9 = 9c  U ~Fi, such that(i) 9~\[c ~ u\]~(iii) Vf~F,( I~Dom(9) --, 9(f) # ~).The (partial) denotation function for terms ~ (~;?\[T ~-*/at\] e)induced by 9 is defined as follows: 72.7.
DEFINITION.
For every ceC anti freT" (feFl),~(c) = (9 (c )  if ceDom(9)undefined otherwise{ 9 ( f ) (~( r ) )  if feDom(9) A~(r )  definedA~( f r )  = ~(r)eDom(9(f ) )undefined otherwise.2.8.
DEFINITION.
The satisfaction relation between modelsM and formulas ~b (~M ~b, read: M satisfies ~, M is a modelof ~b, ~ is true in M) is defined recursively:V=M ?~M r ~.
r' ~ 9(r) ,9(r ')  defined Ag( r )  = ~(r ' )J=u , / ,3x  .-.
l=M, / , - .
l=~x.A formula ~b is valid (\[= ~), iff ~b is true in all models.
Aformula ~b is satisfiable, iff it has at least one model.
Givena set of formulas F, we say that M satisfies r (~  r), iff Msatisfies each formula ~b in F. F is satisfiable, iff there is a modelthat satisfies each formula in F. ~ is logical consequen?~ of F(F ~ ?
), iff every model that satisfies F is a model of ~.3 The  System H?v?In this section we describe an axiomatic or Hilbert type systemH?v for quantifier-free attribute-value languages L. We give adecision procedure for the saris|lability of finite sets of formulasand show the completeness and decidability of H~v on the b~misof that procedure.3.1 Ax ioms and In ference  Ru lesIf L is a fixed attribute-value language, then the system consiStsof a traditional axiomatic propositional calculus for L ud  twoadditional equality axioms.
For any formulas ~,~b,X , terms71n the text following tile definition we drop the overllne.- 205 -r, r', and every sequence of functors a (aeF;) of L the form,lasunder A1 - A4 are propositionalaxioms s and the formulas underEl and E2 are equality axioms.
?
The Modus Ponens (MP) isthe only inlerence rule) ?A I  )--~ _LA2 k ~b D (?
D ~)A3 b (~ :9 (~b :3 X)) 2) ((~b 2) ~b) 2) (# D X))A4 ~ (~ ?
2)~ ?)
2) (?
2) ~)E1 t -a r~r 'Dr~rE2 k r ,~ r' :3 (?
2) ?\[r/r ' \])MP ~b 2) ?^4 b ~bA formula ff is derivable from a set of formulas F (I" b ~,), iffthere is a finite sequence of formulas ff~...qL, such that ft, = q~and every ~i is an axiom, one of the formulas in U or follows byMP from two previous formulas of the sequence, ff is a theorem(F ~), iff ~ is derivable from the empty set.
A is derivable fromF (r I- A), iff each formula of A is derivable from P. F and Aare deductively equivalent (I" -U- A), iff r I- A and A F I'.The system is sound: n3.1.
THEOREM.
For every Jormula c~: l/k" c~, then ~- qb.Beside this weak version also the stro.g soundness theorem isprovable for H?Av:3.2.
THEOREM.
For every set oJ Jormulas \[' and every for-mula ~: If r t- c~, then r ~ c~.3.2  Sat i s f iab i l i tyWe now prove3.3.
TIIEOREM.
The satisfiability of a f i .
i te set oJ formulasF is decidable.by providing a terminating procedure: First the conjunctio, ofall formulas in F (denoted by A F) is converted into disjunctivenormal form (DNF) using the well-known standard techniques.Then A F is equivalent with a DNF= (4,&4~&...&?k,) v (4~&.
.
.&4~,~)  v ... v ~v-, ... v,k.,where the conjuncts 4i (i = 1 .... n; j = 1 .... ki) are eitheratomic formulas or negations of atomic formulas, henceforthcalled iiterals.
By the definition of the satisfiability we get:scf.
e.g.
\[Church 56\].9Axlom El restricts the reflexivity of identity to denoting terms:if a term denotes, then also its suhterms do (cf.
the definition of ~).Thus equality is not a reflexive, but only a subterm reflexive relation.1?If (i.)
constant-consistency and (li.)
constant/complex-consistency are to be guaranteed fora set Of atomic values V (V C_ C),for each a, beV (a # b) and leFt, axiomsof the form (i.)
F a ~ b and(ii.)
b fa ~ Ja have to be added (a finite set).
I\[ also acyclicity hasto be ensured, axioms of the form (iii.)
bar  ~ ~', with ?eFI + , veT,have to be added.
Although this set is i,finite, we only need a finitesubset for the satisfiability test and for deci,lal,illty (see below).II F'or the propositional calculus of.
the sta,dard proofs, l"or ax-ioms E1 and It,2 cf.
\[Johnson 88\].3.4.
LEMMA.
Let A St v A Sav  ... v A s"  be a DNF d /A  rconsisting of conjunctions A Si of the literals in S i, then A ris satisfiable, iff at least one disjuncl A Si is satisfiablelWe complete the proof of Theorem 3.3 by an algorithm thatconverts a finite set of literals S i into a deductively equivalentset of literals in normal form S i which is satisfiable iff it is notequM to {.L}.3.2.1 A Normal  Form for  Sets  o f  L i te ra l sThe normal form is constructed by closing S deductively bythose equations whose terms are subterms of the terms occur-ring in S. For the construction we use the following derivedrules:R1 or  ~ r' I- r ~ r Subterm ReflexivityR2 r ~ r 'A4 l -  4\[r/r'\] SubstitutivityR3 r .~ r '  I- r '  ~ r Symmetry.We get RI and R2 from E1 and E2 by the deduction theorem.R3 is derivable from R1 and R2, since we get from r ~ r '  firstr ~ r by R1 and then r '  ~, z by R2.If Ts denotes the set of terms occurring in the formulas of S(Ts = {r, r' I (~) r  .~ r ' cS}) ,  and SUB(Ts) denotes the set ofall subterms of the terms in "Is nSUB(7"s) = {~ I ~,,~r~, with aeFl*},then the normal form is constructed according to the followinginductive definition.3.5.
I)EFIN1TION.
For a given set of literals S we define asequence of sets Si (i >_ O) by induction:With S~= S U {r' ..~ r \[ r ,~ r'eS},f { l} i f / cS ;  otherwiseSo = <\ [s~u{~=~l~=~, ,g}f {.L} if :lq~(Si(,., #(Si); otherwiseS,?l = ~ /S~ u .
.
.
.
.
,.In ~ r2,r ~ r '~&A 1t in  ~ r2 ) t r l  r J \ [~-  - .
.
.
.
.
.
?
?
\[Since Si C Si+l, for Si?l # { l} ,  tile construction terminatesoil tile basis of the subterm condition either with a finite.set ofliterals or with { l} .
If each term of the equations in Si+, is asubterm of tile terms in Ts, no term of the equations in $~+1can be longer than the longest erm in Ts.EXAMPLE 1.
Assume that L consists of the constants a,b, c, eand the function symbols f ,g,  h,m, n,p.
Then, for the set ofliteralsga = ha, a .~ I f  a, ngf fa  ~ ethe following sequence of sets is constructed.
We represenLthe equations of a set Si by tile system of sets of equivalentterms ind.ced hy S,.
I.e.
: If O is a set of terms under Si and12T s C_ SUB('Ts) holds by definition.- 206  -r,r'rO, then r ~ r'cSi.
Furthermore, we mark by an arrowthat a set under Si is also induced (without modifications) bythe equations in Si+l.So St $2 = S~ngf  fa  .
'# e .....* "-4{e,~e} ~ -~{b} --* --,{e,a} ){a, f fa}  {c, a, f fa ,  f f c}  "--*{ f fe}{ge,pmb} --* --*{rob, r ig/f  c} {rob, ngf fc ,  ng f fa}  ---*{fc}%) {fc, fa} -... {fa} ?Dffc} {gffc,~ffa} \ Df fc,~f Ia,~a,h,q Da, ~a} D~, ~a, ~fla} /3.6.
DEFINITION.
Let S, = S,; with t = min{i I S, = S,?~}.3.7.
LEMMA.
For Sv holds: S -iF- Sv.PROOF.
If Sv # {.I-}, then S and Su are deductively equiva-lent, since S is a subset of Sv and Sv only contains formulasderivable from S. For Sv = {.1_} the same holds for S~_t.
SinceS~_~ is inconsistent, S is deductively equivalent with {.1.
}.Note that for each equation in Si (Si # {a_}) there is a prooffrom S with the anbterm property, as defined below.
This fol-lows from the subterm condition in the inductive construction.3.8.
DEFINITION.
A proof of an equation from S has thesubterm property, iff each term occurring in the equations ofthat proof is a subterm of the terms in Ts, i.e.
an element ofsu~(7-s).So, if S is not trivially inconsistent (?
not in S), the con-struction terminates with {_1.
}, since there exists a proof of anequation from S with the subterm property, whose negation isin $.EXAMPLE 2.
For the inconsistent setS' = S o {gmme ~ pnh f f a} the constructi'on terminates after4 steps (S~ = {.L}), sittce there is a proof of gmme m, pnhf fafrom S' with the subterm property of depth 3.e~me e~me mb~.ngJJc cma ~_amha amJJa9empmb e~mme mb'~ngf Ja  9 \ ] JamhJ Jagmme = pmb mfi m nh f f a9mine ~ pnh f f a;The deductive closure construction restricted by the subtermproperty is a proof-theoretic simulation of the congruence clo-sure algorithm (cf.
\[Nelson/Oppen 80\]t3), if used for testingsatisfiability of finite sets of literals in H?v.
Strictly speaking,ifi.
the congruence closure algorithm is weakened for partialfunctions,ii.
S is not trivially inconsistent (.1_ not in S), andiii.
the failure in the induction step of 3.5. is overruled,tZCL also \[Gallier 87\].then r ,.mr' is in Sv iff the nodes which represent the terms rand r' in the graph constructed for S are congruentfl t More-over, for unary partial functions the algorithm is simpler, sincethe arity does not have to be controlled.3.9.
LEMMA.
The set ol all equations in S~ is closed undersubterm reflexivity, symmetry and transitivity.PROOF.
For S~ = {.
!_} trivial.
If S~ # {.L}, then Sv isclosed under subterm reflexivity and symmetry, since theseproperties are inherited from So to its successor sets.
Sv isclosed under transitivity, since we first get ra~SUB(Ts) fromrl ~ r2, r~ ~ rsESu and then according to the construction also7"1 ~ r2 \ [ r2 / rs \ ]~Sv+l  = Sv ,  with r2\[ra/rs\] = rs.
\[33.2.2 Sat is f iab i l i ty  o f  Sets  o f  L i tera lsFor the proof that the satisfiability of a finite set of fiterals isdecidable we first show that a set of literals in normal form issatisfiable, iff the set is not equal to {.L}.
For Sv = {.L} we gettrivially:3.10.
LEMMA.
Sv = {.1.}
~ "~3M(J=M Sv).Otherwise we can show the satisfiability of Sv by the construc-tion of a canonical model that satisfies S~.Let Ev be the set of all (nonnegated) equations in Sv, TE~ theset of terms occurring in Ev and mEv the relation induced byE~ on T~ ({(r ,r ' )  \[ r ~ r'eE~}).
Then, we choose as theuniverse of the canonical model M~ = (Uv,~v) the set of allequivalence classes of ~ on TE~, if T~ #- g. By Lemma 3.9this set exists.
If Sv contains no (unnegated) equation, we setUv = {fl}, sittce the universe has to be nonempty.3.11.
DEFINITION.
For a set of iiterals S~ in normal form, thecanonical term model for Sv is given by the pair My - (Uv, ~lv},consisting of the universellv = {0} otherwiseattd the interpretation function ~v, which is defined for c?C,feFt and \[r\]d4v by: Isf \[c\] if ccT~ ~c(c) = ~, undefined otherwise\ [ I t ' \ ]  if r'e\[r\] and fr'eT~,,~Ft(f)(\[r\]) = undefined otherwise.It follows from the definition that ~ is a partial function.
Sup-pose further for ~)Ft(f) that \[rl\] = \[r2\] and that ~Ft(f)(\[rt\])is defined.
Then~F, (f)(fn\]) = ~F~ (f)(fr2\]).For this, suppose ~F,(f)(\[r l \])  -- \[frq, with r'e\[rl\].
Since~E~ is an equivalence relation we get r'e\[r~\] and thus~,  (f)(\[~\]) = \[fr'\].t4CL \[Wedekind 90\].lSWe drop the ~E~-index of the equivalence classes.- 207 -EXAMPLE 3.
Tile canonical model for S of Example I whichis constructed using ,.
(;2 = Sv is given by:{ {e,.,e},{b}, {e,a,.f\]u,/.fe},l/v = ~ {ge, pmb}, {rob, ngf  fc,  r ig / f  a},{, {/e, fa}, {Pile, of/s, gu, ha} J~(e) = \[el ~(e)~(b)  = \[b\] ~.(a).
= \[elf (\[a\],{m, t (\[Iul, I I ial)J 9d in)  = ~, (\[bl, tmbl) I \[ ~.
(f) =/(\[e\],\[~e\]), ~(~) = \[ (\[a\], \[~a\]) }~.
( . )
= { (\[~u\], \ [n~l le))}~(h)  = {(\[a\], \[ha\])}D.(p) = {(\[.,b\], L~-,b\])}.For each term r in Tg~ it follows from tile definition of ~c and~, :  ~(r )  = \[d.By the following lemma we show in addition that the domainof ?rv restricted to Ts~ is equal to TE~.3.12.
LEMMA.
For each term r in Ts~: 11 ~ is defined forr, then ~,( r )  = \[r\], with retd , .PROOF.
(By induction on the length of r.) Suppose first that~v is defined for r. For every coustant c it follows from thedefinition of ~)c that i~c(c) = \[c\], with c(7"E~.
Assume for f r  byinductive hypothesis ~v(r)  = \[r\], with roTEs, then it followsfrom the definition of ~F~(f) that ~rt ( f ) ( \ [ r \ ] )  ----- \[fr~\]~ witltfrtcTF.~ and r'(\[r\].
Since r '  is a subterm of \]r ' ,  wc first getr'eT-i;~ and by Lemma 3.9 f r '  .~ f r ' , r '  "~ r~S~.
Because offr(SUB(Ts), then also f r  m \ ] r (Sv.
So, f r  must also be inTg~ and hence c~, (f)( \[r\])  = \ [ fr \] .
\[3Next we show for the model My:3.13.
LEMMA.
S~ # {,L} -.I=M~ S~.PROOF.
(We prove I=~ @, for every ?, i, S~ hy induction oilthe structure of @.
)L is not element of S~.
If 1 were in S~, we would get by thedefinition of S~ S~ = {a.}
which contradicts our assumption.For @ =~ ,L, ~=MJ" ?
holds trivially.Suppose ~ = r ~ r', then r , r '  are in T~,  ~ is defined forr and r ~, and ~v(r)  = \[r\], ~( r ' )  = \[r'\].
Because of rr'(S~, it follows that \[r\] = \[r'\].
So  ~v(r)  = ~( r ' )  and hence~M, ,  7" ,~, r t.Assume that @ is ~ (r ~ r').
If r .m r' were satisfied by M~,~( r )  would be equal to ~,,(r').
By Lemma 3.12 we wouldthen get $~(r) = \[r\] and ~v(r ' )  = \[r'\], with r, r'(Tg~.
Since~g,  is an equivalence relation on 7"g~, r ~ r'?Su would followfrom \[r\] = Jr'l, and, contradicting the assumption, we wouldget S~ = {'L} by tile defipition of S~.
nIt can be easily shown that Mv is a unique (up to isomorphism)minimal model for Sv.
:s Strictly speaking, if M is & model for16It can be verified very easily by using this fact that  we need toadd to a set of literals S only a finite number of axioms to ensure the=cycllcity.
All axioms of the form ~"  ~ ~ (?~?Ft, ~'e'T), with la'r~ _~ISUB(T~)I, are e.g.
more than enough, since from a consistent butcyclic set of literals S must follow an equation ar ~ ~ (aeFi + ,~'eT),with I~1 < I~1, and I~1 _< ISUB(TE)I holds by the construction ofS~ homomorl~hic to My, then every minimal submodel of Mtl, al, satisfies c~, is isomorphic to My.From the two leuinlata above it follows first that tile sails\]la-bility of sets of formulas in normal form is decidable:Since S, and S are deductively equivalent, we can establish bythe following lemma that the satisfiability of arbitrary finitesets of literals S is decidable.3.14.
LEMMA.
S~ # {_L} ~ 3M(~M S).PROOF.
(--,) If Sv # {,L}, we know by Lemma 3.13 that Myis a model for S~.
Then, by the soundness Su i- S "--* VM(~MSv --*~M S).
Since S is derivable from Sv, it follows ~M,  Sand thus S~ # {.L} ---, : IM(~M S).
( , - )  If S~ = {.L}, then for each model M V=M S~.
From thesoundness we get S I- Sv --* VM(~M S "-*~M Sv).
Since S=.is derivable from S, it follows VM(~M Sv "*~=M S) amd henceS~ = {.l_} - -  VM(~M S).
O3.3  Completeness  and  Dec idab i l i tyUsing tile procedure for deciding satisfiability we can easilyshow the completeness and decidability of lt?A v .3.15.
TI IEOREM.
For euery finite set of formulas P, and\]oreach formula ~: 1I F ~ q~, then r b ~.PROOF.
By definition @ is a logical consequence of F, iffF O {N @} is unsatisfiable.
Using the equivalences of Theorem3.3, wc first get:r o {~ ?}
+ {A(r u {~ ?
})}.S,,l,l,OSe, that A S' v,..vAs" is a DNFofA(Fu{~ @}), thenru{~ ~} + {A s' v...v AS"}and by tile decision procedureV= ru  {~ ~b} ,-., s~ = {_L} A.. .A Sv n = {.L}.If r U {.-, @) is unsatisfiable, it follows that ?
U {,,, @} -iF{2.
}, since each S i is deductively equivalent with {.L}.From ?
U {.~ @} k -L it follows by the deduction theorem firstF I - , , .~D.L  and thus Ft-,-, -L D ~.
From I ' F~ / D ~ andF I-~ -L by MP then r I- ~.
133.16.
COROLLARY.
For every finite set o\] \]ormulas F andeach \]ormula ~, F ~" ~ is decidable.PROOF.
By the completeness and soundness we know F I- @ .-.I' ~ ~.
Since @ is a logical consequence of r,  iff ~ r u {,., ~},we can decide r I-- ?~ by tile procedure for deciding ~= FU{,., ~}.13AcknowledgmentsThe author has been supported uring tile writing of the sub-mitted draft version of this paper by the EEC Esprit project- 208 -DYANA at the Institut fiir maschinelle Sprachverarbeitung,Universit~t Stuttgart.
The author would like to thank JochenD6rre, Mark Johnson, liana Kaml,, It(,n Kal,lau , Paul King,John Maxwell and Stefan Momma as well as all anonymousreviewer for their comments on earlier versions of this paper.All remaining errors are of course lily own.References\[.Beiefle/Pletat 88\] Beiede, C., U. Pletat: Feature Graphs andAbstract Data Types: A Unifying Apl~roach.
Proceedingso\] COLING 88, Budapest 1988\[Church 56\] Church, A.: Introduction to Mathematical Logic,Princeton 1956\[Dawar/Vijay-Shanker 90\] Dawar, A., l(.
Vi.jay-Shankcr: AnInterpretation of Negation in Feature Structure Descrip-tions.
Computational Linguistics, 16, 11-21\[Gallier 87\] Gallier, J.: Logic for Computer Science: Founda-tions of Automatic Theorem Proving, New York 1987\[Johnson 88\] Johnson, M.: Attribute-Value \[,ogic and the The-ory of Grammar.
PhD thesis, Stanford University, Stan-ford 1988\[Kasper/Rounds 86\] l(a.sil(:r, IL, W. Rounds: A I,ogical S(:-mantics for Feature Structures.
Proceedings of the ~4thAnnual Meeting of the A CL, New York 1986\[Kasper/Rounds 90\] Kasper, R., W. Rounds: The Logic ofUnification in Grammar.
Linguistics and Philosophy, 13,35-58\[Knuth/Bendix 70\] Knuth, D., P. Bendix: Simple Word Prob-lems in Universal Algebra.
In: J. Leech (ed.
): Compu-tational Problems in Universal Algebra, Elmsford, N.Y.,1970\[Kreisel/Tait 61\] Kreisel, G., W. Tait: Finite Definability ofNumber-theoretic Functions and Parametric Complete-ness of Equational Calculi.
g. Math.
Logik GrundlagenMath., 71 28-38.\[Langholm 89\] Langholm, T.: How to Say No with FeatureStructures.
COSMOS.Report No.
13, Oslo 1989\[Neison/Oppen 80\] Nelson, G., D. Oppen: Fast Decision Pro-cedures Based on Congruence Closure.
A CM, 27, 356-364\[Smolka 89\] Smolka, G.: Feature Constraint Logics for Unifi-cation Grammars.
IWBS Report 93, Stuttgart 1989\[Statman 74\] Statman, R.: Structural Complexity of Proofs.PhD thesis, Stanford University, Stanford 1974\[Statman 77\] Statman, R.: Ilerbrand's Theoremand Gentzen's Notion of a Direct Proof.
In: J.
Barwise(ed.
): llandbook o\] Mathematical Logic, Amsterdam 1977\[Wedekind 90\] W edekind, J.: Unifikationsgrammatiken undihte Logik.
PhD thesis, UniversitS.t Stuttgart, Stuttgart1990- 209 -
