Example-based Spoken Dialogue System using WOZ System LogHiroya MURAO *,**, Nobuo KAWAGUCHI **,?
Shigeki MATSUBARA **,?Yukiko YAMAGUCHI?
Yasuyoshi INAGAKI?
* Digital Systems Development Center,SANYO Electric Co., Ltd.,Hirakata-shi, Osaka, 573-8534 Japan** Center for Integrated Acoustic Information Research,Nagoya University,?
Information Technology Center, Nagoya University,Furo-cho, Chikusa-ku, Nagoya-shi, 464-8603 Japan?
The Faculty of Information Science and Technology, Aichi Prefectural University,Nagakute-cho, Aichi-gun, Aichi, 480-1198, Japanmurao@hr.hm.rd.sanyo.co.jpAbstractThis paper proposes a new framework fora spoken dialogue system based on dia-logue examples between human subjectsand the Wizard of OZ (WOZ) system.
Us-ing this framework and a model of infor-mation retrieval dialogue, a spoken dia-logue system for retrieving shop informa-tion while driving in a car has been de-signed.
The system refers to the dialogueexamples to find an example that is suit-able for generating a query or a reply.
Theauthors have also constructed a large-scaledialogue database using a WOZ system,which enables efficient collection of dia-logue examples.1 IntroductionAgainst the background of ever-increasing comput-ing power, techniques for constructing spoken di-alogue systems using large-scale speech and textcorpora have become the target of much research(Levin et al, 1998; Young, 2002).
In prior re-search, the authors have proposed a spoken-dialoguecontrol technique using dialogue examples with theaim of performing flexible dialogue control dur-ing information-retrieval dialogue and of achievingspeech understanding robust against speech recog-nition errors (Murao et al, 2001).
This techniqueuses input speech data and supplementary informa-tion corresponding to input speech such as retrievalformulas (queries) to form ?examples?
that decidesystem action.
A system using this technique can-not run effectively, however, without a large volumeof example data.
Traditionally, though, collectinghuman-to-human dialogue data and manually pro-viding such supplementary information for each in-stance of input speech has required considerable la-bor.In this paper, we address this problem and pro-pose a new technique for constructing an example-based dialogue system using, as example data, thedialogue performed between a human subject and apseudo-spoken-dialogue system based on the Wiz-ard of OZ (WOZ) scheme.
We also describe aspecific spoken dialogue system for information re-trieval that we constructed using this technique.2 Dialogue Processing Based on ExamplesWe first provide an overview of example-based dia-logue processing that we previously proposed (Mu-rao et al, 2001).2.1 Model of information retrieval dialogueGiven a scenario in which a human operatorsearches an information database and returns infor-mation to a user, dialog between the operator anduser can be modeled as shown in Fig.
1.
The ele-ments of this model are described below.1.
Request The user tells the operator the con-tents of an inquiry and demands reference.2.
Retrieval The operator receiving the user?s re-quest generates a query after referencing do-main knowledge and current dialogue contextDomain KnowledgeandDialogue Context(1)Request(4)Reply(2)Retrieval(3)SearchResultsSearchToolInformationDatabaseQueriesOperatorUserrequest to queryresultto replySearchResultsFigure 1: Information flow of information retrievaldialogueand then processes the query indirectly by ma-nipulating a search tool such as an ordinarycomputer.3.
Search results The search tool generatessearch results.4.
Reply The operator returns a reply to the userbased on search results and dialogue context.Setting up information flow in this way allowsus to view operator behavior in the following way.Specifically, the operator in Fig.
1 makes two deci-sions in the process of advancing dialog.Decision 1: Generate a query after listening to userspeechDecision 2: Generate a reply after receiving searchresultsHere, an experienced operator would use morethan just the superficial information obtained fromuser speech.
To generate a query or reply thatbest suits the user?s need at that time, the opera-tor would also make use of domain knowledge, di-alogue context, and the search results themselves.In other words, this kind of dialogue processing canbe viewed as a mapping operation from input infor-mation such as user speech and domain knowledgeto output information such as a query.
With this inmind, we considered whether a ?decision?
to guidesuch dialogue could be automatically performed byreferring to actual examples of behavior manifestedby an experienced human operator.
In short, we de-cided to store a large volume of dialogue examples,i.e., mapping information, and to determine outputinformation for certain input information on the ba-sis of mapping information stored in similar dia-logue examples.2.2 Generation of queries and replies based onexamples2.2.1 Structure of example dataThe two ?decisions?
performed during the time ofinformation retrieval dialogue between the user andoperator can be expressed as a mapping between thefollowing input and output information.?
Input/output information in the decision forgenerating a query:Input User speech and dialogue contextOutput Query?
Input/output information in the decision forgenerating a reply:Input User speech, dialogue context, andsearch resultsOutput ReplyIt is therefore sufficient to save those items thatcover such input and output information.
Specifi-cally, a large number of example data can be col-lected using the following information as elementsto construct an example database.1.
Text of user speech2.
Query3.
Reply text4.
Search results5.
Dialogue context (past speech, grounding in-formation, conversational objects , etc.
)The following describes the procedure for gener-ating a query or reply with respect to input speechby referencing an example database.2.2.2 Query generation processFrom among the examples in the exampledatabase, the system extracts the one most similarto the input speech and the dialogue context at thattime.
It then adjusts the query in that example to fitthe input speech and generates a new query.2.2.3 Reply generation processThe system performs a search based on the gen-erated query and receives search results.
It then ex-tracts the most similar example from the exampledatabase with respect to input speech, the dialoguecontext at that time, and the search results.
Finally,the system adjusts the reply in that example to fit thecurrent conditions and generates a new reply.2.3 Problem pointsOperating a dialogue system based on dialogueexamples requires the construction of an exampledatabase as described above.
Constructing a large-scale example database, moreover, requires a largevolume of dialogue text in which supplementary in-formation such as queries and search results hasbeen provided with respect to input speech.Up to now, we have been constructing an exam-ple database by first collecting human-to-human di-alogue and converting speech to text and then as-signing queries, search results, and the like to eachinstance of input speech.
This, however, is a labori-ous process.
In addition, example data constructedon the basis of human-to-human dialogue data mayhave features different from those of human-to-dialogue-system dialogue data.
In other words, wecannot call the above approach an optimal methodfor constructing example data.3 Construction of an Example Databaseusing the WOZ SystemWe propose the Wizard of OZ (WOZ) system asone means of efficiently collecting dialogue datathat includes supplementary information attached tospeech.
Carrying on a dialogue using WOZ makesit possible to collect the information needed forconstructing an example database while collectingspeech data.3.1 WOZ systemWhen carrying on a dialogue using the WOZ sys-tem, the user feels that he or she is talking to a com-pletely mechanical system despite the fact that a hu-man being is actually being used for some of theelements making up the dialogue system.
Collect-ing dialogue data by WOZ should therefore result inTouch PanelandDisplayInformationDatabaseQueryGenerationPartSpeechOutputReplyGenerationPartQueryReply TextLogInformationTree StructuredKeywordsSearchResultsThe OperatorSpeech InputUserThe WoZ SoftwareReply-StatementBigramSearchExecutionPartSpeechSymthesisFigure 2: Configuration of Wizard of OZ systemdata that is closer to dialogue that would occur be-tween a human and a machine.Collecting spoken dialogue data using the WOZsystem has actually been performed a number oftimes in the past (MADCOW, 1992; Bertenstam etal., 1995; Life et al, 1996; Eskenazi et al, 1999;San-Segundo et al, 2001; Lemmela and Boda, 2002;Yoma et al, 2002).
The objective of those stud-ies, however, was to collect, analyze, and evaluatedialogue data between people and artificial objects,and in many cases, only one of the artificial-object?sfunctions was taken over by a human, for example,the speech recognition function.Our study, however, goes further than the above.In particular, we create special software (calledWOZ software) that allows a human being to per-form the functions of interpreting user speech, gen-erating queries and executing searches, and generat-ing replies.
We then propose a framework that en-ables the operator (wizard) to carry on a dialoguewith the user while operating this WOZ software sothat obtained data can be used later to perform di-rect control of a dialogue system.
Specifically, weconfigure a pseudo-spoken-dialogue system (WOZ)consisting of WOZ software and an operator, holdinformation retrieval dialogue between this systemand human subjects, and save the queries ,search re-sults and reply statements generated at this time aslog information.
We then use this log informationand text-converted speech to construct an exampledatabase that can be used for dialogue control.3.2 System configurationFigure 2 shows the entire configuration of the WOZsystem that we constructed.
In this configuration,keywordssearchresultstype ofkeywordscontrol buttonsFigure 3: An example of display of Wizard of OZ system (1): Query generation parttext inputbuttonssearchresultstype ofkeywordscontrol buttons&standard phrasesFigure 4: An example of display of Wizard of OZ system (2): Reply generation partthe WOZ software, which was created using theC++ language, runs on a personal computer underWindows2000.
It consists of a screen for generat-ing queries (query part) and a screen for generatingreplies (reply part).
Figures 3 and 4 show samplescreens of these parts.
This GUI adopts a touch-panel system to facilitate operations ?
an operatoronly has to touch a button on one of these screensto generate a query, search an information database,generate a reply, or output synthesized speech.WOZ software must feature high operability toachieve natural dialogue between the WOZ systemand a human user.
When designing WOZ softwareon the basis of a human-to-human dialogue corpusthat we previously collected, we used the followingtechniques to enable the system to operate in realtime while carrying on a dialogue with the user.First, the query part arranges keywords in a treestructure by search type so that appropriate key-words can be selected at a touch to generate a queryand retrieve information quickly 1 .
Search resultsare displayed at the bottom of the screen in list form.Second, the reply part displays text-input buttonsfor generating replies and a list of search results.The text-input buttons correspond to words, phrases,and short standard sentences, and pushing them in1Queries that deal with context in regard to input speech arecurrently not defined for the sake of simplicity in software op-eration.
?Hungry, but not enough time.
?You want to eat Chineese noodle.
?Search Japanese food restaurant.Figure 5: Examples of prompting panelsan appropriate order generates a reply in text form.The arrangement of these text-input buttons on thescreen is based on connection frequency betweentext elements (reply-statement bigram) as previouslydetermined from the human-to-human dialogue cor-pus mentioned above.
In other words, each text-input button represents a text entry having the high-est frequency of following the immediately previoustext entry to the left, which makes for quick genera-tion of a reply.
Furthermore, to enable quick input,the section of the screen displaying the search resultshas been designed so that the name portion of eachresult can be touched directly and automatically in-cluded in the reply.
The generated reply in text formis finally output in voice form via the speech synthe-sis section of the system.Switching back and forth between the query andreply parts can be performed as needed using aswitch button.
The reply part also includes but-tons for instantly generating words and short phrasesof confirmation and encouragement (e.g., ?yes,?
?Isee?)
while the user is speaking to create as naturala dialogue as possible.3.3 Collecting dialogue data by the WOZsystemWe targeted shop-information retrieval while driv-ing a car as an information-retrieval applicationbased on spoken dialogue, and collected dialoguedata between the WOZ system and human subjects(Kawaguchi et al, 2002).
This data was collectedwithin an automobile driven by subjects each ofwhom acted as a user searching for information.
Apersonal computer running the WOZ software wasplaced in the automobile with the ?wizard?
sittingin the back seat.
All spoken dialogue was recordedusing another personal computer.Data collection was performed according to thefollowing procedure for a duration of about five min-Table 1: Collected WOZ dataNumber of Speech length Speech Unitssessions (min.
)User WOZ User WOZ487 499 791 13,828 12,487utes per subject.?
A prompting panel such as shown in Fig.
5 ispresented to the subject.?
The subject converses freely with WOZ basedon the prompting panel shown.The wizard operates the WOZ system while lis-tening to the subject, that is, the wizard performs anappropriate search and returns a reply using speechsynthesis 2 .Table 1 shows the scale of collected data.3.4 Constructing an example database usingWOZ log informationWOZ software was designed to output detailed loginformation.
This information consists mainly ofthe following items.
All log information is recordedwith time stamps.?
Speaker ID (input by the wizard when initiatinga dialogue)?
Query generated for the input speech in ques-tion?
Search results returned for the generated query(number of hits and shop IDs)?
Text of reply generated by the operator (wiz-ard)A saved WOZ log can be used to efficiently con-struct an example database by the following proce-dure.
To begin with, a written record of user speechis made based on the voice recording of spoken di-alog with time information added.
Next, based on2The wizard generates queries, performs searches, and gen-erates replies to the extent possible for speech to which definedqueries can be applied.
If a query cannot be generated, the wiz-ard will not keep trying and will generate only an appropriateresponse.
(Well, search convenience stores near here.
)(I found CIRCLE-K Makinohara store and SUNKUS Kamenoi store near here.
)Search resultsDialogue historyThe most similarexamplefor query generationThe most similarexamplefor reply generationInput text(Result of speechrecognition)ReplyFigure 6: A view of example-based dialogue systemTable 2: Configuration of constructed exampledatabaseNumber of Number ofsessions examples243 1,206the time information in the log output by WOZ soft-ware, a correspondence is established between userspeech and queries and between search results andreplies.We constructed an example database using a por-tion of dialogue data collected in the above manner.Table 2 summarizes the data used for this purpose.Query and search-result correspondences were es-tablished for about 20% of all user speech excludingspeech outside of the task in question and speechoutside of query specifications.4 Spoken Dialogue System using DialogueExamplesWe here describe a dialogue system that runs usingthe example database that we constructed (see (Mu-rao et al, 2001) for details).
The task is to search forshop information while inside an automobile.
Thissystem was implemented using the C++ languageunder Windows2000.
Figure 6 shows a screen shotof this example-based dialogue system.4.1 System configurationThe following describes the components of this sys-tem with reference to Fig.
7.Dialogue example database (DEDB): Consists ofdata constructed from dialogue text and log in-formation output from WOZ software.
Dia-logue text is subjected to morphological anal-ysis 3, and words essential to advancing the di-alogue (e.g., shop name, facility name, foodname) are assigned word class tags based onclasses given to these words beforehand ac-cording to meaning.Word Class Database (WCDB): Consists ofwords essential to the task in question andclasses given to them according to meaning.Word classes are determined empirically basedon dialogue within the dialogue corpus.Shop Information Database (SIDB): Consists ofa collection of information on about 800 restau-rants and shops in Nagoya, the same as thatused in the WOZ system.Speech Recognition: Uses ?Japanese DictationToolkit(Kawahara et al, 2000)?.
The lan-guage model was created from the previouslycollected human-to-human dialogue corpus.3Using ChaSen morphological-analysis software for theJapanese language (Asahara and Matsumoto, 2000).SpeechInputSpeechRecognition   Query GenerationSearchSpeechOutputDialogue ExampleDatabase(DEDB)Word classDatabase(WCDB)Shop InformationDatabase(SIDB)SpeechSynthesis    Reply GenerationFigure 7: Configuration of example-based dialoguesystemQuery Generation: Extracts from the DEDB theexample closest to current input speech andconditions, modifies the query in that exampleaccording to current conditions, and outputs theresult.Search execution: Accesses the SIDB using thegenerated query and obtains search results.Reply Generation: Extracts from the DEDB theexample closest to input speech and search re-sults, modifies the reply in that example ac-cording to current conditions, and outputs theresult.Speech Synthesis: Outputs replies in voice formusing a Japanese TTS (Text To Speech) soft-ware ?EleganTalk Ver.
2.1?
by Sanyo ElectricCo., Ltd. .4.2 OperationThe following describes system operation (see Fig.8 for a specific operation example).Step 1: Extracting similar example for queryFor a speech recognition result, the systemextracts the most similar example from theDEDB.
The robustness of the similarity cal-culation between the input utterance and theutterance in the DEDB should be consideredagainst the speech recognition error.
Therefore,a keyword matching method using the wordclass information is adopted.
For a speechrecognition result combined with a morpholog-ical analysis result, independent words and theInput:   Etto, spaghetti no omise ni ikitai na.
(I'd like to go to a spaghetti restaurant.
)Keywords: [10: spaghetti],[omise (shop)],[iku (go)]1st:  U: <10:Curry> no [omise] ni [iki]tain desu kedo(I'd like to go to a curry restaurant.
)Q: search KEY=<10:curry>2nd: U: <10: Ramen(noodles)> wo <tabe> ni [iki] taina(I'd like to eat noodles.
)Q: search KEY=<10:ramen>3rd: U: [10: Spaghetti] de <yu-mei> na <tokoro> ga iidesu( I prefer a popular resutaurant for spaghetti.
)Q: search KEY=<10:spaghetti>Step1: Extracting similar example for queryStep2: Query ModificationQuery in the similar case:      search KEY=<10:curry>Matched keywords pair:       ( <10:curry> , <10:spaghetti> )Output Query:      search KEY=<10:spaghetti>Step3: SearchIutput Query:      search KEY=<10:spaghetti>Search Result:     RESULT=NONEInput:   Etto, spaghetti no omise ni ikitai na.
(I'd like to go to a spaghetti restaurant.
)Keywords: [10: spaghetti],[omise (shop)],[iku (go)]1st:   U:<10: Ramen(noodles)> wo <tabe> ni [iki] taina(I'd like to eat noodles.
)Q: search KEY=<10:ramen>S:<10:Ramen(noodles)> no [omise] wa chikaku ni arimasen( There are no noodle restaurants near here.
)A: RESULT=NONE2nd:  U:<10:Curry> no [omise] ni [iki]tain desu kedo(I'd like to go to a curry restaurant.
)Q: search KEY=<10:curry>S:Hai, Curry no omise wa 5-ken arimasu(Well, I found 5 curry restaurants.
)A: RESULT=5, ID1=120,..,ID5=565Step4: Extracting similar example for replySearch Result:     RESULT=NONESimilar cases{Similar casesStep5: Reply ModificationReply in the similar case:<10:Ramen(noodles)> no [omise] wa chikaku ni arimasen( There are no noodle restaurants near here.
)Matched keywords pair:( <10:Ramen(noodles)> , <10:spaghetti> )Output Reply:<10:spaghetti> no [omise] wa chikaku ni arimasen( There are no spaghetti restaurants near here.
)Figure 8: Example of query and reply generationimportant words to which the word class tagsare assigned according to the information inthe WCDB are regarded as the keywords, andtheir similarity is calculated as follows.
Foreach transcription of a user?s utterances in theDEDB, the number of matched words and thenumber of important words which belong tothe same word class are accumulated with thecorrespondent weight and the result is treatedas the similarity.
The utterance which marksthe highest similarity is regarded as the mostsimilar one.Step2: Query Modification The query for the ex-tracted example is modified with reference tothe input utterance.
The modification is per-formed by replacing the keywords in the refer-ence query using word class information.Step 3: Search The SIDB is searched by using themodified query and a search result is obtained.Step 4: Extracting similar example for replyThe system extracts the most similar examplefrom the DEDB, by taking account of not onlythe similarity between the input utterance andthe utterance in examples but also that betweenthe number of items in the search result andthat in the examples.
Here, a total similarityscore is computed by performing a weightedsummation of two values: the utterance sim-ilarity score and the search-results similarityscore obtained from the difference betweenthe number of search results in an exampleand that obtained in Step 3.
The search-resultssimilarity score is computed as follows.When the number of search results by mod-ified query is 0: Give the highest score toexamples in the example database with 0 num-ber of search results and the lowest score to allother examples.When the number of search results by mod-ified query is 1 or more: Give the high-est score to examples in the example databasewith the same number of search results and anincreasingly lower score as difference in thenumber of search results becomes larger (useheuristics).For example, if not even one search result couldbe obtained by the modified query, examples inthe example database with not even one searchresult constitute a match.Step 5: Reply Modification The reply statementfor the extracted example is modified with ref-erence to the input utterance.
The modificationis performed by replacing the words in the ref-erence reply statement by using word class in-formation.
Then a speech synthesis module isused to produce a reply speech.4.3 Adding, modification, and deletion ofexample dataThis system allows example data to be added, mod-ified, and deleted.
When a failed operation occurswhile carrying on a dialogue, for example, buttonslocated at the bottom of the screen can be used tomodify existing example data, add new examples,and delete unnecessary examples.5 ConclusionThis paper has proposed an efficient technique forcollecting example data using the Wizard of OZ(WOZ) system for the purpose of guiding spoken di-alogue using dialogue examples.
This technique hasthe following effects.?
Knowledge buried in the WOZ system log(conversions from input speech to query andreply, etc.)
can be used as dialogue systemknowledge.?
Because dialogue is collected using the WOZsystem, the examples so collected are close todialogue that would occur in an environmentwith an actual dialogue system.
In other words,dialogue examples can be collected under con-ditions close to human-to-machine dialogue.?
The labor involved in recording speech neces-sary for construction of an example databasecan be reduced.In future research, we plan to evaluate dialogue-processing performance and context processing us-ing example databases constructed with the WOZsystem.ReferencesMasayuki Asahara and Yuji Matsumoto.
2000.
Extendedmodels and tools for high-performance part-of-speechtagger.
In Proceedings of COLING 2000, July.J.
Bertenstam, M. Blomberg, R. Carlson, K. Elenius,B.
Granstrom, J. Gustafson, S. Hunnicutt, J. Hogberg,R.
Lindell, L. Neovius, A. de Serpa-Leitao, L. Nord,and N. Strom.
1995.
The waxholm application data-base.
In Proceedings of Eurospeech-95, volume 1,pages 833?836.Maxine Eskenazi, Alexander Rudnicky, Karin Gregory,Paul Constantinides Robert Brennan, Christina Ben-nett, and Jwan Allen.
1999.
Data collection and pro-cessing in the carnegie mellon communicator.
In Pro-ceedings of Eurospeech-99, volume 6, pages 2695?2698.Nobuo Kawaguchi, Shigeki Matsubara, Kazuya Takeda,and Fumitada Itakura.
2002.
Multi-dimensionaldata acquisition for integrated acoustic informationresearch.
In Proc.
of 3rd International LanguageResources and Evaluation Conference (LREC-2002),pages 2043?2046.T.
Kawahara, A. Lee, T. Kobayashi, K. Takeda, N. Mine-matsu, S. Sagayama, K. Itou, A. Ito, M. Yamamoto,A.
Yamada, T. Utsuro, and K. Shikano.
2000.
Freesoftware toolkit for japanese large vocabulary contin-uous speech recognition.
In Proceedings of ICSLP-2000, volume 4, pages 476?479.Saija-Maaria Lemmela and Peter Pal Boda.
2002.
Effi-cient combination of type-in and wizard-of-oz tests inspeech interface development process.
In Proceedingsof ICSLP-2002, pages 1477?1480.Esther Levin, Roberto Pieraccini, and Wieland Eckert.1998.
Using markov decision processes for learningdialogue strategies.
In Proceedings of ICASSP98, vol-ume 1, pages 201?204.A.
Life, I. Salter, J.N.
Temem, F. Bernard, S. Rosset,S.
Bennacef, and L. Lamel.
1996.
Data collectionfor the mask kiosk: Woz vs prototype system.
In Pro-ceedings of ICSLP-96, pages 1672?1675.MADCOW.
1992.
Multi-site data collection for a spo-ken language corpus.
In DARPA Speech and NaturalLanguage Workshop ?92.Hiroya Murao, Nobuo Kawaguchi, Shigeki Matsubara,and Yasuyoshi Inagaki.
2001.
Example-based querygeneration for spontaneous speech.
In Proceedings of2001 IEEE Workshop on Automatic Speech Recogni-tion and Understanding (ASRU2001).R.
San-Segundo, J.M.
Montero, J.M.
Gutierrez, A. Gal-lardo, J.D.
Romeral, and J.M.
Pardo.
2001.
Atelephone-based railway information system for span-ish: Development of a methodology for spoken dia-logue design.
In Proceedings of SIGdial-2001, pages140?148.Nestor Becerra Yoma, Angela Cortes, Mauricio Hormaz-abal, and Enrique Lopez.
2002.
Wizard of oz evalua-tion of a dialogue with communicator system in chile.In Proceedings of ICSLP-2002, pages 2701?2704.Steve Young.
2002.
Talking to machines (statisticallyspeaking).
In Proceedings of ICSLP-2002, pages 9?16.
