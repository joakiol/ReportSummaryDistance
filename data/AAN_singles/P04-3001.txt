TransType2 ?
An Innovative Computer-Assisted Translation SystemJos?
Esteban and Jos?
LorenzoAtos OriginAlbarrac?n 2528037 Madrid, Spainjfernando.esteban@atosorigin.comjose.lorenzo@atosorigin.comAntonio S.Valderr?banosBitext.comGeneral Or?a 328006 Madrid, Spainasv@bitext.comGuy LapalmeRALI LaboratoryUniversit?
de Montr?alC.P.
6128, Succ CentrevilleMontr?al, Qu?becCanada H3C 3J7lapalme@iro.umontreal.caAbstractTT2 is an innovative tool for speeding up andfacilitating the work of translators byautomatically suggesting translationcompletions.
Different versions of the systemare being developed for English, French,Spanish and German by an international teamof researchers from Europe and Canada.
Twoprofessional translation agencies are currentlyevaluating successive prototypes.1 IntroductionTransType2 (TT2)1 is an innovative tool forspeeding up and facilitating the work of translatorsby automatically suggesting translationcompletions.
The system uses probabilistictranslation and language models to calculatecompletions that are compatible with translator'sinput and, furthermore, revises its suggestions inreal time with each new character the translatorenters.
If the system provides a correct suggestion,the translator has only to accept it, thereby savingtime in producing the target text.
Otherwise, thetranslator ignores the system's suggestions andcontinues to type his or her intended translation.TT2 is based on a new Machine AssistedTranslation paradigm that sits between fullyautomatic MT and translation memory in order tosignificantly increase translator productivity onnon-repetitive texts.
TT2 is unique in the way inwhich it combines the strengths of MT technologywith the competence of the human translator.The project is an extension of the TransTypeproject that was developed from 1997 to 2000 bythe RALI at Universit?
de Montr?al (Foster 1997,Langlais 2002), which demonstrated the interest oftarget text mediated computer aided translation.1 For further details, see http://tt2.sema.esDifferent versions of the system are beingdeveloped for English, French, Spanish andGerman (with English as the pivot).
To ensure thatTT2 corresponds to translators?
needs, twoprofessional translation agencies are currentlyevaluating successive prototypes.
To date,translation technology has not been able to keeppace with the demand for high-quality translation.TT2 has the ability to significantly increasetranslator productivity and thus has enormouscommercial potential.TT2 is a RTD project funded by the EuropeanCommission under the Information SocietyTechnologies Programme and includes fiveEuropean partners:Atos Origin (Spain): administrative andtechnical coordinator, system design andintegration.Lehrstuhl f?r Informatik VI, ComputerScience Department, RWTH Aachen - Universityof Technology (Germany): statistical translation,speech recognition.Instituto Tecnol?gico de Inform?tica,Universidad Polit?cnica de Valencia, (Spain):finite-state techniques for translation and speechrecognition.Xerox Research Centre Europe, Grenoble(France): corpus provider and statistical translationmodeling.Celer Soluciones, Madrid (Spain): evaluation inthe operational context of a translation bureau.And two Canadian partners:RALI Laboratory, University of Montreal(Canada): user-interface, statistical modeling,evaluation coordination.Soci?t?
Gamma, Ottawa (Canada): evaluation inthe operational context of a translation bureau.Figure 1.
User-view of TT2 with the source text on the left highlighting the sentence under translation.
Thetranslator types in the right pane in which TT2 suggests completions that appear in the menu in real-time.Completions can be accepted either by clicking an item from the menu or by the keyboard.
This picturedisplays in red (appearing in gray in black and white) characters that have been suggested and accepted bythe translator.2 TT2 as seen by a translatorTransType is a tool that observes a translator ashe or she is typing, tries to predict what will betyped next and displays its predictions to the user.The translator can incorporate these suggestionsinto the current target text if they are useful, orsimply ignore them by continuing typing.
Thesystem will then adapt itself to the new text typedby the translator.
The suggestions can potentiallyimprove a translator's productivity both byspeeding up the keying in of the target text and bycontributing to the translation process itself.
If theunderlying machine translation technology is goodenough, TransType2's contributions may reducethe need to consult conventional tools such as abilingual dictionary, term bank, or translationmemory.The user interface (Figure 1) allows a real-timeinteraction with the output of thetranslation/language model to help a translatorproduce a translation.
TransType2's main windowis divided into two panes, one containing thesource text and another containing the target text.The panes are displayed side by side, with theircontents divided into aligned segments.
They arealso synchronized, so that scrolling one moves theother in parallel.
Many aspects of the mainwindow's behavior and appearance, such as theorientation of the source and target panes, can bechanged using the commands accessible from themenu or keyboard shortcuts.The source pane is read-only in which the onlyoperation allowed is the selection of a newsentence that triggers a new translation in the targetwindow.
The target window is a normal textediting window, except that after each charactertyped by the user, the system displays a pop-upmenu of suggestions for completing the currentinput.
If the user types a return or a tab, thissuggestion is inserted in the text.
Suggestions canbe scrolled up or down with arrow keys or selectedwith the mouse.
At initialization time, the userselects the prediction engine to be used accordingto one of six source-to-target translation pairs andone of the following domains: technical manuals,European Community official documents andofficial reports of the debates of the House ofCommons of Canada (Hansards).3 System ArchitectureThe TT2 system consists of two majorsubsystems that interact closely:user interface (UI), written in Java, provides thetyping and pointing modalities; a second UIsupplements those with speech for operating theprototype via short commands uttered by the user .The user interface also produces a trace of all user-actions that can later be replayed by a specialprogram or analyzed in order to evaluate theeffectiveness of TransType2 both in terms ofnumber of keystrokes needed for typing atranslation and the various patterns of use.prediction engine (PE), written in C/C++, ofwhich there are multiple realizations available,several per language pair and specific domain(either technical documentation, EC officialdocuments or Hansards).
The translation enginesdeveloped by research partners are:RALI (French?English) is a maximum-entropyminimum-divergence translation model (Foster2000) that proposes multiple completions for thenext few words.ITI (French?English, Spanish?English) arebased on finite-state techniques (Cubel et al 2003)and suggest a single completion of a wholesentence.RWTH (French?English, Spanish?English,German?English) are statistical based (Och et al2003) and suggest a single completion of a wholesentence.The main communications between the UI andthe PE are the following:1.
To initialize the PE, the UI calls a generic createmethod API function with the appropriateparameters required by each PE and checks itssuccessful completion.2.
Once the user has selected the file he/she wantsto work with, the UI produces a list of textsegments (sentences) and displays them in thesource text pane of the interface.3.
The selection of a source sentence iscommunicated to the PE by the UI.
The sentencebecomes the source text context prediction forthe PE until the user selects another sentence.4.
The UI communicates to the PE every singlemodification of the target text: insertion/removalof a new character (letter, digit, punctuation signor white space) and cursor movements within thetarget text.
The UI communicates left-right one-character-at-a-time movements in the target textarea.
However, the PE does not take into accountthe text to the right of the cursor for making itspredictions.5.
In response to the request, the PE initiates thesearch for completions that are eventually re-turned to the UI for their display.6.
As part of the general exit procedure, the UI callsa generic destroy method API function with theappropriate parameters required by each PE andchecks its successful completion.All communication exchanges between the UIand the PE are initiated by the UI, while the PE isin charge of responding by doing some actualwork.
This is particularly the case in 5 (producinga list of completions), while the others are more ofan informative nature (cases 3 and 4) or can hardlyconsidered communication exchanges at all: cases1, 2 (loading a text file and producing a list ofsentences) and 6 (termination).Prediction engines and the speech recognizersare developed and tested under an operatingplatform (Linux) different than the one chosen foruser testing (MS Windows).
This duality impliesthat prediction engines and speech recognizers,while developed under Linux, should be able torun under Windows.
The users (i.e.
the twotranslation bureaus) voiced early in the project thatTT2 system should run at least under Windows,although preferably it should also run under Linux.TT2 runs currently on both platforms, thedissemination and awareness of the TT2 prototypeare broader, and go further than the initialobjectives proposed inside the IST project.Given that developers of the prediction enginesand speech recognizers were in favor of usingC/C++ as their principal programming language,two practical alternatives were discussed:?
Write code without operating platformdependencies and according to standards, thatwould allow compilers for both platforms tobuild functionally equivalent binary versions.?
Employ tools that lessen to a certain extent therequirement of written C/C++ platformindependent code, while allowing the porting ofcode from the Linux to the Windows platform.This was the preferred option and the three PE?sactually make use of one of such tool: Cygwin2.Cygwin provides a C/C++ compiler for theWindows platform and a library (cygwin1.dll)that gives support to Linux/Unix operatingsystem services under the Windowsenvironment.The partners responsible for developing the userinterface have opted for JAVA as the programminglanguage because of its graphical user capabilities,in particular its text components, which are fullyconfigurable and compatible with external C/C++programs.
This option solves the portabilityproblem, since the resulting code will run underany JAVA-enabled operating system.2 http://www.cygwin.com/4 System requirementsGenerally speaking, running the TT2 systemdemands a high-end personal computer or work-station in order to be able to provide translationcompletions in real-time and also to be able toincorporate multi-modal user input.The minimum user equipment is a high-endpersonal computer running under Windows with aminimum of 1GB of RAM; however, 2 GB ofRAM and Windows XP Professional operatingsystem is preferable.
If a Linux operating system isused, the kernel version must be 2.4.20 or higher.It is also required to have installed the Java 2Runtime Environment, preferably version1.3.1_09.
To produce the PE, cygwin1.dll version1.5.5-1 is required.The interface requirements of both scenariosinclude standard keyboard and mouse equipment;video display capable of resolutions of 1024x768pixels or higher and voice input hardware(microphone, a headset preferably, and sound card)if the optional speech recognition module is used.5 EvaluationTT2 is based on the premise that we can improvethe productivity of translators by reducing thenumber of keystrokes needed for entering atranslation.
Professionals at two translation bureausare currently testing the prototypes.
Even thoughtranslators are not used to working with this kindof environment, some of them need about 50% lesskeystrokes to enter a translation and can thusproduce a translation faster.
Many user interfaceimprovements suggested by the translators will beincluded in the next prototypes.6 ConclusionTT2 is the outcome of a successful cooperationbetween European countries and Canada todevelop an innovative approach to machine aidedtranslation.
It is based on advances in statisticalmachine translation research and on a seamlessintegration in a word processing environment ofthe same type as the one currently used bytranslators.7 AcknowledgementsTT2 is a RTD project funded by the EuropeanCommission under the Information SocietyTechnologies Programme (IST-2001-32091).
InCanada it is funded by the National Science andEngineering Research Council and the Minist?redu D?veloppement ?conomique et R?gional duQu?bec (Mission Recherche).ReferencesE.
Cubel, J. Gonz?lez, A. Lagarda, F. Casacuberta,A.
Juan and E.Vidal.
Adapting finite-statetranslation to the TransType2 project.Proceedings of the 8th International Workshopof the European Association for MachineTranslation and the 4th Controlled LanguageApplications Workshop Dublin City UniversityJoint Conference, Ireland, 2003.Foster G., Isabelle P., Plamondon P. Target-TextMediated Interactive Machine Translation,Machine Translation, 12:1-2, 175-194, 1997.Foster G., A Maximum Entropy / MinimumDivergence Translation Model, Proceedings ofthe 38th Annual Meeting of the Association forComputational Linguistics, pp.
37-42, Hong-Kong, October 2000.Philippe Langlais, Guy Lapalme and MarieLoranger.
TransType: Development-EvaluationCycles to Boost Translator's Productivity.Machine Translation (Special Issue onEmbedded MT Systems), vol.
17, num.
2, pp.77-98, Feb 2002.F.J.
Och, R. Zens, H. Ney.
Efficient Search forInteractive Statistical Machine Translation.Proceedings of the 10th Conference of theEuropean Chapter of the Association forComputational Linguistics (EACL).
Budapest,Hungary, pp.
387-393, April 2003.Antonio S. Valderr?banos, Jos?
Esteban and LuisIraola.
TransType2 - A New Paradigm forTranslation Automation.
MT Summit 2003, NewOrleans, USA.
