ON REASONING BY DEFAULTRaymond ReiterDepartment of Computer ScienceUniversity of British ColumbiaVancouver, B.C., CanadaABSTRACTThis paper surveys a number of kinds ofdefault reasoning in Art i f ic ia l  Intelligence, spec-i f i ca l ly ,  default assignments to variables, theclosed world assumption, the frame default forcausal worlds, exceptions as defaults, and negationin Art i f ic ia l  Intelligence programming languages.Some of these defaults provide clear representa-tional and computational advantanges over theircorresponding f i r s t  order theories.
Finally, thepaper discusses various di f f icult ies associatedwith default theories.I f  I don't know I don't knowI think I knowI f  I don't know I knowI think I don't knowR.D.
Laing, KnotsI.
INTRODUCTIONDefault reasoning is commonly used in naturallanguage understanding systems and in Art i f ic ia lIntelligence in general.
We use the term "defaultreasoning" to denote the process of arriving atconclusions based upon patterns of inference ofthe form "In the absence of any information to thecontrary, assume..." In this paper, we take thispattern to have the more formal meaning " I f  certaininformation cannot be deduced from the given know-ledge base, then conclude..." Such reasoning rep-resents a form of plausible inference and istypically required whenever conclusions must bedrawn despite the absence of total knowledge abouta world.In order to f ix  some of these ideas, we beginby surveying a number of instances of defaultreasoning as they are commonly invoked in A.I.Specifically, we discuss default assignments tovariables, the clo~ed world assumption, the framedefault for causal worlds, exceptions as defaults,and negation in A.I.
programming languages.
We shallsee that these may all be formalized by introducinga single default operator ~ where #W is takento mean "W is not deducible from the given know-ledge base".In addition, we shall discover that the closedworld and frame defaults provide clear representa-tional and computational advantages over their cor-responding f i r s t  order theories.
The former elim-inates the need for an expl icit  representation ofnegative knowledge about a world, while the lattereliminates the so-called frame axioms for dynamicworlds.Finally, we discuss various problems whicharise as a result of augmenting f i r s t  order logicwith a default operator.2.
SOME INSTANCES OF DEFAULT REASONING IN A.I.The use of default reasoning in A.I.
is farmore widespread than is commonly realized.
Thepurpose of this section is to point out a varietyof seemingly different situations in which suchreasoning arises, to accent common patterns whichemerge when defaults are formalized, and to indi-cate certain representational and computationaladvantages of default reasoning.2.1 Default Assignments to VariablesA number of knowledge representation schemes,e.g.
FRL \[Roberts and Goldstein 1977\], KRL \[Bobrowand Winograd 1977\], expl ic it ly provide for theassignment of default values to variables (slots,terminals).
For example, in KRL the unit for aperson in an airl ine travel system has the form:210\[Person UNIT Basic<hometown{(a City) PaloAlto; DEFAULT}>\]We can view th is  declarat ion as an inst ruct ion  tothe KRL in terpreter  to carry out the fo l lowing:I f  x is a person, then in the absence of any in fo r -mation to the contrary, assume hometown(x)=PaloAlto,or phrased in a way which makes exp l i c i t  the factthat a default  assignment is being made to avar iable:I f  x is a person and no value can be determined forthe var iable y such that hometown(x)=y, then assumey=PaloAlto.Notice that in assigning a default  value to a var-iab le ,  i t  is not su f f i c ient  to fa i l  to f ind an ex-p l i c i t  match for the var iable in the data base.For example, the non existence in the data base ofa fact  of the form hometown(JohnDoe)=y for  somec i ty  y does not necessari ly permit the defaul tassignment y=PaloAlto.
I t  might be the case thatthe fo l lowing information is ava i lab le :(x/EMPLOYER)(y/PERSON)(z/CITY)EMPLOYS(x,y)^ locat ion(x)=z ~ hometown(y)=z Ii .
e .
a person's hometown is the same as his or heremployer.
In th is  case the defaul t  assignmenty=PaloAlto can be made only i f  we fa i l - to  deduce theexistence of an employer x and c i ty  z such thatEMPLOYS(x,JohnDoe) A locat ion(x)=zIn general then, defaul t  assignments to var iablesare permitted only as a result of failure of someattempted eduction.
We can formulate a generalinference pattern for the default assignment ofvalues to variables:For a l l  x I .
.
.
.
.
x n in classes T 1 .
.
.
.
.
Tn respect ively,i f  we fa i l  to deduce (Ey/e)P(x I .
.
.
.
.
Xn,Y) then in-fer  the default  statementi Throughout th is  paper we shal l  use a typed logicalrepresentation language.
Types, e.g.
EMPLOYER,PERSON, CITY correspond to the usual categoriesof IS-A hierarchies.
A typed universal quant i f ie rl i ke  (x/EMPLOYER) is read " for  a l l  x which belongto the class EMPLOYER" or simply " for  a l l  employ-ers x".
A typed ex is tent ia l  quant i f ie r  l i ke(Ex/CITY) is read "there is a c i ty  x".
The nota-t ion derives from that used by Woods in his "FORfunction" \[Woods 1968\].P(x I .
.
.
.
.
Xn,<default value for  y>)or more succ inct ly ,(Xl/TI)-.-(Xn/T n)(EY/e)P(Xl .
.
.
.
.
Xn'Y) (DI)P(x I .
.
.
.
.
Xn,<default value for  y>)Here ~ is to be read " fa i l  to deduce", e and theT's are types, and P(x I .
.
.
.
.
Xn,Y) is any statementabout the var iables x I .
.
.
.
.
Xn,Y.
There are someserious d i f f i cu l t ies  associated with jus t  what ex-ac t ly  is meant by " ~"  but we shal l  defer theseissues for the moment and re ly  instead on thereader's in tu i t ion .
The defaul t  ru le for  hometowns can now be seen as an instance of the abovepattern:(x/PERSON) ~ (Ey/ClTY)hometown(x)=yhometown(x)=PaloAlto2.2 THE CLOSED WORLD ASSUMPTIONI t  seems not general ly recognized that thereasoning components of  many natural languageunderstanding systems have default  assumptionsbu i l t  into them.
The representation of  knowledgeupon which the reasoner computes does not exp l i c -i t l y  indicate certain defaul t  assumptions.
Rather,these defaults are real ized as part of the code ofthe reasoner, or,  as we shal l  say, fo l lowing\[Hayes 1977\], as part of the reasoner's processstructure.
The most common such defaul t  correspondsto what has elsewhere been referred to as theclosed world assumption \ [Re i ter  1978\].
In th issection we describe two commonly used closed worlddefaults .2.2.1 HierarchiesAs an i l lus t ra t ion  of the class of closedworld defau l ts ,  consider standard taxonomies(IS-A hierarchies)  as they are usual ly representedin the A .
I .
l i te ra ture ,  for example the fo l lowing:THINGANIMATE INANIMATEMAMMAL REPTILEDOG CATThis has, as i t s  f i r s t  order logica l  representation,the fo l lowing:211(x)DOG(x) ~ MAMMAL(x) l(x)CAT(x) ~ MAMMAL(x) I (2.1)(x)MAMMAL(x) ~ ANIMATE(x)etc.Now i f  Fido is known to be a dog we can concludethat Fido is animate in either of two essentiallyisomorphic ways:I. I f  the hierarchy is implemented as some sort ofnetwork, then we infer ANIMATE(fido) i f  the classANIMATE lies "above" DOG i.e.
there is some pointerchain leading from node DOG to node ANIMATE in thenetwork.2.
I f  the hierarchy is implemented as a set of f i r s torder formulae, then we conclude ANIMATE(fido) i fwe can forward chain (modus ponens) with DOG(fido)to derive ANIMATE(fido).
This forward chainingfrom DOG(fido) to ANIMATE(fido) corresponds exactlyto following pointers from node DOG to node ANIMATEin the network.Thus far, there is no essential difference be-tween a network representation of a hierarchy withits pointer-chasing interpreter and a f i r s t  orderrepresentation with its forward chaining theoremproving interpreter.
A fundamental distinctionarises with respect to negation.
As an example,consider how one deduces that Fido is not a repti le.A network interpreter will determine that the nodeREPTILE does not l ie "above" DOG and will therebyconclude that DOGs are not REPTILEs so that~REPTILE(fido) is deduced.
On the other hand, atheorem prover will try to prove ~REPTILE(fido).Given the above f i r s t  order representation, no suchproof exists.
The reason is clear - nothing inthe representation (2.1) states that the categoriesMAMMAL and REPTILE are disjoint.
For the theoremprover to deal with negative information, theknowledge base (2.1) must be augmented by thefollowing facts stating that the categories ofthe hierarchy are disjoint:(x)ANIMATE(x) ~ ~INANIMATE(x) l(x)MAMMAL(x) ~ IREPTILE(x) I (2.2)(x)DOG(x) ~ ~CAT(x)I t  is now clear that a f i r s t  order theorem provinginterpreter can establish ~REPTILE(fido) by a pureforward chaining proof procedure from DOG(fido)using (2.1) and (2.2).
However, unlike the ear l ierproof of ANIMATE(fido), this proof of~REPTILE(fido)is not isomorphic to that 9enerated by the networkinterpreter.
(Recall that the network interpreterdeduces ~REPTILE(fido) by fail ing to find a pointerchain linking DOG and REPTILE).
Moreover, whilethe network interpreter must contend only with arepresentation equivalent to that of (2.1), thetheorem prover must additionally ut i l ize the nega-tive information (2.2).
Somehow, then, the processstructure of the network interpreter implicitlyrepresents the negative knowledge (2.2), whilecomputing only on declarative knowledge quivalentto (2.1).We can best distinguish the two approaches byobserving that two different logics are involved.To see this, consider modifying the theorem proverso as to simulate the network process structure.Since the network interpreter tr ies, and fa i ls ,  toestablish a pointer chain from DOG to REPTILE usinga declarative knowledge base equivalent to (2.1),the theorem prover can likewise attempt to proveREPTILE(fido) using only (2.1).
As for the net-work interpreter, this attempt wil l  fa i l .
I f  wenow endow the theorem prover with the additionalinference rule:" I f  you fail  to deduce REPTILE(fido) then conclude~REPTILE(fido)"the deduction of ~REPTILE(fido) wi l l  be isomorphicto that of the network interpreter.
More generally,we require an inference schema, applicable to anyof the monadic predicates MAMMAL, DOG, CAT, etc.
ofthe hierarchy:" I f  x is an individual and P(x) cannot be deduced,then infer ~P(x)"or in the notation of the previous section(x) - ~  (D2)What we have argued then is that the processstructure of a network interpreter is formallyequivalent to that of a f i r s t  order theorem proveraugmented by the ab i l i ty  to use the inferenceschema (D2).
In a sense, a network interpreter isthe compiled form of such an augmented theoremprover.There are several points worth noting:I.
The schema (D2) is not a f i r s t  order rule ofinference since the operator ~ is not a f i r s torder notion.
( I t  is a meta notion.)
Thus a theorem212prover which evokes (D2) in order to establishnegative conclusions by fa i lure  is not performingf i r s t  order deductions.2.
The schema (D2) has a similar pattern to thedefault schema (DI).3.
In the presence of the default schema (D2),the negative knowledge (2.2), which would benecessary in the absence of (D2), is not required.As we shall see in the next section, this propertyis a general character ist ic of the closed worlddefault,  and leads to a s ign i f icant  reduction inthe complexity of both the representation andprocessing of knowledge.2.2.2 The Closed World DefaultThe schema (D2) is actually a special case ofthe following more general default schema:~P(x I .
.
.
.
.
x n)(X l /~l ) .
, .
(Xn/~ n) (D3)~P(x I .
.
.
.
.
x n)I f  (D3) is in force for al l  predicates P of somedomain, then reasoning is being done under theclosed world assumption \[Reiter 1978\].
In mostA.
l .
representation schemes, hierarchies aretreated as closed world domains.
The use of theclosed world assumption in A. l .
and in ordinaryhuman reasoning extends beyond such hierarchies,however.
As a simple example, consider an a i r l ineschedule for a direct Air Canada f l ight  fromVancouver to New York.
I f  none is found, oneassumes that no such f l ight  exists.
Formally, wecan view the schedule as a data base, and the queryas an attempt to establish DIRECTLY-CONNECTS(AC,Van,NY).
This fa i l s ,  whence one concludes~DIRECTLY-CONNECTS(AC,Van,NY) by an application ofschema (D3).
Such schedules are designed to beused under the closed world assumption.
They con-tain only positive information; negative inform-ation is inferred by default.
There is one verygood reason for making the closed world assumptionin this sett ing.
The number of negative factsvastly exceeds the number of posit ive ones.
Forexample, Air Canada does not d i rect ly  connectVancouver and Moscow, or Toronto and Bombay, orMoscow and Bombay, etc.
etc.
I t  is to ta l l y  un-feasible to exp l i c i t l y  represent al l  such negativeinformation in the data base, as would be requiredunder a f i r s t  order theorem prover, I t  isimportant to notice, however, that the closedworld assumption presumes perfect knowledge aboutthe domain being modeled.
I f  i t  were not known,for example, whether Air Canada d i rect ly  connectsVancouver and Chicago, we would no longer be just -i f ied  in making the closed world assumption withrespect to the f l ight  schedule.
For by the absenceof this fact from the data base, we would concludethat Air Canada does not d i rect ly  connectVancouver and Chicago, v io lat ing our assumed stateof ignorance about this fact.The f l ight  schedule i l lus t rates  a very commonuse of the closed world default rule for purelyextensional data bases.
In part icu lar ,  i t  i l l us -trates how this default factors out the need forany exp l i c i t  representation of negative facts.This result  holds for more general data bases.
Asan example, consider the ubiquitous blocks world,under the following decomposition hierarchy ofobjects in that world:OBJECTBLOCK TABLECUBE PYRAMIDLet SUPPORTS(x,y) denote "x d i rect ly  supports y"and FREE(x) denote "x is free" i .e .
objects may beplaced upon x.
Then the following general factshold:(x/OBJECT)(y/TABLE)~SUPPORTS(x,y) ( I )(x/OBJECT)~SUPPORTS(x,x) (2)(x/PYRAMID)(y/BLOCK)~SUPPORTS(x,y) (3)(x y/BLOCK)SUPPORTS(x,y)~SUPPORTS(y,x) (4)(x/PYRAMID)nFREE(x) (5)(x y/BLOCK)(z/TABLE)SUPPORTS(x,y)~SUPPORTS(z,y) (6)(x/CUBE)FREE(x)(y/BLOCK)~SUPPORTS(x,y) (7)(x/CUBE)(y/BLOCK)~SUPPORTS(x,y)FREE(x) (8)(x/TABLE)FREE(x) (9)Consider the following scene213This is representable bySUPPORTS(T, C1) SUPPORTS(T,C2) (10)SUPPORTS(CI,PI) SUPPORTS(C2,C3)SUPPORTS(T,P2)together with the following negative facts~SUPPORTS(CI,C2) ~SUPPORTS(C2,CI) /-SUPPORTS(C3,CI) ~SUPPORTS(CI,P2) (I I)~SUPPORTS(C3,PI) ~SUPPORTS(C3,P2)~SUPPORTS(CI,C3) ~SUPPORTS(C2,PI)Notice that virtually all of the knowledge about theblocks domain is negative, namely the negativespecific facts (11), together with the negativefacts(1)-(7) I.
This is not an accidental feature.Most of what we know about any world is negative.Now a f i rst  order theorem prover must haveaccess to all of the facts (1)-( l l) .
For example,in proving~SUPPORTS(C3,C2) i t  must use (4).
Con-sider instead such a theorem prover endowed withthe additional ability to interpret the closedworld default schema (D3).
Then, in attempting aproof of ~SUPPORTS(C3,C2) i t  tries to show thatSUPPORTS(C3,C2) is not provable.
SinceSUPPORTS(C3,C2) cannot be proved, i t  concludes~SUPPORTS(C3,C2), as required.It  should be clear intuitively that in thepresence of the closed world default schema (D3),none of the negative facts (I)-(7), (11) need berepresented explicitly nor used in reasoning.
Thiscan be proved, under fairly general condition~\[Reiter 1978\].
One function, then, of the closedworld default is to "factor out" of the represen-tation all negative knowledge about the domain.
Itis of some interest to compare the blocks worldrepresentation (1)-(l l) with those commonly used inblocks world problem-solvers (e.g.\[Winograd 1972,Warren 1974\]).
These systems do not represent explic-i t ly  the negative knowledge (I)-(7), ( l l )  but in-stead usethe closed world default for reasoningabout negation.
(See Section 3 below for a dis-cussion of negation in A.I.
programming languages.
)Although the closed world default factors outnegative knowledge for answering questions about adomain, this knowledge must nevertheless be avail-i The nOtion of a negative fact has a precise defin-ition.
A fact is negative i f f  all of the literalsin its clausal form are negative.able.
To see why, consider an attempted update ofthe example blocks world scene with the new "fact"SUPPORTS(C3,C2).
To detect the resulting inconsis-tency requires the negative fact (4).
In generalthen, negative knowledge is necessary for maintain-ing the integrity of a data base.
A consequence ofthe closed world assumption is a decomposition ofknowledge into positive and negative facts.
Onlypositive knowledge is required for querying thedata base.
Both positive and negative knowledgeare required for maintaining the integrity of thedata base.2.3 DEFAULTS AND THE FRAME PROBLEMThe frame problem \[Raphael 1971\] arises in therepresentation of dynamic worlds.
Roughly speaking,the problem stems from the need to represent those"aspects of the world which remain invariant undercertain state changes.
For example, moving a par-ticular object or switching on a light will notchange the colours of any objects in the world.Painting an object will not affect the locations ofthe objects.
In a f i rst  order representation ofsuch worlds, i t  is necessary to represent explici~yall of the invariants under all state changes.These are referred to as the frame axioms for theworld being modeled.
For example, to represent thefact that painting an object does not alter thelocations of objects would require, in the situa-tional calculus of \[McCarthy and Hayes 1969\] aframe axiom something like(x z/OBJECT)(y/POSITION)(s/STATE)(C/COLOUR)LOCATION(x,y,s) m LOCATION(x,y,paint(z,C,s))The problem is that in general we will require avast number of such axioms e.g.
object locationsalso remain invariant when lights are switched on,when i t  thunders, when someone speaks etc.
so thereis a major difficulty in even articulating a de-ductively adequate set of frame axioms for a givenworld.A solution to the frame problem is a represen-tation of the world coupled with appropriate rulesof inference such that the frame axioms are neitherrepresented explicitly nor used explicitly inreasoning about the world.
We will focus on a214proposed solution by \[Sandewall 1972\] 1 .
A relatedapproach is described in \[Hayes 1973\].
Sandewallproposes a new operator, UNLESS, which takes form-ula W as argument.
The intended interpretat ion ofUNLESS(W) is "W can not be proved" i .e .
i t  isidentical to the operator F/ of this paper.Sandewall proposes a single "frame inference rule"which, in the notation of this paper, can be para-phrased as follows:For al l  predicates P which take a state variableas an argument(Xl/TI)...(Xn/Tn)(S/STATE)(f/ACTION-FUNCTION)~P(X l  .
.
.
.
.
Xn'f(xl  .
.
.
.
.
Xn'S)) (D4)P(x I .
.
.
.
.
Xn,f(x I .
.
.
.
.
Xn,S))In tu i t i ve ly ,  (D4) formalizes the so-called "STRIPSassumption" \[Waldinger 1975\]: Every action (statechange) is assumed to leave every relat ion un-affected unless i t  is possible to deduce otherwise.This schema can be used in the following way, sayin order to establish that cube33 is at locationafter  box7 has been painted blue:To establish LOCATlON(cube33,~,paint(box7,blue,s))fa i l  to prove~LOCATlON(cube33,~,paint(box7,blue,s))There are several observations that can bemade:I.
The frame inference schema (D4) has a patternsimilar to the default schemata (D2) and (D3) ofear l ie r  sections of this paper.
I t  too is adefault schema.2.
The frame schema (D4) is in some sense a dualof the closed world schema (D3).
The former per-mits the deduction of a posit ive fact from fa i lureto establish i ts  negation.
The la t te r  providesfor the deduction of a negative fact from fa i lureto derive i ts  posit ive counterpart.
This dual i tyis preserved with respect to the knowledge"factored out" of the representation.
Whereas theframe default eliminates the need for certain kindsof posit ive knowledge (the frame axioms), theclosed world default factors out the exp l i c i t  rep-resentation of negative knowledge.2.4 DEFAULTS AND EXCEPTIONSA good deal of what we know about the world is1 \[Kramosil 1975\] claims to have proved thatSandewa11's approach is e i ther meaningless orequivalent to a f i r s t  order approach.
See Section4 for a discussion of this issue.
"almost always" true, with a few exceptions.
Forexample, al l  birds f ly  except for penguins,ostriches, f ledgl ings,  etc.
Given a part icularbird, we wi l l  conclude that i t  f l i es  unless wehappen to know that is sat is f ies  one of these excep-tions.
Nevertheless, we want i t  true of birds "ingeneral" that they f ly .
How can we reconci letheseapparently conf l ic t ing points of view?
The naturalf i r s t  order representation is inconsistent:(x/BIRD)FLY(x) "In general, birds f l y "(x)PENGUIN(x) ~ BIRD(x)"Penguins are birds(x/PENGUIN)~FLY(x) which don't f l y .
"An alternat ive f i r s t  order representation expl ic-i t l y  l i s t s  the exceptions to f ly ing(x/BIRD)~PENGUIN(x) ^ ~OSTRICN(x) ^  .
.
.FLY(x)But with this representation, we cannot conclude ofa "general" bird, that i t  can f ly .
To see why,consider an attempt to prove FLY(tweety) where al lwe know of tweety is that she is a bird.
Then wemust establish the subgoal-PENGUIN(tweety) ^ ~OSTRICH(tweety) ^ .
.
.which is impossible given that we have no furtherinformation about tweety.
We are blocked from con-cluding that tweety can f l y  even though, in tu i -t ive ly  we want to deduce just  that.
In e f fect ,  weneed a default rule of the form(x/BIRD) # (PENGUIN(x) V OSTRICH(x) V .
.
.
)FLY(x)With this rule of inference we can deduceFLY(tweety), as required.
Notice, however, thatwhenever there.are exceptions to a "general" factin some domain of knowledge we are no longer freeto a rb i t ra r i l y  structure that knowledge.
For ex-ample, the following hierarchy would be unaccept-able, where the dotted l ink indicates the existenceof an exceptionANIMALFLY CRAWLBAT BIRDPENGUIN ROBINClearly there is no way in this hierarchy of estab-l ishing that penguins are animals.
For h4erarchiesthe constraint imposed by exceptions is easi ly215articulated: I f  P and Q are nodes with P below Q,and i f  (x)P(x) p Q(x) is true without exception,then there must be a sequence of solid links con-necting P and Q.
For more general kinds of know-ledge the situation is more problematic.
One mustbe careful to ensure that chains of implications donot unwittingly inherit unintended exceptions.3.
DEFAULTS AND "NEGATION" IN A.I.PROGRAMMING LANGUAGESIt has been observed by several authors \[Hayes1973, Sandewall 1972, Reiter 1978\] that the basicde-fault operator ~ has,as its"procedural equivalent"the negation operator in a number of A.I.
programminglanguages e.g.
THNOT in MICROPLANNER \[Hewitt 1972,Sussman et al1970\],.NOT in PROLOG \[Roussel 1975\].For example, in MICROPLANNER, the command(THGOAL <pattern>) can be viewed as an attempt toprove <pattern> given a data base of facts andtheorems.
(THNOT(THGOAL <pattern>)) then succeedsi f f  (THGOAL <pattern>) fails i.e.
i f f  <pattern> isnot provable, and this of course is precisely theinterpretation of the default operator ~ .Given that "negation" in A.I.
procedurallanguages corresponds to the default operator andnot to logical negation, i t  would seem that some ofthe criticism often directed at theorem provingfrom within the A.I.
community is misdirected.
Forthe so-called procedural approach, often proposedas an alternative to theorem proving as a represen-tation and reasoning component in A.I.
systems, isa realization of a default logic, whereas theoremprovers are usually realizations of a f i r s t  orderlogic, and as we have seen, these are differentlogics.In a sense, the so-called procedural vs.declarative issue in A.I, might better be phrasedas the default vs. f i r s t  order logic issue.
Manyof the advantages of the procedural approach canbe interpreted as representational and computa-tional advantages of the default operator.
Thereis a fair  amount of empirical evidence in supportof this point of view, primarily based upon thesuccessful use of PROLOG \[Roussel 1975\] - a puretheorem prover augmented with a "THNOT" operator -for such diverse A.I.
tasks as problem solving\[Warren 1974\], symbolic mathematics \[Kanoui 1976\],and natural language question-answering \[Colmeraurer1973\].On the theoretical level, we are just begin-ning to understand the advantages of a f i r s t  orderlogic augmented with the default operator:i .
Default logic provides a representation languagewhich more faithful ly reflects a good deal ofcommon sense knowledge than do traditional logics.Similarly, for many situations, default reasoningcorresponds to what is usually viewed as commonsense reasoning.2.
For many settings, the appropriate defaulttheories lead to a significant reduction in bothrepresentational and computational complexity withrespect to the corresponding f i r s t  order theory.Thus, under the closed world default, negativeknowledge about a domain need not expl ic i t ly berepresented nor reasoned with in querying a database.
Similarly under the frame default, the usualframe axioms are not required.There are, of course, other advantages of theprocedural approach - specifically, expl ic it  con-trol over reasoning - which are not accounted forby the above logical analysis.
We have distin-guished the purely logical structure of such rep-resentational languages from their process structure,and have argued that at least some of their successderives from the nature of the logic which theyrealize.4.
SOME PROBLEMS WITH DEFAULT THEORIESGiven that default reasoning has such wide-spread applications in A.I.
i t  is natural to definea default theory as a f i r s t  order theory augmentedby one or more inference schemata like (Dl), (D2)etc.
and to investigate the properties of suchtheories.
Unfortunately, some such theories displaypeculiar and intuit ively unacceptable behaviours.One di f f icul ty is the ease with which incon-~A sistent theories can be defined, for example Bcoupled with a knowledge base with thesingle fact IB.
Another, pointed out by \[Sandewall1972\] is that the theorems of certain defaulttheories will depend upon the order in which theyare derived.
As an example, consider the theory~A ~BB ASince A is not provable, we can infer B.
Since B216is now proved, we cannot infer A, so this theoryhas the single theorem B. I f  instead, we hadstarted by observing that B is not provable, thenthe theory would have the single theorem A. De-fault theories exhibiting such behaviour are clearlyunacceptable.
At the very least, we must demand ofa default theory that i t  satisfy a kind ofChurch-Rosser property: No matter what the orderin which the theorems of the theory are derived,the resulting set of theorems wi l l  be unique.Another d i f f i cu l ty  arises in modeling dynam-ical ly changing worlds e.g.
in causal worlds or intext understanding where the model of the textbeing bui lt  up changes as more of the text is assim-ilated.
Under these circumstances, inferenceswhich have been made as a result of a defaultassumption may subsequently be fals i f ied by new in-formation which now violates that default assump-tion.
As a simple example, consider a travel con-sultant which has made the default assumption thatthe traveller's starting point is Palo Alto and has,on the basis of this, planned all  of the details ofa tr ip.
I f  the consultant subsequently learns thatthe starting point is Los Angeles, i t  must undo atleast part of the planned tr ip ,  specifically thef i r s t  (and possibly last) leg of the plan.
But howis the consultant to know to focus just on thesechanges?
Somehow, whenever a new fact is deducedand stored in the data base, all of the facts whichrely upon a default assumption and which supportedthis deduction must be associated with this newfact.
These supporting facts must themselves havetheir default supports associated with them, andso on.
Now, should the data base be updated withnew information which renders an instance of somedefault rule inapplicable, delete all  facts whichhad been previously deduced whose.support setsrelied upon this instance of the default rule.There are obviously some technical and implementa-tion details that require articulation, but thebasic idea should be clear.
A related proposal fordealing with beliefs and real world observations isdescribed in \[Hayes 1973\].One way of viewing the role of a default theo~is as a way of impl ic i t ly further completing anunderlying incomplete f i r s t  order theory.
Recallthat a f i r s t  order theory is said to be completei f f  for al l  closed formulae W, wither W or ~W isprovable.
Most interesting mathematical theoriesturn out to be incomplete - a celebrated resultdue to Godel.
Most of what we know about the world,when formalized, wi l l  yield an incomplete theoryprecisely because we cannot know everything - thereare gaps in our knowledge.
The effect of a defaultrule is to impl ic i t ly f i l l  in some of those gaps bya form of plausible reasoning.
In particular, theeffect of the closed world default is to fu l ly  com-plete an underlying incomplete f i r s t  order theory.However, i t  is well known that there are insurmount-able problems associated with completing an incom-plete theory l ike arithmetic.
Although i t  is at r iv ia l  matter conceptually to augment he axiomsof arithmetic with a default rule --~ where W isany closed formula, we wil l  be no further aheadbecause the non theorems of arithmetic are not re-cursively enumerable.
What this means is thatthere is no way in general that, given a W, wecan establish that W is not a theorem even i f  Whappens not to be a theorem.
This in turn meansthat we are not even guaranteed that an arbitrarydefault rule of inference is effective i.e.
theremay be no algorithm which wi l l  inform us whether ornot a given default rule of inference is applica~e~From this we can conclude that the theories of adefault theory may not be recursively enumerable.This situation is in marked contrast to what norm-al ly passes for a logic where, at the very least,the rules of inference must be effective and thetheorems recursively enumerable.Finally, i t  is not hard to see that defaulttheories fa i l  to satisfy the extension property\[Hayes 1973\] which all "respectable" logics do sat-isfy.
(A logical calculus has the extension prop-erty i f f  whenever a formula is provable from a setP of premises, i t  is also provable from any set P'such that P ~ P'.
)\[Kramosil 1975\] attempts to establish somegeneral results on default theories.
Kramosil"proves" that for any such theory, the defaultrules are irrelevant in the sense that either thetheory wi l l  be meaningless or the theorems of thetheory wil l  be precisely the same as those obtain-able by ignoring the default rules of inference.Kramosil's result, i f  correct, would invalidate the2i7main point of this paper, namely that default theor-ies play a prominent role in reasoning about theworld.
Fortunately, his "proof" relies on an incor-rect def init ion of theoremhood so that the problemof characterizing the theorems of a default theoryremain open.5.
CONCLUSIONSDefault reasoning may well be the rule, ratherthan the exception, in reasoning about the worldsince normally we must act in the presence of incom-plete knowledge.
Moreover, aside from mathematicsand the physical sciences, most of what we knowabout the world has associated exceptions andcaveats.
Conventional logics, such as f i r s t  orderlogic, lack the expressive power to adequately rep-resent the knowledge required for reasoning by de-fault .
We gain this expressive power by introducingthe default operator.In order to provide an adequate formal (asopposed to heurist ic) foundation for default reason-ing we need a well articulated theory of defaultlogic.
This requires, in part, a theory of thesemantics of default logic, a suitable notion oftheoremhood and deduction, and conditions under whichthe default inference rules are effective and theset of theorems unique.
Since in any rea l i s t i c  do-main, al l  of the default schemata of Section 2 wi l lbe in force (together, no doubt, with others we havenot considered) we require a deeper understanding ofhow these di f ferent schemata interact.
Final ly,there is an intr iguing relationship between certaindefaults and the complexity of the underlying repre-sentation.
Both the closed world and frame defaultsimpl ic i t ly  represent whole classes of f i r s t  orderaxioms.
Is this an accidental phenomemon or is somegeneral principal involved?ACKNOWLEDGEMENTSThis paper was written with the financial sup-port of NRC grant A 7642.
I am indebted to BrianFunt, Randy Goebel and Richard Rosenberg for theircrit icisms of an ear l ier  draft of this paper.REFERENCESBobrow, D.G.
and Winograd, T., (1977).
"An Overviewof KRL-O, a Knowledge Representation Language,"Cognitive Science, Vol .
l ,  No.l, Jan. 1977.Colmeraurer, A., (1973).
Un System de CommunicationHome-Machine en Fran~ais, Rapport interne, UER deLuminy, Universit~d'Aix-Marsei l le,  1973.Hayes, P.J., (1973).
"The Frame Problem and RelatedProblems in Ar t i f i c ia l  Intel l igence," in Ar t i f i c ia land Human Thinking, A. Elithorn and D. Jones (Eds.
),Jossey-Bass Inc., San Francisco, 1973, pp.45-49.Hayes, P .
j .
,  (1977).
"In Defence of Logic," Proc.IJCAI-5, M.I.T.,  Cambridge, Mass., August 22~~7,  pp.
559-565.Hewitt, C., (1972).
Description and TheoreticalAnalysis (Using Schemata) of PLANNER: A Language forProving Theorems and Manipulating Models in a Robot,A.l.Memo No.
251, M.I.T.
Project MAC, Cambridge,Mass., April 1972.Kanoui, H., (1976).
"Some Aspects of SymbolicIntegration via Predicate Logic Programming," SIGSAMBul let in,  I0, Nov. 1976, pp.
29-42.Kramosil, I .
,  (1975).
"A Note on Deduction Ruleswith Negative Premises," Proc.
IJCAI-4, Tb i l i s i ,USSR, Sept. 3-8, 1975, pp.
53-56.McCarthy J. and Hayes, P.J., (1969).
"SomePhilosophic Problems from the Standpoint ofAr t i f i c ia l  Intel l igence," in Machine Intell igence 4,B.
Meltzer and D. Michie (Eds.
), EdinburghUniversity Press, Edinburgh, 1969, pp.
463-502.Raphael, B., (1971).
"The Frame Problem in Problem-Solving Systems," in Ar t i f i c ia l  Intell igence andHeuristic Programming, N.V. Findler and B.
Meltzer(Eds.
), Edinburgh University Press, Edinburgh.Reiter, R., (1978).
"On Closed World Data Bases,"in Logic and Data Bases, H. Gallaire and J.
Minker(Eds.
), Plenum Press, New York, to appear.Roberts, R.B.
and Goldstein, I .
,  (1977).
The FRLManual, A.I .
Memo No.
409, M.I.T.,  Sept. 1977.Roussel, P., (1975).
PROLOG, Manuel de Reference etd 'Ut i l i sat ion ,  Group d' Intel l igence Ar t i f i c ie l le ,U.E.R.
de Marseille, France, 1975.Sandewall, E., (1972).
"An Approach to the FrameProblem, and i ts  Implementation," in MachineIntel l igence 7, B. Meltzer and D. Michie E~s . )
,Edinburgh University Press, Edinburgh, pp.
195-204.Sussman, G., Winograd, T., and Charniak,E., (1970).MICRO-PLANNER Reference Manual, A.I .
MEMO No.
203,M.I.T., Cambridge, Mass., 1970.Waldinger, R., (1975).
Achieving Several GoalsSimultaneously, Ar t i f i c ia l  Intell igence CenterTechnical Note 107, Stanford Research Inst i tute,Menlo Park, Ca l i f .
,  July 1975.Warren, D., (1974).
WARPLAN: A System for GeneratingPlans, Memo No.
76, Dept.
of Computational Logic,University of Edinburgh, June 1974.Winograd, T., (1972).
Understanding NaturalLanguage, Academic Press, New York, 1972.Woods, W.A., (1968).
"Procedural Semantics for aQuestion-Answering Machine," AFIPS ConferenceProceedings, Vol.
3, Part I ,  1968, pp.
457-471.218
