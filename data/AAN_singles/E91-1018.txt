Analysis of Unknown WordsthroughMorphological DecompositionAlan W BlackDept of Artificial Intelligence,University of Edinburgh80 South Bridge,Edinburgh EH1 IHNScotland, UK.awbeed, ac .
ukJoke van de PlasscheNICI,University of Nijmegen,\]Viontessorilaan 3,6525 HR NijmegenThe NetherlandsPLASSCHF~kunpvI.
psych, kun.
nlBriony WilliamsCentre for Speech TechnologyUniversity of Edinburgh80 South Bridge,Edinburgh EH1 1HNScotland, UK.briony@cs tr.
ed.
ac.
ukAbstractThis paper describes a method of analysingwords through morphological decompositionwhen the lexicon is incomplete.
The method isused within a text-to-speech system to help gen-erate pronunciations of unknown words.
Themethod is achieved within a general morpho-logical analyser system using Koskenniemi two-level rules.Keywords:  Morphology, incomplete lexicon,text-to-speech systemsBackgroundWhen a text-to-speech synthesis system is used,it is likely that the text being processed willcontain a few words which do not appear inthe lexicon as entries in their own right.
Ifthe lexicon consists only of whole-word entries,then the method for producing a pronunciationfor such "unknown ~ words is simply: to passthem through a set of letter-to-sound rules fol-lowed by word stress assignment rules and vowelreduction rules.
The resulting pronunciationmay well be inaccurate, particularly in English(which often shows a poor relationship betweenspelling and pronunciation).
In addition, thedefault set of word classes assigned to the word(noun, verb, adjective) will be too general tobe of much help to the syntactic parsing mod-ule.
However, if the lexicon contains individualmorphemes (both ~bound = and ~free'), an un-known word can be analysed into its constituentmorphemes.
Stress assignment rules will thenbe more likely to yield the correct pronuncia-tion, and any characteristic suffix that may bepresent will allow for the assignment of a moreaccurate word class or classes (eg.
+ness de-notes a noun, +ly an adverb).
Morphologicalanalysis of words will therefore allow a signifi-cantly larger number of "unknown ~ words to behandled.
Novel forms such as hamperance, andthatcher isat?on would probably not exist in awhole-word ictionary, but could be handled bymorphological nalysis using existing morpho-logical entries.
Also, the ability to deal withcompound words would allow for significantlyhigher accuracy in pronunciation assignment.A problem arises, however, if one or moreof the word's constituent morphemes are notpresent in the morphological dictionary.
In thiscase, the morphological nalysis will fail, andthe entire word will be passed to the letter-to-sound rules, with concomitant probable loss ofaccuracy in pronunciation assignment and wordclass assignment.
It is far more likely that themissing morpheme will be a root morphemerather than an affix, since the latter morphemesform a closed class which may be exhaustivelylisted, whereas the former form an open classwhich may be added to as the language volves(eg.
ninj a, Chunnel, kluge, yomp).
Therefore,it would be preferable if any closed-class mor-phemes in a (putatively) polymorphemic un-101 -known word could be recognised and separatedfrom the remaining material, which would thenbe assumed to be a new root morpheme.
Letter-to-sound rules would then be applied to this pu-tative new root morpheme (the pronunciation ofthe known material would be derived from thelexicon).The advantages of this method are that thepronunciation and word stress assignment aremore likely to be accurate, and also that, ifthere is a suitable suIKx, the correct word classmay be assigned (eg.
in yomping, from yomp(unknown root) and +ing (known verb or nounsuffix), which will be characterised as a verbor noun).
Thus, in the case of preamble, thestripping of the prefix pre- will allow for thecorrect pronunciation/p r i i a  m b @ 1/: ifthe entire word had been passed to the letter-to-sound rules, the incorrect pronunciation /p ri?
m b @ 1/would have resulted.
In additionto affixes, known root morphemes could also bestripped to leave the remaining unknown mate-rial.
For example, without morphological nal-ysis, penthouse may be wrongly pronounced as/p e n th au s/ ,  with a voiceless dental frica-tive.It is known that letter-to-sound rules aremore accurate if they are not allowed to applyacross morpheme boundaries (see \[1, Ch.
6\]),and this method takes advantage of that fact.Thus greater accuracy is obtained, for polymor-phemic unknown words, if known morphs canbe stripped before the application of letter-to-sound rules.
It is this task that the work de-scribed below attempts to carry out.The Alvey Natural Language Tools Mor-phological System (\[5\],\[6\]), already provides acomprehensive morphological nalyser system.This system allows morphological nalysis ofwords into morphemes based on user-definedrules.
The basic system does not offer analysisof words containing unknown morphemes, nordoes it provide a rank ordering of the outputanalyses.
Both these latter features have beenadded in the work described below.The system consists of a two tier process:first a morphological nalysis, based on Kosken-niemi's two-level morphology (\[3\]); secondly thestatement of morphosyntactic constraints (notavailable in Koskenniemi's system) based on aGPSG-like feature grammar.The morphographemic rules are specified asa set of high level rules (rather than directlyas finite state transducers) which describe therelationship between a surface tape (the word)and a lexical tape (the normallsed lexical form).These rules specify contexts for pairs of lexicaland surface characters.
For example a rule+:e  <==>{ < s :s  h:h > s :s  x:x z:z y : i  }- - -  S :aspecifies that a surface character e must matchwith a lexical character + when preceded by oneof sh, s, x, z or the pair y:i (as in skies tosky+s), and succeeded by s. The "---~ denoteswhere the rule pair fits into the context.
For ex-ample the above rule would admit the followingmatchlexicaltape: b o x + ssurface tape: b o x e sThe exact syntax and interpretation is morefully described in \[5, Sect.
3\] and \[6, Ch.
2\].In addition to segmentation each lexical en-try is associated with a syntactic ategory (rep-resented as a feature structure}.
Grammar rulescan be written to specify which conjunctions ofmorphemes are valid.
Thus valid analyses re-quire a valid segmentation a d a valid morpho-syntax.
In the larger descriptions developedin the system a "categorial grammar"-like ap-proach has been used in the specification of af-fixes.
An affix itself will specify what categoryit can attach ("apply") to and what its resultingcategory will be.In the work described here, the basic mor-phology system has been modified to analysewords containing morphemes that are not in thelexicon.
The analysis method offers segmenta-tion and morphological nalysis (based on theword grammar),' which results in a list of pos-sible analyses.
An ordering on these possibleanalyses has been defined, giving a most likelyanalysis, for which the spelling of the unknownmorpheme can then be reconstructed using thesystem's original morphographemic rules.
Fi-nally, the pronunciation of the unknown mor-pheme can be assigned, using letter-to-soundrules encoded as two-level rules.Analysis MethodThe method used to analyse words containingunknown substrings proceeds as follows.
First,four new morphemes are added to the lexicon,one for each major morphologically productive- 1 (12-category (noun, verb, adjective and adverb).Each has a citation form of **.
The intentionis that the unknown part of a word will matchthese entries.
Thus we get two-level segmenta-tion as followslexicaltape: * 0 0 0 * + i n g + ssurface tape: 0 p a r O O i n g 0 sThe special character 0 represents the null sym-bol (i.e.
the surface form would be par ings  -without the nulls).
This matching is achievedby adding two two-level morphological rules.The first rule allows any character in the sur-face alphabet o match null on the lexical tape,but only in the context where the lexical nullsare flanked by lexicai asterisks matching withsurface nulls.The second rule deals with constraining the?
:0 pairs themselves.
It deals with two spe-cific points.
First, it ensures that there is onlyone occurrence of ** in an analysis (i.e only oneunknown section).
Second, it constrains theunknown section.
This is done in two ways.Rather than simply allowing the unknown partto be any arbitrary collection of letters, it is re-stricted to ensure that if it starts with any of {hj 1 m n q r v x y z}, then it is also followedby a vowel.
This (rightly) excludes the possibil-ity of an unknown section starting with an un-pronounceable consonant cluster e.g.
computercould not be analysed as co-  input +er).
Sec-ond, it ensures that the unknown section is atleast two characters long and contains a vowel.This excludes the analysis of resting as re-st +ing.These restrictions on the unknown sectionare weak and more comprehensive r strictionswould help.
They are attempts at characteris-ing English morphemes in terms of the minimalEnglish syllable.
A more complex characteriza-tion, defining valid consonant clusters, vowels,etc.
would be possible in this formalism, andthe phonotactic onstraints of English syllablesare well known.
However, the resulting ruleswould be clumsy and slow, and it was felt that,at this stage, any small gain in accuracy wouldbe offset by a speed penalty.The rules make  use of sets of characters.Anything is a set consisting of all surface char-acters, BCDFGKPSTW and HJLMNqRVXYZ are setsconsisting of those letters, V is the set of vowelsand C the consonants.
The character $ is usedto mark word boundaries.O:Anything <ffi>{ *:0 < *:0 (O:Anything) l+ > }{ *:0 < (O:Anything) l+ *:0 > }* :0  <">{ 0:$ < 0:$ (=:=)1+ > ) - - -{ < { O:BCDFCKPSTW O:VO: Anything >< O:HJLMNQRVXYZ O:V > }or  { < O:O (O :V) l+  >< 0:V (0:C)1+ > } - - -{ < (=:=)1+ 0:$ > 0 :$ )The above rules are somewhat clumsily formu-lated.
This is partly due to the particular imple-mentation used, which allows only one rule foreach surface:lexical pair I and partly due to thecomplexity of the phenomena being described.Word GrammarUsing the above two rules and adding the fournew lexical entries to a larger description, it isnow possible to segment words with one un-known substring.
Because the system encodesconstraints for affixes via feature specifications,only morphosyntactically valid analyses will bepermitte d. That  is, although ** is ambiguousin its category, if it is followed by +ed only theanalysis involving the verb will succeed.
For ex-ample, although the segmentation process couldsegment b ipeds  --* ** +ed +s the word gram-mar section would exclude this analysis, sincethe +s suffix only follows uninflected verbs ornouns .However, there are a number of possible mis-takes that can occur.
When an unknown sec-tion exists it may spuriously contain other mor-phemes, leading to an incorrect analysis.
ForexampleCO'IotLY -> CO-  **readab le  -> re -  **  +ab lecar toons  -> car  ** +s (compound noun)In actual fact, when words are analysed by thistechnique a large number of analyses is usuallyfound.
The reasons for the large number areas follows.
Firstly, the assumed size of the un-known part can vary for the same word, as inthe following:tRitchie (\[4\]) shows that this is not a restriction onthe formal power of the rules.l ( )3 -ent i t led  -> **ent i t led  -> ** +edent i t led  -> en-  ** +edent i t led  -> en-  **Secondly, because ** is four ways ambiguous,there can be multiple analyses for the same sur-face form.
For example, a word ending in scould be either a plural noun or a third personsingular verb.These points can multiply together and of-ten produce a large number of possible analyses.Out  of the test set of 200 words, based on a lex-icon consisting of around 3500 morphemes (in-cluding the ** entries), the average number ofanalyses found was 9, with a max imum numberof 71 (for funct iona l ) .Choos ing  an  Ana lys i sIn order to use these results in a text-to-speechsystem, it is necessary to choose one possibleanalysis, since a TTS system is deterministic.To do this, the analyses are rank ordered.
Anumber of factors are exploited in the rank or-dering:- length of unknown root- structural ordering rules (\[1, Ch.
3\])- frequency of affixEach of these factors will be described in turn.When analysing a word containing an unknownpart, the best results are usually obtained by us-ing the analysis with the shortest unknown part(see \[1, Oh.
6 D. Thus the analysis of walkerswould be ordered as follows (most likely first):** +er  +s  > **  +s > **This heuristk will occasionally fail, as in beerswhere the shortest unknown analysis is ** +er+s.
But the correct result will be obtained inmost cases.The second ordering constraint is based onthe ordering rules used in \[1\].
Some words canbe segmented in many different ways (this istrue even if all parts are known).
For examplescarcity -> scar cityscarc i ty -> scarce +ityscarc i ty  -> scar  c i te  +yA simple rule notation has been defined for as-signing order to analyses in terms of their mor-phological parse tree.
These rules can be sum-marised asprefixing > suffixing >inflection > compoundingThe third method used for ordering is affix fre-quency.
The frequencies are based on suffix-as-tag (word class) frequencies in the LOB corpusof written English, given in \[2\].
Thus the suffix+er forming a noun from a verb (as in walker)was marked in the lexicon as being more likelythan the adjectival comparative +er.These constraints are applied simultane-ously.
Each rule has an appropriate weight-ing, such that the length of the unknown partis a more significant factor than morphologicalstructure, which in: turn is more significant hanaffix frequency.Resu l tsThe method was subjected to a test procedure.The test used a basic lexicon of around 3500morphemes, of which around 150 were affixes.From a randomly selected AI magazine arti-cle, the first 200 words were used which couldnot be analysed by the basic morphological sys-tem (i.e.
without the unknown root section).When these 200 words were analysed using themethod described in the previous sections, 133words (67~) were analysed correctly, 48 words(24~) were wrong due to segmentation error,and 19 (9~) were wrong due to word class er-ror.
An analysis was deemed to be correct whenthe most preferred analysis had both the correctmorphological structure and the correct wordclass.Segmentation errors were due mainly to spu-rious words in sub-parts of unknown sections,e.g.
i l l us t ra te  ~ i l l  ** ate.
Such errorswill increase as the lexicon grows.
To preventthis type of error,: it may be necessary to placerestrictions on compounding, such that thosewords which can form part  of compounds shouldbe marked as such (though this is a major re-search problem in itself).
Word class errorsoccurred where the correct segmentation wasfound but an incorrect morphological structurewas assigned.The definition of error used here may beover-restrictive, as it may still be the case thaterroneous segmentation and structure errorsstill provide analyses with the correct pronun-ciation.
But at this t ime the remainder of thetext-to-speech system is not advanced enoughfor this to be adequately tested.104 -.Generating the Spelling ofUnknown MorphemesA method has been described for handling aword which cannot be analysed by the con-ventional morphological nalysis process.
Thismethod may generate a number of analyses, soan ordering of the results is defined.
However,in a text-to-speech system (or even an interac-tive spelling corrector), it may be desirable toadd the unknown root to a user lexicon for fu-ture reference.
In such a case, it will be nec-essary to reconstruct the underlying spelling ofthe unknown morpheme.This can be done in a very similar I way tothat in which the system normally generatessurface forms from hxical forms.
The problemis the following: given a surface form and a setof spelling rules (not including the two specialrules described above), define the set of possi-ble lexical forms which can match to the surfaceform.
This, of course, would over-generate lex-ical forms, but if the permitted lexical form isfurther constrained so as to match the one givenfrom the analysis containing the ** a more sat-isfactory result will be obtained.For example, the surface form remonedwould be analysed as ~e-**+ed.
A matching iscarried out character by character between thelexical and surface forms, checking each matchwith respect o the spelling rules (and hypothe-sizing nulls where appropriate).
On encounter-ing the ** section of the lexical form, the pro-cess attempts to match all possible lexical char-acters with the surface form..
This is of coursestill constrained by the spelling rules, so only afew characters will match.
What is significantis that the minor orthographic changes that thespelling rules describe will be respected.
Thusin this case the ** matches mone (rather thansimply mon without an e), as the spelling rulesrequire there to be an ?
inserted before the +edin this case.Similarly, given the surface string mogged,analysed as **+ed, the root form mog is gener-ated.
However, the alternative forms mogg andmogge are also generated.
This is not incorrect,as in similar cases uch analyses are correct (eg.egged and s i lhouet ted  respectively).
As yet,the method has no means of selecting betweenthese possibilities.After the generation of possible ortho-graphic forms, the letter-to-sound rules are ap-plied.
As regards the format of these rules, whatis required is something very similar to Kosken-niemi two-level rules, relating graphemes tophonemes in particular contexts.
A small set ofgrapheme to phoneme rules was written usingthis notation.
However, there were problems inwriting these rules, as the fuller set of rules fromwhich they were taken used the concept of ruleordering, while the Koskenniemi rule interpre-tation interprets all rules in parallel.
The re-sult was that the rewritten rules were more dif-ficult both to read and to write.
Although it ispossible (and even desirable) to use finite statetransducers in the run-time system, the currentKoskenniemi format may not be the best formatfor letter-to-sound rules.
Some other notationwhich could compile to the same form wouldmake it easier to extend the ruleset.ProblemsThe technique described above largely dependson the existence of an appropriate l xicon andmorphological nalyser.
The starting-point wasa fairly large lexicon (over 3000 morphemes)and an analyser description, and the expecta-tion was that only minor additions would beneeded to the system.
However, it seems thatsignificantly better esults will require more sig-nificant changes.Firstly, as the description used had a richmorpho-syntax, words could be analysed inmany ways giving different syntactic markings(eg.
different number and person markings forverbs) which were not relevant for the rest ofthe system.
Changes were made to reduce thenumber of phonetically similar (though syntac-tically different) analyses.
The end result nowstates only the major category of the analysis.
(Naturally, if the~ system were to be used withina more complex syntactic parser, the other anal-yses may be needed).Secondly, the number of ~s~em ~ entries inthe lexicon is significant.
It must be largeenough to analyse most words, though not solarge that it gives too many erroneous anal-yses of unknown words.
ALso, while it hasbeen assumed that the lexicon contains produc-tive affixes, perhaps it should also contain cer-tain derivational ffixes which are not normallyproductive, such as te le - ,  +olosy, +phobia,+vorous.
These would be very useful whenanalysing unknown words.
The implication isthat there should be a special exicon used for- 105-analysing unknown words.
This lexicon wouldhave a large number of affixes, together withconstraints on compounds, that would not nor-mally be used when analysing words.Another problem is that unknown wordsare often place-names, proper names, Ioanwordsetc.
The technique described here would prob-ably not deal adequately with such words.So far, this technique has been described0nly in terms of English.
When consideringother languages, especially those where com-pounding is common (eg.
Dutch and German),the method would be even more advantageous.In novel compounds, large sections of the wordcould still be analysed.
In the above descrip-tion, only one unknown part is allowed in eachword.
This seems to be reasonable for En-glish, where there will rarely be compounds ofthe form ** +aug ** +our.
However, in otherlanguages (especially those with a more fully-developed system of inflection) such structuresdo exist.
An example is the Dutch word be-jaardentehuizen (old peoples homes), which hasthe structure noun +on noun +en.
Thus it ispossible for words to contain two (or more)non-contiguous nknown sections.
The methoddescribed here could probably cope with suchcases in principle, but the current implemen-tation does not do so.
Instead, it would findone unknown part from the start of the firstunknown morpheme to the end of the final un-known morpheme.SummaryA system has been described which will analyseany word and assign a pronunciation.
The sys-tem first tries to analyse an input word usingthe standard analysis procedure.
If this fails,the modified lexicon and spelling rule set areused.
The output analyses are then ordered.For each unknown section, the underlying or-thographic form is constructed, and letter-to-sound rules are applied.
The end result is astring of phonemic forms, one form for eachmorpheme in the original word.
These phone-mic forms are then processed by morphophono-logical rules, followed by rules for word stressassignment and vowel reduction.AcknowledgementsAlan Black is currently funded by an SERCstudentship (number 80313458).
During thisproject Joke van de Plassche was funded bythe SED and Stichting Nijmeegs UniversiteitsFonds.
Briony Wilfiams is employed on the ES-PR IT  aPOLYGLOT~ project.
We shouldalso like to acknowledge help and ideas fromGerard Kempen, Franziska Maier, Helen Pain,Graeme Ritchie and Alex Zbyslaw.References\[1\] J. Allen, M. Hunnicut, and K. Klatt.
Tezt-to-speech: The MITalk system.
CambridgeUniversity Press, Cambridge, UK., 1987.\[2\] S. Johansson and M. Jahr.
Grammaticaltagging of the LOB corpus: predicting wordclass from word endings.
In S. Johansson,editor, Computer corpora in English lan-guage research, Norwegian Computing Cen-tre for the Humanities, Bergen, 1982.\[3\] K. Koskenniemi.
A general computationalmodel for word-form recognition and pro-duction.
In Proceedings of the lOth Inter-national Conference on Computational Lin-guistics, pages 178-181, Stanford University,California, 1984.\[4\] G. Ritchie.
Languages Generated by Two-level Morphological Rules.
Research Pa-per 496, Dept of AI, University of Edin-burgh, 1991.\[5\] G. Ritchie, S. Pulman, A.
Black, andG.
Russell.
A computational framework forlexical description.
Computational Linguis-tics, 13(3-4):290-307, 1987.\[6\] G. Ritchie, G. Russell, A.
Black, and S. Pul-man.
Computational Morphology.
MITPress, Cambrdige, Mass., forthcomming.106 -
