Discovering patterns to extract protein-protein interactions from fullbiomedical texts*Minlie Huang1, +Xiaoyan Zhu1, Donald G. Payan2, Kunbin Qu2 and ++Ming Li3,11State Key Laboratory of Intelligent Technology and Systems (LITS)Department of Computer Science and Technology, University of Tsinghua, Beijing, 100084, China2Rigel Pharmaceuticals Inc, 1180 Veterans.
Blvd, South San Francisco, CA 94080, USA3Bioinformatics Laboratory, School of Computer Science, University of Waterloo, N2L 3G1, Canada*huangml00@mails.tsinghua.edu.cn+zxy-dcs@tsinghua.edu.cn++mli@uwaterloo.caAbstractAlthough there have been many research pro-jects to extract protein pathways, most such infor-mation still exists only in the scientific literature,usually written in natural languages and defyingdata mining efforts.
We present a novel and robustapproach for extracting protein-protein interactionsfrom the literature.
Our method uses a dynamicprogramming algorithm to compute distinguishingpatterns by aligning relevant sentences and keyverbs that describe protein interactions.
A match-ing algorithm is designed to extract the interactionsbetween proteins.
Equipped only with a proteinname dictionary, our system achieves a recall rateof about 80.0% and a precision rate of about 80.5%.1 IntroductionRecently there are many accomplishments inliterature data mining for biology, most of whichfocus on extracting protein-protein interactions.Most of such information is scattered in the vastscientific literature.
Many research projects havebeen designed to collect protein-protein interactiondata.
Several databases are constructed to storesuch information, for example, Database of Inter-acting Proteins (Xenarios et al, 2000; Salwinski etal., 2004).
Most of the data in these databases wereaccumulated manually and inadequately, at highcosts.
Yet, scientists continue to publish theirdiscoveries on protein-protein interactions in scien-tific journals, without submitting their data to thedatabases.
The fact is that most protein-proteininteraction data still exist only in the scientificliterature, written in natural languages and hard tobe processed with computers.How to extract such information has been anactive research subject.
Among all methods,natural language processing (NLP) techniques arepreferred and have been widely applied.
Thesemethods can be regarded as parsing-based methods.Both full and partial (or shallow) parsing strategieshave been used.
For example, a general full parserwith grammars applied to the biomedical domainwas used to extract interaction events by fillingsentences into argument structures in (Yakushiji etal., 2001).
No recall or precision rate was given.Another full parsing method, using bidirectionalincremental parsing with combinatory categorialgrammar (CCG), was proposed (Park et al, 2001).This method first localizes the target verbs, andthen it scans the left and right neighborhood of theverb respectively.
The lexical and grammaticalrules of CCG are even more complicated thanthose of a general CFG.
The recall and precisionrates of the system were reported to be 48% and80%, respectively.
Another full parser utilizing alexical analyzer and context free grammar (CFG),extracts protein, gene and small molecule inter-actions with a recall rate of 63.9% and a precisionrate of 70.2% (Temkin et al, 2003).
Similarmethods such as preposition-based parsing to gene-rate templates were proposed (Leroy and Chen,2002), processing only abstracts with a templateprecision of 70%.
A partial parsing example is therelational parsing for the inhibition relation (Pus-tejovsky et al, 2002), with a comparatively lowrecall rate of 57%.
In conclusion, all the methodsare inherently complicated, requiring many re-sources, and the performances are not satisfactory.Some methods only focus on several special verbs.Another popular approach uses pattern matching.As an example, a set of simple word patterns andpart-of-speech rules were manually coded, for eachverb, to extract special kind of interactions fromabstracts (Ono et al, 2001).
The method obtains arecall rate of about 85% and a precision rate ofabout 94% for yeast and Escherichia coli, which isthe best among all reported results.
However,manually writing patterns for every verb is notpractical for general purpose applications.
InGENIES, more complicated patterns with syntacticand semantic constraints are used (Friedman et al,2001).
GENIES even uses semantic information.However, GENIES' recall rate is low.
In the abovemethods, patterns are hand-coded withoutexception.
Because there are many verbs and their22variants describing protein interactions, manuallycoding patterns for every verb and its variants isnot feasible in practical applications.Most of the above methods process MEDLINEabstracts (Ng and Wong 1999; Thomas et al, 2000;Park et al, 2001; Yakushiji et al, 2001; Wong,2001; Marcotte et al, 2001; Leroy and Chen,2002).
Because there is neither an accurate taskdefinition on this problem nor a standardbenchmark, it is hard to compare the results fairlyamong various methods (Hirschman et al, 2002).Furthermore as MEDLINE has become a standardresource for researchers, the results on the moredifficult task of mining full text have been largelyignored.In this paper, we propose a novel and surprising-ly robust method to discover patterns to extractinteractions between proteins.
It is based ondynamic programming (DP).
In the realm ofhomology search between protein or DNA se-quences, global and local alignment algorithm hasbeen thoroughly researched (Needleman andWunsch, 1970; Smith and Waterman, 1981).
In ourmethod, by aligning sentences using dynamicprogramming, the similar parts in sentences couldbe extracted as patterns.
Compared with the pre-vious methods, our proposal is different in the fol-lowing ways: Firstly, it processes full biomedicaltexts, rather than only abstracts.
Secondly, it auto-matically mines verbs for describing protein inter-actions.
Thirdly, this method automatically dis-covers patterns from a set of sentences whoseprotein names are identified, rather than manuallycreating patterns as most previous methods.
Lastly,our method has low time complexity.
It is able toprocess very long sentences.
In contrast, for anyfull or partial parsing method, it is time- andmemory-consuming to process long sentences.2 Method2.1 Alignment algorithmSuppose we have two sequences ),...,,( 21 nxxxX =and ),...,,( 21 myyyY =  which are defined over thealphabet }'',...,,{ 21 ?==?
laaa .
Each ai is called as acharacter, and '-'  denotes a white-space or a gap.We want to assign a score to measure how similarX and Y are.
Define F(i,j) as the score of theoptimal alignment between the initial segmentfrom x1 to xi of X and the initial segment from y1 toyj of Y. F(i,j) is recursively calculated as follows:????????+??+?+??=),'(')1,()'',(),1(),()1,1(,0max),(jijiysjiFxsjiFyxsjiFjiF(1a)?
?== ji yxjFiF ,,0),0(,0)0,(                    (1b)where s(a,b) is defined as follows:]))(*)((),(log[),( bpapbapbas =                (2)Here, p(a) denotes the appearance probability ofcharacter a, and p(a,b) denotes the probability thata and b appear at the same position in two alignedsequences.
Probabilities p(a) and p(a,b) can beeasily estimated by calculating appearance fre-quencies for each pair with pre-aligned trainingdata.Note that the calculation of scores for a gap willbe different.
In formula (2), when a or b is a gap,the scores can not be directly estimated by theformula because of two reasons: 1) the case that agap aligns to another gap will never happen in thealignment algorithm since it is not optimal,therefore, what s('-', '-') exactly means is unclear;  2)Gap penalty should be negative, but it is unclearwhat p('-') should be.
In DNA sequence alignment,these gap penalties are simply assigned withnegative constants.
Similarly, we tune each gappenalty for every character with some fixednegatives.
Then a linear gap model is used.Given a sequence of gaps with length n whichaligns to a sequence of ),...,,( 21 nxxxX =  with no gaps,the linear penalty is as follows:?
= ?= ni ixsn 1 ),'(')(?
(3)For sequence X of length n and sequence Y oflength m, totally (n+1)*(m+1) scores will becalculated by applying equation (1a-b) recursively.Store the scores in a matrix F=F(xi, yi).
Throughback-tracing in F, the optimal local alignment canbe found.In our method, the alphabet consists of threekinds of tags: 1) part-of-speech tags, as those usedby Brill?s tagger (Brill et al, 1995); 2) tag PTN forprotein names; 3) tag GAP for a gap or white-space.Gap penalties for main tags are shown in Table 1.Tag Penalty Tag Penalty Tag PenaltyPTN -10 IN -6 VBP -7NN -8 CC -6 VBD -7NNS -7 TO -1 VBG -7VBN -7 VB -7 VBZ -7RB -1 JJ -1Table 1.
Gap penalties for main tags2.2 Pattern generating algorithmFor our problem, a data structure called se-quence structure, instead of a flat sequence, is used.Sequence structure consists of a sequence of tags(including PTN and GAP) and word indices in theoriginal sentence for each tag (for tag PTN andGAP, word indices are set to -1).
Through thestructure, we are able to trace which words aligntogether.23Similarly, we also use another data structurecalled pattern structure which is made up of threeparts: a sequence of tags; an array of word indexlists for each tag, where each list defines a set ofwords for a tag that can appear at the correspond-ing position of a pattern; a count of how manytimes the pattern has been extracted out in thetraining corpus.
With the structure, the patterngenerating algorithm is shown in Figure 1.
Thefiltering rules are listed in Table 2.Note that a threshold d is used in the algorithm.If a pattern appears less than d times in the corpus,it will be discarded; otherwise those infrequentpatterns will cause many matching errors.
Throughadjusting this parameter, generalization and usabi-lity of patterns can be controlled.
The larger thethreshold is, the more general and accuratepatterns are.Tags like JJ (adjective) and RB (adverb) are toocommon and can appear at every position in asentence; hence if patterns include such kind oftags, they lose the generalization power.
Sometags such as DT (determiner) only play a func-tional role in a sentence and they are useless topattern generation.
Therefore, just as the first stepin our algorithm shown in Figure 1, we removedirectly the useless tags such as JJ, JJS (super-lative adjective), JJR (comparative adjective), RB,RBS (superlative adverb), RBR (comparativeadverb) and DT from the sequences.
Furthermore,to control the form of a pattern, filtering rulesshown in Table 2 are adapted.
Verb or noun tagsdefine interactions between proteins, thus they areindispensable for a pattern, as the first rule shows.The second rule guarantees the integrality of apattern because tags like IN and TO must befollowed by an object.
The last one requiressymmetry between the left and right neighborhoodof CC tag.
Actually more rigid or looser filteringrules than those shown in Table 2 can be appliedto meet special demands, which will affect theforms of patterns.Table 2.
Filtering rules.2.3 Pattern matching algorithmBecause one pattern possibly matches a sen-tence at different positions, we have to explore analgorithm that is able to find out multiple matches.Figure 1.
Pattern generating algorithm.
Time com-plexity is O(n2) in the corpus size n.Here if we think a pattern as a motif, and sentenceas a protein sequence, then our task is similar tofinding out all motifs in the sequence.Suppose that ),...,,( 21 nxxxX =  is the sequence oftags for a sentence in which we look for multiplematches, and ),...,,( 21 myyyY =  is a pattern.
We stilluse a score matrix F, while the recurrence, definedby formulas (4a-b), is different from that of patterngenerating algorithm.
Formula (4a) only allowsmatches to end when they have score at least T.???=???==mjTjiFiFiFFL,2,1,),1()0,1(max)0,(0)0,0((4a)????????+??+?+?
?=),'(')1,()'',(),1(),()1,1(),0,(max),(jijiysjiFxsjiFyxsjiFiFjiF        (4b)The total score of all matches is obtained byadding an extra cell to the matrix, F(n+1,0), using(4a).
By tracing back from cell (n+1,0) to (0,0),the individual match alignments will be obtained.Threshold T should not be identical for differentpatterns.
Threshold T is calculated as follows:?== mi ii yysT 1 ),(?
(5)where ?
is a factor, in our method we take ?=0.5.The right hand of formula (5) is the maximumscore when a pattern matches a sentence perfectly.A match is accepted only when three conditionsare satisfied: 1) a pattern has a local optimal matchwith the sentence; 2) words in matching part of thesentence can be found in the word set of thepattern; 3) decision rules are satisfied.1.
If a pattern has neither verb tag nor nountag, reject it.2.
If the last tag of a pattern is IN or TO,reject it.3.
If the left neighborhood of a CC tag is notequal the right neighborhood of the tag ina pattern, reject the pattern.Input:  an integer d,a sequence set ),...,,( 21 nsssS =Output: pattern set P1.
Remove useless tags from each si in S2.
For any )(),( jiSss ji ??
doa) Do local alignment for si and sj.
Alignedoutput is Xa and Yb;b) Extract the identical characters at the samepositions in Xa and Yb as pattern p. Add thecorresponding word indices to patternstructure;c) Judge whether p is legal, using the filteringrules.
If it is illegal, go to step 2;d) If p exists in P, increase the count of pwith 1.
If not, add p to P with a count of 1;3.
For every p in P , doIf the count of p is less than d, discard p;4.
Output P.24Figure 2.
Pattern matching algorithm.
Time com-plexity of |))|*|*(||(| pXPO in pattern set size |P|,sequence length |X| and average length of pattern|| pTo show details how well a pattern matches asentence, a measurement data structure is defined,which is formalized as a vector.
It will be referredto as mVector:),,,( cVbcPtncMatchcLenmVector =                  (6)where cLen is the length of a pattern; cMatch isthe number of matched tags; cPtn is the number ofprotein name tag (PTN) skipped by the alignmentin the sentence;  cVb is the number of skippedverbs.
Based on the structure, decision rulesshown in Table 3 are used in the pattern matching.There are two parameters P and V used in thedecision rules, which can be adjusted according tothe performance of the experiments.
Here we takeP=0 and V=2.Table 3.
Decision rules.3 System overviewOur system uses the framework of Pathway-Finder (Yao et al, 2004).
It consists of severalmodular components, as shown in Figure 3.The external resource required in our method isa dictionary of protein names, where about 60,000items are collected from both databases ofPathwayFinder and several web databases, such asTrEMBL, SWISSPROT (O'Donovan et al, 2002),and SGD (Cherry et al, 1997), including manysynonyms.
The training corpus contains about1200 sentences which will be explained withdetails in the next section.
Patterns generated at thetraining phase are stored in the pattern database.For an input sentence, firstly some filtering rulesare adapted to remove useless expressions at thepre-processing phase.
For example, removecitations, such as '[1]', and listing figures, such as'(1)'.
Then protein names in the sentence areidentified according to the protein name dictionaryand the names are replaced with a unique label.Subsequently, the sentence is part-of-speechtagged by Brill?s tagger (Brill et al, 1995), wherethe tag of protein names is changed to tag PTN.Last, since a sequence of tags is obtained, it can beadded into the corpus at the training phase or it canbe used by the matching algorithm at the testingphase.Because the pattern acquisition algorithm isaligning sequences of tags, the accuracy of part-of-speech tagging is crucial.
However, Brill?s taggeronly obtained overall 83% accuracy for biomedicaltexts.
This is because biomedical texts containmany unknown words.
Here we propose a simpleand effective approach called pre-tagging strategyto improve the accuracy, just as the method usedby (Huang et al, 2004).Figure 3.
Architecture of our system.4 ResultsOur evaluation experiments are made up of threeparts: mining verbs for patterns, extracting patternsand evaluating precision and recall rates.4.1 Mining verbsThe algorithm shown in Figure 1 is performedon the whole corpus and one more filtering rule asfollows, is used, besides those in Table 2:If the pattern has no verb tag, reject it.With this rule, only patterns that have verbs areextracted.
Here the threshold d is set to 10 toobtain high accurate verbs for the subsequentInput:  a pattern set ),...,,( 21 npppP = ,a sequence XOutput: aligned result set R1.
For every pattern pi in P, doa) Set threshold T for pattern pi, usingformula (5);b) For X and the sequence of pattern pi; buildscore matrix F using formula (4a-b);c) Trace-back to find multiple matches.
Theresults are },,,{ 21 araar XXXA L= ;d) For every result Xai  in Ari.
Check whether every word in Xai alignedto pi appears in the corresponding positionof pi,   if not, go to step d);ii.
Fill all data in mVector ;iii.
Determine to accept or reject the matchaccording to decision rules.
If reject, go tostep d);iv.
Add Xai to the result set R;2.
Output R.Input: two parameters P and V1.
If cMatch ?
cLen, reject the match;2. if cPtn > P, reject the match;3. if  cVb > V, reject the match;Protein NameIdentificationGeneratingAlgorithmSentence Protein interactionsCorpusMatching algorithm PreprocessingProtein NameDatabasePatternDatabasePOS TaggerTrainTest25experiments.
Totally 94 verbs are extracted from367 verbs for describing interactions.
Note thatdifferent tense verbs that have the same base formare counted as different ones.
There are falsepositives which do not define interactions seman-tically at all, such as 'affect', 'infect', 'localize',amounting to 16.
Hence the accuracy is 83.0%.These verbs and their variants, particularly thegerund and noun form, (obtained from an Englishlexicon) are added into a list of filtering words,which is named as FWL (Filtering Word List).
Forexample, for verb 'inhibit', its variants including'inhibition', 'inhibiting', 'inhibited' and 'inhibitor'are added into FWL.
At the current phase, we addall verbs into FWL, including false positivesbecause we think these verbs are also helpful tounderstand pathway networks between proteins.4.2 Extracting patternsPattern generating algorithm is performed on thewhole corpus with FWL.
The threshold d is 5 here.The filtering rules in Table 2, plus the followingrule, are applied.If a pattern has any verb or noun that is not inFWL, reject it.This ensures that the patterns have a good formand all their words are valid.
In other word, thisrule guarantees that the main verbs or nouns inevery pattern exactly describe protein interactions.The experiment runs on about 1200 sentences, withthreshold d=5, and 134 patterns are obtained.Some of them are listed in Figure 4.4.3 Evaluating precision and recall ratesIn this part, three tests are performed.
The firsttest uses 383 sentences that only contain keywordinteract and its variants.
293 of them are used toextract patterns and the rest are tested.
The secondone uses 329 sentences that only contain key wordbind and its variants.
250 of them are used togenerate patterns and the rest are tested.
The thirdone uses 1205 sentences with all keywords, where1020 are used to generate patterns, the rest for test.As described before, we do not exclude those verbssuch as 'affect', 'infect' and so on, thereforerelations between proteins defined by these verbsor nouns are thought to be interactions.
Note thatthe testing and training sentences are randomlypartitioned, and they do not overlap in all thesetests.
The results are shown in Table 4.
Somematching examples are shown in Figure 5.
Simplesentences as sen1-2 are matched by only onepattern.
But it is more common that severalpatterns may match one sentence at differentpositions, as in sen3-4.
In examples sen5, the samepattern matches repeatedly at different positionssince we used a 'multiple matches' algorithm.Keywords Recall Precision F-scoreInteract 80.5% 84.6% 82.5%Bind 81.7% 82.8% 82.2%All verbs 79.9% 80.3% 80.2%Table 4.
The recall and precision experiments.5 DiscussionWe have proposed a new method for automa-tically generating patterns and extract proteininteractions.
In contrast, our method outperformsthe previous methods in two main aspects: first, itautomatically mines patterns from a set of sen-tences whose protein names are identified; second,it is competent to process long and complicatedsentences from full texts.In our method, a threshold d is used to controlboth the number of patterns and the generalizationpower of patterns.
Although infrequent patterns arefiltered by a small threshold, a glance to thesepatterns is meaningful.
For example, on 293sentences containing keyword 'interact' and itsvariants, patterns whose count equals one areshown in Figure 6.
Among the results, some arereasonable, such as 'PTN VBZ IN PTN IN PTN '(protein1 interacts with protein2 through protein3).These kinds of patterns are rejected because ofboth insufficient training data and infrequentlyused expressions in natural language texts.
Somepatterns are not accurate, such as 'NNS IN PTNPTN PTN ', because there must be a coordinatingconjunction between the three continuous proteinnames, otherwise it will cause many errors.
Somepatterns are even wrong, such as 'PTN NN PTN 'because there are never such segment 'protein1interaction protein2' defining a real interactionbetween protein1 and protein2.
Some patterns, suchas 'PTN VBZ IN CC IN PTN ' which should be'PTN VBZ IN PTN CC IN PTN ' (protein1 interactswith protein2 and with protein3), are not precisebecause the last filtering rule in Table 2 is used.Nevertheless, these patterns can be filtered outby the threshold.
However, how to evaluate andmaintain patterns becomes a real problem.
Forexample, when the pattern generating algorithm isapplied on about 1200 sentences, with a thresholdd=0, approximate 800 patterns are generated, mostof which appeared only once in the corpus.
It isnecessary to reduce such large amount of patterns.A MDL-based algorithm that measures the con-fidence of each pattern and maintains them withouthuman intervention is under development.Because our matching algorithm utilizes part-of-speech tags, and our patterns do not contain anyadjective (JJ), interactions defined by adjectives,such as 'inducible' and 'inhibitable', cannot beextracted correctly by our method currently.26PatternCountPatternFormWord lists ofpattern1914 PTN VBZ PTN * ;modifies promotes inhibits activates mediates blocks enhances forms ;* ;758 PTN VBZ IN PTN * ; interacts associates; with in within ;* ;402 NN IN PTN CC PTN interaction association activation modification degradation ;between with offrom by ;* ;and or but ;* ;270 PTN NN IN PTN * ;interaction complex conjugation modification association ;with of on by inwithin between ;* ;199 PTN VBZ TO PTN * ;binds; to ;* ;99 PTN VBZ IN PTN CC PTN * ;assembles interacts associates; of in with from ;* ;and but ;* ;16 PTN CC PTN NN IN PTN * ;and or ;* ;interaction conjugation complex ubiquitination degradationmodification activation recognition ;between of with by ;* ;5 PTN VBP IN PTN * ;interact ;with ;* ;Figure 4.
Pattern examples.
The star symbol denotes a protein name.
Words for each component of a patternare separated by a semicolon.
For simplicity, words in a pattern are partially listed.Figure 5.
Examples of protein interactions extracted from sentences.
Words in bold are protein names.
Forevery sentence, the patterns used in the matching algorithm are listed, followed by the corresponding results.PatternCountPatternFormWord lists ofpattern1 PTN VBZ IN CC IN PTN  * ;interacts ;with ;and ;with ;* ;1 PTN VBZ IN PTN IN PTN * ;interacts ;with ;* ;through;* ;1 PTN NN PTN * ;interaction ;* ;1 NNS IN PTN PTN PTN  interactions interaction ;with between ;* ;* ;* ;Figure 6.
Some patterns whose count equals one are generated by our algorithm.
293 sentences containingkeyword 'interact' and its variants are used in the training.This can be demonstrated by the following sen-tence, where words in bold are protein names.
?The class II proteins are expressedconstitutively on B-cells and EBV-transformedB-cells, and are inducible by IFN-gamma on awide variety of cell types.
?In this sentence, interaction between class IIproteins and IFN-gamma is defined by anadjective inducible (tagged as JJ) does not matchany pattern.
To solve this problem, we areconsidering using word stemming and morphemerecognition to convert adjectives into theircorresponding verbs with context.By analyzing our experimental results, We findthat the current matching algorithm is not optimaland causes approximately one-third of total errors.This partially derives from the simple decisionrules used in the matching algorithm.
These rulesmay work well for some texts but partially fail forothers because the natural language texts aremultifarious.
With these considerations, a moreaccurate and complicated matching algorithm isunder development.6 ConclusionIn this paper, a method for automaticallygenerating patterns to extract protein-protein inter-actions is proposed and implemented.
The methodis capable of discovering verbs and patterns inbiomedical texts.
The algorithm is fast and able toprocess long sentences.
Experiments show that arecall rate of about 80% and a precision rate ofabout 80% are obtained.
The approach is powerful,robust, and applicable to real and large-scale fulltexts.7 AcknowledgementsThe work was supported by Chinese NaturalSen1: Here, we show that HIPK2 is regulated by a ubiquitin-like protein, SUMO-1.Pattern: PTN VBN IN PTN           result: HIPK2 regulated by SUMO-1Sen2: SPB association of Plo1 is the earliest fission yeast mitotic event recorded to date.Pattern: PTN NN IN PTN    result: SPB association of Plo1Sen3: In the absence of Mad2, BubR1 inhibits the activity of APC by blocking the binding of Cdc20 to APC.Pattern: PTN VBZ PTN    result: BubR1 inhibits APCPattern: NN IN PTN TO PTN   result: binding of Cdc20 to APCSen4: All proteins of this family have Cdk-binding and anion-binding sites, but only mammalian Cks1 binds to Skp2 and promotesthe association of Skp2 with p27 phosphorylated on Thr-187.Pattern: PTN VBZ TO PTN    result: Cks1 binds to Skp2Pattern: NN IN PTN IN PTN   result: association of Skp2 with p27Sen5: Evidence is also provided that, in vivo, E6 can interact with p53 in the absence of E6-AP and that E6-AP can interact withp53 in the absence of E6.Pattern: PTN VB IN PTN   result: E6 interact with p53Pattern: PTN VB IN PTN   result: E6-AP interact with p5327Science Foundation under grant No.60272019 and60321002, the Canadian NSERC grantOGP0046506, CRC Chair fund, and the KillamFellowship.
We would like that thank Jinbo Wangand Daming Yao for their collaboration on thePathwayFinder system.ReferencesBrill,E.
(1995) Transformation-based error-drivenlearn-ing and natural language processing: a casestudy in part-of-speech tagging.
ComputationalLinguistics, 21(4), 543?565.Cherry,JM, Ball,C, Weng,S, Juvik,G, Schmidt,R,Adler,C, Dunn,B, Dwight,S, Riles,L,Mortimer,RK, Botstein,D (1997) Genetic andphysical maps of Saccharomyces cerevisiae.Nature 387(6632  Suppl), 67-73.Friedman,C., Kra,P., Yu,H., Krauthammer,M., andRzhetsky,A.
(2001) Genies: a natural-languageprocessing system for the extraction of molecularpathways from journal articles.
Bioinformatics,17 suppl.
1:S74?82.Hirschman,L., Park,JC, Tsujii,J, Wong,L., Wu,C.H.
(2002) Accomplishments and challenges inliterature data mining for biology.
Bioinformatics,18:1553--1561, December 2002.Huang,M., Zhu,X.
and Li,M.
(2004) A newmethod for automatic pattern acquisition toextract information from biomedical texts.
In theSeventh International Conference on SignalProcessing, August, Beijing, China.
Accepted.Leroy,G.
and Chen,H.
(2002) Filling preposition-based templates to capture information frommedical abstracts.
In Pacific Symposium onBiocomputing 7, Hawaii, USA, pp.
350-361.Marcotte,EM, Xenarios,I., and Eisenberg,D.
(2001)Mining literature for protein-protein interactions.Bioinformatics, 17(4), 359?363.Needleman,S.B.
and Wunsch,C.D.
(1970) Ageneral method applicable to the search forsimilarities in the amino acid sequence of twoproteins.
J. Mol.
Biol., 48, 443-453.Ng,S.K.
and Wong,M.
(1999) Toward routineautomatic pathway discovery from on-linescientific text abstracts, Proceedings of 10thInternational Workshop on GenomeInformatics,  Tokyo, December 1999, pp.
104-112.O'Donovan,C., Martin,MJ, Gattiker,A.,Gasteiger,E., Bairoch,A.
and Apweiler,R.
(2002)High-quality pro-tein knowledge resource:Swiss-Prot and TrEMBL.
Briefings inBioinformatics 2002 Sep; 3(3), 275-284.Ohta,T.,  Tateishi,Y., Collier,N., Nobata,C., andTsujii,J.
(2000)  Building an annotated corpusfrom biology research papers.
Proc.
COLING-2000 Workshop on Semantic Annotation andIntelligent Content, Luxembourg, pp.
28-34.Ono,T., Hishigaki,H., Tanigami,A., and Takagi,T.
(2001) Automated extraction of information onprotein-protein interactions from the biologicalliterature.
Bioinformatics, 17(2), 155?161.Park,JC, Kim,HS, and Kim,JJ (2001) Bidirectionalincremental parsing for automatic pathwayidentify-cation with combinatory categoricalgrammar.
In Proceedings of the PacificSymposium Biocom-putting, Hawaii, USA, pp396-407.Pustejovsky,J, Castano,J, Zhang,J, Kotecki,M, andCochran,B (2002) Robust relational parsing overbiomedical literature: extracting inhibit relations.In Proceedings of the seventh Pacific Symposiumon Biocomputing (PSB 2002), pp.
362-373.Salwinski,L, Miller,CS, Smith,AJ, Pettit,FK,Bowie,JU, Eisenberg,D (2004) The database ofinteracting proteins: 2004 update.
NAR 32Database issue: D449-51.Smith,T.F.
and Waterman,M.S.
(1981)Identification of common molecularsubsequences.
J. Mol.
Biol., 147, 195-197.Thomas,J, Milward,D, Ouzounis,C, Pulman,S andCarroll,M (2000) Automatic extraction of proteininteractions from scientific abstracts.
InProceedings of the Pacific Symposium onBiocomputing, Hawaii, USA, Jan 2000, pp.
541?551.Wong,L.
(2001) A protein interaction extractionsystem, Proceedings of Pacific Symposium onBiocomputing 2001, Hawaii, January 2001, pp.520-530.Xenarios,I, Rice,D.W., Salwinski,L., Baron,M.K.,Marcotte,E.M., Eisenberg.D.
(2000) DIP: Thedata-base of interacting proteins.
NAR 28, 289-91.Yakushiji,A., Tateisi,Y., Miyao,Y., Tsujii,J.
(2001)Event extraction from biomedical papers using afull parser.
In Proceedings of the sixth PacificSymposium on Biocomputing (PSB 2001),Hawaii, USA, pp.
408-419.Yao,D., Wang,J., Lu,Y., Noble,N., Sun,H., Zhu,X.,Lin,N., Payan,D.G., Li,M., Qu,K.
(2004)Pathway-Finder: paving the way towardsautomatic pathway extraction.
In Yi-Ping PhoebeChen, ed., Bioinformatics 2004: Proceedings ofthe 2nd Asia-Pacific Bioinformatics Conference(APBC), 29 volume of CRPIT, pp.
53-62,Dunedin, New Zealand, January 2004.Australian Computer Society.28
