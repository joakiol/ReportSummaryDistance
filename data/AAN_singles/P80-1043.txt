Real Reading BehaviorRobert Thibadeau,  Marcel Just, and Patricia CarpenterCarnegie-Mellon UniversityPittsburgh, PA 15213Abst rac tThe most obvious observable activities that accompanyreading are the eye fixations on various parts of the text.Our laboratory has now developed the technology forautomatically measuring and recording the sequence andduration of eye fixations that readers make in a fairly naturalreading situation.
This paper reports on research inprogress to use our observations of this real readingbehavior to construct computational models of the cognitiveprocesses involved in natural reading.In the first part of this paper we consider some constraintsplaced on models of human language comprehensionimposed by the eye fixation data.
In the second part wepropose a particular model whose processing time on eachword of the text is proportional to human readers' fixationdurations.tSome Observat ionsThe reason that eye fixation data provide a rich base for atheoretical model of language processing is that readers'pauses on various words of a text are distinctly non-uniform.Some words are looked at very briefly, while others aregazed at for one or two seconds.
The longer pauses areassociated with a need for more computation \[2\].
The spanof apprehension is relatively small, so that at a normalreading distance a reader cannot extract the meaning ofwords that are in peripheral vision \[6\].
This means that aperson can read only what he looks at, and for scientifictexts read normally by college students, this involves lookingat almost every word.
Furthermore, the longer pauses canoccur immediately on the word that triggers the additionalcomputation \[4\].
Thus it is possible to infer the degree ofcomputational load at each point in the text.The starting point for the computer model was the analysisof the eye fixations of 14 Carnegie-Mellon undergraduatesreading 15 passages (each about 140 words long) takenfrom the science and technology sections of Newsweek andTime magazines (see the Appendix for a sample passage).The mean fixation duration on each word (or on larger,clause-like sectors) of the text were analyzed in a multipleregression analysis in which the independent variables werethe structural prcperties of the texts that were believed toaffect the fixation durations.
The results showed thatfixation durations were influenced by several levels ofprocessing, such as the word level (longer, less frequent1This research was supported in part by grants from the AlfredP.
Sloan Foundation.
the National Institute of Education (G-79-0119) andthe National institute of Mental Health (MH-29617)words take longer to encode and lexically access), and thetext level (more important parts of the text, like topics ordefinitions take longer to process than less important parts).This analysis generated a verbal description of a model ofthe reading process that is consistent with the observedfixation durations.
The details of the data, analysis, andmodel are reported elsewhere \[5\].Some of the most intriguing aspects of the eye-fixation dataconcern trends that we have failed to find.
Trends withinnoun phrases and verb phrases seem notable by theirabsence.
Most approaches to sentence comprehensionsuggest that when the head noun of a noun phrase isreached, a great deal of processing is necessary toaggregate the meanings of the various modifiers.
But this isnot the case.
While determiners and some prepositions arelooked at more briefly, adjectives, noun-classifiers, and headnouns receive approximately the same gaze durations.
(These results assume that word length effects on gazeduration have been covaried out).
Verb phrases, with theexception of modals, show a similar flat distribution.
It isalso notable that verbs are not gazed at longer than nouns,as might be expected.
Such results pose an interestingproblem for a system which not only recognizes words, butalso provides for their interpretation.Anotl"ler interesting result is the failure to find anyassociations with length of sentences (a rough measure oftheir complexity) or ordinal word position within sentences(a rough measure of amount of processing).
That is to say,whether or not word function, character-length or syllables,etc., are controlled, there are no systematic trendsassociated with ordinal word position or sentence length.There is an added gaze duration associated withpunctuation marks.
Periods add about 73 milliseconds, andother punctuation (including commas, quotes, etc.)
addabout 43 milliseconds each above what can be accountedfor by character-length or other covariates.The  FrameworkThe strategy for making sense of these and other similarobservations is to develop a computational framework inwhich they can be understood.
That framework must becapable of performing such diverse functions as wordrecognition, semantic and syntactic analysis, and textanalysis.
Furthermore, it must permit the ready interactionamong processes implied by these functions.
Theframework we have implemented to accomplish theseambitious goals is a production system fashioned closelyafter Anderson's ACT system \[1\].
Such a production systemis composed of three parts, a collection of productionscomprising knowledge about how to carry out processes, adeclarative knowledge base against which those processesare carried out, and an interpreter which provides for theactual behavior of the productions.159A production written for such a system is a condition-actionpair, conceptually an 'if-then' concept, where the conditionis assessed against a dynamically changing declarativeknow~edge base.
If a condition is assessed as true (ormatcheLl), the action of the production is taken to alter theknowJedge base.
Altering the knowledge base leads tofurther potential for a match, so the production system willnaturally cycle from match to match until no furtherproductions can be matched.
The sense in whichprocessing is ?otemporaneous is that all productions inmemory are assessed for a match of their conditions beforean action is taken, and then all productions whose.conditions succeed take action before the match proceedsagain.
This cycling, behavior provides a reference inestablishing the basic synchrony of the system.
Themapping from the behavior of the model to observed wordgaze durations is on the basis of the number of match (orso-called recognition.act) cycles which the model requiresto process each word.The physical implementation of the model is equipped atpresent to handle a dependency analysis of sentences of thesort of complexity we find in our texts (see the Appendix).There is nothing new to this analysis, and so it is notpresented here.
The implementation also exihibits someelementary word recognition, in that, for a few words, itcontains productions recognizing letter configurations andshape parameters.
The experience is, however, that theconventions which we have introduced provide a thoroughly'debugged' initial framework.
It is to the details of thatframework that we now turn.Much of our initial effort in formulating such a parallelprocessing system has been concerned with making eachprocessing cycle as efficient as possible with respect to theprocessing demands involved in reading to comprehend.
Todo this we allow that any number of productions can fire one single cycle, each production contributing to the searchfor an interpretation of what is seen.
Thus, for instance, thesystem may be actively working on a variety of processingtasks, and some may reach conclusion before others.
Theimportance of concurrent processing is precisely that thereader may develop htPotheses in actively pursuing oneprocessing avenue (such as syntax), and these hypothesesmay influence other decisions (such as semantics) evenbefore the former hypotheses are decided.
Furthermore,hypotheses may be developed as expectations about wordsnot yet seen, and these too should affect how those wordsare in fact seen.
In effect, much of our initial effort has beenin formulating how processes can interact in a collaborativeeffort to provide an interpretation.Collaboration in single recognition-act cycles is possiblewith carefully thought out conventions about therepresentation of knowledge in the knowledge base.
As inACT, every knowledge base element in our model isassigned a real.number activation level, which in the presentsystem is regard d as a confidence value of sorts.
UnlikeACT, the activation levels in our model are permitted to bepositive or negative in sign, with the interpretation that anegative sign indicates the element is believed to be untrue.Coupled with this property of knowledge base elements arethreshold properties associated with elements in thecondition side of the productions.
A threshold may bepositive or negative, indicating a query about whethersomething is true or false with some confidence.
As thesystem is used, there is a conventional threshold valueabove which knowledge is susceptible to being evaluated forinconsistency or contradiction, and below which knowledgeis treated as hypothetical, in the examples below, thisconventional threshold value is assumed.
The conditionelements can also include absence tests, so the system iscapable of responding on the basis of the absence of anelement at a desired confidence.
Productions can also pickout knowledge that is only hypothetical using this device.But more importantly confidence in a result represents amanner in which productions can collaborate.The confidence values on knowledge base elements aremanipulated using a special action called <SPEW>.Basically, this action takes the confidence in oneknowledge-base element and adds a linearly weightedfunction of that confidence to other knowledge.baseelements, If any such knowledge-base lement is not, infact, in the knowledge base, it will be added.
The elementsthemselves can be regarded as propositions in apropositional network.
Thus, one can view the function ofproductions as maintaining and constructing coherent fieldsof propositions about the text.Network representations of knowledge provide a naturalindexing scheme, but to be practical on a computer such anindexing scheme needs augmentation.
The indexingscheme must do several things at once.
It must discriminateamong the same objects used in different contexts, and itmust also help resolve the difficult problem of two or moreproductions trying to build, or comment upon, the sameknowledge structure concurrently.
To give something of theflavor of the indexing scheme we have chosen: where othernatural language understanding systems may create a tokenJOHN24 for a type JOHN, the number 24 in the presentsystem does not simply distinquish this 'John' from others, italso places him within a dimensional space.
In the exarnpiesto follow the token numbers are generated for the sequentialgazes, 1 for the first and so on.
An obvious use of such ascheme is that several productions may establishexpectations regarding the next word.
If some subset of theproductions establish the same expectation, then withoutmatching they will create the properly distinguished tokensfor that expectation.Consider one production written for this system:((!WORD :IS !DETERMINER)-->(.
'PEW) from (WORD :IS OETERMINER)to (WORD :HAS (<TOK> DETERMINER-TAIL))(DETERMINER-TAIL :HAS (<TOK> WORD-EXPECTATION))(WORD-EXPECTATION :IS (<NEXTTOK) WORD)))This production might be paraphrased as "lf you see someparticular word (say WORD12) is some particular determiner(say THE), then from the confidence you have that that wordis that determiner, assign (arithmetic ADD) that much160confidence to the ideas that that word a) needs to modifysomething (has a determiner-tail, DETERMINER-TAIL12), b)the modification itself has a word expectation (sayWORD-EXPECTATION12), c) which is to be fulfilled by thenext word seen (WORD13).
The indexing scheme ismanifest in the use of the functions <TOK> and <NEXTTOIC,.It is important to be able to predict what a token will be,since in a parallel architecture several productions may becollaborating in building this expectation structure.Type-token and category membership searches are usuallycarried out within the interpreter itself.
The exclamationpoint prefix on subelements, as in !WORD above, causes thematcher to perform an ISA search for candidate tokenswhich the decision The matcher is itself dynamically alteredwith respect to ISA knowledge as new tokens are created,and by explicit ISA knowledge manipulation on the part ofspecialized productions.
This has certain computationaladvantages in keeping the match process efficient 2.
Theuse of very many tokens, as implied by the above example, isimportant if one wants to explore the coordination ofdifferent processes in a parallel architecture.The next production would fire if the word following thedeterminer were an adjective:((IWORD :HAS IDETERHINER-TAIL)(DETERMINER-TAIL :HAS IWORO-EXPECTATION)(WORD-EXPECTATION :IS IIWORD)(%WORD :IS IADJECTIVE)-->(<SPEW> from (WORD-EXPECTATION :IS IWORO)to (WORD-EXPECTATION :IS 1WORD) -I(WORD-EXPECTATION :IS (<NEXTTOK> WORD)))The number prefixes, as in "1WORD", are tokens local tothe production that just serve to indicate differentknowledge base tokens are sought not what their knowledgebase tokens should be.
This production says that if a wordhas a determiner tail expecting some word and that wordhas been observed to be an adjective, then bring theconfidence at least to 0.0 that the word-expectation is theadjective, and have confidence that the word-expectation isthe word following the adjective.The <SPEW> action of this production makes use of aweighting scheme which serves to alter the control ofprocessing.
In this framework any knowledge base elementcan serve as both a bit of knowledge (a link) and as a controlvalue.
The .1 number causes the confidence in the sourceof the spew to be multiplied by -1 before it is added to thetarget, (WORD-EXPECTATION :IS 1WORD).
If this were theonly production requesting this switch of confidence, theeffect would be the effective deletion of this bit of knowledgefrom the knowledge base.
If other productions were alsoswitching this confidence, the system would wind up beingconfident that this word-expectation association is indeednot the case (explicitly false).P rocesses  in SequenceThe primary interest in formulating a model is in having asmuch 'processing' or decision-making as possible in asingle recognition-act cycle.
The general idea is that anaverage gaze duration of 250 milliseconds on a wordrepresents few such cycles.
The ability of the model topredict gaze duration, then, depends upon the sequentialconstraints holding among the collection of productionsbrought to the interpretation process.
The 'determiner tail'productions illustrated above represent a processingsequence in most contexts; the second cannot fire until thefirst has deposited its contribution in the knowledge base.This is not a necessary feature of these two productions,since other productions can collaborate to cause thesimultaneous matching of the two productions illustrated(we assume these are easy to imagine).
However, one maynote that since the 'determiner tail' productions aredistributed over several word gazes, they at most contributeone processing cycle to the gaze on any word (besides thedeterminer).
Thus, sequencing over words may not beexpensive.
Let us consider where it is computationallyexpensive.In contrast to rvghtward looking activities, the presence ofstrong sequencing constraints among productions ispotentially costly in leftward looking activities.
To illustratehow such costs might be reduced, consider a productionwith a fairly low threshold which assigns a need to find anagent for an action-process verb, and another productionwhich says that if one has an animate noun preceding anaction-process verb and that animate noun is the onlypossible candidate, then that animate noun is the agent.These two productions are likely to fire simultaneously if thelatter one fires at all.
They both create a need to find anagent and satisfy that need at once.
They do not set word?
expectations imply because the look-back at previous texttries to be efficient with regard to sequencing constraints.Had the need not been immediately fulfilled, it would serveas a promotion of other productions which might find otherways of fulfilling it, or of reinterpreting the use of theaction-process verb (even questioning the ISA inference).
Itshould be noted that the natural device for keeping thesefurther productions in sequence from firing is having themmake the absence test, as in((!WORD :IS IACTION-PROCESS-VERB)(WORD :HAS \]AGENT)(<ABSENT> (AGENT :IS \]ANYTHING))-->...suggest this might be an imperative, passive,el\] ipse, etc.
)The interpretation of the production is that "if you know withconfidence that you have an action-process-verb and itneeds an agent, but you don't know what that agent is, thensuggest various reasons why you might not know withappropriately low confidence in them.
"2The matcher is a slightly altered form of the RETE Matcher written byForgy for OPS4 \[3\].161Coord inat ion  of  M ind  and  EyeThe basic method of coordinating eye and mind in thepresent model is to make getting the next word contingentupon having completed the processing on the present one.In a production system architecture, this simply means thatthe match fails to turn up any productions whose conditionsmatch to the knowledge base.
Since elements in theknowledge base specify the need-to-know as wel: as what isknown, the use of absence tests in the conditions ofproductions can 'shut off' further processing when it isdeemed to be completed, or simply deemed to beunnecessary.
It is by this device that the systemdemonstrates more processing on important information,'shutting off' extended processing on that which is deemed,for any number of reasons, as less important.The model must, in addition to various ideas aboutcoordination, be also capable of representing various ideasabout dis-coordination.
One potential instance of this in thepresent data is that while virtually every word is fixated uponat least once (recall that several fixations can count toward asingle gaze), there are some words, AND, OR, BUT, A, THE,TO, and OF, with some likelihood of not being gazed upon atall (this accounts in some part for the fairly low average gazeduration on these words).
This can be considered adis-coordination of sorts, since to be this selective thereader must have some reasonable strong hypotheses aboutthe words in question (the knowledge sources for thesehypOtheses are potentially quite numerous, including thepossibility of knowledge from peripheral vision).
Aproduction to implement his dis-coordination in the presentsystem is:((!WORD :IS IFREQUENT-FUNCTION-WORD)-->(<SPEW> ((<OLOTOK) GOAL) :IS INTERPRET-WORD)((<OLDTOK> GOAL) :IS INTERPRET-WORD) -1((<OLDTOK> GOAL) :IS GAZE-NEXT-WORD)))This production detects the presence of one of the abovefunction words, and immediately shifts the present goal ofinterpreting a word (if it happens to be that) to gazing uponthe word following the function word.
It is important torecognize that the eye need not be on the function word forthe system to know with reasonable confidence that the nextword is a function word.
The indexing scheme permits thesystem to form hypotheses trong enough to create effectivereality (e.g., peripheral information and expectations canadd up to the conclusion that the word is a function word).A second important property is that the system does not getconfused with such skips, or in the usual case with suchbrief stays on these words.
The reason again is becauseeach word becomes a sort of local demon inheritingdemon-like properties from general production, and byinteraction with other knowledge base elements through thesystem of productions.SummaryThis report has provided a brief description on work inprogress to capture our observations of readingeye-movements in computational models of the readingprocess.
We have illustrated some of the main properties ofreading eye-movements and some of the main issues toarise.
We have also illustrated within an implementedsystem how these issues might be addressed and exploredin order to gain insight into more precise queries about realreading behavior.Append ixAn example text:Flywheels are one of the oldest mechanical devices knownto man.
Every internal-combustion engine contains a smallflywheel that converts the jerky motion of the piston into thesmooth flow of energy that powers the drive shaft.
Thegreater the mass of a flywheel and the faster it spins, themore energy can be stored in it.
But its maximum spinningspeed is limited by the strength of the material it is madefrom.
If it spins too fast for its mass, any flywheel will flyapart.
One type of flywheel consists of round sandwiches offiberglas and rubber providing the maximum possiblestorage of energy when the wheel is confined in a smallspace as in an automobile.
Another type, the"superflywheel", consists of a series of rimless spokes.
Thisflywheel stores the maximum energy when space isunlimited.Re ferences1.
Anderson, J. R. Language, memory, and thought.Lawrence Erlbaum Associates, 1976.2.
Carpenter, P. A., & Just, M. A.
Reading comprehension .as the eyes see it.
In Cognitive Processes inComprehension, M. A.
Just & P. A. Carpenter, Eds.,Lawrence Erlbaum Associates, 1977.3.
Forgy, C. L. OPS4 User's Manual Department ofComputer Science, Carnegie-Mellon University, 1979.4.
Just, M. A., & Carpenter, P. A.
Inference processesduring reading: reflections from eye.fixations.
In EyeMovements, ~d the Higher Psychological Functions, J.W.
Senders, D. F. Fisher, and R. A. Monty, Eds., LawrenceErlbaum Associates, 1978.5.
Just, M. A., & Carpenter, P. A.
"A theo~ of reading:from eye fixations to comprehension."
PsychologicalReview (In Press).6.
McConkie, G. W., & Rayner, K. "The span of theeffective stimulus during a fixation in reading."
Perceptionand Psychophysics 17 (1975).162
