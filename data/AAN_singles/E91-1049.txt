A PREFERENCE MECHANISMBASED ON MULT IPLE  CR ITERIA  RESOLUTIONYannis DologlouEurotra-GR, Margari 2211525 Athens, Greece.Giovanni MalnatiEurotra-IT, Gruppo Dima,Corso F.Turafi l l /C10128 Torino, Italy.Patrizia Paggiopatrizia@ eurotra.uucpEurotra-DK, University of Copenhagen,Njalsgade 802300 Kbh S, Denmark.ABSTRACTThis paper presents an experimental preference tooldes!gned, implemented and tested m the Eurotrapro)ect.
The mechanism is based on preference ruleswhich can either compare subtrees pairwise or singleout a subtree on the basis of some specified con-straints.
Scoring permits combining the effects ofvarious preference rules.THE PROBLEMThe aim of a translation system is to produce thecorrect ranslation of a given text.
In Eurotra, wheretranslation is split up into a series of mappingsamong intermediate levels of representation, pro-visional overgeneration is a necessary evil \[Raw etal.
1989\]: the closer to surface structure a level ofrepresentation is,the harder it becomes for the parserto produce an unambiguous result.
In the Eurotraframework, the E-framework \[Bech et al 1989\],overgeneration can be partially controlled by filterswhich describe parse trees that are to be discarded asnot obeying some specified constraints.
Thus, filtersapply to individual objects and are meant to deleteinherently wrong representations.
But there are caseswhere the grammar produces multiple analyses of agiven input because the input is ambiguous with re-spect to a given level.
All of these analyses are insome sense correct, although further processingmight discard some of them.
Our aim was to designa preference mechanism able to choose the bestamong a set of acceptable candidates.OUR V IEW OF PREFERENCEPreference has been defined in a number of ways,e.g.
as a gradual fulfilment of semantic onstraints\[Fass andWilks 1983\], as a lexically induced syn~c-tic bias \[Ford et al 1982\], as a parsm\[\[ strategy in~-pendent of linguistic criteria \[Frazler and Fodor1978, Pereira 1985\], and as a system based onmultiple judgements reflecting the complexity of psy-chological processes \[Jackendoff 1985\].Our approach, which is greatly indebted to Jacken-doffs theory of preference rule systems, is based onthe following assumptions:- Preference is a method which, on the basis ofsome preference criteria, chooses the best oneamong a set of possible interpretationswhich are all correct according to thegrammar.- Each preference criterion is expressed as a setof statements, where a statement is either abinary relation between competing interpreta-tions or the description of a subtree whichsatisfies ome defined criteria.- There is no unique preference criterion accor-ding to which the best interpretation can bechosen: preference criteria are multiple, andpossibly contradictory.
A preference mecha-nism must be able to accommodate such multi-~eCferYence criteria are heuristic principleswhich may vary according to the language andthe text type: therefore, they are not hardwiredm the system.In the previous Eurotra preference mechanism\[Petitpierre t al.
1987\], preference statementswere only defined as binary relations betweensubtrees.
Since comparing subtrees is a ratherexpensive operation from the computational pointof view, and since a number of preference cnteria- e.g.
the principle of right-low attachment -cannot be expressed in binary terms, we haveallowed both binary and non-binary preferencerules.
The applicaaon algorithm of p-rules andthe way in which various preference criteria arecombined are also new w~th respect o the pre-vious system.THE MECHANISM PROPOSEDThe mechanism proposed is an independentmodule which is activated on the results outputby the parser.
The module consists of pre~r.encerules of two possible kinds, which we call tnnaryand unary rules.A binary rule establishes a preference relationbetween two correspondin~ (sub)trees (from hereon, (sub)tree will be used m the sense of a repre-sentation of an interpretation or a part ot m~srepresentation).
A unary rule picks up a (sub)treeon the basis of i~s own properties, thus implicitlyestablishing a preference relation between this(sub)tree and all its competitors.
Each preferencerule - be it binary or unary - is associated with ascore, which is assigned to the preferred (sub)treeas a result of the application of the rule.- 281  -Correspondences: The notion of correspondencebetween (sub)trees i central topreference rules ofthe binary type.
A number of def'mitions of this con-cept can be envisaged:i.
The correspondence b tween two (sub)trees isestablished by the user, who states that somespecified contraints hold between parts of them.ii.
A correspondence is only assumed to existbetween full parse trees, and the correspondencebetween two subtrees is defined by specifyingtheir derivation paths from the top node.iii.
The system proauces a parse graph which will bea synthesis of the various parse trees, where partscommon to several trees are shared; two subtreescorrespond if they share a given part.The most challenging solution is (iii): we have notadopted it because o f  computational problems con-nected with the introduction of structure-sharing into.the E-framework.
The easiest solution to implement(ii): this is the approach chosen in the earlierurotra preterence tool.
The solution we haveadopted ts (i), which unlike (ii) allows the user tostate constraints on subtrees, regardless of theirposition in the complete parse tree.
In other words,our system allows for very local and modular state-ments.Preference Rules: The user expresses preferencestatements through a set of binary or unary preferen-ce rules (p-rules).The syntax for a binary rule isRuleName ( Score ) =LHS >= RHSwhereAnnotations.where:RuleName is a unique identifier used for tracepurposes;Score is a positive integer which indicates howstrong the relation of preference is;LHS and RHS (the left-hand side and the right-hand side of the rule) are the descriptions of thetwo (sub)trees to be compared;- >= is a preference sign that indicates which of thetwo (sub)trees i to ~e preferred;An.notations i a (possibly empty) set of constraintswmcn must hold between the constituents of thetwo (sub)trees to be compared.The syntax for a unary rule isRuleName ( Score ) =LHSwhereAnnotations.where:- LHS is the description of the (sub)tree to besingled out (which we call the left-hand side tostress the parallelism with binary rules);- the other parts are as defined for binary rules.LttS and RHS are (sub)tree descriptions of anyde.l~h and relevant parts of them may be labelledwtm r'rotog variables, called indexes.
These labelsare used to express imple or complex corresponden-ce constraints in the annotation part of the rule.
Asimple constraint states for instance that twoindexed subtrees must or must not have the samestructure.
Simple constraints may be combinedwith the operators 'and" and 'or' to form complexconstraints.
Scores, which have the function ofdriving p-rule interaction, are positive integers.They may be either assigned by the user orgenerated automaucally on statistical grounds, asexplained below.
Examples of both rule types aregiven in the appendix.General Algorithm: All theparse trees havean initial null score before preference rules areapplied.
For each pair of trees, if they containtwo subtrees respectively matching the LHS andthe RHS of a binary p-rule, while the constraintsin the annotation part of the rule hold, the ruleapplies.
Similarly, for each parse tree, if a subtreematching the LHS of a unary b-rule can beextracted, and all the constraints expressed in therule are satisfied, the rule applies.
In both eases,as a result of p-rule applicatton, the score of theobject that contains the preferred subtree isincremented by the score o f  the rule.When all binary rules have been tried out onall the possible pairs of trees in all the possibleways, and all unary rules have been fired on allthe single trees, results are collected.
All parsetrees are partitioned into equivalence classesaccording to their score.
Note that trees to whichno preference rule has applied will belong to thelowest-ranking class: this is motivated by theassumption that unary rules prefer single treesover all the other members of the set of compe-ling trees.After this partial order has been established, allthe trees but those belonging to the highest-ranking class are discarded.A possible enhancement to the expressivepower of p-rules would be the introduction ofnegative scores, for cases where a p-ruledescribes an acceptable but not totally correctsubtree.AN EXAMPLEThe following set of p-rules are based on someof the criteria for the treatment of PP attachmentdescribed in \[Hirst 1987\].
Note that p-rule scoreshave been assigned manually, due to the smallnumber of rules.pmod (8) = {cat=pp, sf-=mod} \[PI: {cat=p},NPI: {cat=np}\]>= {cat=pp, sf=mod} \[P2:{cat,---p},NP2: {cat=np}\]where PI=P2, NPI=NP2.In the rule above, 0 delimit a node in the tree,which in the E-framework is a set of attributevalue pairs, \[\] following a given node enclose itsdaughters, = means equal to and ~= meansdifferent from.
The rule prefers a valency-boundPP to a PP modifier.
This is a very strong cri-terion, which can only be overridden by semanticprinciples: therefore, the rule has a high score.- 282 -plow (2)= {cat=nptt,\[__, {cat=n\],## {cat=pp\], *{} \].The rule gives 2 points to an attachment where aPP is placed under an NP node.
Note that *0 meansany number of (sub)trees, without any restriction,and ~ in front of a subtree means that this subtreeis weakly dominated by the top node.
Assuming thefollowing two structuresa)NPIN NP ppb)NPIN NPIN pp'plow' will only apply once to (a), but it would firetwice on (b), which will in the end collect thehighest score.
The rule implements in fact thepnnciple of right-low auachment.peoord (5) = {cat=?
}\[el: {sf=conjunct},C2: { sf=con\]unct} \]where width(C1) = width(C2).The rule above assigns 5 points to a coordinatedstructure where the two conjuncts have the samenumber of terminals.
Note that constraints are statedbetween odes of two com~ting (sub)trees and not,as it was the case in pmod', between nodesbelonging to the same (sub)tree.Objl:SI.,V sub\ ]diskutere npIn nKommissionen forslagpfraobj /p lownpIsubj"npIcomplnpInvirksomhedTo see how these p-rules work, we can applythem to the set of objects resulting from theanalysis of the following three Danish sentences:O) "Kommissionen diskuterede etforslag fravirksomhederne om effektiv lcsning afproblememe".fEN: The commission discussed a proposal bythe companies for the effective solution of theproblems).
(2) "Virksomhederne deltager i programmetfor denne periode".fEN: The companies take part in the pro-gramme for this period).
(3) "Kommissionen kontrollerer finansieringenaf virksomhederne og samarbeidet med in-dustrien".fEN: The commission controls the financing ofthe firms and the cooperation with industry).In all three cases the preference tool yields thecorrect result.
The three preferred objects areshown below: p-rules that have applied areindicated on the top nodes of the relevant sub-trees.In accordance with the Eurotra linguisticmodel, object 1 and 2 below are dependencystructures with a lowered governor, where thecomplements have been ordered in a canonicalway and a series of phenomena (determinateness,verbal inflection, prepositions) have been featari-seal.
What interests us here, however, is the wayPPs have been analysed.
Thus, note that for allthe PPs in sentence (1), the system has been ableto find valency-bound syntactic functions (eithersubject or prepositional objec0.pobj /pmodPPip comp~om np/plowIn Dobj modlosning pp/ImllOd apI ip compT adjaf np effekt ivInproblem- 283 -Obj2:VdeltageO~3:Vkontrollere8IsubjnpInvirksomhedpobjPPeomplnp/plowInhandlingsprogramPformodPPIcomplcardptcard19908Isub jnpIKonuniaaionen conjunctnp/plowIob J lp~oo~'dnpIconjunctnp/plow.
nfinansieringpp np~bj/pm~d samarbeJde/ \/ \af virksomhederPP/ \/ \med industriConsequently, modifier interpretations have beendispreferred.
In the case of sentence (2) instead, thefinal PP has been analysed as a modifier, and thecorrect attachment has been found by the principle ofright-low attachment.
Note also that, still in (2), theverb "deltage" requires an obligatory prepositionalobject, and therefore this syntactic function has notbeen established by preference.
Finally, in (3) thecorrect attachment o f  the two PPs has been founddue to the combined effect of all three rules.SCORINGScoring is an important novelty proposed in ourStem to replace the rule ordering strategy in use inprevious Eurotra preference tool.
Whereasarbitrary decisions were made in the earlier tool incases of contradictory preference criteria andmul.tiple matches between a rule and two (sub)trees,scoring permits us to control the interaction of pre-ference rules in a declarative way.
However, there isa Iradeoff between the declarativeness permitted bya scoring system and the difficulty of finding theright sco~es for a p-rule set of nontrivial coverage.In this section we show how optimum p-rule scorescan be derived automatically.
Starting from a set ofp-rules and an initial set o f  objects ordered by theuser, the system tries to compute optimum values forthe p-rules in the set, on the assumption that theywill hold for different sets of objects.If Pi (i=l,...n) stands for the score of the i-thp-rule, then the j-th object is assigned a score Sjgiven by the following expression:(1) Sj = Plalj + p2a~ + ... + p,a~ (j=I,...N)where n is the number of existing p-rules, aij is aconstant equal to the number of times p-rule i hasapplied to object j and N is the number ofexmting objects.
In other words, Sj stands for thefinal score totalled by a given object after allpossible p-rules have applied to it as many timesas possible.To compute optimum scores, an.
arbi .W.ary highscore is assigned to the best object(s) m meinitial training corpus and a much lower one mthe rest.
The set of equations (1) is transtormeathen into an overdetermined system of N equa-tions with n unknowns - the p-rule scores - whereN can be greater than n. The set of equations (1)can be further decomposed and reformulatea sfollows:Find x~ (i--1,...n?l) such that,(2) xtav + x2a2, + ... + XnSnj " Xn+lS j  = 0 ,By comparing the set of equations (2) againstthe set (1), the following relation between mevalues of x i and p-rule scores is deduced:(3) Pi = x/xt~l)Therefore, we claim that problems (1) and (2)are equivalent.
Now, problem (.2) hasno exactsolution whenever N is greater man n. rtowever,it can be solved by converting it into a constraintoptimization problem whereby optimum scoresfor p-rules will emerge.
Thus the set of equations(2) is rearranged by introducing, the erro~ ej(i=l,...N) and by imposing mat me sum ol mlthese errors is minimum.
More precisely problem(2) takes now the following form:Find x~ (i=l,...n+l) such thatca2 + e= + ... +em ---> minimum- 284 -subject o the constraints(4) e i = xtali + x~%j + ... + x .~ - x~?iS i (j=I,...N)xt2 + x ,  +.
.
.
x( , ,  m = 1In the literature (cf.
\[Key & Marple 1981\] and\[Kunmr~an & Tufts 1982\]), one of the mostefficient techniques offered to the solution of theconstraint optimization problem (4) is called SingularValue Decomposition (SVD).
SVD provides anoptimum set of x~ (i=l,...n+l) which guaranteesminimum accumulated squared error.
Thus the valuesof the scores p~ (i=l,...n) are computed in a straight-forward way from the x~ (i=l,...n+l) using equation(3).Note that SVD is a non-linear optimization tech-nique which provides the best set of parameters fora given training corpus.
Therefore, it is " portant oapply it to a linguistically balanced corpus.
More-over, for the produced result to be reliable, theexisting number of equations N should be at leastfive to ten times bigger than the existing number ofp-rules n.Although SVD provides an optimum set of p-rulescores, there is no guarantee that these scores are allpositive.
However, since p-rules express positiveselection criteria, p-rnle scores must always bepositive: the following paragraph proposes anlterative algorithm which computes p-rule scoresguaranteeing their positiveness at the same time.The idea is that the set of SVD parameters xl(i=l,...n+l) and the N sets of parameters in thetraining corpus are uncorrelated sets, i.e.
they do notbelong to the same space section.
If the SVD solu-tion set x~ (i=l,...n+l) is also included in the trainingset, the new SVD solution yi (i=l,...n+l) of theaugmented training corpus willbe tmcorrelated toallthe sets in the corpus.
Consequently, Yi (i=l,...n+l)will also be uncorrelated to x L (i=l,...n+l).
Thismeans that not all the signs ofyi (i=l,...n+l) will beidentical to the signs of x~ (i=l,...n+l).
If the ycomponents are all positive or all negative, thealgorithm ends successfully and positive p-rulescores are computed via equation (3).
In all othercases, the set of y~ (i=l,...n+l) is also incorporated inthe training corpus and a new SVD solution z~(i=l,...n+l) is computed which is uncorrelated toboth x~ and Yi (i=l,...n+l).
The algorithm continuesin a similar way by checking whether the signs of z~(i=l,...n+l) are all the same or not: in the first casethe algorithm ends successfully; in the second casethe set of z~ (i=l,...n+l) is included in the corpus anda new SVD solution is computed.The algorithm will eventually come up with thedesirable set of parameters when all alternatives havebeen exhausted throughout the precedin~ iterations.The time of convergence varies relattve to thenumber of parameters or, equivalently, to the numberof p-rules, as well as the size of the training corpus.More precisely, the larger the number of p-rules, thelonger it takes for the algorithm to converge, on  theother hand, the larger the training corpus, the fasterthe time of convergence.
The obtained solution isoptimum given .the maposed constraint thai all p-rulescores are posinve.CONCLUSIONIt seems to us that two basic tendencies can beobserved in the literature with respect to thetreatment of preference.
On the one hand, pre-ference is conceived of as an essentially lingutsticor psycholinguistic principle or sum of principles(of.
the LFG approach m \[Ford et at.
1982\]);although it has important consequences for theparser, preference ts not directly connected to aspecific parsing method, on  the other nano,preference has been studied in the context ofparsing: in such Ireatments (el.
\[Pereira 1985\]),preference amounts to a deterministic procedure,which is not necessarily motivated by linguisticevidence.
In our approach preference isestablished on the basis of rules defined by theuser and applied by a post-processor.
We have infact focussed on a method to express lin-guistically meaningful, preference statementsrather than on a particular parsing strategy.
.
weare aware of the fact that, in a system whereparsing is seen as a constraint satisfactionproblem, preference criteria of the type we areinterested in can be treated on the same level asother linguistic constraints and used to resolveambiguity at parse time (of.
\[Van Henteryck1989\]).
However, such an approach would havemeant too radical a change to the underlyingEurotra formalism.In accordance with the general practice inEurotra, our preference mechanism does notplead allegiance to any specific linguistic theory.We have, however, been influenced by a theoreti-cal framework, namely the theory o f  preferencerule systems described in \[Jackendoff 1985\].According to this framework, preference can onlybeen decided on the basis of a number of criteria,and a preference mechanism is not based on adichotomy between correct and wrong results, buton a scale of degrees of acceptability.
One of_ourmain concerns m designing the system, in tact,has been allowing various and even contradictorycriteria to be combined in a declarative fashion.The use of scoring is in this sense crucial.The system has been implemented and suc-cessfully tested on real input which showedovergeneration due to PP and adverbial attach-ment, coordination, pronominal resolution andlexical ambiguity.
Some testing results are givenin the appendix.ACKNOWLEDGEMENTSThis work has been carried out by a groupconsisting of Paul Bennett (Eurowa-GB, Umist),Dieter Maas (EurotraDE, Saarbmecken), JuanCarlos Ruiz (Eurotra-ES, Barcellona) and theauthors of the present paper.We thank Bolette Pedersen (Eurotra-DK) whocontributed to the formulation of the p-grammarfor Danish.- 285 -APPENDIXTEST NUMBERNO.
OF SENTENCESi i1~1AVERAGE SENTENCE LENGTH IN WORDSgrammartypewith p-ruleswithout p-rulesFig.
1.no.
of I average analysesp-rules I no.
per sentenceaverage pu correctper sentence resultsiiiiiiiiii  !
iiii!iii!iilli i !ii !!!!i!
!i i !iii ; !iiiiii i!!
!iii iii iiiiiiiii  iiilj iiiil iiiii!iii   !i iiiiiiiFigure 1 shows the results obtained in a test carriedout by Eurotra-IT (Dima group).
The linguisticphenomena handled by p-rules included syntacticcompleteness check, ambiguity of semantic role~si .gnment for arguments, ambiguity of semanticm~_aing mr modifiers.
The experiment wasperformed on a Sparkstation I (16 MB core memory)REFERENCESA.Bech, B.Maegaard & A.Nygaard (1990), "TheEUROTRA MT Formalism '~, forthcoming inMachine Translation, ed.
Sergei Nirenburg.D.Fass & Y.Wilks (1983), "Preference Semantics,Ill-Formedness, and Metaphor", in Americal Journalof Comoutational Linguistics, vol.
'9, no.3-4, July--Dec.M.Ford et al (1982),,"A Competence-Based Theoryof Syntactic Closure', in J.Bresnan ed., The MentalRevcesentation f Grammatical Relation q~ The MITPress: Cambridge Mass.L.Frazier & J.D.Fodor (1978), "The SausageMachine: A New Two-Stage Parsing Model", mCognition, vol.6.Jackendoff (1985), Semantics and Cognition, MitPress: Cambridge, Mass.G.Hirst (1987), Semantic Interpretation and the,Resolution of Ambiguity, Cambridge UniversityPress: Cambridge.X.Huang (1988), "Semantic Analysis in XTRA?
AnEnglish-Chinese Machine Translation System, inComputers and Translation, vol.3, no.2.S.M.Key & S.L.Marple (1981), "SpectrumAnalysis - A Modem Perspective", m pro-ceedings of the IEEE, Vol.
69.R.Kamaresan & D.Tufts (1982), "Singular ValueDecomposition a d improved F,requency Estima-tion Using Linear Prediction, IEEE ASSP,vol.30, no.
4.G.Malnati & P,Paggio (1990), "The Eurotra UserLanguage", forthcoming in Machine Transitionand Natural .L,3nguage Processing, vol.2, C'F~,Luxembourg.P.Paggio (1988), "The Concept of PreferenceApplied to the Automatic Analysis of PPs andADVPs", in SA~,  Copenhagen.F.C.N.Pereira (1985), "A New Characterization fAttachment Preferences", inDowty et al, NaturalLanguage Parsing, Cambridge University Press:Cambridge,D.Petitpierre t al.
(1987), "A Model for Pre-ference", in Proceedings of the Third ACL Con-.ference, Copenhagen.A.Raw et al (1989), An Introduction to theEurotra Machine Translation System, inPapers in Natural l.~n.
guage Processing, no.I,Leuven.P.Van Henteryck (1989), Constraint Satisfactionin LoRic Programming, The MIT Press:Cambridge Mass.Y.Wilks & A.Herseovits (1977), "An IntelligentAnalyser and Generator for NaturalLanguage", in Computational and MathematicalLinguistics.
Leo S,Olschki Ed: Firenze.- 286 -
