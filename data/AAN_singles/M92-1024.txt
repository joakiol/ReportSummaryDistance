BBN:Description of the PLUM System as Used for MUC- 4Damaris Ayuso, Sean Boisen, Heidi Fox, Herb Gish, Robert Ingria, and Ralph Weischede lBBN Systems and Technologies10 Moulton StreetCambridge, MA 0213 8weisched@bbn.comBACKGROUNDTraditional approaches to the problem of extracting data from texts have emphasized hand-crafted linguisti cknowledge .
In contrast, BBN's PLUM system (Probabilistic Language Understanding Model) was developed a spart of a DARPA-funded research effort on integrating probabilistic language models with more traditionallinguistic techniques .
Our research and development goals are?
more rapid development of new applications,?
the ability to train (and re-train) systems based on user markings of correct and incorrect output,?
more accurate selection among interpretations when more than one is found, an d?
more robust partial interpretation when no complete interpretation can be found.A central assumption of our approach is that in processing unrestricted text for data extraction, a non-trivia lamount of the text will not be understood.
As a result, all components of PLUM are designed to operate on partiallyunderstood input, taking advantage of information when available, and not failing when information is unavailable .We had previously performed experiments on components of the system with texts from the Wall Stree tJournal, however, the MUC-3 task was the first end-to-end application of PLUM.
Very little hand-tuning ofknowledge bases was done for MUC-4 ; since MUC-3, the system architecture as depicted in figure 1 has remainedessentially the same.In addition to participating in MUC-4, since MUC-3 we focused on porting to new domains and a newlanguage, and on performing various experiments designed to control recall/precision tradeoffs .
To support thesegoals, the preprocessing component and the fragment combiner were made declarative; the semantics componentwas generalized to use probabilities on word senses ; we expanded our treatment of reference ; we enlarged the set ofsystem parameters at all levels ; and we created a new probabilistic classifier for text relevance which filtersdiscourse events .SYSTEM ARCHITECTUR EThe PLUM architecture is presented in Figure 1 .Preprocessin gThe input to the system is a file containing one or more messages .
The preprocessing module determinesmessage boundaries, identifies the header, and determines paragraph and sentence boundaries.
The specification ofthe input format is now a declarative component of the preprocessor, which enables us to easily digest messages i ndifferent formats.
This component has proved its utility in porting to two non-MUC formats in the last year .Morphological AnalysisThe first phase of the processing is assignment of part-of-speech information .
In BBN's Fast Partial Parser(FPP) [2], a bi-gram probability model, frequency models for known words (derived from large corpora), an dheuristics based on word endings for unknown words, assign part of speech to the highly ambiguous words of th ecorpus.
Since these predictions for unknown words were very inaccurate for input that is all upper case, w eaugmented this part-of-speech tagging with probabilistic models (automatically trained) for recognizing words o fSpanish origin and words of English origin .
This allowed us to tag new words that were actually Latin America nnames highly reliably .
The Spanish classifier uses a 5 character hidden Markov model, trained on about 30,00 0169words of Spanish text.
The five-gram model of words of English was derived from text from the Wall Stree tJournal .MessageI Preprocessor IP/ .
.
.P1?I an 'Probabilistic Part of Speech Tagge :rMIT Fast Parserfragment`fragment n,t~	 ISemantic Interpreterseln~.
.
.1Fragment Combinersent' 1I .
.
.IFigure 1.
PLUM System ArchitectureParsingThe FPP is a deterministic stochastic parser which does not attempt to generate a single syntactic interpretationof the whole sentence, rather, it generates one or more non-overlapping parse fragments spanning the inpu tsentence, deferring difficult decisions on attachment ambiguities .
FPP produces an average of seven fragments forsentences of the complexity seen in the MUC-4 corpus' .Here are the 8 parse fragments generated by FPP for the first sentence of TST2-MUC4-0048 :("SALVADORAN PRESIDENT-ELECT ALFREDO CRISTIANI CONDEMNED THE TERRORIST KILLING O FATTORNEY GENERAL ROBERTO GARCIA ALVARADO "'This number is inflated due to the fact that sentence-final punctuation always appears as a separate fragment, an dthe fact that commas frequently appear as isolated fragments .Probabilistic Spanishame MoGrammar Rulesn"1	 1Discourse Moduleevent ' event mI1Template Fille r1Itemplate 1?
?
?
template m'Qpplicatioonstraints170(s(NP (NP (ADJP (ADJ "SALVADORAN") )(N "PRESIDENT-ELECT") )(NP (N "ALFREDO" "CRISTIANI")) )(VP (AUX )(VP (V "CONDEMNED")(NP (DETERMINER 'THE" )(N 'TERRORIST" )(N "KILLING") )(PP (PREP "OF")(NP (NP (N "ATTORNEY GENERAL"))(N (NAME "ROBERTO") (NAME "GARCIA") (NAME "ALVARADO")))))))))("AND" (CONJ "AND"))("ACCUSED THE FARABUNDO MARTI NATIONAL LIBERATION FRONT"(VP (AUX)(VP (V "ACCUSED" )(NP (DETERMINER 'THE" )(N "FARABUNDO""MARTI"'NATIONAL""LIBERATION""FRONT")))) )(PUNCT "("))("FMLN" (NP (N "FMLN")))(")" (PUNCT ")"))("OF THE CRIME" (PP (PREP "OF" )(NP (DETERMINER 'THE")(N "CRIME"))) )C ."
(PUNCT " .
"))Semantic InterpreterThe semantic interpreter operates on each fragment produced by FPP in a bottom-up, compositional fashion .Throughout the system, defaults are provided so that missing semantic information or rules do not produce errors ,but simply mark semantic elements or relationships as unknown .
This is consistent with our belief that partialunderstanding has to be a key element of text processing systems, and missing data has to be regarded as a normalevent .
The semantic component encompasses both lexical semantics and semantic rules .
The semantic lexicon isseparate from the parses lexicon and has much less coverage.We used an automatic case frame induction procedure to construct an initial version of the lexicon [2] .
Wordsenses of the semantic lexicon have probability assignments, which we plan to derive automatically from corpora .For MUC-4, probabilities were assigned so each word sense is more probable than the next sense of the word a sentered in the lexicon.Lexical semantic entries indicate the word's semantic type (a domain model concept), as well as predicate spertaining to it.
For example, here is the lexical semantics for the verb BOMB :(defverb "BOMB" ( BOMB-V-1 BOMBING(:case (subject PEOPLE TI-PERP-OF) (object ANYTYPE OBJECT-OF))) )This entry indicates that the type is BOMBING, that a subject argument whose type is PEOPLE should be giventhe role TI-PERP-OF, and that an object argument of any type should be given the role OBJECT-OF .
BOMB-V- 1is the unique identifier of this (only) word sense.The semantic rules are based on general syntactic patterns, using wildcards and similar mechanisms to providean extra measure of robustness .
The basic elements of our semantic representation are "semantic forms", each ofwhich introduces a variable (e .g.
?
13) with a type and a collection of predicates pertaining to that variable .There are three basic types of semantic forms: entities of the domain, events, and states of affairs .
Each ofthese three can be further categorized as known, unknown, and referential.
Entities correspond to the people, places ,things, and time intervals of the domain .
These are related in important ways, such as through events (who did wha tto whom) and states of affairs (properties of the entities) .
Entity descriptions typically arise from noun phrases;events and states of affairs may be described in clauses .Not everything that is represented in the semantics has actually been understood.
For example, the predicate171PP-MODIFIER indicates that two entities (expressed as noun phrases) are connected via a certain preposition .
In thisway, we have a "placeholder" for the information that a certain structural relation holds between these two items ,even though we do not know what the actual semantic relation is .
Sometimes understanding the relation more full yis of no consequence, since the information does not contribute to the template-filling task .
The information i smaintained, however, so that later expectation-driven processing can use it if necessary .Here is a semantic rule which handles, for example, "group ofbusinessmen " , "murder of a man", and "terrorist sof the FMLN " :For an NP dominating an NP1, and a PP whose PREP is "OF" and which dominates NP2 :If NP1 is in ("GROUP, "BAND" ); return semantics of NP2If NP1 is an EVENT of type TERRORIST; make NP2 the OBJECT-OF NP1 ; return new NP1 semIf type of NP1 is PEOPLE and type ofNP2 is ORGANIZATION, merge semantics, showing that NP1BELONGS-TO NP2; otherwise use a more general NP => NP PP ruleAn important consequence of the fragmentation produced by FPP is that top-level constituents are typicallymore shallow and less varied than full sentence parses.
As a result, more semantics coverage was obtained early onin the development process with few semantic rules than would have been expected if the system had had to coverwidely varied syntactic structures before producing any semantic structures .
In this way, semantic coverage can beadded gradually, while the rest of the system is progressing in parallel.After having assigned semantic representations to the fragments produced by FPP, it is often possible to mak esome of the attachment decisions which had been deferred.
For example, it is possible to combine two NPs o fcompatible semantic types that are conjoined, or attach prepositional phrases preferentially, using informatio nautomatically derived from a corpus [7] .
Our basic system uses fragment combination for certain proper nam econstructions, while some of our submitted optional runs used more extensive patterns for fragment combination .Figure 2 shows a graphical version of the semantics generated for the first fragment of S1 in TST2-MUC4-0048 .
Inthis example note the UNKNOWN-EVENT created for the main verb "CONDEMNED", which has no lexica lsemantics in our system, but still generates a useful semantic representation .ENTITY -- PERSONname-of : "ALFREDO CRISTIANI "description-of: "SALVADORAN PRESIDENT-ELEC TALFREDO CRISTIANI"social-role-of: POLITICA L_LT-modifier:UNKNOWN VENT -- UNKNOWN-SITUATIO Nunknown-role:_~,~.
?~'~"pp-modifier : "OF"unknown-role:EVENT -- MURDERn-modifier :description-of: "THE TERRORIST KILLING "det : "THE"UNKNOWN-ENTITY -- UNKNOWN-THINGdescription-of: "SALVADORA NPRESIDENT-ELECT "national-origin-of: -ENTITY ?
COUNTRYname-of: "EL SALVADOR "ENTITY -- PERSONname-of : "ROBERTO GARCIA ALVARADO "description-of: "ROBERTO GARCIA ALVARADO "title-of: "ATTORNEY GENERAL"social-role-of: GOVERNMENT-SOCIAL-ROL EENTITY -- PERSONsocial-role-of: TERRORISMrFigure 2: Example Semantic Representation for "SALVADORAN PRESIDENT-ELECT ALFREDO CRISTIANICONDEMNED THE TERRORIST KILLING OF ATTORNEY GENERAL ROBERTO GARCIA ALVARADO "172Discourse ProcessingThe discourse component of PLUM performs the operations necessary to construct event objects correspondingto relevant events in the message .
Each event object in the discourse event structure is similar in principle to th enotion of a "frame", with its corresponding "slots" or fields .
The semantic representation of an event in the text onl yincludes information contained locally in a fragment (after fragment combination); in creating corresponding even tobjects, the discourse module must infer other long-distance or indirect relations not explicitly found by th einterpreter, and resolve any references in the text .
The template generator then uses the structures created by th ediscourse component to generate the final templates .
Currently only terrorist incidents (and "possible terroristincidents") generate discourse events, since these are the core events for MUC-4 template generation .
Thediscourse component was further discussed in [1] .
Two primary structures are created by the discourse processo rwhich are used by the template generator : the discourse predicate database and the event structure .
The databasecontains all the predicates mentioned in the semantic representation of the message .
When references are resolved ,corresponding semantic variables are unified in the database .
Any other inferences done by the discourse componen talso get added to the database.To create the discourse event structure, the discourse component processes each semantic form produced by theinterpreter, adding its information to the database and performing reference resolution when needed .
Pronouns andperson-type anaphoric definite NPs may be resolved.
In addition, set- and member-type reference is also treated inother simpler domains.
Some intra-sentential structural constraints on reference are enforced.
When a semantic formfor an event of interest is encountered, a discourse event is generated, and any slots already found by the interprete rare filled in the event.
This event is then merged with a previous event if they are compatible .
This heuristicassumes that the events were possibly derived from repeated references to a single real event .Once all the semantic forms have been processed, heuristic rules are applied to fill in any unfilled slots bylooking at text surrounding the forms which triggered a given event.
Each filler found is assigned a score based onwhere it was found in relation to an event trigger, indicating a higher confidence for fillers found closer to a trigger.Following is the discourse event structure for the first event in TST2-MUC4-0048 :Event MURDERTrigger fragments:"SALVADORAN PRESIDENT-ELECT ALFREDO CRISTIANI CONDEMNED THE TERRORIS TKILLING OF ATTORNEY GENERAL ROBERTO GARCIA ALVARADO""GARCIA ALVARADO, 56, WAS KILLED "'TTS FRONT GROUPS ARE RESPONSIBLE FOR THE IRRATIONA LVIOLENCE THAT KILLED ATTORNEY GENERAL GARCIA "TI-PERP-OF: 'ITS FRONT GROUPS" (score = 1)'TT" (score = 1) <=> "THE FMLN""URBAN GUERRILLAS" (score = 2)EVENT-TIME-OF :"JUNE 1" (score = 6)EVENT-LOCATION-OF:"DOWNTOWN SAN SALVADOR" (score = 2)"EL SALVADOR" (score = 2 )TI-INSTRUMENT-OF:"A BOMB" (score = 2)OBJECT-OF :"ATTORNEY GENERAL ROBERTO GARCIA ALVARADO" (score = 0)"PRESIDENT OF THE LEGISLATIVE" (score = 2)"AN ARENA LEADER" (score = 2)Each trigger fragment contains one or more words whose semantics triggered this event .
In the example above ,a score of 0 indicates the filler was found directly by the semantics ; 1 that it was found in the same fragment as atrigger semantic form ; 2 in the same sentence ; 4 in the same paragraph; and 6 in an adjacent paragraph .Template GenerationThe template generator takes the event structure produced by discourse processing and fills out the application -specific templates.
Clearly much of this process is governed by the specific requirements of the application ,considerations which have little to do with linguistic processing.
The template generator must address any arbitrar yconstraints, as well as deal with the basic details of formatting .173The template generator uses a combination of data-driven and expectation-driven strategies .
First theinformation in the event structure is used to produce initial values .
At this point, values which should be filled i nbut are not available in the event structure are supplied from defaults, either from the header (e .g ., date and locationinformation) or from reasonable guesses (e.g.
that the object of a murder is usually a suitable filler for the huma ntarget slot when the semantic type of the object is unknown).We expect to eventually use a classifier at this stage of processing.
This is especially appropriate for templateslots with a set list of possible fillers, e .g .
perpetrator confidence, category of incident, etc.Text RelevanceA new classifier for determining text relevance is now a component of PLUM .
It may be utilized by oursystem to filter out a discourse event object when none of the phrases that gave rise to it is found in a paragraphclassified as relevant .
Since the event objects are the input lo the template generator, it serves effectively as a filte ron templates .The text classifier uses a probabilistic model to perform a binary classification .
The features used by the modelare stemmed words .
The text classifier is trained automatically from two sets of text representing the categories ofthe classifier (i .e .
relevant and irrelevant).
A chi-square test is used to determine which words are good indicators ofmembership on one category but not the other.
These words become the features of the probabilistic model.
A logprobability representing the likelihood of the word occurring in text of one type or the other is assigned to eac hword.
It is this probability that is used in the classification process.When a piece of text is to be classified, it is scanned for occurrences of the word features selected durin gtraining.
Summing the log probabilities of all the evidence found in the text gives a measure of the likelihood thatthe text is a member of a particular category.
The sum is then compared to a user-selected threshold to determinethe classification.
Different thresholds produce different recall and precision values, allowing the user to tune theclassifier for high recall, high precision, or something in between .
Several of our optional runs showing a widerange of recall-precision tradeoffs were obtained by varying the classifier threshold.Parameters in PLUMAn important feature of PLUM is that many aspects of its behavior can be controlled by simply varying th evalues of system parameters .
An important goal has been to make our system as "parameterizable" as possible, sothat the same software can meet different demands for recall, precision, and overgeneration .
PLUM has parametersto control, for example, some aspects of fragment combination, event merging and slot filling by discourse, an drelevance assignment by the classifier .
In order to pick which system configuration to use for our required MUC- 4run, we tested more than 25 configurations on two test sets and one training set.
Maximal F-scores were obtainedwith settings for aggressively merging events, conservatively looking for slot fillers, and a classifier threshold onrelevance of 1 .TEMPLATES FOR EXAMPLE MESSAGE0 .
MESSAGE: ID1.
MESSAGE: TEMPLAT E2.
INCIDENT : DATE3.
INCIDENT : LOCATION4.
INCIDENT : TYPE5.
INCIDENT : STAGE OF EXECUTION6.
INCIDENT: INSTRUMENT ID7.
INCIDENT: INSTRUMENT TYPE8.
PERP: INCIDENT CATEGORY9.
PERP: INDIVIDUAL I D10.
PERP: ORG ID11.
PERP: ORG CONFIDENC E12.
PHYS TGT : ID13.
PHYS TGT : TYP E14.
PHYS TGT: NUMBER15.
PHYS TGT: FOREIGN NATION16.
PHYS TGT: EFFECT OF INCIDENTTST2-MUC4-0048101 JUN 88EL SALVADOR : SAN SALVADOR (CITY)ATTAC KACCOMPLISHED"A BOMB "BOMB: "A BOMB "TERRORIST ACTITS FRONT GROUPS "REPORTED AS FACT: "FMLN"17417.PHYS TGT : TOTAL NUMBER18.HUM TGT: NAME19.HUM TGT: DESCRIPTION20.HUM TGT: TYPE21.HUM TGT: NUMBER22.HUM TGT: FOREIGN NATION23.HUM TGT: EFFECT OF INCIDENT24.HUM TGT: TOTAL NUMBER"ROBERTO GARCIA ALVARADO ""ATTORNEY GENERAL": "ROBERTO GARCIA ALVARADO "GOVERNMENT OFFICIAL: "ROBERTO GARCIA ALVARADO"1 : "ROBERTO GARCIA ALVARADO"DEATH : "ROBERTO GARCIA ALVARADO "TST2-MUC4-00482-19APR89EL SALVADOR: SAN SALVADOR (CITY)BOMBINGACCOMPLISHED'THE BOMB ""EXPLOSIVES "BOMB: 'THE BOMB "EXPLOSIVE: "EXPLOSIVES "TERRORIST ACT"GUERRILLAS""FMLN "REPORTED AS FACT: "FMLN""MERINO'S HOME"CIVILIAN RESIDENCE : "MERINO'S HOME "1 : "MERINO'S HOME"?
We correctly identified the 2 events of interest Merino's murder and the attack on Merino's home.?
We found the correct instruments (though we overgenerated "EXPLOSIVES" in template 2).?
We filled the location, stage of execution, incident category, perpetrator organization correctly in both templates .?
We found the correct perpetrator individual ID in template 2 (and one could argue also in template 1) .However.?
We picked up the wrong dates.
?Our conservative heuristics for picking up multiple targets did not find more than one correct target in thes etemplates .ACKNOWLEDGEMENTSThe work reported here was supported in part by the Defense Advanced Research Projects Agency and wa smonitored by Rome Laboratory under Contract No .
F30602-91-C-0051 .
The views and conclusions contained i nthis document are those of the authors and should not be interpreted as necessarily representing the official policies ,either expressed or implied, of the Defense Advanced Research Projects Agency or the United States Government .REFERENCES[1] Iwanska, et.al ., "Computational Aspects of Discourse in the Context of MUC-3", Proceedings of the ThirdMessage Understanding Conference (MUC-3), May 1991 .0 .
MESSAGE : ID1.
MESSAGE: TEMPLATE2.
INCIDENT : DATE3.
INCIDENT: LOCATION4.
INCIDENT: TYPE5.
INCIDENT: STAGE OF EXECUTION6.
INCIDENT: INSTRUMENT ID7.
INCIDENT: INSTRUMENT TYPE8.
PERP : INCIDENT CATEGORY9.
PERP : INDIVIDUAL ID10.PERP: ORG ID11.PERP: ORG CONFIDENCE12.PHYS TGT: ID13.PHYS TGT : TYPE14.PHYS TGT: NUMBER15.PHYS TGT : FOREIGN NATION16.PHYS TGT: EFFECT OF INCIDENT17.PHYS TGT: TOTAL NUMBE R18.HUM TGT : NAME19.HUM TGT: DESCRIPTION20, HUM TGT: TYPE21.HUM TGT: NUMBER22.HUM TGT : FOREIGN NATION23.HUM TGT : EFFECT OF INCIDENTDEATH : "-"24.HUM TGT : TOTAL NUMBERDESTROYED : "MERINO'S HOME "175[2] Weischedel, R., Ayuso, D. M., Bobrow, R ., Boisen, S., Ingria, R., and Palmucci, J.
"Partial Parsing, AReport on Work in Progress " , Proceedings of the Fourth DARPA Speech and Natural Language Workshop ,February 1991 .176
