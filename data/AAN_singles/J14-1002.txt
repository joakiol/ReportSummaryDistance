Frame-Semantic ParsingDipanjan Das?Google Inc.Desai Chen?
?Massachusetts Institute of TechnologyAndre?
F. T. Martins?Priberam LabsInstituto de Telecomunicac?o?esNathan Schneider?Carnegie Mellon UniversityNoah A. Smith?Carnegie Mellon UniversityFrame semantics is a linguistic theory that has been instantiated for English in the FrameNetlexicon.
We solve the problem of frame-semantic parsing using a two-stage statistical modelthat takes lexical targets (i.e., content words and phrases) in their sentential contexts andpredicts frame-semantic structures.
Given a target in context, the first stage disambiguates it to asemantic frame.
This model uses latent variables and semi-supervised learning to improve framedisambiguation for targets unseen at training time.
The second stage finds the target?s locallyexpressed semantic arguments.
At inference time, a fast exact dual decomposition algorithmcollectively predicts all the arguments of a frame at once in order to respect declaratively statedlinguistic constraints, resulting in qualitatively better structures than na?
?ve local predictors.Both components are feature-based and discriminatively trained on a small set of annotatedframe-semantic parses.
On the SemEval 2007 benchmark data set, the approach, along with aheuristic identifier of frame-evoking targets, outperforms the prior state of the art by significantmargins.
Additionally, we present experiments on the much larger FrameNet 1.5 data set.
Wehave released our frame-semantic parser as open-source software.?
Google Inc., New York, NY 10011.
E-mail: dipanjand@google.com.??
Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology,Cambridge, MA 02139.
E-mail: desaic@csail.mit.edu.?
Alameda D. Afonso Henriques, 41 - 2.?
Andar, 1000-123, Lisboa, Portugal.
E-mail: atm@priberam.pt.?
School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213.E-mail: nschneid@cs.cmu.edu.?
School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213.E-mail: nasmith@cs.cmu.edu.Submission received: 4 May 2012; revised submission received: 10 November 2012; accepted for publication:22 December 2012.doi:10.1162/COLI a 00163?
2014 Association for Computational LinguisticsComputational Linguistics Volume 40, Number 11.
IntroductionFrameNet (Fillmore, Johnson, and Petruck 2003) is a linguistic resource storing consider-able information about lexical and predicate-argument semantics in English.
Groundedin the theory of frame semantics (Fillmore 1982), it suggests?but does not formallydefine?a semantic representation that blends representations familiar from word-sensedisambiguation (Ide and Ve?ronis 1998) and semantic role labeling (SRL; Gildea andJurafsky 2002).
Given the limited size of available resources, accurately producingrichly structured frame-semantic structures with high coverage will require data-driventechniques beyond simple supervised classification, such as latent variable modeling,semi-supervised learning, and joint inference.In this article, we present a computational and statistical model for frame-semanticparsing, the problem of extracting from text semantic predicate-argument structuressuch as those shown in Figure 1.
We aim to predict a frame-semantic representationwith two statistical models rather than a collection of local classifiers, unlike earlier ap-proaches (Baker, Ellsworth, and Erk 2007).
We use a probabilistic framework that cleanlyintegrates the FrameNet lexicon and limited available training data.
The probabilisticframework we adopt is highly amenable to future extension through new features, morerelaxed independence assumptions, and additional semi-supervised models.Carefully constructed lexical resources and annotated data sets from FrameNet,detailed in Section 3, form the basis of the frame structure prediction task.
We de-compose this task into three subproblems: target identification (Section 4), in whichframe-evoking predicates are marked in the sentence; frame identification (Section 5),in which the evoked frame is selected for each predicate; and argument identification(Section 6), in which arguments to each frame are identified and labeled with a role fromthat frame.
Experiments demonstrating favorable performance to the previous state ofthe art on SemEval 2007 and FrameNet data sets are described in each section.
Somenovel aspects of our approach include a latent-variable model (Section 5.2) and a semi-supervised extension of the predicate lexicon (Section 5.5) to facilitate disambiguation ofwords not in the FrameNet lexicon; a unified model for finding and labeling argumentsFigure 1An example sentence from the annotations released as part of FrameNet 1.5 with three targetsmarked in bold.
Note that this annotation is partial because not all potential targets have beenannotated with predicate-argument structures.
Each target has its evoked semantic framemarked above it, enclosed in a distinct shape or border style.
For each frame, its semantic rolesare shown enclosed within the same shape or border style, and the spans fulfilling the roles areconnected to the latter using dotted lines.
For example, manner evokes the CONDUCT frame, andhas the AGENT and MANNER roles fulfilled by Austria and most un-Viennese, respectively.10Das et al.
Frame-Semantic Parsing(Section 6) that diverges from prior work in semantic role labeling; and an exact dualdecomposition algorithm (Section 7) that collectively predicts all the arguments of aframe together, thereby incorporating linguistic constraints in a principled fashion.Our open-source parser, named SEMAFOR (Semantic Analyzer of Frame Represen-tations)1 achieves the best published results to date on the SemEval 2007 frame-semanticstructure extraction task (Baker, Ellsworth, and Erk 2007).
Herein, we also presentresults on newly released data with FrameNet 1.5, the latest edition of the lexicon.Some of the material presented in this article has appeared in previously publishedconference papers: Das et al.
(2010) presented the basic model, Das and Smith (2011)described semi-supervised lexicon expansion, Das and Smith (2012) demonstrated asparse variant of lexicon expansion, and Das, Martins, and Smith (2012) presented thedual decomposition algorithm for constrained joint argument identification.
We presenthere a synthesis of those results and several additional details:1.
The set of features used in the two statistical models for frame identification andargument identification.2.
Details of a greedy beam search algorithm for argument identification that avoidsillegal argument overlap.3.
Error analysis pertaining to the dual decomposition argument identification algo-rithm, in contrast with the beam search algorithm.4.
Results on full frame-semantic parsing using graph-based semi-supervised learn-ing with sparsity-inducing penalties; this expands the small FrameNet predicatelexicon, enabling us to handle unknown predicates.Our primary contributions are the use of efficient structured prediction tech-niques suited to shallow semantic parsing problems, novel methods in semi-supervisedlearning that improve the lexical coverage of our parser, and making frame-semanticstructures a viable computational semantic representation usable in other languagetechnologies.
To set the stage, we next consider related work in the automatic predictionof predicate-argument semantic structures.2.
Related WorkIn this section, we will focus on previous scientific work relevant to the problem offrame-semantic parsing.
First, we will briefly discuss work done on PropBank-stylesemantic role labeling, following which we will concentrate on the more relevant prob-lem of frame-semantic structure extraction.
Next, we review previous work that hasused semi-supervised learning for shallow semantic parsing.
Finally, we discuss priorwork on joint structure prediction relevant to frame-semantic parsing.2.1 Semantic Role LabelingSince Gildea and Jurafsky (2002) pioneered statistical semantic role labeling, therehas been a great deal of computational work using predicate-argument structuresfor semantics.
The development of PropBank (Kingsbury and Palmer 2002), followedby CoNLL shared tasks on semantic role labeling (Carreras and Ma`rquez 2004,2005) boosted research in this area.
Figure 2(a) shows an annotation from PropBank.PropBank annotations are closely tied to syntax, because the data set consists of the1 See http://www.ark.cs.cmu.edu/SEMAFOR.11Computational Linguistics Volume 40, Number 1(a)(b)Figure 2(a) A phrase-structure tree taken from the Penn Treebank and annotated with PropBankpredicate-argument structures.
The verbs created and pushed serve as predicates in thissentence.
Dotted arrows connect each predicate to its semantic arguments (bracketed phrases).
(b) A partial depiction of frame-semantic structures for the same sentence.
The words in boldare targets, which instantiate a (lemmatized and part-of-speech?tagged) lexical unit and evokea semantic frame.
Every frame annotation is shown enclosed in a distint shape or border style,and its argument labels are shown together on the same vertical tier below the sentence.See text for explanation of abbreviations.phrase-structure syntax trees from the Wall Street Journal section of the Penn Treebank(Marcus, Marcinkiewicz, and Santorini 1993) annotated with predicate-argumentstructures for verbs.
In Figure 2(a), the syntax tree for the sentence is marked withvarious semantic roles.
The two main verbs in the sentence, created and pushed, arethe predicates.
For the former, the constituent more than 1.2 million jobs serves as thesemantic role ARG1 and the constituent In that time serves as the role ARGM-TMP.
Similarlyfor the latter verb, roles ARG1, ARG2, ARGM-DIR, and ARGM-TMP are shown in the figure.PropBank defines core roles ARG0 through ARG5, which receive different interpretationsfor different predicates.
Additional modifier roles ARGM-* include ARGM-TMP (temporal)and ARGM-DIR (directional), as shown in Figure 2(a).
The PropBank representationtherefore has a small number of roles, and the training data set comprises some40,000 sentences, thus making the semantic role labeling task an attractive one from theperspective of machine learning.There are many instances of influential work on semantic role labeling usingPropBank conventions.
Pradhan et al.
(2004) present a system that uses support vectormachines (SVMs) to identify the arguments in a syntax tree that can serve as semanticroles, followed by classification of the identified arguments to role names via a collectionof binary SVMs.
Punyakanok et al.
(2004) describe a semantic role labeler that uses inte-ger linear programming for inference and uses several global constraints to find the best12Das et al.
Frame-Semantic Parsingsuited predicate-argument structures.
Joint modeling for semantic role labeling withdiscriminative log-linear models is presented by Toutanova, Haghighi, and Manning(2005), where global features looking at all arguments of a particular verb together areincorporated into a dynamic programming and reranking framework.
The Computa-tional Linguistics special issue on semantic role labeling (Ma`rquez et al.
2008) includesother interesting papers on the topic, leveraging the PropBank conventions for labelingshallow semantic structures.
Recently, there have been initiatives to predict syntacticdependencies as well as PropBank-style predicate-argument structures together usingone joint model (Surdeanu et al.
2008; Hajic?
et al.
2009).Here, we focus on the related problem of frame-semantic parsing.
Note from theannotated semantic roles for the two verbs in the sentence of Figure 2(a) that it isunclear what the core roles ARG1 or ARG2 represent linguistically.
To better understandthe roles?
meaning for a given verb, one has to refer to a verb-specific file provided alongwith the PropBank corpus.
Although collapsing these verb-specific core roles into tagsARG0-ARG5 leads to a small set of classes to be learned from a reasonable sized corpus,analysis shows that the roles ARG2?ARG5 serve many different purposes for differentverbs.
Yi, Loper, and Palmer (2007) point out that these four roles are highly overloadedand inconsistent, and they mapped them to VerbNet (Schuler 2005) thematic roles toget improvements on the SRL task.
Recently, Bauer and Rambow (2011) presenteda method to improve the syntactic subcategorization patterns for FrameNet lexicalunits using VerbNet.
Instead of working with PropBank, we focus on shallow semanticparsing of sentences in the paradigm of frame semantics (Fillmore 1982), to which weturn next.2.2 Frame-Semantic ParsingThe FrameNet lexicon (Fillmore, Johnson, and Petruck 2003) contains rich linguisticinformation about lexical items and predicate-argument structures.
A semantic framepresent in this lexicon includes a list of lexical units, which are associated wordsand phrases that can potentially evoke it in a natural language utterance.
Each framein the lexicon also enumerates several roles corresponding to facets of the scenariorepresented by the frame.
In a frame-analyzed sentence, predicates evoking framesare known as targets, and a word or phrase filling a role is known as an argument.Figure 2(b) shows frame-semantic annotations for the same sentence as in Figure 2(a).
(In the figure, for example, the CARDINAL NUMBERS frame, ?M?
denotes the role Multiplierand ?E?
denotes the role Entity.)
Note that the verbs created and pushed evoke the framesINTENTIONALLY CREATE and CAUSE CHANGE POSITION ON A SCALE, respectively.
The correspond-ing lexical units2 from the FrameNet lexicon, create.V and push.V, are also shown.The PropBank analysis in Figure 2(a) also has annotations for these two verbs.
WhilePropBank labels the roles of these verbs with its limited set of tags, the frame-semantic parse labels each frame?s arguments with frame-specific roles shown in thefigure, making it immediately clear what those arguments mean.
For example, for theINTENTIONALLY CREATE frame, more than 1.2 million jobs is the Created entity, and In that time isthe Time when the jobs were created.
FrameNet also allows non-verbal words and phrasesto evoke semantic frames: in this sentence, million evokes the frame CARDINAL NUMBERSand doubles as its Number argument, with 1.2 as Multiplier, jobs as the Entity being quantified,and more than as the Precision of the quantity expression.2 See Section 5.1 for a detailed description of lexical units.13Computational Linguistics Volume 40, Number 1EVENTPlaceTimeEventTRANSITIVE_ACTIONAgentPatientEventCausePlaceTimeOBJECTIVE_INFLUENCEDependent_entityuencing_situationPlaceTimeuencing_entityCAUSE_TO_MAKE_NOISEAgentSound_makerCausePlaceTimeMAKE_NOISENoisy_eventSoundSound_sourcePlaceTimecough.v, gobble.v,hiss.v, ring.v, yodel.v, ...blare.v, honk.v, play.v,ring.v, toot.v, ...?affect.v, effect.n,impact.n, impact.v, ...event.n, happen.v,occur.v, take place.v, ...Inheritance relation Causative_of relationExcludes relationPurposeFigure 3Partial illustration of frames, roles, and lexical units related to the CAUSE TO MAKE NOISE frame,from the FrameNet lexicon.
Core roles are filled bars.
Non-core roles (such as Place and Time) areunfilled bars.
No particular significance is ascribed to the ordering of a frame?s roles in itslexicon entry (the selection and ordering of roles above is for illustrative convenience).CAUSE TO MAKE NOISE defines a total of 14 roles, many of them not shown here.Whereas PropBank contains verbal predicates and NomBank (Meyers et al.
2004) con-tains nominal predicates, FrameNet counts these as well as allowing adjectives, adverbs,and prepositions among its lexical units.
Finally, FrameNet frames organize predicatesaccording to semantic principles, both by allowing related terms to evoke a commonframe (e.g., push.V, raise.V, and growth.N for CAUSE CHANGE POSITION ON A SCALE) and bydefining frames and their roles within a hierarchy (see Figure 3).
PropBank does notexplicitly encode relationships among predicates.Most early work on frame-semantic parsing has made use of the exemplar sentencesin the FrameNet corpus (see Section 3.1), each of which is annotated for a single frameand its arguments.
Gildea and Jurafsky (2002) presented a discriminative model forarguments given the frame; Thompson, Levy, and Manning (2003) used a generativemodel for both the frame and its arguments.
Fleischman, Kwon, and Hovy (2003) firstused maximum entropy models to find and label arguments given the frame.
Shi andMihalcea (2004) developed a rule-based system to predict frames and their argumentsin text, and Erk and Pado?
(2006) introduced the Shalmaneser tool, which uses naiveBayes classifiers to do the same.
Other FrameNet SRL systems (Giuglea and Moschitti2006, for instance) have used SVMs.
Most of this work was done on an older, smallerversion of FrameNet, containing around 300 frames and fewer than 500 unique semanticroles.
Unlike this body of work, we experimented with the larger SemEval 2007 sharedtask data set, and also the newer FrameNet 1.5,3 which lists 877 frames and 1,068 roletypes?thus handling many more labels, and resulting in richer frame-semantic parses.Recent work in frame-semantic parsing?in which sentences may contain multipleframes which need to be recognized along with their arguments?was undertakenas the SemEval 2007 task 19 of frame-semantic structure extraction (Baker, Ellsworth,and Erk 2007).
This task leveraged FrameNet 1.3, and also released a small corpus3 Available at http://framenet.icsi.berkeley.edu as of 19 January 2013.14Das et al.
Frame-Semantic Parsingcontaining a little more than 2,000 sentences with full text annotations.
The LTH systemof Johansson and Nugues (2007), which we use as our baseline (Section 3.4), had thebest performance in the SemEval 2007 task in terms of full frame-semantic parsing.Johansson and Nugues broke down the task as identifying targets that could evokeframes in a sentence, identifying the correct semantic frame for a target, and finallydetermining the arguments that fill the semantic roles of a frame.
They used a seriesof SVMs to classify the frames for a given target, associating unseen lexical items toframes and identifying and classifying token spans as various semantic roles.
Boththe full text annotation corpus as well as the FrameNet exemplar sentences wereused to train their models.
Unlike Johansson and Nugues, we use only the full textannotated sentences as training data, model the whole problem with only two statis-tical models, and obtain significantly better overall parsing scores.
We also model theargument identification problem using a joint structure prediction model and use semi-supervised learning to improve predicate coverage.
We also present experiments onrecently released FrameNet 1.5 data.In other work based on FrameNet, Matsubayashi, Okazaki, and Tsujii (2009) in-vestigated various uses of FrameNet?s taxonomic relations for learning generalizationsover roles; they trained a log-linear model on the SemEval 2007 data to evaluate featuresfor the subtask of argument identification.
Another line of work has sought to extendthe coverage of FrameNet by exploiting VerbNet and WordNet (Shi and Mihalcea2005; Giuglea and Moschitti 2006; Pennacchiotti et al.
2008) and by projecting entriesand annotations within and across languages (Boas 2002; Fung and Chen 2004; Padoand Lapata 2005; Fu?rstenau and Lapata 2009b).
Others have explored the applicationof frame-semantic structures to tasks such as information extraction (Moschitti,Morarescu, and Harabagiu 2003; Surdeanu et al.
2003), textual entailment (Burchardtand Frank 2006; Burchardt et al.
2009), question answering (Narayanan and Harabagiu2004; Shen and Lapata 2007), and paraphrase recognition (Pado?
and Erk 2005).2.3 Semi-Supervised MethodsAlthough there has been a significant amount of work in supervised shallow semanticparsing using both PropBank- and FrameNet-style representations, a few improve-ments over vanilla supervised methods using unlabeled data are notable.
Fu?rstenau andLapata (2009b) present a method of projecting predicate-argument structures from someseed examples to unlabeled sentences, and use a linear program formulation to findthe best alignment explaining the projection.
Next, the projected information as wellas the seeds are used to train statistical model(s) for SRL.
The authors ran experimentsusing a set of randomly chosen verbs from the exemplar sentences of FrameNet andfound improvements over supervised methods.
In an extension to this work, Fu?rstenauand Lapata (2009a) present a method for finding examples for unseen verbs using agraph alignment method; this method represents sentences and their syntactic analysisas graphs and graph alignment is used to project annotations from seed examples tounlabeled sentences.
This alignment problem is again modeled as a linear program.Fu?rstenau and Lapata (2012) present an detailed expansion of the aforementionedpapers.
Although this line of work presents a novel direction in the area of SRL, thepublished approach does not yet deal with non-verbal predicates and does not evaluatethe presented methods on the full text annotations of the FrameNet releases.Deschacht and Moens (2009) present a technique of incorporating additional infor-mation from unlabeled data by using a latent words language model.
Latent variablesare used to model the underlying representation of words, and parameters of this model15Computational Linguistics Volume 40, Number 1are estimated using standard unsupervised methods.
Next, the latent information isused as features for an SRL model.
Improvements over supervised SRL techniquesare observed with the augmentation of these extra features.
The authors also comparetheir method with the aforementioned two methods of Fu?rstenau and Lapata (2009a,2009b) and show relative improvements.
Experiments are performed on the CoNLL2008 shared task data set (Surdeanu et al.
2008), which follows the PropBank conven-tions and only labels verbal and nominal predicates?in contrast to our work, whichincludes most lexicosyntactic categories.
A similar approach is presented by Weston,Ratle, and Collobert (2008), who use neural embeddings of words, which are eventu-ally used for SRL; improvements over state-of-the-art PropBank-style SRL systems areobserved.Recently, there has been related work in unsupervised semantic role labeling (Langand Lapata 2010, 2011; Titov and Klementiev 2012) that attempts to induce semanticroles automatically from unannotated data.
This line of work may be useful in discov-ering new semantic frames and roles, but here we stick to the concrete representationprovided in FrameNet, without seeking to expand its inventory of semantic types.
Wepresent a new semi-supervised technique to expand the set of lexical items with thepotential semantic frames that they could evoke; we use a graph-based semi-supervisedlearning framework to achieve this goal (Section 5.5).2.4 Joint Inference and Shallow Semantic ParsingMost high-performance SRL systems that use conventions from PropBank (Kingsburyand Palmer 2002) and NomBank (Meyers et al.
2004) utilize joint inference for seman-tic role labeling (Ma`rquez et al.
2008).
To our knowledge, the separate line of workinvestigating frame-semantic parsing has not previously dealt with joint inference.
Acommon trait in prior work, both in PropBank and FrameNet conventions, has beenthe use of a two-stage model that identifies arguments first, then labels them, oftenusing dynamic programming or integer linear programs (ILPs); we treat both problemstogether here.4Recent work in natural language processing (NLP) problems has focused on ILP for-mulations for complex structure prediction tasks like dependency parsing (Riedel andClarke 2006; Martins, Smith, and Xing 2009; Martins et al.
2010), sequence tagging (Rothand Yih 2004), as well as PropBank SRL (Punyakanok et al.
2004).
Whereas early workin this area focused on declarative formulations tackled with off-the-shelf solvers, Rushet al.
(2010) proposed subgradient-based dual decomposition (also called Lagrangianrelaxation) as a way of exploiting the structure of the problem and existing combina-torial algorithms.
The method allows the combination of models that are individuallytractable, but not jointly tractable, by solving a relaxation of the original problem.
Sincethen, dual decomposition has been used to build more accurate models for dependencyparsing (Koo et al.
2010), combinatory categorical grammar supertagging and parsing(Auli and Lopez 2011), and machine translation (Chang and Collins 2011; DeNero andMacherey 2011; Rush and Collins 2011).Recently, Martins et al.
(2011b) showed that the success of subgradient-based dualdecomposition strongly relies on breaking down the original problem into a ?good?4 In prior work, there are exceptions where identification and classification of arguments have been treatedin one step; for more details, please refer to the systems participating in the CoNLL-2004 shared task onsemantic role labeling (Carreras and Ma`rquez 2004).16Das et al.
Frame-Semantic Parsingdecomposition, that is, one with few overlapping components.
This leaves out manydeclarative constrained problems, for which such a good decomposition is not readilyavailable.
For those, Martins et al.
proposed the Alternating Directions Dual Decom-position (AD3) algorithm, which retains the modularity of previous methods, but canhandle thousands of small overlapping components.
We adopt that algorithm as itperfectly suits the problem of argument identification, as we observe in Section 7.5 Wealso contribute an exact branch-and-bound technique wrapped around AD3.Before delving into the details of our modeling framework, we describe in detail thestructure of the FrameNet lexicon and the data sets used to train our models.3.
Resources and TaskWe consider frame-semantic parsing resources consisting of a lexicon and annotatedsentences with frame-semantic structures, evaluation strategies, and previous baselines.3.1 FrameNet LexiconThe FrameNet lexicon is a taxonomy of manually identified general-purpose semanticframes for English.6 Listed in the lexicon with each frame are a set of lemmas (withparts of speech) that can denote the frame or some aspect of it?these are called lexicalunits (LUs).
In a sentence, word or phrase tokens that evoke a frame are known astargets.
The set of LUs listed for a frame in FrameNet may not be exhaustive; we maysee a target in new data that does not correspond to an LU for the frame it evokes.Each frame definition also includes a set of frame elements, or roles, correspondingto different aspects of the concept represented by the frame, such as participants,props, and attributes.
We use the term argument to refer to a sequence of word tokensannotated as filling a frame role.
Figure 1 shows an example sentence from the trainingdata with annotated targets, LUs, frames, and role-argument pairs.
The FrameNetlexicon also provides information about relations between frames and between roles(e.g., INHERITANCE).
Figure 3 shows a subset of the relations between five frames andtheir roles.Accompanying most frame definitions in the FrameNet lexicon is a set of lexico-graphic exemplar sentences (primarily from the British National Corpus) annotatedfor that frame.
Typically chosen to illustrate variation in argument realization pat-terns for the frame in question, these sentences only contain annotations for a singleframe.In preliminary experiments, we found that using exemplar sentences directly totrain our models hurt performance as evaluated on SemEval 2007 data, which formeda benchmark for comparison with previous state of the art.
This was a noteworthyobservation, given that the number of exemplar sentences is an order of magnitudelarger than the number of sentences in training data that we consider in our experiments(Section 3.2).
This is presumably because the exemplars are not representative as asample, do not have complete annotations, and are not from a domain similar to the5 AD3 was previously referred to as ?DD-ADMM,?
in reference to the use of dual decomposition with thealternating directions method of multipliers.6 Like the SemEval 2007 participants, we used FrameNet 1.3 and also the newer version of the lexicon,FrameNet 1.5 (http://framenet.icsi.berkeley.edu).17Computational Linguistics Volume 40, Number 1Table 1Salient statistics of the data sets used in our experiments.
There is a significant overlap betweenthe two data sets.SemEval 2007 Data FrameNet 1.5 Releasecount countExemplar sentences 139,439 154,607Frame labels (types) 665 877Role labels (types) 720 1,068Sentences in training data 2,198 3,256Targets in training data 11,195 19,582Sentences in test data 120 2,420Targets in test data 1,059 4,458Unseen targets in test data 210 144test data.
Instead, we make use of these exemplars in the construction of features(Section 5.2).3.2 DataIn our experiments on frame-semantic parsing, we use two sets of data:1.
SemEval 2007 data: In benchmark experiments for comparison with previousstate of the art, we use a data set that was released as part of the SemEval 2007shared task on frame-semantic structure extraction (Baker, Ellsworth, and Erk 2007).Full text annotations in this data set consisted of a few thousand sentences con-taining multiple targets, each annotated with a frame and its arguments.
The then-current version of the lexicon (FrameNet 1.3) was used for the shared task as theinventory of frames, roles, and lexical units (Figure 3 illustrates a small portionof the lexicon).
In addition to the frame hierarchy, FrameNet 1.3 also contained139,439 exemplar sentences containing one target each.
Statistics of the data usedfor the SemEval 2007 shared task are given in the first column of Table 1.
A totalof 665 frame types and 720 role types appear in the exemplars and the trainingportion of the data.
We adopted the same training and test split as the SemEval2007 shared task; however, we removed four documents from the training set7 fordevelopment.
Table 2 shows some additional information about the SemEval dataset; the variety of lexicosyntactic categories of targets stands in marked contrastwith the PropBank-style SRL data and task.2.
FrameNet 1.5 release: A more recent version of the FrameNet lexicon was releasedin 2010.8 We also test our statistical models (only frame identification and argu-ment identification) on this data set to get an estimate of how much improvementadditional data can provide.
Details of this data set are shown in the second col-umn of Table 1.
Of the 78 documents in this release with full text annotations, weselected 55 (19,582 targets) for training and held out the remaining 23 (4,458 tar-gets) for testing.
There are fewer target annotations per sentence in the test set than7 These were: StephanopoulousCrimes, Iran Biological, NorthKorea Introduction, and WMDNews 042106.8 Released on 15 September 2010, and downloadable from http://framenet.icsi.berkeley.edu as of13 February 2013.
In our experiments, we used a version downloaded on 22 September 2010.18Das et al.
Frame-Semantic ParsingTable 2Breakdown of targets and arguments in the SemEval 2007 training set in terms of part of speech.The target POS is based on the LU annotation for the frame instance.
For arguments, this reflectsthe part of speech of the head word (estimated from an automatic dependency parse); thepercentage is out of all overt arguments.targets argumentscount % count %Noun 5,155 52 Noun 9,439 55Verb 2,785 28 Preposition orcomplementizerAdjective 1,411 14 2,553 15Preposition 296 3 Adjective 1,744 10Adverb 103 1 Verb 1,156 7Number 63 1 Pronoun 736 4Conjunction 8 Adverb 373 2Article 3 Other 1,047 69,824 17,048the training set.9 Das and Smith (2011, supplementary material) give the namesof the test documents for fair replication of our work.
We also randomly selected4,462 targets from the training data for development of the argument identificationmodel (Section 6.1).Preprocessing.
We preprocessed sentences in our data set with a standard set of anno-tations: POS tags from MXPOST (Ratnaparkhi 1996) and dependency parses from theMST parser (McDonald, Crammer, and Pereira 2005); manual syntactic parses are notavailable for most of the FrameNet-annotated documents.
We used WordNet (Fellbaum1998) for lemmatization.
Our models treat these pieces of information as observations.We also labeled each verb in the data as having ACTIVE or PASSIVE voice, using codefrom the SRL system described by Johansson and Nugues (2008).3.3 Task and Evaluation MethodologyAutomatic annotations of frame-semantic structure can be broken into three parts:(1) targets, the words or phrases that evoke frames; (2) the frame type, defined in thelexicon, evoked by each target; and (3) the arguments, or spans of words that serveto fill roles defined by each evoked frame.
These correspond to the three subtasksin our parser, each described and evaluated in turn: target identification (Section 4),frame identification (Section 5, not unlike word-sense disambiguation), and argumentidentification (Section 6, essentially the same as semantic role labeling).The standard evaluation script from the SemEval 2007 shared task calculates pre-cision, recall, and F1-measure for frames and arguments; it also provides a score thatgives partial credit for hypothesizing a frame related to the correct one.
We present9 For creating the splits, we first included the documents that had incomplete annotations as mentioned inthe initial FrameNet 1.5 data release in the test set; because we do not evaluate target identification forthis version of data, the small number of targets per sentence does not matter.
After these documentswere put into the test set, we randomly selected 55 remaining documents for training, and picked therest for additional testing.
The final test set contains a total of 23 documents.
When these documentsare annotated in their entirety, the test set will become larger and the training set will be unaltered.19Computational Linguistics Volume 40, Number 1precision, recall, and F1-measure microaveraged across the test documents, report labels-only matching scores (spans must match exactly), and do not use named entity labels.10More details can be found in the task description paper from SemEval 2007 (Baker,Ellsworth, and Erk 2007).
For our experiments, statistical significance is measured usinga reimplementation of Dan Bikel?s randomized parsing evaluation comparator, a strat-ified shuffling test whose original implementation11 is accompanied by the followingdescription (quoted verbatim, with explanations of our use of the test given in squarebrackets):The null hypothesis is that the two models that produced the observed results are thesame, such that for each test instance [here, a set of predicate-argument structures for asentence], the two observed scores are equally likely.
This null hypothesis is tested byrandomly shuffling individual sentences?
scores between the two models and thenre-computing the evaluation metrics [precision, recall or F1 score in our case].
If thedifference in a particular metric after a shuffling is equal to or greater than the originalobserved difference in that metric, then a counter for that metric is incremented.
Ideally,one would perform all 2n shuffles, where n is the number of test cases (sentences), butgiven that this is often prohibitively expensive, the default number of iterations is10,000 [we use independently sampled 10,000 shuffles].
After all iterations, thelikelihood of incorrectly rejecting the null [hypothesis, i.e., the p-value] is simply(nc + 1)/(nt + 1), where nc is the number of random differences greater than theoriginal observed difference, and nt is the total number of iterations.3.4 BaselineA strong baseline for frame-semantic parsing is the system presented by Johansson andNugues (2007, hereafter J&N?07), the best system in the SemEval 2007 shared task.
Thatsystem is based on a collection of SVMs.
They used a set of rules for target identificationwhich we describe in Appendix A.
For frame identification, they used an SVM classifierto disambiguate frames for known frame-evoking words.
They used WordNet synsetsto extend the vocabulary of frame-evoking words to cover unknown words, and thenused a collection of separate SVM classifiers?one for each frame?to predict a singleevoked frame for each occurrence of a word in the extended set.J&N?07 followed Xue and Palmer (2004) in dividing the argument identificationproblem into two subtasks: First, they classified candidate spans as to whether theywere arguments or not; then they assigned roles to those that were identified as ar-guments.
Both phases used SVMs.
Thus, their formulation of the problem involvesa multitude of independently trained classifiers that share no information?whereasours uses two log-linear models, each with a single set of parameters shared across allcontexts, to find a full frame-semantic parse.We compare our models with J&N?07 using the benchmark data set from SemEval2007.
However, because we are not aware of any other work using the FrameNet 1.5 fulltext annotations, we report our results on that data set without comparison to any othersystem.10 For microaveraging, we concatenated all sentences of the test documents and measured precision andrecall over the concatenation.
Macroaveraging, on the other hand, would mean calculating these metricsfor each document, then averaging them.
Microaveraging treats every frame or argument as a unit,regardless of the length of the document in which it occurs.11 See http://www.cis.upenn.edu/dbikel/software.html#comparator.20Das et al.
Frame-Semantic Parsing4.
Target IdentificationTarget identification is the problem of deciding which word tokens (or word tokensequences) evoke frames in a given sentence.
In other semantic role labeling schemes(e.g., PropBank), simple part-of-speech criteria typically distinguish targets from non-targets.
But in frame semantics, verbs, nouns, adjectives, and even prepositions canevoke frames under certain conditions.
One complication is that semantically impov-erished support predicates (such as make in make a request) do not evoke frames in thecontext of a frame-evoking, syntactically dependent noun (request).
Furthermore, onlytemporal, locative, and directional senses of prepositions evoke frames.12Preliminary experiments using a statistical method for target identification gaveunsatisfactory results; instead, we followed J&N?07 in using a small set of rules toidentify targets.
First, we created a master list of all the morphological variants oftargets that appear in the exemplar sentences and a given training set.
For a sentence innew data, we considered as candidate targets only those substrings that appear in thismaster list.
We also did not attempt to capture discontinuous frame targets: for example,we treat there would have been as a single span even though the corresponding LU isthere be.V.13Next, we pruned the candidate target set by applying a series of rules identicalto the ones described by Johansson and Nugues (2007, see Appendix A), with twoexceptions.
First, they identified locative, temporal, and directional prepositions usinga dependency parser so as to retain them as valid LUs.
In contrast, we pruned all typesof prepositions because we found them to hurt our performance on the developmentset due to errors in syntactic parsing.
In a second departure from their target extractionrules, we did not remove the candidate targets that had been tagged as support verbsfor some other target.
Note that we used a conservative white list that filters out targetswhose morphological variants were not seen either in the lexicon or the training data.14Therefore, when this conservative process of automatic target identification is used, oursystem loses the capability to predict frames for completely unseen LUs, despite the factthat our powerful frame identification model (Section 5) can accurately label frames fornew LUs.15Results.
Table 3 shows results on target identification tested on the SemEval 2007 testset; our system gains 3 F1 points over the baseline.
This is statistically significant withp < 0.01.
Our results are also significant in terms of precision (p < 0.05) and recall (p <0.01).
There are 85 distinct LUs for which the baseline fails to identify the correct targetwhile our system succeeds.
A considerable proportion of these units have more than12 Note that there have been dedicated shared tasks to determine relationships between nominals (Girjuet al.
2007) and word-sense disambiguation of prepositions (Litkowski and Hargraves 2007), but we donot build specific models for predicates of these categories.13 There are 629 multiword LUs in the lexicon, and they correspond to 4.8% of the targets in the trainingset; among them are screw up.V, shoot the breeze.V, and weapon of mass destruction.N.
In the SemEval 2007training data, there are just 99 discontinuous multiword targets (1% of all targets).14 This conservative approach violates theoretical linguistic assumptions about frame-evoking targets asgoverned by frame semantics.
It also goes against the spirit of using linguistic constraints to improvethe separate subtask of argument identification (see Section 7); however, due to varying distributionsof target annotations, high empirical error in identifying locative, temporal, and directional prepositions,and support verbs, we resorted to this aggressive filtering heuristic to avoid making too many targetidentification mistakes.15 To predict frames and roles for new and unseen LUs, SEMAFOR provides the user with an option tomark those LUs in the input.21Computational Linguistics Volume 40, Number 1Table 3Target identification results for our system and the baseline on the SemEval?07 data set.
Scores inbold denote significant improvements over the baseline (p < 0.05).TARGET IDENTIFICATION P R F1Our technique (?4) 89.92 70.79 79.21Baseline: J&N?07 87.87 67.11 76.10one token (e.g., chemical and biological weapon.N, ballistic missile.N), which J&N?07 do notmodel.
The baseline also does not label variants of there be.V (e.g., there are and there hasbeen), which we correctly label as targets.
Some examples of other single token LUs thatthe baseline fails to identify are names of months, LUs that belong to the ORIGIN frame(e.g., iranian.A), and directions (e.g., north.A or north-south.A).165.
Frame IdentificationGiven targets, our parser next identifies their frames, using a statistical model.5.1 Lexical UnitsFrameNet specifies a great deal of structural information both within and amongframes.
For frame identification we make use of frame-evoking lexical units, the (lem-matized and POS-tagged) words and phrases listed in the lexicon as referring to specificframes.
For example, listed with the BRAGGING frame are 10 LUs, including boast.N,boast.V, boastful.A, brag.V, and braggart.N.
Of course, due to polysemy and homonymy,the same LU may be associated with multiple frames; for example, gobble.V is listedunder both the INGESTION and MAKE NOISE frames.
We thus term gobble.V an ambiguousLU.
All targets in the exemplar sentences, our training data, and most in our test data,correspond to known LUs.
(See Section 5.4 for statistics of unknown LUs in the test sets.
)To incorporate frame-evoking expressions found in the training data but not thelexicon?and to avoid the possibility of lemmatization errors?our frame identificationmodel will incorporate, via a latent variable, features based directly on exemplar andtraining targets rather than LUs.
Let L be the set of (unlemmatized and automati-cally POS-tagged) targets found in the exemplar sentences of the lexicon and/or thesentences in our training set.
Let Lf ?
L be the subset of these targets annotated asevoking a particular frame f .17 Let Ll and Llf denote the lemmatized versions of L andLf , respectively.
Then, we write boasted.VBD ?
LBRAGGING and boast.VBD ?
LlBRAGGINGtoindicate that this inflected verb boasted and its lemma boast have been seen to evoke theBRAGGING frame.
Significantly, however, another target, such as toot your own horn, mightbe used elsewhere to evoke this frame.
We thus face the additional hurdle of predictingframes for unknown words.16 We do not evaluate the target identification module on the FrameNet 1.5 data set; we instead rancontrolled experiments on those data to measure performance of the statistical frame identification andargument identification subtasks, assuming that the correct targets were given.
Moreover, as discussedin Section 3.2, the target annotations on the FrameNet 1.5 test set were fewer in number in comparisonto the training set, resulting in a mismatch of target distributions between train and test settings.17 For example, on average, there are 34 targets per frame in the SemEval 2007 data set; the average frameambiguity of each target in L is 1.17.22Das et al.
Frame-Semantic ParsingIn producing full text annotations for the SemEval 2007 data set, annotators createdseveral domain-critical frames that were not already present in version 1.3 of the lexicon.For our experiments we omit frames attested in neither the training data nor the exem-plar sentences from the lexicon.18 This leaves a total of 665 frames for the SemEval 2007data set and a total of 877 frames for the FrameNet 1.5 data set.5.2 ModelFor a given sentence x with frame-evoking targets t, let ti denote the ith target (a wordsequence).19 Let tli denote its lemma.
We seek a list f = ?f1, .
.
.
, fm?
of frames, one pertarget.
In our model, the set of candidate frames for ti is defined to include every framef such that tli ?
Llf ?or if tli ?
Ll, then every known frame (the latter condition appliesfor 4.7% of the annotated targets in the SemEval 2007 development set).
In both cases,we let Fi be the set of candidate frames for the ith target in x.
We denote the entire setof frames in the lexicon as F .To allow frame identification for targets whose lemmas were seen in neither theexemplars nor the training data, our model includes an additional variable, i.
Thisvariable ranges over the seen targets in Lfi , which can be thought of as prototypesfor the expression of the frame.
Importantly, frames are predicted, but prototypes aresummed over via the latent variable.
The prediction rule requires a probabilistic modelover frames for a target:fi ?
argmaxf?Fi??Lfp?
(f,  | ti, x) (1)We model the probability of a frame f and the prototype unit , given the target and thesentence x as:p?
(f,  | ti, x) =exp?g(f, , ti, x)?f ??F??
?Lf?exp?g(f ?, ?, ti, x)(2)This is a conditional log-linear model: for f ?
Fi and  ?
Lf , where ?
are the modelweights, and g is a vector-valued feature function.
This discriminative formulation isvery flexible, allowing for a variety of (possibly overlapping) features; for example, afeature might relate a frame type to a prototype, represent a lexical-semantic relation-ship between a prototype and a target, or encode part of the syntax of the sentence.Previous work has exploited WordNet for better coverage during frame identifica-tion (Burchardt, Erk, and Frank 2005; Johansson and Nugues 2007, e.g., by expandingthe set of targets using synsets), and others have sought to extend the lexicon itself.We differ in our use of a latent variable to incorporate lexical-semantic features in adiscriminative model, relating known lexical units to unknown words that may evokeframes.
Here we are able to take advantage of the large inventory of partially annotated18 Automatically predicting new frames is a challenge not yet attempted to our knowledge (including here).Note that the scoring metric (Section 3.3) gives partial credit for related frames (e.g., a more general framefrom the lexicon).19 Here each ti is a word sequence ?wu, .
.
.
, wv?, 1 ?
u ?
v ?
n, though in principle targets can benoncontiguous.23Computational Linguistics Volume 40, Number 1Table 4Features used for frame identification (Equation (2)).
All also incorporate f , the frame beingscored.
 = ?w,??
consists of the words and POS tags20 of a target seen in an exemplar ortraining sentence as evoking f .
The features with starred bullets were also used by Johanssonand Nugues (2007).?
the POS of the parent of the head word of ti??
the set of syntactic dependencies of the head word21 of ti??
if the head word of ti is a verb, then the set of dependency labels of its children?
the dependency label on the edge connecting the head of ti and its parent?
the sequence of words in the prototype, w?
the lemmatized sequence of words in the prototype?
the lemmatized sequence of words in the prototype and their part-of-speech tags ??
WordNet relation22 ?
holds between  and ti?
WordNet relation22 ?
holds between  and ti, and the prototype is ?
WordNet relation22 ?
holds between  and ti, the POS tag sequence of  is ?, and the POStag sequence of ti is ?texemplar sentences.
Note that this model makes an independence assumption: Eachframe is predicted independently of all others in the document.
In this way the modelis similar to J&N?07.
However, ours is a single conditional model that shares featuresand weights across all targets, frames, and prototypes, whereas the approach of J&N?07consists of many separately trained models.
Moreover, our model is unique in that ituses a latent variable to smooth over frames for unknown or ambiguous LUs.Frame identification features depend on the preprocessed sentence x, the prototype and its WordNet lexical-semantic relationship with the target ti, and of course theframe f .
Our model uses binary features, which are detailed in Table 4.5.3 Parameter EstimationGiven a training data set (either SemEval 2007 data set or the FrameNet 1.5 full textannotations), which is of the form ?
?x(j), t(j), f(j),A(j)?
?Nj=1, we discriminatively train theframe identification model by maximizing the training data log-likelihood:23max?N?j=1mj?i=1log??Lf ( j)ip?
( f(j)i ,  | t(j)i , x(j) ) (3)In Equation (3), mj denotes the number of frames in a sentence indexed by j. Notethat the training problem is non-convex because of the summed-out prototype latent20 POS tags are found automatically during preprocessing.21 If the target is not a subtree in the parse, we consider the words that have parents outside the span,and apply three heuristic rules to select the head: (1) choose the first word if it is a verb; (2) choose thelast word if the first word is an adjective; (3) if the target contains the word of, and the first word is anoun, we choose it.
If none of these hold, choose the last word with an external parent to be the head.22 These are: IDENTICAL-WORD, SYNONYM, ANTONYM (including extended and indirect antonyms),HYPERNYM, HYPONYM, DERIVED FORM, MORPHOLOGICAL VARIANT (e.g., plural form), VERBGROUP, ENTAILMENT, ENTAILED-BY, SEE-ALSO, CAUSAL RELATION, and NO RELATION.23 We found no benefit on either development data set from using an L2 regularizer (zero-meanGaussian prior).24Das et al.
Frame-Semantic ParsingTable 5Frame identification results on both the SemEval 2007 data set and the FrameNet 1.5 release.Precision, recall, and F1 were evaluated under exact and partial frame matching; see Section 3.3.Bold indicates best results on the SemEval 2007 data, which are also statistically significant withrespect to the baseline (p < 0.05).FRAME IDENTIFICATION (?5.2) exact matching partial matchingP R F1 P R F1SemEval 2007 Datagold targets 60.21 60.21 60.21 74.21 74.21 74.21automatic targets (?4) 69.75 54.91 61.44 77.51 61.03 68.29J&N?07 targets 65.34 49.91 56.59 74.30 56.74 64.34Baseline: J&N?07 66.22 50.57 57.34 73.86 56.41 63.97FrameNet 1.5 Releasegold targets 82.97 82.97 82.97 90.51 90.51 90.51?
unsupported features 80.30 80.30 80.30 88.91 88.91 88.91& ?
latent variable 75.54 75.54 75.54 85.92 85.92 85.92variable  for each frame.
To calculate the objective function, we need to cope with asum over frames and prototypes for each target (see Equation (2)), often an expensiveoperation.
We locally optimize the function using a distributed implementation of L-BFGS.24 This is the most expensive model that we train: With 100 parallelized CPUsusing MapReduce (Dean and Ghemawat 2008), training takes several hours.25 Decodingtakes only a few minutes on one CPU for the test set.5.4 Supervised ResultsSemEval 2007 Data.
On the SemEval 2007 data set, we evaluate the performance ofour frame identification model given gold-standard targets and automatically identifiedtargets (Section 4); see Table 5.
Together, our target and frame identification outperformthe baseline by 4 F1 points.
To compare the frame identification stage in isolation withthat of J&N?07, we ran our frame identification model with the targets identified by theirsystem as input.
With partial matching, our model achieves a relative improvement of0.6% F1 over J&N?07, as shown in the third row of Table 5 (though this is not significant).Note that for exact matching, the F1 score of the automatic targets setting is better thanthe gold target setting.
This is due to the fact that there are many unseen predicates inthe test set on which the frame identification model performs poorly; however, for theautomatic targets that are mostly seen in the lexicon and training data, the model getshigh precision, resulting in better overall F1 score.Our frame identification model thus performs on par with the previous state of theart for this task, and offers several advantages over J&N?s formulation of the problem:It requires only a single model, learns lexical-semantic features as part of that modelrather than requiring a preprocessing step to expand the vocabulary of frame-evokingwords, and is probabilistic, which can facilitate global reasoning.24 We do not experiment with the initialization of model parameters during this non-convex optimizationprocess; all parameters are initialized to 0.0 before running the optimizer.
However, in future work,experiments can be conducted with different random initialization points to seek non-local optima.25 In later experiments, we used another implementation with 128 parallel cores in a multi-core MPI setup(Gropp, Lusk, and Skjellum 1994), where training took several hours.25Computational Linguistics Volume 40, Number 1In the SemEval 2007 data set, for gold-standard targets, 210 out of 1,059 lemmaswere not present in the white list that we used for target identification (see Section 4).Our model correctly identifies the frames for 4 of these 210 lemmas.
For 44 of theselemmas, the evaluation script assigns a score of 0.5 or more, suggesting that our modelpredicts a closely related frame.
Finally, for 190 of the 210 lemmas, a positive score isassigned by the evaluation script.
This suggests that the hidden variable model helpsin identifying related (but rarely exact) frames for unseen targets, and explains whyunder exact?but not partial?frame matching, the F1 score using automatic targets iscommensurate with the score for oracle targets.26For automatically identified targets, the F1 score falls because the model failsto predict frames for unseen lemmas.
However, our model outperforms J&N?07 by4 F1 points.
The partial frame matching F1 score of our model represents a significantimprovement over the baseline (p < 0.01).
The precision and recall measures aresignificant as well (p < 0.05 and p < 0.01, respectively).
However, because targetsidentified by J&N?07 and frames classified by our frame identification model resultedin scores on par with the baseline, we note that the significant results follow due tobetter target identification.
Note from the results that the automatic target identificationmodel shows an increase in precision, at the expense of recall.
This is because the whitelist for target identification restricts the model to predict frames only for known LUs.If we label the subset of test set with already seen LUs (seen only in the training set,excluding the exemplars) with their corresponding most frequent frame, we achievean exact match accuracy between 52.9% and 91.2%, depending on the accuracy of theunseen LUs (these bounds assume, respectively, that they are all incorrectly labeled orall correctly labeled).FrameNet 1.5 Release.
The bottom three rows of Table 5 show results on the full textannotation test set of the FrameNet 1.5 release.
Because the number of annotationsnearly doubled, we see large improvements in frame identification accuracy.
Note thatwe only evaluate with gold targets as input to frame identification.
(As mentioned inSection 3.2, some documents in the test set have not been annotated for all targets, soevaluating automatic target identification would not be informative.)
We found that50.1% of the targets in the test set were ambiguous (i.e., they associated with more thanone frame either in FrameNet or our training data).
On these targets, the exact frameidentification accuracy is 73.10% and the partial accuracy is 85.77%, which indicates thatthe frame identification model is robust to target ambiguity.
On this data set, the mostfrequent frame baseline achieves an exact match accuracy between 74.0% and 88.1%,depending on the accuracy of the unseen LUs.We conducted further experiments with ablation of the latent variable in our frameidentification model.
Recall that the decoding objective used to choose a frame bymarginalizing over a latent variable , whose values range over targets known toassociate with the frame f being considered (see Equations (1) and (2)) in training.
Howmuch do the prototypes, captured by the latent variable, contribute to performance?Instead of treating  as a marginalized latent variable, we can fix its value to the observedtarget.26 J&N?07 did not report frame identification results for oracle targets; thus directly comparing the frameidentification models is difficult.26Das et al.
Frame-Semantic ParsingAn immediate effect of this choice is a blow-up in the number of features; wemust instantiate features (see Table 4) for all 4,194 unique targets observed in training.Because each of these features needs to be associated with all 877 frames in the partitionfunction of Equation (2), the result is an 80-fold blowup of the feature space (the latentvariable model had 465,317 features).
Such a model is not computationally feasible inour engineering framework, so we considered a model using only features observed tofire at some point in the training data (called ?supported?
features),27 resulting in only72,058 supported features.
In Table 5, we see a significant performance drop (on bothexact and partial matching accuracy) with this latent variable?free model, comparedboth with our latent variable model with all features and with only supported features(of which there are 165,200).
This establishes that the latent variable in our frameidentification model helps in terms of accuracy, and lets us use a moderately sizedfeature set incorporating helpful unsupported features.Finally, in our test set, we found that 144 out of the 4,458 annotated targets were un-seen, and our full frame identification model only labeled 23.1% of the frames correctlyfor those unseen targets; in terms of partial match accuracy, the model achieved a scoreof 46.6%.
This, along with the results on the SemEval 2007 unseen targets, shows thatthere is substantial opportunity for improvement when unseen targets are presented tothe system.
We address this issue next.5.5 Semi-Supervised Lexicon ExpansionWe next address the poor performance of our frame identification model on targets thatwere unseen as LUs in FrameNet or as instances in training data, and briefly describea technique for expanding the set of lexical units with potential semantic frames thatthey can associate with.
These experiments were carried out on the FrameNet 1.5 dataonly.
We use a semi-supervised learning (SSL) technique that uses a graph constructedfrom labeled and unlabeled data.
The widely used graph-based SSL framework?seeBengio, Delalleau, and Le Roux (2006) and Zhu (2008) for introductory material on thistopic?has been shown to perform better than several other semi-supervised algorithmson benchmark data sets (Chapelle, Scho?lkopf, and Zien 2006, chapter 21).
The methodconstructs a graph where a small portion of vertices correspond to labeled instances,and the rest are unlabeled.
Pairs of vertices are connected by weighted edges denotingthe similarity between the pair.
Traditionally, Markov random walks (Szummer andJaakkola 2001; Baluja et al.
2008) or optimization of a loss function based on smoothnessproperties of the graph (e.g., Corduneanu and Jaakkola 2003; Zhu, Ghahramani, andLafferty 2003; Subramanya and Bilmes 2008) are performed to propagate labels fromthe labeled vertices to the unlabeled ones.
In our work, we are interested in multi-classgeneralizations of graph-propagation algorithms suitable for NLP applications, whereeach graph vertex can assume one or more out of many possible labels (Subramanya andBilmes 2008, 2009; Talukdar and Crammer 2009).
For us, graph vertices correspond tonatural language types (not tokens) and undirected edges between them are weightedusing a similarity metric.
Recently, this set-up has been used to learn soft labels onnatural language types (say, word n-grams or in our case, syntactically disambiguated27 The use of unsupported features (i.e., those that can fire for an analysis in the partition function but notobserved to fire in the training data) has been observed to give performance improvements in NLPproblems; see, for example, Sha and Pereira (2003) and Martins et al.
(2010).27Computational Linguistics Volume 40, Number 1predicates) from seed data, resulting in large but noisy lexicons, which are used toconstrain structured prediction models.
Applications have ranged from domain adap-tation of sequence models (Subramanya, Petrov, and Pereira 2010) to unsupervisedlearning of POS taggers by using bilingual graph-based projections (Das and Petrov2011).We describe our approach to graph construction, propagation for lexicon expansion,and the use of the result to impose constraints on frame identification.5.5.1 Graph Construction.
We construct a graph with lexical units as vertices.
Thus, eachvertex corresponds to a lemmatized word or phrase appended with a coarse POS tag.We use two resources for graph construction.
First, we take all the words and phrasespresent in a dependency-based thesaurus constructed using syntactic cooccurrencestatistics (Lin 1998), and aggregate words and phrases that share the same lemma andcoarse POS tag.
To construct this resource, Lin used a corpus containing 64 millionwords that was parsed with a fast dependency parser (Lin 1993, 1994), and syntacticcontexts were used to find similar lexical items for a given word or phrase.
Lin sepa-rately treated nouns, verbs, and adjectives/adverbs, so these form the three parts of thethesaurus.
This resource gave us a list of possible LUs, much larger in size than the LUspresent in FrameNet data.The second component of graph construction comes from FrameNet itself.
Wescanned the exemplar sentences in FrameNet 1.5 and the training section of the fulltext annotations and gathered a distribution over frames for each LU appearing inFrameNet data.
For a pair of LUs, we measured the Euclidean distance between theirframe distributions.
This distance was next converted to a similarity score and inter-polated with the similarity score from Lin?s dependency thesaurus.
We omit furtherdetails about the interpolation and refer the reader to full details given in Das and Smith(2011).For each LU, we create a vertex and link it to the K nearest neighbor LUs under theinterpolated similarity metric.
The resulting graph has 64,480 vertices, 9,263 of whichare labeled seeds from FrameNet 1.5 and 55,217 of which are unlabeled.
Each vertex hasa possible set of labels corresponding to the 877 frames defined in the lexicon.
Figure 4shows an excerpt from the constructed graph.Figure 4Excerpt from our constructed graph over LUs.
Green LUs are observed in the FrameNet 1.5 data.Above/below them are shown the most frequently observed frame that these LUs associatewith.
The black LUs are unobserved and graph propagation produces a distribution over mostlikely frames that they could evoke as target instances.28Das et al.
Frame-Semantic Parsing5.5.2 Propagation by Optimization.
Once the graph is constructed, the 9,263 seed ver-tices with supervised frame distributions are used to propagate the semantic frameinformation via their nearest neighbors to all vertices.
Here we discuss two graph-based SSL objective functions.
Das and Smith (2012) compare several other graph-basedSSL algorithms for this problem; we refer the interested reader to that paper.
Let Vdenote the set of all vertices in our graph, V?
?
V be the set of seed vertices, and Fdenote the set of all frames.
Let N (v) denote the set of neighbors of vertex v ?
V. Letq = {q1, q2, .
.
.
, q|V|} be the set of frame distributions, one per vertex.
For each seedvertex v ?
V?, we have a supervised frame distribution q?v.
All edges in the graph areweighted according to the aforementioned interpolated similarity score, denoted wuvfor the edge adjacent to vertices u and v. We find q by solving:NGF-2 : arg minq, s.t.
q?0,?v?V,?qv?1=1?v?V?
?q?v ?
qv?22 + ?
?v?V,u?N (v)wuv?qv ?
qu?22 + ?
?v?V?qv ?
1|F|?22(4)We call the objective in Equation (4) NGF-2 because it uses normalized probability dis-tributions at each vertex and is a Gaussian field; it also utilizes a uniform 2 penalty?thethird term in the objective function.
This is a multiclass generalization of the quadraticcost criterion (Bengio, Delalleau, and Le Roux 2006), also used by Subramanya, Petrov,and Pereira (2010) and Das and Petrov (2011).
Our second graph objective function is asfollows:UJSF-1,2 : arg minq, s.t.
q?0?v?V?DJS(q?v?qv) + ?
?v?V,u?N (v)wuvDJS(qv?qu) + ?
?v?V?qv?21 (5)We call it UJSF-1,2 because it uses unnormalized probability measures at each vertexand is a Jensen-Shannon field, utilizing pairwise Jensen-Shannon divergences (Lin 1991;Burbea and Rao 2006) and a sparse 1,2 penalty (Kowalski and Torre?sani 2009) as thethird term.
Das and Smith (2012) proposed the objective function in Equation (5).
It seeksat each graph vertex a sparse measure, as we expect in a lexicon (i.e., few frames havenonzero probability for a given target).
These two graph objectives can be optimizedby iterative updates, whose details we omit in this article; more information about themotivation behind using the 1,2 penalty in the UJSF-1,2 objective, the optimizationprocedure, and an empirical comparison of these and other objectives on another NLPtask can be found in Das and Smith (2012).5.5.3 Constraints for Frame Identification.
Once a graph-based SSL objective function isminimized, we arrive at the optimal set of frame distributions q?, which we use toconstrain our frame identification inference rule, expressed in Equation (1).
In thatrule, ti is the ith target in a sentence x, and fi is the corresponding evoked frame.
Wenow add a constraint to that rule.
Recall from Section 5.2 that for targets with knownlemmatized forms, Fi was defined to be the set of frames that associate with lemma tliin the supervised data.
For unknown lemmas, Fi was defined to be all the frames in thelexicon.
If the LU corresponding to ti is present in the graph, let it be the vertex vi.
Forsuch targets ti covered by the graph, we redefine Fi as:Fi = {f : f ?
M-best frames under q?vi} (6)29Computational Linguistics Volume 40, Number 1Table 6Exact and partial frame identification accuracy on the FrameNet 1.5 data set with the size oflexicon (in terms of non-zero frame components in the truncated frame distributions) used forframe identification, given gold targets.
The supervised model is compared with alternatives inTable 5.
Bold indicates best results.
UJSF-1,2 produces statistically significant results (p < 0.001)for all metrics with respect to the supervised baseline for both the unseen LUs as well as thewhole test set.
Although the NGF-2 and UJSF-1,2 models are statistically indistinguishable,it is noteworthy that the UJSF-1,2 objective produces a much smaller lexicon.UNKNOWN TARGETS ALL TARGETS Graphexact partial exact partial Lexiconframe matching frame matching frame matching frame matching SizeSupervised 23.08 46.62 82.97 90.51 ?Self-training 18.88 42.67 82.27 90.02 ?NGF-2 39.86 62.35 83.51 91.02 128,960UJSF-1,2 42.67 65.29 83.60 91.12 45,544For targets ti in test data whose LUs are not present in the graph (and hence insupervised data), Fi is the set of all frames.
Note that in this semi-supervised extensionof our frame identification inference procedure, we introduced several hyperparam-eters, namely, ?, ?, K (the number of nearest neighbors for each vertex included inthe graph) and M (the number of highest scoring frames per vertex according to theinduced frame distribution).
We choose these hyperparameters using cross-validationby tuning the frame identification accuracy on unseen targets.
(Different values of thefirst three hyperparameters were chosen for the different graph objectives and we omittheir values here for brevity; M turned out to be 2 for all models.
)Table 6 shows frame identification accuracy, both using exact match as well aspartial match.
Performance is shown on the portion of the test set containing unknownLUs, as well as the whole test set.
The final column presents lexicon size in termsof the set of truncated frame distributions (filtered according to the top M frames inqv for a vertex v) for all the LUs in a graph.
For comparison with a semi-supervisedbaseline, we consider a self-trained system.
For this system, we used the supervisedframe identification system to label 70,000 sentences from the English Gigaword corpuswith frame-semantic parses.
For finding targets in a raw sentence, we used a relaxedtarget identification scheme, where we marked as potential frame-evoking units alltargets seen in the lexicon and all other words which were not prepositions, particles,proper nouns, foreign words, or WH-words.
We appended these automatic annotationsto the training data, resulting in 711,401 frame annotations, more than 36 times theannotated data.
These data were next used to train a frame identification model.28 Thisset-up is very similar to that of Bejan (2009) who used self-training to improve frameidentification.
In our setting, however, self-training hurts relative to the fully supervisedapproach (Table 6).Note that for the unknown part of the test set the graph-based objectives outperformboth the supervised model as well as the self-training baseline by a margin of ?20%28 We ran self-training with smaller amounts of data, but found no significant difference with the resultsachieved with 711,401 frame annotations.
As we observe in Table 6, in our case, self-training performsworse than the supervised model, and we do not hope to improve with even more data.30Das et al.
Frame-Semantic Parsingabsolute.
The best model is UJSF-1,2, and its performance is significantly better thanthe supervised model (p < 0.01).
It also produces a smaller lexicon (using the sparsity-inducing penalty) than NGF-2, requiring less memory during frame identificationinference.
The small footprint can be attributed to the removal of LUs for which allframe components were zero (qi = 0).
The improvements of the graph-based objectivesover the supervised and the self-trained models are modest for the whole test set,but the best model still has statistically significant improvements over the supervisedmodel (p < 0.01).6.
Argument IdentificationGiven a sentence x = ?x1, .
.
.
, xn?, the set of targets t = ?t1, .
.
.
, tm?, and a list of evokedframes f = ?f1, .
.
.
, fm?
corresponding to each target, argument identification is the taskof choosing which of each fi?s roles are filled, and by which parts of x.
This task is mostsimilar to the problem of semantic role labeling, but uses a richer set of frame-specificlabels than PropBank annotations.6.1 ModelLet Rfi = {r1, .
.
.
, r|Rfi |} denote frame fi?s roles (named frame element types) observedin an exemplar sentence and/or our training set.
A subset of each frame?s roles aremarked as core roles; these roles are conceptually and/or syntactically necessary forany given use of the frame, though they need not be overt in every sentence involvingthe frame.
These are roughly analogous to the core arguments ARG0?ARG5 in PropBank.Non-core roles?analogous to the various ARGM-* in PropBank?loosely correspond tosyntactic adjuncts, and carry broadly applicable information such as the time, place,or purpose of an event.
The lexicon imposes some additional structure on roles, in-cluding relations to other roles in the same or related frames, and semantic types withrespect to a small ontology (marking, for instance, that the entity filling the protag-onist role must be sentient for frames of cognition).
Figure 3 illustrates some of thestructural elements comprising the frame lexicon by considering the CAUSE TO MAKE NOISEframe.We identify a set S of spans that are candidates for filling any role r ?
Rfi .
Inprinciple, S could contain any subsequence of x, but in this work we only considerthe set of contiguous spans that (a) contain a single word or (b) comprise a valid subtreeof a word and all its descendants in the dependency parse produced by the MST parser.This covers approximately 80% of arguments in the development data for both datasets.The empty span, denoted ?, is also included in S , since some roles are not explicitlyfilled; in the SemEval 2007 development data, the average number of roles an evokedframe defines is 6.7, but the average number of overt arguments is only 1.7.29 In29 In the annotated data, each core role is filled with one of three types of null instantiations indicating howthe role is conveyed implicitly.
For instance, the imperative construction implicitly designates a role asfilled by the addressee, and the corresponding filler is thus CNI (constructional null instantiation).
In thiswork we do not distinguish different types of null instantiation.
The interested reader may refer to Chenet al.
(2010), who handle the different types of null instantions during argument identification.31Computational Linguistics Volume 40, Number 1training, if a labeled argument is not a subtree of the dependency parse, we add itsspan to S .30Let Ai denote the mapping of roles in Rfi to spans in S .
Our model makes aprediction for each Ai(rk) (for all roles rk ?
Rfi ) using:Ai(rk) ?
argmaxs?Sp?
(s | rk, fi, ti, x) (7)We use a conditional log-linear model over spans for each role of each evoked frame:p?
(Ai(rk) = s | fi, ti, x) =exp?h(s, rk, fi, ti, x)?s?
?Sexp?h(s?, rk, fi, ti, x)(8)Note that our model chooses the span for each role separately from the other rolesand ignores all frames except the frame the role belongs to.
Our model departsfrom the traditional SRL literature by modeling the argument identification problemin a single stage, rather than first classifying token spans as arguments and thenlabeling them.
A constraint implicit in our formulation restricts each role to have atmost one overt argument, which is consistent with 96.5% of the role instances in theSemEval 2007 training data and 96.4% of the role instances in the FrameNet 1.5 full textannotations.Out of the overt argument spans in the training data, 12% are duplicates, havingbeen used by some previous frame in the sentence (supposing some arbitrary orderingof frames).
Our role-filling model, unlike a sentence-global argument detection-and-classification approach,31 permits this sort of argument sharing among frames.
Wordtokens belong to an average of 1.6 argument spans, including the quarter of words thatdo not belong to any argument.Appending together the local inference decisions from Equation (7) gives us the bestmapping A?t for target t. Features for our log-linear model (Equation (8)) depend on thepreprocessed sentence x; the target t; a role r of frame f ; and a candidate argument spans ?
S .32 For features using the head word of the target t or a candidate argument spans, we use the heuristic described in footnote 21 for selecting the head of non-subtreespans.Table 7 lists the feature templates used in our model.
Every feature template hasa version that does not take into account the role being filled (so as to incorporateoverall biases).
The  symbol indicates that the feature template also has a variant thatis conjoined with r, the name of the role being filled; and  indicates that the feature30 Here is an example in the FrameNet 1.5 training data where this occurs.
In the sentence: As capital ofEurope?s most explosive economy, Dublin seems to be changing before your very eyes, the word economyevokes the ECONOMY frame with the phrase most explosive fulfilling the Descriptor role.
However,in the dependency parse for the sentence the phrase is not a subtree because both words in the frameattach to the word economy.
Future work may consider better heuristics to select potential argumentsfrom the dependency parses to recover more gold arguments than what the current work achieves.31 J&N?07, like us, identify arguments for each target.32 In this section we use t, f , and r without subscripts because the features only consider a single role of asingle target?s frame.32Das et al.
Frame-Semantic ParsingTable 7Features used for argument identification.
Section 6.1 describes the meanings of the differentcircles attached to each feature.Features with both null and non-null variants: These features come in two flavors:if the argument is null, then one version fires; if it is overt (non-null), then anotherversion fires. some word in t has lemma ?
 some word in t has POS ? some word in t has lemma ?, and thesentence uses PASSIVE voice some word in t has lemma ?, and thesentence uses ACTIVE voice the head of t has subcategorizationsequence ?
= ?
?1, ?2, .
.
.
? some syntactic dependent of the head of thas dependency type ? the head of t has c syntactic dependents  bias feature (always fires)Span content features: apply to overt argument candidates. POS tag ?
occurs for some word in s  the head word of s has POS ? the first word of s has POS ?
 |s|, the number of words in the span the last word of s has POS ?
 the first word of s has lemma ? the head word of s has syntacticdependency type ? the first word of s: ws1 , and its POS tag ?s1 ,if ?s1 is a closed-class POS ws2 and its closed-class POS tag ?s2 ,provided that |s| ?
2 the syntactic dependency type ?s1 of thefirst word with respect to its head the head word of s has lemma ?
 ?s2 , provided that |s| ?
2 the last word of s: ws|s| has lemma ?
 ?s|s| , provided that |s| ?
3 ws|s| , and its closed-class POS tag ?s|s| ,provided that |s| ?
3 lemma ?
is realized in some word in s lemma ?
is realized in some word in s, thevoice denoted in the span, s?s positionwith respect to t (BEFORE, AFTER, orOVERLAPPING) lemma ?
is realized in some word in s,the voice denoted in the span (ACTIVEor PASSIVE)Syntactic features: apply to overt argument candidates. dependency path: sequence of labeled,directed edges from the head word of s tothe head word of t length of the dependency pathSpan context POS features: for overt candidates, up to 6 of these features will be active. a word with POS ?
occurs up to 3 wordsbefore the first word of s a word with POS ?
occurs up to 3 wordsafter the last word of sOrdering features: apply to overt argument candidates. the position of s with respect to the spanof t: BEFORE, AFTER, or OVERLAPPING (i.e.there is at least one word shared by s and t) target-argument crossing: there is at leastone word shared by s and t, at least oneword in s that is not in t, and at least oneword in t that is not in s linear word distance between the nearestword of s and the nearest word of t,provided s and t do not overlap linear word distance between the middleword of s and the middle word of t,provided s and t do not overlaptemplate additionally has a variant that is conjoined with both r and f , the name of theframe.33 The role-name-only variants provide for smoothing over frames for commontypes of roles such as Time and Place; see Matsubayashi, Okazaki, and Tsujii (2009) fora detailed analysis of the effects of using role features at varying levels of granularity.Certain features in our model rely on closed-class POS tags, which are defined to beall Penn Treebank tags except for CD and tags that start with V, N, J, or R. Finally, the33 That is, the  symbol subsumes , which in turn subsumes .33Computational Linguistics Volume 40, Number 1features that encode a count or a number are binned into groups: (?
?,?20], [?19,?10],[?9,?5], ?4, ?3, ?2, ?1, 0, 1, 2, 3, 4, [5, 9], [10, 19], [20,?
).6.2 Parameter EstimationWe train the argument identification model by:max?N?j=1mj?i=1|Rf (j)i|?k=1log p?
(A(j)i (rk) | f(j)i , t(j)i , x(j) ) ?
C ??
?22 (9)Here, N is the number of data points (sentences) in the training set, and m is the numberof frame annotations per sentence.
This objective function is concave.
For experimentswith the SemEval 2007 data, we trained the model using stochastic gradient ascent(Bottou 2004) with no Gaussian regularization (C = 0).34 Early stopping was done bytuning on the development set, and the best results were obtained with a batch size of 2and 23 passes through the data.On the FrameNet 1.5 release, we trained this model using L-BFGS (Liu and Nocedal1989) and ran it for 1,000 iterations.
C was tuned on the development data, and weobtained best results for C = 1.0.
We did not use stochastic gradient descent for thisdata set as the number of training instances increased and parallelization of L-BFGSon a multicore setup implementing MPI (Gropp, Lusk, and Skjellum 1994) gave fastertraining speeds.6.3 Decoding with Beam SearchNaive prediction of roles using Equation (7) may result in overlap among argumentsfilling different roles of a frame, because the argument identification model fills each roleindependently of the others.
We want to enforce the constraint that two roles of a singleframe cannot be filled by overlapping spans.35 Toutanova, Haghighi, and Manning(2005) presented a dynamic programming algorithm to prevent overlapping argumentsfor SRL; however, their approach used an orthogonal view to the argument identi-fication stage, wherein they labeled phrase-structure tree constituents with semanticroles.
That formulation admitted a dynamic programming approach; our formulationof finding the best argument span for each role does not.To eliminate illegal overlap, we adopt the beam search technique detailed inAlgorithm 1.
The algorithm produces a set of k-best hypotheses for a frame instance?sfull set of role-span pairs, but uses an approximation in order to avoid scoring anexponential number of hypotheses.
After determining which roles are most likely notexplicitly filled, it considers each of the other roles in turn: In each iteration, hypothesesincorporating a subset of roles are extended with high-scoring spans for the next role,always maintaining k alternatives.
We set k=10,000 as the beam width.3634 This was the setting used by Das et al.
(2010) and we kept it unchanged.35 On rare occasions a frame annotation may include a secondary frame element layer, allowing arguments tobe shared among multiple roles in the frame; see Ruppenhofer et al.
(2006) for details.
The evaluation forthis task only considers the primary layer, which is guaranteed to have disjoint arguments.36 We show the effect of varying beam widths in Table 9, where we present performance of an exactalgorithm for argument identification.34Das et al.
Frame-Semantic ParsingAlgorithm 1 Joint decoding of frame fi?s arguments via beam search.
topk(S , p?, rj)extracts the k most probable spans from S , under p?, for role rj.
extend(D0:(j?1),S ?
)extends each span vector in D0:(j?1) with the most probable non-overlapping span fromS ?, resulting in k best extensions overall.Require: k > 0, Rfi , S , the distribution p?
from Equation 8 for each role rj ?
RfiEnsure: A?i, a high-scoring mapping of roles of fi to spans with no token overlap amongthe spans1: Calculate Ai according to Equation 72: ?r ?
Rfi such that Ai(r) = ?, let A?i(r) ?
?3: R+fi ?
{r : r ?
Rfi ,Ai(r) = ?
}4: n ?
|R+fi |5: Arbitrarily order R+fi as {r1, r2, .
.
.
rn}6: Let D0:j = ?D0:j1 , .
.
.
, D0:jk ?
refer to the k-best list of vectors of compatible filler spansfor roles r1 through rj7: Initialize D0:0 to be empty8: for j = 1 to n do9: D0:j ?
extend(D0:(j?1), topk(S , p?, rj))10: end for11: ?j ?
{1, .
.
.
, n}, A?i(rj) ?
D0:n1 [j]12: return A?i6.4 ResultsPerformance of the argument identification model is presented in Table 8 for both datasets in consideration.
We analyze them here.SemEval 2007 Data: For the SemEval data set, the table shows how performancevaries given different types of input: correct targets and correct frames, correct targetsbut automatically identified frames, and ultimately, no oracle input (the full frameparsing scenario).
Rows 1?2 isolate the argument identification task from the frameidentification task.
Given gold targets and frames, our argument identification model(without beam search) gets an F1 score of 68.09%; when beam search is applied, thisincreases to 68.46%, with a noticeable increase in precision.
Note that an estimated 19%of correct arguments are excluded because they are neither single words nor completesubtrees (see Section 6.1) of the automatic dependency parses.37Qualitatively, the problem of candidate span recall seems to be largely due tosyntactic parse errors.38 Although our performance is limited by errors when usingthe syntactic parse to determine candidate spans, it could still improve; this suggests37 We found that using all constituents from the 10-best syntactic parses would improve oracle recall ofspans in the development set by just a couple of percentage points, at the computational cost of a largerpool of candidate arguments per role.38 Note that, because of our labels-only evaluation scheme (Section 3.3), arguments missing a word orcontaining an extra word receive no credit.
In fact, of the frame roles correctly predicted as having anovert span, the correct span was predicted 66% of the time, while 10% of the time the predicted startingand ending boundaries of the span were off by a total of one or two words.35Computational Linguistics Volume 40, Number 1Table8ArgumentidentificationresultsonboththeSemEval?07dataaswellasthefulltextannotationsofFrameNet1.5.Fordecoding,beamandnaiveindicatewhethertheapproximatejointdecodingalgorithmhasbeenusedorlocalindependentdecisionshavebeenmadeforargumentidentification,respectively.OntheSemEval2007data,forfullparsing(automatictarget,frame,andargumentidentification),boldscoresindicatebestresults,whicharealsosignificantimprovementsrelativetothebaseline(p<0.05).OntheFrameNet1.5dataset,boldscoresindicatebestresultsonautomaticframeandargumentidentification?thisisachievedbytheframeidentificationmodelthatusestheUJSF- 1,2graph-objectiveandautomaticargumentidentificationusingbeamsearch.Thisresultisstatisticallysignificantoverthesupervisedresultsshowninrow9(p<0.001).IntermsofprecisionandF 1scoremeasuredwithpartialframematching,theresultswiththeUJSF- 1,2modelisstatisticallysignificantovertheNGF- 2model(p<0.05).Forrecallwithpartialframematching,andforallthethreemetricswithexactframematching,theresultswiththetwographobjectivesarestatisticallyindistinguishable.Notethatcertainpartialmatchresultsaremissingbecauseinthosesettings,goldframeshavebeenusedforargumentidentification.ARGUMENTIDENTIFICATIONtargetsframesdecodingexactmatchingpartialmatchingPRF 1PRF 1SemEval?07DataArgumentidentification(full)goldgoldnaive77.4360.7668.091goldgoldbeam78.7160.5768.462Parsing(oracletargets)goldsupervised(?5.2)beam49.6842.8246.0057.8549.8653.563Parsing(full)autosupervised(?5.2)beam58.0838.7646.4962.7641.8950.244Parsing(J&N?07targetsandframes)autosupervised(?3.4)beam56.2636.6344.3760.9839.7048.095Baseline:J&N?07autosupervised(?3.4)N/A51.5935.4442.0156.0138.4845.626FrameNet1.5ReleaseArgumentidentification(full)goldgoldnaive82.0076.3679.087goldgoldbeam83.8376.2879.888Parsing(oracletargets)goldsupervised(?5.2)beam67.8160.6864.0572.4764.8568.459goldSSL(NGF- 2,?5.5)beam68.2261.0464.4372.8765.2068.8210goldSSL(UJSF- 1,2,?5.5)beam68.3361.1464.5472.9865.3068.931136Das et al.
Frame-Semantic Parsingthat the model has trouble discriminating between good and bad arguments, and thatadditional feature engineering or jointly decoding arguments of a sentence?s framesmay be beneficial.Rows 3?4 show the effect of automatic supervised frame identification on overallframe parsing performance.
There is a 22% absolute decrease in F1 (18% when partialcredit is given for related frames), suggesting that improved frame identificationor joint prediction of frames and arguments is likely to have a sizeable impact onoverall performance.
Rows 4?6 compare our full model (target, frame, and argumentidentification) with the baseline, showing significant improvement of more than 4.4F1 points for both exact and partial frame matching.
As with frame identification, wecompared the argument identification stage with that of J&N?07 in isolation, using theautomatically identified targets and frames from the latter as input to our model.
Asshown in row 5, with partial frame matching, this gave us an F1 score of 48.1% on thetest set?significantly better (p < 0.05) than 45.6%, the full parsing result from J&N?07(row 6 in Table 8).
This indicates that our argument identification model?which uses asingle discriminative model with a large number of features for role filling (rather thanargument labeling)?is more accurate than the previous state of the art.FrameNet 1.5 Release: Rows 7?12 show results on the newer data set, which is partof the FrameNet 1.5 release.
As in the frame identification results of Table 5, we do notshow results using predicted targets, as we only test the performance of the statisticalmodels.
First, we observe that for results with gold frames, the F1 score is 79.08%with naive decoding, which is significantly higher than the SemEval counterpart.
Thisindicates that increased training data greatly improves performance on the task.
We alsoobserve that beam search improves precision by nearly 2%, while getting rid of overlap-ping arguments.
When both model frames and model arguments are used, we get anF1 score of 68.45%, which is encouraging in comparison to the best results we achievedon the SemEval 2007 data set.
Semi-supervised lexicon expansion for frame identifi-cation further improves parsing performance.
We observe the best results when theUJSF-1,2 graph objective is used for frame identification, significantly outperformingthe fully supervised model on parsing (p < 0.001) for all evaluation metrics.
The im-provements with SSL can be explained by noting that frame identification performancegoes up when the graph objectives are used, which carries over to argument iden-tification.
Figure 5 shows an example where the graph-based model UJSF-1,2 correctsan error made by the fully supervised model for the unseen LU discrepancy.N, both forframe identification and full frame-semantic parsing.7.
Collective Argument Identification with ConstraintsThe argument identification strategy described in the previous section does not capturesome facets of semantic knowledge represented declaratively in FrameNet.
In thissection, we present an approach that exploits such knowledge in a principled, unified,and intuitive way.
In prior NLP research using FrameNet, these interactions have beenlargely ignored, though they have the potential to improve the quality and consistencyof semantic analysis.
The beam search technique (Algorithm 1) handles one kind ofconstraint: avoiding argument overlaps.
It is, however, approximate and cannot handleother forms of constraints.Here, we present an algorithm that exactly identifies the best full collection of argu-ments of a target given its semantic frame.
Although we work within the conventions of37Computational Linguistics Volume 40, Number 1Figure 5(a) Output of the supervised frame-semantic parsing model, with beam search for argumentidentification, given the target discrepancies.
The output is incorrect.
(b) Output using theconstrained frame identification model that takes into account the graph-based framedistributions over unknown predicates.
In this particular example, the UJSF-1,2 graphobjective is used.
This output matches the gold annotation.
The LU discrepancy.N is unseenin supervised FrameNet data.FrameNet, our approach is generalizable to other SRL frameworks.
We model argumentidentification as constrained optimization, where the constraints come from expertknowledge encoded in FrameNet.
Following prior work on PropBank-style SRL thatdealt with similar constrained problems (Punyakanok et al.
2004; Punyakanok, Roth,and Yih 2008, inter alia), we incorporate this declarative knowledge in an integer linearprogram.Because general-purpose ILP solvers are proprietary and do not fully exploit thestructure of the problem, we turn to a class of optimization techniques called dualdecomposition (Komodakis, Paragios, and Tziritas 2007; Rush et al.
2010; Martins et al.2011a).
We derive a modular, extensible, parallelizable approach in which semantic con-straints map not just to declarative components in the algorithm, but also to proceduralones, in the form of ?workers.?
Although dual decomposition algorithms only solvea relaxation of the original problem, we make our approach exact by wrapping thealgorithm in a branch-and-bound search procedure.
39We experimentally find that our algorithm achieves accuracy comparable to theresults presented in Table 8, while respecting all imposed linguistic constraints.
Incomparison with beam search, which violates many of these constraints, the presentedexact decoder is slower, but it decodes nine times faster than CPLEX, a state-of-the-art,proprietary, general-purpose exact ILP solver.4039 Open-source code in C++ implementing the AD3 algorithm can be found athttp://www.ark.cs.cmu.edu/AD3.40 See http://www-01.ibm.com/software/integration/optimization/cplex-optimizer.38Das et al.
Frame-Semantic Parsing7.1 Joint InferenceHere, we take a declarative approach to modeling argument identification using an ILPand relate our formulation to prior work in shallow semantic parsing.
We show howknowledge specified in a linguistic resource (FrameNet in our case) can be used toderive the constraints in our ILP.
Finally, we draw connections of our specification tographical models, a popular formalism in artificial intelligence and machine learning,and describe how the constraints can be treated as factors in a factor graph.7.1.1 Declarative Specification.
Let us simplify notation by considering a given target t andnot considering its index in a sentence x; let the semantic frame it evokes be f .
To solelyevaluate argument identification, we assume that the semantic frame f is given, which istraditionally the case in controlled experiments used to evaluate SRL systems (Ma`rquezet al.
2008).
Let the set of roles associated with the frame f be Rf .
In sentence x, the setof candidate spans of words that might fill each role is enumerated, usually followingan overgenerating heuristic, which is described in Section 6.1; as before, we call this setof spans S .
As before, this set also includes the null span ?
; connecting it to a role r ?
Rfdenotes that the role is not overt.
Our approach assumes a scoring function that givesa strength of association between roles and candidate spans.
For each role r ?
Rf andspan s ?
S , this score is parameterized as:c(r, s) = ?h(s, r, f, t, x), (10)where ?
are model weights and h is a feature function that looks at the target t,the evoked frame f , sentence x, and its syntactic analysis, along with r and s. Thisscoring function is identical in form to the numerator?s exponent in the log-linear modeldescribed in Equation (8).
The SRL literature provides many feature functions of thisform and many ways to use machine learning to acquire ?.
Our presented method doesnot make any assumptions about the score except that it has the form in Equation (10).We define a vector z of binary variables zr,s ?
{0, 1} for every role and span pair.
Wehave that: z ?
{0, 1}d, where d = |Rf | ?
|S|.
zr,s = 1 means that role r is filled by span s.Given the binary z vector, it is straightforward to recover the collection of argumentsby checking which components zr,s have an assignment of 1; we use this strategy tofind arguments, as described in Section 7.3 (strategies 4 and 6).
The joint argumentidentification task can be represented as a constrained optimization problem:maximize?r?Rf?s?Sc(r, s) ?
zr,swith respect to z ?
{0, 1}dsuch that Az ?
b (11)In the last line, A is a k ?
d matrix and b is a vector of length k. Thus, Az ?
b is a set ofk inequalities representing constraints that are imposed on the mapping between rolesand spans; these are motivated on linguistic grounds and are described next.
4141 Note that equality constraints a ?
z = b can be transformed into double-side inequalities a ?
z ?
b and?a ?
z ?
?b.39Computational Linguistics Volume 40, Number 1Uniqueness.
Each role r is filled by at most one span in S .
This constraint can beexpressed by:?r ?
Rf ,?s?Szr,s = 1 (12)There are O(|Rf |) such constraints.
Note that because S contains the null span ?, non-overt roles are also captured using the above constraints.
Such a constraint is usedextensively in prior literature (Punyakanok, Roth, and Yih 2008, Section 3.4.1).Overlap.
SRL systems commonly constrain roles to be filled by non-overlapping spans.For example, Toutanova, Haghighi, and Manning (2005) used dynamic programmingover a phrase structure tree to prevent overlaps between arguments, and Punyakanok,Roth, and Yih (2008) used constraints in an ILP to respect this requirement.
Inspired bythe latter, we require that each input sentence position of x be covered by at most oneargument of t. We define:G(i) = {s | s ?
S , s covers position i in x} (13)We can define our overlap constraints in terms of G as follows, for every sentenceposition i:?i ?
{1, .
.
.
, |x|},?r?Rf?s?G(i)zr,s ?
1 (14)This gives us O(|x|) constraints.
It is worth noting that this constraint aims to achieve thesame effect as beam search, as described in Section 6.3, which tries to avoid argumentoverlap greedily.Pairwise ?Exclusions.?
For many target classes, there are pairs of roles forbidden toappear together in the analysis of a single target token.
Consider the following twosentences:(1) A blackberryEntity 1resembles a loganberryEntity 2.
(2) Most berriesEntitiesresemble each other.Consider the uninflected target resemble in both sentences, evoking the samemeaning.
In Example (1), two roles?which we call Entity 1 and Entity 2?describe twoentities that are similar to each other.
In the second sentence, a phrase fulfills a thirdrole, called Entities, that collectively denotes some objects that are similar.
It is clear thatthe roles Entity 1 and Entities cannot be overt for the same target at once, because the latteralready captures the function of the former; a similar argument holds for the Entity 2 andEntities roles.
We call this phenomenon the ?excludes?
relationship.
Let us define a set ofpairs from Rf that have this relationship:Exclf = {(ri, rj) | ri and rj exclude each other}40Das et al.
Frame-Semantic ParsingUsing the given set, we define the constraint:?
(ri, rj) ?
Exclf , zri,?
+ zrj,?
?
1 (15)If both roles are overt in a parse, this constraint will be violated, contravening the?excludes?
relationship specified between the pair of roles.
If neither or only one ofthe roles is overt, the constraint is satisfied.
The total number of such constraints isO(|Exclf |), which is the number of pairwise ?excludes?
relationships of a given frame.Pairwise ?Requirements.?
The sentence in Example (1) illustrates another kind of con-straint.
The target resemble cannot have only one of Entity 1 and Entity 2 as roles in text.For example,(3) * A blackberryEntity 1resembles.Enforcing the overtness of two roles sharing this ?requires?
relationship is straight-forward.
We define the following set for a frame f :Reqf = {(ri, rj) | ri and rj require each other}This leads to constraints of the form?
(ri, rj) ?
Reqf , zri,?
?
zrj,?
= 0 (16)If one role is overt (or absent), the other must be as well.
A related constraint hasbeen used previously in the SRL literature, enforcing joint overtness relationships be-tween core arguments and referential arguments (Punyakanok, Roth, and Yih 2008,Section 3.4.1), which are formally similar to our example.427.1.2 Integer Linear Program and Relaxation.
Plugging the constraints in Equations 12,14, 15, and 16 into the last line of Equation (11), we have the argument identificationproblem expressed as an ILP, since the indicator variables z are binary.
Here, apart fromthe ILP formulation, we will consider the following relaxation of Equation (11), whichreplaces the binary constraint z ?
{0, 1}d by a unit interval constraint z ?
[0, 1]d, yieldinga linear program:maximize?r?Rf?s?Sc(r, s) ?
zr,swith respect to z ?
[0, 1]dsuch that Az ?
b.
(17)42 We noticed that, in the annotated data, in some cases, the ?requires?
constraint is violated by theFrameNet annotators.
This happens mostly when one of the required roles is absent in the sentencecontaining the target, but is rather instantiated in an earlier sentence (Gerber and Chai 2010).
We applythe hard constraint in Equation (16), though extending our algorithm to seek arguments outside thesentence is straightforward.
For preliminary work extending SEMAFOR this way, see Chen et al.
(2010).41Computational Linguistics Volume 40, Number 1There are several LP and ILP solvers available, and a great deal of effort has beenspent by the optimization community to devise efficient generic solvers.
An exampleis CPLEX, a state-of-the-art solver for mixed integer programming that we use as abaseline to solve the ILP in Equation (11) as well as its LP relaxation in Equation (17).Like many of the best implementations, CPLEX is proprietary.7.1.3 Linguistic Constraints from FrameNet.
Although enforcing the four different sets ofconstraints is intuitive from a general linguistic perspective, we ground their use indefinitive linguistic information present in the FrameNet lexicon.
From the annotateddata in the FrameNet 1.5 release, we gathered that only 3.6% of the time is a roleinstantiated multiple times by different spans in a sentence.
This justifies the uniquenessconstraint enforced by Equation (12).
Use of such a constraint is also consistent withprior work in frame-semantic parsing (Johansson and Nugues 2007).
Similarly, wefound that in the annotations, no arguments overlapped with each other for a giventarget.
Hence, the overlap constraints in Equation (14) are also justified.Our third and fourth sets of constraints, presented in Equations (15) and (16), comefrom FrameNet, too.
Examples (1) and (2) are instances where the target resembleevokes the SIMILARITY frame, which is defined in FrameNet as:Two or more distinct entities, which may be concrete or abstract objects or types, arecharacterized as being similar to each other.
Depending on figure/ground relations, theentities may be expressed in two distinct frame elements and constituents, Entity 1 andEntity 2, or jointly as a single frame element and constituent, Entities.For this frame, the lexicon lists several roles other than the three we have alreadyobserved, such as Dimension (the dimension along which the entities are similar), Differ-entiating fact (a fact that reveals how the concerned entities are similar or different), andso forth.
Along with the roles, FrameNet also declares the ?excludes?
and ?requires?relationships noted in our discussion in Section 7.1.1.
The case of the SIMILARITY frameis not unique; in Figure 1, the frame COLLABORATION, evoked by the target partners, alsohas two roles Partner 1 and Partner 2 that share the ?requires?
relationship.
In fact, outof 877 frames in FrameNet 1.5, 204 frames have at least a pair of roles for which the?excludes?
relationship holds, and 54 list at least a pair of roles that share the ?requires?relationship.7.1.4 Constraints as Factors in a Graphical Model.
The LP in Equation (17) can be repre-sented as a maximum a posteriori inference problem in an undirected graphical model.In the factor graph, each component (zr,s) of the vector z corresponds to a binaryvariable, and each instantiation of a constraint in Equations (12), (14), (15), and (16)corresponds to a factor.
Smith and Eisner (2008) and Martins et al.
(2010) used sucha representation to impose constraints in a dependency parsing problem; the latterdiscussed the equivalence of linear programs and factor graphs for representing dis-crete optimization problems.
All of our constraints take standard factor forms we candescribe using the terminology of Smith and Eisner and Martins et al.
The uniquenessconstraint in Equation (12) corresponds to an XOR factor, while the overlap constraintin Equation (14) corresponds to an ATMOSTONE factor.
The constraints in Equation (15)enforcing the ?excludes?
relationship can be represented with an OR factor.
Finally,each ?requires?
constraints in Equation (16) is equivalent to an XORWITHOUTPUTfactor.42Das et al.
Frame-Semantic ParsingIn the following section, we describe how we arrive at solutions for the LP inEquation (17) using dual decomposition, and how we adapt it to efficiently recover theexact solution of the ILP (Equation (11)), without the need of an off-the-shelf ILP solver.7.2 ?Augmented?
Dual DecompositionDual decomposition methods address complex optimization problems in the dual, bydividing them into simple worker problems (subproblems), which are repeatedly solveduntil a consensus is reached.
The simplest technique relies on the subgradient algorithm(Komodakis, Paragios, and Tziritas 2007; Rush et al.
2010); as an alternative, Martinset al.
(2011a, 2011b) proposed an augmented Lagrangian technique, which is moresuitable when there are many small components ?commonly the case in declarativeconstrained problems, like the one at hand.
Here, we present a brief overview of thelatter, which is called AD3.Let us start by establishing some notation.
Let m ?
{1, .
.
.
, M} index a factor, anddenote by i(m) the vector of indices of variables linked to that factor.
(Recall that eachfactor represents the instantiation of a constraint.)
We introduce a new set of variables,u ?
Rd, called the ?witness?
vector.
We split the vector z into M overlapping piecesz1, .
.
.
, zM, where each zm ?
[0, 1]|i(m)|, and add M constraints zm = ui(m) to impose thatall the pieces must agree with the witness (and therefore with each other).
Each of the Mconstraints described in Section 7.1 can be encoded with its own matrix Am and vectorbm (which jointly define A and b in Equation (17)).
For convenience, we denote by c ?
Rdthe score vector, whose components are c(r, s), for each r ?
Rf and s ?
S (Equation (10)),and define the following scores for the mth subproblem:cm(r, s) = ?
(r, s)?1c(r, s), ?
(r, s) ?
i(m)where ?
(r, s) is the number of constraints that involve role r and span s. Note thataccording to this definition, c ?
z =?Mm=1 cm ?
zm.
We can rewrite the LP in Equation (17)in the following equivalent form:maximizeM?m=1cm ?
zmwith respect to u ?
Rd, zm ?
[0, 1]i(m), ?msuch that Amzm ?
bm, ?mzm = ui(m), ?m (18)We introduce Lagrange multipliers ?m for the equality constraints in the last line.The AD3 algorithm is depicted as Algorithm 2.
Like dual decomposition approaches,it repeatedly performs a broadcast operation (the zm-updates, which can be done inparallel, one constraint per ?worker?)
and a gather operation (the u- and ?-updates).Each u-operation can be seen as an averaged voting which takes into consideration eachworker?s results.Like in the subgradient method, the ?-updates can be regarded as price adjust-ments, which will affect the next round of zm-updates.
The only difference with respectto the subgradient method (Rush et al.
2010) is that each subproblem involved in azm-update also has a quadratic penalty that penalizes deviations from the previous43Computational Linguistics Volume 40, Number 1Algorithm 2 AD3 for Argument IdentificationRequire: role-span matching scores c := ?c(r, s)?r,s, structural constraints ?Am, bm?Mm=1,penalty ?
> 01: initialize t ?
12: initialize u1 uniformly (i.e., u(r, s) = 0.5, ?r, s)3: initialize each ?1m = 0, ?m ?
{1, .
.
.
, M}4: repeat5: for each m = 1, .
.
.
, M do6: make a zm-update by finding the best scoring analysis for the mth constraint,with penalties for deviating from the consensus u:z(t+1)m ?
argmaxAmztm?bm(cm + ?tm) ?
zm ?
?2?zm ?
uti(m)?2 (19)7: end for8: make a u-update by updating the consensus solution, averaging z1, .
.
.
, zm:u(t+1)(r, s) ?
1?
(r, s)?m:(r,s)?i(m)z(t+1)m (r, s)9: make a ?-update:?
(t+1)m ?
?tm ?
?
(z(t+1)m ?
u(t+1)i(m) ), ?m10: t ?
t + 111: until convergenceEnsure: relaxed primal solution u?
and dual solution ??.
If u?
is integer, it will encodean assignment of spans to roles.
Otherwise, it will provide an upper bound of thetrue optimum.average voting; it is this term that accelerates consensus and therefore convergence.Martins et al.
(2011b) also provide stopping criteria for the iterative updates usingprimal and dual residuals that measure convergence; we refer the reader to that paperfor details.A key attraction of this algorithm is that all the components of the declarativespecification remain intact in the procedural form.
Each worker corresponds exactlyto one constraint in the ILP, which corresponds to one linguistic constraint.
There is noneed to work out when, during the procedure, each constraint might have an effect, asin beam search.7.2.1 Solving the Subproblems.
In a different application, Martins et al.
(2011b, Section 4)showed how to solve each zm-subproblem associated with the XOR, XORWITHOUTPUTand OR factors in runtime O(|i(m)| log |i(m)|).
The only subproblem that remains is thatof the ATMOSTONE factor; a solution with the same runtime is given in Appendix B.7.2.2 Exact Decoding.
It is worth recalling that AD3, like other dual decompositionalgorithms, solves a relaxation of the actual problem.
Although we have observed thatthe relaxation is often tight (cf.
Section 7.3), this is not always the case.
Specifically, afractional solution may be obtained, which is not interpretable as an argument, andtherefore it is desirable to have a strategy to recover the exact solution.
Two observations44Das et al.
Frame-Semantic Parsingare noteworthy.
First, the optimal value of the relaxed problem (Equation (17)) providesan upper bound to the original problem (Equation (11)).
This is because Equation (11)has the additional integer constraint on the variables.
In particular, any feasible dualpoint provides an upper bound to the original problem?s optimal value.
Second, dur-ing execution of the AD3 algorithm, we always keep track of a sequence of feasibledual points.
Therefore, each iteration constructs tighter and tighter upper bounds.With this machinery, we have all that is necessary for implementing a branch-and-bound search that finds the exact solution of the ILP.
The procedure works recursivelyas follows:1.
Initialize L = ??
(our best value so far).2.
Run Algorithm 2.
If the solution u?
is integer, return u?
and set L to the objec-tive value.
If along the execution we obtain an upper bound less than L, thenAlgorithm 2 can be safely stopped and return ?infeasible?
?this is the bound part.Otherwise (if u?
is fractional) go to step 3.3.
Find the ?most fractional?
component of u?
(call it u?j ) and branch: constrain uj = 0and go to step 2, eventually obtaining an integer solution u?0 or infeasibility; andthen constrain uj = 1 and do the same, obtaining u?1 .
Return the u?
?
{u?0 , u?1} thatyields the largest objective value.Although this procedure may have worst-case exponential runtime, we found it empir-ically to rapidly obtain the exact solution in all test cases.7.3 Results with Collective Argument IdentificationWe present experiments only on argument identification in this section, as our goal isto exhibit the importance of incorporating the various linguistic constraints during ourinference procedure.
We present results on the full text annotations of FrameNet 1.5, anddo not experiment on the SemEval 2007 benchmark, as we have already established ourconstraint-agnostic models as state-of-the-art.
The model weights ?
used in the scoringfunction c were learned as in Section 6.1 (i.e., by training a logistic regression model tomaximize conditional log-likelihood).
The AD3 parameter ?
was initialized to 0.1, andwe followed Martins et al.
(2011b) in dynamically adjusting it to keep a balance betweenthe primal and dual residuals.We compare the following algorithms to demonstrate the efficacy of our collectiveargument identification approach:431.
Naive: This strategy selects the best span for each role r according to the scorefunction c(r, s), independently of all other roles?the decoding rule formalized inEquation (7) of Section 6.1.
It ignores all constraints except ?uniqueness.?2.
Beam: This strategy employs greedy beam search to eliminate overlaps betweenpredicted arguments, as described in Algorithm 1.
Note that it does not try torespect the ?excludes?
and ?requires?
constraints between pairs of roles.
Thedefault size of the beam in Section 1 was a safe 10,000; this resulted in extremelyslow decoding times.
For time comparison, we tried beam sizes of 100 and 2 (thelatter being the smallest size that achieves the same F1 score on the FrameNet 1.5dev set).43 The first two strategies correspond to rows 7 and 9, respectively, of Table 8.45Computational Linguistics Volume 40, Number 1Table 9Comparison of decoding strategies in Section 7.3 on the data set released with the FrameNet 1.5Release, given gold frames.
We evaluate in terms of precision, recall, and F1 score on our testset containing 4,458 targets.
We also compute the number of constraint violations each modelmakes: the three values are the numbers of overlapping arguments and violations of the?requires?
and ?excludes?
constraints of Section 7.1.
Finally, decoding time (without featurecomputation steps) on the whole test set is shown in the last column averaged over five runs.ARGUMENT IDENTIFICATIONMethod P R F1 Violations Time (s)naive 82.00 76.36 79.08 441 45 15 1.26 ?
0.01beam = 2 83.68 76.22 79.78 0 49 0 2.74 ?
0.10beam = 100 83.83 76.28 79.88 0 50 1 29.00 ?
0.25beam = 10, 000 83.83 76.28 79.88 0 50 1 440.67 ?
5.53CPLEX, LP 83.80 76.16 79.80 0 1 0 32.67 ?
1.29CPLEX, exact 83.78 76.17 79.79 0 0 0 43.12 ?
1.26AD3, LP 83.77 76.17 79.79 2 2 0 4.17 ?
0.01AD3, exact 83.78 76.17 79.79 0 0 0 4.78 ?
0.043.
CPLEX, LP: This uses CPLEX to solve the relaxed LP in Equation (17).
To han-dle fractional z, for each role r, we choose the best span s?
such that s?
=argmaxs?Sr zr,s, breaking ties arbitrarily.4.
CPLEX, exact: This tackles the actual ILP (Equation (11)) with CPLEX.5.
AD3, LP: The relaxed problem is solved using AD3.
We choose a span for each roleas in strategy 3.6.
AD3, exact: This couples AD3 with branch-and-bound search to get the exactinteger solution.Table 9 shows performance of these decoding strategies on the test set.
We reportprecision, recall, and F1 scores.
As with experiments in previous sections, we use theevaluation script from SemEval 2007 shared task.
Because these scores do not penalizeconstraint violations, we also report the number of overlap, ?excludes,?
and ?requires?constraints that were violated in the test set.
Finally, we tabulate each setting?s decodingtime in seconds on the whole test set averaged over five runs.44 The naive modelis very fast but suffers degradation in precision and violates one constraint roughlyper nine targets.
The decoding strategy of Section 6.1 used a default beam size of10,000, which is extremely slow; a faster version of beam size 100 results in the sameprecision and recall values, but is 15 times faster on our test set.
Beam size 2 resultsin slightly worse precision and recall values, but is even faster.
All of these, however,result in many constraint violations.
Strategies involving CPLEX and AD3 performsimilarly to each other and to beam search on precision and recall, but eliminate mostor all of the constraint violations.
With respect to precision and recall, exact AD3 andbeam search with a width of 10,000 were found to be statistically indistinguishable(p > 0.01).
The decoding strategy with beam size 2 is 11?16 times faster than the44 Experiments were conducted on a 64-bit machine with two 2.6-GHz dual-core CPUs (i.e., four processorsin all) and a total of 8 GB of RAM.
The workers in AD3 were not parallelized, whereas CPLEXautomatically parallelized execution.46Das et al.
Frame-Semantic Parsing.
(a) Gold annotation..(b) Beam search output.Figure 6An example from the test set where (a) exhibits the gold annotation for a target that evokesthe COLLABORATION frame, with the Partners role filled by the span international.
(b) showsthe prediction made by the beam search decoding scheme (beam = 10,000), where it marksinternational with the Partner 1 role, violating the ?requires?
constraint; FrameNet notes that thisrole should be present with the Partner 2 role.
AD3 is conservative and predicts no role?it ispenalized by the evaluation script, but does not produce output that violateslinguistic constraints.CPLEX strategies, but is only twice as fast as AD3, and results in significantly moreconstraint violations.
The exact algorithms are slower than the LP versions, but com-pared with CPLEX, AD3 is significantly faster and has a narrower gap between itsexact and LP versions.
We found that relaxation was tight 99.8% of the time on the testexamples.The example in Figure 1 is taken from our test set, and shows an instance where tworoles, Partner 1 and Partner 2, share the ?requires?
relationship; for this example, the beamsearch decoder misses the Partner 2 role, which is a violation, while our AD3 decoderidentifies both arguments correctly.
Note that beam search makes plenty of linguisticviolations.
We found that beam search, when violating many ?requires?
constraints,often finds one role in the pair, which increases its recall.
AD3 is sometimes moreconservative in such cases, predicting neither role.
Figure 6 shows such an examplewhere beam search finds one role (Partner 1) while AD3 is more conservative and predictsno roles.
Figure 7 shows another example contrasting the output of beam search andAD3 where the former predicts two roles sharing an ?excludes?
relationship; AD3 doesnot violate this constraint and tries to predict a more consistent argument set.
Overall,we found it interesting that imposing the constraints did not have much effect onstandard measures of accuracy.Table 9 only shows results with gold frames.
We ran the exact version of AD3 withautomatic frames as well.
When the semi-supervised graph objective UJSF-1,2 is usedfor frame identification, the performance with AD3 is only a bit worse in comparisonwith beam search (row 11 in Table 8) when frame and argument identification areevaluated together.
We get a precision of 72.92, a recall of 65.22 and an F1 score of 68.86(partial frame matching).
Again, all linguistic constraints are respected, unlike beamsearch.47Computational Linguistics Volume 40, Number 18.
ConclusionWe have presented an approach to rich frame-semantic parsing, based on a combinationof knowledge from FrameNet, two probabilistic models trained on full text annota-tions released along with the FrameNet lexicon, and expedient heuristics.
The frameidentification model uses latent variables in order to generalize to predicates unseenin either the FrameNet lexicon or training data, and our results show that, quite often,this model chooses a frame closely related to the gold-standard annotation.
We alsopresented an extension of this model that uses graph-based semi-supervised learningto better generalize to new predicates; this achieves significant improvements over thefully supervised approach.
Our argument identification model, trained using maximumconditional log-likelihood, unifies the traditionally separate steps of detecting and(a) Gold annotation.
(b) Beam search output.
(c) AD3 output.Figure 7An example from the test set where (a) exhibits the gold annotation for a target that evokesthe DISCUSSION frame, with the Interlocutor 1 role filled by the span neighbors.
(b) showsthe prediction made by the beam search decoding scheme (beam = 10,000), where it marksThe next morning his households and neighbors with the Interlocutors role, which violatesthe ?excludes?
constraint with respect to the Interlocutor 2 role.
In (c), AD3 marks the wrongspan as the Interlocutor 1 role, but it does not violate the constraint.
Both beam andAD3 inference miss the Topic role.48Das et al.
Frame-Semantic Parsinglabeling arguments.
Our system achieves improvements over the previous state of theart on the SemEval 2007 benchmark data set at each stage of processing and collectively.We also report stronger results on the more recent, larger FrameNet 1.5 release.We applied the AD3 algorithm to collective prediction of a target?s arguments,incorporating declarative linguistic knowledge as constraints.
It outperforms the naivelocal decoding scheme that is oblivious to the constraints.
Furthermore, it is significantlyfaster than a decoder employing a state-of-the-art proprietary solver; it is only twice asslow as beam search (our chosen decoding method for comparison with the state ofthe art), which is inexact and does not respect all linguistic constraints.
This method iseasily amenable to the inclusion of additional constraints.From our results, we observed that in comparison to the SemEval 2007 dataset, frame-semantic parsing performance significantly increases when we use theFrameNet 1.5 release; this suggests that the increase in the number of full text anno-tations and the size of the FrameNet lexicon is beneficial.
We believe that with moreannotations in the future (say, in the range of the number of PropBank annotations), ourframe-semantic parser can reach even better accuracy, making it more useful for NLPapplications that require semantic analysis.There are several open problems to be addressed.
Firstly, we could further im-prove the coverage of the frame-semantic parser by improving our semi-supervisedlearning approach; two possibilities are custom metric learning approaches (Dhillon,Talukdar, and Crammer 2010) that suit the frame identification problem in graph-basedSSL, and sparse word representations (Turian, Ratinov, and Bengio 2010) as featuresin frame identification.
The argument identification model might also benefit fromsemi-supervised learning.
Further feature engineering and improved preprocessing,including tokenization into lexical units, improved syntactic parsing, and the use ofexternal knowledge bases, is expected to improve the system?s accuracy.
Finally, theFrameNet lexicon does not contain exhaustive semantic knowledge.
Automatic frameand role induction is an exciting direction of future research that could further enhanceour methods of automatic frame-semantic parsing.
The parser described in this articleis available for download at http://www.ark.cs.cmu.edu/SEMAFOR.AppendixA.
Target Identification Heuristics from J&N?07We describe here the filtering rules that Johansson and Nugues (2007) used for identify-ing frame evoking targets in their SemEval 2007 shared task paper.
They built a filteringcomponent based on heuristics that removed words that appear in certain contexts, andkept the remaining ones.45 These are: have was retained only if had an object, be was retained only if it was preceded by there, will was removed in its modal sense, of course and in particular were removed,45 Although not explicitly mentioned in the paper, we believe that these rules were applied on a white list ofpotential targets seen in FrameNet and the SemEval 2007 training data.49Computational Linguistics Volume 40, Number 1 the prepositions above, against, at, below, beside, by, in, on, over, and underwere removed unless their head was marked as locative, after and before were removed unless their head was marked as temporal, into, to, and through were removed unless their head was marked asdirection, as, for, so, and with were always removed, because the only sense of the word of was the frame PARTITIVE, it wasremoved unless it was preceded by only, member, one, most, many, some, few,part, majority, minority, proportion, half, third, quarter, all, or none, or it wasfollowed by all, group, them, or us, all targets marked as support verbs for some other target were removed.Note that J&N?07 used a syntactic parser that provided dependency labels correspond-ing to locative, temporal, and directional arguments, which our syntactic parser ofchoice (the MST parser) does not provide.B.
Solving ATMOSTONE subproblems in AD3The ATMOSTONE subproblem can be transformed into that of projecting a point(a1, .
.
.
, ak) onto the setSm ={zm ?
[0, 1]|i(m)| |?|i(m)|j=1 zm,j ?
1}This projection can be computed as follows:1.
Clip each aj into the interval [0, 1] (i.e., set a?j = min{max{aj, 0}, 1}).
If the resultsatisfies?kj=1 a?j ?
1, then return (a?1, .
.
.
, a?k).2.
Otherwise project (a1, .
.
.
, ak) onto the probability simplex:{zm ?
[0, 1]|i(m)| |?|i(m)|j=1 zm,j = 1}This is precisely the XOR subproblem and can be solved in time O(|i(m)|log |i(m)|).The proof of this procedure?s correctness follows from the proof in Appendix B ofMartins et al.
(2011b).AcknowledgmentsWe thank Collin Baker, Katrin Erk, RichardJohansson, and Nils Reiter for software, data,evaluation scripts, and methodologicaldetails.
We thank the reviewers of this andthe earlier papers, Alan Black, Ric Crabbe,Michael Ellsworth, Rebecca Hwa, Dan Klein,Russell Lee-Goldman, Slav Petrov, Dan Roth,Josef Ruppenhofer, Amarnag Subramanya,Partha Talukdar, and members of the ARKgroup for helpful comments.
This work wassupported by DARPA grant NBCH-1080004,NSF grants IIS-0836431 and IIS-0915187,Qatar National Research Foundation grantNPRP 08-485-1-083, Google?s support of theWorldly Knowledge Project at CMU,computational resources provided by Yahoo,and TeraGrid resources provided by thePittsburgh Supercomputing Center undergrant TG-DBS110003.50Das et al.
Frame-Semantic ParsingReferencesAuli, Michael and Adam Lopez.
2011.A comparison of loopy belief propagationand dual decomposition for integratedCCG supertagging and parsing.In Proceedings of the 49th Annual Meetingof the Association for ComputationalLinguistics: Human Language Technologies,pages 470?480, Portland, OR.Baker, Collin, Michael Ellsworth, andKatrin Erk.
2007.
SemEval-2007 task 19:Frame semantic structure extraction.In Proceedings of the Fourth InternationalWorkshop on Semantic Evaluations,pages 99?104, Prague.Baluja, Shumeet, Rohan Seth, D. Sivakumar,Yushi Jing, Jay Yagnik, Shankar Kumar,Deepak Ravichandran, and MohamedAly.
2008.
Video suggestion and discoveryfor YouTube: taking random walksthrough the view graph.
In Proceedingsof the 17th International Conference onthe World Wide Web, pages 895?904,Beijing.Bauer, Daniel and Owen Rambow.
2011.Increasing coverage of syntacticsubcategorization patterns in FrameNetusing VerbNet.
In Proceedings of the 2011IEEE Fifth International Conference onSemantic Computing, pages 181?184,Washington, DC.Bejan, Cosmin A.
2009.
Learning EventStructures From Text.
Ph.D. thesis, TheUniversity of Texas at Dallas.Bengio, Yoshua, Olivier Delalleau, andNicolas Le Roux.
2006.
Label propagationand quadratic criterion.
In OlivierChapelle, Bernhard Scho?lkopf, andAlexander Zien, editors, Semi-SupervisedLearning.
MIT Press, Cambridge, MA,pages 193?216.Boas, Hans C. 2002.
Bilingual FrameNetdictionaries for machine translation.In Proceedings of the Third InternationalConference on Language Resources andEvaluation, pages 1,364?1,371, Las Palmas.Bottou, Le?on.
2004.
Stochastic learning.In Olivier Bousquet and Ulrike vonLuxburg, editors, Advanced Lectures onMachine Learning, Lecture Notes inArtificial Intelligence, LNAI 3176.Springer Verlag, Berlin, pages 146?168.Burbea, Jacob and Calyampudi R. Rao.
2006.On the convexity of some divergencemeasures based on entropy functions.IEEE Transactions on Information Theory,28(3):489?495.Burchardt, Aljoscha, Katrin Erk, andAnette Frank.
2005.
A WordNet detourto FrameNet.
In Bernhard Fisseni,Hans-Christian Schmitz, BernhardSchro?der, and Petra Wagner, editors,Sprachtechnologie, mobile Kommunikationund linguistische Resourcen, volume 8 ofComputer Studies in Language and Speech.Peter Lang, Frankfurt am Main,pages 408?421.Burchardt, Aljoscha and Anette Frank.
2006.Approaching textual entailment with LFGand FrameNet frames.
In Proceedings of theSecond PASCAL RTE Challenge Workshop,pages 92?97, Venice.Burchardt, Aljoscha, Marco Pennacchiotti,Stefan Thater, and Manfred Pinkal.
2009.Assessing the impact of frame semanticson textual entailment.
Natural LanguageEngineering, 15(4):527?550.Carreras, Xavier and Llu?
?s Ma`rquez.
2004.Introduction to the CoNLL-2004 sharedtask: Semantic role labeling.
In Proceedingsof the Eighth Conference on ComputationalNatural Language Learning, pages 89?97,Boston, MA.Carreras, Xavier and Llu?
?s Ma`rquez.
2005.Introduction to the CoNLL-2005 sharedtask: Semantic role labeling.
In Proceedingsof the Ninth Conference on ComputationalNatural Language Learning, pages 152?164,Ann Arbor, MI.Chang, Yin-Wen and Michael Collins.2011.
Exact decoding of phrase-basedtranslation models through Lagrangianrelaxation.
In Proceedings of the 2011Conference on Empirical Methods in NaturalLanguage Processing, pages 26?37,Edinburgh.Chapelle, Olivier, Bernhard Scho?lkopf,and Alexander Zien, editors.
2006.Semi-Supervised Learning.
MIT Press,Cambridge, MA.Chen, Desai, Nathan Schneider, DipanjanDas, and Noah A. Smith.
2010.
SEMAFOR:Frame argument resolution withlog-linear models.
In Proceedings of the5th International Workshop on SemanticEvaluation, pages 264?267, Upssala.Corduneanu, Adrian and Tommi Jaakkola.2003.
On information regularization.In Proceedings of the Nineteenth Conferenceon Uncertainty in Artificial Intelligence,pages 151?158, Acapulco.Das, Dipanjan, Andre?
F. T. Martins, andNoah A. Smith.
2012.
An exact dualdecomposition algorithm for shallowsemantic parsing with constraints.In Proceedings of the First Joint Conferenceon Lexical and Computational Semantics,pages 209?217, Montre?al.51Computational Linguistics Volume 40, Number 1Das, Dipanjan and Slav Petrov.
2011.Unsupervised part-of-speech taggingwith bilingual graph-based projections.In Proceedings of the 49th Annual Meetingof the Association for ComputationalLinguistics: Human Language Technologies,pages 600?609, Portland, OR.Das, Dipanjan, Nathan Schneider, DesaiChen, and Noah A. Smith.
2010.Probabilistic frame-semantic parsing.In Proceedings of the Human LanguageTechnologies Conference of the NorthAmerican Chapter of the Association forComputational Linguistics, pages 948?956,Los Angeles, CA.Das, Dipanjan and Noah A. Smith.
2011.Semi-supervised frame-semantic parsingfor unknown predicates.
In Proceedings ofthe 49th Annual Meeting of the Associationfor Computational Linguistics: HumanLanguage Technologies, pages 1,435?1,444,Portland, OR.Das, Dipanjan and Noah A. Smith.
2012.Graph-based lexicon expansion withsparsity-inducing penalties.
In Proceedingsof the Human Language TechnologiesConference of the North American Chapterof the Association for ComputationalLinguistics, pages 677?687, Montre?al.Dean, Jeffrey and Sanjay Ghemawat.
2008.MapReduce: Simplified data processingon large clusters.
Communications of theACM, 51(1):107?113.DeNero, John and Klaus Macherey.
2011.Model-based aligner combination usingdual decomposition.
In Proceedings ofthe 49th Annual Meeting of the Associationfor Computational Linguistics: HumanLanguage Technologies, pages 420?429,Portland, OR.Deschacht, Koen and Marie-Francine Moens.2009.
Semi-supervised semantic rolelabeling using the Latent Words LanguageModel.
In Proceedings of the 2009 Conferenceon Empirical Methods in Natural LanguageProcessing, pages 21?29, Singapore.Dhillon, Paramveer S., Partha PratimTalukdar, and Koby Crammer.
2010.Learning better data representationusing inference-driven metriclearning.
In Proceedings of the ACL2010 Conference Short Papers,pages 377?381, Uppsala.Erk, Katrin and Sebastian Pado?.
2006.Shalmaneser?a toolchain for shallowsemantic parsing.
In Proceedings of theFifth International Conference on LanguageResources and Evaluation, pages 527?532,Genoa.Fellbaum, Christiane, editor.
1998.
WordNet:an electronic lexical database.
MIT Press,Cambridge, MA.Fillmore, Charles J.
1982.
Frame semantics.In Linguistics in the Morning Calm.Hanshin Publishing Co., Seoul,pages 111?137.Fillmore, Charles J., Christopher R. Johnson,and Miriam R. L. Petruck.
2003.Background to FrameNet.
InternationalJournal of Lexicography, 16.3:235?250.Fleischman, Michael, Namhee Kwon, andEduard Hovy.
2003.
Maximum entropymodels for FrameNet classification.In Proceedings of the 2003 Conference onEmpirical Methods in Natural LanguageProcessing, pages 49?56, Sapporo.Fung, Pascale and Benfeng Chen.
2004.BiFrameNet: Bilingual frame semanticsresource construction by cross-lingualinduction.
In Proceedings of the 20thInternational Conference on ComputationalLinguistics, pages 931?937, Geneva.Fu?rstenau, Hagen and Mirella Lapata.
2009a.Graph alignment for semi-supervisedsemantic role labeling.
In Proceedings of the2009 Conference on Empirical Methods inNatural Language Processing, pages 11?20,Singapore.Fu?rstenau, Hagen and Mirella Lapata.
2009b.Semi-supervised semantic role labeling.In Proceedings of the 12th Conference of theEuropean Chapter of the ACL, pages 220?228,Athens.Fu?rstenau, Hagen and Mirella Lapata.
2012.Semi-supervised semantic role labelingvia structural alignment.
ComputationalLinguistics, 38(1):135?171.Gerber, Matthew and Joyce Chai.
2010.Beyond NomBank: A study of implicitarguments for nominal predicates.
InProceedings of ACL, pages 1,583?1,592,Uppsala.Gildea, Daniel and Daniel Jurafsky.
2002.Automatic labeling of semantic roles.Computational Linguistics, 28(3):245?288.Girju, Roxana, Preslav Nakov, Vivi Nastase,Stan Szpakowicz, Peter Turney, and DenizYuret.
2007.
SemEval-2007 task 04:Classification of semantic relationsbetween nominals.
In Proceedings of theFourth International Workshop on SemanticEvaluations, pages 13?18, Prague.Giuglea, Ana-Maria and AlessandroMoschitti.
2006.
Shallow semanticparsing based on FrameNet, VerbNetand PropBank.
In Proceedings of the17th European Conference on ArtificialIntelligence, pages 563?567, Amsterdam.52Das et al.
Frame-Semantic ParsingGropp, W., E. Lusk, and A. Skjellum.
1994.Using MPI: Portable Parallel Programmingwith the Message-Passing Interface.MIT Press, Cambridge, MA.Hajic?, Jan, Massimiliano Ciaramita,Richard Johansson, Daisuke Kawahara,Maria Anto`nia Mart?
?, Llu?
?s Ma`rquez,Adam Meyers, Joakim Nivre, SebastianPado?, Jan S?te?pa?nek, Pavel Stran?a?k, MihaiSurdeanu, Nianwen Xue, and Yi Zhang.2009.
The CoNLL-2009 shared task:Syntactic and semantic dependencies inmultiple languages.
In Proceedings of theThirteenth Conference on ComputationalNatural Language Learning, pages 1?18,Boulder, CO.Ide, Nancy and Jean Ve?ronis.
1998.Introduction to the special issue on wordsense disambiguation: The state of the art.Computational Linguistics, 24(1):2?40.Johansson, Richard and Pierre Nugues.2007.
LTH: Semantic structure extractionusing nonprojective dependency trees.In Proceedings of the 4th InternationalWorkshop on Semantic Evaluations,pages 227?230, Prague.Johansson, Richard and Pierre Nugues.
2008.Dependency-based semantic role labelingof PropBank.
In Proceedings of the 2008Conference on Empirical Methods in NaturalLanguage Processing, pages 69?78,Honolulu, HI.Kingsbury, Paul and Martha Palmer.
2002.From TreeBank to PropBank.
In Proceedingsof the 3rd International Conference onLanguage Resources and Evaluation,pages 1,989?1,993, Las Palmas.Komodakis, Nikos, Nikos Paragios, andGeorgios Tziritas.
2007.
MRF optimizationvia dual decomposition: Message-passingrevisited.
In Eleventh InternationalConference on Computer Vision, pages 1?8,Rio de Janeiro.Koo, Terry, Alexander M. Rush, MichaelCollins, Tommi Jaakkola, and DavidSontag.
2010.
Dual decomposition forparsing with non-projective headautomata.
In Proceedings of the 2010Conference on Empirical Methods in NaturalLanguage Processing, pages 1,288?1,298,Cambridge, MA.Kowalski, Matthieu and Bruno Torre?sani.2009.
Sparsity and persistence: Mixednorms provide simple signal models withdependent coefficients.
Signal, Image andVideo Processing, 3:251?264.Lang, Joel and Mirella Lapata.
2010.Unsupervised induction of semantic roles.In Proceedings of the Human LanguageTechnologies Conference of the NorthAmerican Chapter of the Association forComputational Linguistics, pages 939?947,Los Angeles, CA.Lang, Joel and Mirella Lapata.
2011.Unsupervised semantic role inductionwith graph partitioning.
In Proceedingsof the 2011 Conference on EmpiricalMethods in Natural Language Processing,pages 1320?1331, Edinburgh.Lin, Dekang.
1993.
Principle-based parsingwithout overgeneration.
In Proceedings ofthe 31st Annual Meeting of the Association forComputational Linguistics, pages 112?120,Columbus, OH.Lin, Dekang.
1994.
Principar?an efficient,broad-coverage, principle-based parser.In Proceedings of the 15th Conference onComputational Linguistics, pages 482?488,Kyoto.Lin, Dekang.
1998.
Automatic retrieval andclustering of similar words.
In Proceedingsof the 36th Annual Meeting of the Associationfor Computational Linguistics and 17thInternational Conference on ComputationalLinguistics, pages 768?774, Montreal.Lin, Jianhua.
1991.
Divergence measuresbased on the Shannon entropy.
IEEETransactions on Information Theory,37(1):145?151.Litkowski, Kenneth C. and Orin Hargraves.2007.
SemEval-2007 task 06: Word-sensedisambiguation of prepositions.
InProceedings of the Fourth InternationalWorkshop on Semantic Evaluations(SemEval-2007), pages 24?29, Prague.Liu, Dong C. and Jorge Nocedal.
1989.
Onthe limited memory BFGS method forlarge scale optimization.
MathematicalProgramming, 45(3):503?528.Marcus, Mitchell P., Mary AnnMarcinkiewicz, and Beatrice Santorini.1993.
Building a large annotated corpus ofEnglish: the Penn treebank.
ComputationalLinguistics, 19(2):313?330, June.Ma`rquez, Llu?
?s, Xavier Carreras, Kenneth C.Litkowski, and Suzanne Stevenson.
2008.Semantic role labeling: an introduction tothe special issue.
Computational Linguistics,34(2):145?159, June.Martins, Andre?
F. T., Mario A. T. Figueiredo,Pedro M. Q. Aguiar, Noah A. Smith, andEric P. Xing.
2011a.
An augmentedLagrangian approach to constrained MAPinference.
In Proceedings of the 28thInternational Conference on MachineLearning, pages 169?176, Bellevue, WA.Martins, Andre?
F. T., Noah A. Smith, PedroM.
Q. Aguiar, and Mario A. T. Figueiredo.53Computational Linguistics Volume 40, Number 12011b.
Dual decomposition with manyoverlapping components.
In Proceedingsof the 2011 Conference on EmpiricalMethods in Natural Language Processing,pages 238?249, Edinburgh.Martins, Andre?
F. T., Noah A. Smith, andEric P. Xing.
2009.
Concise integerlinear programming formulations fordependency parsing.
In Proceedings ofthe Joint Conference of the 47th AnnualMeeting of the Association for ComputationalLinguistics and the 4th InternationalJoint Conference on Natural LanguageProcessing of the AFNLP, pages 342?350,Suntec.Martins, Andre?
F. T., Noah A. Smith, Eric P.Xing, Mario A. T. Figueiredo, and PedroM.
Q. Aguiar.
2010.
Turbo parsers:Dependency parsing by approximatevariational inference.
In Proceedings of the2010 Conference on Empirical Methods inNatural Language Processing, pages 34?44,Cambridge, MA.Matsubayashi, Yuichiroh, Naoaki Okazaki,and Jun?ichi Tsujii.
2009.
A comparativestudy on generalization of semantic rolesin FrameNet.
In Proceedings of the JointConference of the 47th Annual Meeting of theAssociation for Computational Linguistics andthe 4th International Joint Conference onNatural Language Processing of the AFNLP,pages 19?27, Suntec.McDonald, Ryan, Koby Crammer, andFernando Pereira.
2005.
Onlinelarge-margin training of dependencyparsers.
In Proceedings of the 43rd AnnualMeeting of the Association for ComputationalLinguistics, pages 91?98, Ann Arbor, MI.Meyers, Adam, Ruth Reeves, CatherineMacleod, Rachel Szekely, VeronikaZielinska, Brian Young, and RalphGrishman.
2004.
The NomBank project:An interim report.
In Proceedings of theNAACL-HLT Workshop on Frontiersin Corpus Annotation, pages 24?31,Boston, MA.Moschitti, Alessandro, Paul Morarescu, andSanda M. Harabagiu.
2003.
Open-domaininformation extraction via automaticsemantic labeling.
In Ingrid Russell andSusan M. Haller, editors, Proceedings of theSixteenth International Florida ArtificialIntelligence Research Society Conference,pages 397?401, St. Augustine, FL.Narayanan, Srini and Sanda Harabagiu.2004.
Question answering based onsemantic structures.
In Proceedings ofthe 20th International Conference onComputational Linguistics, Geneva.Pado?, Sebastian and Katrin Erk.
2005.To cause or not to cause: cross-lingualsemantic matching for paraphrasemodelling.
In Proceedings of theCross-Language Knowledge InductionWorkshop, Cluj-Napoca.Pado, Sebastian and Mirella Lapata.
2005.Cross-linguistic projection of role-semanticinformation.
In Proceedings of HumanLanguage Technology Conference andConference on Empirical Methods in NaturalLanguage Processing, pages 859?866,Vancouver.Pennacchiotti, Marco, Diego De Cao, RobertoBasili, Danilo Croce, and Michael Roth.2008.
Automatic induction of FrameNetlexical units.
In Proceedings of the 2008Conference on Empirical Methods in NaturalLanguage Processing, pages 457?465,Honolulu, HI.Pradhan, Sameer S., Wayne H. Ward,Kadri Hacioglu, James H. Martin, andDan Jurafsky.
2004.
Shallow semanticparsing using support vector machines.In Proceedings of the Human LanguageTechnologies Conference of the NorthAmerican Chapter of the Association forComputational Linguistics, pages 233?240,Boston, MA.Punyakanok, Vasin, Dan Roth, and Wen-tauYih.
2008.
The importance of syntacticparsing and inference in semantic rolelabeling.
Computational Linguistics,34(2):257?287.Punyakanok, Vasin, Dan Roth, Wen-tau Yih,and Dav Zimak.
2004.
Semantic rolelabeling via integer linear programminginference.
In Proceedings of the 20thInternational Conference on ComputationalLinguistics, pages 1,346?1,352, Geneva.Ratnaparkhi, Adwait.
1996.
A maximumentropy model for part-of-speech tagging.In Proceedings of the 1996 EmpiricalMethods in Natural Language Processing,pages 133?142, Copenhagen.Riedel, Sebastian and James Clarke.
2006.Incremental integer linear programmingfor non-projective dependency parsing.In Proceedings of the 2006 Conference onEmpirical Methods in Natural LanguageProcessing, pages 129?137, Sydney.Roth, Dan and Wen-tau Yih.
2004.
A linearprogramming formulation for globalinference in natural language tasks.In Proceedings of the Eighth Conference onComputational Natural Language Learning,pages 1?8, Boston, MA.Ruppenhofer, Josef, Michael Ellsworth,Miriam R. L. Petruck, Christopher R.54Das et al.
Frame-Semantic ParsingJohnson, and Jan Scheffczyk.
2006.FrameNet II: extended theory andpractice.
International Computer ScienceInstitute, Berkeley, CA.Rush, Alexander M. and Michael Collins.2011.
Exact decoding of syntactictranslation models through Lagrangianrelaxation.
In Proceedings of the 49th AnnualMeeting of the Association for ComputationalLinguistics: Human Language Technologies,pages 72?82, Portland, OR.Rush, Alexander M, David Sontag, MichaelCollins, and Tommi Jaakkola.
2010.On dual decomposition and linearprogramming relaxations for naturallanguage processing.
In Proceedings of the2010 Conference on Empirical Methods inNatural Language Processing, pages 1?11,Cambridge, MA.Schuler, Karin K. 2005.
VerbNet: abroad-coverage, comprehensive verb lexicon.Ph.D.
thesis, University of Pennsylvania.Sha, Fei and Fernando Pereira.
2003.
Shallowparsing with conditional random fields.In Proceedings of the Human LanguageTechnology Conference of the North AmericanChapter of the Association for ComputationalLinguistics, pages 134?141, Edmonton.Shen, Dan and Mirella Lapata.
2007.
Usingsemantic roles to improve questionanswering.
In Proceedings of the 2007 JointConference on Empirical Methods in NaturalLanguage Processing and ComputationalNatural Language Learning, pages 12?21,Prague.Shi, Lei and Rada Mihalcea.
2004.
Analgorithm for open text semantic parsing.In Proceedings of Workshop on RobustMethods in Analysis of Natural LanguageData, pages 59?67, Geneva.Shi, Lei and Rada Mihalcea.
2005.
Puttingpieces together: Combining FrameNet,VerbNet and WordNet for robustsemantic parsing.
In Proceedings of the 6thInternational Conference on ComputationalLinguistics and Intelligent Text Processing,pages 100?111, Mexico City.Smith, David A. and Jason Eisner.
2008.Dependency parsing by beliefpropagation.
In Proceedings of the 2008Conference on Empirical Methods in NaturalLanguage Processing, pages 145?156,Honolulu, HI.Subramanya, Amarnag and Jeff Bilmes.2008.
Soft-supervised learning for textclassification.
In Proceedings of the 2008Conference on Empirical Methods in NaturalLanguage Processing, pages 1,090?1,099,Honolulu, HI.Subramanya, Amarnag, Slav Petrov, andFernando Pereira.
2010.
Efficientgraph-based semi-supervised learning ofstructured tagging models.
In Proceedingsof the 2010 Conference on Empirical Methodsin Natural Language Processing,pages 167?176, Cambridge, MA.Surdeanu, Mihai, Sanda Harabagiu,John Williams, and Paul Aarseth.
2003.Using predicate-argument structures forinformation extraction.
In Proceedings of the41st Annual Meeting on Association forComputational Linguistics, pages 8?15,Sapporo.Surdeanu, Mihai, Richard Johansson,Adam Meyers, Llu?
?s Ma`rquez, and JoakimNivre.
2008.
The CoNLL 2008 shared taskon joint parsing of syntactic and semanticdependencies.
In Proceedings of the TwelfthConference on Computational NaturalLanguage Learning, pages 159?177,Manchester.Szummer, Martin and Tommi Jaakkola.2001.
Partially labeled classification withMarkov random walks.
In Advances inNeural Information Processing Systems 14,pages 945?952, Vancouver.Talukdar, Partha Pratim and Koby Crammer.2009.
New regularized algorithms fortransductive learning.
In Proceedings of theEuropean Conference on Machine Learningand Knowledge Discovery in Databases,pages 442?457, Bled.Thompson, Cynthia A., Roger Levy,and Christopher D. Manning.
2003.A generative model for semantic rolelabeling.
In Proceedings of the EuropeanConference on Machine Learning,pages 397?408, Cavtat-Dubrovnik.Titov, Ivan and Alexandre Klementiev.
2012.A Bayesian approach to unsupervisedsemantic role induction.
In Proceedings ofthe 13th Conference of the European Chapter ofthe Association for Computational Linguistics,pages 12?22, Avignon.Toutanova, Kristina, Aria Haghighi,and Christopher Manning.
2005.Joint learning improves semanticrole labeling.
In Proceedings of the43rd Annual Meeting of the Associationfor Computational Linguistics,pages 589?596, Ann Arbor, MI.Turian, Joseph, Lev-Arie Ratinov,and Yoshua Bengio.
2010.
Wordrepresentations: A simple and generalmethod for semi-supervised learning.In Proceedings of the 48th Annual Meetingof the Association for ComputationalLinguistics, pages 384?394, Uppsala.55Computational Linguistics Volume 40, Number 1Weston, Jason, Fre?de?ric Ratle, andRonan Collobert.
2008.
Deep learningvia semi-supervised embedding.In Proceedings of the 25th InternationalConference on Machine Learning,pages 1,168?1,175, Helsinki.Xue, Nianwen and Martha Palmer.
2004.Calibrating features for semantic rolelabeling.
In Proceedings of the 2004Conference on Empirical Methods in NaturalLanguage Processing, pages 88?94,Barcelona.Yi, Szu-ting, Edward Loper, and MarthaPalmer.
2007.
Can semantic rolesgeneralize across genres?
In Proceedings ofthe Human Language Technologies Conferenceof the North American Chapter of theAssociation for Computational Linguistics,pages 548?555, Rochester, NY.Zhu, Xiaojin.
2008.
Semi-supervisedlearning literature survey.
Available athttp://pages.cs.wisc.edu/?jerryzhu/pub/ssl survey.pdf.
Last AccessedJuly 2013.Zhu, Xiaojin, Zoubin Ghahramani, andJohn Lafferty.
2003.
Semi-supervisedlearning using Gaussian fields andharmonic functions.
In Proceedings of the20th International Conference on MachineLearning, pages 912?919, Washington, DC.56
