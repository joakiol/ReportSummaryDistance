JU-PTBSGRE:  GRE Using Prefix Tree Based StructureAbstractThis paper presents a Prefix Tree based modelof Generation of Referring Expression (RE).Our algorithm PTBSGRE works in two phas-es.
First, an encoded prefix tree is constructeddescribing the domain structure.
Subsequent-ly, RE is generated using that structure.
Weevaluated our system using Dice, MASI, Ac-curacy, Minimality and Uniqueness scoringmethod using standard TEVAl tool and the re-sult is encouraging.1 IntroductionGeneration of referring expression (GRE) is animportant task in the field of Natural LanguageGeneration (NLG) systems.
The existing algo-rithms in GRE lie in two extremities.
IncrementalAlgorithm is simple and speedy but less expressivein nature whereas others are complex and exhaus-tive but more expressive in nature.
We propose anew Prefix Tree (Trie) based framework for mod-eling GRE problems.
It incorporates intricate fea-tures of GRE (like set and boolean descriptions,context sensitivity, relational description etc.
)while achieving attractive properties of Incremen-tal algorithm (simplicity, speed etc.).
The prefixtree based algorithm works in two phases.
First, itencodes the description, stored in the knowledgebase, in the form of prefix tree structure.
Secondly,it generates the referring expression identifying thetarget object, which is basically a node searchproblem in the tree.
The edges in our encoded triestructure are labeled and the path from root to thatnode forms the distinguishing description for thetarget object.Let D be the Domain, r be the target object andP be the ?PreferredAttributes?
List.The Trie con-structionn algorithm  ConstructTrie(D,P,T) isshown in figure 1, Referring expression generationalgorithm MakeRefExpr(r,p,T,L) is shown infigure 2, where T is a node pointer and p is pointerto parent of that node.
Our algorithm MakeRe-fExpr returns set of attribute-values L to identify rin the domain.
[[Ni]]= {d |d?D and d is stored atnode Ni where Ni is an i-th level node}.
Card(N) iscardinality of set of objects in node N.Figure 1.
Prefix Tree Generation AlgorithmFigure 2.
Expression Generation AlgorithmThe significant achievement is that incompletenessof previous algorithms can be tackled in this modelin a straightforward way.
For example, in case ofvague descriptions (overlapping properties), In-cremental and other algorithms are unable to findunambiguous description even if it exists but ourprefix tree model takes into account hearer modelSibabrata PaladhiSivaji BandyopadhyayDepartment of Computer Sc.
& Engg.
Department of Computer Sc.
& Engg.Jadavpur University, India Jadavpur University, Indiasibabrata_paladhi@yahoo.com            sivaji_cse_ju@yahoo.com230and generate description for identifying the targetobject.
Besides, in case of Boolean, plural, contextsensitive and relational description generation ourmodel provides a simple and linguistically richapproach to GRE.2 Evaluation ResultsIn Table 1 and 2 the evaluation results for Furni-ture and People data has been shown.Table1: Evaluation Result of Furniture dataTable2: Evaluation Result of People dataReferencesR.
Dale and E. Reiter.
1995.
Computational Interpretations ofthe Gricean Maxims in the generation of Referring Expres-sions.
Cognitive Science (18): 233 ?263S.
Paladhi and S. Bandyopadhyay.
2008.
Generation of Refer-ring Expression Using Prefix Tree Structure.
Proceedingsof  IJCNLP: 697-702van Deemter.
2002.
Boolean Extensions of Incremental Algo-rithm.
Computational Linguistics 28(1): 37-52231
