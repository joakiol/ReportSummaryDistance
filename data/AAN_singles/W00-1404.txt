Document Structure and Multilingual AuthoringCarol ine Brun Marc Dymetman Veronika LuxXerox  Research  Cent re  Europe6 chemin  de Mauper tu i s38240 Mey lan ,  F rance{brun ,  dymetman,  lux}?xrce ,  xerox ,  comAbst rac tThe use of XML-based authoring tools is swiftly be-coming a standard in the world of technical docu-mentation.
An XML document is a mixture of struc-ture (the tags) and surface (text between the tags).The structure reflects the choices made by the au-thor during the top-down stepwise refinement of thedocument under control of a DTD grammar.
Thesechoices are typically choices of meaning which areindependent of the language in which the documentis rendered, and can be seen as a kind of interlin-gua for the class of documents which is modeled bythe DTD.
Based on this remark, we advocate a rad-icalization of XML authoring, where the semanticcontent of the document is accounted for exclusivelyin terms of choice structures, and where appropri-ate rendering/realization mechanisms are responsi-ble for producing the surface, possibly in several lan-guages imultaneously.
In this view, XML authoringhas strong connections to natural language genera-tion and text authoring.
We describe the IG (In-teraction Grammar) formalism, an extension of DT-D's which permits powerful inguistic manipulations,and show its application to the production of multi-lingual versions of a certain class of pharmaceuticaldocuments.1 In t roduct ionThe world of technical documentation is forcefullymoving towards the use of authoring tools basedon the XML markup language (W3C, 1998; Pardi,1999).
This language is based on grammatical spec-ifications, called DTD's, which are roughly similarto context-free grammars 1 with an arbitrary num-ber of non-terminals and exactly one predefined ter-minal called pcdata.
The pcdata  terminal has aspecial status: it can dominate any character st, ring(subject to certain restrictions on the characters al-lowed).
Authoring is seen as a. top-down interactiveprocess of step-wise refinement of the root nonter-minal (corresponding to the whole document) wherethe author iteratively selects a rule for expanding alBut see (Wood, 1995: Prescod, 1998) for discussions ofthe differences.nonterminal already present in the tree and wherein addition s/he can choose an arbitrary sequenceof characters (roughly) for expanding tile pcdatanode.
The resulting document is a mixture of tree-like structure (the context-free derivation tree cor-responding to the author's selections), representedthrough tags, and of surface, represented as free-text(PCDATA) between the tags.We see however a tension between the structureand surface aspects of an XML document:?
While structural choices are under system con-trol (they have to be compatible with the DTD),surface choices are not.
2?
Surface strings are treated as unanalysablechunks for the styling mechanisms that renderthe XML document o the reader.
They canbe displayed in a given font or moved around,but they lack the internal structure that wouldpermit to "re-purpose" them for different ren-dering situations, such as displaying on mobiletelephone screens, wording differently for a spe-cific audience, or producing prosodically ade-quate phonetic output.
This situation standsin contrast with the underlying philosophy ofXML, which emphasizes the separation betweencontent specification and the multiple situationsin which this content can be exploited..
Structural decisions tend t,o be associated wit, hchoices of meaning which are independent of thelanguage in which the document is rendered.Thus for instance the DTD for an aircraft main-tenance manual might distinguish between twokinds of risks: caut ion  (material damage risk)and warning (risk to the operator).
By select-ing one of these options (a choice that will leadt,o further-t_owerdevel choices,), the::author takesa decision of a semantic nature, which is quiteindependent of the language in which the docu-ment is to be rendered, and which could be ex-ploited to produce multilingual versions of the2With  the emergenceof  schemas (W3C, 1999a), which per-mit some typing of the surface (float, boolean, string, etc.
),some degree of control is becoming more feasible.24document.
By contrast, a PCDATA string islanguage-specific.and ill-suited for multilingualapplications.These remarks point to a possible radical view ofXML authoring that advocates that surface stringsbe altogether eliminated from the document content,and that author choices be all under the explicit con-trol of the DTD and reflected in the document struc-ture.
Such a view, which is argued for in a relatedpaper (Dymetman et el., 2000), emphasizes the linkapplication of MDA to a certain domain of pharma-ceutical documents.2 Our approach to MultilingualDocument AuthoringOur Multilingual Document Authoring system hasthe following main features:First, the authoring process is monolingual, butthe results are multilingual.
At each point of the pro-cess the author can view in his/her own language the..... .
.
.
.
.
.
.
.
.
.
.
between ~ML`d~cumeqt~a~a9ring`~aad;mu~ti~nguaL;~,~.~te~t:~s/h~hasa~u~h~rex~:~.~aa~a~d~rea~?where~he ..:text authoring/generation (Power and Scott, 1998; text still needs refinement are highlighted.
MenusHartley and Paris, 1997; Coch, 1996): the choices for selecting a refinement are also presented to themade by the author are treated as a kind of in- author is his/her own language.
Thus, the author isterlingua (specific to the class of documents being always overtly working in the language s/he nows,modelled), and it is the responsibility of appropri- but is implicitly building a language-independentate "rendering" mechanisms to produce actual text representation of the document content.
From thisfrom these choices ill tile different languages 3 under representation, the system builds multilingual textsconsideration, in any of several anguages simultaneously.
This ap-For such a program, existing XML tools suffer proach characterizes our system as belonging to anhowever from serious limitations.
First, DTD's are emerging paradigm of"natural anguage authoring"too  poor in expressive power (they are close to (Power and Scott, 1998; Hartley and Paris, 1997),context-free grammars) for expressing dependencies which is distinguished from natural anguage gener-between different parts of the document, an aspect ation by the fact that the semantic input is providedwhich becomes central as soon as the document interactively by a person rather than by a programmicro-structure (its fine-grained semantic structure) accessing digital knowledge representations.starts to play a prominent role, as opposed to simply Second, the system maintains strong control bothits macro-structure (its organization i  large seman- over the semantics and the realizations of the docu-tic units, typically larger than a paragraph).
Second, ment.
At the semantic level, dependencies betweencurrent rendering mechanisms such as CSS (Cascad- different parts of the representation f the documenting Style Sheets) or XSLT (XLS transformation lan- content can be imposed: for instance the choice ofguage) (W3C, 1999b) are ill-adapted for handling a certain chemical at a certain point in a mainte-even simple linguistic phenomena such as morpho- nance manual may lead to an obligatory warninglogical variation or subject-verb agreement, at another point in the manual.
At the realizationIn order to overcome these limitations, we are level, which is not directly manipulated by the au-using a formalism, Interaction Grammars (IG), a thor, the system can impose terminological choicesspecialization of Definite Clause Grammars (Pereira (e.g.
company-specific nomenclature for a given con-and Warren, 1980) which originates in A. Ranta's cept) or stylistic choices (such as choosing betweenGrammatical Framework (GF) (Ranta; M~enp~igt using the infinitive or the imperative mode in Frenchand Ranta, 1999; Dynaetman et el., 2000), a gram- to express an instruction to an operator).matical formalism based on Martin-LSf's Type The- Finally, and possibly most distinctively, the st-ory (Martin-L6f, 1984) and building on previous ex- mantle representation underlying the authoring pro-perience with interactive mathematical proof editors cess is strongly document-centric and geared towards(Magnusson and Nordstr6m, 1994).
In this formal- directly expressing the choices which uniquely char-ism, the carrier of meaning is a choice tree (called aeterize a given document in an homoge~cous class"abstract ree" in GF), a strongly typed object in of documents belonging to the same domain.
Ourwhich dependencies between substructures can be view is document-centric in the sense that it takeseasily stated using the notion of dependent types, as its point of departure the widespread practice ofThe remainder of this paper is organized as fol- using XML tools for authoring the macro-structurelows.
In section 2,,,we give a'~,high.teveloverview .of ..... of doeuments,-oand--extends this-practice towards anthe Multilingual Document Authoring (MDA) sys- account of their m.icro-structure.
But the analysistern that we have developed at XRCE.
In section of the micro-structure is only pushed as far as is3, we present in some detail the formalism of In- necessary in order to account for the variability in-teraction Grammars.
In section 4. we describe an side the class of documents considered, and not interms of the ultimate meaning constituents of lan- 3The word "language" should be understood here in anextended sense tha!
not only covers English.
French.
etc., but guage.
This  nlicro-structure can in general be de-also different styles or modes of communication, ler ln iued by s tudy ing  a corpus of  documents  and by25exposing the structure of choices that distinguish agiven document from other documents in this class.This structure of choices is represented in a choicetree, which is viewed as the semantic representationfor the document.
4 One single choice may be asso-ciated with text realizations of drastically differentgranularities: while in a pharmaceutical documentthe choice of an ingredient may result in the produc-tion of a single word, the choice of a "responsability-waiver" may result in a long stereotypical paragraphof text, the further analysis of which would be totally.counter-productive.3 In teract ion  GrammarsLet us now give some details about the formalismof Interaction Grammars.
We start by explainingthe notion of choice tree on the basis of a simplecontext-free grammar, analogous to a DTD.Context - f ree  grammars  and  choice treesLet's consider the following context-free grammarfor describing simple "addresses" in English such as"Paris, France": saddress --> city, " , " ,country.country --> "France".country --> "Germany".city --> "Paris".city --> "Hamburg".city --> "the capital of",country.What does it mean, remembering the XML anal-ogy, to author a "document" with such a CFG?
Itmeans that the author is iteratively presented withpartial derivation trees relative to the grammar (par-tial in the sense that leaves can be terminals or non-terminals), and at each given authoring step bothselects a certain nonterminal to "refine", and also agiven rule to extend this non-terminal one step fur-ther: this action is repeated until the derivation treeis complete.If one conventionally uses the identifiernonterminal~ to name the i-th rule expandingthe nonterminal nontermina l ,  then the collectionof choices made by the author during a session canbe represented by a choice tree labelled with ruleidentifiers, also called combinators.
An exampleof such a tree is address l (c i ty2 ,count ry2)4This kind of semantic representation stands i-n contrastto some representations commonly used in NLP, which tendto emphasize the fine-grained predicate-argument structure ofsentences independently of the productivity of such analyses.\[or a given class of documents.5For compatibil ity with the notacionsCo follow, we use low-ercase to denote nonlerminals, aml quoted strings to denoteterminals,  ra ther  than  tile inore usna\[  ul)pot'case lowercaseconvent  ions.which corresponds to choices leading to the output"Hamburg, Germany".
6 In.practice, rather thanusing combinator names which strictly adhere tothis numbering scheme, we prefer to use mnemonicnames directly relating to the meaning of thechoices.
In the sequel we will use the names adr;f ra ,  ger ,  par ,  ham, cap for the six rules in theexample grammar.
The choice tree just described isthus written adr (ham,ger ) .Mak ing  choice t rees  exp l ic i t  As we have ar-gued previously, choices trees are in our view the cen- .tral repositoi-y of documentc0ntent and we Want tomanipulate them explicitely.
Definite Clause Gram-mars represent possibly the simplest extension ofcontext-free grammars permitting such manipula-tion.
Our context-free grammar can be extendedstraightforwardly into the DCG: 7address (adr (Co ,C) )  - -> c i ty (C) ,  " , "country(Co) .count ry ( f ra )  - -> "France" .count ry (ger )  - -> "Germany".city(par) --> "Paris".city(ham) --> "Hamburg".city(cap(Co)) --> "the capital of",country(Co).What these rules do is simply to construct choicetrees recursively.
Thus, the first rule says that if theauthor has described a city through the choice treeC and a country through the choice tree Co, then thechoice tree adr(Co,C) represents the description ofan address.If now, in this DCG, we "forget" all the terminals,which are language-specific, by replacing them withthe empty string, we obtain the following "abstractgram mar' l :address(adr(Co,C)) --> city(C), country(Co).country(fra) --> \[\].country(ger) --> \[\].city(par) --> \[\].city(ham) --> \[\].city(cap(Co)) --> country(Co).which is in fact equivalent o the definite clauseprogram: sSSuch a choice tree can be projected into a derivationtree in a straightforward way, by mapping a combinatornonterminali into the monterminal name nontermin,:.l, andby 'introducing terminal material as required by the specificrules.7According to the usual logic programming conventions,lowercase letters denote predicates and functors, whereas up-percase letters denote metavariables that can be instauciatedwith terms.Sin the sense that rewriting the nonterminal goaladdress  (adr (Co ,C)) to the empty string in the DCG is equiv-alent to proving the goal address(adr (Co ,C) )  in the program,26address (adr (Co ,C) )  : -  c i ty (C) ,  count ry (Co) .count ry  ( f  ra ) .count ry  (ger ) .c i ty (par ) .city(ham).city(cap(Co)) :- country(Co).This abstract  g rammar  (or, equivalently, this logicprogram),  is language independent and recursivelydefines a set of well-formed choice trees of differentcategories, or types.
Thus, the tree adr (ham,ger )is .well-formed "in".. the.
:typ~/add.~:r~s, ,End the .licecap( f ra )  well-formed in the type c i ty .Dependent  Types  In order to stress the type-related aspects of the previous tree specifications,we are actual ly using in our current implementa-tion the following notat ion for the previous abstractgrammar :adr (Co ,C) : :address  - ->  C : :c i ty ,Co : : count ry .f ra :  : count ry  - -> \[\] .ger :  : count ry  - -> \[\] .par :  : c i ty  --> \[3 .ham: :city --> \[\].cap(Co) : :c i ty  --> Co::country.The first rule is then read: "if C is a tree oftype c i ty ,  and Co a tree of type count ry ,  thenadr (Co ,C)  is a tree of type address" ,  and simi lar lyfor the remaining rules.The grammars  we have given so far are deficientin one important  respect: there is no dependencybetween the city and the country in the same ad-dress, so that  the tree adr (ham, f ra )  is well-formedin the type address .
In order to remedy this prob-lena, dependent types (Ranta; Martin-L6f, 1984)canbe used.
From our point  of view, a dependent ypeis s imply a type that can be parametr ized by objectsof other types.
We write:adr (Co ,C) : :address  - ->  C : :c i ty (Co) ,Co: : count ry .f ra :  : count ry  - -> \[\] .get :  : count ry  - -> \[\] .par : : c i ty ( f ra )  - ->  \ [ \ ] .ham: :c i ty (ger )  - ->  \ [ \ ] .cap(Co) : : c i ty (Co)  - ->  Co: :count ry .in which the type c i ty  is now parametr ized byobjects of type count ry ,  and where the notat ionpar  : : c i ty ( f ra )  is read as " 'par is  at ree of the type:city of f ra ' .
9which is another way of stating the well-known duality be-tween the rewriting and the goal-proving approaches to theinterpretation f Prolog.9In terms of the underlying Prolog implementation.
"::" issimply an infix operator for a predicate ofarity 2 which relatesan object and its type, and both simple and dependent typesare handled st raighforwardly.Para l le l  Grammars  and  Semant ics -dr iven?
Compos i t iona l i ty .
fo r  .
;Text .
;Rea l izat6 ion Wehave just  explained how abstract  grammars  can beused for specifying well-formed typed trees repre-senting the content of a document.In order to produce actual  mult i l ingual documentsfrom such specifications, a s imple approach is to al-low for parallel real ization English, French .
.
.
.
.
gram-mars, which all have the same underlying abstract.g rammar  (program),  but which introduce terminalsspecific, to ~the_ language -at.
hand.
Thus.
the (ollow-ing French andEng l i sh  gi-annmkrs a/'e pai~allel to the ' : "previous abstract  g rammar : l ?adr(Co,C) : :address --> C::city(Co), ",",Co: :country.fra: :country --> "France".ger : : country --> "Germany".par: :c i ty(fra)  --> "Paris".ham: : city(ger) --> "Hamburg".cap(Co): :c i ty(Co) --> "the capital of",Co : : country.adr(Co,C): :address --> C::city(Co), ",",Co : : country.fra: : country --> "In France".ger : : country --> "i' Al lemagne".par: : city(fra) --> "Paris".ham: : city (get) -- > "Hambourg".cap(Co): :city(Co) --> "In capitale de",Co: :country.This view of real ization is essentially the one wehave adopted in the prototype at the t ime of writ-ing, with some straighforward addit ions permit t ingthe handl ing of agreement constraints and morpho-logical variants.
This s imple approach has provenquite adequate for the class of documents we havebeen interested in.However, such an approach sees the activity ofgenerat ing text from an abstract  structure as ba-sically a composit ional  process on strings, that  is,a process where strings are recursively associatedwith subtrees and concatenated to produce stringsat the next subtree level.
But such a direct proce-dure has well-known l imitat ions when the seinanticand syntact ic levels do not have a direct correspon-dence (simple example: ordering a list of modifiersaround a noun).
We are currently experimentingwith.a, powerful extension~of.stri.ng compqsihonal i ty  -where tim objects  composit ional ly  associated withabstract  subtrees are not strings, but syntactic rep-resentations with rich internal structure.
The text10Because the order of goals in the right-hand side of an ab-stract grammar rule is irrelevant, he goals on the right-handsides of rule in two parallel realization grammars can appearin a different order, which permits certain reorganizations ofthe linguistic material (situation ot shown in the example).27itself is obtained from the syntactic representationassociated with the .total tree .by simply enumerat-ing its leaves.In this extended view, realization grammars haverules of the following form:a l (B ,C  .
.
.
.  )
: :a (D  .
.
.
.  )
-Syn  - ->B: :b(E  .
.
.
.  )
-SynB,C : :c (F , .
.
. )
-SynC,general public.
Le VIDAL ?
includes a collection ofnotices ,for .around?
5 5.00. dmgs..a~ailable .in France.As the publisher, OVP-t~ditions du Vidal has takencare of homogeneity across the notices, reformattingand reformulating source information.
The mainsource are the New Drug Authorizations (Autori-sation de Mise sur le March~), regulatory docu-ments written by pharmaceutical laboratories andapproved by legal authorities.Relative to multilingual document authoring, this{const ra in ts  (B, C .
.
.
.
.
D, E, F .
.
.
.  )
}, corpus has three features whicli,~e, considered highly? '
{compose=engt.ish(~synB ;~.SynC, " :-;-.Syn.
)~}-~.--:-desi-r~ble:;(l)-it-dea\[s.with ,a.res\[rlcted-~em~:tit d~2The rule shown is a rule for English: the syn-tactic representations are language dependent; par-allel rules for the other languages are obtained byreplacing the compose_engl ish constraint (which isunique to this rule) by constraints appropriate to theother languages under consideration.Heterogeneous  Trees and  In teract iv i ty  Natu-ral language authoring is different from natural lan-guage generation i one crucial respect.
Wheneverthe abstract ree to be generated is incomplete (forinstance the tree cap(Co)), that is, has some leaveswhich are yet uninstanciated variables, the genera-tion process hould not proceed with nondeterminis-tically enumerating texts for all the possible instan-elations of the initial incomplete structure.
Insteadit should display to the author as much of the text asit can in its present "knowledge state", and enter intoan interaction with the author to allow her to fur-thor refine the incomplete structure, that is, to fur-ther instanciate some of the uninstanciated leaves.To this purpose, it is useful to introduce along withthe usual combinators (adr, fra, cap, etc.)
newcombinators of arity 0 called typenames, which arenotated type,  and are of type "type.
These combi-nators are allowed to stand as leaves (e.g.
in the treecap(count ry ) )  and the trees thus obtained are saidto be heterogeneous.
The typenames are treated bythe text generation process as if they were standardsemantic units, that is, they are associated with textunits which are generated "at their proper place" inthe generated output.
These text units are speciallyphrased and highlighted to indicate to the authorthat some choice has to be made to refine the un-derlying type (e.g.
obtaining the text "la capitale dePAYS").
This choice has the effect of further instan-elating the incomplete tree with "true" combinators,main (for which various terminological resources areavailable), (2) it is a homogeneous collection of docu-ments all complying to the same division in sectionsand sub-sections, (3) there is a strong trend in in-ternational bodies such as the EEC towards makingdrug package notices (which are similar to VIDALnotices) available in multilingual versions strictlyaligned on a common model.
114.2 Corpus  analys isAn analysis of a large collection of notices from LeVIDAL ?
de la famille, describing different drugs,from different laboratories was conducted in orderto identify:* the structure of a notice,?
the semantic dependencies between elements inthe structure.For this task, all the recta-information available isuseful, in particular: explanations provided by LeVIDAL ?
de la famille and help of a domain expert.Corpus study was a necessary preliminary task be-fore modeling the notices in the IG formalism pre-sented in section 2.4.2.1 S t ructureNotices from Le VIDAL ?
are all built on the samemodel, including a title (the name of the drug, plussome general information about it).
followed by sec-tions describing the main characteristics of the cirug:general description, composition, indications, con-traindications, warnings, drug interactions, preg-nancy and breast-feeding, dosage and administra-tion, possible side effects.
This initial knowledge?
about the semantic ontent of the document is cap-tured with a first., simple context free rule, such as:and the generation process is iterated.4 An  App l i ca t ion  to  Pharmaceut ica lDocuments4.1 Corpus  select ionOur corpus consists in drug notices extracted froln"'Le VIDAL?de la Famille" (Editions du Vidal.1998).
a practical book about heahh made for the........ vidalNot.ice(T,D,C, I ,CI.~W,DI ~ PaBF,D~i-A,PSI) : :notice- ->T: :title,D: :description,C: :composition,I lA  similar but less extended corpus was previously builtby the third author as the basis for a prototype ofmuhilingualctocument authoring using G F.28I : : ind icat ions ,Cl::contraindications,W::warn ings ,D I : :d rugs In teract ion ,PaBF: :p regnancyAndBreastFeed ing ,DaA::dosageAndAdmin,PSI::possibleSideEffects.Each section is associated with context-bee rulesthat describe its internal structure:'vidalTitle(N,APi .
.
.
,  .~;>)~:-.
:~d?1e-=:n .......- ->N::name0fDrug,AP::activePrinciples .
.
.
.
.vidalDescription(N,PF,P...)::description- ->\['DESCRIPTION'\],N::nameOfDrug,PF::pharmaceutForm,P::package .
.
.
.
.vidalDosageAndAdmin(D,A)::dosageAndAdmin- ->\['DOSAGE AND ADMINISTRATION'\],D::dosage,A::administration.tablet::pharmaceutForm --> \['tablet'\].eyeDrops:::pharmaceutForm --> \['eye drops'\].At this point, we allow parallel realizations forFrench and English.
So, in addition to the Englishgrammar given above, we have the French grammar:vidalTitle(N, AP .
.
.
.
.
.
.
.
)::title- ->N::name0fDrug,AP::activePrinciples, ... .vidalDescr(N,PF,P...)::description- ->\['PRESENTATION'\],N::nameOfDrug,PF::pharmaceutForm,P::package .
.
.
.
.vidalDosageAndAdmin(D,A)::dosageAndAdmin- ->\['MODE D'EMPLOI ET POSOLOGIE'\],D::dosage,A::administration.tab le t : :pharmaceutForm - -> \ [ ' compr im~' \ ] .eyeDrops : : :pharmaceutForm --> \ [ ' co l l y re ' \ ] .This first grammar is fully eq.ivalent o a XMLI)TD that describes the structure of a notice, thoughit distinguishes finer-grained units 1hart traditionall)TI)s tends to do.4.2.2 Modeling dependencies, ,~ButHG :~ goes ?urt, her,:than XM-L DTDs ~it~h'regardto the semantic ontrol of documents: it enables usto express dependencies which may arise in differ-ent parts of a document, including tong-distance de-pendencies, through the use of dependent types pre: "sented in section 2.Identification of the dependencies to be modeled wasdone in a second stage of the corpus study.
For ex-ample, we identified dependencies between:, ........
,:.-.
: ~-~ "the:--ghamaaeoa~tieal ,:forrrr;0t~ a :gi,#ed~dtfug :(.cbn:.-cept pharmaceutForm) and its packaging (con-cept package),?
particular ingredients given in the section com-position and warning instructions given ill thesection warnings,?
categories of patients the drug is intended for inthe section description and posology indicatedfor each category in the section indications.To illustrate the modeling task, we now give moredetails about one particular dependency identified.Intuitively, it appears that there is a strong link be-tween the pharmaceutical form of a given drug andthe way it should be administered: tablets are swal-lowed, eye drops are put in the eyes, powder is di-luted in water etc.
In our first grammar, the phar-maceutical form concept appears in the descriptionsection, since the administration way is described inthe dosage and administration section.
The use ofdependent ypes permits to link these sections to-gether according to the pharmaceutical form.
Tileparts of the (English) grammar involved become:vidalNotice(T,D,C,I,CI,W,DI,PaBF,DaA,PSI)::notice- ->T::title,D::description(PF),C::composition,I::indications,CI::contraindications,W::warnings,DI::drugslnteraction,PaBF::pregnancyAndBreastFeeding,DaA::dosageAndAdmin(PF),PSI::possibleSideEffects.vidalDescription(N,PF,P,...)::description(PF)- ->\['D~SCRIPTION'\], " ?N::nameOfDrug,PF::pharmaceutForm,P::package .
.
.
.
.vidalDosageAndAdmin(D,A)::dosageAndAdmin(PF)- ->\['DOSAGE AND ADMINISTRATION'\],D::dosage,29A : : administration (PF).The administration section should now be de-- ....scribed according to the pharmaceutical form it pre-supposes, several administration ways being compat-ible with each form:t ab le tsAdmin l  : : administrat  ion (Tablet)?O~I'~?-INDICAT%(~mS: ce ~id l?~ent  rm do|t  p~s ~tre ut~l~sb dlns les C~S sutvancs:----> a l le r~ le  au~ /~1SS nocu~ent t 'aset r lne  i\ [ 'Swal low the tab le ts  w i thout  "- lcrunch ing  them.
'\] .
ar~n~:"'... -" .
.
.
.
.
_ .
~w=' ~ ' : "  : ~ ' , ' ~ .
~ ' % ' - ~ ~  -.-" .
.
.
.
.
.
.
.
.
.?
\[KTERACTZORS HI~DICAHENTEIJSES: Ce |~atc~ent  aeut tn ter lq t r  avec a'autres ~ed~ca~ents.
tablet  sAdmin2 : :administrat ion (Tablet) ~,o~ .... ~ - ~-,~,.
,, .... t,,~ ,nt ,~n..,~to ,.~ .... t.,.,~ ,,~augmentation des effets ~a~Is~r~bles.
- le l t th tu~:  ~9uentat lon ~u taux de Hth iu |__> dam le sanq.\[ 'Let the tab le ts  mel t  under  c.oss~ss( ?TT AttAI~M~,T:the tongue.
'\] .eyeDropsAdmin : :admin is t ra t ion(EyeDrops)- ->\ [~Pul l  the lower  eye l id  down wh i lelook ing  up and squeeze  the eye drops,so that they fa l l  between the eye l idand the eyeba l l . '
\ ] .emacs: "prolo@ ?
:IllOaOF?1t IbuDrofaneP'R~\[NTATION: RUROFEN : ?ot~r|m~ C blanc ) : bQIte de Z?
- ~ah &~ - 15.s F -?
t@orat01 res Boots Healt.care?o,tposrrzoq: p cDIbugrofene .
.
.
.
.
.
.
.
.
.
.
.
.
.
20fl igINDICATIONS: Ce |~d lcuent  est u,  gnc l - |n f lu la tO l?o  non stero~cHen {PISS).
I \ ]  oscu t | l i s6  e, cas de aouIeurs diverses..~OOE D'EHPtOI ET POSOLOCZE: i \ [~ l l l l l lm l lmlml  ~ .
P~ologtaUsuel t e: : ~ ?o.pr i mes .
.
.
,~ ;441 .
i~   g/lThe consequence of such a modeling is a bettercontrol of the semantic ontent of the document inthe process of being authored: once the user choosestablet as pharmaceutical form in the section descrip-tion, his choice is restricted between the two con-cepts tabletsAdminl and tabletsAdmin~ in the ad-ministration section.
If he chooses eye drops as thepharmaceutical form, there is no choice left if the ad-ministration section: the text fragment correspond-ing to the concept eyeDropsAdmin will be generatedautomatically in the document.This example illustrates how dependencies arepropagated into the macro-structure, but they canbe propagated into the micro-structure as well: forexample, in the description section, we can expressthat the packaging of the drugs is also dependent oftheir form: tablets are packaged in boxes, eye dropsin flasks, powder in packets, etc.
:v ida lDescr ip t ion(N ,P  .
.
.
.  )
: :descr ipt ion(PF)- ->\ [ 'DESCRIPTIDN' \ ] ,N : :name0fDrug,PF : :pharmaceutForm,P : :package(PF)  .
.
.
.
.box:  :package(Tab le t )  .
- ->  \ [ 'Box ' \ ] .f l ask : :package(EyeDrops)  - ->  \ [ ' F lask ' \ ] .This example shows that tile granularity degree ofthe linguistic realization cat\] vary from full text seg-ment (administration ways) to sing\[e words (formslike tablet, eye drops, powder, etc.).
This is highlyrelated to the reusability of the concept: referencesto specific forrns may appear it\] many parts of theFigure 1: A stage in the authoring of a notice, withFrench text shown.document, while the administration ways are moreor less frozen segments.
12The level of generality of dependencies encoded inthe grammar needs to be paid attention to: one hasto be sure that a given dependency is viable over alarge collection of documents in the domain.
If achoice made by the grammar writer is too specific,the risk is that it may be not relevant for other docu-ments.
For this reason, an accurate knowledge of thecorpus is necessary to ensure an adequate coverageof documents in the domain.4.3 An  ExampleScreen copies of the IG interface during an authoringprocess of a VIDAL notice are given on figures 1 and2.
Figure 1 represents the notice authored in Frenchat a given stage.
The fields still to be refined bytile user appear ill dark.
When the author wants torefine a given field, a pulldown menu presenting tilechoices for this field appears on the screen.
Here, theauthor chooses to refine the field avaler in the admin-istration (mode d'emploi et posologie ) section: thecorresponding menu.proposes the list of.administra-tion ways corresponding to the pharmaceutical formtablet he has chosen before.
Figure 2 shows the par-allel notice in English but one step further, i.e.
oncehe has selected the administration way.12 For a discussion of some of the issues regarding the use oftemplates in nature\[ language generation systems, see (\[-leit er,1995).30I .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~ : ?
- .
.
.
.
aaa- .
;~o~}=:  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
7~.
7 -~ i..RUnOFE# I bupro fenOESERIPT|ON: HUROfEH : tab let  ( vh i te  ) ; box of 20 - G~ Rezab - X5.8 F - .
BootsReal thcare Laborator ies?~?SFr IOH:  0 tb~buDrot en .
.
.
.
.
.
.
.
.
.
.
.
.
.
200  i~INDICATZC~S: This dru9 Is a ,on -~tero ld / I  anct - ln f lu la tc ry  (NSAIPS).
I t  IS used totreat various pal~sCOliTRA.\[KOIC&Tl~44S: This drug should not be used in  the fo l low ing  cases: a l l~rt ly  toNSAtOS l in  par t i cu la r  t~_~p_trtn iWA~I~INCS: .
.
.
.
.
.
.
?~RU?
I~TER~'I'ZONS: This clru9 can In teract  ~ l tb  other  drugs.
In  ~art~cular:  - asp l r , ,aria the other non s tero ida l  ~t~- tn f l~ la tory  drugs: ~ncrea.se of side ef fec ts .
-Lithium: ~?reas l  of blood hth~ul  rate.IPRECNN(CV MD 8REAST-rE?DINC:VeDm~DOSAGE AnD .~DMINISTRATI(~4: ~ tab le t  swallowed v i th  a lass ofaye .
~ .tPC~SIeLE SlO?
EFFECTS:Figure 2: The parallel English notice one authoringstep later.5 Conc lus ionXML-based authoring tools are more and morewidely used in the business community for sup-porting the production of technical documentation,controlling their quality and improving their re-usability.
In this paper, we have stressed the connec-tions between these practices and current research innatural anguage generation and authoring.
We havedescribed a formalism which removes ome of thelimitations of DTD's when used for the productionof multilingual texts and presented its application toa certain domain of pharmaceutical documents.Acknowledgements  Thanks to Jean-PierreChanod, Marie-H~_lb.ne Corr/mrd, Sylvain Pogodallaand Aarne Ranta for important contributions,discussions and comments.Referencesa.
Coch.
1996.
Evaluating and comparing three textproduction techniques.
In Proceedings of the 16thInternational Confe~vnce on Computational kin-guistics.OVP l~ditions du Vidal, editor.
1998.
Le VIDAL dela famille.
HACHETTE.M.
Dymetman.
V. Lux, and A. Ranta.
2000.
XMLand multilingual document authoring: Conver-gent trends.
In Pro,'eedings Coling 2000, Saar-brficken.A.
Hartley and ('.
Paris.
1997.
Muhilingual docu-ment production-: from supporl for translating tosupport for authoring.
In Machine Translation,Special Issue.
on New Tools for Huma n TranslaT,..tots, pages 109-128.L.
Magnusson and B. Nordstr6m.
1994.
The ALFproofeditor and its proof engine.
In Lecture Notesin Computer Science 806: Springer.P.
Martin-L6f.
1984.
Intuitionistic Type Theory.Bibliopolis, Naples.P.
M/ienp/ii and A. Ranta.
1999.
The type theoryand type checker of GF.
In Colloquium on Prin-ziples, .Logics, ..and Implementations .ofHigh-LevelProgrdmm.ihg L~inTJages, Worl~shop: On-LogicalFrameworks and Meta-languages, Paris, Septem-ber.
Available at h t tp  : / /www.
cs .
chalmers, se /~aarne/papers/Ifm 1999. ps.
gz.W.
Pardi.
1999.
XML in Action.
Microsoft Press.Fernando C. N. Pereira and David H. D. Warren.1980.
Definite clause grammars for language anal-ysis.
Artificial Intelligence, 13:231-278.R.
Power and D. Scott.
1998.
Multilingual au-thoring using feedback texts.
In Proceedings ofthe 17th International Conference on Computa-tional Linguistics and 36th Annual Meeting of theAssociation for Computational Linguistics, pages1053-1059.P.
Prescod.
1998.
Formalizing SGMLand XML instances and schematawith forest automata theory.http ://www.
prescod, net/forest/shorttut/.A.
Ranta.
Grammatical Framework workpage.
h t tp  ://www.
cs .
chalmers, se /aarne/GF/pub/work -  index/ index,  html.E.
Reiter.
1995.
NLG vs. templates.
In Proceedingsof the 5th European Workshop on Natural Lan-guage Generation (EWNLG '95), pages 95-106,Leiden.W3C, 1998.
Extensible Markup Language (XML)1.0, February.
W3C reconunendation.W3C, 1999a.
XML Schema - Part 1: Structu~vs,Part 2 : Datatypes -, December.
W3C Workingdraft.W3C, 1999b.
XSL Transformations (XSLT),November.
W3C recommendation.D.
Wood.
1995.
Standard Generalized Markup Lan-guage: Mathematical and philosophical issues.Lecture Notes in Computer Science.
1000:344--365.31
