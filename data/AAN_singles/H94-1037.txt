PEGASUS: A Spoken Language Interface for On-Line Air Travel Planning IVictor  Zue,  S tephan ie  Seneff, J oseph  Polifroni, M ichae l  PhillipsChrist ine Pao,  Dav id  Goddeau,  and  James  Glass, and  Eric Brill 2Spoken Language Systems GroupLaboratory  for Computer  Sc ienceMassachuset ts  Ins t i tu te  of  Techno logyCambr idge ,  Massachuset ts  02139ABSTRACTThis paper describes PEGASUS, a spoken language inter-face for on-line air travel planning that we have recently devel-oped.
PEGASUS leverages off our spoken language technologydevelopment in the ATIS domain, and enables users to bookflights using the American Airlines EAASY SABRE system.
Theinput query is transformed by the speech understanding sys-tem to a frame representation that captures its meaning.
Thetasks of the System Manager include transforming the seman-tic representation into an EAASY SABRE command, transmit-ting it to the application backend, formatting and interpretingthe xesulting information, and managing the dialogue.
Pre-liminary evaluation results suggest hat users can learn tomake productive use of PEGASUS for travel planning, althoughmuch work remains to be done.INTRODUCTIONOver the past few years, our group has participated,as a member  of the ARPA Human Language Technology(HLT) research community, in the development of spo-ken language technology in the common domain calledAir Travel Information Service, or ATIS \[i\].
ATIS permitsusers to verbally query for air travel information, such asflight schedules from one city to another, obtained froma small relational database excised from the Official Air-line Guide.
By  requiring that all system developers usethe same database, it has been possible to compare theperformance of various spoken language systems basedon their ability to extract the correct information fromthe database, using a set of prescribed training and testdata, and a set of interpretation guidelines.
Indeed, pe-riodic common evaluations have occurred at regular in-tervals, and steady performance improvements have beenobserved for all systems \[2, 3, 4\].While the ATIS task has been instrumental in the de-velopment of technologies that can understand sponta-neously generated verbal queries in a limited domain, it1This research was supported by ARPA under Contract N00014-89-J-1332, monitored through the Office of Naval Research.2The authors are listed in reversed alphabetical order.does have some shortcomings.
First, the current com-mon evaluation focuses on the correctness of the infor-mation extracted from the database without any regardto the system's ide of the interchange (e.g., clarifica-tion queries and helpful suggestions).
Thus it has theeffect of discouraging research on dialogue-based systemswhich, we believe, is a crucial aspect of human com-puter interactions.
Second, ATIS makes use of a mock-up,static database containing flight and fare information fora small set of cities within the United States and Canada.It is not a realistic model of the databases actually be-ing used by travel agents and travellers.
In particular,operational f ight information systems are much largerand more complex, and, most impoi'tantly, they containinformation which is dynamic in nature.The rapid technological progress that we are witness-ing gives us hope that spoken language systems capableof performing real tasks will begin to emerge within thedecade.
To realize this potential, however, it is impor-tant that we begin to develop the technology using realdatabases, o that we can uncover limitations and gaps inour present research paradigm.
To this end, we startedin 1992 to investigate the feasibility of attaching a spo-ken language interface to an available on-line database.We selected the American Airlines EAASY SABRE system,which allows subscribers to obtain flight information andmake flight reservations via a large dynamic database,accessed through their personal computers over the tele-phone line.
This system currently has over 700,000 ac-tive subscribers, most of whom are travellers, not travelagents.
We selected this database mainly because we be-lieve we can leverage off of our existing ATIS system tobuild an appropriate user-friendly interface.To communicate with EAASY SABRE in its normalmode of operation, users issue coded queries specifyingrestrictions uch as source, date, and fare code.
If thenecessary pieces of information are omitted from the query,the system enters a tightly controlled menu protocol tofill them in.
What we have attempted to accomplish is areplacement ofthis cumbersome interface with somethingthat permits a more natural dialogue with the computer.Our system, called PEGASUS, acts as a mediator between201SpeechTables &SpeechSPEECH JUNDERSTAND,NG I: SYSTEM ISpeech I I Semantic Frame- I  SYSTEM l;uerielANAGER m-I :: I TablesFigure 1: Schematic of the PEGASUS on-line travel planning system.the user and the EAASY SABRE system, engaging in aspoken dialogue with the user and postprocessing tablesdelivered by EAASY SABRE for display on the terminal.The rest of the paper is organized as follows.
Wefirst describe the PEGASUS system, paying particular at-tention to the conversion of the parse tree to a semanticrepresentation a d the multiple roles played by the Sys-tem Manager, mediating between the user and the EAASYSABRE back-end.
We then discuss the dialogue manage-ment aspects of the system in some detail.
This is fol-lowed by some preliminary evaluation results, using datacollected from real users planning real trips.
Finally, wesummarize lessons learned and present our future plans.INPUT: IS THERE A UNITED FLIGHT CONNECTING IN DENVERFRAME:Clause : EXISTENTIALTopic : FLIGHTQuant : INDEFPredicate: AIRLINE_NAMEName : "United"Predicate: CONNECTPredicate: INTopic: CITY_NAMEName : "Denver"Figure 2: An example of a semantic flame.SYSTEM DESCRIPT IONOverv iewFigure 1 shows a block diagram of PEGASUS.
Thespeech understanding component makes use of much ofthe original ATIS system to process user queries \[5, 6\].The segment-based SUMMIT speech recognition compo-nent \[7\] produces a list of the top ten sentence hypothe-ses, which are then filtered by the probabilistic TINAnatural anguage component \[8\].
The particular versionof TINA employs a robust parsing strategy \[9\] that at-tempts to piece together parsable fragments, which isoften necessary for spontaneous speech containing dis-fluencies.
A semantic frame representation is used toencode the meaning efficiently.
The entire speech under-standing system, with a working vocabulary of approx-imately 1300 words, performs in near real-t imeusing ahigh-end workstation with no additional hardware.
Asfor its performance, our ATIS system achieved the secondlowest error rate for both text and speech input in thelast two annual ARPA spoken language systems commonevaluations measuring the systems' ability to extract rel-evant information from the database \[3, 4\].
In the mostrecent evaluation, our system achieved an error rate of12.5% and 14.2% on all answerable queries, when thetranscription and the speech signal were provided as in-put, respectively.Mean ing  Representat ionThrough our previous experience in developing spo-ken language systems, we have learned that simplicityof form is an important principle in building effectivemeaning representations.
Our view on the appropriatestructural units of a semantic frame has evolved overtime.
Our present view is that all major constituentsin a sentence can be classified as one of only three dis-tinct categories, which we label as \[clause\], [topic\], and\[predicate\] .
Thus, verbs, adjectives, prepositions andmodifier nouns are all considered to be predicates.
Fur-thermore, grammatical constituents uch as "subject"and "direct object" are not explicitly marked in the se-mantic frame.
We have applied this new formalism suc-cessfully across several anguages in our VOYAGER do-main \[10\], and we are also using it in PEGASUS.
An ex-ample semantic frame for the sentence, "Is there a Unitedflight connecting in Denver," is shown in Figure 2.202System ManagerDuring the design phase of our project, we made acommitment not to alter the interface and protocols ofEAASY SABRE.
We see no benefit, nor do we feel compe-tent, in making changes to a proven system used by manyusers.
In fact, PEGASUS's interface to EAASY SABRE isidentical to that of a user on a PC or a travel agent -EAASY SABRE cannot distinguish between a user speakinga natural utterance (such as "I want to go from Bostonto San Francisco n October 21") or typing to the systemin cryptic codes (such as /schedu le ,  B0S, SF0,210CT, 1).Thus the first task of the System Manager is to transformthe semantic frame into the appropriate EAASY SABREcommand.
When necessary, the System Manager en-gages in a clarification dialogue with the user until enoughinformation is available to construct a complete EAASYSABRE command, thus preempting EAASY SABRE's orig-inal menu-based clarification protocol.In response to a command, EAASY SABRE generallyreturns both formatted tables and additional options avail-able by menu selection (such as "5: Show Seat Assign-ment" or "12: Show more flights").
The data stream (i.e.,raw text) returned from EAASY SABRE must be parsed,filtered, and reformatted by the System Manager for dis-play to the user.
The tables and menu options extractedfrom the database are temporarily stored in a local cache.Menu options are selectively made available to the user,thus allowing the system, for example, to map a user'sexplicit request for seat assignment into the appropriatemenu key.
Tables can be postprocessed to apply con-straints beyond those available through EAASY SABRE,such as "serving dinner, .
.
.
.
nonstop," or "leaving in theafternoon.
"In addition to providing the displays, the System Man-ager also provides a paraphrase of the relevant informa-tion.
Some users have found this feature to be extremelybeneficial to help detect he system's understanding er-rors.
The user can also type natural anguage queries toPEGASUS, an appropriate action when speech recognitionerrors persist.DIALOGUE MANAGEMENTBefore discussing the dialogue management aspectsof PEGASUS, we thought it would be instructive to ex-amine the log of an actual round-trip booking, shown inFigure 3.
In this example, one of the authors used PEGA-SUS to make a reservation i  order to attend a workshopin the San Francisco area.
Like a travel agent, PEGASUSneeds to know the source, destination, and date beforeit can provide the flight information.
The user utilizedadditional constraints to narrow down the choices beforesettling on a particular flight.
It took two exchanges toarrive at the appropriate fare, and three more to book thereturn flight.
The entire booking took nine exchanges,and lasted approximately 5 minutes.
Note that a largefraction of the time is spent waiting for EAASY SABRE torespond.The dialogue component of PEGASUS is significantlymore complicated than that of the original ATIS sys-tem \[11\].
This is in large part due to the fact that it mustmonitor not only the user's dialogue state and the degreeof completion of the booking, but also the state of theEAASY SABRE system.
For instance, it must preprocessfare restrictions, warning the user of limits imposed onreturn dates for restricted fares, screening selected faresfor possible constraint failure, and confirming availabil-ity on selected flights before attempting to issue book-ings.
Otherwise, the EAASY SABRE system would invokea complex subdialogue which we wish to avoid.The system keeps a record of the most recently dis-played sets of flights and fares, as well as a ticket framewhere slots (e.g., fare class) are periodically updatedupon user specification.
This information is also dis-played to the user as a ticket.
The system must con-sult all of these sources of information in addition to theuser's queries in deciding its next move.The dialogue is managed as a set of more than thirtydistinct dialogue states.
Any particular dialogue xchangeconsists of a response phase followed by an initiativephase.
During the response phase, the system may haveto consult the dialogue state to properly interpret hequery.
For instance, there are several different states thatcan provoke a "yes/no" response, and the system mustalso be prepared for the user not to comply, but instead toask a completely independent question.
While process-ing the user's query the system may need to update thedialogue state, and upon completing the response phaseit consults the state to determine what if any initiativeaction is appropriate at this time.There are several meta-level commands that have ledto a more usable system.
A request for help can beissued at any time, and the response it invokes is de-pendent upon the current state of the dialogue.
For in-stance, at the very beginning of a dialogue, a request forhelp causes the system to provide an organized list ofthe cities it knows.
There are also two meta-level com-mands that erase previous information.
A "scratch that"command causes the system to erase the preceding queryfrom context, restoring the discourse content o its for-mer state.
In the event hat this query involved a bookingrequest, the system must also issue a cancellation requestto EAASY SABRE.
The "scratch that" capability is par-ticularly valuable to recover from damaging recognitionerrors.
A more drastic "clear history" command allowsthe user to start completely afresh.
We feel that theavailability of these erasure commands allows the systemto be more aggressive in taking action, without havingto repeatedly ask for confirmation of user requests.203U: I WANT TO GO FROM BOSTON TO SAN FRANCISCOP: ~1at date will you be travelling on?U: OCTOBER TWENTIETHP: H,~re are the flights from Boston to San Francisco onWednesday October twentieth.FLIGHT FROM TO DEPARTURE ARRIVAL NSTOPSi DL 565 BOS SFO 7:00 AM 11:55 AM 12 US 31 BOS SFD 7:00 AM 12:03 PM 13 NW 181 BOS SFO 7:30 AM 10:58 AM 04 UA 31 BOS SFO 8:10 AM 11:23 AM 0You can ask for more flights.U: I'D LIKE A NONSTOP UNITED FLIGHTP: Here are the non-stop United flights from Boston toSan Francisco on Wednesday October twentieth.FLIGHT FROM TO DEPARTURE ARRIVAL NSToPS1 UA 31 BOS SFO 8:10 AM 11:23 AM 02 UA 59 BOS SFO 9:05 AM 12:34 PM O3 UA 93 BOS SFO 5:10 PM 8:23 PM 0U: BOOK THE THIRDFL IGHTPLEASEP: ~le following fares are available.
Which fareclass would you like?ONE WAY FARE CLASS MIN-STAY MAX-STAY RTRN RQ'Di $ 214 THRIFT DISCOUNT YES 30 YES2 $ 234 COACH DISCOUNT YES 30 YES3 $ 294 THRIFT DISCOUNT YES NO YES4 $ 304 COACH DISCOUNT YES 30 YESU: COACH DISCOUNTP: The following fares are available.
Which fare classwould you like?ONE WAY FARE CLASS MIN-STAY MAX-STAY RTRN RQ'D1 $ 234 COACH DISCOUNT YES 30 YES2 $ 304 COACH DISCOUNT YES 30 YES3 $ 336 COACH DISCOUNT 31 NO YESU: THE CHEAPEST ONEP: I'll book United flight 93 from Boston to SanFrancisco on Wednesday October twentieth for you...Now I'll help you with the return flight.What date will you be returning on?U: ON SUNDAYP: Here are the United flights from San Francisco toBoston on Sunday October twenty-fourth.FLIGHT FROM TO DEPARTURE ARRIVAL NSTOPS1 UA 92 SFO BOS 7:45 AM 4:06 PM 02 UA 20 SFO BOS 1:30 PM 9:54 PM 03 UA 90 SFO BOS i0:I0 PM 6:32 AM 0U: SHOW ME NONSTOP FLIGHTS LEAVING IN THE MORNINGP: Here is United flight 92 from San Francisco toBoston on Sanday October twenty-fourth.FLIGHT FROM TO DEPARTURE ARRIVAL NSTOPS1 UA 92 SFO BOS 7:45 AM 4:06 PM 0U: I'LL TAKE THIS FLIGHTP: ...
Your reservation has been entered.Give me a moment to confirm your reservation.Here's your ticket summary.
You saved .a total of894 dollars over regular coach fare...Please wait while I retrieve your itinerary...STEPHANIE SENEFF Price: 488.00Date Flight Class From To Leave Arrive1 OCT20 UA 93 Q BOS SFO 510P 823P2 0CT24 UA 92 Q SFO BOS 745A 406PCan I help you with something else?Figure 3: An example of an actual verbal booking dia-logue using PEGASUS.
Due to space limitations, irrelevantparts of the system's responses have been omitted.
U--user,P----PEGASUS.EVALUATIONPEGASUS first came into being in January 1993.
Sincethen, we have been actively improving and extending itscapabilities.
Thus the system is in a constant state of flux- deficiencies are corrected as new capabilities are intro-duced.
Nevertheless, it is fully functional in the sensethat members of our group have been able to use it tomake actual travel arrangements since last spring, usingnaturally spoken English.
Even though it is definitelypremature to accurately assess the usefulness of the sys-tem, we have recently begun to formally monitor its per-formance longitudinally by keeping a time-stamped logfile of all transactions.
In this section, we will presentsome very preliminary results on the system's perfor-mance since early fall, 1993.
The results are obtainedfrom ten bookings made by eight members of our groupin order to satisfy their real travel needs.
All of them rep-resented round-trip bookings from one city to another.
Insome cases, the time for travel was important whereas inothers, the cheapest airfare was desired.
Seven of the tenbookings were successfully completed.
Statistics on someof the objective measures for the successfully completedbookings are shown in Table 1.Averageci across all six subjects who completed thebookings uccessfully, it took almost 25 queries and morethan 13 minutes for the subjects to complete a booking.It is interesting, however, to compare the statistics of thethree experienced users 2 with the other three, who wereusing the system for the first time.
Compared to thenaive users, the experienced users completed the book-ings with considerably less effort - using less than one-third of the number of queries and taking one-fourth theamount of time.
The variations in their performance arealso considerably ess.
In general, one can expect he sys-tem's performance on totally naive subjects to degrade.On the other hand, the results give us hope that experi-enced travellers can learn to put PEGASUS to productiveuse, once they become familiar with its capabilities.We also examined the log files for the three unsuc-cessfi.fl bookings in order to identify the system's hort-comings.
In one case, the user successfully completedthe forward leg of a trip, but the system booked an erro-neous return leg, causing him to start over.
He clearedthe discourse history, but did not explicitly cancel thebooking on EAASY SABRE.
Thus, even though the usersuccessfully booked the flights he wanted, EAASY SABREwas unable to reconcile the double booking on the for-ward leg.
In the second case, the user initially selecteda.
fare that was incompatible with his travel plans.
Hedid not successfully cancel his initial reservation or clearthe discourse history.
The.
system continued to enforcethe restrictions on the previous fare, even though he at-2Two of them are developers of PEGASUS, and the remaining onehas used the system extensively.
All three were familiar with thecapabilities of the system.204All Users Experienced I NaiveMeasurements mean\[ s.d.
mean s.d.
\[ mean\[s .d.Numberofo fQuer iesUsed 24.5113.4 10.0 3.2 34.3 ~.296Time to Completion (s.) 814 501 309 87 1311Table 1: Objective measures of PEG.ASUS'S performance for the seven bookings that were completed successfully.tempted to rebook with an unrestricted fare.
In the thirdcase, the discount fare selected for the forward leg wasnot available on the return flight.
Both the second andthird users eventually gave up in frustration.Since mid January, we have begun to save the speechwaveform, in addition to the log-file.
We were thus ableto also measure the system's peech recognition perfor-mance.
The word and sentence recognition error ratesfor these bookings were found to be 10.6% and 28.6%,respectively.DISCUSSION ANDFUTURE PLANSThis paper describes our recent effort in developing aspoken language interface to an on-line, dynamic airlinereservation system.
By leveraging off our ATIS develop-ment effort and paying particular attention to dialoguemanagement, we were able to produce a working inter-face that enables users to make real flight bookings usingspoken language.PEGASUS is the outcome of a new research strat-egy that we have adopted, one that strives to developlanguage-based technologies within the context of realapplication back-ends, rather than relying on mock-ups,however realistic they might be.
We believe that thisstrategy will force us to confront some of the critical tech-nical issues that may otherwise lude our attention, suchas dialogue modelling and new word detection/learning.We also believe that the time is ripe for us to begindemonstrating the usefulness of these technologies.
Work-ing on real applications thus has the potential benefit ofshortening the interval between technology demonstra-tion and its ultimate use.
Besides, real applications thatcan help people solve problems will be used by real users,thus providing us with a rich and continuing source ofuseful data.While we are encouraged by our initial success withPEGASUS, much work remains to be done.
One of themajor deficiencies of the system is its inability to grace-fully coerce the user back on track when his/her requestcannot be satisfied.
A common problem arises when thecheapest fare that the user specified is not available onthe selected return flight.
The user is faced with the mul-tiple choices of modifying his/her choice for the flight,date, or fare.
Rather than leaving the user to explore allthese dimensions freely and run the risk of confusion, amore productive solution may be for the system to takecontrol of the dialogue by offering explicit choices.
Ofcourse, the user should still be free to diverge from thecomputer's goal whenever he/she so chooses.Until very recently, the system's knowledge has beenlimited to fewer than sixty major cities in North America,Europe, and Japan.
We have just expanded PEGASUS'Sknowledge base to more than 220 major cities worldwide.Nevertheless, it is still a very small set considering thatEAASY SABRE contains flight information for nearly twothousand cities worldwide.
Rather than making all thecities, airports, and airlines available with equal proba-bility at all times, we will explore ways to constrain thesearch while maintaining full flexibility.
One possibilityis to allow a user to customize the system to suit theirneeds.
Thus, for example, a user could specify the citiesand airlines that they care about, in much the same waythey presently specify their frequent flyer number, seat-ing preferences, and credit card information for billing.The system will need to be supplemented with tools thatwill enable users to interactively and incrementally addappropriate information.
In addition, the system couldalso automatically adjust language probabilities based onthe user's dialogue history.At the moment, the system can only book a singleseat under the name of the user currently logged ontoEAASY SABRE.
In the future, we would like to add thecapability of changing the name on the ticket, or bookingmultiple tickets for the user and accompanying familymembers, for example.The present implementation f PEGASUS assumes thatinformation is provided to the user both visually and au-rally.
This assumption obviously affects significantly thenature of the responses generated by PEGASUS.
For ex-ample, the system will currently say, "Here are the flightsfrom Boston to San Francisco n October 20," and pro-ceed to display them.
We believe that there will be manyoccasions in which a user may be communicating withthe system by telephone.
In such a case, the informationmust be presented in a different manner (e.g., "Thereare seventeen direct flights from Boston to San Fran-cisco on October 20.")
The resulting human-computerdialogue will be quite different from that in our currentimplementation.
We intend to pursue such a "display-less" implementation in the future, eventually leading tothe development of telephone-based applications.205\[~ State Condition Action I New StateFlight Has Conclude Initialize~ooked first leg booking new transactionRound trip Showrequired?
return flightDefault - -  Return leg?Table 2: Example ntry from our dialogue control table.Our experience in designing PEGASUS has led us tothe realization that considerable care must go into pro-viding mechanisms to easily manage and maintain dia-logue coherence.
While our dialogue states are a conve-nient representation, the current mechanism for control-ling them is becoming unwieldy, and therefore needs tobe reorganized prior to adding some of the enhancementsmentioned here.Through our experience in developing a preliminaryversion of PEGASUS, we discovered that the capability tospecify the dialogue flow explicitly at some high level isnecessary, in order to be able to understand and managethe dialogue effectively.
To that end, we recently re-designed the PEGASUS control strategy, so that dialoguemoves conditioned on prior states can be convenientlyspecified in tabular form.An example entry from our newest implementationis shown in Table 2.
This entry states that when theuser has just completed a successful booking, the systemshould examine the conditions in the Order presented andtake the appropriate action when they are met, settingthe dialogue state to the new value, if appropriate.
Thus,in our example, once a flight has been booked, the firstthing the system does is check to see if there is a first-legflight associated with the current one (i.e., "Has-first-leg?").
If so, the system performs the actions associatedwith concluding a booking (e.g., summarizing the flightinformation) and resets the dialogue state to anticipatea completely new exchange.
If the first condition is notmet, the system proceeds in the same manner throughthe others in the order given.Ultimately, we would like a dialogue framework thatis domain independent.
We have begun to define a dialogue-description language in which different ypes of user in-teractions can be represented.
The terminal nodes of thegrammar would be associated with user query classes.User interactions expected within a particular domainwould be described in this meta language, and that de-scription would be used by the system to direct the hu-man machine interaction.There has been some theoretical work on the struc-ture of human-human dialogue \[12\], but this has not yetled to effective insights for building human-machine in-teractive systems.
We believe it should be possible todefine a hierarchy of dialogue types: for example, the airtravel dialogue is an instance of a more general trans-action dialogue in which the user acquires informationabout the choices available, commits to a purchase, per-haps authorizes payment, and verifies the entire transac-tion.
It should be possible to compile a domain-specificdialogue model from a general transaction dialogue frame-work and a description of the particular sub-domain.ACKNOWLED GEMENTSPart of the work described in this paper is conductedin collaboration with American Airlines SABRE TravelInformation Network.
We also benefited from the contri-butions made by two past members of our group: DavidGoodine and Lynette Hirschman.REFERENCES\[1\] Price, P., "Evaluation of Spoken Language Systems: theATIS Domain," Proc.
DARPA Speech and Natural Lan-guage Workshop, 91-95, Hidden Valley, PA, 1990.\[2\] Pallett, D., Dahlgren N., Fiscus, J., Fisher, W., Garafolo,J., and Tjaden, B., "February 1992 ATIS Benchmark TestResults," Proc.
DARPA Speech and Natural LanguageWorkshop, 15-27, Harriman, NY, 1992.\[3\] Pallett, D., Fiscus, J., Fisher, W., and Garafolo, J.,"Benchmark Tests for the DARPA Spoken LanguageProgram," Proc.
DARPA Speech and Natural LanguageWorkshop, 7-18, Princeton, N J, 1993.\[4\] Pallett, D., Fiscus, J., Fisher, W., and Garafolo, J.,Lund, B., and Pryzbocki, M., "1993 Benchmark Testsfor the ARPA Spoken Language Program," These Pro-ceesings.\[5\] Seneff, S., Glass, J., Goddeau, D., Goodine, D.,Hirschman, L., Leung, H., Phillips, M., Polifroni, J., andZue, V., "Development and Preliminary Evaluation ofthe MIT AWlS System," Proc.
DARPA Speech and Natu-ral Language Workshop, 88-93, Pacific Grove, CA., 1991.\[6\] Zue, V., Glass, J .
,  Goddean, D., Goodine, D.,Hirschman, L., Leung, H., Phillips, M., Polifroni, J.,and Seneff, S., "The MIT ATIS System: February 1992Progress Report," Proc.
DARPA Speech and NaturalLanguage Workshop, 84-88, Harriman, NY, 1992.\[7\] Zue, V., Glass, J., Phillips, M., and Seneff, S., "TheMIT SUMMIT Speech Rrecognition System: A ProgressReport," Proc.
DARPA Speech and Natural LanguageWorkshop, 179-189, Philadelphia, PA, 1989.\[8\] Seneff, S., "TINA: A Natural Language System for Spo-ken Language Applications," Computational Linguistics,Vol.
18, No.
1, 61-86, 1992.\[9\] Seneff, S., "Robust Parsing for Spoken Language Sys-tems," Proc.
ICASSP, 189-192, San Francisco, CA, 1992.\[10\] Glass, J., Goodine, D., Phillips, M., Sakai, S., Seneff,S., and Zue, V. "A Bilingual VOYAGER System," Proc.Eurospeech, 2063-2066, Berlin, Germany, 1993.\[11\] Seneff, S., Hirschman, L., and Zue, V., "Interactive Prob-lem Solving and Dialogue in the ATIS System," Proc.DARPA Speech and Natural Language Workshop, 354-359, Pacific Grove, CA, 1991.\[12\] Grosz, B., and Sidner, C. "Plans for Discourse," Inten-tions in Communication, MIT Press, Cambridge, Mas-sachusetts, 1990.206
