Proceedings of the EACL 2014 Workshop on Type Theory and Natural Language Semantics (TTNLS), pages 19?27,Gothenburg, Sweden, April 26-30 2014.c?2014 Association for Computational LinguisticsMonads as a Solution for Generalized OpacityGianluca GiorgoloUniversity of OxfordAsh AsudehUniversity of Oxford and Carleton University{gianluca.giorgolo,ash.asudeh}@ling-phil.ox.ac.ukAbstractIn this paper we discuss a conservative ex-tension of the simply-typed lambda calcu-lus in order to model a class of expres-sions that generalize the notion of opaquecontexts.
Our extension is based on previ-ous work in the semantics of programminglanguages aimed at providing a mathemat-ical characterization of computations thatproduce some kind of side effect (Moggi,1989), and is based on the notion of mon-ads, a construction in category theory that,intuitively, maps a collection of ?simple?values and ?simple?
functions into a morecomplex value space, in a canonical way.The main advantages of our approach withrespect to traditional analyses of opacityare the fact that we are able to explain ina uniform way a set of different but re-lated phenomena, and that we do so in aprincipled way that has been shown to alsoexplain other linguistic phenomena (Shan,2001).1 IntroductionOpaque contexts have been an active area of re-search in natural language semantics since Frege?soriginal discussion of the puzzle (Frege, 1892).
Asentence like (1) has a non-contradictory interpre-tation despite the fact that the two referring expres-sions Hesperus and Phosphorus refer to the sameentity, the planet we know as Venus.
(1) Reza doesn?t believe Hesperus is Phos-phorus.The fact that a sentence like (1) includes themodal believe has influenced much of the analy-ses proposed in the literature, and has linked thephenomenon with the notion of modality.
In thispaper we challenge this view and try to positiondata like (1) inside a larger framework that alsoincludes other types of expressions.We decompose examples like (1) along two di-mensions: the presence or absence of a modal ex-pression, and the way in which we multiply re-fer to the same individual.
In the case of (1), wehave a modal and we use two different co-referringexpressions.
Examples (2)-(4) complete the land-scape of possible combinations:(2) Dr. Octopus punched Spider-Man but hedidn?t punch Spider-Man.
(3) Mary Jane loves Peter Parker but shedoesn?t love Spider-Man.
(4) Reza doesn?t believe Jesus is Jesus.
(2) is clearly a contradictory statement, as wepredicate of Dr. Octopus that he has the propertyof having punched Spider-Man and its negation.Notice that in this example there is no modal andthe exact same expression is used twice to referto the object individual.
In the case of (3) westill have no modal and we use two different butco-referring expressions to refer to the same in-dividual.
However in this case the statement hasa non-contradictory reading.
Similarly (4) has anon-contradictory reading, which states that, ac-cording to the speaker, Reza doesn?t believe thatthe entity he (Reza) calls Jesus is the entity that thespeaker calls Jesus (e.g., is not the same individualor does not have the same properties).
This case issymmetrical to (3), as here we have a modal ex-pression but the same expression is used twice torefer to the same individual.If the relevant reading of (4) is difficult to get,consider an alternative kind of scenario, as in (5),in which the subject of the sentence, Kim, suffersfrom Capgras Syndrome1and thinks that Sandy isan impostor.
The speaker says:1From Wikipedia: ?
[Capgras syndrome] is a disorder inwhich a person holds a delusion that a friend, spouse, par-19(5) Kim doesn?t believe Sandy is SandyGiven the definition of Capgras Syndrome (infn.
1), there is a clear non-contradictory readingavailable here, in which the speaker is stating thatKim does not believe that the entity in question,that the speaker and (other non-Capgras-sufferers)would call Sandy, is the entity that she associatewith the name Sandy.We propose an analysis of the non-contradictorycases based on the intuition that the apparently co-referential expressions are in fact interpreted us-ing different interpretation functions, which cor-respond to different perspectives that are pittedagainst each other in the sentences.
Furthermore,we propose that modal expressions are not the onlyones capable of introducing a shift of perspective,but also that verbs that involve some kind of men-tal attitude of the subject towards the object havethe same effect.Notice that this last observation distinguishesour approach from one where a sentence like (3) isinterpreted as simply saying that Mary Jane lovesonly one guise of the entity that corresponds to Pe-ter Parker but not another one.
The problem withthis interpretation is that if it is indeed the casethat different co-referring expressions simply pickout different guises of the same individual, then asentence like (6) should have a non-contradictoryreading, while this seems not to be the case.
(6) Dr. Octopus killed Spider-Man but hedidn?t kill Peter Parker.While a guise-based interpretation is compatiblewith our analysis2, it is also necessary to correctlymodel the different behaviour of verbs like lovewith respect to others like punch or kill.
In fact,we need to model the difference between, for ex-ample, kill and murder, since murder does involvea mental attitude of intention and the correspond-ing sentence to (6) is not necessarily contradictory:(7) Dr. Octopus murdered Spider-Man but hedidn?t murder Peter Parker.The implementation of our analysis is based onmonads.
Monads are a construction in categorytheory that defines a canonical way to map a setof objects and functions that we may consider asent, or other close family member has been replaced by anidentical-looking impostor.
?2Indeed, one way to understand guises is as different waysin which we interpret a referring term (Heim, 1998).simple into a more complex object and functionspace.
They have been successfully used in thesemantics of programming languages to charac-terise computations that are not ?pure?.
By purewe mean code objects that are totally referentiallytransparent (i.e.
do not depend on external factorsand return the same results given the same inputindependently of their execution context), and alsothat do not have effects on the ?real world?.
Incontrast, monads are used to model computationsthat for example read from or write to a file, thatdepend on some random process or whose returnvalue is non-deterministic.In our case we will use the monad that describevalues that are made dependent on some exter-nal factor, commonly known in the functional pro-gramming literature as the Reader monad.3Wewill represent linguistic expressions that can be as-signed potentially different interpretations as func-tions from interpretation indices to values.
Effec-tively we will construct a different type of lexiconthat does not represent only the linguistic knowl-edge of a single speaker but also her (possibly par-tial) knowledge of the language of other speak-ers.
So, for example, we will claim that (4) canbe assigned a non-contradictory reading becausethe speaker?s lexicon also includes the informationregarding Reza?s interpretation of the name Jesusand therefore makes it possible for the speaker touse the same expression, in combination with averb such as believe, to actually refer to two dif-ferent entities.
In one case we will argue that thename Jesus is interpreted using the speaker?s inter-pretation while in the other case it is Reza?s inter-pretation that is used.Notice that we can apply our analysis to anynatural language expression that may have differ-ent interpretations.
This means that, for exam-ple, we can extend our analysis, which is limitedto referring expressions here for space reasons, toother cases, such as the standard examples involv-ing ideally synonymous predicates like groundhogand woodchuck (see, e.g., Fox and Lappin (2005)).The paper is organised as follows: in section2 we discuss the technical details of our analysis;in section 3 we discuss our analyses of the moti-vating examples; section 4 compares our approachwith a standard approach to opacity; we concludein section 5.3Shan (2001) was the first to sketch the idea of using theReader monad to model intensional phenomena.202 Monads and interpretation functionsTo avoid introducing the complexities of the cat-egorical formalism, we introduce monads as theyare usually encountered in the computer scienceliterature.
A monad is defined as a triple ?
?, ?, ??.?
is what we call a functor, in our case a mappingbetween types and functions.
We call the com-ponent of ?
that maps between types ?1, whilethe one that maps between functions ?2.
In ourcase ?1will map each type to a new type thatcorresponds to the original type with an addedinterpretation index parameter.
Formally, if i isthe type of interpretation indices, then ?1mapsany type ?
to i ?
?
.
In terms of functions,?2maps any function f : ?
?
?
to a functionf?
: (i ?
?)
?
i ?
?.
?2corresponds to func-tion composition:?2(f) = ?g.
?i.f(g(i)) (8)In what follows the component ?2will not be usedso we will use ?
as an abbreviation for ?1.
Thismeans that we will write ??
for the type i?
?
.?
(pronounced ?unit?)
is a polymorphic func-tion that maps inhabitants of a type ?
to inhabitantsof its image under ?, formally ?
: ??.?
?
??
.Using the computational metaphor, ?
should em-bed a value in a computation that returns that valuewithout any side-effect.
In our case ?
should sim-ply add a vacuous parameter to the value:?
(x) = ?i.x (9)?
(pronounced ?bind?)
is a polymorphic func-tion of type ??.??.??
?
(?
?
??)
?
?
?, andacts as a sort of enhanced functional application.4Again using the computational metaphor, ?
takescare of combining the side effects of the argumentand the function and returns the resulting compu-tation.
In the case of the monad we are interestedin, ?
is defined as in (10).a ?
f = ?i.f(a(i))(i) (10)Another fundamental property of ?
is that, byimposing an order of evaluation, it will provideus with an additional scoping mechanism distinctfrom standard functional application.
This will al-low us to correctly capture the multiple readings4We use for ?
the argument order as it is normally used infunctional programming.
We could swap the arguments andmake it look more like standard functional application.
Also,we write ?
in infix notation.associated with the expressions under considera-tion.We thus add two operators, ?
and ?, to thelambda calculus and the reductions work as ex-pected for (9) and (10).
These reductions are im-plicit in our analyses in section 3.2.1 Compositional logicFor composing the meanings of linguistic re-sources we use a logical calculus adapted for thelinear case5from the one introduced by Benton etal.
(1998).
The calculus is based on a languagewith two connectives corresponding to our typeconstructors: (, a binary connective, that corre-sponds to (linear) functional types, and ?, a unaryconnective, that represents monadic types.The logical calculus is described by the proofrules in figure 1.
The rules come annotated withlambda terms that characterise the Curry-Howardcorrespondence between proofs and meaningterms.
Here we assume a Lexical FunctionalGrammar-like setup (Dalrymple, 2001), wherea syntactic and functional grammar componentfeeds the semantic component with lexical re-sources already marked with respect to theirpredicate-argument relationships.
Alternativelywe could modify the calculus to a categorial set-ting, by introducing a structural connective, andusing directional versions of the implication con-nective together with purely structural rules tocontrol the compositional process.We can prove that the Cut rule is admissible,therefore the calculus becomes an effective (al-though inefficient) way of computing the meaningof a linguistic expression.A key advantage we gain from the monadic ap-proach is that we are not forced to generalize alllexical entries to the ?worst case?.
With the log-ical setup we have just described we can in factfreely mix monadic and non monadic resources.For example, in our logic we can combine a pureversion of a binary function with arguments thatare either pure or monadic, as the following are all5Linearity is a property that has been argued for in thecontext of natural language semantics by various researchers(Moortgat (2011), Asudeh (2012), among others).21idx : A ` x : A?
` B B,?
` CCut?,?
` C?, x : A ` t : B( R?
` ?x.t : A( B?
` t : A ?, x : B ` u : C( L?,?, y : A( B ` u[y(t)/x] : C?
` x : A?R?
` ?
(x) : ?A?, x : A ` t : ?B?L?, y : ?A ` y ?
?x.t : ?BFigure 1: Sequent calculus for a fragment of multiplicative linear logic enriched with a monadic modality,together with a Curry-Howard correspondence between formulae and meaning terms.provable theorems in this logic.A( B( C,A,B ` ?C (11)A( B( C,?A,B ` ?C (12)A( B( C,A,?B ` ?C (13)A( B( C,?A,?B ` ?C (14)In contrast, the following is not a theorem in thelogic:A( B( C, I ( A, I ( B 6` I ( C (15)In general, then, if we were to simply lift the typeof the lexical resources whose interpretation maybe dependent on a specific point of view, we wouldbe forced to lift all linguistic expressions that maycombine with them, thus generalizing to the worstcase after all.The monadic machinery also achieves a higherlevel of compositionality.
In principle we coulddirectly encode our monad using the ?
type con-structor, with linear implication,(, on the logicalside.
However this alternative encoding wouldn?thave the same deductive properties.
Compare thepattern of inferences we have for the monadictype, in (11)?
(14), with the equivalent one for thesimple type:A( B( C,A,B ` C (16)A( B( C, I ( A,B ` I ( C (17)A( B( C,A, I ( B ` I ( C (18)A( B( C, I ( A, I ( B ` (19)I ( I ( CIn the case of the simple type, the final formula wederive depends in some non-trivial way on the en-tire collection of resources on the left-hand side ofthe sequent.
In contrast in the case of the monadictype, the same type can be derived for all config-urations.
What is important is that we can pre-dict the final formula without having to considerthe entire set of resources available.
This showsthat the compositionality of our monadic approachcannot be equivalently recapitulated in a simpletype theory.3 ExamplesThe starting point for the analysis of examples (1)-(4) is the lexicon in table 1.
The lexicon representsthe linguistic knowledge of the speaker, and atthe same time her knowledge about other agents?grammars.Most lexical entries are standard, since we donot need to change the type and denotation of lex-ical items that are not involved in the phenomenaunder discussion.
So, for instance, logical opera-tors such as not and but are interpreted in the stan-dard non-monadic way, as is a verb like punch orkill.
Referring expressions that are possibly con-tentious, in the sense that they can be interpreteddifferently by the speaker and other agents, insteadhave the monadic type ?e.
This is reflected intheir denotation by the fact that their value variesaccording to an interpretation index.
We use aspecial index ?
to refer to the speaker?s own per-spective, and assume that this is the default indexused whenever no other index is specifically in-troduced.
For example, in the case of the nameSpider-Man, the speaker is aware of his secretidentity and therefore interprets it as another namefor the individual Peter Parker, while Mary Janeand Dr. Octopus consider Spider-Man a differententity from Peter Parker.We assume that sentences are interpreted in amodel in which all entities are mental entities, i.e.that there is no direct reference to entities in theworld, but only to mental representations.
Enti-ties are therefore relativized with respect to theagent that mentally represents them, where non-contentious entities are always relativized accord-ing to the speaker.
This allows us to represent the22WORD DENOTATION TYPEReza r?eKim k?eDr.
Octopus o?eMary Jane mj?ePeter Parker pp?enot ?p.
?p t?
tbut ?p.
?q.p ?
q t?
t?
tis ?x.
?y.x = y e?
e?
tpunch ?o.
?s.punch(s)(o) e?
e?
tbelieve ?c.?s.?i.B(s)(c(?
(s))) ?t?
e?
?tlove ?o.?s.?i.love(s)(o(?
(s))) ?e?
e?
?tHesperus ?i.
{esrif i = r,v?if i = ?
?ePhosphorus ?i.
{msrif i = r,v?if i = ?
?eSpider-Man ?i.
{smiif i = o or i = mj,pp?if i = ?
?eJesus ?i.
{jrif i = r,j?if i = ?
?eSandy ?i.
{impkif i = k,s?if i = ?
?eTable 1: Speaker?s lexiconfact that different agents may have distinct equiv-alencies between entities.
For example, Reza inour model does not equate the evening star andthe morning star, but the speaker equates themwith each other and with Venus.
Therefore, thespeaker?s lexicon in table 1 represents the factthat the speaker?s epistemic model includes whatthe speaker knows about other agents?
models,e.g.
that Reza has a distinct denotation (from thespeaker) for Hesperus, that Mary Jane has a dis-tinct representation for Spider-Man, that Kim hasa distinct representation for Sandy, etc.The other special lexical entries in our lexiconare those for verbs like believe and love.
The twoentries are similar in the sense that they both takean already monadic resource and actively supplya specific interpretation index that corresponds tothe subject of the verbs.
The function ?maps eachentity to the corresponding interpretation index,i.e.
?
: e ?
i.
For example, in the lexical en-tries for believe and love, ?maps the subject to theinterpretation index of the subject.
Thus, the entryfor believe uses the subject?s point of view as theperspective used to evaluate its entire complement,while love changes the interpretation of its objectrelative to the perspective of its subject.
Howeverwe will see that the interaction of these lexical en-tries and the evaluation order imposed by ?will al-low us to let the complement of a verb like believeand the object of a verb like love escape the spe-cific effect of forcing the subject point of view, andinstead we will be able to derive readings in whichthe arguments of the verb are interpreted using thespeaker?s point of view.Figure 2 reports the four non-equivalent read-ings that we derive in our system for example (1),repeated here as (20).6(20) Reza doesn?t believe that Hesperus isPhosphorus.Reading (21) assigns to both Hesperus andPhosphorus the subject interpretation and results,after contextualising the sentence by applying itto the standard ?
interpretation index, in the truthconditions in (25), i.e.
that Reza does not be-lieve that the evening star is the morning star.
This6The logic generates six different readings but the monadwe are using here has a commutative behaviour, so four ofthese readings are pairwise equivalent.23JbelieveK (JHesperusK ?
?x.
JPhosphorusK ?
?y.?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (21)JHesperusK ?
?x.
JbelieveK (JPhosphorusK ?
?y.?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (22)JPhosphorusK ?
?x.
JbelieveK (JHesperusK ?
?y.?
(JisK (y)(x)))(JRezaK) ?
?z.?
(JnotK (z)) (23)JHesperusK ?
?x.
JPhosphorusK ?
?y.
JbelieveK (?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (24)Figure 2: Non-equivalent readings for Reza doesn?t believe Hesperus is Phosphorus.reading would not be contradictory in an epistemicmodel (such as Reza?s model) where the eveningstar and the morning star are not the same entity.
?B(r)(esr= msr) (25)In the case of (22) and (23) we get a similar ef-fect although here we mix the epistemic models,and one of the referring expressions is interpretedunder the speaker perspective while the other isagain interpreted under Reza?s perspective.
Forthese two readings we obtain respectively the truthconditions in (26) and (27).
?B(r)(v?= msr) (26)?B(r)(v?= esr) (27)Finally for (24) we get the contradictory readingthat Reza does not believe that Venus is Venus, asboth referring expressions are evaluated using thespeaker?s interpretation index.
?B(r)(v?= v?)
(28)The different contexts for the interpretation ofreferring expressions are completely determinedby the order in which we evaluate monadic re-sources.
This means that, just by looking at thelinear order of the lambda order, we can checkwhether a referring expression is evaluated insidethe scope of a perspective changing operator suchas believe, or if it is interpreted using the standardinterpretation.If we consider a case like sentence (2), we oughtto get only a contradictory reading as the statementis intuitively contradictory.
Our analysis producesa single reading that indeed corresponds to a con-tradictory interpretation:JSpider-ManK ?
?x.
JSpider-ManK ??y.?
(JbutK (JpunchK (JDr.
OctopusK)(x))(JnotK (JpunchK (JDr.
OctopusK)(y)))) (29)The verb punch is not a verb that can changethe interpretation perspective and therefore the po-tentially controversial name Spider-Man is inter-preted in both instances using the speaker?s inter-pretation index.
The result are unsatisfiable truthconditions, as expected:punch(o?)(pp?)
?
?punch(o?)(pp?)
(30)In contrast a verb like love is defined in our lex-icon as possibly changing the interpretation per-spective of its object to that of its subject.
There-fore in the case of a sentence like (3), we ex-pect one reading where the potentially contentiousname Spider-Man is interpreted according to thesubject of love, Mary Jane.
This is in fact the re-sult we obtain.
Figure 3 reports the two readingsthat our framework generates for (3).Reading (31), corresponds to the non contradic-tory interpretation of sentence (3), where Spider-Man is interpreted according to Mary Jane?s per-spective and therefore is assigned an entity differ-ent from Peter Parker:love(mj?)(pp?)
?
?love(mj?
)(smmj) (33)Reading (32) instead generates unsatisfiable truthconditions, as Spider-Man is identified with PeterParker according to the speaker?s interpretation:love(mj?)(pp?)
?
?love(mj?)(pp?)
(34)Our last example, (4), repeated here as (35), isparticularly interesting as we are not aware of pre-vious work that discusses this type of sentence.The non-contradictory reading that this sentencehas seems to be connected specifically to two dif-ferent interpretations of the same name, Jesus,both under the syntactic scope of the modal be-lieve.
(35) Reza doesn?t believe Jesus is Jesus.24JloveK (?
(JPeter ParkerK))(JMary JaneK) ?
?p.
JloveK (JSpider-ManK)(JMary JaneK) ??q.?
(JbutK (p)(JnotK (q))) (31)JloveK (?
(JPeter ParkerK))(JMary JaneK) ?
?p.
JSpider-ManK ?
?x.
JloveK (?
(x))(JMary JaneK) ??q.?
(JbutK (p)(JnotK (q))) (32)Figure 3: Non-equivalent readings for Mary Jane loves Peter Parker but she doesn?t love Spider-Man.JbelieveK (JJesusK ?
?x.
JJesusK ?
?y.?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (36)JJesusK ?
?x.
JJesusK ?
?y.
JbelieveK (?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (37)JJesusK ?
?x.
JbelieveK (JJesusK ?
?y.?
(JisK (x)(y)))(JRezaK) ?
?z.?
(JnotK (z)) (38)Figure 4: Non-equivalent readings for Reza doesn?t believe Jesus is Jesus.Our system generates three non-equivalent read-ings, reported here in figure 4.7Reading (36) and (37) corresponds to two con-tradictory readings of the sentence: in the firstcase both instances of the name Jesus are inter-preted from the subject perspective and thereforeattribute to Reza the non-belief in a tautology, sim-ilarly in the second case, even though in this casethe two names are interpreted from the perspec-tive of the speaker.
In contrast the reading in (38)corresponds to the interpretation that assigns twodifferent referents to the two instances of the nameJesus, producing the truth conditions in (39) whichare satisfiable in a suitable model.
?B(r)(j?= jr) (39)The analysis of the Capgras example (5), re-peated in (40), is equivalent; the non-contradictoryreading is shown in (41).
(40) Kim doesn?t believe Sandy is Sandy.
?B(k)(s?= impk) (41)We use impkas the speaker?s representation ofthe ?impostor?
that Kim thinks has taken the placeof Sandy.More generally, there are again three non-equivalent readings, including the one above,which are just those in figure 4, with JJesusK re-placed by JSandyK and JRezaK replaced by JKimK.7Again, there are six readings that correspond to differentproofs, but given the commutative behaviour of the Readermonad, the fact that equality is commutative, and the fact thatwe have in this case two identical lexical items, only three ofthem are non-equivalent readings.4 Comparison with traditionalapproachesIn this section we try to sketch how a traditionalapproach to opaque contexts, such as one basedon a de dicto/de re ambiguity with respect to amodal operator, would fare in the analysis of (4),our most challenging example.To try to explain the two readings in the con-text of a standard possible worlds semantics, wecould take (4) to be ambiguous with respect to ade dicto/de re reading.
In the case of the de dictoreading (which corresponds to the non-satisfiablereading) the two names are evaluated under thescope of the doxastic operator believe, i.e.
theyboth refer to the same entity that is assigned to thename Jesus in each accessible world.
Clearly thisis always the case, and so (4) is not satisfiable.
Inthe case of the de re reading, we assume that thetwo names are evaluated at different worlds thatassign different referents to the two names.
Oneof these two worlds will be the actual world andthe other one of the accesible worlds.
The readingis satisfiable if the doxastic modality links the ac-tual world with one in which the name Jesus refersto a different entity.
Notice that for this analysis towork we need to make two assumptions: 1. thatnames behave as quantifiers with the property ofescaping modal contexts, 2. that names can be as-signed different referents in different worlds, i.e.we have to abandon the standard notion that namesare rigid designators (Kripke, 1972).
In contrast,in our approach we do not need to abandon theidea of rigid designation for names (within each25agent?s model).However, such an approach would present anumber of rather serious problems.
The first isconnected with the assumption that names arescopeless.
This is a common hypothesis in naturallanguage semantics and indeed if we model namesas generalized quantifiers they can be proven to bescopeless (Zimmermann, 1993).
But this is prob-lematic for our example.
In fact we would predictthat both instances of the name Jesus escape thescope of believe.
The resulting reading would bindthe quantified individual to the interpretation of Je-sus in the actual world.
In this way we only cap-ture the non-satisfiable reading.
To save the sco-pal approach we would need to assume that namesin fact are sometimes interpreted in the scope ofmodal operators.One way to do this would be to set up our se-mantic derivations so that they allow different sco-pal relations between quantifiers and other opera-tors.
The problem with this solution is that for sen-tences like (4) we generate twelve different deriva-tions, some of which do not correspond to validreadings of the sentence.Even assuming that we find a satisfactory solu-tion for these problems, the scopal approach can-not really capture the intuitions behind opacity inall contexts.
Consider again (4) and assume thatthere are two views about Jesus: Jesus as a divinebeing and Jesus as a human being.
Assume that Je-sus is a human being in the actual world and thatReza is an atheist, then the only possible readingis the non-satisfiable one, as the referent for Jesuswill be the same in the actual world and all acces-sible Reza-belief-worlds.
The problem is that thescopal approach assumes a single modal model,while in this case it seems that there are two doxas-tic models, Reza?s model and the speaker?s model,under discussion.
In contrast, in our approach therelevant part of Reza?s model is embedded insidethe speaker?s model and interpretation indices in-dicate which interpretation belongs to Reza andwhich to the speaker.Finally an account of modality in terms of sco-pal properties is necessarily limited to cases inwhich modal operators are present.
While thismay be a valid position in the case of typical in-tensional verbs like seek or want, it would not beclear how we could extend this approach to caseslike 3, as the verb love has no clear modal con-notation.
Thus, the scopal approach would not besufficiently general.5 ConclusionWe started by discussing a diverse collection ofexpressions that share the common property ofshowing nontrivial referential behaviours.
Wehave proposed a common analysis of all theseexpressions in terms of a combination of differ-ent interpretation contexts.
We have claimed thatthe switch to a different interpretation context istriggered by specific lexical items, such as modalverbs but also verbs that express some kind ofmental attitude of the subject of the verb towardsits object.
The context switch is not obligatory,as witnessed by the multiple readings that the sen-tences discussed seem to have.
We implementedour analysis using monads.
The main idea ofour formal implementation is that referring ex-pressions that have a potential dependency froman interpretation context can be implemented asfunctions from interpretation indices to fully in-terpreted values.
Similarly, the linguistic triggersfor context switch are implemented in the lexi-con as functions that can modify the interpreta-tion context of their arguments.
Monads allowus to freely combine these ?lifted?
meanings withstandard ones, avoiding in this way to generalizeour lexicon to the worst case.
We have also seenhow more traditional approaches, while capable ofdealing with some of the examples we discuss, arenot capable of providing a generalised explanationof the observed phenomena.AcknowledgementsThe authors would like to thank our anonymousreviewers for their comments.
This research issupported by a Marie Curie Intra-European Fel-lowship from the Europoean Commision undercontract number 327811 (Giorgolo) and an EarlyResearcher Award from the Ontario Ministry ofResearch and Innovation and NSERC DiscoveryGrant #371969 (Asudeh).26ReferencesAsh Asudeh.
2012.
The Logic of Pronominal Resump-tion.
Oxford Studies in Theoretical Linguistics.
Ox-ford University Press, New York.Nick Benton, G. M. Bierman, and Valeria de Paiva.1998.
Computational types from a logical per-spective.
Journal of Functional Programming,8(2):177?193.Mary Dalrymple.
2001.
Lexical Functional Grammar.Academic Press, San Diego, CA.Chris Fox and Shalom Lappin.
2005.
Foundations ofIntensional Semantics.
Blackwell, Oxford.Gottlob Frege.
1892.?Uber Sinn und Bedeutung.Zeitschrift f?ur Philosophie und philosophische Kri-tik, 100:25?50.Gottlob Frege.
1952.
On sense and reference.
In Pe-ter T. Geach and Max Black, editors, Translationsfrom the Philosophical Writings of Gottlob Frege,pages 56?78.
Blackwell, Oxford.
Translation ofFrege (1892).Irene Heim.
1998.
Anaphora and semantic interpreta-tion: A reinterpretation of Reinhart?s approach.
InUli Sauerland and Orin Percus, editors, The Inter-pretive Tract, volume 25 of MIT Working Papers inLinguistics, pages 205?246.
MITWPL, Cambridge,MA.Saul Kripke.
1972.
Naming and necessity.
In DonaldDavidson and Gilbert Harman, editors, Semantics ofNatural Language, pages 253?355.
Reidel.Eugenio Moggi.
1989.
Computational lambda-calculus and monads.
In LICS, pages 14?23.
IEEEComputer Society.Michael Moortgat.
2011.
Categorial type logics.
InJohan van Benthem and Alice ter Meulen, editors,Handbook of Logic and Language, pages 95?179.Elsevier, second edition.Chung-chieh Shan.
2001.
Monads for natural lan-guage semantics.
In Kristina Striegnitz, editor, Pro-ceedings of the ESSLLI-2001 Student Session, pages285?298.
13th European Summer School in Logic,Language and Information.Thomas Ede Zimmermann.
1993.
Scopeless quanti-fiers and operators.
Journal of Philosophical Logic,22(5):545?561, October.27
