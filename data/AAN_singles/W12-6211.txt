Proceedings of the 10th International Workshop on Finite State Methods and Natural Language Processing, pages 60?64,Donostia?San Sebastia?n, July 23?25, 2012. c?2012 Association for Computational LinguisticsFirst approaches on Spanish medical record classification usingDiagnostic Term to class transductionA.
Casillas(1), A.
D?
?az de Ilarraza(2), K. Gojenola(2), M. Oronoz(2), A. Pe?rez(2)(1) Dep.
Electricity and Electronics(2) Dep.
Computer Languages and SystemsUniversity of the Basque Country (UPV/EHU)arantza.casillas@ehu.esAbstractThis paper presents an application of finite-state transducers to the domain of medicine.The objective is to assign disease codes toeach Diagnostic Term in the medical recordsgenerated by the Basque Health Hospital Sys-tem.
As a starting point, a set of manuallycoded medical records were collected in orderto code new medical records on the basis ofthis set of positive samples.
Since the textsare written in natural language by doctors, thesame Diagnostic Term might show alternativeforms.
Hence, trying to code a new medicalrecord by exact matching the samples in theset is not always feasible due to sparsity ofdata.
In an attempt to increase the coverageof the data, our work centered on applying aset of finite-state transducers that helped thematching process between the positive sam-ples and a set of new entries.
That is, thesetransducers allowed not only exact matchingbut also approximate matching.
While thereare related works in languages such as En-glish, this work presents the first results on au-tomatic assignment of disease codes to medi-cal records written in Spanish.1 IntroductionDuring the last years an exponential increase inthe number of electronic documents in the medi-cal domain has occurred.
The automatic process-ing of these documents allows to retrieve informa-tion, helping the health professionals in their work.There are different sort of valuable data that help toexploit medical information.
Our framework layson the classification of Medical Records (MRs) ac-cording to a standard.
In our context, the MRs pro-duced in a hospital have to be classified with re-spect to the World Health Organization?s 9th Revi-sion of the International Classification of Diseases1(ICD-9).
ICD-9 is designed for the classification ofmorbidity and mortality information and for the in-dexing of hospital records by disease and procedure.The already classified MRs are stored in a databasethat serves for further classification purposes.
EachMR consists of two pieces of information:Diagnostic Terms (DTs): one or more terms thatdescribe the diseases corresponding to the MR.Body-text: a description of the patient?s details,antecedents, symptoms, adverse effects, meth-ods of administration of medicines etc.Even though the DTs are within a limited domain,their description is not subject to a standard.
Doc-tors express the DTs in natural language with theirown style and different degrees of precision.
Usu-ally, a given concept might be expressed by alterna-tive DTs with variations due to modifiers, abbrevia-tions, acronyms, dates, names, misspellings or style.This is a typical problem that arises in natural lan-guage processing due to the fact that doctors focuson the patients and not so much on the writing of theMR.
On account of this, there is ample variability inthe presentation of the DTs.
Consequently, it is nota straightforward task to get the corresponding ICD-codes.
That is, the task is by far more complex thana standard dictionary lookup.1http://www.cdc.gov/nchs/icd/icd9.htm60The Basque Health Hospital System is concernedwith the automatization of this ICD-code assign-ment task.
So far, the hospital processes the dailyproduced documents in the following sequence:1.
Automatic: exact match of the DTs in a set ofmanually coded samples.2.
Semi-automatic: through semantic match,ranking the DTs by means of machine-learningtechniques.
This stage requires that experts se-lect amongst the ranked choices.3.
Manual: the documents that were not matchedin the previous two stages are examined by pro-fessional coders assigning the codes manually.The goal of this paper is to bypass the variabilityassociated to natural language descriptions in an at-tempt to maximize the proportion of automaticallyassigned codes, as the Hospital System aims to ex-pand the use of the automatic codification of MRsto more hospitals.
According to experts, even an in-crease of 1% in exact match would represent a sig-nificant improvement allowing to gain time and re-sources.Related work can be found in the literature.
Forinstance, Pestian et al (2007) reported on a sharedtask involving the assignment of ICD-codes to radi-ology reports written in English from a reduced setof 45 codes.
In general it implied the examination ofthe full MR (including body-text).
In our case, thenumber of ICD-codes is above 1,000, although werestrict ourselves to exact and approximate matchover the diagnoses.Farkas and Szarvas (2008) used machine learningfor the automatic assignment of ICD-9 codes.
Theirresults showed that hand-crafted systems could bereproduced by replacing several laborious steps intheir construction with machine learning models.Tsuruoka et al (2008) presented a system thattried to normalize different variants of the terms con-tained in a medical dictionary, automatically gettingnormalizing rules for genes, proteins, chemicals anddiseases in English.The contribution of this work is: i) to collectmanually coded MRs in Spanish; ii) to approximatetransduction with finite-state (FS) models for auto-matic MR coding and, iii) to assess the performanceof the proposed FS transduction approaches.2 Approximate transductionAs it was previously mentioned, there are variationsregarding the DT descriptions due to style, miss-spells, etc.
Table 1 shows several pairs of DT andICD-codes within the collected samples that illus-trate some of those variations.DT ICD1 Adenocarcinoma de prostata 1852 Adenocarcinomas pro?stata.
1853 Ca.
prostata 1854 CA?NCER DE PROSTATA 1855 adenocarcinoma de pulmon estadio IV 16296 CA pulmo?n estadio 4 16297 ADENOCARCINOMA PANCREAS 1579Table 1: Examples of DTs and their ICD-codes.There are differences in the use of uppercase/lowercase; omissions of accents; use of both standard andnon-standard abbreviations (e.g.
ca.
for both ca?ncerand adenocarcinoma); punctuation marks (inciden-tal use of full-stop as commas, etc.
); omission ofprepositions (see rows 1 and 2); equivalence be-tween Roman and Arabic numerals (rows 5 and 6).Due to these variations, our problem can be definedas an approximate lookup in a dictionary.2.1 Finite-state modelsFoma toolkit was used to build the FS machines andcode the evaluation sets.
Foma (Hulden, 2009) isa freely available2 toolkit that allows to both buildand parse FS automata and transducers.
Foma of-fers a versatile layout that supports imports/exportsfrom/to other tools such as: Xerox XFST (Beesleyand Karttunen, 2003), AT&T (Mehryar Mohriand Riley, 2003), OpenFST (Riley et al, 2009).There are, as well, outstanding alternatives such asHFST (Linde?n et al, 2010).
Refer to (Yli-Jyra?
et al,2006) for a thorough inventory on FS resources.The FS models in Figure 1 perform the conver-sions necessary to carry out a soft match betweenthe dictionary entries and their variants.?
First, we define the transducer Accents thattakes into account the correspondences be-tween standard letters and their versions usingaccent text marks.2http://code.google.com/p/foma61define Accents [a:a?|e:e?|i:??|o:o?|u:u?|...
];define Case [a:A|b:B|c:C|d:D|e:E|f:F|...];define Spaces [..] (->) " " || [.#.
| "."]
, .#.
;define Punctuation [".
"|"-"|" "]:[".
"|"-"|" "];define Plurals [..] -> ([s|es]) || [.#.
| "."
| " "];define PluralsI [s|es] (->) "" || [.#.
| "."
| ","| " "];define Preps [..] (->) [de |del |con |por ] || " " ;define Disease [enf|enf.|enfermedad]:[enf|enf.|enfermedad];define AltCa [tumor|ca|ca.|carcinoma|adenocarcinoma|ca?ncer];define TagNormCa AltCa:AltCa;define AltIzq [izquierdo|izquierda|izq|izq.|izqda|izqda.|izqdo|izqdo.|izda|izda.|izdo|izdo.
];define TagNormIzq AltIzq:AltIzq;Figure 1: A simplified version in Foma source code of the regular expressions and transducers used tobypass several sources of distortion within the DTs in order to parse variations of unseen input DTs.?
The expression Case matches uppercase andlowercase versions of the DTs.?
There is a set of transducers (Spaces,Punctuation, Plurals and PluralsI)that deal with the addition or deletion of spacesand separators (as full-stop, comma, and hy-phen) between words or at the end of the DT.?
Prepositions.
Many DTs can be differen-tiated by the use or absence of prepositions, al-though they correspond to the same ICD-code.For that reason, we designed a transducer thatinserts or deletes the prepositions from a re-duced set that were identified by inspection ofthe training set.
In this way, expressions as?Adenocarcinoma prostata?
and ?Adenocarci-noma de prostata?
can be mapped to each other.?
Tag Normalization of synonyms, vari-ants and abbreviations.
The examination of theDTs in the training set revealed that there wereseveral terms used indistinctly, including syn-onyms and different kinds of variants (mascu-line and feminine) and abbreviations.
For ex-ample, the words adenocarcinoma, adenoca.,carcinoma, ca, ca.
and cancer serve to namethe same disease.
There are also multiple vari-ants of left/right, indicating the location of anillness, that do not affect the assignment of theICD-code (e.g.
izquierdo, izq., izda.
).Finally, all the FS transducers were composedinto a single machine that served to overcome all thesources of distortion together.3 Experimental resultsTo begin with, coded MRs produced in the hospi-tal throughout 12 months were collected summingup a total of 8,020 MRs as described in Table 2.Note that there are ambiguities in our data-set sincethere are 3,313 different DTs that have resulted in3,407 (DT, ICD-code) different pairs (as shown inTable 2).
That is, the same DT was not always as-signed the same ICD-code.DT ICD-codeentries 8,020different entries 3,407different forms 3,313 1,011Table 2: The data-set of (DT, ICD-code) pairs.Next, the data-set was shuffled and divided into 3disjoint sets for training, development and test pur-poses as shown in Table 3.train dev testentries 6,020 1,000 1,000different entries 2,825 734 728Table 3: The data-set shuffled and divided into 3 setsUsing the set of mappings derived from the train-ing set we performed the experiments on the devel-opment set.
After several rounds of tuning the sys-tem, the resulting system was applied to the test set.62PERCENTAGE OF UNCLASSIFIED DTsTRAIN EVAL-SET exact-match + case-ins.
+ punct.
+ plurals +preps.
+ tag-norm.train dev 30.6 27.0 25.2 24.4 23.9 23.2train test 29.8 26.7 25.1 24.8 24.3 23.2train+dev test 27.7 24.5 23.0 22.9 22.5 21.4Table 4: Performance of different FS machines in terms of the percentage of unclassified entries.
All theclassified entries were correctly classified, yielding, as a result, a precision of 100%.Given a DT, the goal is to find its correspondingICD-code despite the variations.
Different FS ap-proaches (described in Section 2.1) were proposedto bypass particular sources of noise in the DT.
Theirperformance was assessed by means of the percent-age of unclassified DTs, as summarized in Table 4.Note that the lower the number of unclassified DTsthe better the performance.
In each of the three rowsof Table 4 the results of different experimental se-tups are shown: in the first two rows the training setwas used to build the models and either the devel-opment or the test set was evaluated in their turn;in the third row, both the training and the devel-opment sets were used to build the model and thetest set was evaluated.
The impact of adding pro-gressively the FS machines built to tackle particularsources of noise is shown by columns.
Thus, the re-sults of the last column represent the performanceof the transducer allowing exact-match search to-gether with case-insensitive search, bypassing punc-tuation marks, allowing plurals, bypassing preposi-tions and allowing tag-normalization.
The compo-sition of each transducer outperforms the previousresult, yielding an improvement on the test of 6 ab-solute points over the exact-match baseline, from27.7% to 21.4%.
As it can be derived from thefirst column of Table 4 the test set contributed to thetraining+development set with %27.7 of new DTs.Overall, the FSMs progressively improved the re-sults for the three series of experiments carried outin more than 6%.
As a result, less and less DTs areleft unclassified.
In other words, the FS machinestackling different sources of errors contribute to as-sign ICD-codes to previously unassigned DTs.A manual inspection over the results associatedto the evaluation of the development set (focus onthe first row of Table 4) showed that all the DTswere correctly classified according to the trainingdata.
Overall, the resulting transducer was unableto classify 232 DTs out of 1,000 (see last columnin first row).
Among the unclassified DTs, 10 outof 232 were due to misspellings: e.g.
cic atriz(instead of cicatriz), desprendimineot (instead ofdesprendimiento).
In fact, spelling correction re-ported improvements in related tasks (Patrick et al,2010).
The remaining DTs showed wider variationsin their forms, as unexpected degree of specificity(e.g.
named entities), spurious dates or numbers.4 ConclusionsMedical records in Spanish were collected yieldinga data set of 8,020 DT and ICD-code pairs.
Whilethere are a number of references dealing with En-glish medical records, there are few for Spanish.The goal of this work was to build a system thatgiven a DT it would find its corresponding ICD-code as in a standard key-value dictionary.
Yet, theDTs are far from being standard since they containa number of variations.
We proposed the use of sev-eral FS models to bypass different variants and al-low to provide ICD-codes even when the exact DTwas not found.
Each source of variations was tack-led with a specific transducer based on handwrittenrules.
The composition of each machine improvedthe performance of the system gradually, leading toan improvement up to 6% in accuracy, from 27.7%unclassified DTs with the exact-match baseline to21.4% with the tag-normalization transducer.Future work will focus on the unclassified DTs.Together with FS models, other strategies shall beexplored.
Machine-learning strategies in the field ofinformation retrieval might help to make the most ofthe piece of information that was here discarded (i.e.the body-text).
All in all, regardless of the approach,the command in this MR classification context is toget an accuracy of 100%, possibly through the inter-active inference framework (Toselli et al, 2011).63AcknowledgmentsAuthors would like to thank the Hospital Galdakao-Usansolo for their contributions and support, in par-ticular to Javier Yetano, responsible of the ClinicalDocumentation Service.This research was supported by the Department ofIndustry of the Basque Government (IT344-10, S-PE11UN114, GIC10/158 IT375-10), the Universityof the Basque Country (GIU09/19) and the Span-ish Ministry of Science and Innovation (MICINN,TIN2010- 20218).References[Beesley and Karttunen2003] Kenneth R. Beesley andLauri Karttunen.
2003.
Finite State Morphology.CSLI Publications,.
[Farkas and Szarvas2008] Richa?rd Farkas and Gyo?rgySzarvas.
2008.
Automatic construction of rule-basedICD-9-CM coding systems.
BMC Bioinformatics., 9(Suppl 3): S10.
[Hulden2009] Mans Hulden.
2009.
Foma: a Finite-StateCompiler and Library.
In EACL (Demos), pages 29?32.
The Association for Computer Linguistics.
[Linde?n et al2010] Krister Linde?n, Miikka Silfverberg,and Tommi Pirinen.
2010.
HFST tools for morphol-ogy ?
an efficient open-source package for construc-tion of morphological analyzers.
[Mehryar Mohri and Riley2003] Fernando C. N. PereiraMehryar Mohri and Michael D. Riley.
2003.
AT&TFSM LibraryTM ?
Finite-State Machine Library.www.research.att.com/sw/tools/fsm.
[Patrick et al2010] Jon Patrick, Mojtaba Sabbagh, SuvirJain, and Haifeng Zheng.
2010.
Spelling correctionin clinical notes with emphasis on first suggestion ac-curacy.
In 2nd Workshop on Building and EvaluatingResources for Biomedical Text Mining (BioTxtM2010)LREC.
ELRA.
[Pestian et al2007] John P. Pestian, Chris Brew, PawelMatykiewicz, D. J Hovermale, Neil Johnson, K. Bre-tonnel Cohen, and Wlodzislaw Duch.
2007.
A sharedtask involving multi-label classification of clinical freetext.
In Biological, translational, and clinical lan-guage processing, pages 97?104, Prague, Czech Re-public, June.
Association for Computational Linguis-tics.
[Riley et al2009] Michael Riley, Cyril Allauzen, andMartin Jansche.
2009.
OpenFST: An open-source,weighted finite-state transducer library and its applica-tions to speech and language.
In Proceedings of Hu-man Language Technologies: The 2009 Annual Con-ference of the North American Chapter of the Associ-ation for Computational Linguistics, Companion Vol-ume: Tutorial Abstracts, pages 9?10, Boulder, Col-orado, May.
Association for Computational Linguis-tics.
[Toselli et al2011] Alejandro H. Toselli, Enrique Vi-dal, and Francisco Casacuberta.
2011.
Multi-modal Interactive Pattern Recognition and Applica-tions.
Springer.
[Tsuruoka et al2008] Yoshimasa Tsuruoka, John Mc-Naught, and Sophia Ananiadou.
2008.
Normalizingbiomedical terms by minimizing ambiguity and vari-ability.
BMC Bioinformatics, 9(Suppl 3):S2.[Yli-Jyra?
et al2006] A.
Yli-Jyra?, K. Koskenniemi, andK.. Linde?n.
2006.
Common infrastructure forfinite-state based methods and linguistic descriptions.In Proceedings of International Workshop Towardsa Research Infrastructure for Language Resources.,Genoa, May.64
