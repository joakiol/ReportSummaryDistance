A GENERAL COMPUTATIONAL MODEL FOR WORD-FORM RECOGNITION AND PRODUCTIONKimmo KoskenniemiDepartment of General LinguisticsUniveristy of HelsinkiHall ituskatu 11-13, Helsinki 10, FinlandABSTRACTA language independent  mode l  forrecogni t ion and product ion  of word formsis presented.
This " two- leve l  model" isbased on a new way of descr ib ing  morpho-logical alternations.
All rules describingthe morphophonological variations are par-al lel  and re lat ive ly  independent  of eachother.
Individual rules are implemented asf inite state automata,  as in an ear l iermodel  due to Mar t in  Kay and Ron Kaplan.The two-level model has been implementedas an operat iona l  computer  p rograms inseveral  places.
A number  of operat iona ltwo-level descriptions have been writtenor are in progress  (Finnish, Engl ish,Japanese, Rumanian,  French, Swedish,  OldChurch Slavonic,  Greek, Lappish, Arabic,Icelandic).
The model is bidirectional andit is capable of both analyz ing and syn-thesizing word-forms.I.
Generative phonologyThe formalism of generative phonologyhas been wide ly  used since its introduc-tion in the 1960's.
The morpho logy  of anylanguage may be described with the formal-ism by const ruct ing  a set of rewr i t ingrules.
The rules start from an underlyinglexical  representat ion,  and t rans form itstep by step until the surface representa-tion is reached.The generative formalism is unidirec-t ional and it has proven to be computa-t ional ly  di f f icult ,  and therefore it hasfound little use in practical morphologi-cal programs.2.
The model of Kay and KaplanMartin Kay and Ron Kaplan from XeroxPARC not iced that each of the generat iverewr i t ing  rules can be represented by af inite state automaton  (or transducer)(Kay 1982).
Such an automaton  would com-pare two successive levels of the genera-tive f ramework:  the level immediate lyThe work descr ibed in this paper is a partof the project 593 sponsored by the Acade-my of Finland.before app l i ca t ion  of the rule, and thelevel after app l i ca t ion  of the rule.
Thewhole morphological grammar would then bea cascade of such levels and automata:lexicalrepresentation IFSA IItafter ist rulet after 2nd rule !t after (n-1)strulesurfacerepresentationA cascade of automata  is not opera-t ional  as such, but Kay and Kaplan notedthat the automata  could be merged into asingle, larger automaton  by using thetechniques of automata  theory.
The largeautomaton would be functionally identicalto the cascade, a l though single rulescould no more be identified within it.
Themerged automaton would be both operation-al, e f f i c ient  and bid i rect ional .
Given alexical  representat ion,  it would producethe surface form, and, vice versa, given asurface form it would guide lexical searchand locate the appropriate endings in thelexicon.In p r inc ip le ,  the approach  seemsideal.
But there is one vital problem: thesize of the merged automaton.
Descriptionsof languages with complex morphology, suchas Finnish, seem to result  in very largemerged automata.
A l though there are noconc lus ive  numer ica l  es t imates  yet, itseems probable  that the size may growprohibitively large.3.
The two-level approachMy approach is computationally closeto that of Kay and Kaplan, but it is basedon a d i f ferent  morpho log ica l  theory.
In-178stead of abstract phonology, I fo l low thel ines of concrete  or natura l  morpho logy(e.g.
Linell, Jackendoff,  Zager, Dressler,Wurzel ) .
Us ing  this  a l te rnat ive  or ienta -t ion I a r r ive  at a theory,  where  there isno need for merging the automata in orderto reach an operat ional  system.The two- level  model  rejects abstractlex ica l  representat ions ,  i.e.
there neednot a lways  be a s ing le  invar iant  under -lying representation.
Some variat ions arecons idered  supp le t ion - l i ke  and are notdescribed with rules.
The role of rules isres t r i c ted  to one-segment  var ia t ions ,wh ich  are fa i r ly  natural .
A l te rnat ionswh ich  a f fec t  more  than one segment ,  orwhere  the a l te rnat ing  segments  are unre-lated, are considered supplet ion- l ike andhandled by the lexicon system.4.
Two- level  rulesThere are only two representat ions inthe two- level  model: the lexical represen-tation and the surface representation.
Nointermediate stages "exist", even in prin-ciple.
To demonst ra te  this, we take anexample from Finnish morphology.
The nounlasi  'glass' represents the product ive andmost  common type of nouns  end ing  in i. Thelex ica l  representat ion  of the par t i t i veplural form consists of the stem lasi, theplural  morpheme I, and the part i t ive end-ing A.
In the two- level  f ramework  we writethe lex ica l  representat ion  las i IA  abovethe surface form laseja:Lexicalrepresentation: 1 a s i I ASurfacerepresentation: 1 a s e j aThis conf igurat ion exhibits three morpho-phonological  variations:a) S tem f ina l  i is rea l i zed  as e infront of typical plural  forms, i.e.
when Ifo l lows  on the lex ica l  level ,  schemat i -cally: ~I (1)b) The p lura l  I i tse l f  is rea l i zed  as jif it occurs  between vowels  on the sur-face, schematical ly:, (2)V Vc) The part i t ive ending, l ike other end-ings, agrees with the stem with respect tovowe l  harmony.
An arch iphoneme A is usedinstead of two dist inct part i t ive endings.It is rea l i zed  as ~ or a accord ing  to theharmonic value of the stem, schematical ly:back-V .
.
.~~a (3)The task of the two- leve l  ru les  is tospecify how lexical and surface represen-tations may correspond to each other.
Foreach lex ica l  segment  one must  de f ine  thevarious possible surface realizations.
Therule component  should state the necessaryand suff ic ient condit ions for each alter-native.
A rule fo rmal i sm has been designedfor expressing such statements.A typical two- level  rule states thata lex ica l  segment  may be rea l i zed  in acer ta in  way if and on ly  i f  a context  con-d i t ion  is met.
The a l te rnat ion  (i) in theabove example  can be expressed  as thefo l lowing two- level  rule:i <=> ___  I ( i ' )e =Th is  rule s ta tes  that  a lex ica l  i may  berea l i zed  as an e on ly  i f  it is fo l lowed bya p lu ra l  I, and if we have a lex ica l  i insuch an env i ronment ,  it must  be rea l i zedas e (and as noth ing  else).
Both  s tate -ments are needed: the former to exlude i-ecorrespondences occur r ing  e l sewhere ,  andthe la t ter  to prevent  the de fau l t  i - icorrespondence in this context.Ru le  (i') re fe r red  to a lex ica l  seg-ment  I, and it d id  not mat ter  what  was  thesur face  character  cor respond ing  to it(thus the pair  I-=).
The fo l low ing  rulegoverns the real izat ion of I:<?> v - - -  vThis rule requires that the plural  I mustbe between vowels on the surface.
Becausecertain stem final vowels are real ized aszero in f ront  of p lu ra l  I, the generat ivephono logy  orders  the rule for p lu ra l  I tobe applied after the rules for stem finalvowels .
In the two- leve l  f ramework  thereis no such order ing.
The ru les  on ly  s tatea static correspondence relation, and theyare nondirect ional  and parallel.5.
Rules as automataIn the fo l low ing  we const ruct  anautomaton  wh ich  per fo rms the check ingneeded for the i-e a l te rnat ion  d i scussedabove.
Ins tead  of s ing le  characters ,  theautomaton  accepts  character  pairs.
Th isautomaton  (and the automata  for o therrules) must accept the fo l lowing sequenceof pairs:i-I, a-a, s-s, i-e, I-j, A-aThe task of the ru le-automaton is topermi t  the pair  i -e if and on ly  if theplural I follows.
The fo l lowing automatonwith three states (I, 2, 3) per forms this:179(i")State  1 is the in i t ia l  state of the autom-aton.
If the automaton  rece ives  pa i rswithout lexical i it wil l  remain in state1 (the symbo l  =-= denotes  "any  o therpair").
Rece iv ing  a pair  i -e causes  at rans i t ion  to state 3.
S ta tes  1 and 2 arefinal states (denoted by double circles),i.e.
if the automaton is in one of them atthe end of the input, the automaton  ac-cepts  the input.
S tate  3 is, however ,  anonf ina l  state, and the automaton  shou ldleave it before  the input ends (or e lsethe input  is re jected).
If the next  char -acter  pair  has p lu ra l  I as its lex ica lcharacter  (which is denoted  bY I-=), theautomaton  re turns  to s tate  1.
Any otherpair  w i l l  cause the input  to be re jec tedbecause there is no appropriate transit ionarc.
Th is  part  of the automaton  accom-p l i shes  the "only if" part  of the cor re -spondence: the pair i-e is a l lowed only ifit is fol lowed by the plural I.The state 2 is needed for the "if"part.
If a lexical i is fo l lowed by pluralI, we must  have the cor respondence  i-e.Thus, if we encounter a correspondence oflexical i other than i-e (i-=) it must notbe fol lowed by the plural I.
Anything else(=-=) w i l l  re turn  the automaton  to statei.Each rule of a two- level  descr ipt ionmodel corresponds to a finite state autom-aton as in the model of Kay and Kaplan.
Inthe two- leve l  mode l  the ru les or the au-tomata  operate ,  however ,  in para l le l  in-stead of being cascaded:Lexical~ .
~ r e p r e s e n t a t i o n .
.- Surfacerepresentat ionThe rule-automata compare the two repre-sentat ions ,  and a conf igurat ion  must  beaccepted  by each of them in order  to bevalid.The two- level  model  (and the program)operates  in both d i rec t ions :  the samedescr ip t ion  is u t i l i zed  as such for pro-duc ing  sur face  word- fo rms f rom lex ica lrepresentations, and for analyzing surfaceforms.As it stands now, two- level  programsread the ru les as tabu lar  automata ,  e.g.the automaton (i") is coded as:"i - e in front of plural I" 3 4i i I == e = =i: 2 3 1 12: 2 3 0 13.
0 0 1 0Th is  ent ry  fo rmat  is, in fact, more  prac -tical than the state transit ion diagrams.The tabu lar  representat ion  remains  morereadable even when there are half a dozens ta tes  or more.
It has a lso  proven  to bequite feasible even for those who are lin-guists rather than computer  professionals.A l though it is feas ib le  to wr i temorpho log ica l  descr ip t ions  d i rec t ly  asautomata, this is far from ideal.
The two-level rule formal i sm is a much more read-able way of document ing two- level  descrip-tions, even if hand compi led automata areused in the actual implementat ion.
A com-piler which would accept rules d irect ly  insome two- level  rule formal ism would be ofgreat value.
The compi ler  could automat i -ca l ly  t rans form the ru les  into f in i testate automata ,  and thus fac i l i ta te  thec reat ion  of new descr ip t ions  and fur therdevelopment  of exist ing ones.5.
Two- leve l  lex icon  systemS ing le  two- leve l  ru les are at leastas powerfu l  as single rules of generat ivephonology.
The two- level  rule component  asa who le  (at least  in p ract i ca l  descr ip -tions) appears  to be less power fu l ,  be-cause of the lack of extr ins ic  rule order-ing.Var iat ions affect ing longer sequencesof phonemes, or where the relat ion betweenthe alternat ives is phonologica l ly  other-w ise  nonnatura l ,  are descr ibed  by g iv ingdist inct lexical representations.
General -izations are not lost since insofar as thevar ia t ion  per ta ins  to many lexemes ,  thea l te rnat ives  are g iven  as a min i lex iconreferred to by all entr ies possessing thesame alternation.The al ternat ion in words of the fol-lowing types are descr ibed using the mini-lexicon method:hevonen - hevosen 'horse'vapaus - vapautena- vapauksia 'freedom'The lex ica l  ent r ies  of such words  g iveson ly  the nonvary ing  part  of the s tem andre fers  to a common a l te rnat ion  pat ternnen/S or s-t-ks/S:hevo nen/S "Horse S";vapau s-t-ks/S "Freedom S";The mini lex icons for the al ternat ion pat-180terns list the alternative lexical repre-sentat ions  and assoc iate  them with theappropriate sets of endings:LEXICON nen/SLEXICON s-t-ks/Snen S 0 "" ;sE S123 " "s $0 "" ;TE S13 "";ksE $2 ""6.
Current statusThe two-level program has been imple-mented f irst in PASCAL language and isrunning at least on the Burroughs  B7800,DEC-20, and large IBM systems.
The programis ful ly operat iona l  and reasonably  fast(about 0.05 CPU seconds per word a l thoughhardly any effort  has been spent to opt i -mize the execut ion speed).
It could beused run on 128 kB mic ro -computeres  aswell.
Lauri Karttunen and his students atthe Un ivers i ty  of Texas have imp lementedthe model  in INTERLISP (Karttunen 1983,Gajek & al.
1983, Khan & al.
1983).
Theexecut ion speed of their vers ion is com-parable to that of the PASCAL version.
Thetwo-level model has also been rewritten inZeta l isp  (Ken Church at Bell) and in NIL(Hank Bromley in Helsinki and Ume~).The model has been tested by writinga comprehens ive  descr ip t ion  of F inn ishmorpho logy  cover ing all types of nomina land verbal inflection including compound-ing (Koskenniemi, 1983a,b).
Karttunen andhis students have made two-level descrip-t ions of Japanese,  Rumanian,  Engl ish  andFrench (see art ic les  in TLF 22).
At theUniversity of Helsinki, two comprehensivedescr ip t ions  have been completed:  one ofSwed ish  by Oll i  B l~berg (1984) and one ofOld Church S lavon ic  by Jouko L indstedt(forthcoming).
Further work is in progressin Hels ink i  for making descr ip t ions  forArab ic  (Jaakko H~meen-Ant t i la )  and forModern Greek (Martti Nyman).
The system isalso used the Un ivers i ty  of Oulu, where adescr ip t ion  for Lapp ish  is in progress(Pekka Sammal laht i ) ,  in Uppsala,  where amore comprehensive French description isin progress (Anette Ostling), and in Goth-enburg.The two-level model could be part ofany natural  language process ing  system.Especially the ability both to analyze andto generate  is useful.
Sys tems deal ingw i th  many  languages ,  such  as mach inet rans lat ion  systems, could benef i t  f romthe un i form language- independent  formal-ism.
The accuracy of information retrievalsystems can be enhanced by using the two-level model for discarding hits which arenot true inf lected forms of the searchkey.
The a lgor i thm could be also used fordetecting spelling errors.ACKNOWLEDGEMENTSMy s incere thanks are due to my in-structor, professor Fred Karlsson, and toMartin Kay, Ron Kaplan and Lauri Karttunenfor fruitful ideas and for acquainting mewith their research.REFERENCESAlam, Y., 1983.
A Two-Leve l  Morpho log ica lAnalysis of Japanese.
In TLF 22.Bl~berg, O., 1984.
Svensk b~jn ingsmor fo -logi:  en t i l l~mpning  av tv~n iv~-modellen.
Unpublished seminar paper.Depar tment  of Genera l  L ingu is t ics ,University of Helsinki.Gajek, O., H. Beck, D. Elder, and G. Whit -remote, 1983.
KIMMO: LISP Implementa-tion.
In TLF 22.Karlsson, F. & Koskenn iemi ,  K., forth-coming.
A process model of morphologyand lexicon.
Folia Linguistica.Karttunen,  L., 1983.
KIMMO: A Genera lMorphological Processor.
In TLF 22.Karttunen,  L. & Root, R. & Uszkorei t ,  H.,1981.
TEXFIN: Morphological analysisof F inn ish  by computer.
A paper readat 71st Meet ing  of the SASS, Albu-querque, New Mexico.Karttunen, L. & Wi t tenburg ,  K., 1983.
ATwo-Level Morpho log ica l  Descr ip t ionof English.
In TLF 22.Kay, M., 1982.
When meta - ru les  are notmeta-ru les.
In Sparck - Jones  & Wi lks(eds.)
Automat ic  natura l  l anguageprocessing.
University of Essex, Cog-nitive Studies Centre.
(CSM-10.
)Khan, R., 1983.
A Two-Leve l  Morpho log ica lAnalysis of Rumanian.
In TLF 22.Khan, R. & Liu, J.
& Ito, T. & Shuldberg,K., 1983.
K IMMO User's Manual.
In TLF22.Koskenn iemi ,  K., 1983a.
Two- leve l  Mode lfor Morphological Analysis.
Proceed-ings of IJCAI-83, pp.
683-685.---, 1983b.
Two-level Morphology: A Gen-eral  Computat iona l  Mode l  for Word-Form Recognition and Production.
Uni-versity of Helsinki, Dept.
of GeneralLinguistics, Publications, No.
ii.L indstedt ,  J., for thcoming.
A two- leve ldescr ip t ion  of Old Church S lavon icmorphology.
Scando-Slavica.Lun, S., 1983.
A Two-Leve l  Ana lys i s  ofFrench.
In TLF 22.TLF: Texas L ingu is t i c  Forum.
Depar tmentof Linguistics, University of Texas,Austin, TX 78712.181
