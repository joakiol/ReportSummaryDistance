ASSOCIATIVE MODEL OF MORPHOLOGICAL ANALYSIS:As EMPIRICAL INQUIRY 1Harr i  J i ipp inen 2 and Mat t i  Yl i lammi 2Helsinki University of TechnologyHelsinki, FinlandThis paper presents a computational model for the analysis of word forms of a highly inflectional,agglutinative language.
We call the model "associative" as it directly links phonemic stimulus with itsmorphemic interpretation(s) under the guidance of a coherence constraint.
The model has been fullyimplemented for Finnish.
We discuss separately the abstract model and various algorithms to implementthe model.
We also demonstrate the implementation.
The best features of the method are its efficiencyand its capability of supporting open lexicons.1 INTRODUCTIONIn the search for computational models of language,syntactic analysis of sentences has so far received muchgreater attention than morphological analysis of wordforms.
For example, Winograd (1983) in his thoroughbook on syntax and parsing methods has allocated six orso pages to the morphological nalysis.
That makes aboutone percent of the whole text.
This does not, of course,mean that the author rates morphology unimportant, butit does, we believe, reflect the general interest of theresearch community.Such heavy emphasis on syntax on the one hand andalmost total neglect of morphology on the other followsfrom the idiosyncracies of English.
And due to the domi-nant role English has in the computational linguisticcommunity, this somewhat unbalanced view permeatesthe computational linguistic literature.The neglect of English morphology has obviousreasons.
The basic rules of English word inflection arequite simple.
There are some fusion phenomena thatproduce portmanteau morphs resistant to inflectionalanalysis, but their number is small.
For syntactic analysisof sentences, one needs a lexicon anyway.
Why not thentake the easy way out and let the lexicon bear the burdenof morphology and carry at least the hard word forms ifnot all word forms as separate lexemes?For agglutinative inflectional anguages, however, theeconomy of computation may shake hands with theore-tical ambitions.
In Finnisl~, to take an example close toour heart, a nominal may appear in a running text inthousands of different forms, and verbs have an evenwider spectrum of forms (Karlsson 1983).
The probabili-ty distribution of the word forms of a given lexeme isuneven, to be Sure, but even the most conservative esti-mates render the brute-force method inappropriate inother than naive attempts for extremely limited purposes.Fortunately Finnish is an agglutinative language; port-manteau morphs are almost nonexistent.
In order toanalyze Finnish sentences computationally one mustanalyze word forms as well.This paper describes a morphological model for Finn-ish.
The model has been fully implemented, and our testsrate it efficient.
A synopsis of the model appears inJ~ippinen et al (1983a).
This paper describes the modelin more detail.The functional requirements set for the model were:1. clean separation between linguistic knowledge andalgorithms (we wanted to increment and modify themodel without structural changes in the algorithm),2. general and efficient analysis of inflectional, posses-sive, and cliticizod morphs (all inflectional wordforms should be analyzed on the basis of generallinguistic knowledge; synthesis of word forms andthe analysis of derivational forms were left out), and3.
support of an open lexicon (the model should recog-nize the occurrence of a new lexeme and supportlexical update).The model we came up with is associative.
It is notgenerative in the sense that it does not utilize, backwardsor forwards, formal rules designed to generate valid andonly valid Finnish word forms.
The associative rulesconnect strings of phonemes directly with morphemeswithout passing through intermediate syntagmatic ate-Copyright1986 bythe Association for Computational Linguistics.
Permission tocopy without fee all or part of this material isgranted provided thatthe copies are not made for direct commercial dvantage and the CL reference and this copyright notice are included on the first page.
To copyotherwise, or to republish, requires a fee and/or specific permission.0362-613X/86/040257-272503.00Computational Linguistics, Volume 12, Number 4, October-December 1986 257Harri J~ippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquirygories.
The associative model is composed of two inter-related parts:1. a collection of independent stimulus-result rules,each associating a (partial) phonemic stimulus withone or more morphemes, and2.
a coherence constraint hat determines which of thefragmentary results proposed by the rules make up acoherent whole.This model is the result of an empirical inquiry guidedby pragmatic onstraints.
Therefore, the discussion plac-es emphasis on computational issues rather than ontheoretical linguistic argumentation.
We first outline theproblem, and then describe separately a model for itssolution and various algorithms to realize the model.
Wealso discuss and demonstrate an implementation, andcontrast it with other known models.2 THE PROBLEM DECOMPOSEDHenceforth we call lexical entry or lexeme the basic wordform that serves as a carder of morpho-syntactic infor-mation about a word in a lexicon.
Word form or simplyform denotes an inflected lexeme.
The grammaticalrepresentation of a word form is called grammatical wordor word.
The grammatical word of a lexeme in our modelis singular nominative case for nominals and first infini-tive for verbs.
This is the practice of printed Finnishmono- and bilingual dictionaries and lexicons.There is a one-to-many (one-to-thousands) mappingbetween lexemes and their valid forms.
An effectiveinverse mapping is the analysis problem.
Two distinctlexemes may, and frequently do, produce identical forms,homographs.
Consequently, the analysis of a form isoccasionally ambiguous, and it is paramount for the anal-ysis to find all lexemes a given form represents.Any native Finn is able to produce without effort theproper phonemic (or graphemic) word form of a givenlexeme to fit a given context.
When various dialects arereduced into standard written orthographic Finnish, thelexeme takki ('coat'), to take a random example, mayappear in text in any of the following forms:(1){takki,takit,takin,takkien,takkiesi,takkina,takkeihin,takeissasi,takeittako,takeissannehan,takkeinensakohan,...}Similarly, we can take any verb lexeme, say jakaa('deliver'), and list all its distinct forms:(2){ jakaa,jaan,jaat,jakavat,jaoin,jakanevat,jakakoot,jakaisimme,jaetaankohan,jaettaisiinkohan,... }A native speaker, when browsing lists such as (1) or (2),would accept the elements as valid forms and, further-more, easily assign each its basic form, its lexeme.
Forthe ninth element in (1), for instance, an average adultFinn would spontaneously recognize it as a properlyinflected form of takki.
But if asked to interpret theform, he after some hesitation would probably not beable to extract and identify affixes attached.The basic meaning-bearing unit in a word is amorpheme.
The linear arrangements of morpheme classesin Finnish word forms are (Ikola 1977):(3) Nominals:STEM < \[COMPAR\] < NUMBER < CASE< \[POSSESSIVE\] < \[CLITICS1..2\]Verbs:STEM < VOICE < \[TENSE/MOOD\] < \[PERSON\]< \[CLITICS1..2\]Verbal Nominals:STEM < \[VOICE\] < \[VERBNOM\] < \[COMPAR\] <NUMBER < CASE < \[POSSESSIVE\] < \[CLITICS1..2\]Brackets are used to distinguish optional morphemeclasses.
VERBNOM (verb nominal) comprises two partici-ple and four infinitive morphemes.
Some of the classesare cross-categorial.
COMPAR (comparison) may appearonly with adjectival stems or with participial forms.
Pasttense can be joined only with the indicative mood; tenseand mood are therefore expressed in a common class.Two clitics may be attached in a row, on rare occasionseven three.
In speech a < b means b follows a in time; inwriting b is to the right of a.Once the morpheme classes and their ordering aremade explicit, it is then easy for any given word form toisolate the representatives of the morpheme classes.
Anoun, say takkeinensakohan from (1), when matchedagainst (3) is analyzed as takke+i+ne+nsa+ko+hancorresponding to a stem, plural, comitative case, thirdperson possessive, and two clitic morphemes.
Similarly, arandomly picked complex verb form such as jaettaisiinko-han from (2) reads as jae+tta+isi+:n+ko+han, repres-enting a stem, passive, conditional (and hence presenttense) passive suffix (serving as a kind of "fourth"person), and two clitic morphemes.Each class has a small number of elements, and eachmorpheme has at most a few allomorphs, phonemic real-izations.
From the strategic point of view the morphemeclasses fall into two categories.
Other morphemes thanthe stems have a closed set of allomorphs.
They can berecognized with a finite set of rules.
Stems constitute alarge and unbounded set of morphemes as new lexemesmay develop and enter in the vocabulary.
Hence the allo-morphic variants of stems cannot be directly used in aclosed set of rules.
To bound a set Of rules, the rules forstems must recognize invariant parts of phoneme strings,not entire stem alternants.The original problem was thus decomposed into twoparts: The Morphotactic Problem segments word formsand solves the allomorph relation for morphemes otherthan stems; The Stem Alternation Problem solves theresidual allomorph relation for stems.3 GENERAL VIEW OF THE ASSOCIATIVE MODELAn associative model for the analysis of word forms ofFinnish consists of a triplet <{MRi}, <*, {SRi}>, where{MR i} is a set of associative morphotactic rules, {SRi} is a258 Computational Linguistics, Volume 12, Number 4, October-December 1986Harri J~ippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiryset of associative stem rules, and <* is a precedencerelation in the set of the morphotactic rules.
The rulesassociate phonemic stimulus with morphemic data.
Theyobey the general form:(4) \[ml context\] <pl context> key <pr context>\[mr context\]--> \[m result\]A rule is applicable and fires whenever a phonemic stringidentical to key appears omewhere in an input form andthe contextual conditions of the rule are satisfied, pl andpr stand for phonemic ontexts and inl and mr designatemorphemic ontexts.
A contextual phonemic string callsfor substring identity, morphemic ontexts require setinclusion.
Infixes I and r denote left and right sensitivity,respectively.
When a rule fires, it contributes one or moremorphemes (m result) as a possible partial interpretationof the word form.
There is not necessarily a one-to-onecorrespondence between keys and morphs.
Keys mayrepresent entire morphs or morphs that have been trun-cated by fusion processes.The model is implemented in a sequential machine.Therefore the rule (4) has two slightly differing applica-tions:(5a) Morphotactic rules:<pl context>allomorph\[mr context\]-- \[morphemes\](5b) Stem rules:<pl context>a ending\[mr context\]-~ \[conc(ROOT,b ending)\]Morphotactic rules recognize and interpret al othermorphs except stem alternants.
As our algorithm is tunedto right-to-left sequential processing, these rules areinvoked first.
Only left phonemic and right morphemiccontexts make sense in these rules.
Stem rules recognizethe allomorph relation of a potentially unlimited numberof stems.
They use alternant stem endings (a ending) askeys.
A stem rule produces a hypothetical basic stem(lexeme) in which the recognized alternant ending isreplaced (concatenated with the root) by the basicending (b ending) shown.
Only left phonemic and rightmorphemic ontexts are meaningful in stem rules in thechosen strategy.
We discuss the morphotactic part andthe stem alternation part of the model in separatesections below.4 MORPHOTACTIC  MODELThis section lists the morphemes of Finnish and presentsa few outstanding problems in their allomorph relation.The discussion uses similar semiformal generative rules asMatthews (1972).
Then an associative solution to theMorphotactic Problem is displayed.4.1 THE MORPHEMESExpression (3) arranges the morpheme classes of Finnishin three precedence orders, one for the nominal forms,one for the verbal forms, and one for the verbal nominalforms.
These morpheme classes have grammatical func-tions shown in (6).
(Clitics have such complex functionsin Finnish that we do not attempt to mark them bymorphemes but use instead their phonetic realizations inthe discussion.
)(6) COMPAR ---- {eom(parative),sup(erlative)}NUMBER = s(in)g(ular),pl(ural) \]CASE = {nom(inative),gen(itive),part(itive),ess(ive),in(essive),ela(tive),ill(ative),ad(essive),abl(ative),all(ative),ins(tructive),com(itative),ab(essive),tran(slative) \]POSSESSIVE ---- {lp(erson)s(ingular),2ps,3ps,I pp(lural),2pp,3pp}CLITICS = {...}VERBNOM = {Ipart (iciple),IIpart,Iinf (initive),.... IVinf}VOICE = {pass(ive),aet(ive) }MOOD = {ind(icative),imp(erative),cond(itional),pot(ential)\]TENSE = {pres(ent),past\]PERSON = {lps,2ps,3ps,lpp,2pp,3pp,p(assive)surf(ix) \]4.2 SOME PROBLEMS IN THE ALLOMORPH RELATIONSMorphemes of Finnish are complex.
Some morphemeshave no correlates on the phonemic level, somemorphemes have more than one allomorphs, and somephoneme strings have the simplest explanation, it seems,if empty morphs are postulated.
Further complexities arecaused by certain fusion processes.
We outline thesephenomena below for non-Finnish readers.The pl morpheme has the suppletive allomorphs 'i', 'j',or 't', and in some rare cases no phonemic string marksplural.
The sg morpheme has no allomorphs.
These arenot the only morphemes without phonemic orrelates.
Inorder to faithfully pair off morphs and morphemes in aone-to-one correspondence, it is convenient to postulatea zero alternant in place of a missing morph.
For thelexeme kala ('fish'), for instance, we then get amongother derivations between the morphemic (ML) andphonemic levels (PL) the few possibilities shown inFigure 1.
(The root of a stem is henceforth written incapital etters.
)The standard treatment assigns four allomorphs forthe partitive case: 'a', '~', 'ta', and 't~i'.
This varietydecreases if one posits two allomorphs, 'a' and '~t', forpart and allows the existence of an empty morph 't' to beconditioned by stress.
The partitive forms of kala ('fish')and pasuuna ('trombone') in Figure 2 illustrate the inter-play between pl and part morphemes in this stipulation.Computational Linguistics, Volume 12, Number 4, October-December 1986 259Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical InquiryML: KAra + sg + nan ML: KALa + pl + partPL:  ka la  + e + e PL:  ka ' lo  + j + aML: KALa + pl + nan ML: KALa + pl + essPL: kala + t + e PL: kalo + i + naFigure 1.
Examples of suppletive allomorphs and zero morphs.ML: KALa + pl + partPL: kalo + j + aML: PASUU2qa + pl + partPL: pasuuno + i + t + aFigure 2.
An example of empty morphsSome alternants, when joined with neighboringaffixes, exhibit regularities in behavior which can becaptured conveniently by archiphonemes on the mediat-ing morphophonemic level (MPL).
The allomorphs ofcomparison are examples of such alteruants, and so aresome clitic segments.
The use of archiphonemes capturesnicely consonant gradation in the former and vowelharmony in the latter.
The two part allomorphs discussedabove can also be generated via a single archipboneme'A' on the morphophonemic level.
It is realized as an 'a'or an 'a' on the phonemic level as vowel harmonydemands.
In Figure 3 lexemes uuri ('big') and jda ('ice')exemplify how the use of archimorphemes reduces a setof generative rules.
There are fusion processes thatdelete information.
These phenomena re easily formu-lated in generative terms but are problematic for analysis.The leftmost consonant in the possessive morphs(lps:'ni'; 2ps:'si'; 3ps:'nsa'; lpp:'mme'; 2pp:'nne';3pp:'nsa'), be it a nasal or a fricative, overlaps and domi-nates the preceding consonant.
For the lexeme kala('fish'), for instance, we get the derivations in Figure 4 inthe singular and plural nominative and genitive caseswhen a possessive segment is present or absent, respec-tively.Notice how the four forms are distinct when a posses-sive is absent (kala, kalat, kalan, kalojen) and becomethreefold ambiguous when the possessive segment isattached (kalamme, kalamme, kalamme, kalojemme).This is a general phenomenon.
A nominal in Finnishalways becomes grammatically ambiguous when apossessive suffix is attached to a singular nominative orgenitive, or to a plural nominative form.4.3 MORPHOTACT1C MODELAn associative Morphotactic Model (MTModel) is a pair<{MRi},<*>, where {MRi} is a set of morphotactic rules(5a) and <* is a precedence r lation in the set.
<* is anirreflexive, antisymmetric, and nontransitive relationwhich imposes a coherence constraint on the rules.
Eachmorphotactic rule associates a morphemic interpretationwith a phonemic substring.
The relation <* orders therules in such a way that partial interpretations, when aword form is processed from right to left, contribute tovalid total interpretations.260 Computational Linguistics, Volume 12, Number 4, October-December 1986Harri Jiippinen and Matti ylilamml Associative Model of Morphological Analysis: An Empirical InquiryML:MPL:SUURi + ccmp + ~ + n~ SUURi + crmp +~ + n~I L I I  I L l !i iPL: suur + empi + e + e suur + mtt td  + t + eML:MPL:PL:SUURi+sg1suur+ part + 'kO'A kO+e+t+a + 1~J~  + sg + part + kOk kOj~  + e + t + ~ + k5Figure 3.
Examples of archiphonemes.ML: KALa + sg + nonPL: kala + ~ + eKALa + sg + non + ippkala + ~ + e + mineML: KALa + pl + nunPL: kala + t +KALa + pl + nan + ippI t e mme?
.kala + meML: KALa + sg + genPL: kala + e + nKALa+ sg +gen + ippI Ikala + e + mineML: KALa + pl + genPL: ~ lo+j+e+nKALa + pl + gen + ippn minekalo + j + e + mineFigure 4.
Examples of fusion processes.Computational Linguistics, Volume 12, Number 4, October-December 1986 261Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical InquiryMR i <* MRj iff MR i can "immediately follow" MRj.
Arule can immediately follow another if the key of theformer can be juxtaposed to the left of the latter on thephonemic level.
The keys may not overlap, or be discon-tinuous, and their morphemic interpretations must obeythe ordering (3).For coherence, the model also needs boundary rules.Let e denote a zero key for zero morphs, and a and /3mark the zero keys for two special empty sets ofmorphemes.
The "rightmost" morphotactic rule MR a = eL -~'\]\[o~ and the "leftmost" morphotactic rule MR B =the coherence constraint are defined below.
-,,,,two boundary rules have obvious interpretations: MR asignals the right end of a word form and MR/3 indicates astem boundary.
(7) ForAll (MRi)\[NOT(MRa<*MRi)\]ForAll (MRi) \[NOT(MRi<*MR/3) \]Brodda and Karlsson (1980) tried to find the most likelymorphotactic segmentation for a given Finnish wordform drawn from a running text.
The algorithm does notuse a lexicon, neither does it associate phonemicsegments with their morphemic interpretations.From that work we were able to extract and enumer-ate the valid phonemic keys for the morphotactic rules.The keys were then associated with their morphemiccorrelates and the rules were organized under the preced-ence relation <*.
The set in (8) lists a small subset of therule set and a fragment of the coherence constraint.
Forthe sake of brevity, only the key is shown in the left handside of a rule.
To compress the rules, archiphonemes,typed in upper case letters, are used in keys wheneverpossible.
Figure 5 illustrates this part of the coherenceconstraint in graphic form.%~.6 3 ,i~'~6 2, MR61, \[~i i, MRI0_,'VIRI3MR71 /~~54 ~MR4' I~0MR~ NR77 ,MR g MR81% %MR12 'MR11 'MRI 0 MR12 'MR11 'MRI 0XNR20kNR3~B~%NMR MR 12' N~ 10,MRFigure 5.
Partial coherence constraint of the Morphotactic Model262 Computational Linguistics, Volume 12, Number 4, October-December 1986Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiry(8) MRot = a ~ IiMR/3 = 13 -*- IIMR3 ----  ~ - "  !1MR 4 = e - -  IIMRI0 = e ~ \[sg, nom\]MR!
1 = e -*- \[act,ind,pres,3ps\]MRI2 = t ~ \[act, imp,pres,2ps\]MR20 = kO ~ \['kO'\]MR21 = kin -- \['kin'!MR32 = isi --~ \[act,cond,pres,3ps\]MR41 = :n -~ \[pres\]MR42 = 1A -~ \[pass,ind\]MR54 = mme -~ \[lpp\]MR61 = e -~ \[pl,nom\]MR62 = e -~ \[sg,gen\]MR63 = e --~ \[act,ind,pres\]MR71 = mA -~ \[act,IIIinf\]MR74 = ssA ~ \[in\]MR75 = see -- \[sg, ill\]MR77 = i -~ \[pl\]MRso = nee -- \[act,IIpartlMRs1 = ne -- \[act,IIpart\]R<* = { <MR10,MRc~> , <MR11,MRc~> ,<MR12,MRc~>, <MR20,MRa>,<MR3,MRc~>, <MR/3,MR10>,<MR/3,MR'I 1 >, <MR~,MR12>,<MR32,MR20>, <MR/3,MR32 >,< MR4,MR3 >, <MR21 ,MR3 >,<MR4,MR20>, <MR21,MR20>,<MR41,MR4>, <MR41,MR21 >,<MR42,MR41 >, <MR~,MR42 > .... }The rule set and the coherence constraint representthe morphotactic part for morphological analysis.
Aphoneme string is a morphotactically valid form if there isa "path" between the "rightmost" rule, MR a, and the"leftmost" rule, MR/3, in the coherence constraint.
Theinterpretation of the form is the union of the morphemesassociated with the rules along the path.
For an ambig-uous word form more than one path exists between theMR a and the MRfl.The fragmentary rule set and the constraint in (8)give, for instance, the following morphotactic nterpreta-tions for the ambiguous form kalamme shown in Figure4:(9 )ka la + \[sg, nom, 1 pp\](MRfl <*MRI0 <* MR54 <*MR 4 <*MR 3 <*MRc~ )ka la + \[sg,gen, I pp\](MR/3 <*MR62 <*MR54 <*MR 4 <*MR 3 <*MRa)kala+ \[pl,nom, lpp\](MR/3 <*MR61 <* MR 4 <* MR 3 <* MRc~ )kala + \[act,ind,pr, 1 pp\](MR/3 <*MR63 <*MR54 <*MR4 <*MR3 <*MRc~ )The first three are valid interpretations.
The verbal inter-pretation, although morphotactically valid, does notresult in an existing verb stem.
That interpretation will berejected by the Stem Alternation Model discussed below.That the verbal interpretation is indeed morphotacticallyplausible can be seen, for instance, with the formpalamme, analyzed as pala+\[act,ind, pr, lpp\], which is avalid interpretation for the verb lexeme palaa ('burn').MTModel for Finnish consists of 178 rules.
It is notyet an algorithm.
It does not state how analysis is beingdone, that is, how control is to proceed in an analysis.These are matters of an algorithm discussed in a latersection.
The previous discussion has committed themodel from right to left processing, but reverse process-ing or some more advanced control schemes might beused as well.5 STEM ALTERNATION MODELFor any given word form, MTModel resolves sets ofmorphemes that make up coherent wholes.
MTModel alsoindicates tem alternant boundaries (MR/3) but leaves thealternants intact.
The Stem Alternation Model(SAModel) discussed in this section finds for each postu-lated stem alternant its basic form(s), or rejects it.
Wefirst discuss the stem alternants in Finnish as they arecustomarily described in the Word and Paradigm Model.We then describe associative rules for the analysis ofstem alternants.5.1 THE STEM ALTERNATION PROBLEMThe Standard Dictionary of Modern Finnish (Nykysuo-men sanakirja, 1966) describes the behavior of Finnishword forms in terms of the Word and Paradigm Model.
Itclassifies nominals into 82 and verbs into 45 equivalenceclasses - paradigms - based on variations in their stemalternants.
For each paradigm the classification gives atheme word, to represent he class, and its stem alter-nants.
Thus, for instance, the nominal paradigms 10 and41, and the verb paradigm 25 are listed as in Figure 6.The theme words are KALa ('fish'), TOSi ("true"), andTULla ("come"),  respectively.
(We have slightly editedthe entries for our purpose.)
Upper case letters in Figure6 indicate the roots and the stem-forming affixes; lowercase letters are reserved strictly for the alternant stemendings.The information conveyed by the paradigm tables canbe compressed into two matrices below which show justthe distributions of the stem endings.
The rows of thematrices represent the paradigms and the columnsmorphemic contexts (not given here).
Whenever allo-morphs generate different stem endings, the endings areenclosed in parentheses.
The vertical bars separate singu-lar nominal stems from plural stems and active verbalstems from passive stems.
The first column in both matri-ces represents the ending of the basic form, the lexeme.e v denotes a null ending in a vowel stem, e a null endingin general.
Upper case letters mark here archiphonemes.Computational Linguistics, Volume 12, Number 4, October-December 1986 263Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical InquiryNominals:nGm gen~al0  -aN~si41 --dene e ep~t-aA-tTAess-aNA-teNAill-aAN-teENgen-oJEN-aIN-sI~qplpart-oJA-sIAill-oIHIN- s I INVerbs:linf~a  25e e eindpres pastips 3psactpot condpres pres3ps 3ps 2psP~eS3ps-e \[ -KOONIIpart-LUTpres)asspast llpart-TffFigure 6.
Examples of the Finnish word paradigms.
(10) Nominal stem endings:01: e v,e v,e v,e v, e v \] e v,e v, ev02: e v,e v,e v,e v, e v \] e v,e v, e v03:  e v,e v,e v,e v, e v I ev?ev, ev04: i, i, i, i, i I i, e, e05: i, i, i, i, i I (i,e), e, e10: A ,A ,A ,A ,  A I (O,A),O,  O41: si,de, t, te, te I s, s, sVerbal stem endings:01-" ~V' ~V' EV' eV' EV' EV' EV' EV" \[ EV' ~V' EV02: A ,A ,  e ,A ,A ,A ,A ,  A I e, e, e,03: tA,dA, e v, tA, tA,dA, tA, tA \[ de, de, de25: la, e, e, e, e, e, e, e I e, e, eEach interpretation postulated by MTModel unambig-uously chooses a column.
The problem of stem alter-nation follows from the fact that the row of the stem isnot known.
Should SAModel know, say, that the poStu-lated singular genitive stem ki~de in the form kadenrepresents paradigm 41, simple substring replacementoperation would produce the correct lexeme KJfsi righta-way (the singular genitive case occupies the secondcolumn in the nominal matrix above).5.2 STEM ALTERNATION MODELOur associative SAModel consists of a set of stem rules{SRi\], each of the form (5b) and retyped below:(11) <pl context>a ending\[mr context\]-~ \[cone(ROOT,b ending)\]'a ending' is an alternant stem ending.
When a rule fires,its alternant ending is replaced with the basic stem ending('b ending').
The operator 'cone' concatenates the newending with the root, producing a hypothetical basicword form.
The consonant gradation process in roots isnot analyzed in SAModel.
Weak and strong stems aredealt with as separate lexemes.The paradigm tables (10) yield data for morphemiccontexts ( 'mr context') and alternant and basic endings.Alternant endings are necessary but not sufficientphonemic data for rules.
Stem rules without phonemiccontexts are too productive.Luckily, due to phonotactic reasons the orthographicdistribution of roots (unvarying parts of stems) is unevenin various paradigms.
A manageable number of shortphoneme strings suffice to represent all roots of wholeparadigms.
The Reverse Dictionary of Finnish (Tuomi1980) lists practically speaking all Finnish basic wordforms (in reverse order), including some archaic ones andsome of foreign origin.
Each lexeme is tagged with itsparadigm number and syntactic ategory.
That dictionary264 Computational Linguistics, Volume 12, Number 4, October-December 1986HaiTi 3iippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquirywas a valuable source for the contextual phoneme stringsfor the stem rules.For stem rules a well-formed phonemic context(WFPC) and its truth value is defined recursively asfollows.
Any lower case letter in the Finnish alphabet is aWFPC and the context is true if the last letter of a root isidentical to that letter.
If &l, &2 .
.
.
.
.
&n are WFPCs, thenthe following constructions are also WFPCs:(12) (i) &n...8~Z&l(ii) <&l,&z ..... &n>(i) is true if &l and &2 and ... and &n are true, in thatorder.
Testing continues from the point in a stem wherethe previous test left off.
(ii) is true if &l or &2 or ... or&n is true.
The testing of 8q's halts if a recognitionoccurs.
Each 8q starts its test afresh.To enhance compact notation we stipulate that asingle capital letter may represent a WFPC.
Archipho-nemes are conveniently expressed A for <a,~i>, O for<o,6>,  and U for <u,y>;  the set of consonants andvowels appear compactly as K for <d,f,g,h,j,k,l,m,n,p,r,s,t,v> and V for <a,e,i,o,u,y,~i,6>.
But a WFPC ofany complexity can be denoted by a single upper caseletter.The phonemic ontexts vary in complexity in the rulesin SAModel.
Most of them have a fairly simple structure.Two paradigms are, however, without any phonemiccontextual regularity.
One is the nominal paradigm 08.The stem of the theme word LOVi ('notch') ends with ani in the basic form and with an e in singular genitive caselove+n ('of a notch').
This paradigm represents an oldform and the set of its lexemes is closed.
All new nomi-nals that end with an i in the basic form retain the i in thegenitive case and in other singular cases.
For example,the theme word for the paradigm 04 is RISTi  ('cross')and its genitive form is risti+n ('of a cross').
The criteri-on for choosing between paradigms 04 and 08 is notphonotactic; it is diachronic.
Therefore, no phonemiccontext short of a minilexicon would help us to resolve,say, that suurin (a valid superlative form for suuri ('big'))is not SUURi+lsg, genl, as muurin (for muuri ('wall')) isMUURi+lsg, gen\].
We solved the problem by using twokinds of i's as the last letter of a lexeme.SAModel consists of 280 rules.
Added context sensi-tivity increased greatly the quality of stem rules.
A stemalternant produces only a fraction over one basic formson average.
The stem rules augment the coherenceconstraint of MTModel with an obvious component: amorphotactically coherent word form passes the coher-ence test of SAModel only if at least one of the basicforms generated by the stem rules is a valid lexeme.To illustrate the interplay of MTModel and SAModel,ki~sissi~mmekO will be analyzed KAsi+\[pl,in, lpp,'kO'\] inthe way shown in Figure 7.
The figure exhibits schemat-ically only the stem rule responsible for the correctlexeme.
The morphotactic rules in Figure 7 are from (8).The form gets other morphotactically coherent segmenta-tions as well, but they are rejected by the stem rules andthe lexicon.6 ALGORITHMOne can think of various alternative algorithms to realizethe model.
A multiprocessor environment might make theblackboard strategy used in HearsayII  (Erman et al1980) an attractive alternative.
Our choice was a mono-processor environment and right-to-left strategy: first allmorphotactically coherent stem alternants are postulated,then stem rules and dictionary check are invoked in thatorder for each alternant.
The algorithmic issues are brief-ly talked about in this section.6.1 MORPHOTACTICSFirst we decided to implement MTModel as a structuredcollection of interconnected "islands".
Each islandcomprises the possible and mutually exclusive morpho-tactic rules at any given point of processing; the rulesrepresent valid paths through the island.
The coherenceconstraint provides "bridges" between the islands, abridge indicating a valid continuation after a walkthrough an island.
Computationally the islands werefinite state transition automata.There were 32 distinct automata: 3 for clitics, 1 forperson, 5 for tense, 3 for case, 2 for number, 3 forpassive, 5 for participle, 5 for comparation, and 5 forinfinitive rules.
To assist automatic ompilation from therules to the automata, the morphotactic rules were slight-ly modified to read as:SRI24 = <A>s\[ ...,in(ssA) ,pl(i) \] 7-> \[conc(ROOT, si) \]SRI24~sKKsi<* MR8 <* MR77 <* MR74 <* MR54 <* MR 4 <* MR20 <* M~+ 8 + i + SS~ + mine + e + k8 ++ \[ pl, in, ipp, 'kO' \]Figure 7.
The analysis of kiisissiimmek6.Computational Linguistics, Volume 12, Number 4, October-December 1986 265Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiry(13) automaton: (p12) (pl 1) allomorph-~ (\[morphemes\],\[next automata\])e.g.,Rpp: (ALL-\[i:,O:\])(V+X~)n-~ (\[verb,act,ind, 1 ps\],\[Tense 1\])Left contexts of phonemes were confined intoexpressions of two optional sets: for phonemes next tothe left and second to the left.
The term automaton amesthe island the rule belongs to; next  automata identifiesvalid continuations after this path.
mr context  in (5a) isrepresented implicitly in (13) as the path leading to thisrule.The example rule belongs to the person automaton.The rule recognizes the lps suffix n for an active indic-ative verb if an n is found such that it has an ordinary orstressed vowel first to the left and any phoneme xcept along n,o, or 6 second to the left.
Control proceeds to theautomaton Tense1 to identify modal and temporalmorphemes.
In general more than one continuation auto-maton is possible.The island approach worked quite well.
However, itwas redundant because identical transition paths existedfor different automata.
To save memory, we imple-mented another version of MTModel, this one as anorthographic tree of the keys (and rules).
The islandswere layered, so to speak, on top of each other.
A passthrough the constraint in (8), or a walk through anisland, corresponds now to a traversal through the tree.Coherence is satisfied if, for each transition along a pathfrom the MR a to a MRfl, a successful walk through theorthographic tree can take place.
Automatic compilationagain transforms the rules of the form (13) into theorthographic tree.The orthographic tree occupied only about one-tenthof the memory needed for the island approach.
Using anovel key-and-lock construct we were able also to speedup the analysis.
With each node in the tree a "lock" wasassociated as a union of the automata names ('nextautomata' in (13)) in its subtree.
Each traversal throughthe tree provides a "key" as a set of possible continua-tions.
During the next traversal the key is checked in thelock of each node along the path and only a match (non-empty intersection) permits continuation.
This methodaborts fruitless attempts through the tree early on.Morphotactic analysis in the orthographic tree with thislock-and-key approach takes about 40% of the time theoriginal island approach took.6.2 STEMS AND LEXICONThe control of the stem rules was first realized as anorthographic tree of "prolonged stem endings".
Aprolonged ending concatenates an alternant ending withits contextual strings.
The 280 stem rules yield 420distinct extended stem endings.
Exit points were markedin the tree and morpheme contexts were attached tothese nodes as exit conditions.
Basic stem endings werealso associated with the exit points.
A stem alternanttraversed the tree and produced basic forms along thepath whenever the exit condition was satisfied in exitnodes.The stem alternant ree wasted, however, memory toan extent hat we implemented also a hash-coded versionof the extended endings.
This version saves memoryconsiderably without a noticeable increase in the analysistime.A word form is valid only if it has at least one coher-ent morphotactic nterpretation and if at least one of thelexemes produced by the stem rules appears in the lexi-con.
Dictionary organization and its search procedureconstitute therefore an integral part of the algorithm.
Inour implementation the dictionary is composed of threedistinct parts.
The main dictionary is preceded by a hash-coded lexicon that contains the function words.The main dictionary consists of an open set of adjec-tives, nouns, and verbs (and also numerals).
It is imple-mented as a backward-sorted orthographic tree.
Theunconventional ordering allows for iterative analysis ofcompound word forms.
Lexemes whose roots participatein consonant-gradation process have two separate lexicalentries: weak and strong.7 IMPLEMENTATION AND DEMONSTRATIONThe ultimate test of the model and the algorithm lies inits performance.
We felt that the primary justification ofour model is its capability of meeting certain functionalrequirements:?
clean separation between linguistic knowledge andalgorithms,?
general analysis method,?
efficient analysis, and?
support of an open lexicon.The model separates linguistic data from algorithms, asthe discussion above has indicated.
Due to the rule struc-ture the model has proved to be easy to augment, andnow it covers the entire Finnish inflectional morphology.This satisfies the second requirement.
In this section wediscuss efficiency, open lexicon, and other issues ofimplementation a d demonstrate he implementation.For the reasons of efficiency and portability we imple-mented the algorithm in PASCAL.
Separate compilerprocedures transform the associative rules into theirinternal representations, as discussed in the previoussection.
The orthographic morphotactic tree takes about4kW and the hash coded extended stem endings 5kW ofDEC2060 memory.
The procedures that utilize these datastructures take about 20kW.
The two hash-coded frontlexicons reside also in the main memory.
They coveralready the majority of function words in Finnish.
Theirdata structures and code together occupy 21kW ofDEC20 memory.
There is also a version on VAX11 andone on IBM PC/XT.
In the latter, MORFO, as we call thesystem, takes up 305kB of memory.
That figure includesMS-DOS.266 Computational Linguistics, Volume 12, Number 4, October-December 1986Harri J~ppinen and Matti Ylilammi Associative Model of Morpholo~cal Analysis: An Empirical InquiryThe main lexicon resides on disc.
As of this writing themain lexicon contains over 30,000 of the most frequentlyused Finnish verbal and nominal lexemes taken fromSaukkonen et al (1979) and from running ordinary texts.Figure 8 shows a few sample analyses with the tracemode of the system switched on.
Alusta is a highlyambiguous word form in Finnish.
MTModel (JAOTIN)finds six coherent morphotactic interpretations for it.SAModel (MUOKKAIN) extracts two different basic wordforms for the first interpretation, one for the second andthe third, three for the fourth, and none for the fifth andthe sixth.
( 'VA', 'HA',  and 'NE'  stand for strong (orneutral), weak (or neutral) and neutral grade, respective-ly.
The numbers within angle brackets are identifiers ofthe stem rules.)
The weak stem alu is accompanied by itsstrong partner alku.
Of the seven postulated lexemes,five actually occur, found in the main lexicon (SANAKIR-JAT).
The presence of the affix n (gen, or lpp) greatlyreduces ambiguity as Figure 8 further shows.
The morphn is either gen or lpp person.
This information disquali-fies the cases el and part.We have tested the system rather extensively.
In addi-tion to randomly picked word forms we typed in, a typistentered news reports and columns picked from variousFinnish newspapers.
The test texts also included, ofcourse, function words and compound word forms.
Over300,000 forms have been thus introduced.
The analysisof a word form takes about 20ms of DEC2060, 35ms ofVAXll /780, and 50ms of VAXl l /750 CPU-time on theaverage.
Throughput on an IBM PC/XT is about 95words forms per minute.
These figures satisfy our func-tional requirement for an efficient analysis method.As an example trace of the system at work, the firstword forms of Genesis in the Finnish Bible are analyzedby MORFO in the way shown in Figure 9.
(Our lexiconscarry English equivalents for each lexeme.
)Sane: ALUSTAaAOTIN: 11.1 ms.1: ALUSTA=2: ALUSTA=3: ALL= STA=4: ALUS= TA=5: ALUS= TA=6: ALUS= TA=MUOKKAIN: lb .2  ms.1: ALUST A (mort.patio --03A)2: ALUST A3: ALL;ST AA4: ALUALKU5: ALU NEN~: ALUS I (yks .gen .
-EN)7: ALUSSANAKIRJAT: 75.4 ms.1: ALUSTA2: ALUSTAA3: ALKU4: ALUNEN5: ALUS> ALUSTANNoun 88 NoraVerb  ACt lmper  P r  8 2PNoun B8 E1Noun $8 Per tVerb  Pass  Ind  Pr Nl~Verb  ACt I in f  SG NoraVR 11 <1585>VA 1, < 1580>HA 2,  < 710>HA 3,  < 1810>FIE 4p <2860>VA 4 ,  <2480>HA 4,  <1750>BASE Noun $8 NomIN IT IAL IZE  Verb  ACt Imper  Pr  S; 2PBESINNING Noun SE E lBEDDING Noun S8.
Par tSHIP Noun SG Par tSane: ALUSTANALUSTAAALUSTA> ?IN IT IAL IZE  Verb  ACt lnd  Pr  B 1PBASE t~k:xm S8 8anSane:  ALUSTANJAOTIN: b.8  ms.1 = ALUSTAN=21 ALIJSTA" N"3:  ALUSTA= N=MUOKKAIN: 13 .5  ms.1 t ALUST AA2: ALUST A (~.par t .
-03A)3:  ALUSTSANAKIRJAT: 4&.8  ms.1 = ALU~TAA2:  ALUSTANoun 88 NoaVerb  Act  I nd  P r  B 1PNoun SG BenHA 2 ,  < 710>HA 3 ,  <185D>HA 3 ,  < 1B~>IN IT IAL IZE  Verb  ACt lnd  Pr  8 1PBASE Noun S8 GenFigure 8..
Analysis of alusta and alustan.Computational Linguistics, Volume 12, Number 4, October-December 1986 267Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiry> Alussa loi Jumala taivaan ja maan.SANE: A lussaALKU BEGINNING Noun SG InSANE: loiLUODA CREATE Verb  Act  Ind  Imp S 3PSANE: JumalaJUMALA GOD Noun SG NoNSANE: taivaanTAIVAS HEAVEN Noun SO OenSANE: 3aJA  AND Par t ic le  ConJSANE:  RaanEARTH/COUNTRY Noun SG Oen> Ja  maa o i l  aut io  Ja  tyhj i  J a  p imeys  o i l  syvyyden p~l l~ .SANE: J aJA AND Par t ic le  ConJSANE: maaMAA EARTH/COUNTRY Noun SG NomSANE: eli0LLA BE Verb  Act  Ind  Imp S 3PSANE: aut ioAUTIO DESERT Adject ive  SG NomSANE: J aJA AND Par t i c le  ConJSANE: tyhJ~TYHD~ EMPTY Adject ive  SO NomSANE: 3aJA AND Par t i c le  ConJSANE: p imey$PIMEYS DARKNESS Noun SG NomSANE: eli0LLA BE Verb Act Ind Imp S 3PSANE: syvyydenSYVYYS DEPTH Noun SG GenSANE: p~l l~PAALLA UPON Par t i c le  AdverbP~ALL~ ON Par t i c le  P repP~ HEAD Noun SG Ad268Figure 9.
Ana lys i s  of  the  f i rst  words  in the  F inn ish  Bible.Computational Linguistics, Volume 12, Number 4, October-December 1986Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical InquiryA randomly picked verbal lexeme, say katua('repent'), to continue in the Biblical domain, has someof its various forms analyzed in Figure 10.
Notice, by theway, how the verbal forms katua and kadun are homo-nymic with partitive and genitive forms of katu ('street).
(In Figure 10 'imp' stands for past, 'imper' for imper-ative; 's' for singular in verbs, 'sg' singular in nominals;'p' for plural in verbs, 'pl' plural in nominals.
)The analysis of compound word forms is automaticallyinvoked, if none of the basic forms postulated by thestem rules is found in the main lexicon.
If this analysisalso fails, control proceeds to the lexical acquisitionmode.
Good Friday is the compound pitkiiperjantai nFinnish.
(Its literal translation i English is Long Friday.
)That compound belongs to a subclass of complex lexicalitems whose modifying part gets inflected in variouscases in agreement with the head.
Incidentally, thisphenomenon holds also for numerals.
Figure 11 showsexample analyses of some forms of pitkdperjantai.katua kadun katuvlmmillaan katukaam katumlseaaansaSane: KATUAKATIJ STREET Noun SS PertKATUA RE\]MENT V i rb  Act l ln f  SB NoeSane: KADUNKATUA REPENT Verb Act Ind Pr B IFKATU STREET Noun $8 GenSane: KATIJVI MM ILLA~NKATUA REPENT Verb  Act  Ipar t ie  8up PL Ad 3PSane: KATUKAAMMEKATUA REPENT Verb Act  loper  Pr  P 1PSane: KATUM ISESSAN~KATUA REPENT Verb Act  IV ln f  S8 In  3PFigure 10.
Sample analyses of forms of katua.> p i tk ; iper jantat  p t tk&n&per janta ina  p i tk lketper Janta lke |Sane: P ITKX.
.
(p t tk&per janta i )PITK~I LONG Ad ject ive  $8 NomSane: .
.PER3ANTAI (p i tk iper Janta i )PERJANTAI FRIDAY Noun SG NamSane= PITKXN~..  (p i tk&n iper janta ina)PITK~ LONG ~djKt ive  S8 EesSane: ..PERJANTAINA (pltkanl iper jantalna)PER3ANTAI FRIDAY Noun $8 EaaSane: PITK&KSI.. (p i tk ika iper Janta iks i )PITK& LI3NG Ad ject ive  $8 Trane lSane: .
.PER3ANTAIKSI  (p t tk&ketper Jantatket )PER3rU~TAI FRIDAY Noun $8 Trana lFigure 11.
Sample analyses of compound nouns.Computational Linguistics, Volume 12, Number 4, October-December 1986 269Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiry> paholaieenSane: PAHOLAISEN1: PAHOLAISEN2: PAHOLAIS TA3: PAHOLAI NENHA Noun $8  NomVA Verb  Act  Ind  Pr  S 1PNE Noun SG 8enL is&t~in  no .
(0  = po is tu~<esc> m peru ,  y m ysanawm m menu)  : 3Subst /Ad j /Numer - /Yoea  x ?Semant l i kka  : devilSane: paholaleenPAHOLAINEN DEVIL Noun St; EenL i s J t& in  no.
(0 " po is tu ,<eec> = peru ,y  = ysana,m " menu) :> paho la i s takoSane:  PAHOLA ISTAKOPAHOLA I MEN DEV I L Noun SG Par t  koFigure 12.
An example of lexical acquisition.We may now state in more precise terms in what wayour model is capable of supporting open lexicons.
Maybeinadvertently, we had not inserted paholainen ('devil') inthe lexicon.
If we input one of its forms, say paholaisen('devil's'), the failure of the analysis prompts the user tochoose one of the postulated basic forms as shown inFigure 12.
When the user has chosen the only validoption (3), has supplied syntactic category ('S' forsubstantive), and provided its English equivalent, thelexeme enters the lexicon, as the subsequent test provesin Figure 12.
In this convenient manner, we have built upour lexicon to hold about 30,000 entries.
We continuous-ly augment the lexicon from running texts.8 DISCUSSIONThis model for the analysis of word forms originatedfrom certain functional requirements.
The two mostimportant ones were efficiency and an open lexicon.These two pragmatic considerations imposed quitenaturally two specific strategic onstraints which may beof theoretical interest.Efficiency resulted in a computational strategy to usefully realized morphs as primitives in analysis rather thantheir abstract, morphophonemic representations.
Compu-tationally speaking, analysis amounts then to the orderedrecognition of phoneme substrings (morphs) within aphoneme string (input word form).
The result of an anal-ysis is the union of the morphemes associated with themorphs.
The model resulted in an efficient runningsystem, as we have described.The requirement of an open lexicon resulted, underthe constraint of a sequential machine, in-a right-to-leftprocessing strategy.
Only then are stem alternants ofthose lexemes not yet listed in the lexicon unambiguouslyrecognized and analyzed.
Compact expressions ofphonemes uffice to represent he phonetic make-up ofwhole paradigms - unbounded sets of phonotacticallypossible stems.
Right-to-left processing enables the stemrules using these expressions to handle all stem alter-nants, regardless of their occurrence in the lexicon.Native speakers have also the ability to analyze forms ofnon-existing lexemes.Brodda and Karlsson (1980) reports on a programthat aims at the most probable segmentation of Finnishword forms without using a lexicon.
The program neitherinterprets segmentations nor finds all possibilities.Kallgren (1983) describes a prototype system for theanalysis and synthesis of Finnish nominals.
Sagvall-Hein(1980) has studied the applicability of the chart parsingmethod for the morphological analysis of Finnish wordforms.
As this experiment did not result in a full-scalemodel, we do not discuss it further.
Two other papersreport more or less complete solutions for the analysis ofinflected Finnish word forms.Karttunen et al (1981) reports on an implementationthat "can recognize, in a fraction of a second, anyinflected form of a word it has stored in its lexicon ....The present lexicon consists of about 100 roots ....
It cananalyze a short unambiguous word in less than 20 milli-seconds \[DEC-2060/Interlisp\].
A long word or acompound that requires a lot of disambiguation can taketen times longer" (emphasis and comment added).
Themodel utilizes phonetically realized morphs in analysis, aswe do, but stores them in separate suffix lexicons.
Noexplicit precedence relation links the morphs and, there-fore, each suffix entry must carry a description of itsenvironment.
Processing is from left to right.
A root lexi-con first contributes a set of roots matching the inputform.
Each root entry lists constraints its valid formsmust obey.
As the residual input form is processed270 Computational Linguistics, Volume 12, Number 4, October-December 1986Harri J~ippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiryphoneme by phoneme rightward, the interplay betweenthe root constraints and retrieved suffix entries filters outthe roots that match totally with the input form.
A lot ofrun-time bookkeeping is involved.
In this model as wellas other models that use a left-to-right strategy, process-ing time is highly sensitive to the size of the root lexicon:the larger the lexicon the more there are matching roots.Their root lexicon carries entries of such complexitythat only a linguist can add them.
Below appear lexicalentry an ordinary bilingual dictionary entry and our lexi-cal entry for "mato" ('worm').
(Our model uses twodistinct entries for the gradated stem, but the systemautomatically generates the pair.
)(14) ma SUBST IntAlt t-d FinAlt o (Karttunen et al)mato SUBST (Ordinary dictionary)mato SUBST VA (Our)mado SUBST HA mato (Our)Koskenniemi (1983) presents a "two-level model" andreports: "With a large lexicon it takes about 0.1 CPUseconds Burroughs B7800/PASCAL to analyze reason-ably complicated word forms."
This model also runs fromleft to right and first collects from: the root lexicon theroots that match.
Like Karttunen et al, he also storesmorphs in separate suffix lexicons, and prunes from theinitial root set those whose combinations with suffixesmatch with the input word form.
The main difference isthat Koskenniemi uses abstracted, morphophonemicrepresentations of morphs, and the matching of a suffix isnot performed by expert routines in the lexicons but byexternal rules, implemented as finite state automata.
Themorphophonemic representations of morphs and theprocessing rules capture linguistically appealing gener-alizations.
The realization of rules at run time at leastpartly explains the slow speed reported.
Lexical entriesare abstracted roots and hence unnatural to ordinaryusers, although less so than in Karttunen et al Below ishis entry for hakata ('hack') contrasted to our entry.
(15) hakKa VERB (Koskenniemi)hakata VERB (Ordinary dictionary)haka ta VERB HA (Our)hakka ta VERB VA hakata (Our)Neither Karttunen et al nor Koskenniemi seem toconsider it important, as we do, that the form of lexicalentries is "natural" to casual users.
This issue certainlyhas at least practical import.
Both of the discussedmodels process from left to right, unlike our model.
Itfollows that they cannot analyze forms of lexemes notyet in the lexicon.
For example, vimpuloissa is phonotac-tically well-formed form, and all native speakers wouldagree that it is plural inessive case for the meaninglessword vimpula.
As these models begin an analysis by find-ing first the matching roots, they are in deep trouble witha form whose root is missing.
As our model proceedsfrom right to left and has all morphological knowledgeembedded in rules, vimpuloissa will be analyzed intovimpul a + \[pl, in\].
This interpretation is rejected onlybecause the lexeme does not exist.One might argue that Koskenniemi could also augmenthis model to handle new forms by supplementing the rootlexicon with a dummy auxiliary lexicon whose entries areskeletons that represent well-formedness constraints onFinnish stems.
But lacking knowledge of the stem bound-ary for an unknown lexeme the system should invokeskeletons haphazardly and processing time woulddegrade.9 SUMMARYWe have described an associative model for the morpho-logical analysis of word forms of Finnish, which is anagglutinative language.
Such a model consists of sets ofassociative morphotactic and stem rules that directly linkphonemic segments with their morphemic interpretations,and of a holistic coherence constraint which filters outthe associations that make up coherent wholes.
We haveargued that such an associative model results in an effi-cient analysis and that it supports open lexicons.
We thendescribed a fragment of our fully defined associativemodel for Finnish word forms.
We also discussed analgorithm and its various implementations.The algorithm has been fully implemented in PASCAL.Our tests demonstrate that the model satisfies quite wellthe functional requirements we set for it.
A clear sepa-ration exists between linguistic knowledge (associativerules, the coherence constraint, and the lexicons) on onehand and the algorithm on the other.
The model providesa general analysis method of Finnish word forms, includ-ing compound word forms.
(The model can easily beextended to analyze derivational word forms as well, andin fact it currently analyzes a few of the most commonlyused derivational forms.)
Analysis is efficient as it takesabout 30 ms of VAX11/780 CPU-time on average toanalyze word forms in a running text.
The figure includesthe analysis of compound word forms ordinary newspa-per texts contain.
Throughput in an IBM PC/XT is about95 forms per minute.
The model supports open lexicons,which is proved by the fact that the over 30,000 lexicalentries we currently have have been added from ordinaryword forms inputted to the system.ACKNOWLEDGMENTSThis research as been supported by SITRA Foundation.We greatly appreciate the help of Professor TuomoTuomi, who gave us a computer print-out of the ReverseDictionary of Finnish.
Aarno Lehtola and Esa Nelimark-ka have contributed to the formation of the model.
JuhaNiemist6 has been heavily involved in the implementa-tion of various algorithms.
In addition, Asko Hentunen,Esko Nuutila, Pentti Soini, Panu Viljamaa, and VesaYl~ij~i~iski, all students at the Helsinki University of Tech-nology, implemented various versions of the algorithm.We greatly appreciate their help.Computational Linguistics, Volume 12, Number 4, October-December 1986 271Harri Jiippinen and Matti Ylilammi Associative Model of Morphological Analysis: An Empirical Inquiry'REFERENCESBrodda, B. and Karlsson, F. 1980 An Experiment with AutomaticMorphological Analysis of Finnish.
Papers from the Institute ofLinguistics, University of Stockholm, Stockholm.Cercone, N.; Boates, J.; and Krause, M. 1983 A Semi-interactiveSystem for Finding Perfect Hash Functions.
Technical Report inComputing Science, Simon Fraser University, Burnaby, BritishColumbia, Canada.Cercone, N. and Mercer, R. 1980 Design of Lexicons in some NaturalLanguage Systems.
ALCC Journal 1 (2): 37-59.Cichelli, R. 1980 Minimal Perfect Hash Functions Made Simple.Comm ACM 23(1): 17-19.Erman, L., Hayes-Roth, F., Lesser, V., and Reddy, D. 1980 The Hear-say-II Speech-Understanding System: Integrating Knowledge toResolve Uncertainty.
Computing Surveys 12(2): 213-253.Ikola, O.
1977 Nykysuomen kasikirja.
Weiling & G66s, Espoo, Finland.J~ippinen, H.;Lehtola, A.; Nelimarkka, E.; and Ylilammi, M. 1983aKnowledge Engineering Approach to Morphological Analysis.
FirstConference of the European Chapter of ACL, Pisa, Italy; 49-51.J~ippinen, H.; Lehtola, A.; Nelimarkka, E.; and Ylilammi, M. 1983bMorphological Analysis of Finnish: A Heuristic Approach.
ReportB26, Helsinki University of Technology, Digital Systems Laborato-ry, Helsinki, Finland.Karlsson, F. 1981 Finsk Grammatik.
Suomalaisen Kirjallisuuden Seura,Helsinki, Finland.Karlsson, F. 1983 Suomen kielen ti anneja muotorakenne.
WSOY,Porvoo, Finland.Karttunen, L.; Root, R.; and Uszkoreit, H. 1981 Morphological Anal-ysis of Finnish by Computer.
Proceedings of the 71st Ann.
Meetingof the SASS.
Albuquerque, New Mexico, USA.Koskenniemi, K. 1983 Two-level Model for Morphological Analysis.IJCAI-83, Karlsruhe, West Germany; 683-685.Kallgren, G. 1983 Computerized analysis and synthesis of Finnishnominals.
Papers from the Seventh Scandinavian Conference ofLinguistics II, Helsinki, Finland; 433-444.Matthews, P.H.
1972 Inflectional Morphology.
Cambridge UniversityPress.Penttil~i, A.
1957 Suomen Kielioppi.
WSOY, Porvoo, Finland.Sadeniemi, M., Ed.
1966 Nykysuomen sanakirja.
WSOY, Porvoo,Finland.Saukkonen, P.; Haipus, M.; Niemikorpi, A.; and Sulkala, H. 1979Suomen Kielen Taajuussanasto.
WSOY, Porvoo, Finland.S/tgvall-Hein, A.
1980 An Outline of a Computer Model of FinnishWord Recognition.
Report 3, Fenno-Ugrica Suecana, UppsalaUniversity, Center for Computational Linguistics, Uppsala, Sweden.Tuomi, T. 1980 The Reverse Dictionary of Finnish.
Suomalaisen Kirjalli-suuden Seura, Hameenlinna, Finland.Wiik, K. 1967 Suomen Kielen Morfofonemiikkaa.
Report 3, Publica-tions of the Phonetics Department, University of Turku, Turku,Finland.Winograd, T. 1983 Language as a Cognitive Process.
Volume I: Syntax.Addison-Wesley.NOTESThis work was supported by SITRA Foundation (Finnish NationalFund for Research and Development), Helsinki, FinlandCurrent address:SITRA FoundationP.O.
Box 329SF-00121 Helsinki, Finland272 Computational Linguistics, Volume 12, Number 4, October-December 1986
