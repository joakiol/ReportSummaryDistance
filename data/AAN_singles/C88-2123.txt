A Syntactic Description of German in a FormalismDesigned for Machine TranslationPaul SchmldtIAI-Eurotra-DMartln-Luther-Str.
14D-6600 SaarbrlickcnWest-GermanyAbstract:This paper presents a syntactic description of a fragment ofGerman that has been worked out within the machinetranslation project Eurotra.
It represents he syntactic part of theGerman module of this multilingual translation system.
Thelinguistic tool for the following analyses is the so-called CAT-framework.In the first two sections of this paper an introduction of theformalism and a linguistic characterization f tile framework isgiven.
The CAT formalism as a whole is a theory of machinetranslation, the syntactic analysis part which is the subject ofthis paper is an LFG-like mapping of a constituent structureonto a functional structure.A third section develops principles for a phrase structure and afunctional structure for German and the mapping of phrasestructure onto functional structure.In a fourth section a treatment of unbounded movementphenomena is sketched.
As the CAT-framework does notprovide any global mechanisms I try to give a local treatment ofthis problem.O.
IntroductionThere are two basic givens for Eurotra:(i) Stratificational description of language.The description of language consists of an analysis on threelevels:ECS (Eurotra-Constituent-Structure) which describes languageaccording to part/whole relations and word order,ERS (Eurotra-Relational-Structure) which describes language interms of syntactic functions andIS (Interface Structure) which describes language according todeep syntactic relations enriched by semantic information suchas semantic features for characterizing lexical units.
(ii) The CAT-formalism.The CAT-formalism is the linguistic tool for the description oflanguage.
As this formalism has no global mechanisms there aresome restrictions concerning the treatment of unboundeddependencies.Taking thc.~;e givens into account, I would like to present hefollowing topics:(i) An introduction to the formal language as far as necessaryfor the treatment of the linguistic phenomena 1 would like todescribe,(ii) A characterization f the Eurotra stratifieational descriptionof language as a functionally oriented theory,(iii) A development of principles for a syntactic description ofGerman(iv) A sketch of the treatment of unbounded dependencies1.
The formalismI would like to introduce only those parts of the CAT-formalism"which build the basis of my analyses.
That is two kinds of rules:(i) soealled b-rules (structure building rules).
They buildstructures qud transform structures into structures.
(ii) so-called feature-rules and killer-filters.
They are puttogether into one class as both of them operate on structurescreated by b-rules expressing generalizations over attributes.1.1.
b-rules(1)(a) {cat=s} I {cat=np},(cat=vp} 1.
(b) {eat=vp}l (cat=v},{cat=np} l.(c) {cat=np}\[ {cat=det},{cat=.}
\].
(d) (cat=v,lu=kaufen,lex=kau ft,t.s=tensed}In (l)(a)-(d) we have b-rules, which define a small ECS-grammar.
(d) is a rule for a terminal.
The dominance relation isexpressed by square brackets.
The grammar in (1) assignssentence (2)(a) structure (2)(b).
(2)(a) Das Haus kauft der Mann(The house, the man buys)(b) s Inp vpdet  n v npI __ I __det  nI Idas  haus  kauf t  der  mannThe same way as in (l)(a)-(d) an ECS-grammar was written wecan write b-rules defining functional structures.
(3) is a b-ruledefining the functional structure for (2)(a):(3)(a) {cat=s} \[{sf=gov,cat=v,frame=subj o j},(sf=subj,cat=np,case=nom},(sf=obj,cat=np,case=acc),* (sf=mod}l. (sf=syntactic function)(b) {l.=kanfen,sf=gov,frame=su bj obj}.b-rule (3) creates the functional structure (4) for sentence (2)(a).
(4) _ , sfgov ,v  sub j ,np  ob j ,npL L Lkaufen  mann der  haus  dasThe transformation will De done by tile translation b-rule (5).
(5) tsl = S:(cat=s} INPl:{cat=np},~:{cat=vp} IV:{cat=v},NP2:{cat=np}llS:{cat=s} <V,NP2,NPI>.A translation-b-rule (t-rule) consists of a left hand side (Ihs)which defines a representation, i  our case it would unify withthe ECS-strueture in (2)(b), and a right hand side (rhs) whichdefines a dominance and precedence relationship between theitems represented by the variables (capitals).
If there is a b-ruleon the next level, in our case ERS, which satisfies theseconditions, the translation succeeds, t-rule (5) says that structure(2)(b) shall be translated into a structure which is dominated bya node of category s which dominates the three itemsrepresented by the variables in the order given in the rhs of thet-rule.
As the verbal governor, in our case 'kaufen', requires asubj obj frame, expressed by the frame feature, (3)(a) is tileERS-b-rule which would match with the rhs of t-rule (5) andcreate (4).5891.2. f-rules and killer-filters1.2.1.
f-rulesf-rules and killer filters allow for the definition of a contextpart (those features after the slash) and an action part asexample (6) shows.
An f-rule applies to a representation ly ifthe context part strictly unifies with the object.
(6) { case=C,nb=N,gead=G,/cat=np}I {/cat=det},{case=C,nb=N,gend=G,/eat=n} I(6) says that for each np consisting of a det and an n case,number and gender of the n have to be percolated into themother node.I would like to make two remarks: (i) the feature percolation inexample (6) could be done in b-rules.
Thus, it might seem thatf-rules are superfluous.
However, as section 4 will show, thereare many cases where we need feature percolation by f-rules.
(ii) I will make a special use of f-rules.
I will take everything ascontext and action part.
That means, if f-rule f unifies withrepresentation r, r will be replaced by the result of unification,if not, r survives unchanged.1.2.2.
killer-filtersKiller filters specify structures which are not well-formed andwhich therefore have to be deleted.
We might imagine a rulewhich kills nps having a pronominal head and an np in genitive.
(7) kil ler-fi lter:{cat=rip} \[{cat=detJ,{cat=n,n type=pron},{cat=np,case=gen } I.2.
CAT as a functionally oriented framework2.1.
A comparison with a configurational frameworkFor the linguistic ctmracterization f the Eurotra framework 1would like to make a brief comparison between two kinds oflinguistic theories:(i) those which assume syntactic functions as universalprimitives of language (prototypical: LFG)(ii) those which claim that syntactic functions could be reducedto configurational facts (prototypicah GB).Each of the two possible ways of describing language forces thelinguist to describe linguistic facts as word order, bindingrelations, agreement,  case assignment or long distancemovement in a certain way.The configurational framework claims that there is a generalschema for phrase structure rules which is the universal patternaccording to which all constituent structures of all possiblelanguages are built.
It is the x-bar schema:(s)specXdoublebarIxbarxbar betaIgamma(8) represents the x-bar schema, also D(eep)-Structure in GB.On this structure movement rules operate creating S(urface)-structures.So, this is the kind of explanation a configurational frameworkgives: There is a canonical schema (the x-bar schema) and eachconfiguration ot fitting into this schema is explained as derivedby universally restricted movement transformations.The functional alternative has to rely on syntactic functions asuniversal primitives.
So, phrase structure does not necessarilyclaim a universal status, and movement rules are not evennecessary.
This requires a different reatment of the linguisticphenomena.
How does the CAT framework fit into this?
Theadoption of the three level system (ECS,ERS,IS) makes Eurotrafunct ional ly  or iented as it adopts the way  of l inguist icdescr ipt ion a funct ional  approach has to adopt.
While aconf igurat ional  desoript ion consists in mapping givenconfigurations onto a canonical schema, the x-bar schema, byexplaining configurations which do not fit into x-bar as having590undergone movement transformations, a functional descriptionconsists in a mapping of phrase structures onto functionalstructures.2.2.
Completeness and coherence in EurotraThere is an essential which holds for all functional frameworks,namely the completeness and coherence principle.This principle says: A functional structure is well-formed iff itis complete and coherent.
A functional structure is complete iffit contains all the syntactic functions required by the frame ofthe framebearing element.
A functional structure is coherent iffit contains only the required syntactic functions.
Enrotra allowsfor the expression of this principle in two different ways:(i) Enumeration of framesThe ERS grammar has to enumerate all possible patterns, allframes which are possible, as b-rules, and the value of theframe feature of the gov determines that only the wanted andnothing but the wanted governors go into the structure buildingrule.
(9) {cat=s} \[ {sf=gov,cat=v,frame=subj obj},{sf=snhj,cat=np,case=nom},{sf=obj,cat=np,case=acc},*{sf=mod} \]In (9) completeness i expressed by the fact that bothframebound syntactic functions are obligatory.
So, if one of thefunct ions is missing, the structure is not wel l - formed.Coherence is expressed by the fact that the structure buildingrule only allows for the two syntactic functions and nothing else.This prevents e.g.
the creation of an oblique object.
(ii) Completeness and coherence by f-rules and killersThere is, however another way of expressing completeness andcoherence which does not require the enumeration of allframes.
We need the following rules: (a) One ERS b-rule whichenumerates all possible syntactic functions optionally as (I0)does:(10) :b: {cat=s} \[ {sf=gov,cat=v},^ {sf=snbj,cnt=np,case=nom},^ {sf=obj,cat=np,case=acc},^ {sf=obj2,cat=np},^ {sf=obl,cat=pp},^ {sf=scomp,cat=s},* {sf=mod,cat=pp}^ {sf=topic} \](b) A separate encoding of the functions a verb issubcategorized for, i.e.
the frame feature is given up and afeature for each syntactic function is introduced:(11) {lu=see,subj=yes,obj=yes,sf=gov}All other syntactic function feature values will have to get thedefault "no" (by default f-rules).
(12) {lu=see,subj=yes,obj=yes,obj2=no,obl=no,scomp=no,sf=gov}We can now state completeness and coherence independently bkiller filters:(13) :k: {cat=s} l {sf=gov,cat=v,subj--yes},^ {sf=obj,cat=np,case=acc},^ {sf=obj2,cat=np},^ {sf=obl,cat=pp},^ {sf=scomp,cat=s},* {sf=mod,cat=pp}^ {sf=topic) I(13) determines that if the feature for subj=yes then there mustbe a syntactle function "sub j" in this representation.
Expressedby a killer it reads: if there is a structure whose gov has an a-v-pair subj=yes and contains only functions which are not subjthen this structure is not well-formed.
The same which has beenstated here for subj can be stated for all functions.
To getcoherence we use a killer filter as in (14).
(14) :k: {cat=s) \[ {sf=gov,cat=v,subj=no},{sf=subj,cat=np,case=nom}," 0 I(14) says: If the structure whose gov has the feature-value 'no'for the feature 'subj' contains a feature bundle containing thefeature sf=subj, plus anything else, then this structure is notwell-formed.3.
Syntactic description of German3.1.
Principles of syntactic descriptionAs we have seen above, the syntactic description of a languagein Eurotra follows a functional approach.
In our description thisis not only reflected by the existence of a functional evel butalso by the uonhierarehical, nonconfigurational description ofthe sentence constituent we offer.
As we do not use the given x-bar schema we need no empty elements on ECS and we describeGerman as a uonconfigurational language.Though in German matrix clauses we have SVO word order,German is usually considered an SOV language.
Matrix clauseword order is considered as derived from subordinate clauseword order by movement transformations.
(of.
Koster 1975,Thiersch 197~ L Reis 1985..On this basis we would like to make another assumptionconcerning phrase structure which says that there is a uniquestructure underlying all German sentences (matrix clause andsubordinate clause).
This hypothesis is called "SymmetryHypothesis" or "Doppelkopfanalyse" ( f. Reis 1985).
It is sharedby most of the generative syntacticiens such as H. den Besten,H.
Haider, J. Lenerz and J. Koster.
I will adopt some version ofthis "Symm~try Hypothesis" (SM) which will be developed inthe following:3.2.
Phrase structure description (ECS) of German(i) The initial base rule is (15)(15) sbar - ->  co,up s(ii) There are two left peripheral positioqs compl and comp2.We would like to represent this fact by the following expansionrule'.
(16) cutup --> COMP1 COMP2where COMPI and COMP2 represent positions which will bedescribed thus:(iii) The B .. position has the feature +- tnsd which specifies itas the verb/complementizer position, being filled in the basecomponent only by lexical complementizers.
This analysis yieldsthe following structure:(17) sbarIcomp sCOMPI  COMP2 v f in(iv) Two movement rules operate on this structure, deriving allnon SOV structures.
These two rules are: TI : Verb fronting andT2 : Topicalization where COMP2 is the landing site for thefinite verb and COMP1 thb landing site for X-double-bar.We will show now in (18) how possible German sentencestructures can be derived according to SM.
(IB) sbarIcomp sI I _ _\] \[ np np v f inI I I(a) dass  der  mann die frau l iebt(that the man the woman loves)(b) l iebt( i )  der  mann die frau e(i)( loves the man the women)(c} der  mann( i )  l iebt( j )  e(i) d ie  frau e(j)(the man loves the woman)(d} d ie  frau(i)  l iebt( j )  der  mann e(i) e(9 )(the woman loves the  man)(e) wet( i)  l iebt( j )  e(i) d ie  frau e(j)(who loves  the woman)(f) der(i)  e(i) d ie  frau l iebt(who the woman loves)(g) wet( i )  e(i) d ie frau l iebt(who the woman loves)(18)(a) represents the base structure description.
(18)(b) V/Irepresentation as in yes/no questions, tile finite verb havingmoved into COMP2 leaving behind a trace.
(18)(c) representsordinary matrix clause word order derived by the twomovement rules TI and T2.
(18)(d) represents matrix clauseword order with a topicalized direct object.
(18)(e) is a case ofa matrix clause word order interrogative.
(18)(f) a relativeclause and (18)(g) a subordinate clause interrogative.
(18)(e) and(g) represent a case of wh-movement.
Untensed subordinateclauses which would not fit into this schema would be analysedas PPs:(19) pp \ [pohne\ [vp \ [vzu f ragen\ ] \ ] \ ](without asking )This SH-analysis can at least make the following claims: (i) TheCOMP2-position as complementizer position and as lauding sitefor the verb-fronting transformation nicely explains the relationbetween occurrence of complementizer and the occurrence ofthe finite verb (ii) As (18)(e) and (g) show, wh-movement canbe represented equally for matrix clauses and subordinateclauses, namely as movement into COMP2.
(iii) The Sll--analysis is compatible with the productive traditional"Stellungsfelderhypothese" (c-f. Olson 1984).Another subject of phrase structure should be mentioned here:the treatment of tile verbal-complex.
We adopted the followingapproach: Every-"~'erb is a full verb.
Auxiliaries are subjectcontrol verWs (of Netter1986, 1988, and Bresnan 1982).~20) sbarcompI .
.
.
.
.
.
.
.
.
.
.
.
.
.
np vp vfin.
.
.
.
I .
.
.
.
.
.
.vp vinfJ.nIvp vinfinIvinfindass der brief von ihm zu schreiben versucht worden is~(that tile letter by him to write tried been has)This treatment allows an easy calculation of tense, voice andaspect on ERS, as there is still structural information.
Asrepresentation (20) shows, all nonfinite verbs are treated onECS the same way, namely as the head of left recursivelybranching vp-constituents.
This enables an easy treatment ofauxiliaries as raising verbs on ERS (see section 3.3.).3.3.
Relational structure (ERS)3.3.1.
PrinciplesThe relational stgucture of a language is constituted by theproperty of lexical units (lu) to bind certain other elements.
Thisproperty is usually called "valency".
Formally this fact isreflected in the formalism by the property of local trees.
Eachlocal tree contains just one gov(ernor), its valency-boundelements which are the comp(lements) and its non-valency-bound elements which are the mod(ifier)s:591(21) subj,npgov,n mod,ap mod,detpgov,adj gov,detmann alt d-man old theThe valency of a lu is its property to bind a certain number anda certain kind of syntagma.
In other words: a valency theory isa theory on how many and which kind of syntagma occur giventhat a certain lu occurs.
We consider verbs, nouns, adjectivesand prepositions as having the property of being able to bindother syntagmas.
A major part of every valency theory is thedesign of a test which is meant to determine the difference ofcomplement and modifier.
In the history of valency theory a lotof tests have been developed, among others the following:Elimination test, free addability test, adverbial clause test, verbsubstitution test, do-so-test, backformation test.
We adopted arevised addability test (ef.
Schmidt 1986).3.3.2.
Word orderThe most important aspect with the decriptiou of the relationbetween ECS and ERS is that the present formalism allows forthe treatment of free word order languages.
We considerGerman as having a relatively free word order.
The decisivefeature is that the rhs of the t-rules are able to specify onlydominance relations which is expressed by the parenthesis in(22).
Permutations in the German middle field can easily betreated as shown in example (22).
(22) S:{eat=shar}I-:{eat=comp} ITOPIC,V:{cat=v}I,~:{cat=s}\[ADVl:* {cat--adv2},NPh(cat=np},ADV2:* {cat=adv2},NP2:{cat=np},ADV3:* (cat=adv2},NP3:{cat=np},ADV4:* {cat=adv2},VP:{cat=vp}l\]=>S:<(TOPIC,V,ADV1,NP1 ,ADV2,NP2,ADV3,NP3,ADV4,VP)>3.3.3.
The verbal complex on ERSAs shown in structure (20), auxiliaries are analysed as full verbs.The structural analysis in (20) makes it easy to treat auxiliariesas raising verbs on ERS, as (23) shows.
(23) 7 .
- -~ovdassOOV,V subj,up( i ) __gi v'vsein brief wer-der denscomplsI subj, scomp,snp(i) _ _ .
l~ev,v subj, scomp,sn~(i>~ov <~j, by_phi,upver- a schrei- e yon ihmsuehen ben3.3.4.
PassiveThe problem with passive is the following: There is a relationbetween the two sentences in (24)(24) Die Kommission verabschiedet den Besehluss(The Commission adopts the decision)Der Besehluss wurde yon der Kommission verabschiedet(The decision was adopted by the council)which is in terms of surface syntactic frames that the phrasebeing the subject in (a), namely 'die Kommission', is the by objin (b) and the direct object of (a) is the surface syntaetiesubject of (b) (bearing all features urface syntactic subjectsusually have, as e.g.
nominative case).
In terms of thematic roleswe could say that the agent is in both eases 'die Kommission'once realized as an NP in nominative case, once realized as a PPwith the preposition 'you'.592We keep surface syntactic information and aim at the followingstructure:(25) undefIgov subj scomp~v Isubj .by_?bjI Iwarden beschluss verabschieden e von kommissionIn universal grammar passive usually is treated in a general way,as passivization is considered a universal process:- In GB passivization is considered as a movement processwhich is contained in the general move alpha schema.- GPSG also treats passive on the syntactic level in form of ametarule.- LFG being a "lexicalist" theory treats passive inthe lexicon bya lexical rule which is s.th.
like(subj) -> zero/(by obj)(obj) -> subjIn Eurotra we have neither of these devices, neither movementrules nor metarules, nor lexical rules.
However, it seems as ifwe could simulate the lexical rules just by putting the "activeframe" into the b-rule as in (26).
(26) {cat=s,voice=passlve}  {sf=gov,cat=v,frame=subj_obj},(sf=subj,eat=np,case=nom},{sf=by ohj,eat=pp,pform=von),'1}I{lufverabschleden,sf=gov,cat= framefsu bj obj }This has the same effect as the LFG lexical rule: only oneencoding of the verb with its active sub obj-frame is necessary.4.
Treatment of Unbounded Movement Phenomena4.1.
Wh-movement4.1.1.
The RepresentationI would like to explain my approach with an example:(27)(a) was sagt Hans, behauptet Peter, verabschiedet der Rat(what says Hans claims Peter adopts the council)what does Hans say that Peter claims the council adopts(b) was sagt HansAccording to our ECS grammar the following ECS tree iscreated:(28) sbarlcomp si sbartopic v u __ l - -comp sI __I v np sbar_IcompI v npI Iwas sagt Hans behaup- Peter verab- der rattet schiedet(what says Hans claims Peter adopts the council)We imagine a functional representation like (29),under (29) ( ~ ~I JSCOmp t--~(i) gOV gOV subJI % .
.
.
.
.
.
.
.
.
i govI I I I I Isagen hans behaup- Peter verab- Rat e(i) e(i) e(i) wastat schisdet what)(say hans claim peter adopt councilIn (29) we can see that a chain was created from the topic of thematrix clause via the topic of the embedded clause to the correctsyntactic function slot.
We have to guarantee that it is a correctchain which I understand as a chain that is correctly coindexedwith the correct function in the ERS b-rule.4.1.2.
The Creation of the Correct StructureThe structure in (29) is created by inserting empty elements byt-rule application in a very controlled way.
1 would like to givean exemplif ication by NP-complements.
Structure insertion byt-rules exploit the fact that movement has its landing site whichis the node called eompl in representation (17).
In the lhs of thet-rule this information is exploited.
We also know that eachphrase whk:h occupies the eompl position on ECS has to go toan ERS slot which has sf=topic.
We need the four t-rules fordoing the job.
(30) ts l= S:{cat=shar)I~:(cat=comp,tns= tensed}\[TOPIC:{cat=np},V:(cat=v} h~: {cat=s,tns=untensed}\[NP2;{cat=np),~:^{cat=pUnCrt},SBAR:^ {cat=shar)l\]=).S:{cat=s}<V,NP2,{cat=np,n type=empty},SBAR,TOPIC:{sf=toplc} >.The t-rule in (30) treats" local wh-movenrent as in (2)(a) andcreates tructure (31 ).
( 31 ) unde fgov subj obj topic ( i )I I I Ikaufen mann e(i) haus(30) creates an empty np-slot which has to be interpreted as oneof the b-rule slots subj, obj or obj2 in (10).
It will go tosf=subj,sf=obj and sf=obj2.
It is up to completeness andcoherence to determine that (31) is wel l - formed in our case.For the top of an unbounded ependency construction (29), weneed t-rule (32) which puts the topicalized np into the topic sloton ERS, but without creating a corresponding empty up.
(32) ts2= $:{cat=sbar}\[~:{cat=comp,tns=tenscd}\[TOPIC: {cat=up}, V: {cat=v}l,~:{cat=s,tns=untensed}\[NP2: ^ {cat=up},~: ^ {cat=punct},SBAR: ^(cat=sbar}ll=>S:{cat=s} < V, NP2, SBAR, TOPIC:{sf=toplc,cat=np} >.
(33) treats the middle of unbounded dependency constructionsi.e.
a sentence structure which has an empty topic.
The middlebuilds the link between embedded sentences and matrix clause.It has no empty correspondent in the structure.
This structure iscreated by a t-rule which operates on an ECS representationwhich has an empty topic landing site (see (28)).
(33) is3= S:{cat=sbar} I~: {cat=comp,tns=tensed} lV:{cat=v}l,~: {cat=s,tns=untensed}\[Np2: ^ {cat=up},- :  ^{cat=puuct},SBAR: ^{cat=:sbar}l\]=> S:{cat=s} <V,NP2,SBAR,{cat=np,n type=empty,sf=topic} >.For the bottom of the structural representation we finally need at-rule which creates an empty topic and an empty correspondingnp.
(34) is this rule.
It is also applied only under the conditionthat the ECS landing site for wh-movement is empty.
(34) ts4= S:(cat=sbar) I~:{cat=comp,tns=tensed) IV:{cat=v}l,~:{cat=s,tns=untensed)\[ NP2: ^{cat=,tp),-: ^{cat=punct},SBAR: ^{cat=shar}l\]=>S:{cat=s}<V,NP2,{cat=np,n type=empty),SBAR,(cat=np,n type=empty,sf=topic } >.We now have all the pieces needed for creating the correctstructures which can occur in unbounded ependency structures.
(28) only represents a three-fold s-structure, however rule (33)eaters for all possible middles as it will be applied as many timesas there are middles.A few comments eem to be in order on these rules: (30) and(32) on the one hand and (33) and (34) on the other hand havethe same lhs which might cause overgeneration.Rule (31) caters for the case that the s is tile matrix-clausecontaining a moved NP which has to find its functional slotdownwards omewhere in a functional structure of an embeddedclause.
For this case we need a topic which has up correspondenton the same level.If we take (27)(b), rule (30) as well as rule (32) will be applied,both of them putting "was" into the topic function, (30) creatingan empty NP-slot, (32) not creating an empty NP.
So, we havetwo rules (30) and (32) which apply to the same lhs producingtwo different ERS structures.
The completeness and coherencetest determines which t-rule (30) or (32) creates the correctstructure.
Both of them will be applied but only one, namely(30) creates the correct structure according to the completenessand coherence criterion.
In the case of rule (33) and (34) wehave the same problem.
Both of them apply to the same lhs,once inserting an empty np, once not.
Again, completeness andcoherence has to determine whether the result of (33) or (34) iscor rec t .4.1.3.
Feature CheckingThe creation of the correct structure is only half of the story.We have not guaranteed yet that only correct structures arecreated and above all that only correct chains are created.
Thiswill be done by an interaction of f-rules percolating the relevantfeatures such as gender, number, case and the index featureand by kil ler filters which guarantee that only correctly indexedchains survive.
First of all we need f-rules which percolate therelevant features.
(35) :f: a_top to__s= {cat=z}\[ {sf=gov},^{sf=subj},^{sf=obj},^{sf=obj2},{sf=scomp,top index=l,top .b=N,top _gend=G},*{sf=mod},{sf=topic,iudex=l,.b=N,gend=G} I.
(35) is an example which percolates number, gender and indexfrom topic to scomp.
Another f-rule of the same style willpercolate these features from scomp to the topic node of theembedded sentence, and a third f-rule from topic to the emptyfunctional slot.
So, if  we consider example (28) the pereolatiouof the relevant features follows the following path:(36)scomp topicI _ _  Iscomp topic___ I __  Iobj topicI Ie eThe same kind of f -rule will percolate the case featureindependently the same path.
(For the reasons ee below).
Forfeature ehecking we need killer rules which kill all structureswhich are not correctly indexed and those which represent anempty chain.
E.g.
(37) is a rule which deletes all structureswhere  the case feature  of the empty  topic and thecorresponding empty up is not the same.59)(37) :k: ktopic3= {cat=s} \[{sf=gov,cat=v},"0,{cat=np,type=empty,case~=C,lndex=l),*ll,{sf=topic,cat=np,case=C,index=l}l.Actually we need another 6 killers which cheek number andgender.Rule (37) makes clear what has been the sense of the separatecase-feature-percolation.
If we percolated the ease feature inrules like (35) we could not use the index - feature for featurechecking.
1would like to explain this with an example.
We needa rule to filter out the wrong representation (39) which is therepresentation f the following ill-formed sentence:(38) * Den Beschluss agt Hans, behauptet Peter, verabschiedetden Beschluss?
(The decision says Hans, that Peter claims, adopts thedecision)(39) underIgov sub3 scomp topic(i)I I topic(i) gov gov subj scompgov gov subj obj topi (i)sa- Hans be- Peter verab- e(i) beschluss e(i) e(i) be-gem hauptst schiedet den schlussden(say Hans claim Peter adopt the decision the deci-sion)According to our f-rules the index is percolated own into theempty subject slot in the lowest scomp.
(It cannot go elsewhere).This subject has case=nom which is stated in the ERS b-rule.The case feature is the means to get rid of the wrong chain asthere will be a clash between the "arriving" case=accusative andthe already stated case=nominative.
If the case feature had notbeen percolated independent ly  we would not have anypossibility of applying killer rule (37) as the f-rule would nothave been applied for the reason of the impossibility ofunification.
My rules percolate the index into the sub j-slot andmake possible the application of (37)..4.2.
ControlLet us consider the following case of subject control:(40) dass er den Beschluss zu verabschieden zu versprechenversuchtthat he tries to promise to adopt the decisionOur ECS-grammar would assign the ECS-strueture (41):(41) sbarIcompsubcon mpIn npvpIvp prep vI _ _prepdass er den beschluss zu verab- zu vet- rer-schieden sprechen suchtThe ERS representation would look like (42).In the case of control-structures it is easy to control theinsertion of structure by t-rule as embedded control structuresare vps in our system.
As we have seen in section 3, each vp islacking a subject np which is inserted on ERS by t-rule (43):594(42) underI _ _gov compI_gov subj(i)I gov govIdass ver -  ersuchensubjIgovIvet -  o ( i )sprechen(43) tvpl = VP:{cat=vp}scompI _scompIgov subj objgov govverab- e(?)
be-schieden schluss\[ NPl:{cat=np},VP:(cat=vp},~:{cat=prep},V:{cat=v,tns=untensed}\]=>VP:{cat=s} ?
V,{cat=np,type=empty,sf=subj},NPl,VP >.In control structures feature checking works the same way as inwh-constructions.
We only need a correct feature percolationwhich puts the relevant features to the scomp-node and fromthere to the sub j-slot.
We only have to take care that in thescomp-node features are not confused with topic-features.
Thiscan be guaranteed by using ctl case etc.
in scomp.
(44):f: f ctll = {cat=s}\[{sf=gov,cat=v,ctl=subj},{sf=subj,cat=np,nb=N,geud=G,index=I},"{},{sf=scomp,cat=s,ctl_nb=N,ctl_gend=G,ctl index=I},*1}1.5, SummaryThe descriptions of a significant fragment of German aboveseem to be a good basis for a translation system.
The functionalstructures created in our system can easily be mapped onto deepsyntactic predicate-argument-structures which are enriched bysemantic information.
From there transfer should happen.As far as the treatment of unbounded ependencies is concernedthere might be some problems in transfer.
Certain pied pipingphenomena and multiple wh-movement might make necessary amore powerful mechanism.6.
Literature:Abraham,W.
(ed)(1985) Erkl~irende Syntax des Deutschen,Tiibingen, (=Studien zur deutsehen Grammatik 25).Arnold,D.
et a1.
(1987) The Eurotra Reference Manual, Release2.1., ms.
Utrecht.Bresnan,J.
(1982) The Passive in Lexical Thoery, in: Bresnan,JThe Mental Representation f Grammaticasl RelationsCambridge, Mass./London Engl.Koster,J.
(1975) Dutch as an SOV Language.
Linguistic Analysisl,pp.l 11-136.Lenerz,J.
(1984) Diachronic Syntax: Verb Position and COMP inGerman, in: Toman (1984).Netter,K.
(\]986) Getting Things out of Order.
An LFG Proposalfor the Treatment of German Word Order, ColingProceedings (1986),p 494 - 496.Olson,S.
(1984) On Deriving V-1 and V-2 Structures in German,in: Toman (1984).Reis,M.
(1985) Satzeinleitende Strukturen.
Ueber COMP, Haupt-und Nebensaetze, w- Bewegung und Doppelkopfanalyse,in: Abraham (1985).Steiner,E., Sehmidt, P,, Zelinsky, C. (1988) (forthcoming)from Syntax to Semantics.
(New Insights from MachineTranslation).
London 1988.Schmidt,P.
(1986) Valency Theory in a Stratificational MTSystem,in: Coling Proceedings (1986).Thiersch, C.: Topics in German Syntax, unpub.
Diss.
1978.modIgovIden
