CAPTURING L INGUIST IC  GENERAL IZAT IONS WITH METARULESIN AN ANNOTATED PHRASE-STRUCTURE GRAMMARKur t  Konol igeSRI In ternat iona l  =1.
In t roduct ionComputat iona l  models employed by cur rent  natura l  languageunderstanding systems rely on phrase-s t ruc ture  representat ionsof  syntax.
Whether implemented as augmented t rans i t ion  nets,BNF grammars,  annotated phrase-structure grammars, or s imi larmethods, a phrase-structure representation makes the parsingproblem computat lona l ly  t rac tab le  \ [7 \ ] .
However ,phrase-s t ruc ture  representat ions  have been open to thec r i t i c i sm that they do not capture l ingu is t ic  genera l i zat ionsthat  are easily expressed in t rans format iona l  grammars.This paper describes a formal ism for  spec i fy ing syntact icand semantic genera l i zat ions  across the rules of aphrase-structure grammar (PSG).
The formal ism consists oftwo  parts:1.
A dec la ra t ive  descr ipt ion of basic syntact icphrase-s t ruc tures  and their  associated semantict rans la t ion .2.
A set of  metaru les  for  der iv ing  addi t ional  grammarrules f rom the basic set.Since metaru les  operate on grammar rules rather  than phrasemarkers,  the t rans format iona l  e f fec t  of  metaru les  can bepro -computed  before  the grammar is used to analyze input,The computat iona l  e f f i c iency  of  a phrase-s t ruc ture  grammar isthus preserved,Metaru le  formulat ions  for PSGs have recent ly  rece ivedincreased a t tent ion  in the l inguist ics  l i te ra ture ,  especial ly in\ [4 \ ] ,  which great ly  in f luenced the formal ism presented in thispaper.
Our formal ism d i f fe rs  s ign i f i cant ly  f rom \ [4 \ ]  in thatthe metaru les  work on a phrase-s t ruc ture  grammar annotatedw i th  a rb i t ra ry  feature  sets (Annotated Phrase-s t ruc tureGrammar,  or APSG \ [7 \ ] ) .
Grammars for  a large subset ofEnglish have been wr i t ten  using this formal ism \ [9 \ ] ,  and itscomputat iona l  v iab i l i ty  has been demonstrated \ [6 \ ] .
Because ofthe increased s t ructura l  complex i ty  of APSGs over PSGsw i thout  annotat ions,  new techniques for  applying metaru les  tothese s t ructures  are developed in this paper, and the not ion ofa match between a metaru le  and a grammar rule is care fu l l ydef ined.
The formal ism has been implemented as a computerprogram and pre l iminary  tests have been made to establish itsva l id i ty  and e f fec t iveness .2.
M etarulesMetaru les  are used to capture l inguist ic  genera l i zat ions  thatare not readi ly  expressed in the phrase-s t ruc ture  rules.Consider the two sentences:1, John gave a book to Mary2.
Mary was given a hook by JohnA l though their  syntact ic  s t ructure  is d i f fe rent ,  these twosentences have many elements in common.
In par t i cu la r ,  thepred icate /argument  s t ructure  they describe is the same: theg i f t  of  a book by john to Mary.
T rans format iona l  grammarscapture  this correspondence by t rans forming  the phrase marker=This research was supported by the Defense AdvancedResearch Projects Agency under Cont rac t  N00039-79-C-0118w i th  the Naval E lectron ics  Systems Command.
The views andconclusions contained in this document are those of the authorand should not be in terpreted  as representative of the of f i c ia lpol ic ies,  e i ther  expressed or impl ied,  of  the U.S. Government .The author is grate fu l  to Jane Robinson and Gary Hendr ix  forcomments on an earlier dra f t  of  this paper.for  (1) into the phrase marker for  (2).
The under ly ingpred icate /argument  s t ructure  remains the same, but the surfacerea l i za t ion  changes.
However ,  the recogn i t ion  oft rans format iona l  grammars is a very d i f f i cu l t  computat iona lproblem.
=By contrast ,  metarules operate d i rec t ly  on the rules of  aPSG to produce more rules for  that  grammar.
As long as thenumber of der ived rules is f in i te ,  the resu l t ing  set of  rules isst i l l  a PSG, Unl ike t rans format iona l  grammars.
PSGs havee f f i c ient  a lgor i thms for  parsing \ [3 \ ] .
In a sense, all of  thework of  t rans format ions  has been pushed o f f  into apre -process ing  phase where new grammar rules are der ived.We are not great ly  concerned wi th  e f f i c iency  in pre-process ing,because it only has to be done once.There are st i l l  computat iona!
l im i ta t ions  on PSGs that mustbe taken into account  by any metaru le  system.
Large numberso f  phrase-s t ruc ture  rules can seriously degrade theper fo rmance  of a parser, both in terms of its running t ime == ,storage for  the rules, and the ambigu i ty  of the resu l t ingparses \ [6 \ ] .
Moreover,  the generat ion of large numbers of  rulesseems psycholog ica l ly  implaus ib le .
Thus the two c r i te r ia  wewi l l  use to judge the e f f i cacy  of metarules wi l l  be: can theyadequate ly  capture l inguist ic  genera l i zat ions ,  and are they?omputat iona l ly  p rac t i cab le  in terms of the number of rulesthey generate.
The formal ism of \ [4 \ ]  is especial ly vu lnerableto c r i t i c i sm on the la t te r  point,  since it  generates largenumbers of new rules.
*==3.
Representat ionAn annotated phrase-structure grammar (APSG) asdeveloped in \ [7 \ ]  is the target  representat ion  for  themetaru les .
The core component of an APSG is a set ofcontext-free phrase-s t ruc ture  rules.
As is customary,  theserules are input to a context - f ree  parser to analyze a str ing,produc ing a phrase-s t ruc ture  tree as output .
In addi t ion,  theparse tree so produced may have arb i t ra ry  feature  sets, cal ledannotat ions,  appended to each node.
The annotat ions are ane f f i c ient  means of  incorporat ing  addit ional  in fo rmat ion  into theparse t ree.
Typ ica l ly ,  features  wi l l  exist  for  syntact icprocessing (e.g., number agreement), grammat ica l  funct ion  ofconst i tuents  (e.g., subject,  d i rect  and ind i rec t  objects) ,  andsemantic in terpreta t ion .Associated wi th  each rule of the grammar are proceduresfor  operat ing  on feature  sets of the phrase markers the ruleconstructs .
These procedures may constrain the appl icat ion  ofthe rule by test ing features  on candidate const i tuents ,  or addin fo rmat ion  to the s t ructure  created by the rule,  based on thefeatures  of  its const i tuents .
Rule procedures are wr i t ten  inthe programming language LISP, g iv ing the grammar the powerto recognize class 0 languages.
The use of a rb i t ra ryprocedures and feature  set annotat ions makes APSGs an*There  has been some success in res t r i c t ing  the power oft rans format iona l  grammars su f f i c ient ly  to al low a recognizer tobe bui l t ;  see \ [8 \ ] .=*Shel l  \ [10 \ ]  has shown that,  for  a simple recursive descentparsing a lgor i thm,  running time is a l inear  funct ion  of thenumber of  rules.
For other parsing schemes, the re lat ionsh ipbetween the number of rules and parsing t ime is unc lear .='~SThis is w i thout  consider ing in f in i te  schemas such as theone for  con iunct ion  reduct ion .
Basical ly,  the problem is thatthe formal ism of \ [4 \ ]  al lows complex features \[21 to def inenew categor ies,  generat ing an exponential number of categor ies(and hence rules) w i th  respect to the number of features .4.3extremely  power fu l  and compact fo r -a l i sm for represent ing alanguage, s imi lar  to the ear l ier  ATN formal isms \ [1 \ ] .
Anexample of how an APSG can encode a large subset of Englishis the DIAGRAM grammar \ [9 \ ] .It is un for tunate ly  the very power .of APSGs (and ATNs)that  makes it  d i f f i cu l t  to capture l inguist ic  general izat ionswi th in  these formal isms.
Metarules for t ransforming oneannotated phrase-st ructure  rule into another must not onlyt ransform the phrase-s t ructure ,  but also the procedures thatoperate on feature sets, in an appropr iate way.
Because thet rans format ion  of  procedures is notor ious ly  d i f f i cu l t , *  one ofthe tasks of this paper wi l l  be to i l lus t rate  a dec larat ivenotat ion describing operations on feature sets that is powerfu lenough to encode the manipulat ions of features necessary forthe grammar, but is st i l l  simple enough for  metarulos tot ransform.4.
Notat ionEvery rule of  the APSG has three parts:1.
A phrase-s t ructure  rule;2.
A res t r i c t ion  set (RSET) that restr icts  theapp l i cab i l i ty  of  the rule, and3.
An assignment set (ASET) that assigns values tofeatures.The RSET and ASET manipulate features of the phrase markeranalyzed by the rule; they are discussed below in detai l .Phrase-s t ructure  rules are wr i t ten  as:CAT -> C 1 C 2 ... Cnwhere CAT is the dominat ing category of the phrase, and C 1through C n are its immediate const i tuent  categor ies.
Terminalstr ings can be included in the rule by enclosing them in doublequote marks.A feature set is associated with each node in the parse t reethat  is created when z str ing is analyzed by the grammar.Each feature  has a name (a str ing of uppercase alphanumericcharacters)  and an associated value.
The values a feature  cantake on (the domain of the feature)  are, in general,  a rb i t ra ry .One of  the most useful domains is the set "?, - ,N IL" ,  whereN i l  is the unmarked case; this domain corresponds ~ to thebinary features  used in \ [2 ) .
More compl icated domains can beused; for  example, a CASE feature  might have as its domain theset of tuplos ~<1 SG>,<2 SG>,c3 SG>,<I PL>,<2 PL>,<3 PL>'~.Most interest ing are those features whose domain is a phrasemarker .
Since phrase markers are just data structures that theparser creates, they can be assigned as the value of a feature .This technique is used to pass phrase markers to various partsof the tree to re f lec t  the gr;llmmatical and semantic s t ructureof  the input; examples wi l l  be given in later sections.We adopt the fo l low ing  conventions in re fe r r ing  to featuresand their  values:- Features are one-p lace funct ions that range overphrase markers constructed by the phrase-s t ructurepart  of a grammar rule.
The funct ion  is named bythe feature name.- These funct ions are represented in pre f ix  form, e.g.,(CASE NP) refers to the CASE feature of the NPconst i tuent  of a phrase marker .
In cases wherethere is more than one const i tuent  wi th the samecategory name, they wi l l  be d i f fe rent ia ted  by a "~/"su f f i x ,  for  example,VP -> V NP?I NP~2* i t  is sometimes hard to even understand what i t  is that aprocedure does, since it may involve recursion, s ide-e f fects ,and other compl icat ions.has two NP const i tuents.-A  phrase marker is assumed to have its immediateconst i tuents  as features under their  category name,e .
| .
,  (N NP) refers to the N const i tuent  of the NP.- Feature funct ions may be nested, e.g.,(CASE (N NP)) refers tO the CASE feature of  the Nconst i tuent  of  the NP phrase marker .
For thesenestings, we adopt the simpler notat ion(CASE N NP), which is assumed to ber ight -assoc ia t ive .-The  value N IL  always implies the unmarked case.At times it wi l l  be useful to consider features thatare not exp l i c i t l y  attached to a phrase marker asbeing present wi th value NIL .-A  constant term wi l l  be wr i t ten  with a precedingsingle quote mark, e.s.
, tSG refers to the constanttoken SG.4.1.
Restr ict ionsThe RSET of a rule restr ic ts  the app l i cab i l i ty  of the rule bya predicat ion on the features of its const i tuents .
The phrasemarkers used as const i tuents must sat is fy the predicat ions inthe RSET before they wi l l  he analyzed by the rule to create anew phrase marker .
The most useful predicate is equal i ty :  afeature  can take on only one par t i cu la r  value to be acceptable.For example, in the phrase structure rule:S -> NP VPnumber agreement could be enforced by the pred icat ion :(NBR NP) - {NBR VP)where NBR is a feature whose domain is SG,PL~.
*  This wouldres t r i c t  the NBR feature on NP to agree with that  on VPbefore the S phrase was constructed.
The economy of  theAPSG encoding is seen here: only a single phrase-s t ruc ture  ru leis required.
Also, the l inguist ic  requ i rement  that  subjects andtheir  verbs agree in number is enforced by a single statement ,rather  than being impl ic i t  in separate phrase structure rules,one for  singular sub ject -verb  combinations,  another for  plurals.Besides equal i ty ,  there are only three addit ionalpred icat ions:  inequal i ty  (#), set membership (e) and setnon-membership  (It).
The last two  are useful in deal ing withnon-b inary  domains.
As discussed in the next section, t ightrest r ic t ions  on predicat ions are necessary i f  metarules are tobe successful in t ransforming grammar rules.
Whether thesefour predicates are adequate in descr ipt ive power for  thegrammar we contemplate  remains an open empir ica l  question;we are cur rent ly  accumulat ing evidence for  their  su f f i c iency  byrewr i t ing  DIAGRAM using just those predicates.Rest r ic t ion  predicat ions for  a rule are co l lected in theRSET of  that  rule.
All  restr ic t ions must hold for the rule tobe appl icable.
As an i l lust rat ion ,  consider thesubcategor izat lon  rule for  d l t rans i t lve  verbs wi th  preposi t ionalobjects (e.g.. eJohn gave a book to Mary" ) :VP -> V NP PPRSET: (TRANS V) = ~DI;(PREP V)  : (PREP PP)The f i rs t  res t r i c t ion  selects only verbs that are marked asd l t rans i t ive ;  the TRANS feature comes f rom the lexical  entryof  the verb.
D l t rans i t i v  verbs wi th prepos i t ional  argumentsare always subcategor ized cy the par t i cu lar  preposit ion used,e.g., "give a always uses I re"  for  its preposit ional  argument.
*How NP and VP categories could " inher i t "  the NBR featuref rom the i r  N and V const i tuents is discussed in the nextsection.44The second pred icat ion  res t r i c ts  the prepos i t ion of  the PP for  agiven verb.
The PREP feature  of  the verb comes f rom itslex ica l  entry,  and must match the prepos i t ion of  the PP phrase*4.2.
AssignmentsA rule wi l l  normal ly  assign features  to the dominat ing  nodeo f  the phrase marker it constructs ,  based on the values of  theconst i tuents  f features .
For example,  feature  inher i tance  takesplace in this way.
Assume there is a feature  NBR mark ing thesyntact ic  number of nouns.
Then the ASET of  a rule for  nounphrases might be:NP -> DET NASET:  (NBR NP) := (NBR N)This notat ion  is somewhat non-s tandard;  i t  says that  the valueof  the NBR funct ion  on the NP phrase marker is to be thevalue of  the NBR funct ion  of  the N phrase marker .An in terest ing  appl icat ion  of  feature  assignment is todescr ibe the grammat ica l  funct ions of noun phrases w i th in  aclause.
Recal l  that  the domain of  features  can be const i tuentsthemselves.
Adding an ASET descr ib ing the grammat ica lfunct ion  of  its const i tuents  to the d i t rans i t i ve  VP rule yieldsthe fo l low ing :VP -> V NP PPASET: (D IROBJ  VP) := (NP VP);( INDOBJ  VP) := (NP PP).This ASET assigns the DIROBJ (d i rec t  ob ject )  feature  of  VPthe value of the const i tuent  NP.
Slmilarly~ the value ofINDOBJ ( ind i rec t  ob ject )  is the NP const i tuent  of  the PPphrase.A rule may also assign feature  values to the const i tuents  ofthe phrase marker i t  constructs .
Such assignments are contextsensitive, because the values are based on the context  in whichthe const i tuent  Occurs.
*"  Again,  the most in teres t ing  use ofthis technique is in assigning funct iona l  roles to const i tuents  inpar t i cu la r  phrases.
Consider a rule for  main clauses:S -> NP VPASET: (SUBJ VP) := (NP S),The three features  SUBJ, DIROBJ ,  and INDOBJ of  the VPphrase marker  wi l l  have as value the appropr iate  NP phrasemarkers,  since the DIROBJ and INDOBJ features  wi l l  beassigned to the VP phrase marker when it  is const ructed .
Thusthe grammat ica l  funct ion  of  the NPs has been ident i f ied  byassigning features  appropr ia te ly .F ina l ly ,  note that  the grammat ica l  Functions were assignedto the VP phrase marker .
By assembling all o f  the argumentsat this level ,  i t  is possible to account  for  bounded de let ionphenomenon that  are lex ica l ly  cont ro l led .
Considersubcategor i za t ion  for  Equi verbs, in which the subject of  themain clause has been deleted f rom the in f in i t i ve  complement(" John wants to gem):=Note that  we are not consider ing here prepos i t iona l  phrasesthat  are essent ia l ly  mesa-arguments  to the verb, deal ing wi tht ime, place, and the l ike.
The preposi t ions used formesa-arguments  are much more var iab le ,  and usual ly depend onsemantic considerations.
"*The  assignment of features to const i tuents  presents somecomputat iona l  problems, since a context - f ree  parser wi l l  nolonger be su f f i c ient  to analyze str ings.
This was recognized inthe or ig inal  version of  APSGs \ [7 \ ] ,  and a two-pass parser wasconstructed that f i r s t  uses the context - f ree  component of  thegrammar to produce an in i t ia l  parse tree, then adds theassignment of features  in context .VP -> V INFASET:  (SUBJ INF)  := (SUBJ 'VP)Here the subject NP of the main clause has been passed downto the VP (by the S ru le) ,  which in turn passes i t  to thein f in i t i ve  as its subject .
Not  all l inguist ic  phenomenon can befo rmulated  so easi ly w i th  APSGs; in par t i cu la r ,  APSGs havet rouble  descr ib ing unbounded de let ion and con junct ionreduct ion .
Metaru le  fo rmulat ions  for the l a t te r  phenomenahave been proposed in \ [5 \ ] ,  and we wi l l  not deal w i th  themhere.5.
Metaru les  for  APSGsMetaru les  consist of  two  parts:  a match template  wi thvar iables  whose purpose is to match ex ist ing grammar rules;and an ins tant ia t lon  template  that  produces a new grammarrule by using the match template~s var iab le  bindings a f te r  asuccessful  match.
In i t ia l l y ,  a basic set of  grammar rules isinput;  metarules der ive new rules, which then can recursivelybe used as input to the metaru les .
When ( i f )  the process halts,the new set of rules, together  with the basic rules, comprisesthe grammar.We wi l l  use the fo l low ing  notat ion  for  metaru les :MF => IFCSET: C1, C2, .
.
Cnwhere MF is a _matchln| form, IF is an ins tant ia t ion  form, andCSET is a set of pred icat ions .
Both the MF and IF have thesame fo rm as grammar rules, but in addi t ion,  they can conta invar iab les .
When an MF is matched against a grammar rule,these var iables are bound to d i f fe rent  parts of the rule i f  thematch succeeds.
The IF is ins tant la ted  wi th  these bindings toproduce a new ru le .
To res t r i c t  the app l icat ion  of  metarules,addi t iona l  condit ions on the var iab le  bindings may be speci f ied(CSET);  these have the same form as the RSET of  grammarrules,  hut they can ment ion the var iables matched by the MF.Metaru les  may be c lassi f ied into three types:I .
In t roductory  metarules,  where the MF is empty(=> IF) .
These metarules in t roduce  a class ofgrammar rules.2.
De let ion metarules,  where the IF is empty(MF =>).
These delete any der ived grammar rulesthat  they match.3.
Der ivat ion  metarules,  where both MF and IF arepresent .
These der ive new grammar rules from oldones.There are l ingu is t ic  genera l i zat ions  that  can he captured mostperspicuously  by each of  the three forms.
We wi l l  focus onder ivat ion  metarules here, since they are the most compl icated .6.
MatchingAn impor tant  part  of  the der ivat ion  process is the de f in i t iono f  a match between a metaru le  matching form and a grammarru le .
The matching problem is compl icated by the presence ofRSET and ASET pred icat ions  in the grammar rules.
Thus, i t  ishe lp fu l  to def ine a match in terms of the phrase markers thatwi l l  be admit ted  by the grammar rule and the MF.
We wi l l  saythat  an MF matches a grammar rule just  in case i t  admits atleast those phrase markers admit ted  by the grammar ru le.
Thisde f in i t ion  of  a match is su f f i c ient  to a l low the fo rmula t ion  ofmatch ing a lgor i thms for  grammar rules compl icated byannotat ions.We div ide the matching process into two parts:  match ingphrase-s t ruc tures ,  and matching feature  sets.
Both parts mustsucceed in order  for  the match to succeed.456.1.
Matching Phrase-st ructuresFor phrase-structures,  the de f in i t ion  of  i match can bereplaced by a d i rect  comparison of  the phrase-s t ructures  of theMF and grammar rule.
Var iables in the MF phrase-s t ructureare used to indicate Ido f l l t  care a parts of the grammar rulephrase-s t ructure ,  while constants must match exact ly .
S In| lelower  case letters are used for  variables that  must matchsingle categories of the grammar rule.
A typ ica l  MF might be:S ->.a  VPwhich matchesS -> NP VP with a=NP;S -> SB VP with IBSB;S -> ' IT '  VP with a J ' I T ' ;etC.A var iable that appears more than once in an MF must have thesame binding for  each occurrence for a match to be successful,e.$.,VP -> V a amatchesVP -> V NP NP wi th  a=NPbut  notVP -> V NP PPSingle le t ter  variables must match a single category in agrammar rule.
Double le t ter  var iables are used to match anumber of consecut ive Cat l lo r i l s  ( inc luding none) fR the rule.We have:VP -> V uumatchingVP -> V with UUm();VP -> V NP with uu"(NP) ;VP -> V NP PP wi th  uuu(NP PP);etc.Note that double le t ter  var iables are bound to an ordered listo f  elements fTom ~he matched rule.
Because of thischaracter i s t i c ,  a~ MF with more th in  one double le t ter  var iablemay match t rule in several d i f fe rent  ways:VP -> V uu vvmatchesVP -> V NP PP wi th  uu ' ( ) ,  vvs (NP Pp);uu=(N P), vvm(PP );uum(NP VP),  vv - ( ) .Al l  of these are considered to be val id,  independent matches.Double and single le t ter  variables may be in termixed f ree ly  inan MF.While double le t ter  variables match mult ip le  categories In lphrase structure rule,  str ing variables match parts of  acategory.
Str ing variables occur in both double and singlele t te r  var iet ies;  as expected,  the former  match any number ofconsecut ive characters,  whi le the l i t te r  match s ln| lecharacters .
Str ing variables are assumed when an MF categorycontains i mixture  of  upper and lower case characters,  e.g.
:Vt -> V NP~la NPuumatchesVP -> V NP~I NP with a=1, uu=();VP -> V NP/~I NP~2 with aa l ,  uu=(# 2);etc.Str ing var iables are most useful for  matching category namesthat  may use the ~ convent ion.6.2.
Feature MatchingSo far  var iables have matched only the phrase-s t ructurepart  of  grammar rules, and not the feature  annotat ions.
Forfeature  matching,  we must return  to the or iginal  de f in i t ion  ofmatching based on the admiss ib i l i ty  of  phrase markers.
TheRSET of  a grammar rule is a closed formula  invo lv lng thefeature  sees of the phrase marker constructed by the rule; letP stand for  this fo rmula .
I f  P is true for  a given phrasemarker ,  then that  phrase marker is accepted by the rule; i fnot,  It ts re jected.
S imi lar ly ,  the RSET of  a matching form isan open formula on the feature  sets of the phrase marker;  letR (x l ,x2 .
.
.Xn)  stand for  this formula,  where the x I are thevar iables of the RSET.
For the MF;s rest r ic t ions  to matchthose of the grammar rule,  we must be able to prove theformula :P => tea 1) (EX2)_ .
(EXn)  R(x l ,x2 , - .Xn)That  Is.
whenever  P admits a phrase marker,  there exists someb lnd in |  for  R0s free variables that  also admits the phrasemarker .Now the importance of res t r i c t ing  the form of P and R canbe seen.
Proving that the above impl icat ion  holds for general Pand R can be a hard problem, requi r ing,  for  example,  areso lut ion theorem prover .
By res t r i c t ing  P and R to simpleconjunct ions of  equal i t ies,  inequal i t ies,  and set membershippredicates,  the match between P and R can be per formed by asimple and e f f i c ient  a lgor i thm.6.3.
Instanttat ionWhen a matarule matches a grammar rule,  the CSET of themetaru ia  Is evaluated to see i f  the metaruie can indeed beappl ied.
For example, the MF:VP -> "BE"  xPCSET: x ~t 'Vwi l l  match any rule for  which x is not bound to V.When an MF matches a rule, and the CSET is sat is f ied,  theInstant lat lon  form of the metaru le  is used to produce i newru le.
TN~ variables of  the IF are instant iated with their  valuesf rom the match, producing I new rule.
In addit ion,  res t r i c t ionand assignment features that  do not conf l i c t  w i th  the IF 'sfeatures  are carr ied over f rom the rule that matched.
Thisla t te r  is a very handy property  of the instanttat ion,  since thatis usually what the metarule wr i te r  desires.
Considermetaru le  that derives the sub ject -aux  inverted form of a mainclause wi th  a f in i te  verb phrase:grammar rule:  S -> NP AUX VPRSET: (NBR NP) = (NBR AUX) ;(F IN  VP) = i+;metaru le :  S -> NP AUX VPS~N>-> AUX NP VPi f  features were not carr ied over during an ins tan .
ia t ion ,  theresult  of  matching and Instant lat ing the metarule would be:SAI -> AUX NP VPThis does not preserve number agreement,  nor does it  res t r i c tthe VP to being f in i te .
Of course, the metarule could berewr i t ten  to have the cor rect  rest r ic t ions  in the IF, but thiswould sharply curb the u t i l i ty  of the metarules,  and lead to thepro l i fe ra t ion  of metaruies wi th s l ight ly d i f fe rent  RSETs.467.
An Example: Dative Movement and PassiveWe are now ready to give a short example of two met,rulesfor dative movement and passive transformations.
Thepredicate/argument structure will be described by the featurePA, whose value is a list:(V NP 1 Np 2 ...)where V is the predicating verb, and the NPs are itsarguments.
The order of the arguments is significant, since:("gave" "John" "a book" "Mary")<=> gift of a book by John to Mary'gave" "John' "Mary m "a book')<=> ??
gift  of Mary to a hook by JohnAdding the PA feature, the rule for ditranslt lve verbs withprepositional objects becomes:VP -> V NP PPRSET: (TRANS V) = IDI;(PREP V) = (PREP PP);ASET: (PA VP) := ' ((V VP) (SUBJ VP)(NP VP)(NP PP))The SUBJ feature is the subject NP passed down by the S rule.7.1.
Dative MovementIn dative movement, the prepositional NP becomes a nounphrase next to the verb:1.
John gave a book to Mary =>2.
John gave Mary a bookThe f irst object NP of (2) f i l ls the same argument role as theprepositional NP of (1).
Thus the dative movement met,rulecan be formulated as fol lows:met.rule DATMOVEVP -> V uu PPASET: (PA VP) := '( a b c (NP PP))=> VP -> V NP#D uuRSET: (DATIVE V) = t+;(PREP V) : NIL;ASET: (PA VP) := ' (ab  c (NP#D VP))DATMOVE accepts VPs with a trail ing prepositional argument,and moves the NP from that argument to just after the verb.The verb must be marked as accepting dative arguments, hencethe DATIVE feature restr ict ion in the RSET of theinstantlation form.
Also, since there is no longer aprepositional argument, the PREP feature of the VP doesn'thave to match it.
As for the predicate/argument structure, theNP#D constituent takes the place of the prepositional NP inthe PA feature.DATMOVE can be applied to the dltranslt lve VP rule toyield the dltransitive dative construction.
The variablebindings are:uu = (NP);a : (v vP)b : (SUBJ vp);c : (NP VP}.Instantlating the IF then gives the dative construction:VP -> V NP#D NPRSET: (DATMOVE V) = r+;(TRANS V) = 'DisASET: (PA VP) :=' ( (  V VP) (SUBJ VP) (NP VP) (Np~ID VP))There are other grammar rules that dative movement wil l  apply47to, for example, verbs with separable particles:Make up a story for me => Make me up a story.This is the reason the double- letter variable "uu'  was used inDATMOVE.
As long as the final constituent of a VP rule is aPP, DATMOVE can apply to yield a dative construction.7.2.
PassiveIn the passive transformation, the NP immediately fol lowingthe verb is moved to subject position; the original subjectmoves to an age.r ive BY-phrase:(1) John gave a book to Mary =>(2) A book was given to Mary by John.A metarule for the passive transformation is:met.rule PASSIVEVP -> V NPuu vvASET: (PA VP) : :  ~(a (SUBJ VP) bb (NPuu VP) cc);=> AP -> V PPL vv PP#ARSET: (PREP PP#A) = ~BY;ASET: (PA VP) : :  '(a (NP PP#A) bb (SUBJ VP) cc).PASSIVE deletes the NP immediately fol lowing the verb, andadds a BY-prepositional phrase at the end.
PPL is a pastparticiple suff ix for the verb.
In the predicate/argum=ntstructure, the BY-phrase NP substitutes for the originalsubject, while the new subject is used in place of the originalobject NP.
Applying PASSIVE to the ditransittve rule yields:AP -> V PPL PP PP#ARSET: (TRANS V) = 'DIs(PREP V) = (PREP PP);ASET: (PA VP) :=' ( (V  VP) (NP PP#A) (SUBJ VP) (NP PP));e.g.. "A book was given to Mary by John" wil l  be analyzed bythis rule to have a PA feature of ("givea mJohn~ nabook" "Mary") ,  which is the same predicate/argument structureas the corresponding active sentence.PASSIVE can also apply to the rule generated by DATMOVEto yield the passive form of VpIs with dative objects:AP -> V PPL NP PP#ARSET: (DATMOVE V) = f+;(TRANS V) = 'DIsASET: (PA VP) :=' ( (V  VP) (NP PP#A) {NP VP) (SUBJ VP));e.g., "Mary was given a book by John".8.
ImplementationA system has been designed and implemented to test theval idity of this approach.
It consists of a matcher/ instant iatorfor  met,rules, along with an iteration loop that applies all themet.rules on each cycle until no more new rules are generated.Met.rules fur verb subcategorization and finite and non-f initeclause structures have been written and input to the system.We were especially concerned:- To check the perspicuity of metarules for describingsignif icant fragments of English using the aboverepresentation for grammar rules.- To check that a reasonably small number of newgrammar rules were generated by the metarules forthese fragments.Both of these considerations are cr it ical  for the performanceof natural language processing systems.
Preliminary testsindicate that the system satisfies both these concerns; indeed,the metarules worked so well that they exposed gaps in aphrase-structure grammar that was painstakingly developedover a f ive year period and was thought to be reasonablycomplete for a large subset of English 19\].
The number ofderived rules generated was encouragingly small:Subcategorizatlon:1 grammar rule7 metaru les  -> 20 derived rulesClauses:8 grammar rules5 metarules => 25 derived rules9.
ConclusionsMetarules, when adapted to work on an APSGrepresentation, are a very powerful tool for specifyinggeneralizations in the grammar.
A great deal of care must beexercised in  writing metarutes, because it is easy to stategeneralizations that do not actually hold.
Also, the output ofmetarutes can be used again aS input to the metarules, and thisoften produces surprising results.
Of course, language iscomplex, and it is to be expected that describing Itsgeneralizations wil l  also be a di f f icult  task.The success of the metarule formulation in deriving a smallnumber of new rules comes in part from the Increaseddefinitional power of APSGs over ordinary PSGs.
For example,number agreement and feature inheritance can be expressedsimply by appropriate annotations in an APSG, but requiremetarules on PSGs.
The definitional compactness of APSGsmeans that fewer metarules are needed, and hence fewerderived rules are generated.3.4.5.6.7.8,9.10.REFERENCESW.
Woods, 'An Experimental Parsing System for TransitionNetwork Grammars, ~ R. Rustin (ed.
), Natural Lan~uaseProcessins, Prentice-Hall,  Englewood Cliffs, New Jersey,1973.N.
Chomsky.
Aspects o f  the Theory o f  5.,yntax, MIT Press,Cambridge, Mass., 1965.J.
Early, "An Eff ic ient Context Free Parsing Algorithm,"CAC_M, Vol.
13 (1970) 94-I02.Gerald Gazdar, 'English as a Context-Free Language"University of Sussex, (unpublished paper, April, 1979).Gerald Gazdar, "Unbounded Dependencies and CoordinateStructure'  University of Sussex, (submitted toInquiry, October, 1979).Kurt Konollge, 'A Framework for a Portable NL Interfaceto Large Data Bases, m Technical Note 197, Art i f ic ia lIntelligence Center, SRI International, Menlo Park,California (October 1979).William H. Paxton, 'A Framework for SpeechUnderstanding,' Technical Note 142, Art i f ic ia l  IntelligenceCenter, $RI international, Menlo Park, California (June1977}.S.R.
Petrtck, 'Automatic Syntactic and SemanticAnalysis, e Proceedln|s of the Interdisciplinary Conferenceon Automated Text Processing, {November 1976).Jane Robinson, 'DIAGRAM: A Grammar for Dialogues.
'Technical Note 20$, Art i f ic ia l  Intelligence Center, SRIInternational, Menlo Park, California {February 1980).B.A.
Shell, 'Observations on Context-Free Parsing,'Statistical Methods in Linl|uistics, (1976).48
