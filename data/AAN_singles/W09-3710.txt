Proceedings of the 8th International Conference on Computational Semantics, pages 90?103,Tilburg, January 2009. c?2009 International Conference on Computational SemanticsInference Rules for Recognizing Textual EntailmentGeorgiana DinuSaarland Universitydinu@coli.uni-sb.deRui WangSaarland Universityrwang@coli.uni-sb.deAbstractIn this paper, we explore the application of inference rules for rec-ognizing textual entailment (RTE).
We start with an automaticallyacquired collection and then propose methods to refine it and obtainmore rules using a hand-crafted lexical resource.
Following this, wederive a dependency-based representation from texts, which aims toprovide a proper base for the inference rule application.
The evalu-ation of our approach on the RTE data shows promising results onprecision and the error analysis suggests future improvements.1 IntroductionTextual inference plays an important role in many natural language pro-cessing (NLP) tasks, such as question answering [7].
In recent years, therecognizing textual entailment (RTE) [4] challenge, which focuses on de-tecting semantic inference, has attracted a lot of attention.
Given a text T(several sentences) and a hypothesis H (one sentence), the goal is to detectif H can be inferred from T.Studies such as [3] attest that lexical substitution (e.g.
synonyms, anto-nyms) or simple syntactic variation accounts for the entailment only in asmall number of pairs.
Thus, one essential issue is to identify more complexexpressions which, in appropriate contexts, convey the same (or similar)meaning.
More generally, we are also interested in pairs of expressions inwhich only a uni-directional inference relation holds1.A typical example is the following RTE pair in which accelerate to in His used as an alternative formulation for reach speed of in T.1We will use the term inference rule to stand for such concept; the two expressions canbe actual paraphrases if the relation is bi-directional90T: The high-speed train, scheduled for a trial run on Tuesday, is able to reacha maximum speed of up to 430 kilometers per hour, or 119 meters per second.H: The train accelerates to 430 kilometers per hour.One way to deal with textual inference is through rule representation,such as X wrote Y ?
X is author of Y.
However, manually building col-lections of inference rules is time-consuming and it is unlikely that humanscan exhaustively enumerate all the rules encoding the knowledge needed inreasoning with natural languages.
Instead, an alternative is to acquire theserules automatically from large corpora.
Furthermore, given such a rule col-lection, how to successfully use it in NLP applications is the next step to befocused on.For the first aspect, we extend and refine an existing collection of infer-ence rules acquired based on the Distributional Hypothesis (DH).
One of themain advantages of using DH is that the only input needed is a large corpusof (parsed) text2.
For this purpose, a hand-crafted lexical resource is usedfor augmenting the original inference rule collection and excluding some ofthe incorrect rules.For the second aspect, we focus on applying these rules to the RTE task.In particular, we use a structure representation derived from the dependencyparse trees of T and H, which aims to capture the essential information theyconvey.The rest of the paper is organized as follows: Section 2 introduces theinference rule collection we use, based on the Discovery of Inference Rulesfrom Text (henceforth DIRT) algorithm; we also discuss previous work onapplying it to the RTE task.
Section 3 presents our analyses on the RTEdata and discusses two issues: the lack of rules and the difficulty of findingproper ways of applying them.
Section 4 proposes methods to extend andrefine the rule collection aiming at the former issue.
To address the latterissue, Section 5 describes the structure representation we use to identify theappropriate context for the rule application.
The experiments will be pre-sented in Section 6, followed by an error analysis and discussions in Section7.
Finally, Section 8 will conclude the paper and point out some futurework.2Another line of work on acquiring paraphrases uses comparable corpora, for instance[2], [12]912 BackgroundA number of automatically acquired inference rule/paraphrase collectionsare available, such as [14].
In our work we use the DIRT collection becauseit is the largest one and it has a relatively good accuracy (in the 50% range,[13]).
In this section, we describe the DIRT algorithm for acquiring inferencerules.
Following that, we will overview the RTE systems which take DIRTas an external knowledge resource.2.1 Discovery of Inference Rules from TextThe DIRT algorithm has been introduced by [10] and it is based on whatis called the Extended Distributional Hypothesis.
The original DH statesthat words occurring in similar contexts have similar meaning, whereas theextended version hypothesizes that phrases occurring in similar contexts aresimilar.An inference rule in DIRT is a pair of binary relations ?
pattern1(X,Y ),pattern2(X,Y ) ?
which stand in an inference relation.
pattern1and pattern2are chains in Minipar [9] dependency trees while X and Y are placeholders fornouns at the end of the chains.
The two patterns will constitute a candidateparaphrase if the sets of X and Y values exhibit relevant overlap.
An exampleis the pair (Xsubj???
preventobj???
Y, Xsubj???
provideobj???
protectionmod???againstpcomp?????
Y).Such rules can be defined [13] as directional relations between two textpatterns with variables.
The left-hand-side pattern is assumed to entailthe right-hand-side pattern in certain contexts, under the same variableinstantiation.
The definition relaxes the intuition of inference, as we onlyrequire the entailment to hold in some but not all contexts, motivated bythe fact that such inferences occur often in natural text.2.2 Related WorkIntuitively such inference rules should be effective for recognizing textualentailment.
However, only a small number of systems have used DIRT asa resource in the RTE-3 challenge, and the experimental results have notshown its great contribution.In [3]?s approach, semantic parsing in clause representation is performedand true entailment is decided only if every clause in the semantic repre-sentation of T semantically matches some clause in H. The only variationallowed consists of rewritings derived from WordNet and DIRT.
Given the92preliminary stage of this system, the overall results show very low improve-ment over a random classification baseline.
[1] implement a proof system using rules for generic linguistic structures,lexical-based rules, and lexical-syntactic rules (which were obtained with theDIRT algorithm applied to the first CD of the Reuters RCV1 corpus).
Givena premise p and a hypothesis h, the lexical-syntactic component marks alllexical noun alignments.
For every pair of alignments, the paths betweenthe two nouns are extracted, and the DIRT algorithm is applied to obtaina similarity score.
If the score is above a threshold, the rule will be ap-plied.
However, these lexical-syntactic rules are only used in about 3% ofthe attempted proofs and for most cases there is no lexical variation.
[8] use DIRT in a more relaxed manner.
A DIRT rule is employed in thesystem if at least one of the anchors match in T and H, i.e.
they use themas unary rules.
However, the analysis of the system shows that the DIRTcomponent is the least relevant one (adding 0.4% to the precision).In [11]?s system, a paraphrase substitution step is added on top of a sys-tem based on a tree alignment algorithm.
The basic paraphrase substitutionmethod follows several steps.
Initially, the two patterns of a rule are matchedin T and H (instantiations of the anchors X, Y do not have to match).
TheT tree is transformed by applying the paraphrase substitution.
Followingthat, the transformed T tree and H tree are aligned.
The coverage (pro-portion of aligned content words) is computed and if above some threshold,the entailment holds.
The paraphrase component adds 1.0% to the resulton the development set and only 0.5% to the test set, but a more detailedanalysis on the interaction of this component with other components of thesystem is not given.3 Inference Rules for RTEIn this section our goal is to investigate the causes for which a resourcesuch as DIRT fails to bring clear improvements to RTE.
The issues we haveencountered can be divided into two categories.
Firstly, given a collectionof correct inference rules, making full use of the knowledge encoded in it isnot a trivial task.
Secondly, some of the needed rules still lack even in avery large collection such as DIRT.
Section 4 will tackle the latter issue firstwhile Section 5 will focus on the former one.933.1 DIRT Rules Found in the RTE DataTo Address this first issue, we begin with a straightforward experiment todiscover the number of pairs in the RTE data which contain rules presentin DIRT3.Following the definition of an entailment rule, we identify RTE pairs inwhich pattern1(w1, w2) and pattern2(w1, w2) are matched, one in T andthe other one in H, and thus, ?pattern1(X,Y ), pattern2(X,Y )?
is an infer-ence rule.
The pair below is an example of this.T: The sale was made to pay Yukos US$ 27.5 billion tax bill, Yuganskneftegazwas originally sold for US$ 9.4 billion to a little known company Baikalfinans-group which was later bought by the Russian state-owned oil company Rosneft.H: Baikalfinansgroup was sold to Rosneft.On average, only 2% of the pairs in the RTE data are subject to suchinference rules.
Out of these, approximately 50% are lexical rules (one verbentailing the other) and in the rest, around 50% are present in WordNet asa synonym, hypernym or sister relation.However, given the small number of inference rules identified this way,we performed another analysis.
This aims at determining an upper boundof the number of pairs featuring entailment phrases present in a collection.Given DIRT and the RTE data, we compute that in how many pairs twopatterns of a paraphrase can be matched irrespectively of their anchor val-ues.
An example is the following pair,T: Libyas case against Britain and the US concerns the dispute over theirdemand for extradition of Libyans charged with blowing up a Pan Am jet overLockerbie in 1988.H: One case involved the extradition of Libyan suspects in the Pan Am Locker-bie bombing.This is a case in which the rule is correct and the entailment is positive.In order to determine this, a system will have to know that Libya?s caseagainst Britain and the US in T entails one case in H. Similarly, in thiscontext, the dispute over their demand for extradition of Libyans chargedwith blowing up a Pan Am jet over Lockerbie can be replaced with theextradition of Libyan suspects in the Pan Am Lockerbie bombing.
Altogether3For all the experiments in this paper, we use the DIRT collection provided by [10],derived from the DIRT algorithm applied on 1GB of newstext.94X, founded in Y ?
X, opened in YX launch Y ?
X produce YX represent Z ?
X work for YX faces menace from Y ?
X endangered by YX, peace agreement for Y ?
X is formulated to end war in YTable 1: Example of inference rules needed in RTEin around 25% of the pairs, patterns of a rule can be found in this way, andmany times more than one rule in a pair.
However, in many of these pairs,finding out the patterns of an inference rule does not imply that the rule istruly present in that pair.Making use of the knowledge encoded with such rules is therefore, nota trivial task.
If rules are used strictly in concordance with their definition,their utility is limited to a very small number of pairs.
For this reason, 1)instead of forcing the anchor values to be identical as most previous works,we allow flexible rule matching (similar to [11]) and 2) furthermore, wecontrol the rule application process using a structure representation derivedfrom the dependency tree (Section 5).3.2 Missing RulesApart from the issues underlined in the previous section, looking at thedata, we find it quite clear that DIRT lacks rules that many entailmentpairs require.Table 1 gives a selection of rules that are needed in some entailment pairs.The first three rows contain rules which are not structurally complex.
These,however, are missing from both DIRT and also other hand-crafted resourcessuch as WordNet (i.e.
there is no short path connecting them).
This isto be expected as they are rules which hold in some specific contexts, butdifficult to be captured by a sense distinction of the lexical items involved.The more complex rules are even more difficult to be captured by a DIRT-like algorithm.
Some of these do not occur frequently enough even in largeamounts of text to permit the acquirement of them via DH.4 Extending and Refining DIRTIn order to address the issue of missing rules, we investigate the effects ofcombining DIRT with an exact hand-coded lexical resource in order to createnew rules.95X face threat of Y X at risk of Yface ?
confront, front, look, face up risk ?
danger, hazard, jeopardythreat ?
menace, terror, scourgeendangerment, perilTable 2: Lexical variations creating new rules based on DIRT rule X facethreat of Y ?
X at risk of YFor this we extended the DIRT rules by adding rules in which any of thelexical items involved in the patterns can be replaced by WordNet synonyms.The idea behind this is that a combination of various lexical resources isneeded in order to cover the vast variety of phrases which humans can judgeto be in an inference relation.In the example above, we consider the DIRT rule X face threat of Y?
X, at risk of Y (Table 2).
Of course at this moment due to the lackof sense disambiguation, our method introduces lots of rules that are notcorrect.
As one can see, expressions such as front scourge do not make anysense, therefore any rules containing this will be incorrect.
However someof the new rules created in this example, such as X face threat of Y ?
X,at danger of Y are reasonable ones and the rules which are incorrect oftencontain patterns that are very unlikely to occur in natural text.The method just described allows us to identify the first three rules listedin Table 1.
We also acquire the rule X face menace of Y ?
X endangeredby Y (via X face threat of Y ?
X threatened by Y, menace ?
threat,threaten ?
endanger).
However the entailment pair requires a slightlydifferent version of the rule, involving the phrase face menace from.Our extension is application-oriented therefore it is not intended to beevaluated as an independent rule collection, but in an application scenariosuch as RTE (Section 6).Another issue that we address is the one of removing the most systematicerrors present in DIRT.
DH algorithms have the main disadvantage that notonly phrases with the same meaning are extracted but also phrases withopposite meaning.In order to overcome this problem and since such errors are relativelyeasy to detect, we applied a filter to the DIRT rules.
This eliminates in-ference rules which contain WordNet antonyms.
To evaluate the precisionof our method, we randomly selected 200 examples of rules eliminated fromDIRT (irrespective of the textual entailment data) and a human evaluatordecided if they are indeed incorrect inference rules.
Out of these 92% turned96out to be incorrect rules, such as X right about Y ?
X wrong about Y. How-ever, there are also cases of correct rules being eliminated, such as X havesecond thoughts about Y ?
X lack confidence about Y.5 Inference Rules on Tree SkeletonsIn order to address the issues described in Section 3.1, we choose to applythe rule collection on a dependency-based representation of T and H. Wewill first introduce this representation and the algorithm to derive it, andfollowing that we will describe how we applied the inference rules on thisstructure.Tree SkeletonsThe Tree Skeleton (TS) structure was proposed by [15], and can beviewed as an extended version of the predicate-argument structure.
Since itcontains not only the predicate and its arguments, but also the dependencypaths in-between, it captures the essential part of the sentence.Following their algorithm, we first preprocess the data using the Minipardependency parser and then select overlapping topic words (i.e.
nouns) inT and H (we use fuzzy match at the substring level instead of full match).Starting with these nouns, we traverse the dependency tree to identify thelowest common ancestor node (named as root node).
This sub-tree withoutthe inner yield is defined as a Tree Skeleton.
Figure 1 shows the TS of T inthe pair:T For their discovery of ulcer-causing bacteria, Australian doctors Robin War-ren and Barry Marshall have received the 2005 Nobel Prize in Physiology or Medicine.H Robin Warren was awarded a Nobel Prize.Notice that, in order to match the inference rules with two anchors, thenumber of the dependency paths from the nouns to the root node shouldalso be two.
In practice, tree skeletons can be extracted from approximately30% of the T-H pairs.Applying DIRT on a TSAfter extracting the TS, the next step is to find the inference rules whichmatch the two tree skeletons of a T-H pair.
This is done in a rather straight-forward manner.
Given tree skeletons of T and H, we check if the two leftdependency paths, the two right ones or the two root nodes contain thepatterns of a rule.In the example above, the rule Xobj???
receivesubj????
Y ?Xobj2????
awardobj1???
?97Figure 1: Dependency structure of text.
Tree skeleton in boldY satisfies this criterion, as it is matched at the root nodes.
Notice that therule is correct only in restricted contexts, in which the object of receive issomething which is conferred on the basis of merit.6 ExperimentsOur experiments consist in predicting positive entailment in a very straight-forward rule-based manner.
For each collection we select the RTE pairs inwhich we find a tree skeleton and match an inference rule.
The first numberin our table entries represents how many of such pairs we have identified, outof 1600 development and test pairs.
For these pairs we simply predict pos-itive entailment and the second entry represents what percentage of thesepairs are indeed true entailment.
Our work does not focus on building acomplete RTE system but we also combine our method with a bag of wordsbaseline to see the effects on the entire data set.In the first two columns (Table 3: DirtTSand Dirt+WNTS) we considerDIRT in its original state and DIRT with rules generated with WordNet asdescribed in Section 4; all precisions are higher than 63%4.
After addingWordNet, tree skeletons and rules are matched in approximately twice asmany pairs, while the precision is not harmed.
This may indicate that ourmethod of adding rules does not decrease precision of an RTE system.In the third column we report the results of using a set of rules containingonly the trivial identity ones (IdTS).
For our current system, this can beseen as a precision upper bound for all the other collections, in concordance4The RTE task is considered to be difficult.
The average accuracy of the systems inthe RTE-3 challenge is around 61% [6]98RTE Set DirtTSDirt+WNTSIdTSDirt+Id Dirt+Id+WN?TS+WN?TSRTE2 55/0.63 103/0.65 45/0.66 136/0.65 90/0.67RTE3 48/0.66 79/0.65 29/0.79 101/0.69 74/0.71Table 3: Results on tree skeletons with various rule collectionswith the fact that identical rules are nothing but inference rules of highestpossible confidence.
The fourth column (Dirt+Id+WNTS) contains whatcan be considered our best setting.
In this setting three times as manypairs are covered using a collection containing DIRT and identity rules withWordNet extension.
Although the precision results with this setting areencouraging (65% for RTE2 data and 69% for RTE3 data), the coverage isstill low, 8% for RTE2 and 6% for RTE3.
This aspect together with an erroranalysis we performed are the focus of Section 7.Another experiment aimed at improving the precision of our predictions.For this we further restrict our method: we have a true entailment only ifapplying the inference rule to a TS leaves no unmatched lexical items in thefragment of the dependency path where it has been identified.
The more re-stricted method (Dirt+Id+WN?TS) gives, as expected, better precision withan approximately 30% loss in coverage.At last, we also integrate our method with a bag of words baseline,which calculates the ratio of overlapping words in T and H. For the pairsthat our method covers, we overrule the baseline?s decision.
The results areshown in Table 4.
On the full data set, the improvement is still small dueto the low coverage of our method, however on the pairs that are covered byour method, there is a significant improvement over the overlap baseline.RTE Test(# pairs) BoW BoW&MainRTE2 (89) 52.80% 60.67%RTE2 (800) 56.87% 57.75%RTE3 (71) 52.11% 59.15%RTE3 (800) 61.12% 61.75%Table 4: Results on RTE test data.
Covered set and full set.99Source of error # pairs % pairsTS structure 7 23%Incorrect rules 9 30%Other 14 47%Table 5: Error analysis7 DiscussionIn this section we take a closer look at the data in order to better understandhow does our method of combining tree skeletons and inference rules work.For error analysis we consider the pairs incorrectly classified in the RTE3data, consisting of a total of 30 pairs.
We classify the errors into three maincategories: tree skeleton structure errors, inference rule errors, and othererrors (Table 5).In the first category, seven T-H pairs are incorrect.
In those cases thetree skeleton fails to match the corresponding anchors of the inference rules.For instance, if someone founded the Institute of Mathematics (Instituto diMatematica) at the University of Milan, it does not follow that they foundedThe University of Milan.Approximately 30% of the errors are caused by incorrect inference rules.Out of these, two are correct in some contexts but not in the entailmentpairs in which they are found.
For example, the following rule X generate Y?
X earn Y is used incorrectly, however in the restricted context of moneyor income, the two verbs have similar meaning.
An example of an incorrectrule is X issue Y ?
X hit Y since it is difficult to find a context in whichthis holds.The last category contains all the other errors.
In all these cases, theadditional information conveyed by the text or the hypothesis which cannotbe captured by our current approach, affects the entailment.
For examplean imitation diamond is not a diamond, and more than 1,000 members ofthe Russian and foreign media does not entail more than 1,000 membersfrom Russia; these are not trivial, since lexical semantics and fine-grainedanalysis of the restrictors are needed.In a second part of our analysis we discuss the coverage issue, based onan analysis of uncovered pairs.
A main factor in failing to detect pairs inwhich entailment rules should be applied is the fact that the tree skeletondoes not find the corresponding lexical items of two rule patterns.
In one ofthe pairs 78% increase in X entails X rose by 78%.
This rule is available,however the tree skeletons capture reach and rise as key verbal nodes.
In100another example, information such as the fact that rains are creating flood-ing and devastating are all necessary to conclude that floods are ravagingEurope.
However a structure like tree skeleton cannot capture all these el-ements.
Issues will occur even if the tree skeleton structure is modified toalign all the corresponding fragments together.
Consider constructions withembedding verbs such as manage, forget, attempt.
Our method can detectif the two embedded verbs convey a similar meaning, however not how theembedding verbs affect the entailment.
Independent of the shortcomings ofour tree skeleton structure, a second factor in failing to detect true entail-ment still lies in lack of rules (e.g.
the last two examples in Table 1 areentailment pair fragments which can be formulated as inference rules, butare not straightforward to acquire).8 ConclusionThroughout the paper we have identified important issues encountered inusing inference rules for recognizing textual entailment and proposed meth-ods to solve them.
We explored the possibility of combining a collectionobtained in a statistical, unsupervised manner, DIRT, with a hand-craftedlexical resource in order to make inference rules have a larger contribution toapplications.
We also investigated ways of effectively applying these rules.The experiment results show that although coverage is still not satisfying,the precision is promising.
Therefore our method has the potential to besuccessfully integrated into a larger entailment detection framework.The error analysis points out several possible future directions.
The treeskeleton representation we used needs to be enhanced in order to capturemore accurately the relevant fragments of the text.
A different issue remainsthe fact that a lot of rules we could use for RTE are still lacking.
A properstudy of the limitations of the DH as well as a classification of the knowl-edge we want to encode as inference rules would be a step forward towardssolving this problem.
Furthermore, although all the inference rules we usedaim at recognizing positive entailment cases, it is natural to use them fordetecting negative cases of entailment as well.
In general, we can identifypairs in which the patterns of an inference rule are present but the anchorsare missmatched, or they are not in the correct hypernym/hyponym rela-tion.
This can be the base of a principled method for detecting structuralcontradictions [5].101References[1] Roy Bar-Haim, Ido Dagan, Iddo Greental, Idan Szpektor, and Moshe Fried-man.
Semantic inference at the lexical-syntactic level for textual entailmentrecognition.
In Proceedings of the ACL-PASCAL Workshop on Textual En-tailment and Paraphrasing, pages 131?136, Prague, June 2007.
[2] Regina Barzilay and Kathleen R. McKeown.
Extracting paraphrases from aparallel corpus.
In Proceedings of 39th Annual Meeting of the Association forComputational Linguistics, pages 50?57, Toulouse, France, July 2001.
[3] Peter Clark, Phil Harrison, John Thompson, William Murray, Jerry Hobbs,and Christiane Fellbaum.
On the role of lexical and world knowledge in rte3.In Proceedings of the ACL-PASCAL Workshop on Textual Entailment andParaphrasing, pages 54?59, June 2007.
[4] Ido Dagan, Oren Glickman, and Bernardo Magnini.
The pascal recognisingtextual entailment challenge.
In Lecture Notes in Computer Science, Vol.3944, Springer, pages 177?190.
Quionero-Candela, J.; Dagan, I.; Magnini, B.;d?Alch-Buc, F. Machine Learning Challenges, 2006.
[5] Marie-Catherine de Marneffe, Anna N. Rafferty, and Christopher D. Manning.Finding contradictions in text.
In Proceedings of ACL-08: HLT, pages 1039?1047, Columbus, Ohio, June 2008.
[6] Danilo Giampiccolo, Bernardo Magnini, Ido Dagan, and Bill Dolan.
Thethird pascal recognizing textual entailment challenge.
In Proceedings of theACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pages 1?9, Prague, June 2007.
[7] Sanda Harabagiu and Andrew Hickl.
Methods for using textual entailment inopen-domain question answering.
In Proceedings of the 21st International Con-ference on Computational Linguistics and 44th Annual Meeting of the ACL,pages 905?912, Sydney, Australia, July 2006.
[8] Adrian Iftene and Alexandra Balahur-Dobrescu.
Hypothesis transformationand semantic variability rules used in recognizing textual entailment.
In Pro-ceedings of the ACL-PASCAL Workshop on Textual Entailment and Para-phrasing, pages 125?130, Prague, June 2007.
[9] Dekang Lin.
Dependency-based evaluation of minipar.
In Proc.
Workshop onthe Evaluation of Parsing Systems, Granada, 1998.
[10] Dekang Lin and Patrick Pantel.
Dirt.
discovery of inference rules from text.
InKDD ?01: Proceedings of the seventh ACM SIGKDD international conferenceon Knowledge discovery and data mining, pages 323?328, New York, USA,2001.102[11] Erwin Marsi, Emiel Krahmer, and Wauter Bosma.
Dependency-based para-phrasing for recognizing textual entailment.
In Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pages 83?88,Prague, June 2007.
[12] Bo Pang, Kevin Knight, and Daniel Marcu.
Syntax-based alignment of mul-tiple translations: Extracting paraphrases and generating new sentences.
InHLT-NAACL, pages 102?109, 2003.
[13] Idan Szpektor, Eyal Shnarch, and Ido Dagan.
Instance-based evaluation ofentailment rule acquisition.
In Proceedings of the 45th Annual Meeting ofthe Association of Computational Linguistics, pages 456?463, Prague, CzechRepublic, June 2007.
[14] Idan Szpektor, Hristo Tanev, Ido Dagan, and Bonaventura Coppola.
Scalingweb-based acquisition of entailment relations.
In Proceedings of EMNLP, pages41?48, 2004.
[15] Rui Wang and Gu?nter Neumann.
Recognizing textual entailment using sen-tence similarity based on dependency tree skeletons.
In Proceedings of theACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pages 36?41, June 2007.103
