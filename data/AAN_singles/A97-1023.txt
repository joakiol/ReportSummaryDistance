Techn iques  for  Acce lerat ing  a Grammar-CheckerKarel OlivaComputa,tiona,1 LinguisticsUniversity of Saa,rla,ndPostfach 15 11 50D - 66 041 Sa.arbr(ickenGermanyema,il: olivaOcoli .uni-sb.
deAbst rac tThe paper describes everal possibilities ofusing finite-state automata a~s means forspeeding up the performance of a grammar-and-parsing-based (as opposed to pattern-matching-based) grammar-checker able todetect errors from a predefined set.
Theideas contained have been successflfily im-plemented in a grammar-checker fo Czech,a free-word-order language from the Slavicgroup.1 IntroductionThis paper describes an efficiency-supporting toolfor one of the two grarnmar-checker t chnologies de-veloped in the fi'amework of the PECO2824 JointResearch Project sponsored by the European Union.The project, covering Bulgarian and Czech, two ti'ee-word-order languages from the Slavic t~rnily, wasperformed between January 1993 and mid 1996 bya consortium consisting of both academic and indu-strial partners.The basic philosophy of the technology discussedin this paper 1 is that of linguistic-theoretically smmdgrammar-and-parsing-based machinery able to de-tect, by constraint relaxation, errors from a predefi-ned set (as opposed to pattern-matching approaches,which do not seem promising for a free word-orderlanguage).
The core of the system (broad-coverageHPSG-based grammars of Bulgarian and Czech, anda single language-independent parser) was developedm the first three years of the project and was thenpassed to the industrial partners Bulgarian BusinessSystem IMC Sofia.
and Macron Prague, Ltd. Whilethe Bulgarian system remained in more or less a de-monstrator stage only, the Czech one satisfied Ma-cron's requirements as to syntactic coverage.
Ho-wever, Macron expressed serious worries about thespeed of the system, should this be really introdu-ced to the market.
Following this, severa.1 possibili-IAs for the alterna.tive t chnology, cf.
(Hola.n, Kubol't,a.ztd Pl/Ltek, 1997)ties of using finite-state automata (FSA) as meansfor speeding up the performance of the system weredesigned, developed and implemented, in particular:?
for detecting sentences where none of the prede-fined errors can occur (tiros ruling out such sent-ences from the procedure of error-search proper)?
for detecting which one(s) of tile predefined er-ror types might possibly occur in a particularsentence  (hence,  cutting clown the search spaceof the error-search proper)?
for detecting errors which are of such a naturethat their occurrence might be discovered bya machinery simpler than full-fledged parsingwith constraint relaxation?
for splitting (certain cases of) complex sent-ences into independent clauses, a,llowing thusfor the error-detection to be performed on shor-t, er strings.2 Lexicalization of Error SearchVery many of the errors to be discovered by the sy-stem can be traced down to mismatches of (vMuesof) features projected into the synta.ctic structurefrom the lexicon.
Even though the error searchingcapabilities of the systern are not lirnited m princi-ple to these lexicMly induced errors, ibr a practicMimplementation it turned out to be useful to narrowdown the error search of the system to ahnost onlythese kinds of errors, fbr the following reasons:1. the loss of generality of the system is in fact onlyminimM, since the majority of errors which thesystem is able to detect are of this nature any-way (the only exception being agreement errorsrevolving NPs with complicated internM struc-ture, e.g., ellipses or coordina,tion)2. this loss of error coverage (ahnost negligible tbra real application) is outweighed by substa.n-tim gain in overall (statistical) speed of the sy-stem, which is achieved by adding a preproces-sing phase consisting of a finite state automatonpa,ssing through the input string and looking fora lexical trigger of a contingent error:155?
if this automaton  does not find anysuch trigger, tile t ime-consurrfing grammar-checking process proper (i.e.
parsing, pos-sihly also reparsing with relaxed cons-traints)  is not started at all and the sent-ence is iminediate ly  marked as one contai-ning no detectable rror?
if this automaton  finds such a lexical trig-ger of an error, it. '
remelnbers '  its natureso that  in tile tbl lowmg phases, only therespect,ive constrail ltS are relaxed (whichhelps to cut down the search space, a.scompa.red to reparsing with relaxing of allpredef ined-errors-related constraints)As an example  of this idea, let us consider a sy-stem deMing with errors in subject-verb agreementin Czech (and taking - for the very purpose of thisexample - detect ion of no other errors into account).Since the realistic pa.rt of such errors in Czech is the' - I / -Y '  d ichotomy on homophonic  past tense verbendings occurr ing on plural  verbs ( ' - I '  ending sta.n-drag with l:)lural mascul ine an imate  subjects, ' -Y  en-ding with plural  mascul ine inan imate  and femininesubjects),  the preprocessing f inite-state automatonmarks  all sentences not conta.ining any of these forms(i.e.
all sentences containing only singular verbs, orplural  verbs but  in present ense or in neuter gender,or infinite verb tbrms) as 'contain ing no detectableerror' ,  wi thout  any actual  grammar-check ing takingplace (it is, however, obvious that  this does not ne-cessarily mea.n that  the sentences are truly correct -they just  do not contain the kind of error the systemis able to detect).3 Alternat ive Error-Classif icationand Error Search by Finite AutomataAnother  impor tant  step towards tile apl) l ication ofFSA to error-detect ion was developing a new dimen-sion of cl~ussitication of errors to be detected: apartfi 'om the lnore s tandard  cr iter ia of frequency a.ndlmrfor lnance/conqmtence,  w  developed a scale ba-sed on the comI~lexit, y of the forlnal appara.tus nee-ded for the detect ion of the part icular  error type (asfor error typology developed for the purpose of theerror detection techniques used in the l)roject, of.
(l%odrignez Selles, GMvez, and Oliva, 1996)).
Ont, he one end of this sca.le were errors recognizable wi-thin a str ict ly local context, such as COmlnas missingin front of a certain kind of complementizers ( ub-ord inat ing conjunctions) or incorrect vocal izat ion ofa preposit ion (in both Bulgar ian and C, zech, certainpreposit ions ending nor lnal ly with a. consonant get, ~tsupport ing w)cal m case the word that  follows themalso starts  with a. consonant - the parMlel in Englishwould be the opt)osit ion between the two forms aand an of the indefinite article).
On the other elmof the scale we put, e.g., the general case of subject-verb ~greement, errors.
Pra.ctically lllOl'e imtn.~rtalltwas tile question whether there exists a, (:lass of er-rors with complexity of detect ion lying between the"tr iv ia l  errors" and the errors tor tile detect ion ofwhich a fldl-fledged analysis is necessa.ry - in otherwords, the question whether there exist some errorsfor the recognit ion of which?
on the one hand, a l imited local context is msufficient (i.e.
it is necessa.ry tot this end to processa substr ing of length which ca.nnot be set in a.d-vance, in generM the whole input str ing),?
on the other hand, it is not necessary t.o use thepower of the fldl-f ledged parser, al,d, in part i -cular, it is sufficient to use the power of a fi-nite state auto lnaton or only sl ight augmenta.-l ion thereof.Fol lowing some l inguistic research, two such errortypes have been selected for implenlentat ion,  andwhile one of thenr is just  a lnarginal  subtype of anerror in subject-verb agreernent, he other is an errortype of its own, and in addi t ion one of real ly crucialimportance tot pract ical  gramma.r-checking due toits high frequency of occurrence.Tile forlner error to be detected by the l~init,e statemachinery is a part icu lar  instance of an error wherea plural  mascul ine an imate  subject  is conjoined witha verb in a phlrM feminine tbrm (el.
also the exampleabove).
The idea of detect ing some part icular  casesof this error by a finite state automaton  results fromthe combinat ion of the following observa.tions:?
the nominat ive plural  forln of mascul ine ani-mate nouns of the declension types pd'.. andpi'edse.da is not ambiguous (homonynmus)  withany other case forms (apa.rt form vocative case,which we shall deal with innnediate ly  below);this means that  if such a. forn~ occurs in a sent-ence, then this forln ca.n be only- either a snbject,- or a nominal  predicate (with copula)-o r  a colnparisol i  to these, adjoined bymeans of the conjunctions jako, .
'jako~to rcosy- or an excla.lnative xpression (in nomina-tive or vocative case)?
due to rules of Czech interl)unction, any excla-nlative expression ha.s to be selm.ra.t, ed from therest, of the sentence by COllllll~lb?
also, due to rules of Czech mt,erpunction, twofinite verbs in Czech must be sepa.rated fi'olneach other by either a. comma, or by one of thefollowing coordinat ing conjunctions: a., i andueboHence, if we buihl up a finite state am, oma.ton ableto recognize the following substrings:1.
<unambiguous  mascul ine a.nimate noun in no-minat ive p lura l> followed by any str ing contai-ning neither a finite verb \[~,rm nor a. COlm-ne156nor one of the conjunctions o, i and ~t, b,) fc>llo-wed by <unaml)igm,us 1,asl particii)le m pluralfeminine >or (due to free word order)2.
< unaml)iguoub past par ti<'iph-, in I)lu -ra.l feminine> followed I)y a,ny string contai-ning neither a tinite verb form nor a commanor one of the conjunctions a, i, '..(bo followedby <unambiguous masculine animate noun innominative plural> a,nd coml)ine it with a sin>ple automaton able to detect the absence of thewords jako, jako2to and toby as well as the a.b-sence of any finite torm of the copula b:?l ('tobe') in the sentence, then we may conclude thatwe have built a device able to detect whethera sentence contains a particular instance of asubject-verb agreernent violation.The det, e<'ti<m of the latter error is also based onthe Czech interl)unct.ion rule prescribing that therealwa.ys lIlllSt, occllr a.
( :on l lna  (it a coordina.ting con-junction between two finite verb forms.
Hence, asimi)le finite state a./itolua.toll checking whether bet-ween any  two f in i te  verb  f(~rll ls a COl l l lna o r  a c ( )o fdinating conjunction occurs is a.Me to detect ma.nycases of the omission of a. co,tuna, a.t the end of anembedded subordinated clause, which is one of themost Dequent errors at all.
(Of course, tile word-forms of the verb must be mmmbiguously identifia-Me as such - i.e.
such tbrms as ~eu,., j~.d'u, lral.lm,holl etc., do not qualify due to their part of sl)eechambiguity, which means that ill senten<'es containingthem this stra.tegy cannot be used).4 Us ing  FSAfor Sp l i t t ing  a Sentence  into C lausesThe last idea how to gain efficiency is that of split-ting the sentence (if possible) into clauses before theprocessing, which has a two-fold posit ive effect onthe overall process of grammar-checking:I. it.
is less time consuming to parse two 'shorter'strings than one longer (a.ssmning that l)arsingis a.t least cubic in t, ime, this fl)llows triviallyfronl the inequalityA a+B a <A a+:C4 ~B+aAB=+B a =(A+B)  afor A,B positive - length of strings)2. it is possible to detect an error in one of thesubstrings (clauses) irrespective to the resultsof analysis of (any of) the other one(s); ill I>ar -ticular, also m ca.ses where a.t least one of themwas not analyzed and, hence, also tile pa.rsing(including the pa.rsing with rela.xed constraints)of the whole input could not have I)een perfor-lned on the original st.ring, which would havehindered the error messa.ge pertinent o the sub-string successfully parsed during the parsingwith constraint relaxation to be issued.Ill particular, this means that measures are to betbund which would allow for sl)litting the input sent-ence into clauses by purely superficial criteria.
Ob-viously, this is not possible in a.ll cases (Ibr all sent-en<-es), but on tile ()tiler hand it is also clear that illany language there exists a (statistically) huge sub-set of sentences of this language where such techni-ques are applicable.
For Czech, such a.n al)proachmight be iml)lemented using pattern matching tech-niques which wouht recognize for example the follo-wing patterns (and use them in an ol)vious way tbrsplitting the sentence into clauses):1.
<any str ing> <finite verb> <ally str ing><conjunctive coordinating conjunction> <anystr ing> <finite verb> <a.ny str ing> <end ofsentence>2.
<any str ing> <finite verb> <any str ing><comma> <non-conjunctive coordinating con-junction or complementizer> <any str ing><finite verb> <any str ing> <end of sentence>3.
<complementizer> <any str ing> <finite verb><any str ing> <comma> <any str ing> <finiteverb> <any str ing> <end of sentence>where the expressions have the following meaning(s):?
<a.ny str ing> is a variable for any string notcontaining elements of the following nature: fi-nite verb or word form honlonynlous with afinite verb, coordinating conjunction (of anykind), complementizer, any interlmnction sign?
<finite verb> is a variaMe- tbr a main verb (not tor an auxiliary) spe-cified for person,- or for a past participle of a n,ain verb;neither of these might be homonyntous in partof speech (but they n-light he ambiguous withinthe defined class - such verbs as podr'obl, proudldo qualify)?
<end of sentence> is simI)ly either a full-stop,a question-mark, an exclamation-mark, a colonor a semi-colon.All the renlaining expressions have clear mnemonics,and also the classes which they stand for do notcontain elements which are ambiguous as to part ofspeech.5 S ign i f i cance  and  CaveatsThe techniques to be used for gaining overall per-formance, speed and nlemory efficiency etc., of agramma.r-checking system presented result solelyfrorn research concerning relevant l)rOl)erties of thesyntax of a particular language (( :ze(-ll, in t)art alsoBulgarian), and, herlce, they are strongly language-dependent.
However, it seems t.o be self  evident thatthe core idea is transferable t<) <:)tiler languages.
The157introduction of these techniques contributes to tileprocess of ripening of the system into a real indu-strial application at least in the following points:?
it speeds up the overall performance of the sy-stem considerably (in the order ranging fromone to two magnitudes, depending on the textto be processed) by avoiding full-fledged par-sing to be performed in unnecessary cases or bymaking this parsing simpler?
it extends its coverage, in particular the caim-bilities of the system to recognize a.s error-freealso a large nmnber of sentences which in theoriginal version of the system would be unana-lyzable by the non-relaxed grammar (ms well asby the grammar with relaxed constraints, totthat matter) due to either incompleteness of thegrammar proper or the exhaustion of hardwareresources.There is a serious caveat to be issued, however:since they do not employ fllll anMysis of the inputsentence, these techniques are - albeit probably onlyrarely on the practical evel - more likely to issue in-correct error messages, in the sense that their capa-bilities of detecting an erroneous entence are exacffythe same as on the full-fledged approach, but theircapabilities of detecting 'what kind of error occurredin the sentence are slightly reduced.
For example, in(the Czech equivalent of) tile sentence*Your wife drives very drives tasta grammar-checker based solely on the flfll-fledgedphilosophy would correctly recognize that the sameverb is repeated twice, while a checker using only fi-nite state automaton detecting the presence/absenceof a comma or a coordinating conjunction betweentwo finite verbs issues a message concerning exactlythe 'missing connna' - and similar exarrq:~les can beconstructed also for all the other cases.
In otherwords, there is a price to be paid for the speed-upof the error-checking process by means of tile tech-niques proposed.ReferencesHolan, T., V. Kubofl, and M. Plgtek.
1997.
A pro-totype of a grammar checker for Czech.
Ill thisvolume.Rodriguez Selles, Y., M.R.
GMvez, and K. Oliva.19.96.
Error detection techniques m grammar-checking.
Technical report of the PECO2824 pro-ject, Autonomous University of Barcelona.
andUniversity of Saarland.158
