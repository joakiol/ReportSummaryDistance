FR EE ADJUNCTSNATURAL LANGUAGE INSTRUCTIONS*Bonn ie  Lynn  Webber  Barbara  Di Eugen ioDepar tment  of Computer  and  In fo rmat ion  Sc ienceUn ivers i ty  of  Pennsy lvan iaPh i lade lph ia  PA  19104-6389ABST l l .ACTIn thi,~ paper, we give a brief account of ourproject Animation from Instructions, the view ofinstructions it reflects, and the semantics of oneconstruction - the free adjunct - that is commonin Natural Language instructions.In t roduct ionOver the past few years, we have been developing asystem for creating animated simulations from NaturalLanguage instructions.
When the system is complete,E;hese animated simulations will combine:?
animated agents which demonstrate the instruc-tions being carried out in a specified environment;o Natural Language narration which explains whatis being done and why.Such narrated simulations can then be used in instruct?ing agents ot' varying capacities in how to perform taskswith varying demands in workplaces of varying layout.In \[2\], we argue that the only way to create suchblarrated simulations is to drive both animation andbmrration fl'om a common representation that embod-ies the same conceptualization of tasks and actions asNatural Language itself.
1 Wc also argue the difficultyof hand-tooling such a representation for each task tobe demonstrated and explained.
Instead, we argue forenabling a system to create these representations foritself, from Natural Language Instructions.
In fact,we make the stronger claim that creating task anima-tion from anything but direct graphical manipulationjorces one to Natural Language as the only instruction~ource accessible to users other than manually skilled(or programming-wise) animators.Creating task animations from Natural Language in-~tructions forces us to understand instructions compu-rationally.
Instructions as a type of text have not been*We thank Mark Steedman, Hans Karlgren and Breck Bald-win for comments and advice.
They are not to blame for any er-~-ors in the translation of their advice into the present form.
The,:esem'ch was supported by DARPA grant no.
N0014-85-K0018,and ARO grant no.
DAAL03-89-C0031.1Tiffs is not to suggest hat animation can be driven solelyfrom that common representation: other types of knowledge axeclearly needed as well - including knowledge of motor skills andother performance characteristics.studied as much as narratives as a way of describingtasks, but it is clear that they differ: when a na'~'ca -tire describes a task, it tells what happened when thetask was performed in a particular circumstance.
In-structions, on the other hand, commonly specify how toperform the task in a wide range of circumstances thatmay change during the course of performance in quitedifferent ways.
This has at least two consequences: (1)to understand instructions, one has to understand howinstructions relate to intended behavior, and (2) in pro-cessing instructions, one has to deal with constructionsthat either only rarely appear in narrative or play dif-ferent roles than they do in narrative.In this paper, we start by presenting what we taketo be the relationship between instructions and behav-ior, and then explore one construction often found ininstructions - free adjuncts - explaining them in lightof this relationship.2 Instruct ionsOur view of instructions derives from a view of plansvariously advocated in Pollack \[7, 8\], Suchman \[11\], andAgre and Chapman \[1\].Pollack contrasts two views of plan: plan as datastructure and plan as mental  phenomenon.
(The for-mer appears to be the same view of plans that Agre andChapman have called plan as program.)
Plans producedby Sacerdoti's NOAH system \[9\] are a clear example ofthis plan as data structure view.
Given a goal to achieve(i.e., a partial state description), NOAH uses its knowl-edge of actions to create a data structure (a directedacyclic graph) whose nodes represent goals or actionsand whose arcs represent emporal ordering, elabora-tion, or entailment relations between nodes.
This datastructure represents NOAH's plan to achieve the givengoal.As Suchman points out \[11\], NOAH's original intentwas to provide support for novice human agents in car-rying out their tasks.
Given a goal that an apprenticewas tasked with achieving, NOAH was meant to forma plan and then use it to direct the apprentice in whatto do next.
To do this, it was meant to generate aNatural Language instruction corresponding to the ac-tion associated with the "current" node of the graph.
Ifthe apprentice indicated that he didn't understand the1 395instruction or couldn't perform the prescribed action,NOAH was meant to "move down" the graph to directthe apprentice through the more basic actions whoseperformance would entail that of the original.
The re-sult is a sequence of instructions that corresponds di-rectly to the sequence of nodes encountered on a par-ticular graph traversal.Pollack contrasts the above with a plan as mentalphenomenon view, in which having a plan to do someaction/?
corresponds roughly to* a constellation of beliefs about actions and theirrelationships;* beliefs that their performance, possibly in someconstrained order, both entails the performance of/?
and plays some role in its performance;?
an intention on the part of the agent to act in ac-cordance with those beliefs in order to perform/?.With respect o such beliefs, Pollack draws a three-way distinction between act-types, actions (or acts) andoccurrences.
Act-types are, intuitively, types of actionslike playing a chord, playing a D-major chord, playinga chord on a guitar, etc.
Act-types, as these exam-ples show, can be more or less abstract.
Actions canbe thought of as triples of act-types, agents, and t imes(relative or absolute intervals) like Mark playing a D-major chord last Sunday afternoon on his Epiphone.Because it is useful to distinguish an action from itsoccurrence in order to talk about intentions to act thatmay never be realized, Pollack introduces a separateontological type occurrence that corresponds to the re-alization of an action.
(Pollack represents an occurrenceas OCCUR(/?
), where/?
is an action.
Thus an occur-fence inherits its time from the associated time of itsargument.
)Agents can hold beliefs about entities of any of thesethree types:?
act-types - An agent may believe that playing a D-major chord involves playing three notes (D,F~ andA) simultaneously, or that s/he does not know howto perform the act-type playing a D-major chordon a guitar, etc.
Any or all of these beliefs can, ofcourse, be wrong.?
actions - An agent may believe that some actionoe 1 must be performed before some other actiona2 in order to do action /71 or that a2 must beperformed before c~1 in order to do/?~.
Here too,the agent's beliefs can be wrong.
(It was to allowfor such errors in beliefs and the Natural Languagequestions they could lead to that led Pollack to thisPlan as Menta l  Phenomenon approach.)?
occurrences-  An agent may believe that what putthe cat to sleep last Sunday afternoon was an over-dose of catnip.
S/he may also have misconceptionsabout what has happened.Therefore one can take the view that instructions aregiven to an agent in order that s/he develops appro-priate beliefs, which s/he may then draw upon in at-tempting to "do /?".
Depending on the evolving cir-cumstances, different beliefs may become salient.
Thisappears to be involved in what Agre and Chapman \[1\]and what Suchman \[11\] mean by using plans as a re-source.
Beliefs are a resource an agent can draw uponin deciding what to do next.Given this view of plan as mental  phenomenon, wecan now consider possible relationships between in-structions and behavior.
At one extreme is a direct re-lationship, as in the game "Simon Says", where eachcommand ("Simon says put your hands on your ears")is meant o evoke particular behavior on the part of theplayer.
That is,Ins t ruct ion  =# Behav iorThe fact that such instructions are given in NaturalLanguage is almost irrelevant.
We have already demon-strated \[4\] that they can be used to drive animatedsimulations.
Key frames from such a demonstration oftwo agents (John and Jane) at a control panel followinginstructions that beginJohn, look at switch twf-1.John, turn twf-1 to state 4.Jane, look at twf-3.Jane, look at tglJ-1.Jane, turn tglJ-1 on.are shown in Figure 1.In contrast, instructions can depart from this simpledirect relation in many ways:1.
Multiple clauses may be involved in specifying thescope or manner  of an intended action.
For example,the intended culmination of an action may not be whatis intrinsic to that action, but rather what is taken tobe the start of the action prescribed next.
2 Considerthe following instructions that Agre \[1\] gave to severalfriends for getting to the Washington Street SubwayStation.Left out the door, down to the end of thestreet, cross straight over Essex then left upthe hill, take the first right and it'll be on yourleft.While the action description "\[go\] left up the hill" hasan intrinsic culmination (i.e., when the agent gets tothe top of the hill), it is not the intended terminationof the action in the context of these instructions.
Itsintended termination is the point at which the action of"taking the first right" commences - that is, when theagent recognizes that s/he has reached the first right.In Section 3, we will provide many more examples ofthis feature of instructions.2.
Instruct ions may describe a range of  behavior ap-propriate under different circumstances.
The agent is2This is not the case in "Simon Says" type instructions, whereeach action description contains an intrinsic culmination \[6\].396 2Figure h Control Panel Animationo,dy meant to do that which s/he recognizes the situa-tion as demanding during its performance.
For exam-ple, the following are part of instructions for installinga diverter spout:Diverter spout is provided with insert for 1/2"pipe threads.
If supply pipe is larger (3/4"),unscrew insert and use spout without it.Here, the relevant situational features can be deter-mined prior to installing the spout.
In other cases, theymay only be evident during performance.
For example,the following are part of instructions for filling holes inplaster over wood lath:If a third coat is necessary, use prepared jointcompound from a hardware store.Here, the agent will not know if a third coat is nec-essary until s/he sees whether the first two coats haveproduced a smooth level surface.3.
As in the plan as data structure model, instruc-tions may delineate actions at several evels of detail orin several ways.
For example, the following are part ofinstructions for filling holes in plaster where the lathhas disintegrated as well as the plaster:Clear away loose plaster.
Make a new lathbacking with metal lath, hardware cloth, or,for small holes, screen.
Cut the mesh in a rect-angle or square larger than the hole.
Thread a4- to 5- inch length of heavy twine through thecenter of the mesh.
Knot the ends together.Slip the new lath patch into the hole .. .Here the second utterance prescribes an action at agross level, with subsequent utterances specifying it inmore detail.4.
Instructions may only provide circumstantial con-straints on behavior but not specify when those circum-stances will arise.
For example, the following comesfrom instructions for installing wood paneling:When you have to cut a sheet \[of paneling\],try to produce as smooth an edge as possi-ble.
If you're using a handsaw, saw from theface side; if you're using a power saw, sawfrom the back side.
Otherwise you'll produceragged edges on the face because a handsawcuts down and a power saw cuts up.Such cases as these illustrate an indirect relation be-tween instructions and behavior through the interme-diary of an agent's beliefs and evolving plan.
That is,Ins t ruct ions  ==~ Bel iefs ?=~ P lan  ?=~ Behav ior3 Free AdjunctsIn the previous ection, we noted that multiple clausesmay be involved in specifying an intended action, us-ing this as evidence for our view of an indirect rela-tionship between instructions and behavior.
Here, wediscuss one multiple-clause construct in more detail -the f ree ad junct  - since it also provides evidence forour claim that the representation driving narrated ani-mations should embody the same conceptualization ftasks, actions and events as Natural Language itself.A free adjunct is defined as a nonfinile predicativephrase with the function of an adverbial subordinateclause \[10\].
It may be headed by a noun, adjective,prepositional phrase, or verb 3.
Here we focus on freeadjuncts headed by progressive gerundives, as they arequite common in instructions - e.g., the underlinedclause in Ex.
1:Ex.
1 Pour mixture over cheese in casserole,.slgreading evenly.Stump notes of free adjuncts that their logical connec-tion with the clause they modify is not overtly specified\[10\] 4.
Here we argue that (1) instructions exploit three3Constructions headed by subordinating conjunctions andcontaining a nonfmite verb, such as while fightin9 in France, hewan $aken prisoner are not considered to be free adjuncts byStump \[10\], who calls them augmented adjuncts.4Free adjuncts are just one kind of a larger class of syntacticforms, absolute constructions, that have this property: for a morethorough discussion, see \[10\].3 397logical connections between a gerundive adjunct andits matrix clause; and (2) to represent these relationsrequires a representation with a temporal ontology atleast as rich as that proposed in \[6\], as well as supportfor generation relations \[5\] (defined below) and abstrac-tion.
We conclude by showing that the role adjunctsplay in instructions differs from the role they play innarratives.3.1 Data AnalysisWe collected 97 consecutive instances of gerundive ad-juncts (here called simply "adjuncts") in instructionsflThe syntactic structure of sentences containing theseadjuncts is generally limited to a main clause, precededand/or followed by an adjunct.
The main clause de-scribes an action, which we call amain; #a~ will referto the semantic ontent of the adjunct.
We found thatour corpus divided into three classes, depending on thelogical connection between the adjunct and amain:1. it may augment the description of amain;2. it may describe a second action aa~0 that generatesor is generated by amain;3. it may describe an independent action aa~ thatshould be performed simultaneously with areal,.It is important to remember, in the following discussion,that (following Pollack \[7, 8\]) an action, like an act-type,is a descripiion, not something in the world.3.1.~ Augmentat ionAbout half the adjuncts in our corpus supply featuresof amain, such as its starting point; necessary tool(s) ormaterial(s); objects tha~ amain may create, etc.
Thus,Cemain is a less specific version (i.e., an abstraction)of the intended action c~ that results from combiningC~main and #and.
For example, in Ex 2, the adjunctspecifies the tool to use:Ex.
2 Using a coping or back saw, carefully cut allpieces to the dimensions given in the materials list.Alternatively, the adjunct can provide features of theworld that have to either remain or become true afterexecuting amain.Ex.
3 Sew the head front to back, leavingthe neck edge open.The adjunct can alternatively specify a constraint onthe execution of amain , including:?
a manner constraint, that amain be executed insuch a way that a state is brought about whichcontinues to hold during its execution.
In the fol-lowing example, while the agent executes the cut-ting action, s/he has to stay to the outside of theline:5Data  were collected f rom five magazines - two of which de-scribe wood projects,  and  the other  three, "crafts" - and  onechapter  of a "how to" book on instal l ing wall coverings.Ex.
4 Transfer pattern to top back board A andusing a jig or a scroll saw carefully cut out patternstaying to the outside of the line.a side-effect constraint, that a possible side effectof amain should be avoided.
Verbs like take care,be careful, make sure etc.
followed by not to ...,are often used:Ex.
5 Cut under eaves of cabin 'with chisel,b.ein~ care\[ul not to chip ,,oo~The need to represent the result of augmentation andthe relation between amain and a is one reason for re-quiring our system to have a representational c pacityat least rich enough to represent partial descriptions ofactions and an abstraction relation between them.Partial description is not meant o imply partial withrespect o some fully specified escription.
On the con-trary, we do not assume that there is an a priori fixedset of features belonging to an action.
To say that anadjunct conveys additional features of amain, does notmean that one can specify beforehand what all thosefeatures might be.To a first approximation, the relation between de-scriptions could be stated in terms of the amount ofinformation that a description conveys.
Note that thisdoes not have to be new information: in Ex 2, the inforo-mation conveyed to an expert carpenter by the adjunctis probably redundant, given that he knows what kindsof  saws  to  use .~.1o~ Generat ionGoldman \[5\] defines generation as that relation betweenactions intbrmally conveyed by the preposition by inexpressions uch as "agent G does fl by doing 3'" -e.g., "John turns on the light by flipping the switch".Free adjuncts can specify a generation relation betweenactions amai,~ and an4/ in either direction, without anovert by - for example,Ex.
6 As you work, clean the surface thoroughlyeach time you change grits, vacuum!n 9 off all.t.h.e_dust and wiping the wood with a rag dampened with.turpentine or paint .thinner.\[aa~ GEN amain\]Ex.
7 Cut one 7xT-inch square from foil.
Fold cor-ners to center of square; cut in half on the diagonalcreating two triangles.\[amain GEN aa~/\]Ex.
8 Sew bottom canvas bag to bottom of frontand back, makin~l a long rectanfle.\[amain GEN aa~\]4 398In the case of generation, only one action is executedper se, generating the other as a result.One natural question to ask is why two different de-scriptions are given of the same action.
The reasonsare the same as in any text: to make explicit the pur-pose of ~Jt action or a salient feature.
For example, inEx.
6, clean provides a unifying description for the twoactions expressed in the adjuncts, and by doing so, in-dicates their purpose.
In Ex.
7, the result of amain (thetwo triangles) is mentioned explicitly, in order to intro-duce these new referents in the agent's discourse model.In Ex.
8, the description a long rectangle provides a vi-sual clue to the result to be achieved.
(This may be anadditional purpose for the generate relation in Ex.
7 aswell.
)Again, Ex.
6 shows the need for abstraction in ourrepresentation, i  the form of one or more abstractionhierarchies of action descriptions: to understand thisexample, we need to know that both vacuum and wipeare specializations of clean.3.1.3 S imul tane i tyIf the adjunct describes an action oza4/ that is indepen-dent of oqnai,, it is meant hat both are to be executedsimultaneously:Ex.
9 Soak paper in water for 1 hour; remove pa-per, then smooth onto board, squeezing out excess.
~ d  i r~b le_~ Staple paper to board along theedges.
Mix rose madder and water; pour onto wet pa-per, tilting board to spread color.:Ex.
10 Unroll each strip onto the wall,the foil into place vertically (not side to sidS_ to avoidwarping and curlinq__at he edq~es.3 .2  Aspect  and  Event  S t ruc tureEarlier, we claimed that the representation driving nar-rated animations hould en'lbody the same conceptual-ization of ~asks, actions and events as Natural Languageitself.
We take the conceptualization f actions and?
;vents to be the tripartite vent structure described byMoens and Steedman (hereafter, M~S) in \[6\].The goal in \[6\] is to provide a single explanation ofaspectual profiles, of changes in aspectual profile re-lated to the use of adverbial and prepositional mod-ifiers, and of the purported temporal "ambiguity" ofwhen-clauses.
The explanation makes use of a tripartiteevent structure which M~S call a nucleus.
A nucleusconsists of a preparatory process, a culmination and aconsequent state.
Within this framework, an event de-.
'~cription interpreted as a PROCESS corresponds simoply to a preparatory process, while a CULMINATEDPROCESS corresponds to an entire nucleus.
CULMI-NATIONS (Vendler's achievements \[12\]) correspond toa culmination followed by its consequent s ate.Within this framework, M~S attribute changes in~!~spectual profile brought about by modifiers (viewed asfunctions from event description to event description)to two factors: (1) The modifier, viewed as a function,may have a different output type than its input type.The modified form will thus have the same aspectualtype as the function's output.
(2) When a functiondemands a different aspectual type for its input than ithas been given, a mechanism called coercion maps theinput to the needed type.
This may change semanticfeatures of the input, before function application.What we shall show here (rather briefly) is that thissame tripartite nucleus can ground the possible inter-pretations of augmentation (Section 3.1.1) and simul-taneity (Section 3.1.3), and in fact, account for ambi-guities in interpretation.
We start with the followingminimal pair:Ex.
11 Starting with this mark, make another mark,leaving exactly P inches between marks.Ex.
12 Starting with this mark, make a series ofmarks, ~c_ t ly_  2 i nche_s between marks.In M&S's framework, making a (single) mark (Exam-ple 11) could be considered a CULMINATION.
Theplural "series of marks" in Example 12 would then mapthis singular interpretation to a CULMINATED PRO-CESS through iterating mark-making.
(Iterated mark-making culminates when there is no more room to makemarks.)
The augmentation i Example 11 constrainsthe distance between the single pair of marks, that inExample 12, the distance between each pair of marksproduced uring the iteration.Now consider the following example of simultaneity:Ex.
13 Wire vines together at one end.
Twine vinesinto an 8.inch diameter wreath, fasteningwith wire to hold.The second sentence mentions two independent actions- twining the vines into a wreath (amain) and fastening(aa~/).
In M~cS's framework, the action amain can betaken to be a CULMINATED PROCESS in two differ-ent ways: a single homogeneous twining process, whichculminates when one has used up all the vines, or (asabove) an iteration of individual twinings, cuhninatingfor the same reason.
In the first case, fastening happensat the single point of culmination - its purpose being toprevent he two ends of the wreath from coming apart.In the second, fastening happens at the end of each iter-ation - its purpose being to keep the strands together.To capture both these interpretations (and decide be-tween them) requires a representation such as M~S'srich enough to capture the required event structure.3.3 Re lat ion to Prev ious  WorkThe most extensive analysis of the semantics of freeadjuncts (in English) that we are aware of is that doneby Greg Stump \[10\].
However, all his examples comefrom narrative text, and as a result, he focusses on theirtruth-conditional properties.
For example, he draws adistinction between strong and weak adjuncts:5 399Ex.
14 a) Having unusually long arms,John can touch the ceiling.b) Standing on the chair,John can touch the ceiling.Ex.
15 a) Being a businessman, Bill smokes cigars.b) Lying on, the beach_, Bill smokes cigars.Stump calls the adjuncts in both a sentences trong,because their actual truth is uniformly entailed.
Hecalls those in the b sentences weak, because their actualtruth can fail to be entailed.Related to this, Stump also notes a Causal flavor instrong adjuncts.
Consider the adjuncts in the a sen-tences in both Exs.
14 and 15.
The sense is that inboth cases, the main clause assertion is true becausethe adjunct is.
Weak adjuncts, on the other hand, havea conditional sense: it is (only) when the condition de-scribed in the adjunct is true that the main clause as-sertion is true.While these observations appear to be both correctand relevant in narratives, this strong/weak distinctionappears :irrelevant for instructions, which do not con-cern themselves with truth conditions in the same wayas narratives.
The only thing in instructions that comesclose to the conditional sense of weak adjuncts is theperfective gerundive adjunct, as inEx.
16 Having..basted the seams, check again for fit.Such adjuncts do convey a similar sense that it (only)when the action described in the adjunct is completethat the main clause command is relevant.In Section 3.1, we essentially tried to show that ininstructions, gerundive adjuncts play a role in furtherspecifying intended action.
They may do this throughaugmenting amain, through providing an alternative de-scription of Otrnai n through generation, or through spec-ifying another (independent) action that must be per-formed simultaneously with Otmainin some way.
Thuswe conclude that gerundive adjuncts (if not all free ad-juncts) play a different role in instructions than theydo in narrative text.
This emphasizes the importanceof analysing constructions in situ, rather than assum-ing that conclusions based on narrative text will holdequally of instructions.4 SummaryIn this paper, we have given a brief account of ourproject Animation from Instructions, the view of in-structions it reflects, and the semantics of one particu-lar construction that occurs often in the type of instruc-tions we will be handling.
The project is proceeding onseveral fronts, including the following: (1) Similar anal-yses are being done of other constructions that com-monly occur in instructions \[3\]; (2) we are starting todevelop a representation that embodies both the tem-poral ontology \[6\] that grounds the semantics of theseconstructions and an abstraction mechanism- noticethat when we talk about abstraction we do not limitourselves to abstraction hierarchies: we intend abstrac-tion as a general relation between more and less specificdescriptions of actions; and (3) translation processesare being expanded for mapping that representationinto forms that our simulation system \[4\] can deal with.More detailed description of the system as a whole isgiven in \[2\].References\[1\] Phillip Agre and David Chapman.
What arePlans For?
A.I.
Memo 1050a, Artificial Intelli-gence Laboratory, MIT, October 1989.\[2\] Norman Badler, Bonnie Webber, Jeff Esakov andJugal Kalita.
Animation from Instructions.
Mak-ing Them Move: Mechanics, Control and Anima-tion of Articulated Figures.
Morgan-Kaufmann,1990.\[3\] Barbara Di Eugenio and Bonnie Webber.
Ac~tion Specifications in Natural Language Instruc-tions.
Technical Report, Dept.
of ComputerInformation Science, University of Pennsylvania,Philadelphia PA. Forthcoming.\[4\] Jeffrey Esakov and Norman I. Badler.
An Archi-tecture for Human Task Animation Control.
InKnowledge-Based Simulation: Methodology andApplications P.A.
Fishwick and R.S.
Modjeski(eds.
), Springer Verlag, New York, 1989.\[5\] Alvin Goldman.
A Theory of Human Action.
NewYork: Prentice-Hall, 1970.\[6\] Marc Moens and Mark Steedman.
Temporal On-tology and Temporal Reference.
ComputationalLinguistics.
14(2), 1988, pp.
15-28.\[7\] Martha Pollack.
Inferring Domain Plans inQuestion-Answering.
PhD Thesis, Dept.
ofComputer and Information Science, Universityof Pennsylvania, Philadelphia PA. (Available asTechnical Report MS-CIS-86-40, University ofPennsylvania, May 1986.
)\[8\] Martha Pollack.
Plans as complex mentalattitudes.
In Intentions in Communication,J.
M. P. Cohen and M. Pollack, Eds., MIT Press,1990.\[9\] Earl Sacerdoti.
A Structure for Plans and Behav-ior Elsevier, New York, 1977.\[10\] Greg Stump.
The Semantic Variability of Abso-lute Constructions.
Dordrecht: D. Reidel, 1985.\[11\] Lucy Suchman.
Plans and Situated Actions: Theproblem of human machine communication.
Cam-bridge University Press, 1987.\[12\] Zeno Vendler.
Linguistics and Philosophy.
IthacaNY: Cornell University Press, 1967.400 6
