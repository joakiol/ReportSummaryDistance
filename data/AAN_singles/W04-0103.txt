A Diachronic Approach for Schwa Deletion in Indo Aryan LanguagesMonojit CHOUDHURY, Anupam BASU and Sudeshna SARKARDept.. of Computer Science & Engineering,Indian Institute of Technology, KharagpurINDIA, PIN-721302{ monojit, anupam, sudeshna } @cse.iitkgp.ernet.inAbstractSchwa deletion is an important issue ingrapheme-to-phoneme conversion for Indo-Aryan languages (IAL).
In this paper, wedescribe a syllable minimization basedalgorithm for dealing with this thatoutperforms the existing methods in terms ofefficiency and accuracy.
The algorithm ismotivated by the fact that deletion of schwa isa diachronic and sociolinguistic phenomenonthat facilitates faster communication throughsyllable economy.
The contribution of thepaper is not just a better algorithm for schwadeletion; rather we describe here a constrainedoptimization based framework that can partlymodel the evolution of languages, and hence,can be used for solving many problems incomputational linguistics that call fordiachronic explanations.1 IntroductionLinguists propose new models for languagesin order to explain language acquisition andprocessing by humans.
Irregularities andexceptions to the theories are often explained byevidence from diachronic linguistics and othersocial and external phenomena.
Absence ofdiachronic analysis in computational modelling oflanguages results in a large number of exceptions,which are commonly handled by ad hoc rules orexhaustive enumeration.
These techniques lead topoor scalability and lack of graceful degradation ofthe systems along with increased complexity.Although complete modelling of the evolution oflanguage is impossible due to the involvement ofmyriads of socio-political and cultural factors, it isdefinitely possible to model certain basicprinciples of language change.In this paper we describe an algorithm forschwa deletion in Indo-Aryan Languages (IAL)that is motivated by the diachronic evolution of thelanguages.
The proposed computational frameworkmodels languages as a constrained optimizationsystem, where a language evolves by optimizingthe rate of communication, subjected to a set ofconstraints such as ease of articulation andlearning, and acoustic distinctiveness.
A syllableminimization based optimization function fitted tothe aforementioned model has been used forsolving the problem of schwa deletion withconsiderable success.The paper is organized as follows: Section 2defines the problem and discusses some of theprevious works.
Section 3 describes the currentmodels of language evolution, which has beenused to develop a computational frameworkdescribed in the next section.
Section 5 and 6presents the algorithm and its experimentalanalysis respectively.
Section 7 concludes thepaper summarizing our contributions.2 The ProblemSchwa is defined as the mid-central vowel thatoccurs in unstressed syllables.
The first vowel ofthe IAL alphabet {a}1 is the schwa.
Normally, it ispronounced as /?/ in Hindi and Sanskrit, and as /?/in Bengali.
Schwa deletion is a phonologicalphenomenon where schwa is absent in thepronunciation of a particular word, althoughideally it should have been pronounced (Ohala,1983).Sanskrit and some of the modern IAL that haveevolved from it (e.g.
Hindi and Bengali), arewritten from left to right using Brahmi-derivedscripts.
All the vowels are explicitly representedusing diacritical or non-diacritical marks aroundthe consonant except for the schwa, which is theinherent vowel.
Unlike Sanskrit, many modernIAL like Hindi and Bengali allow deletion ofschwa in certain contexts.
Table I illustrates thisphenomenon for the three languages.
In order todetermine the proper pronunciation of the words, itis necessary to predict which schwas are deletedand which are not.
Thus, schwa deletion is an1 The graphemes for Indo-Aryan languages are written within ?{?
and ?
}?according to the scheme adopted by the International Congress of Orientalists atAthens in 1992.
The phonetic transcriptions are written within two ?/?
using theIPA symbols.Barcelona, July 2004Association for Computations LinguisticsACL Special Interest Group on Computational Phonology (SIGPHON)Proceedings of the Workshop of theimportant issue for grapheme-to-phonemeconversion of IAL, which in turn is required for agood Text-to-Speech synthesizer (Narasimhan etal, 2001).Pronunciation   TheSpelling SanskritHindiBengalis?phalya(success)sa??ly?(3)sa??lj?
(3)?a?ol lo(3)racan?(creation)r?c?na(3)r?cna(2)r?cona(3)veda(Veda)ved?
(2)ved(1)bed(1)Table 1.
Pronunciation of three different wordsin three different IAL.
The number of syllables isdenoted within parenthesis below thepronunciations.
In Bengali {a} can also bepronounced as /o/ in certain contexts.Several theories have been proposed on thelinguistic aspects of schwa deletion in Hindi (Pray,1970; Kaira 1976; Ohala, 1977, 1983) and itsdiachronic evolution (Misra, 1967).
Ohala (1983)has summarized the rule for schwa deletion inHindi as?
?
?
/ VC __ CVCondition 1: There may be no morphemeboundary in the environment to the left.Condition 2: The output of the rule should notviolate the phonotactic constraints of HindiConvention: The rule applies from right to leftThe explanation of the rule was based onpsycholinguistic evidence; diachronic facts wereused only to explain the exceptions.
Narsimhan etal (2001) designed an algorithm for schwa deletionin Hindi based on this work.
The reported accuracyof the algorithm is 89%.
Some rules for word finalschwa deletion in Bengali have been proposed byChatterji (1926), but we do not know of any workon computational modelling.3 Factors governing language changeThe fact that schwa deletion in IAL is a diachronicphenomenon has been substantiated by Misra(1967).
According to Ohala (1983) the deletion ofschwas is more frequent in casual and fast speechcompared to formal and slower ones.
It can beinferred from these facts that the motivation behindschwa deletion is faster communication throughminimization of syllables (Tranel 1999).Some recent works on mathematical andsimulation based modelling of language evolution(Boer, 2000; Cangelosi and Parisi, 2002; Nowak etal, 2002) suggests that several features oflanguages emerge due to some basic cognitive andarticulatory factors.
These models assume a) easeof articulation, b) ease of learning, and c) acousticdistinctiveness as the primary driving forcesbehind language evolution.
The three forcesoperate simultaneously over the language in orderto maximize the rate of successful communicationin terms of time and effort spent by the languageusers to generate, understand and learn thelanguage.
Thus, language can be modelled as amulti-objective optimization system, where theoptimization criteria are?
Minimization of effort (in terms of energy andtime spent while conveying a piece ofinformation)?
Minimization of learning time and effort?
Minimization of probability ofmisunderstanding (in the sense of confusingone word with another)These three criteria are mutually contradictory andtherefore there exists no global optimum.
Let usexamine the phenomenon of schwa deletion underthis multi-objective optimization model forlanguage evolution.
When a vowel is deleted froma word the number of syllables reduces by one.
Forexample, in Table 1, for the second word, Sanskritand Bengali have three syllables, whereas due tothe deletion of a schwa, the Hindi pronunciationhas only two syllables.
Reduction of syllablesimplies shorter time for pronunciation of a word,and hence faster communication.
However,deletion of schwas in certain contexts might resultin a consonant cluster which the native speakersfind very difficult or impossible to pronounce.
Thisbeats the very purpose of schwa deletion, i.e.
theminimization of effort of articulation and therefore,is unacceptable.
The second condition for the ruleproposed by Ohala (section 2) refers to thisconstraint.There are contexts where deletion of schwawould not give rise to inadmissible consonantclusters.
For example, in the Hindi/Bengali wordpari (fairy, /p?ri/ in Hindi), if the first schwa isdeleted, the pronunciation would be /pri/, whichdoes not violate the phonotactic constraints of thelanguages.
The schwa, however, is not deleted,because /p?ri/ and /pri/ are too distinct from eachother to be interpreted as the same word.Moreover, /pri/ is closer to other Hindi words likepriya (favorite, /prij?/).
In this case, the deletion ofschwa reduces the acoustic distinctiveness of theword from other words in the lexicon, whichincreases the probability of misunderstanding, andhence the schwa might not be deleted in such acontext.4 Computational frameworkWe propose the following diachronicexplanation for schwa deletion in IAL.In old IAL none of the schwas are deleted.
Themodern IAL use the script and spellingconventions similar to Sanskrit.
Due to a higherevolutionary pressure on the spoken forms of thelanguages than on the written forms, schwas aredeleted in the pronunciation, but are still present inthe graphemic forms.
The deletion is a slowdiachronic phenomenon, where in order tocommunicate faster, initially the speakersunintentionally deleted the schwas.
Only thosedeletions were acceptable that did not lead to asyllable structure which was too difficult topronounce, learn or understand for the nativespeakers.
Gradually, the pattern of deletion spreadacross the population and over the different itemsin the lexicon.In this section, we describe a computationalframework for modelling the aforementionedhypothesis based on the three optimization criteriastated in the last section.
The aim of the proposedframework is not to validate the hypothesisthrough micro-simulation (Cangelosi and Parisi,2002); rather it tries to predict the schwa deletionpattern based on the optimizations that might haveaffected the deletion of schwas diachronically.
Inthe next section, we present an efficient algorithmfor schwa deletion in IAL, which can beautomatically constructed from this model, withoutthe help of any other evidence.4.1 Basic definitionsAll the unexplained symbols used below standfor their usual meaning in the context of formallanguage theory.
Please refer to (Hopcroft andUllman, 1979) for details.
?g (?p): A finite set of the graphemes 2(phonemes) in the language?g = Vg ?
Cg,  ?p = Vp  ?
Cp2  Graphemes here do not refer to glyphs.
Free vowels and theircorresponding diacritical marks are considered to be the same symbolWhereVg (Vp): Finite set of graphemes (phonemes),which are vowelsCg (Cp): Finite set of graphemes (phonemes),which are consonants.
Semivowels are alsoconsidered as consonants.?
?
Vg is a special symbol that represents schwa.We define,fg2p: ?g ?
?pfg2p is the default mapping of the graphemes tothe phonemes.
This oversimplification is madehere for two reasons.
First, since IAL use aphonetic script, this in general is true3 and second,this assumption does not have any affect on theschwa deletion algorithm.A word w is defined as a 2-tuple <wg, wp>,wherewg ?
?g+ and wp?
?p+A lexicon ?
is the union of all the valid words wof a language.
A grapheme-to-phoneme converteris defined as a function Fg2p: ?g+?
?p+, such that?w < wg, wp >?
?, Fg2p(wg) = wp4.2 Phonotactic constraintsIn order to model the ease of articulation, westart with the modelling of phonotactic constraints.A consonant cluster is a string of the form CpCp+.Phonotactic constraints restrict the presence ofsome of the consonant clusters in the phoneticrepresentation of a word (wp).
At the most genericlevel we can think of a consonant cluster ranking(CCR) function, where ?
is the set of naturalnumbersCCR: Cp+ ?
?The function CCR is independent of anylanguage and every language has a threshold ?CCR,such that a consonant cluster x ?
Cp+ is allowed inthe language if and only ifCCR (x) ?
?CCRWe define two special variants of CCR, O_CCRand C_CCR, which ranks the admissibility of theconsonant clusters at the onset and coda positionsrespectively.
The definition is similar to that ofCCR, and ?OCCR and ?CCCR are the correspondingthreshold values.3 This assumption is not strictly valid since a cluster of consonant might bemapped to a single consonant or a different cluster.The sonority hierarchy (Vennemann, 1988) andmarkedness conditions (Kager, 1999) along withthe physiology of the articulatory mechanism pointtowards the existence of a language independentranking function as hypothesized above.
However,there might be accidental gaps in the list ofadmissible consonant clusters of a language(Ohala, 1983), which can not be explained on thebasis of CCR alone.
Therefore, we define aBoolean function ADM that tell us about theadmissibility of consonant clusters in a language.ADM: Cp+ ?
{0, 1}, such that for s ?
Cp+(ADM (s) = 1) ?
(s is an admissible cluster)In general, we can derive this function fromCCR asADM (s) = sign (?CCR    ?
CCR (s))However, we might have to forcefully convertsome values to 0 due to accidental gaps.4.3 Syllable and SyllabificationWe define a syllable ?
as a regular expression,with the assumption that the nucleus contains asingle vowel.
Thus,?
?
Cp* Vp Cp*The syllabification function SYL maps thephonetic representation wp of a word w to a stringof syllables ?1?2?
?m such that the effort ofarticulation and learning are minimum.We model the effort of articulation using asyllable ranking function SR, which is similar toCCR.SR : Cp*VpCp* ?
?SR is mainly dependent on the structure of thesyllable.
We enumerate the first few terms of thefunction SR.SR (Vp) = 1,  SR (CpVp) = 2SR (CpVpCp) = 3, SR (VpCp) = 4SR (CpCpVp) = 5,  SR (CpCpVpCp) = 6SR (CpCpCpVp) = 7,  SR (CpVpCpCp) = 8For all other possible syllable structures ?
?,SR (??)
> 8Also, for any syllable ?,[O_CCR (onset(?))
>  ?OCCR] ?
[C_CCR (coda(?))
>  ?CCCR] ?
(SR (?)
= ?
)This means that if either the coda or the onset ofa syllable is inadmissible, then the rankingfunction maps the syllable to the highest possiblerank, represented symbolically by the infinity (?
).onset and coda are projection functions that projectthe longest valid prefix and suffix of a syllablerespectively that are elements of  Cp*.We define a syllabification to be valid if all thesyllables are valid (i.e.
strings of the formCp*VpCp*) and every symbol in the word is a partof one and only one syllable in the syllabification.We can define a partial ordering, ?
?, among thepossible valid syllabifications of a given wordbased on SRp such that the syllabification withsmaller number of high ranked syllables ispreferred to one that has more hard (high ranked)syllables.
Now we define SYL (wp) as the set of allpossible syllabifications ?1?2?
?m such that (i)?1?2?
?m is a valid syllabification of  wp and (ii)there exist no other valid syllabification v of wpsuch that v ??
?1?2?
?m.The definitions of syllable and syllabification aremotivated by the markedness conditions (Kager,1999) and experimental results on child languageacquisition (MacNeilage and Davis, 2000), thatshow that some syllables and syllabifications areeasier to learn and pronounce than others.4.4 Acoustic distinctiveness constraintsPerceptual experiments show that speakersalways articulate the onset of the syllables moreclearly and correctly compared to the articulationsof the vowel and the coda (Fosler-Lussier et al1999; Greenberg, 1999).
Therefore, it is likely thatthe hearer distinguish between syllables by payingmore weight to the onset than to the coda.
Acontinuous distance metric D?
might be definedbased on these experimental results, such that theprobability of confusion (interpreting one syllableas another) between two syllables ?
and ?
?increases as the value of D?(?
, ??)
decreases.
Wecan further define an acoustic distance function Dwusing the function D?
, which measures theprobability of confusion between two arbitrarywords in the phonetic domain.In the case of schwa deletion, however, we wantthe acoustic distance between the idealpronunciation (without any schwa deletion) andthe normal pronunciation (with schwa deletion) tobe smaller, so that the word is not confused withother words in the lexicon.
Formally, for thegraphemic representation of a word wg = x1x2 ?xn,Dw(fg2p (x1).fg2p (x2)?
fg2p (xn), Fg2p(wg)) <?critical, where ?critical is the maximum allowabledistance and ?.?
is the concatenation operator.Rather than modelling this as an optimizationcriterion, we reformulate this as a constraint.
Thesimplification in this case serves our purpose.We define, where x ?
CpD?(x.
fg2p(?
), ?)
= 0                  (4a)D?
(?, ?.x) = 0          (4b)For all other cases D?
is infinity (?
), unless thetwo syllables are identical.
(4c)(4a) allows the deletion of a schwa from an opensyllable; (4b) allows the concatenation of aconsonant at the coda position.
This is motivatedby the fact that coda has least distinctiveness(Greenberg, 1999).
(4c) restricts any change at theonset of a syllable or the vowels other than schwa.On the basis of D?
we can define  Dw(wp1, wp2) =0 if and only if there exists an alignment betweenthe sequences SYL (wp1) and SYL (wp2), withpossible gaps (?
or null syllables) such that for allthe corresponding pairs of syllable taken from thetwo sequences, the acoustic distinctiveness (D?
)between them is 0.
Thus, only operations allowedare deletion of a schwa and addition of a consonantat the coda position.
Anything else is forbidden forthe sake of acoustic distinctiveness.We conclude this section by summarizing belowthe salient features of the model by comparing itwith the optimization criteria stated in section 3.?
The functions SR, CCR and its variantsthat rank the phonotactic constraints is a measureof the effort of articulation, learning and theprobability of misunderstanding.
Therefore wewant to minimize it.
However, it has beenmodelled as a constraint (ADM).?
The function SYL is so defined that theefforts of articulation and learning are minimized.?
Dw models the acoustic distinctiveness i.e.the criterion 3c, but it has been reformulated as aconstraint as well.5 The algorithmWe want to define Fg2p for a language givenADM and Dw.
Fg2p should be such that it enablesfaster communication by minimization of syllablesby deletion of schwa.5.1 Formal definitionLet wg be an input sequence of graphemes to thefunction Fg2p.
Let wp ?
?p* be obtained byreplacing all graphemes x in wg by fg2p(x).
Let wp?be obtained by deletion of some (possibly all ornone) of the schwas (fg2p(?))
in wp.
Fg2p(wg) = wp?,if and only if Dw(wp, wp?)
= 0  and (?
vp)[( vp canbe obtained by deleting schwas from  wp) ?
(Dw(wp, vp) = 0) ?
|SYLg(wp?
)| ?
|SYLg(vp)| ]In words it means that among all wp?
obtainableby deletion of some of the schwas from wp, thatrespects both the ADM (phonotactic) and Dw(acoustic distinctiveness) constraints, the one withthe minimum number of syllables is chosen as theoutput of Fg2p.procedure SYL :input: wp, O_CCR, C_CCRoutput:  ?1?2?
?m  //The syllabification1.
Include up to the first vowel in wp in ?12.
If there are 2 consonants c1c2 between thecurrent vowel and the next vowel, include c1 in thecurrent syllable and c2 in the next syllable.3.
If there are 3 consonants c1c2c3 between thecurrent vowel and the next vowel,3.1 if O_CCRp(c2c3)?
?OCCR , include c1 in thecurrent syllable and c2c3 in the next syllable3.2 else if C_CCRp(c1c2)?
?CCCR include c1c2 in thecurrent syllable and c3 in the next syllable3.3 else NO syllabification is possible4.
If there is one or no consonant between thecurrent vowel and the next vowel, terminate thecurrent syllable and begin the next syllable5.
Continue from step 2 till there are symbols notincluded in any syllable.end procedureFigure 1.
Algorithm for syllabification5.2 A greedy strategyFigure 1 describes a linear time algorithm forsyllabification (SYL) that conforms to thedefinition provided in section 4.3.
This uses thefact that the maximum length of allowableconsonant clusters for IAL is three.
Aftersyllabification of wp, we try to greedily delete theschwas so that the constraints specified by 4a, 4band 4c are not violated.
4a states that only a schwawhich is a part of an open syllable (c?, where c ?Cp) can be deleted and 4b states that after schwadeletion,the consonant c is appended to the coda of theprevious syllable.
Therefore, both of them togetherimply schwas in two consecutive syllables cannotbe deleted.
Along with that, the followingconstraints can also be derived from the Dwconstraints (the reasons are omitted due to spaceconstraints):R1.
Schwa of the first syllable cannot be deletedR2.
Schwa cannot be deleted before a consonantcluster.R3.
The word final schwa can always be deletedunless the appending of the penultimateconsonant to the previous syllable results in aninadmissible cluster.R4.
For Bengali, which does not allow complexcodas, schwas cannot be deleted afterconsonant clusters.R5.
A schwa followed by a vowel cannot bedeleted.procedure Fg2p:input: wg , ADMoutput:  wp  //The pronunciation1.
wp?
= fg2p(x1).fg2p (x2)?
fg2p (xn), where wg is<x1x2 ?
xn >2.
Syllabify wp?
using procedure SYL3.
Using rules R1 to R6 and ADM constraints markthe schwas which cannot be deleted as F4.
While traversing the word from right to left4.1 Delete a schwa if it is not marked F4.2 Appended the dangling consonant to thecoda of the adjacent syllable (to the left)4.3 If the adjacent syllable (to the left) has aschwa which is unmarked, mark it F4.4 Go to 4.1 if there are more schwas to the leftof the current position.5.
At the end of step 4 we get the syllabified string ofphonemes <x?1x?2 ?
x?m >, which is the requiredoutputend procedureFigure 2.
Algorithm for schwa deletionWe have the following rule that cannot becaptured by the constraints:R6.
Schwa following a y (pronounced as /j/)cannot be deleted if it is preceded by a highvowel because /j/ is a glide from high vowel toa low/medium vowel (schwa), deletion ofschwa would make the presence of the glideimperceptible.This rule could have been captured by the D?constraints but we state it here as a separate rulefor the sake of simplicity.
Figure 2 describes analgorithm for schwa deletion using the rules above.It is easy to see that the time complexity of thealgorithm is O(|wg|).
Due to limited space, we omitthe proof that the algorithm for Fg2p indeedminimizes the number of syllables withoutviolating the constraints specified by ADM and Dw.However, there might be more than one (precisely2) possible solutions and in that case the algorithmchooses one of the solutions on the basis of thedirection of traversal at step 4.
The right to lefttraversal gives better results (as has beenconfirmed by Ohala, 1983) because the duration ofsyllables reduces towards the end of the word andhence the tendency to delete schwas at the wordfinal position increases.6 Experimental Results and DiscussionsThe algorithm was implemented for Bengali andHindi and tested on a set of words.
Table 2summarizes the results for Hindi (tested on thewords in a pocket dictionary (Hindi-Bangla-English, 2001)).
The algorithm for Bengali wastested on 1000 randomly selected words from acorpus and found to be around 85% accurate.Some of the important features of the algorithmare as follows.?
Efficiency: The algorithm runs in linear timeon the input word length.
It scans the wholeword just twice.
Thus, the hidden constant isalso very small.?
Polymorphemic Words: The algorithm canhandle polymorphemic words, if themorphological information about the word isprovided.
This is because schwa deletion is notcarried across morpheme boundaries.Morphological analyzer for Hindi and Bengaliwere implemented and integrated with thealgorithm.
For Hindi, the results were nearlyperfect (99.89%)Exceptions: For Hindi there was hardly anyexception to the algorithm.
For Bengali, the typesof words that were incorrectly processed by thealgorithm include a class of very frequently used,disyllabic modifier adjectives, certain suffixes,borrowed words from Sanskrit and compoundwords.
In Bengali, the schwa which is retained (asopposed to the predictions by the algorithm) arepronounced as /o/ and not as / ?/.
Since, /o/ is not acentral vowel, deletion of /o/ is marked ascompared to deletion of / ?/ which is unmarked.Transformation of schwa to some non-neutralvowel in Hindi is unknown and therefore, thealgorithm works perfectly for Hindi.Experimental results forHindiTestSize(No.
ofwords)Incorrect resultsAccuracyWithoutMA11095431 96.12%With MA 1109512 99.89%Table 2.
Experimental results for Hindi schwadeletion.
The results are for individual words.
MAstands for Morphological Analysis7 ConclusionIn this paper, we have described thephenomenon of schwa deletion in the IAL andproposed a diachronic explanation for it.
In orderto model the diachronic evolution, we used theconcepts of ease of articulation, ease of learningand acoustic distinctiveness.
We developed acomputational framework, where we reformulatedsome of the optimization criteria as constraints andone of them (the syllable minimization) as thebasic optimization function.
The outcome of this isan efficient and accurate algorithm for solvingschwa deletion in IAL.The contribution of this paper is not just abetter algorithm for schwa deletion, which isnecessary for developing Text-to-speechsynthesizers for IAL, but a new approach based ona constrained optimization framework, motivatedby the diachronic evolution of languages.
A closerlook at the algorithm will reveal that it is not muchdifferent from the schwa deletion rule proposed byOhala (1983).
However, Ohala?s rule was based onpsycholinguistic and empirical observations,whereas we have derived the rule from a set ofvery basic assumptions (minimization of syllablesand certain constraints).
The algorithm itself canprovide an explanation for the phenomenon.It must be mentioned that neither the aim northe findings of this work are meant to propose anew model of language change.
The models andconcepts used here were all present previously andwe have assumed and included some of themdirectly in our model.
Our finding is not a proof ofthose models and can be considered only as afurther validation.
Our only claim here is thatdiachronic clues can help solve importantproblems in computational linguistics and for thiswe provide a computational framework and aspecific example.Some of the questions that we would like toaddress in the future include modelling of optionalschwa deletion in Bengali compound words,evolution of morpho-phonology for Bengali verbsystems, and modelling of dialect diversity usingdiachronic clues.
More realistic, yet manageablecomputational frameworks for holistic or detailedmodelling of language evolution can also be aninteresting area of future research.ReferencesBart de Boer 2000.
Self Organization in VowelSystems.
Journal of Phonetics, 28:441-465Angelo Cangelosi and Domenico Parisi (Eds)2002.
Simulating the Evolution of Language.Springer-Verlag, LondonSuniti K. Chatterji 1926.
The Origin andDevelopment of the Bengali Language.
Rupa andCo.Eric Fosler-Lussier, Steven Greenberg and NMorgan  1999.
Incorporating contextualphonetics into automatic speech recognition.Proc.
Int.
Cong.
Phon.
Sci., San Francisco, pp.611-614.Steven Greenberg 1999.
Speaking in shorthand - Asyllablecentric perspective for understandingpronunciation variation.
Speech Communication,29:159-176.Hindi Bangla English ?
Tribhasa Abhidhaan.
2001Sandhya PublicationJohn E. Hopcroft and Jeffery D. Ullman 1979.Introduction to Automata Theory, Languagesand Computation, Addison-Wesley, USARene Kager 1999.
Optimality Theory.
CambridgeUniversity PressS.
Kaira 1976.
Schwa-deletion in Hindi.
Languageforum (back volumes), Bhari publications, 2 (1)Peter F. MacNeilage and Barbara L. Davis 2000.On the Origin of Internal Structure of WordForms.
Science, 288:527-31B.
G. Misra 1967.
Historical Phonology ofStandard Hindi: Proto Indo European to thepresent.
Cornell University Ph.
D. dissertationManjari Ohala 1977.
The Treatment ofPhonological variation: An example from Hindi.Lingua, 42: 161-76Manjari Ohala.
1983.
Aspects of Hindi Phonology,volume II.
MLBD Series in Linguistics, MotilalBanarsidass, New Delhi.Bhuvana Narasimhan, Richard Sproat and G Kiraz.2001.
Schwa-deletion in Hindi Text-to-SpeechSynthesis.
Workshop on ComputationalLinguistics in South Asian Languages, 21stSALA, KonstanzMartin A. Nowak, Natalia L. Komarova and ParthaNiyogi 2002.
Computational and EvolutionaryAspects of Language, Nature, 417:611-17B.
R. Pray 1970.
Topics in Hindi ?
Urdu grammar.Research Monograph 1, Berkeley: Center forSouth and Southeast Asia Studies, University ofCaliforniaBernard Tranel 1999.
Optional Schwa Deletion: onsyllable economy in French.
FormalPerspectives on Romance Linguistics, Ed.
By J.Mark Authier, Barbar S. Bullock, & Lisa A.Reed.T.
Vennemann 1988.
Preference Laws for SyllableStructures.
Mouton de Gruyter, Berlin
