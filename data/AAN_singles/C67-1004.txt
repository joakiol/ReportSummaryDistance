THE FULCRUM SYNTACTIC  ANALYZERFOR RUSSIANPaul L. GarvinThe Bunker -Ramo CorporationCanoga Park, Californiai.
The Fu lc rum syntactic analyzer is part of a bipartite system foraccomplishing automatic translation f rom Russian into English.A bipartite system is characterized by the fact that it consistsof two major  portions: a machine dictionary and a translationalgorithm.
It differs f rom a tripartite system which consists ofthree major  portions: a machine dictionary, a parsing algorithm,and a separate table of grammatica l  and semantic rules.
In theauthor's opinion, the alleged advantages of a tripartite algorithmturn out to be illusory, whenever in practice the use of a realisticallyextensive grammar ,  and not just a few basic rules, is attempted.The grammar  table then becomes  so complex  that it can no longerbe handled by a simple algorithm.
Then either the algorithm hasto be adapted to the table, which reduces its generality, or asecondary algorithm has to be written which will show the processorthe way  around the table.
The algorithm of a bipartite system isessentially a linguistic pattern recognition algorithm which, insteadof matching portions of sentences against rules stored in a table,directs searches at the different portions of the sentence in orderto identify its grammatica l  pattern.
Thus, the essential character-istic of the algorithm is the sequencing of searches and, in eachsearch subroutine, only as much grammat ica l  information is usedas is appropriate to the \[~articular search.
The rules of the grammarare in fact applied by the algorfthm in a definite order, and a givenrule is~not even called unless the previous searches have led to apoint where its application becomes  necessary.
This means  thatthe highly complex system of rules that makes  up the real g rammarof a language is distributed over a correspondingly complex  algo-rithrn which applies the rules in terms of the ordering that thestructure of the language requires.The Fu lc rum approach is based on two fundamental principles:the concept of the fulcrum and the pass method./L JZ.
The concept of the fulcrum implies the use of key elementswithin the sentence (fulcra) as starting points for the searchesper formed by the algorithm.
This means  that the algorithm, insearching through a sentence, does not simply progress f romword  to word, but in fact "skips" f rom fulcru:m to fulcrum.
Itper forms a little search sequence each time it has reached afulcrum, and goes on to the next fulcrum when this particularsearch is completed.3.
The pass method  means  that not one but several passes are madeat every sentence, each pass designed to identify a particular setof grammat ica l  conditions pertinent to the recognition process.Consequently, each pass has its own set of fulcra and its ownsearch sequences.
The pass method  reflects the orderly pro-gression in which the determination of the structure of the sentenceis made:  first, the sentence components  are identified individually,then the relations between components are established, and finallythe structure of the sentence as a whole is established.
To  eachof these intermediate parsing objectives there corresponds, roughly,a pass or series of passes in the algorithm.
The correspondenceis not exact, because there are many ambiguities and irregularitiesinterfering with the recognition process, and the design of theFu lc rum algorithm reflects these added complexities.4.
The Fu lc rum syntactic analyze~ has been implemented on two levels:(a) an earlier, less sophisticated version called Fu lc rum I, whichhas been fully coded and is now capable of producing experimentaltranslations; (b) a recent more" sophisticated version, calledFu lc rum II, for which detailed plans have been drawn up andwhich, when implemented on a general-purpose computer, will be.capable of producing translations for practical use.
It is expectedthat the complete implementation of the Fu lc rum II will take fourto six years.5.
The major  improvements  in the Fu lc rum II over Fu lc rum I arethe following:a.
The order of passes and individual search operations deviatesfurther f rom the order of descriptive levels than was the casein Fu lc rum I.
This is due to the fact that the new searchpatterns are based primarily on the order in which thegrarn_rnatical information becomes  available to the programrather than the order in which a linguist would prefer topresent his description.b.
The Fu lc rum II uses an iterative principle.
The same setof search operations is used repeatedly to establish the internalstructure of a variety of syntactic units.
Thus, insertedstructures (such as parenthetic expressions) are treated bythe same search operation as entire sentences; clauses ofZ.7.c.different types, such as relative clauses or independentclauses, are likewise treated by essentially the same searchsequence.
A control cycle insures that the different searchsequences are called in the right order so that these differentunits are identified and related to each other appropriately.T/~e heuristic principle of trial and evaluation is appliedthroughout the Fu lc rum II algorithm.
In all parts in theprogram where decisions are not unequivocal, a capabilitywill exist for labeling decisions as provisional trials, so thatthey can be revised later in the program by evaluation routinesbased on information available to the program subsequently.The research principle of the Fu lc rum approach is based on theinterplay of theory and experimentation: by designing an experimentalp rogram based on an initial theoretical conception, this conceptioncan be refined by computer  experiments made possible by theavailability of an experimental translation program at all times.The theoretical basis for the Fu lc rum approach is the DefinitionalMode l  of Language proposed by the author, the methodologicalfoundations are those of the inductive method  developed by theauthor..%O.I .I I .III.O U T L INE .
;0  F,.
IF<U-~G t~4a~lV~ .4I Io S~N T~A~.
T~K9 :%A,~lY~ Y, Z E:B~ a i.~ .
, .
:.~ ~<,;i/t eg"?u~ 531:3ys \]o':r3no::, /~_ .~-}9\[zsupgeDic t ionary  lo0kup</hd'-s.tem?A~-fiszln~ bns  bg\[ibnebi 9"~s a~i~uPre-scan: pa-ra~raph~,namb~4n~; ~le~n%~r~a~ti~f~ao~t~y~graphloalsentence cate,go~ ~d ...-~.-~\[.q'xo~l~ I I  cc~uu:.~l~S~ sd3' 3~aod~uo'~d3~',L/.,O/\[\[: ?5~bO L~C',I~ S'I\[.IS ~lO?8~D~b s't.
gfiV?
f~E;7~o. '
zq  'I.
D e t e r rnin~e~.~Te~t&~ ce' b ~dr~da~s~ e ys  de~n~Zn>_~h-~t~.s  e n te  n c ei s  in ter rogat ive ,  o r  exc lamatory .
Otherwise  leave  un labe led .Z.
A s s ign::g )~ a}n i~at  i t  al<tf.UAC t i~?ir~o ~r~b~ols  ,v, ~omi f \ ] :y r  ~tq  z ~ 3 r~matte  r :, ab59~ ?i,~t-ibr~s, :(c3od~@fi~ \ ]~r~a~r  ~(a~.o=4i~to~ o ~ qwhen net,@~'s&<9"y:\]~ .~\[ci~isjef, s ~J I6~ng;l~i~-gqx9 ~7s \]o ~3l\]ldsIisvsfound s'6~'abal}4iry~ir~r?he~didtiolish-z,~e.oqoxq .gg~u~n~l Io l~boM'~: , .
:~o\[pvgb o_.
'.r~.,3ni o?.
;,.Ju~Ji, n. 9~iI I o  9eoH~ 97~- ano '~,hr~uo l4.
Assign grammatical  functions to  missing words,.?
initi~l~J~aan~es  before last names  (to fo rm appositive nominalblock with last name); include dictionary words ending inhyphen \[flag when necessary \] ..%5.
Prel iminary homograph resolution (include ~eM and KaK,but not commas or ambiguous conjunctions or dashes, norpotential interrogative pronouns, interrogative modifiersand interrogative adverbs) \[flag when necessary\] .Pre - 8 yntaxi.
Se____t unambiguous clause boundaries using the following signals:subordinating conjunctions; relative and interrogative pronouns,modifiers, and adverbs; TO after eca~ and TaK KaK (checkout comma) ,  colons \[flag when necessary\] ; if clauseboundaries are set, label clauses as dependent or independentor relative according to established clause boundary andcheck whether both boundaries' are ready to be set; otherwiseleave unlabeled.
If no clause boundaries are set, treatsentence as single unlabeled clause.Z.
Label qeM after comparatives as potential introducer ofindependent structure \[flag\].4 ~IV.
First processing cycle:' identify inserted structures and paren-thetic structures (including quotes), label them (from dictionary)as to function if possible (potential ap~t ions ,  appositionintroducers, complements, separate ir~serted sentences); thiscycle includes a table lookup and, if the postential inserted structureis not found in the table, calls the main  and final processing sub-routine s.V.
Second processing cycle: process dependent clauses (includingrelative clauses and indirect questions) in sequence, going rightto left by calling the main  processing subroutine.Vl.
Third processing cycle: process independent and unlabeled clausesin sequence, going right to left (or process entire sentence asundivided whole) by calling the main  and final processing sub-routines.MAIN PROCESSING SUBROUTINE,  MPS(detailed syntactic identification)MPS-AMPS-BPrel iminary sequence: coordinate adverbs (semanticcheck); attach ~Ke and Heto adverb, modifier, or pronoun;assign He to nominals, as applicable; package adverbsmo~ing  other adverbs with their heads, creatingadverbial blocks.Nominal  blocking sequenceiFirst subsequence: F rom right to left per form eachstep (1-3) as a separate pass at the clause or sentence.1.
~ adverbs to modifiers or nominals as appropriate(including assignment of B0T to demonstratives),label unattached adverbs.2.
Coordinate modifiers (semantic check), packagemodifie r s modifying other modifie r s (inc ludingcaMBL~ ) with thefr heads \[fla~ .3.
Assign modifier packages to nominals: label unassignedmodifiers; label previously unlabeled un--~ifiednominals an~'personal, relative, and interrogativepronouns for further processing as nominal blocks.Second subsequence: F rom right to left per form thefollowing steps (4-10)in sequence, for each individualunassigned adverb, unassigned modifier, or nominalblock, in a single pass.4.
Resolve genitive ambiguity when re solvable by pre-ceding nominal, but not otherwise; \[flag\].5.
For nominal blocks only; attach prepositionalstructures and coordinate prepositional structuresand appropriate adverbs if attachable to same head(include EaR.
.
.TaR 14 in coordination);; attachgoverned structures including governed clauses;attach genitives of subject and object,, attach otherot--~-~genitive complements  \[ set flagJ ; attachappositions; attach appropriate unassigned modifiers(including Bee, ME; check commas)  and governingmodifier packages set flag when necessary (wipeout "missing mandatory head '' label); coordinategoverning modifier packages when appllc&ble; attachcomplements  and coordinate (include EaR.. '.TAR Min coord.
).6.
Coordinate nominal blocks and unassigned modifiers(wipe out "unassigned" labels for modifiers includedMPS-Cin the coordination), using semantic test; includeappropriate unassigned adverbs in coordination(remove "unassigned" label); include constructions"nominal -~ c ?
nominal" and K ~ M  incoordination \[set flag\].7.
Label  nominal  block or unass igned mod i f ie r  asprepos i t iona l  s t ructure  if thus found; labelnominal  block or unass igned mod i f ie r  a~uat iona ls t ruc ture  (e .g .
, I~aK)  if thus found; ~ un-ass igned  adverb or He to prepos i t iona l  s t ruc turewhen appl icable (wipe out "unass igned"  label);ass ign  apposit ion or apposi t ional  modi f ie r  toprepos i t iona l  s t ruc ture .8.
~ relat ive c lause (using exist ing c lauser ies  as prev ious ly  set) to antecedentnomina l  block; at tach addit ional  coord inatere lat ive c lause s~l i cab le .. Assi n governed structures and complements(including complementary adverbs) to unassignedand/or governing modifiers, coordinate governedstructures and complements  when assignable tomodifiers (including TaK... EaK H in coordination);assign governing modifier package to head if headis~'s-lro'u~d to the right, but not otherwise (wipe out"unassigned" label); indicate missing mandatoryhead.I0.
Assign dependent structure to unassigned comparativemoor  or adverb when the latter is followed byqeM ; assign dependent genitive structure to un-assigned comparative modifier or adverb; assignprepositional structure to unassigned adverb;indicate missing mandatory head.Predicate blocking sequenceAs a general search instruction, do not cross commas,conjunctions, or dashes, except when coordination iscalled in a step.First subsequence: F rom right to left, per form all steps{1-?)
as a single pass at the clause or sentence.i.
Label  inf init ives and gerunds.2.
~ adverbs  to inf init ive or gerund.3.
Assign He, jiM:and reflexive pronoun to infinitiveor gerund; ~ past passive predicative to4.biT 5 and us e government and compleme ntationcodes of past passive predicative in the subsequentsteps; coordinate past passive predicatives whenapplicable and use government and complementationcodes of last past passive predicative in furtherprocessing.Assign objects and complements  to infinitive orgerund block, coordinate governed and comple-mentary prepositional blocks and adverbs whenapplicable (note whether infinitive or gerund cangovern a modifier and in that case wipe out"missing mandatory head" or "unassigned" labelf rom governed modifier); assign previouslypackaged qTO-clauses and indirect questions toinfinitive or gerund.5..Coordinate infinitive or gerund blocks; coordinatepast passive predicative blocks assigr~able to formsof 6hlTB when applicable.Assign infinitive block to previously establishednominal block when applicable.7.
Indicate miss ing  mandatory  c lause  members  whenapp l i cab le .Second subsequence:  F rom r ight  to left,  per fo rm al ls teps  (8-15) as a s ingle pass .8.
Labe l  p red icat ives ;  label  eOTbas spec ia l  type ofp red icat ive .9.
Ass ign  adverbs  to pred icat ive .10.
Assign He,a~,6~ and re f lex ive  pronoun topred icat ive ;  connect  f inite fo rm of 6blTb withpred icat ive .1 1.
Ass ign  ob jects  and complements  to pred icat iveblo--i-6~flag when ambiguous \ ]  , coord inate  governedand complementary  prepositional blocks and adverbswhen assignable to same predicative blocks (notewhether predicative can govern a modifier and inthat case wipe out "missing mandatory head" or"unassigned" label); cancel government code ofcomparative pred icat ive~en in q,eM...TeM clause;assign previously packaged qTO-clauses and indirectquestion clauses to predicative.IZ.
Assign infinitive block to predicative block to fo rmextended predicative block.//IMPS -D13.
Coordinate predicative blocks (semantic check).14.
Find and label subject, or genitive or dative ofreference (semantic check), for predicativeblock (include infinitive block, or qTO-clauseor indirect question as subject, when applicable;do not cross other predicatives in this search).15.
Label clause members  and include them in potentialclause but do not absorb clause ~-undary in potentialclause; revise ad hoc clause packaging done at III;indicate m~ng mandatory  clause members  andche~hether  candidates for these, are not includedin previously completed coordination--if so, revisepackaging.Clause blocking sequenceAs  a general s~arch instruction do not cross commas,conjunctions, or dashes, except when coordination iscilled in a step.i.
Find unattached infinitive blocks and check ford-'~-~e of reference or 6bl , attach the latter toinfinitive block, and label resultant package aspredicative package a~otent ia l  clause, asappropriate.Z.
Check  for missing mandatory  head to modifier andatta-'a-c-~ modifier to head or relabel modifier asnominal, as appropriate; assign unattached adverbs,prepositional blocks and ot-~-er potential complements(including sp~ cial instrumentals) to either nominalto the right or entire clause, as applicable, andcoordinate when applicable (including TaK.
.
.EaE Min coordination); include clause introducers inclause and indicate clause boundary where possibleand not previously indicated.3.
Label previously unlabeled clauses as follows--whether qTO, qeM and ~ introduce indirectquestions; label qTO-clauses that are not indirectquestions as such; label qTO61~-clauses and specialrelative clauses (those separated by semicolons?
)as potential dependent structures, but retain clausestatus for purposes of attaching dependent clausesto them later; label infinitive clauses introducedby ecaH, qTO6N, npe~e ~eM, nepe~ TeM KaK,etc., as  dependent clauses; label clauses containingc onjunc tions and pre dicative s as dependent claus e s ;label clauses containing dative of reference and.
.
.
.
Jin-'~itlve as independent clauses; label clausescontaining 6~ and infinitives as depe-~ent clauses;label clause s containing interrogative pronouns,m~I f ie rs  or adverbs as direct or indirect questions,as applicable;~-labe____l remaining clauses as independentclausesF INAL  PROCESSING SUBROUTINE (FPS):SENTENCE BLOCKING SEQUENCEPer fo rm each step separately f rom right to  left throughclause or sentence.i.Z.4.Resolve dash ambiguity (repeat predicative blockingsequence at MPS-C8 if dash is resolved as predicative).Check  for independent clause; interpret unattached commas,colons, and conjunctions as clause boundaries if surroundedby pote~ntial clauses (include flagged commas in search) orif likely, r{ght boundary of relative clause--if not, checkfor other possible coordinations---and establish status o-i r-coordinated clauses as dependent or independent; resolvestatus of hitherto unassigned H and TO (and similar pa~les ) .unattached dependent clause s to nearest whole clause,eM-clauses to TeM-clauses.5.6.7.Check  functional potential of remaining unassigned structuresand assign if possible.Label inserted structures as potential nominal blocks,appositions, apposition introducers, potential complements,separate clauses or inserted sentences, as applicable.Label unattached independent clause as whole declarativesentence.I0
