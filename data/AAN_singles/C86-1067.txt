A Kana-Kanji Translation Systemfor Non-Segmented Input SentencesBased on Syntactic and Semantic AnalysisMasahiro ABE, Yoshimitsu OOSHIMA,Katsuhiko YUURA and Nobuyuki TAKEICHICentral Research Laboratory, Hitachi,.Ltd.Kokubunji, Tokyo, JapanAbstractThis paper presents a disambiguation approach fortranslating non-segmented-Kana i to Kanji.
The methodconsists of two steps.
In the first step, an input sentence isanalyzed morphologically and ambiguous morphemes arestored in a network form.
In the second step, the bestpath, which is a string of morphemes, is selected bysyntactic and semantic analysis based on case grammar.In order to avoid the combinatorial explosion of possiblepaths, the following heuristic search method is adopted.First, a path that contains the smallest number ofweighted-morphemes is chosen as the quasi-best path by abest-first-search technique.
Next, the restricted range ofmorphemes near the quasi-best path is extracted from themorpheme network to construct preferential paths.An experimental system incorporating largedictionaries has been developed and evaluated.
Atranslation accracy of 90.5% was obtained.
This can beimproved to about 95% by optimizing the dictionaries.1.
INTRODUCTIONOrdinary Japanese sentences are written using acombination of Kana, which are Japanese phonogramiccharacters, and Kanji, which are ideographic Chinesecharacters.
Nouns, verbs and other independent wordsare generally written in Kanji.
On the other hand,dependent words such as postpositons, and auxiliaryverbs, etc., are written in Kana.
While there are aboutfifty Kana, there are several thousand Kanji, thus makingit difficult to input Japanese sentences into a computersystem.Extensive research as been carried out on methodsof inputting Kanji in an attempt to .realize rapid and easyinput.
Among the methods proposed, Kana-Kanjitranslation appears to be the most promising.
In thismethod, input sentences are entered in Kana using aconventional typewriter keyboard, and those parts of thesentences which should be written in Kanji are translatedinto Kanji automatically.
In this process a non-segmentedinput form is desirable for users because there is nocustom of segmentation i writing Japanese sentences.Therefore, the ultimate goal of a Kana-Kanji translationscheme should be to achieve error-free translation fromnon-segmented Kana input sentences.This paper describes a system for achieving highaccuracy in the Kana-Kanji translation of non-segmentedinput kana sentences.1.1 Disambiguat ion Approaches  in Kana-KanjiTranslationIf ambiguity were not a problem in non-segmentedinput Kana sentences, a perfect Kana-Kanji translationcould be easily made using simple transliterationtechniques.
The fact is that the input Kana sentences arehighly ambiguous.
The ambiguity of non-segmentedinput Kana sentences can be categorized into followingtwo types.
(a) The ambiguity of segmentation of a sentence intomorphemes.example(Input Kana sentence) (Output sentence)\[kokodeha iru\] (It's necessary here.
)\[kokode hairu\] (Enter here.
)(b) The ambiguity of homonyms.example(Kana) (Homonyms)~ ~- ~ @ i~i~ (atrain)\[kisha\] (2) N ~J: (your company)@ ~gN (a pressman)@ ~ ~J: (return to office)@ ~ (donate)Makino and Kizawa \[1\] proposed an automaticKana-Kanji translation system in which these two typesof ambiguity are treated separately in different ways: Thesegmentation of input sentences is carried outheuristically by the longest string-matching method oftwo "Bunsetsu".
A Bunsetsu is a Japanese syntactic unitwhich usually consists of an independent word followed bya sequence of dependent words.
After determining thesegmentation of a sentence, suitable words are selectedfrom the homonym set based on a syntactic and semanticanalysis.
In their approach, the ambiguity of thesegmentation is treated without using syntactic andsemantic analysis.The new Kana-Kanji translation method presentedin this paper treats both types of ambiguity in the same280way based on a syntactic and semantic analysis.
In thenew method, translation is performed in two steps.
In thefirst step, the both kinds of ambiguity are detected bymorphological nalysis and are stored in a network form.In the second step the best path, which is a string ofmorphemes, is chosen from the network by syntactic andsemantic analysis based on the case grammar.2.
EXTRACTION OF AMBIGUITY FROM INPUTKANA SENTENCESThis section first describes the method forextracting highly possible ambiguities by morphologicalanalysis, and then describes an efficient data structure forstoring those ambiguities in memory.2.1 Morphological Analysis2.1.1 Morphological characterist ics of JapaneselanguageA Japanese sentence is composed of a string ofBunsetsu, and each Bunsetsu is a string of morphemes.
Ina Bunsetsu the relationship between the preceedingmorpheme and succeeding morpheme is stronglyregulated by grammar.
The grammatical connectabilitybetween morphemes can be easily determined by using agrammatical table in morphological nalysis \[2\].
On theother hand, on the morphological level there is little if anygrammatical restriction between the last morpheme in aBunsetsu and the first morpheme in the followingBunsetsu.
In this sence a compound word is also a seriesof Bunsetsu, each of which contains an independent word.There is no limit to the length of a compound word, andthere are no restrictions in the way words can becombined.
Therefore, since there are a tremendousnumber of compound words, it is almost impossible tocompile a dictionary of these words.2.1.2 Morpheme chain modelThe lack of restrictions on the relationship ofconsecutive Bunsetsu increases the ambiguity ofsegmentation i the morphological analysis.
This isespecailly true if the formation of compound words is notrestricted in some way.
Under these circumstances theresult is often meaningless because compound words aregenerated mechanically.This problem can be solved by introducing theconcept of a statistical model of a morpheme chain.Statistical research in this area \[3\] indicates thatcompound words have some distinct morphologicalcharacteristics:(1) Part of speech: about 90% of morphemes in compoundwords are nouns or their prefixes or suffixes.
(2) Word category: about 7'7% of all morphemes are wordsof foreign origin (Chinese).
(3) Length: About 93% of compound words are 3 to 5 Kanjiin length.These properties can be used to distinguish verylikely candidates for compound words from unlikely ones.Morpheme M can be represented by the property set ( P, C,L ), where P, C and L mean the part of speech, the wordcategory and the length in Kana, respectively.
Acompound word can then be modeled as a morphemechain, and is represented by pairs of the property set.
Thepairs can be classified into three levels according to theprobability of occurrance.
To generalize therepresentation a ull property set ( - , - , - )  is introducedfor the edge of a compound word.
Table 1 is a part of themodel representation.2.1.3 Algorithm of morphological nalysisFigure 1 shows the algorithm for the morphologicalanalysis.
All candidates for dependent words are firstpicked up from input Kana sentences by using a string-matching operation and by examining the grammaticalconnectability between a preceding word and itssuccessor.
This process is executed from right to left,resulting in the generation of subtrees of dependentwords.Next, candidates for independent word are pickedup by string-matching using a word dictionary startingfrom the leftmost character of the input sentence.
ThoseLevel1111223Table 1 Statistical Model of Morpheme ChainM1 M2P C L P C LnounnounnounnounnounnounChineseChineseJapaneseJapaneseChineseChinese-->3-_>-222~3anynounsuffixnounnounsuffixunknownanyChineseChineseChineseJapaneseChiaeseany(*1)~32~322any('1): longest or 2nd longest matching wordsM1 : Preceeding morphemeM2: Succeeding morphemeP: a part of speechC: word categoryL: length in Kana281Begin )?Dependent Word AnalysisI Level 1 Independent Word Analysis IyesLevel 2 Independent Word AnalysisyesLevel 3 Unknown Word.ProcessC at  (End.,)Figure 1 Algorithm for Morphological Analysis.elements which correspond to the level I chain are thenselected.
If the selected independent word adjoins adependent word which has already been extracted in theprevious process, the grammatical connectability betweenthem is also checked.
In this way all independent level 1words that begin from the first column are extracted.
Thecontrol is shifted to the next column of the input sentence.If the current position is the ending edge of the alreadyextracted independent word or its successive dependentword, the same action is taken.
If not, the control movesto the next column without extracting any independentwords.
The control stops when it reaches the end of thesentence after having successfully extracted all level 1independent words or related successive dependent words.If the system fails to extract any words on level 1,the control backtracks to the beginning, and trys againusing level 2 extraction.
On this pass, level 2 independentwords are picked up and tested in the same manner as inlevel 1 extraction.
If the level 2 extraction fails, then anunknown word process, level 3, is invoked, which assumesan unknown word exists in the input sentence and thecontrol skips to the nearest dependent word.
The skippedpart is assumed to be the unknown word.
In this way, thecontrol of the extraction level for independent words basedon a statistical model of morpheme chains enables highlypossible ambiguities in input Kana sentences to beextracted by pruning rare compound words.2.2 Network Representat ion f AmbiguityThe ambiguous morphemes extracted in themorphological nalysis are stored as common data in anetwork form to reduce both storage and processingoverhead.
Figure 2 shows an example of a morphemenetwork.
Each morpheme is represented by an arc.
Bothends of each morpheme are indicated by circles.
A doublecircle corresponds to the end of a Bunsetsu, whereas asingle circle corresponds to the boundary of a morphemein a Bunsetsu.The information for a group of ambiguousmorphemes i represented by the data structure: VTX(Vertex), EDG (Edge) and ABL (AmBiguity List).
TheVTX represents he position of morpheme in a sentence.The EDG represents the common attributes of theambiguous morphemes.
The common attributes are apart of speech, the type of inflection and Kana string.
TheABL represents individual attributes of the morphemes.The individual attributes are the Kanji representation,the meaning code and the word frequency.
An ABL list isreferenced by EDG.
VTX and EDG refer to each other.
AVTX is considered to be shared if the grammaticalrelationship between the preceeding EDG and itssucceeding EDG is the same.
A double circled VTX canusually be shared.Input Kanasentence :2821 2 3 4 5 6 7 8 9verb posp.~ pron.
.
noun~_ nounnoun aux.E 21 -EZ1Figure 2 An Example of a Morpheme Network\[karewakijiwoyonda\](He has read the article.
)exampleVTX EDG VTX0 @pron.
: pronounposp.
: postpositionaux.
: auxiliary verbsufi: suffix3.
SELECTION OF THE MOST SUITABLEMORPHEME STRINGThe second step in the Kana-Kanji translationprocess is divided into two substeps:(1)Extraction of morpheme strings from the morphemenetwork.
(2) Selection of the best morpheme string by syntactic andsemantic analysis.3.1 Extraction of Preferential  PathsEach path, or morpheme string, can be derived bytracing morphemes on the network from the beginning ofthe sentence to the end of the sentence.
In order to avoidthe combinatorial explosion of possible paths, it isnecessary to introduce some heuristics which make itpossible to derive highly possible paths.
This isaccomplished in the following way.
First, a quasi-bestpath is chosen based on the least weighted-morphemenumber using the best-first-search technique \[4\].
Next, arestricted range of morphemes near the quasl-best path isselected fi'om the morpheme network in light of theprobability of ambiguity.3.1.1 Least weighted-morpheme numberThe leasL Bunsetsu number \[5\] is known as aneffective heuristic approach for determining thesegmentation f non-segmented input Kana sentences.
Inthis approach, the segmentation which contains the leastnumber of' Bunsetsu is most likely to be correct.
Theauthors have modified this method to improve thecorrectness of segmentation by changing the countingunit from the number of Bunsetsu to the sum of theweighted morphemes.
The weights of morphemes arebasically defined as 1 for each independent word and 0 foreach dependent word.
Since a Bunsetsu is usuallycomposed of an independent word and some dependentwords, the sum of the weights of a sentence is roughlyequal to the number of Bunsetsu in the sentence.
Whilethe least bunsetsu number ignores the contents of theBunsetsu, the new method evaluates the components ofthe Bunsetsu to achieve more realistic segmentation.
Theweights morphemes were modified based on empiricalstatistical data.
Consequently, some independent wordssuch as Keishikimeisi ( a kind of noun ), Hojodoshi ( a kindof verb ) and Rentaishi ( a kind of particle ) are weighted0.1.
The weight of prefixes and suffixes in compoundTable 2 Morpheme Weighting:part of speechNouns, Verbs, Adjective Verbs,Adverbs, Conjuctions, Interjectionsweight1.0Prefixes, Suffixes I 0.5Keishikimeishij_Hqi0.d.
0ushi, Renta_ishiOthersl 010words is defined 0.5.
Table 2 shows the weight formorphemes.3.1.2 Best-first-search for a quasi-best pathIn Figure 3, VTX(O) and VTX(n) correspond to thebeginning and the end of a sentence, respectively.
EachVTX and each EDG contains a cumulative number ofweighted morphemes beginning from the end of thesentence.
They are represented W(i) for VTX(i) and W(ij)for EDG(ij).
X(ij) is the weight of the EDG(ij).For the VTX(n)W(n) =0 (1)Generally, for EDG(ij)W(ij) -= W(j) -F X(ij) - (2)And for VTX(i)W(i) -- rain {W(ij)~ - (3)JThis means that the minimun W(ij) is selectedamong the EDGs which share VTX(i) on their left side.By repeating (2) and (3), the minimum sum of theweighted-morpheme number can be got as W(O).
Then aquasi-best path which has  a least weighted-morphemenumber can be easily obtained by tracing the minimumW(ij) starting from the VTX(O).
Since the complexity ofthe above process is on an oder of n, the quasi-best pathcan be obtained very efficiently.w(/ j )  -- oW : ?weightF_~gure 3 Best-flrst-searc_h on Morpheme Network3.1.3 Selection of alterna~;ive pathsSince the selected quasi-best path is not always themost suitable one, alternative paths are created near thequasi-best path by combining the restricted range ofambiguous morphemes.
The range is decided by apreferential ambiguity relationship table (See Table 3)which contains typical patterns of segmentationambiguity.
By looking up this table, highly possibleambiguities for morphemes of the quasi-best path can beselected from the morpheme network.3.2 Syntactic and Semantic Analysis3.2.1 A meaning systemA detailed general purpose meaning system isnecessary for Kana-Kanji translation.
The meaningsystem adopted was basically a thesaurus of 32,600 words283Table 3 Preferential Ambiguity Relationquasi The range of alternativebest ambiguous morphemespath n. v. a. a.v.
adv.
posp.n.
0 0 0v.
0 0 0 0a.
0a.v.
0 0adv.
0 0posp.
0 0 0 0 0 0n.
: nouns, v.: verbs, a.: adjectives, a.v.
: adjectiveverbs, adv.
: adverbs, posp.
: postpositionsclassified into 798 categories of 5 levels \[6\].
The systemwas enhanced by adding 11 higher level meaning codescalled macro codes, such as "human", "thing" and "place".Each macro code was made by gathering related meaningcodes in the system.
In the original system, these codesappeared in different categories.
The word dictionarydeveloped for the new system contains 160,000 words.Each word is given a meaning code according to the newmeaning system.3.2.2 Case grammar and case framesCase grammar \[7\] is widely used in naturallanguage processing systems.
It is also useful in Kana-Kanji translation because it can be applied to homonymselection as well as to syntactic analysis.
When used forthis purpose, the case frame must have a high resolvingpower so that it can distinguish a correct sentence fromamong many ambiguous sentences.
The way in which thenew approach achieves high resolving power in caseframes can be summerized as follows:(1) Detailed meaning description in case frames.Each slot in a case frame has a list of meaning codesthat fit for each case.
The meaning codes are writtenin the lowest level of the meaning system except whenhigher meaning codes are preferable.
In special cases,such as when an ideomatic expression is required for acase slot, a word itself is written instead of themeaning code.
(2) Rank specification of cases.Cases are classified into either obligatory or optionalcases.
(3) Multi-case frames for each verb.A case frame is provided corresponding to each usageof a verb.A case frame dictionary of 4,600 verbs wasdeveloped for this system.Table 4 shows an example of case frame description.Each case frame consists of case slots and informationabout the transformation such as voice.
Each case slotcontains the case name, the typical postpositionassociated with the surface structure, the case rankindicator and meaning codes.3.2.3 Pars ing algorithmSyntactic and semantic analysis is performedconcurrently.
Moreover, the homonym selection is madesimultaneously.
The process is basically a pattern-matching of paths with the case frame dictionary and isperformed as follows.
A path is scanned from left to right.Every noun Bunsetsu which depends on a verb in the pathis pushed down to a stack.
Whenever a verb isencountered during scanning, case frame matching iscarried out.
Every combination of noun Bunsetsu andcase slots of the verb are tried and evaluated.
The bestcombination is determined using the following conditions:(1) Coincidence of postpositions.The postposition ofthe noun Bunsetsu must be equal tothe one for the case slot.
(2) Coincidence of meaning code.The meaning code of the noun must be equal to the onefor the case slot.
If the noun has homonyms in ABL, acoincident homonym is selected.
(3) Occupation of obligatory case slots.Higher occupation ofobligatory case slots is preferable.Table 4 An Example of a Case FrameCaseFrame(read #1)NameagentobjectplacetimeCase SlotsRankobligatoryobligatoryoptionaloptionalPostposition\]~ \[ga\]\[wo\]~' \[de\]l: \[nilMeaning Code5.111.31,1.320,1.321,1.3080,1.19,1.17,1.3093035.35.2Type ofTransformation{~ff# 4(Causative #4)~'~ #3(Passive #3)284(4) Total occupation of case slots.To addition to the condition (3), higher total occupationof case slots is preferable.If using the above conditions it is not possible tochoose a single combination, then word frequencyinformation is used.
throughout this process, unmatchednoun Bunsetsu are left in the stack and are assumed todepend on verbs which occur later in the path.
This caseframe matching is repeated everytime a verb isencountered in the path.
The parsing result of the path isobtained when the scanning reaches the end of the path.The same parsing is tried for other paths constructed inthe previous tep.
Then the most suitable path is selectedamong the successfully parsed paths by measuring thedegree of fit for conditions (3) and (4) above.
The result isthe text of the Kana-Kanji translation.4.
EXPERIMENT4.1 System Implementat ionThe experimental system developed by the authorsis shown in Figure 4.
The system consists of threesubsystems: a translation control program, amorphological analysis program and a syntactic andsemantic analysis program.
The total size of the system isabout 35K steps in PL/I.
Two large dictionaries are alsodeveloped: a word dictionary of 160,000 entries and a caseframe dictionary of 4,600 verbs.Morphological, ;---\[ Analysis~_J \[ ProgramTranslation \[ControlProgram \[---1 r - - 1  ~- - - - -~- -~~_\] \[ \[ Syntactic and\[ ~ Semantic/-~-L__~ 7 Analysis\[ Program~ 4  Kana-Kanji Translation System4.2 Exper imenta l  ResultsBoth the upper l imit and the substantial level of theaccuracy of the new Kana-Kanji translation system wasdetermined experimentally.
The upper limit oftranslation accuracy was determined using a set ofbenchmark texts consisting of 9 typical Japanese textsincluding official documents, scientific papers and legaldocuments.
The total number of input characters in thebenchmark text was about ten thousand.
Program errorsand data errors in dictionaries were corrected to as greatan extent as possible.
The accuracy of the system usingthe benchmark texts was 94.9%.
Another set of Japanesetexts was prepared with twenty thousand chracters andthe translation exreriment was repeated.
This time nocorrection of data errors was made during the experiment.The average accuracy was 90.5%, which is the currentlevel of performance ofour system.5.
CONCLUSIONA new disambiguation approach to Kana-kanjitranslation for non-segmented input sentences has beendescribed.
Ambiguitiy is resolved using syntactic andsemantic analysis based on a case grammar.
To avoid acombinatorial explosion of the ambiguity, some heuristicsare introduced.
Large dictionaries were also developed forthe experimental system and both the limit andsubstantial performance of the system were evaluated.The experimental results show that an accuracy of 90.5%is obtainable using this approach, and that the accuracycan be improved to about 95% by optimizing thedictionaries.
Further improvement can be achieved byintroducing context analysis and plagmatic analysis.AcknowledgementsThe authors wish to thank Dr. Mutsuko Kimura,Senior Researcher, Institute of Behavioral Sciences forher help in making the case frame dictionary.
Theauthors are also indebted to Professor Makoto Nagao,Department of Electrical Engineering, Kyoto Universityfor his thoughtful comments and to Dr. Hisashi Horikoshi,Manager, Planning Office, Central Research Laboratory,Hitachi,Ltd., for his constant encouragement throughoutthe course of this work.REFERENCES\[1\] M.Makino and M.Kizawa, "An Automatic TranslationSystem of Non-segmented Kana Sentences into Kanji-Kana Sentences", COLINGS0, pp.
295-302 (1980).\[2\] I.Aizawa and T.Ebara, "Machine Translation Systemof 'Kana' presentations to 'Kanji-Kana' Mixedprentations", NHK.
Tech.
Res., pp.
261-298 (1973).\[3\] O.Hayashi, editor, "Statistical Charts of JapaneseLanguage", Kadokawa Shoten, Tokyo (1982).\[4\] A.Barr, E.A.Feigenbaum, "The Handbook of ArtificialIntelligence Pitman, Vol.1, pp.
58-63 (1981).\[5\] K.Yoshimura, T.Hitaka and S.Yoshida,"Morphological Analysis of Non-marked-off JapaneseSentences by the Least BUNSETSU's NumberMethod", Johoshori, Vol 24.
No.l, pp.
40-46 (1983).\[6\] National Language Research Institue, "Word List bySemantic Principles", Syuei Syuppan, Tokyo (1964).\[7\] C.J.Fillmore, "The Case for Case", in Universals inLinguistic Theory.
Edited by Emmon Bach and RobertT.
Harms, pp.l-90, Holt, Rinehart and Winston,Chicago(1968).285
