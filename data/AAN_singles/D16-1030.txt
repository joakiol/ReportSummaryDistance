Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 307?318,Austin, Texas, November 1-5, 2016. c?2016 Association for Computational LinguisticsTweeTime: A Minimally Supervised Method for Recognizing andNormalizing Time Expressions in TwitterJeniya Tabassum, Alan Ritter and Wei XuComputer Science and EngineeringOhio State University{bintejafar.1,ritter.1492,xu.1265}@osu.eduAbstractWe describe TweeTIME, a temporal taggerfor recognizing and normalizing time expres-sions in Twitter.
Most previous work in so-cial media analysis has to rely on tempo-ral resolvers that are designed for well-editedtext, and therefore suffer from reduced perfor-mance due to domain mismatch.
We present aminimally supervised method that learns fromlarge quantities of unlabeled data and requiresno hand-engineered rules or hand-annotatedtraining corpora.
TweeTIME achieves 0.68 F1score on the end-to-end task of resolving dateexpressions, outperforming a broad range ofstate-of-the-art systems.11 IntroductionTemporal expressions are words or phrases that re-fer to dates, times or durations.
Resolving time ex-pressions is an important task in information ex-traction (IE) that enables downstream applicationssuch as calendars or timelines of events (Derczyn-ski and Gaizauskas, 2013; Do et al, 2012; Rit-ter et al, 2012; Ling and Weld, 2010), knowledgebase population (Ji et al, 2011), information re-trieval (Alonso et al, 2007), automatically schedul-ing meetings from email and more.
Previous work inthis area has applied rule-based systems (Mani andWilson, 2000; Bethard, 2013b; Chambers, 2013)or supervised machine learning on small collectionsof hand-annotated news documents (Angeli et al,2012; Lee et al, 2014).1Our code and data are publicly available at https://github.com/jeniyat/TweeTime.Figure 1: A tweet published on Friday 5/6/2016 that containsthe temporal expression Monday referring to the date of theevent (5/9/2016), which a generic temporal tagger failed to re-solve correctly.Figure 2: A tweet that contains a simple explicit time mentionand an event (Mercury, 5/9/2016) that can be identified by anopen-domain information extraction system.Social media especially contains time-sensitiveinformation and requires accurate temporal anal-ysis, for example, for detecting real-time cyber-security events (Ritter et al, 2015; Chang et al,2016), disease outbreaks (Kanhabua et al, 2012)and extracting personal information (Schwartz et al,2015).
However, most work on social media simplyuses generic temporal resolvers and therefore suffersfrom suboptimal performance.
Recent work on tem-poral resolution focuses primarily on news articlesand clinical texts (UzZaman et al, 2013; Bethardand Savova, 2016).Resolving time expressions in social media is anon-trivial problem.
Besides many spelling varia-tions, time expressions are more likely to refer tofuture dates than in newswire.
For the example in307Figure 1, we need to recognize that Monday refersto the upcoming Monday and not the previous oneto resolve to its correct normalized date (5/9/2016).We also need to identify that the word Sun is not re-ferring to a Sunday in this context.In this paper, we present a new minimally super-vised approach to temporal resolution that requiresno in-domain annotation or hand-crafted rules, in-stead learning from large quantities of unlabeled textin conjunction with a database of known events.
Ourapproach is capable of learning robust time expres-sion models adapted to the informal style of textfound on social media.For popular events, some related tweets (e.g.
Fig-ure 2) may contain explicit or other simple timementions that can be captured by a generic temporaltagger.
An open-domain information extraction sys-tem (Ritter et al, 2012) can then identify events (e.g.
[Mercury, 5/9/2016]) by aggregating those tweets.To automatically generate temporally annotated datafor training, we make the following novel distant su-pervision assumption:2Tweets posted near the time of a knownevent that mention central entities arelikely to contain time expressions that re-fer to the date of the event.Based on this assumption, tweets that contain thesame named entity (e.g.
Figure 1) are heuristicallylabeled as training data.
Each tweet is associatedwith multiple overlapping labels that indicate theday of the week, day of the month, whether the eventis in the past or future and other time properties ofthe event date in relation to the tweet?s creation date.In order to learn a tagger that can recognize temporalexpressions at the word-level, we present a multiple-instance learning approach to model sentence andword-level tags jointly and handle overlapping la-bels.
Using heuristically labeled data and the tem-poral tags predicted by the multiple-instance learn-ing model as input, we then train a log-linear modelthat normalizes time expressions to calendar dates.Building on top of the multiple-instance learn-ing model, we further improve performance using2We focus on resolving dates, arguably the most importantand frequent category of time expressions in social media data,and leave other phenomenon such as times and durations to tra-ditional methods or future work.a missing data model that addresses the problem oferrors introduced during the heuristic labeling pro-cess.
Our best model achieves a 0.68 F1 score whenresolving date mentions in Twitter.
This is a 17%increase over SUTime (Chang and Manning, 2012),outperforming other state-of-the-art time expressionresolvers HeidelTime (Stro?tgen and Gertz, 2013),TempEX (Mani and Wilson, 2000) and UWTime(Lee et al, 2014) as well.
Our approach also pro-duces a confidence score that allows us to trade re-call for precision.
To the best of our knowledge,TweeTIME is the first time resolver designed specif-ically for social media data.3 This is also the firsttime that distant supervision is successfully appliedfor end-to-end temporal recognition and normaliza-tion.
Previous distant supervision approaches (An-geli et al, 2012; Angeli and Uszkoreit, 2013) onlyaddress the normalization problem, assuming goldtime mentions are available at test time.2 System OverviewOur TweeTIME system consists of two major com-ponents as shown in Figure 3:1.
A Temporal Recognizer which identifies timeexpressions (e.g.
Monday) in English text andoutputs 5 different temporal types (described inTable 1) indicating timeline direction, month ofyear, date of month, day of week or no temporalinformation (NA).
It is realized as a multiple-instance learning model, and in an enhancedversion, as a missing data model.2.
A Temporal Normalizer that takes a tweetwith its creation time and temporal expressionstagged by the above step as input, and out-puts their normalized forms (e.g.
Monday ?5/9/2016).
It is a log-linear model that usesboth lexical features and temporal tags.To train these two models without corpora man-ually annotated with time expressions, we leveragea large database of known events as distant super-vision.
The event database is extracted automati-cally from Twitter using the open-domain IE system3The closest work is HeidelTime?s colloquial English ver-sion (Stro?tgen and Gertz, 2012) developed from annotated SMSdata and slang dictionary.
Our TweeTIME significantly outper-forms on Twitter data.308[RECOGNIZER][NORMALIZER][EVENT EXTRACTOR]NERTempExENTITY DATEMercury 5/9/2016?
??
?distantlabelingmodeltraining[EVENT DATABASE](simple time expressions)(more and harder time expressions)LABELS:   DOW=Monday, MOY=MayFigure 3: TweeTIME system diagram of model training.Temporal Types Possible Values (tags)Timeline (TL) past, present, futureDay of Week (DOW) Mon, Tue, .
.
.
, SunDay of Month (DOM) 1, 2, 3, .
.
.
, 31Month of Year (MOY) Jan, Feb, .
.
.
, DecNone (NA) NATable 1: Our Temporal Recognizer can extract five differenttemporal types and assign one of their values to each word of atweet.proposed by Ritter et al (2012).
Each event con-sists of one or more named entities, in addition tothe date on which the event takes place, for exam-ple [Mercury, 5/9/2016].
Tweets are first processedby a Twitter named entity recognizer (Ritter et al,2011), and a generic date resolver (Mani and Wil-son, 2000).
Events are then extracted based on thestrength of association between each named entityand calendar date, as measured by a G2 test on theirco-occurrence counts.
More details of the Event Ex-tractor can be found in Section 5.1.The following two sections describe the details ofour Temporal Recognizer and Temporal Normal-izer separately.3 Distant Supervision for RecognizingTime ExpressionsThe goal of the recognizer is to predict the tempo-ral tag of each word, given a sentence (or a tweet)w = w1, .
.
.
, wn.
We propose a multiple-instancelearning model and a missing data model that arecapable of learning word-level taggers given onlysentence-level labels.Our recognizer module in is built using a databaseof known events as distant supervision.
We assumetweets published around the time of a known eventthat mention a central entity are also likely to containtime expressions referring to the event?s date.
Foreach event, such as [Mercury, 5/9/2016], we gatherall tweets that contain the central entity Mercury andare posted within 7 days of 5/9/2016.
We then la-bel each tweet based on the event date in addition tothe tweet?s creation date.
The sentence-level tempo-ral tags for the tweet in Figure 1 are: TL=future,DOW=Mon, DOM=9, MOY=May.3.1 Multiple-Instance Learning TemporalTagging Model (MultiT)Unlike supervised learning, where labeled instancesare provided to the learner, in multiple instancelearning scenarios (Dietterich et al, 1997), thelearner is only provided with bags of instances la-beled as either positive (where at least one instanceis positive) or all negative.
This is a close match toour problem setting, in which sentences are labeledwith tags that should be assigned to one or morewords.We represent sentences and their labels usinga graphical model that is divided into word-leveland sentence-level variables (as shown in Figure4).
Unlike the standard supervised tagging prob-309z1 z2?Watch Mercury Pass In Front Of Sun Mondayz3 z4 z5 z6 z7 z8t1 t2 tkFigure 4: Multiple-Instance Learning Temporal Tagging Model?
our approach to learn a word-level tagging model given onlysentence-level labels.
In this example a sentence-level vari-able ta = 1 indicates the temporal tag DOW=Mon must bepresent and tb = 1 indicates that the target date is in the future(TL=future).
The multiple instance learning assumption im-plies that at least one word must be tagged with each of thesepresent temporal tags.
For example, ideally after training, themodel will learn to assign z8 to tag a and z1 to tag b.lem, we never directly observe the words?
tags (z =z1, .
.
.
, zn) during learning.
Instead, they are la-tent and we only observe the date of an event men-tioned in the text, from which we derive sentence-level binary variables t = t1, .
.
.
, tk correspondingto temporal tags for the sentence.
Following previ-ous work on multiple-instance learning (Hoffmannet al, 2011a; Xu et al, 2014), we model the connec-tion between sentence-level labels and word-leveltags using a set of deterministic-OR factors ?sent.The overall conditional probability of our modelis defined as:P (t, z|w;?r)= 1Zk?i=1?sent(ti, z)?n?j=1?word(zj , wj)= 1Zk?i=1?sent(ti, z)?n?j=1e?r ?f(zj ,wj)(1)where f(zj , wj) is a feature vector and?sent(ti, z) =????
?1 if ti = true ?
?j : zj = i1 if ti = false ?
?j : zj 6= i0 otherwise(2)We include a standard set of tagging features thatincludes word shape and identity in addition to pre-fixes and suffixes.
To learn parameters ?r of theTemporal Tagger, we maximize the likelihood of thesentence-level heuristic labels conditioned on ob-served words over all tweets in the training corpus.Given a training instance w with label t, the gradientof the conditional log-likelihood with respect to theparameters is:?P (t|w) = ?zP (z|w, t;?r) ?
f(z,w)?
?t,zP (t, z|w;?r) ?
f(z,w) (3)This gradient is the difference of two conditional ex-pectations over the feature vector f: a ?clamped?
ex-pectation that is conditioned on the observed wordsand tags (w, t) and a ?free?
expectation that is onlyconditioned on the words in the text, w, and ignoresthe sentence-level labels.
To make the inferencetractable, we use a Viterbi approximation that re-places the expectations with maximization.
Becauseeach sentence corresponds to more than one tempo-ral tag, the maximization of the ?clamped?
maxi-mization is somewhat challenging to compute.
Weuse the approximate inference algorithm of Hoff-mann et al (2011a), that views inference as aweighted set cover problem, with worst case runningtime (|T | ?
|W |), where |T | is the number of all pos-sible temporal tag values and |W | is the number ofwords in a sentence.3.2 Missing Data Temporal Tagging Model(MiDaT)While the multiple-instance learning assumptionworks well much of the time, it can easily be vio-lated ?
there are many tweets that mention entitiesinvolved in an event but that never explicitly men-tion its date.The missing data modeling approach to weaklysupervised learning proposed by Ritter et.
al.
(2013)addresses this problem by relaxing the hard con-straints of deterministic-OR factors, such as thosedescribed above, as soft constraints.
Our missing-data model for weakly supervised tagging splits thesentence-level variables, t into two parts : m whichrepresents whether a temporal tag is mentioned by atleast one word of the tweet, and t?
which represents310whether a temporal tag can be derived from the eventdate.
A set of pairwise potentials ?
(mj , t?j) are in-troduced that encourage (but don?t strictly require)agreement between mj and t?j , that is:?
(mj , t?j) ={?p, if t?j 6= mj?r, if t?j = mj(4)Here, ?p (Penalty), and ?r (Reward) are param-eters for the MiDaT model.
?p is the penalty forextracting a temporal tag that is not related to theevent-date and ?r is the reward for extracting a tagthat matches the date.During learning, if the local classifier is very con-fident, it is possible for a word to be labeled with atag that is not derived from the event-date, and alsofor a sentence-level tag to be ignored, although ei-ther case will be penalized by the agreement poten-tials, ?
(mj , t?j), in the global objective.
We use alocal-search approach to inference that was empiri-cally demonstrated to nearly always yield exact so-lutions by Ritter et.
al.
(2013).4 A Log-Linear Model for NormalizingTime ExpressionsThe Temporal Normalizer is built using a log-linearmodel which takes the tags t produced by the Tem-poral Recognizer as input and outputs one or moredates mentioned in a tweet.
We formulate date nor-malization as a binary classification problem: givena tweet w published on date dpub, we consider 22candidate target dates (w, dcandl ) such that dcandl =dpub + l, where l = ?10, .
.
.
,?1, 0,+1, .
.
.
,+10,limiting the possible date references that are consid-ered within 10 days before or after the tweet creationdate, in addition to dcandl = null (the tweet does notmention a date).
4 While our basic approach has thelimitation, that it is only able to predict dates within?10 days of the target date, we found that in prac-tice the majority of date references on social mediafall within this window.
Our approach is also able toscore dates outside this range that are generated bytraditional approaches to resolving time expressions,as described in Section 5.3.3.4Although the temporal recognizer is trained with tweetsfrom ?7 days around the event date, we found that extendingthe candidate date range to ?10 days for the temporal normal-izer increased the performance of TweeTIME in the dev set.The normalizer is similarly trained using the eventdatabase as distant supervision.
The probability thata tweet mentions a candidate date is estimated usinga log-linear model:P (dcand|w, dpub) ?
e?n?g(w,dpub,t) (5)where ?n and g are the parameter and feature vectorrespectively in the Temporal Normalizer.
For everytweet and candidate date pair (w, dcandl ), we extractthe following set of features:Temporal Tag Features that indicate whetherthe candidate date agrees with the temporal tagsextracted by the Temporal Recognizer.
Three casescan happen here: The recognizer can extract a tagthat can not be derived from the candidate date;The recognizer can miss a tag derived from thecandidate date; The recognizer can extract a tag thatis derived from the candidate date.Lexical Features that include two types of binaryfeatures from the tweet: 1) Word Tag featuresconsist of conjunctions of words in the tweet andtags associated with the candidate date.
We removeURLs, stop words and punctuation; 2) Word POSfeatures that are the same as above, but includeconjunctions of POS tags, words and temporal tagsderived from the candidate date.Time Difference Features are numerical featuresthat indicate the distance between the creation dateand the candidate date.
They include difference ofday ranges form -10 to 10 and the difference of weekranges from -2 to 2.5 ExperimentsIn the following sub-sections we present experi-mental results on learning to resolve time expres-sions in Twitter using minimal supervision.
We startby describing our dataset, and proceed to presentour results, including a large-scale evaluation onheuristically-labeled data and an evaluation compar-ing against human judgements.5.1 Data CollectionWe collected around 120 million tweets posted in aone year window starting from April 2011 to May2012.
These tweets were automatically annotatedwith named entities, POS tags and TempEx dates(Ritter et al, 2011).311From this automatically-annotated corpus we ex-tract the top 10, 000 events and their correspond-ing dates using the G2 test, which measures thestrength of association between an entity and dateusing the log-likelihood ratio between a model inwhich the entity is conditioned on the date and amodel of independence (Ritter et al, 2012).
Eventsextracted using this approach then simply consistof the highest-scoring entity-date pairs, for example[Mercury, 5/9/2016].After automatically extracting the database ofevents, we next gather all tweets that mention anentity from the list that are also written within ?7days of the event.
These tweets and the dates ofthe known events serve as labeled examples that arelikely to mention a known date.We also include a set of pseudo-negative exam-ples, that are unlikely to refer to any event, by gath-ering a random sample of tweets that do not men-tion any of the top 10, 000 events and where TempExdoes not extract any date.5.2 Large-Scale Heuristic EvaluationWe first evaluate our tagging model, by testing howwell it can predict the heuristically generated labels.As noted in previous work on distant supervision(Mintz et al, 2009a), this type of evaluation usu-ally under-estimates precision, however it providesus with a useful intrinsic measure of performance.In order to provide even coverage of months in thetraining and test set, we divide the twitter corpus into3 subsets based on the mod-5 week of each tweet?screation date.
To train system we use tweets thatare created in 1st, 2nd or 3rd weeks.
To tune pa-rameters of the MiDaT model we used tweets from5th weeks, and to evaluate the performance of thetrained model we used tweets from 4th weeks.Precision Recall F-valueMultiT 0.61 0.21 0.32MiDaT 0.67 0.31 0.42Table 2: Performance comparison of MultiT and MiDaT at pre-dicting heuristically generated tags on the dev set.The performance of the MiDaT model varies withthe penalty and reward parameters.
To find a (near)optimal setting of the values we performed a gridsearch on the dev set and found that a penalty of?25 and reward of 500 works best.
A comparisonof MultiT and MiDaT?s performance at predictingheuristically generated labels is shown in Table 2.The word level tags predicted by the temporal rec-ognizer are used as the input to the temporal normal-izer, which predicts the referenced date from eachtweet.
The overall system?s performance at predict-ing event dates on the automatically generated testset, compared against SUTime, is shown in Table 3.System Prec.
Recall F-valuedev set TweeTIME 0.93 0.69 0.79SUTime 0.89 0.64 0.75test set TweeTIME 0.97 0.94 0.96SUTime 0.85 0.75 0.80Table 3: Performance comparison of TweeTIME and SUTimeat predicting heuristically labeled normalized dates.5.3 Evaluation Against Human JudgementsIn addition to automatically evaluating our taggeron a large corpus of heuristically-labeled tweets,we also evaluate the performance of our taggingand date-resolution models on a random sample oftweets taken from a much later time period, thatwere manually annotated by the authors.5.3.1 Word-Level TagsTo evaluate the performance of the MiDaT-taggerwe randomly selected 50 tweets and labeled eachword with its corresponding tag.
Against this handannotated test set, MiDaT achieves Precision=0.54,Recall=0.45 and F-value=0.49.
A few examples ofword-level tags predicted by MiDaT are shown inTable 4.
We found that because the tags are learnedas latent variables inferred by our model, they some-times don?t line up exactly with our intuitions butstill provide useful predictions, for example in Table4, Christmas is labeled with the tag MOY=dec.5.3.2 End-to-end Date ResolutionTo evaluate the final performance of our systemand compare against existing state-of-the art timeresolvers, we randomly sampled 250 tweets from2014-2016 and manually annotated them with nor-malized dates; note that this is a separate date rangefrom our weakly-labeled training data which is takenfrom 2011-2012.
We use 50 tweets as a develop-ment set and the remaining 200 as a final test set.312Tweets and their corresponding word tags (wordtag)ImNA hellaNA excitedfuture forNA tomorrowfutureKickNA offNA theNA Newfuture Yearfuture RightNA @NA #ClubLacuraNA #FRIDAYfri !NAHOSTEDNA BYNA [[NA DCNA YoungNA FlyNA ]]NA@OxfordTownHallNA ThksNA forNA aNA topNA nightNA atNA ourNA Christmasdec partyNA onNA Fri!friComplimentsNA toNA chef!NA (RoseNA melonNA cantaloupeNA :)NAImNA proudNA toNA sayNA thatNA INA breathedpast theNA sameNA airNA asNA HarryNA onNA Marchmar21,21 2015.NA #KCANA #Vote1DUKNAC?monpresent let?spresent jackNA Tonightpresent willNA bepresent aNA nightNA toNA remember.NATable 4: Example MiDaT tagging output on the test set.Precision Recall F-valueTweeTIME 0.61 0.81 0.70- Day Diff.
0.46 0.72 0.56- Lexical&POS 0.48 0.80 0.60- Week Diff.
0.49 0.85 0.62- Lexical 0.50 0.88 0.64- Temporal Tag 0.57 0.83 0.68Table 5: Feature ablation of the Temporal Resolver by remov-ing each individual feature group from the full set.System Prec.
Recall F-valuedevsetTweeTIME 0.61 0.81 0.70TweeTIME+SU 0.67 0.83 0.74SUTime 0.51 0.86 0.64TempEx 0.58 0.64 0.61HeidelTime 0.57 0.63 0.60UWTime 0.49 0.57 0.53testsetTweeTIME 0.58 0.70 0.63TweeTIME+SU 0.62 0.76 0.68SUTime 0.54 0.64 0.58TempEx 0.56 0.58 0.57HeidelTime 0.43 0.52 0.47UWTime 0.39 0.50 0.44Table 6: Performance comparison of TweeTIME against state-of-the-art temporal taggers.
TweeTIME+SU uses our proposedapproach to system combination, re-scoring output from SU-Time using extracted features and learned parameters fromTweeTIME.We experimented with different feature sets on thedevelopment data.
Feature ablation experiments arepresented in Table 5.The final performance of our system, comparedagainst a range of state-of-the-art time resolvers ispresented in Table 6.
We see that TweeTIME out-0.0 0.2 0.4 0.6 0.8 1.0Recall0.00.20.40.60.81.0Precision TweeTIMESUTimeHeidelTimeTempEXUWTimeFigure 5: Precision and recall at resolving time expressionscompared against human judgements.
TweeTIME achieveshigher precision at comparable recall than other state-of-the-artsystems.performs SUTime, Tempex, HeidelTime (using itsCOLLOQUIAL mode, which is designed for SMStext) and UWTime.
Brief descriptions of each sys-tem can be found in Section 6.5.3.3 System Combination with SUTimeAs our basic TweeTIME system is designed topredict dates within ?10 days of the creation date,it fails when a tweet refers to a date outside thisrange.
To overcome this limitation we append thedate predicted by SUTime in the list of candidatedays.
We then re-rank SUTime?s predictions usingour log-linear model, and include its output as a pre-dicted date if the confidence of our normalizer is suf-ficiently high.5.3.4 Error AnalysisWe manually examined the system outputs andfound 7 typical categories of errors (see examplesin Table 7):313Spelling Variations: 45%Hashtag: 20%Tokenization: 15% Missing Rules: 5%Ambiguity: 15%SUTimeSpelling Variations: 30%Hashtag: 45%Tokenization: 5%Missing Rules: 15%Ambiguity: 5%HeidelTimeOut of Range: 10%Ambiguity: 20%Over?Prediction: 70%TweeTimeFigure 6: Error analyses for different temporal resolversSpelling Variation: Twitter users are very creativein their use of spelling and abbreviations.
For ex-ample, a large number of variations of the word to-morrow can be found in tweets, including 2morrow,2mrw, tmrw, 2mrow and so on.
Previous temporalresolvers often fail in these cases, while TweeTIMEsignificantly reduces such errors.Ambiguity: In many cases, temporal words like Fri-day in the tweet Is it Friday yet?
may not refer toany specific event or date, but are often predicted in-correctly.
Also included in this category are caseswhere the future and past are confused.
For exam-ple, predicting the past Friday, when it is actually thecoming Friday.Missing Rule: Cases where specific temporal key-words, such as April Fools, are not covered by therule-based systems.Tokenization: Traditional systems tend to be verysensitive to incorrect tokenization and have troubleto handle expressions such as 9th-december, May9,2015 or Jan1.
For the following Tweet:JUST IN Delhi high court asks state gov-ernment to submit data on changes in pol-lution level since #OddEven rule cameinto effect on Jan1TweeTIME is able to correctly extract 01/01/2016,whereas HeidelTime, SUTime, TempEX and UW-Time all failed to extract any dates.Hashtag: Hashtags can carry temporal information,for example, #September11.
Only our system that isadapted to social media can resolve these cases.Out of Range: TweeTIME only predicts dateswithin 10 days before or after the tweet.
Time ex-pressions referring to dates outside this range willnot be predicted correctly.
System combination withSUTime (Section 5.3.3) only partially addressed thisproblem.Over-Prediction: Unlike rule-based systems, Twee-TIME has a tendency to over-predict when there isno explicit time expression in the tweets, possiblybecause of the presence of present tense verbs.
Suchmistakes could also happen in some past tense verbs.Because TweeTIME resolves time expressions us-ing a very different approach compared to traditionalmethods, its distribution of errors is quite distinct, asillustrated in Figure 6.6 Related WorkTemporal Resolvers primarily utilize either rule-based or probabilistic approaches.
Notable rule-based systems such as TempEx (Mani and Wil-son, 2000), SUTime (Chang and Manning, 2012)and HeidelTime (Stro?tgen and Gertz, 2013) pro-vide particularly competitive performance comparedto the state-of-the-art machine learning methods.Probabilistic approaches use supervised classifierstrained on in-domain annotated data (Kolomiyetsand Moens, 2010; Bethard, 2013a; Filannino et al,2013) or hybrid with hand-engineered rules (UzZa-man and Allen, 2010; Lee et al, 2014).
UWTime(Lee et al, 2014) is one of the most recent and com-petitive systems and uses Combinatory CategorialGrammar (CCG).Although the recent research challenge TempEval(UzZaman et al, 2013; Bethard and Savova, 2016)offers an evaluation in the clinical domain besidesnewswire, most participants used the provided anno-tated corpus to train supervised models in additionto employing hand-coded rules.
Previous work onadapting temporal taggers primarily focus on scal-ing up to more languages.
HeidelTime was extendedto multilingual (Stro?tgen and Gertz, 2015), collo-quial (SMS) and scientific texts (Stro?tgen and Gertz,2012) using dictionaries and additional in-domain314Error Category Tweet Gold Date Predicted DateSpelling I cant believe tmrw is fri..the week flys by 2015-03-06 None (SUTime, Heidel-Time)Ambiguity RT @Iyaimkatie: Is it Friday yet?????
None 2015-12-04 (TweeTime,SUTime, HeidelTime)Missing Rule #49ers #sanfrancisco 49ers fans should be oh sowary of April Fools pranks 2015-04-01 None (HeidelTime)Tokenization 100000 - still waiting for that reply from 9th-december lmao.
you?re pretty funny and chill 2015-12-09None (SUTime, Heidel-Time)Hashtag RT @arianatotally: Who listening to the #SAT-URDAY #Night w/ @AlexAngelo?I?m loving it.
2015-04-11None (SUTime, Heidel-Time)Out of RangeRT @460km: In memory of Constable ChristineDiotte @rcmpgrcpolice EOW: March 12, 2002#HeroesInLife #HerosEnVie2002-03-12 2015-03-12 (TweeTime)Over-Prediction RT @tinatbh: January 2015: this will be my yearDecember 2015: maybe not.
None 2015-12-08 (TweeTime)Table 7: Representative Examples of System (SUTime, HeidelTime, TweeTIME) Errorsannotated data.
One existing work used distant su-pervision (Angeli et al, 2012; Angeli and Uszko-reit, 2013), but for normalization only, assuminggold time mentions as input.
They used an EM-stylebootstrapping approach and a CKY parser.Distant Supervision has recently become popu-lar in natural language processing.
Much of thework has focused on the task of relation extraction(Craven and Kumlien, 1999; Bunescu and Mooney,2007; Mintz et al, 2009b; Riedel et al, 2010; Hoff-mann et al, 2011b; Nguyen and Moschitti, 2011;Surdeanu et al, 2012; Xu et al, 2013; Ritter et al,2013; Angeli et al, 2014).
Recent work also showsexciting results on extracting named entities (Ritteret al, 2011; Plank et al, 2014), emotions (Purverand Battersby, 2012), sentiment (Marchetti-Bowickand Chambers, 2012), as well as finding evidencein medical publications (Wallace et al, 2016).
Ourwork is closely related to the joint word-sentencemodel that exploits multiple-instance learning forparaphrase identification (Xu et al, 2014) in Twit-ter.7 ConclusionsIn this paper, we showed how to learn time re-solvers from large amounts of unlabeled text, us-ing a database of known events as distant supervi-sion.
We presented a method for learning a word-level temporal tagging models from tweets that areheuristically labeled with only sentence-level labels.This approach was further extended to account forthe case of missing tags, or temporal properties thatare not explicitly mentioned in the text of a tweet.These temporal tags were then combined with a va-riety of other features in a novel date-resolver thatpredicts normalized dates referenced in a Tweet.
Bylearning from large quantities of in-domain data, wewere able to achieve 0.68 F1 score on the end-to-endtime normalization task for social media data, sig-nificantly outperforming SUTime, TempEx, Heidel-Time and UWTime on this challenging dataset fortime normalization.AcknowledgmentsWe would like to thank the anonymous reviewersfor helpful feedback on a previous draft.
This ma-terial is based upon work supported by the NationalScience Foundation under Grant No.
IIS-1464128.Alan Ritter is supported by the Office of the Directorof National Intelligence (ODNI) and the IntelligenceAdvanced Research Projects Activity (IARPA) viathe Air Force Research Laboratory (AFRL) contractnumber FA8750-16-C-0114.
The U.S. Governmentis authorized to reproduce and distribute reprints forGovernmental purposes notwithstanding any copy-right annotation thereon.
Disclaimer: The views andconclusions contained herein are those of the authorsand should not be interpreted as necessarily repre-senting the official policies or endorsements, eitherexpressed or implied, of ODNI, IARPA, AFRL, orthe U.S. Government.315ReferencesOmar Alonso, Michael Gertz, and Ricardo Baeza-Yates.2007.
On the value of temporal information in infor-mation retrieval.
In ACM SIGIR Forum, volume 41,pages 35?41.
ACM.Gabor Angeli and Jakob Uszkoreit.
2013.
Language-independent discriminative parsing of temporal ex-pressions.
In Proceedings of the 51st Annual Meet-ing of the Association for Computational Linguistics(ACL).Gabor Angeli, Christopher D Manning, and Daniel Ju-rafsky.
2012.
Parsing time: Learning to interpret timeexpressions.
In Proceedings of the 2012 Conferenceof the North American Chapter of the Association forComputational Linguistics: Human Language Tech-nologies (NAACL).Gabor Angeli, Julie Tibshirani, Jean Wu, and Christo-pher D Manning.
2014.
Combining distant and partialsupervision for relation extraction.
In Proceedings ofthe 2014 Conference on Empirical Methods in NaturalLanguage Processing (EMNLP).Steven Bethard and Guergana Savova.
2016.
SemEval-2016 Task 12: Clinical TempEval.
In Proceedings ofthe 10th International Workshop on Semantic Evalua-tion (SemEval).Steven Bethard.
2013a.
ClearTK-TimeML: A minimal-ist approach to TempEval 2013.
In Proceedings of theSeventh International Workshop on Semantic Evalua-tion (SemEval).Steven Bethard.
2013b.
A synchronous context freegrammar for time normalization.
In Proceedings ofthe 2013 Conference on Empirical Methods in NaturalLanguage Processing (EMNLP).Razvan C. Bunescu and Raymond J. Mooney.
2007.Learning to extract relations from the Web using min-imal supervision.
In Proceedings of the 45th AnnualMeeting of the Association for Computational Linguis-tics (ACL).Nathanael Chambers.
2013.
NavyTime: Event and timeordering from raw text.
In Proceedings of the 7thInternational Workshop on Semantic Evaluation (Se-mEval).Angel X Chang and Christopher D Manning.
2012.
SU-Time: A library for recognizing and normalizing timeexpressions.
In Proceedings of the 8th InternationalConference on Language Resources and Evaluation(LREC).Ching-Yun Chang, Zhiyang Teng, and Yue Zhang.
2016.Expectation-regulated neural model for event mentionextraction.
Proccedings of the 2016 Conference of theNorth American Chapter of the Association for Com-putational Linguistics: Technologies (NAACL).Mark Craven and Johan Kumlien.
1999.
Constructingbiological knowledge bases by extracting informationfrom text sources.
In Proceedings of the Seventh Inter-national Conference on Intelligent Systems for Molec-ular Biology (ISMB).Leon Derczynski and Robert J Gaizauskas.
2013.
Tem-poral signals help label temporal relations.
In Pro-ceedings of the 51st Annual Meeting of the Associationfor Computational Linguistics (ACL).Thomas G Dietterich, Richard H Lathrop, and Toma?sLozano-Pe?rez.
1997.
Solving the multiple instanceproblem with axis-parallel rectangles.
Artificial intel-ligence, 89(1).Quang Xuan Do, Wei Lu, and Dan Roth.
2012.
Jointinference for event timeline construction.
In Proceed-ings of the 2012 Joint Conference on Empirical Meth-ods in Natural Language Processing and Computa-tional Natural Language Learning (EMNLP).Michele Filannino, Gavin Brown, and Goran Nenadic.2013.
ManTIME: Temporal expression identificationand normalization in the TempEval-3 challenge.
InProceedings of the Seventh International Workshop onSemantic Evaluation (SemEval).Raphael Hoffmann, Congle Zhang, Xiao Ling, LukeZettlemoyer, and Daniel S. Weld.
2011a.
Knowledge-based weak supervision for information extraction ofoverlapping relations.
In The 49th Annual Meetingof the Association for Computational Linguistics: Hu-man Language Technologies (ACL).Raphael Hoffmann, Congle Zhang, Xiao Ling, Luke S.Zettlemoyer, and Daniel S. Weld.
2011b.
Knowledge-based weak supervision for information extraction ofoverlapping relations.
In Proceedings of the 49th An-nual Meeting of the Association for ComputationalLinguistics (ACL).Heng Ji, Ralph Grishman, Hoa Trang Dang, Kira Grif-fitt, and Joe Ellis.
2011.
Overview of the tac 2011knowledge base population track.
In Proceedings ofthe Fourth Text Analysis Conference (TAC).Nattiya Kanhabua, Sara Romano, Avare?
Stewart, andWolfgang Nejdl.
2012.
Supporting temporal analyt-ics for health-related events in microblogs.
In Pro-ceedings of the 21st ACM International Conference onInformation and Knowledge Management (CIKM).Oleksandr Kolomiyets and Marie-Francine Moens.
2010.KUL: Recognition and normalization of temporal ex-pressions.
In Proceedings of the 5th InternationalWorkshop on Semantic Evaluation (SemEval).Kenton Lee, Yoav Artzi, Jesse Dodge, and Luke Zettle-moyer.
2014.
Context-dependent semantic parsingfor time expressions.
In Proceedings of 52nd AnnualMeeting of the Association for Computational Linguis-tics (ACL).316Xiao Ling and Daniel S Weld.
2010.
Temporal infor-mation extraction.
In Proceedings of the 24th AAAIConference on Artificial Intelligence (AAAI).Inderjeet Mani and George Wilson.
2000.
Robust tempo-ral processing of news.
In Proceedings of the 38th An-nual Meeting on Association for Computational Lin-guistics (ACL).Micol Marchetti-Bowick and Nathanael Chambers.2012.
Learning for microblogs with distant supervi-sion: Political forecasting with Twitter.
In Proceed-ings of the 13th Conference of the European Chap-ter of the Association for Computational Linguistics(EACL).Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-sky.
2009a.
Distant supervision for relation extractionwithout labeled data.
In Proceedings of the Joint Con-ference of the Association of Computational Linguis-tics and the International Joint Conference on NaturalLanguage Processing (ACL-IJCNLP).Mike Mintz, Steven Bills, Rion Snow, and Daniel Juraf-sky.
2009b.
Distant supervision for relation extrac-tion without labeled data.
In Proceedigns of the 47thAnnual Meeting of the Association for ComputationalLinguistics and the 4th International Joint Conferenceon Natural Language Processing (ACL).Truc-Vien T. Nguyen and Alessandro Moschitti.
2011.End-to-end relation extraction using distant supervi-sion from external semantic repositories.
In Proceed-ings of the 49th Annual Meeting of the Association forComputational Linguistics (ACL).Barbara Plank, Dirk Hovy, Ryan McDonald, and AndersS?gaard.
2014.
Adapting taggers to twitter with not-so-distant supervision.
pages 1783?1792.Matthew Purver and Stuart Battersby.
2012.
Experi-menting with distant supervision for emotion classi-fication.
In Proceedings of the 13th Conference ofthe European Chapter of the Association for Compu-tational Linguistics (EACL).Sebastian Riedel, Limin Yao, and Andrew McCallum.2010.
Modeling relations and their mentions withoutlabeled text.
In Proceedigns of the European Confer-ence on Machine Learning and Principles and Prac-tice of Knowledge Discovery in Databases (ECML-PKDD).Alan Ritter, Mausam, Sam Clark, and Oren Etzioni.2011.
Named entity recognition in Tweets: An ex-perimental study.
In Proceedings of the Conferenceon Empirical Methods in Natural Language Process-ing (EMNLP).Alan Ritter, Mausam, Oren Etzioni, and Sam Clark.2012.
Open domain event extraction from twitter.
InProceedings of the 18th ACM SIGKDD internationalconference on Knowledge discovery and data mining(KDD).Alan Ritter, Luke Zettlemoyer, Mausam, and Oren Et-zioni.
2013.
Modeling missing data in distant su-pervision for information extraction.
Transactions ofthe Association for Computational Linguistics (TACL),1:367?378.Alan Ritter, Evan Wright, William Casey, and TomMitchell.
2015.
Weakly supervised extraction of com-puter security events from Twitter.
In Proceedings ofthe 24th International Conference on World Wide Web(WWW).H Andrew Schwartz, Greg Park, Maarten Sap, EvanWeingarten, Johannes Eichstaedt, Margaret Kern,Jonah Berger, Martin Seligman, and Lyle Ungar.2015.
Extracting human temporal orientation in Face-book language.
In Proceedings of the 2015 Confer-ence of the North American Chapter of the Associa-tion for Computational Linguistics: Human LanguageTechnologies (NAACL).Jannik Stro?tgen and Michael Gertz.
2012.
Temporaltagging on different domains: Challenges, strategies,and gold standards.
In Proceedings of the 8th Interna-tional Conference on Language Resources and Evalu-ation (LREC).Jannik Stro?tgen and Michael Gertz.
2013.
Multilingualand cross-domain temporal tagging.
Language Re-sources and Evaluation, 47(2):269?298.Jannik Stro?tgen and Michael Gertz.
2015.
A baselinetemporal tagger for all languages.
In Proceedings ofthe 2015 Conference on Empirical Methods in NaturalLanguage Processing (EMNLP).Mihai Surdeanu, Julie Tibshirani, Ramesh Nallapati, andChristopher D. Manning.
2012.
Multi-instance multi-label learning for relation extraction.
In Proceedingsof the 50th Annual Meeting of the Association forComputational Linguistics (ACL).Naushad UzZaman and James F Allen.
2010.
TRIPSand TRIOS system for Tempeval-2: Extracting tem-poral information from text.
In Proceedings of the 5thInternational Workshop on Semantic Evaluation (Se-mEval).Naushad UzZaman, Hector Llorens, James Allen, LeonDerczynski, Marc Verhagen, and James Pustejovsky.2013.
SemEval-2013 Task 1: TEMPEVAL-3: Evalu-ating time expressions, events, and temporal relations.In Proceedings of the 7th International Workshop onSemantic Evaluation (SemEval).Byron C Wallace, Joe?l Kuiper, Aakash Sharma,Mingxi Brian Zhu, and Iain J Marshall.
2016.
Extract-ing PICO sentences from clinical trial reports usingsupervised distant supervision.
Journal of MachineLearning Research (JMLR).Wei Xu, Raphael Hoffmann, Zhao Le, and Ralph Grish-man.
2013.
Filling knowledge base gaps for distant317supervision of relation extraction.
In Proceedings ofthe 51th Annual Meeting of the Association for Com-putational Linguistics (ACL).Wei Xu, Alan Ritter, Chris Callison-Burch, William B.Dolan, and Yangfeng Ji.
2014.
Extracting lexicallydivergent paraphrases from Twitter.
Transactions ofthe Association for Computational Linguistics (TACL),2(1).318
