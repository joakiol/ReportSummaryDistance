COLING 82, Z Horeck)~ (ed.
\]Nor~-Holland Pub~hing Company?
Academ~ 1982UTILISATION DO PARALLELISMEEN TRADUCTION AUTOMATISEE PAR ORDINATEURJ.
Nelson VERASTEGUI C.Ins t i tu t  National Polytechnique de GrenobleGroupe d'Etudes pour la Traductien AutomatiqueB.P.
53 - 38041 Grenoble C~dexFRANCEOn pr~sente un syst6me de transformation de structuresarborescentes adapt~ au traitement para l l~le .
Les structuresde donn~es, appel~es mat, permettent une manipulation a is ledes ambiguTt~s et des choix structuraux.
Les r6gles et gram-maires du syst6me, appel6 STAR-PALE, ~euvent exprimer uncertain nombre d'options de contr61e, de reconnaissance etde transformation.
On donne les id6es de base pourl ' impl~mentation de ce type de syst~mes.INTRODUCTIONLe paral l~l isme pr~sente un grand int~r~t en informatique : c 'es t  un moyen d'aug-menter la puissance des syst~mes de calcul en faisant le maximum de t rava i lpossible simultan~ment ou d'une fagon concurrente.
L 'u t i l i sa t ion  extensive dessys~mes informatiques qui n 'exp lo i tent  pas cette poss ib i l i t~  a 6t~ un grandobstacle au d6veloppement de programmes paral l~les darts tous les  domaines d 'app l i -cation.
Beau?oup de calculs poss~dent un haut degr~ de paral l~l isme qui n 'est  pasexplo i t~ dans les architectures des ordinateurs classiques et les u t i l i sa teurs  deces syst6mes ne peuvent pas vo i r  les effets du paral l~l isme sur la solut ion deleurs probl~mes.
Dans le passe, le paral l~lisme a ~t~ principalement u t i l i s6  auniveau des syst~mes d 'e?p lo i ta t ion ,  af in de pro f i te r  des v~ritables architecturesde mult i t ra i tement ou bien pour simuler ce concept sur des machines classiques.On peut esp~rer que les meil leurs candidats au paral l~l isme sent les processus quiconsomment beaucoup de temps ou qui sent tr~s complexes.
Par consequent, lesdomaines de la traduction automatique, de la reconnaissance de la parole ou desformes et l 'analyse de sc~nes visuel les sent des candidats imm~diats ~ l ' app l i ca -t ion de m~thodes paral l~les ( I ) .Dans cet a r t i c le ,  je donne les principaux r~sultats d'une ~tude sur l 'u t i l i sa t iondu paral l~l isme en traduction automatis~e par ordinateur (T.A.O.
par opposit iontraduction automatique) et qui ont 6t6 pr~sent~s int~gralement dans une th~sede Docteur-lng~nieur en Informatique ~ l ' Ins t i tu t  National Polytechnique deGrenoble (2).Dans ce domaine, on peut appliquer le paral l~l isme de di f f~rentes fa~ons et ~ desniveaux divers.
II y a le  cas tr~s simple de la d iv i s ion  d'un texte ~ traduire enun certain hombre de sous-textes ou paragraphes, qui peuvent ~tre t radui ts  ind~-pendamment les uns des autres.
II y a aussi le cas de ROBRA, qui r~al ise destransformations d'arborescences en para l l~le .
On pourrai t  a jouter encore d'autresexemples, comme la s imultan~t~ possible des di f f~rentes phases de traduct ion,comme l 'analyse morphologique en para l l~le  avec l 'analyse s t ructura le ,  ou lag~n~ration morphologique en para l l~le avec la g~n~ration syntaxique.
Ceci n'ajamais 6t~ r~alis~e dans un syst~me de traduction automatis~e par ordinateur,  maisseulement dans certains compilateurs munis de coroutines (3).
I I ex iste certaine-ment des probl6mes de temps de r~ponse de chacune de ces ~tapes, qui emp~chent une397398 J.N.
VERASTEGUI-CARVAJALr~duction pratique des temps de traduction.
La consultation des dictionnairespourrait ~tre am~lior~e par une recherche simultan~e de plusieurs cha~nes, qui nesont pas des prefixes ni des suffixes les unes des autres, car une organisationparticul i~re des dictionnaires pourrait donner directement ousles prefixes d'unecha~ne sans recourir au parall61isme.Le type de parall~lisme qui nous int~resse en part icul ier  est l 'appl icat ion simul-tan~e de r~gles de r~cr i tu re .
Par exemple, les r~gles R1 et R2 appliqu~es ~ lam.a.t.
0 figure la.
On pourrait dire qu' i l  suf f i t  de d~finir  une seule r~glepart i r  des deux qui veulent s'appliquer en paral l~le, par exemple R3:A(B~C))==A(C,C), et continuer ~ t rava i l l e r  de mani~re s~quentielle, mais l'ensemble der~gles serait trop grand pour consid~rer toutes les possibi l it~s.
D'autre part, i ly a des cas off l 'appl icat ion parall~le n'a pas le m~me ffet que l 'appl icat ions~quentielle, par exemple si R2 s'applique avant RloNous avons voulu faire une approche vers un syst~me de traduction automatis~e dece type sur la base d'une application extensive du parall~lisme.
II s 'agit  en effetd'une extension de ROBRA, un des quatre langages specialists pour la programmationl inguistique du logiciel  de base du laboratoire GETA (4, 5).R1 : A == A ; R2 : B == C 0 : AI A I IB BB C BIC~RI  IIR20 - -  R1----~ A - -  R2----~ AA B/~ C CI IC C(a)(c) (d)BAc G/XHAD E F(f) (g)I A B~CD E F(b)(e)r. A r .~  B .- o/ 4 .~  .
)(h)FIGURE 1PARALLELISME EN TRADUCTION AUTOMATISEE 399Le syst~me propos~ est une extension dans deux sens : i l  permet un contr61e et unpouvoir d'expression plus d~ta i l l~  et d'autre part i l  permet la r~a l i sat ion  debeaucoup plus de travaux en p~ral l~le grace ~ la suppression d'un certa in nombrede res t r i c t ions .Dans une premiere par t ie ,  on d~f in i t  le type de structures manipul~es par le sys-t~me.
Dans une deuxi~me part ie ,  nous pr~sentons les r~gles et grammaires du sys-t~me pour la manipulation de ces structures.
Dans une troisi~me par t ie ,  on montreune m~thode d'impl~mentation pour le syst~me STAR-PALE (Syst~me de Transformationd'ARborescences en PAralI~LE).STRUCTURES A TRANSFORMERL'id~e est de d~f in i r  une structure de donn6es qui so i t ,  en un certa in sens, paral-161e.
Etant donn~ que la structure d'arbre appara~t dans de nombreux syst~mes derepresentation m~tal inguist ique (arbres syntagmatiques, arbres de d~pendance,arbres appl icat ionnels ,  arbres pro jec t i f s  .
.
.
.
), ainsi que presque partout eninformatique, en par t i cu l ie r  dans les langages de programmation, et en alg~bre,nous avons cherch6 une structure pour la manipulation d'arbres qui permette defactor iser  une mul t ip l i c i t~  de r~sultats arborescents.
Nous d6finissons plusieursfonctions et propriQt~s sur cette classe d 'objets  qui peuvent ~tre ut i les  dans leprocessus de transformation.Les multi-arborescences A tranches (m.a.t . )
sont des structures arborescentes quirepr~sentent des fami l les d'arborescences qui ont ~t~ "factor is~es" d'une certainefa~on et qui s'adaptent naturellement ~ la manipulation d'ambigu~t~s.
Dans le cas!e plus simple, on a les  arborescences classiques orient~es te l les  qu'a la f igureIb que l 'on  appelle A une tranche.
S ' i l  y a plus d'une tranche, i l  s 'ag i t  d'arbo-rescences du type pr6c~dent, mais qui portent au moins une feu i l l e  rattach~e ~ unedeuxi6me tranche.
Ces feu i l l es  peuvent ~tre de t ro i s  types : ensemble, l i s te  oupiste.Si c 'est  un ensemble, on trouvera dans une deuxi~me tranche un ensemble d'au moinsdeux multi-arborescences, qui seront affect~es ~ cette feu i l l e  sans ordre sp~c i f i -que.
Les multi-arborescences de type ensemble permettent d'exprimer d'une fa~oncondens~e un ensemble de choix possibles, par exemple Ic et d (e l les sont 6quiva-lentes).
Ceci est int~ressant pour le traitement des ambiguTt~s ou pour l ' app l i ca -t ion des analyseurs "context- f ree" ~ programmation dynamique (6).Si c 'est  une l i s te ,  on aura une s~quence non vide et ordonn~e de mult i -arbores-cences.
Les l i s tes  sont une mani~re commode de manipuler un sous-ensemble de f i l sd'un noeud.
Par exemple f igure le et f (e l les sont ~quivalentes).Si c 'est  une p iste,  on aura une s~quence non vide et ordonn~e de mult i -arbores-cences avec un ~16ment distingu~ appel~ trace, qui permet de mettre en re l ie f  unchemin dans la m.a.t.
Par exemple, le chemin marqu~ par les doubles t ra i t s  surl 'arborescence de la f igure Ig est repr~sent~ dans la f igure lh.
Ce type de struc-ture peut ~tre int~ressant pour l lu t i l i sa t ion  de grammaires pro ject ives.On accepte des multi-arborescences a plusieurs tranches mais avec un hombre f in ide noeuds, et par cons6quent un nombre f in i  de tranches.
II n'y a pas de retourarr i~re entre les di f f~rentes l ia isons inter-tranches de sorte que les bouclessont in terd i tes .
Voir un exemple plus complexe d'une m.a.t .
A 5 tranches dans laf igure 2a.Chaque noeud feu i l l e  qui ne fa i t  pas de r~f~rence ~ d'autres tranches porte uned~coration.
C 'est -~-d i re ,  une structure de donn~es g~n~rale qui peut 6ire compl~-tement manipul~e et d~finie par l 'u t i l i sa teur .
Dans les exemples donn~s, lesle t t res  A, B, C, etc.
sont les d~corations affect~es aux noeud.400 J.N.
VERASTEGUI-CARVAJALNous avons d~f in i t  une s~rie d'op~rateurs sur les m.a.t,  qui permettent de connai-t re ,  entre autres, le type du noeud, son contenu, le nombre d'arbres ou de noeudsrattach6s directement ou indirectement a un noeud donn~, le nombre de f i l s  appa-rents ou v~ritables d'un noeud, le niveau d'un noeud ou distance ~ la racine de lam.a.t ,  et la tranche ~ laquel le  appart ient un noeud.
Nous avons d~f in i t  des re la -tions d'~quivalence et d'ordre entre m.a.t,  et deux op~rateurs (~clatement et fac-to r i sa t ion)  tr6s u t i les  qui permettent de tester  si deux m.a.t ,  sont ~quivalentes.II y a aussi une s~rie d'op~rateurs pour l ' ex t rac t ion  de sous-m.a.t, d'une m.a.t.donn~e qui permettent de trouver,  par exemple, un noeud ou un chemin d'une m.a.t.REGLES ET GRAMMAIRESUne grammaire consiste en un ensemble de r~gles de r~cr i tu re  muni d'une re la t iond'ordre par t ie l ,  qui s 'appl iquent sur une structure ~ transformer.
Dans notre cas,i l  s 'ag i t  d'une multi-arborescence a tranches (m.a.
t . )
.
Les r~gles ont un hautdegr~ imp l i c i te  de paral l~i isme dans la phase de reconnaissance ainsi que dans laphase de transformation.
L'expression de l ' o rdre  re la t i f  entre noeuds fr~res estraff in~e pour permettre un contr61e des choix de patrons et d'images dans lesr6gles.En effet ,  nous avons ~tudi~ des expressions d'ordre pour des ensembles de permuta-tions d'~l~ments d'un ensemble donn~ et nous avons d~fini plusieurs op~rateurs quir6sument bien les diff~rentes possibi l it~s.A !
.
- IN , , I  1 .. .. ,, "  i A 'A.
.
.
.
.
.
.
.
B I P Q ~ ',S "S I GaIbICI ehIiR01:(?,#)(a)R02: (+,+) 0I1I2I3dec(6)='g' 6//~'415R~gles : (1<2)01 /~2 ==I I3 4 dec(4)='g'0I 2A4 35I0I2I3A6< Idec(6) :=dec(4) 1(b)FIGURE 2PARALLI~L1SME N TRADUCTION AUTOMATISI~E 401Soit + l 'op~rateur  bool~en "ou",  a~b l 'o rdre  te l  que a est avant bet  aucun autre~l~ment se trouve entre a e t .b ,  a<b l 'o rdre  te l  que a est avant bet  au moins unautre ~l~ment se trouve entre a et  b. Voici quelques expressions et leur  6quiva-fence en terme d'autres op~rateurs :(a ~ b) ~ (a ?
b + a < b)(a ~b)  z (a ?
b + b < a)(a ~ b) ~ c ~ (a ~ b + b ~ a) ~ c z a ~ b ~ c + c ~ a ~ b + b ~ a ~ c + c m b ~ a(a #b)  ~ c ~ (a < b + b < a) ~ c z a < b ~ c + c < a < b + b < a m c + c < b < a(a < b) ; (c < d) z a < b ~ c < d + c < d ~ a < b+ a< b<c<d+c<d<a < b(a < b) II (c < d) ~ a < b~c < d + a <c  <b <d+a<c<d~b+c<a<b<d +c<a~d<b+c<d~a< bNous d~finissons plus pr~cis~ment le contexte d'une r~gle pour maximiser le para l -l~lisme et ~l iminer le r isque de destruct ion de la s t ructure  arborescente surlaque l le  on t rava i l l e .
Ce contexte,  qui peut ~tre d~termin~ de mani~re stat iquepar le compilateur,  n 'est  pas une nouvelle source de descr ipt ions  d~ta i l l~es  6cr i -tes par l 'u t i l i sa teur  mais une convention nature l le .
D'autre part ,  l ' u t i l i sa teurdispose d'un contr61e sur le paral l~l isme par l 'express ion  d'un ordre de pr io r i t6ssur l ' app l i ca t ion  des r~gles et grammaires.Une r~gle comporte une par t ie  gauche, d i te  "de reconnaissance", et une par t ied ro i te ,  d i te  "de t ransformat ion" .
Dans la par t ie  gauche, on trouve un sch6ma et unpr~dicat sur les valeurs des d~corations associ~es aux noeuds de la m.a~.t.
La par ~~ t e  est const i tu te  d'une m.a.t ,  ima__~et des modi f icat ions  des d~corationsport~es par les noeuds de la m.a~tTTmage.
~our tout  noeud de l~m.a .
t ,  ob je t ,chaque r~gle d6f in i t  une ~num~ration canonique des occurrences possibles de cetter~gle,  enracin~es sur ce noeud, ce qui donne une pr io r i t~  de ces occurrences entree l les  : so i t  p r io r i t~  vers la gauche ou vers la d ro i te ,  ou vers le haut ou vers lebass i  e l les  partent  du m~me niveau ou pas.Un schema est un ensemble de "po ints"  en forme de st ructure  arborescente qui d~f i -n i t~ond i t ions  g~om~triques ou s t ructura les  demand~es aux sous-ensembles denoeuds d'une m.a.t ,  ob je t .
Un sous-ensemble a ins i  cho is i ,  est l i~  ~ l 'ensemble depoints du schema de sorte que a chaque point corresponde un ou plusieurs noeuds dela m.a.t .
Chaque sch6ma peut comporter des sous-sch~mas de d i f f~rents  types parmilesquels ,  les schemas vert icaux et  horizontaux qui servent ~ rep~rer des cheminset des l i s tes  d'une m.a.t .
Une occurrence d'une r~gle est un ensemble de noeudsd'une m.a.t ,  qui V~r i f ie  le sch~pr~dicat  de la r~gle.
Un schema estd iv is~ en deux part ies  : une passive et une autre act ive .
Un point  est ac t i f  sil 'un~ au moins des condit ions suivantes est r~al is~e :- i l  n'appara~t pas dans l ' image ;- i l  change de p~re ou de l i s te  ;- sa d~coration est modifi~e ;- l ' o rdre  de ses f i l s  ou ~l~ments est modifi~ ;- i l  porte un nouveau f i l s  ou ~16ment dans l ' image ;- i l  perd un de ses f i l s  ou ~l~ments.Les points correspondant a des schemas vert icaux ou horizontaux sont tous ac t i f ssi leurs noms n'apparaissent pas dans l ' image.
Tous les  points modif ies par desop~rateurs dans l ' image sont ac t i f .
Un point qui n 'est  pas ac t i f  est pass i f .L'ensemble des points passifs--d-r~nschama est appel~ le contexte.
On ~onc  que,l~contexte  peut ~tre non connexe (au cont ra i re  de ROBRAT~i l  peut atre d~-termin~ statiquement.Dans la f igure  2b, on a une m.a.t ,  compos~ de neuf noeuds, chacun avec une var ia -ble simple comme d~coration associ~e, et  deux r~gles a appl iquer  en paral1~le.
Lar~gle 1 est plus pr io r i ta i re  que la r~gle 2.
S ' i l  y a p lus ieurs occurrences de lar6gle I qui s ' in tersectent  sur un m~me noeud qui est ac t i f  pour les deux, on prend402 J.N.
VERASTEGUI-CARVAJALla plus ~ gauche (?)
et la plus haute (~), et si c '~st  la r~gle 2 on prend la plusdro i te  (?)
et la plus basse (+).
La r~gle 1 contient 3 points act i f s  (1,2,3) et2 points passifs (0,4),  on demande que la valeur du point 4 so i t  "g",  et on veutque les noeuds 4 et 3 soient adjacents dans l ' image.
La r~gle 2 contient 6 pointsact i f s  (0,1,2,4,5,6) et i point passif (3), on demande que les points 6 et 4 soientadjacents et que la valeur du point 6 so i t  "g",  et on veut que la valeur du noeud6 so i t  ~gale A ce l le  du noeud 4 dans l ' image.
Comme on peut le v0i r  dans la f igure2b, ces deux r~gles sont applicables en parall61e sur les noeud 3 et 1 de l ' a rbo -rescence, mais si on les applique darts un ordre s6quentiel ,  seulement une des deuxpourra 6tre u t i l i s~e.Une grammaire est compos~e d'un ensemble de r6gles, muni d'une re la t ion  d'ordrepar t ie l ,  et d'un ensemble d'opt ions de contr61e.
La re la t ion  d'ordre donne unepr io r i t~  d 'app l i ca t ion  aux r~gles en cas de conf l i t  hors des contextes, et lesoptions indiquent la faGon dont ces r~gles seront u t i l i s~es  dans le processus detransformation d'une m.a.t.
La composition de grammaires permet de cr6er des sy__ss-t~mes transformationnels (ST), c 'es t -~-d i re  un ensemble de grammaires structur~en r~seau ou graphe orient~ et ordonn~ qui porte des condit ions de parcours surles arcs et des condit ions d 'app l i cat ion  d'une grammaire sur les noeuds.
Le sys-t~me prend un ST et une m.a.t .
0 et donne comme r~su!tat la m.a.t ,  produite parl ' app l i ca t ion  du ST sur 0o Ceci ~st r~al is~ par unc s~quence d 'app l icat ions  desgrammaires du ST .sur les transformations successives de 0.
Les options de contr61esur les grammaires et les r~seaux essayent entre autres de rendre le syst6me d~ci-dable.
Le syst~me transformationnel le plus simple est cempos6 d'une seule gram-maire avec un pr~dicat toujours vrai comme condit ion de parcours.Soit G une grammaire compos~e des r~gles R1, R2 .
.
.
.
.
Rm et so i t  0 une m.a.t ,  quel ' on  veut transformer par G. Chacune des m r~gles d~f in i t  une conjecture localesur 0 que l ' on  note CLi pour i E (1,m) compos~e des occurrences de la r~gle i dans0.
Si aucune des r6gles n'est appl icable,  alors toutes les CLi seront vides et ler6su l tat  de l ' app l i ca t ion  de G sur 0 est 0, on d i t  qu ' i l  y a eu un nombre depassages ~gal ~ z~ro.
Sinon, un sous-ensemble d'occurrences sera choisi parmi tousI-~--C-\[T~-, tel  qu ' i l  n'y a i t  pas d ' in tersect ions  des part ies actives (hors du contex-te) de chaque occurrence.a(b)FIGURE 3PARALU~LISME EN " TRADUCTION AUTOMATISEE 403I I  d~termine la conjecture globale de chaque r~gle, conjecture sans conf l i t s  avecles autres.
On ap-plique en para l l~le  les transformations indiqu~es ; avec desappels r~cursifs ~ventuels et on retrouve une m.a.t.
O' comme r~sul tat .
Cet ensem-ble d'op~rations est appel~ un passage.
L ' i t~rat ion  contr61~e, par les options dela grammaire, peut continuer jusq -~ 'ar r iv~e dans un ~tat d 'a r r~t ,  avec unem.a.t.
0" comme r~sultat  f ina l ,  apr~s un nombre de passages sup~rieur ou ~galz~ro.REALISATION DE STAR-PALEL' id6e de base est de ne regarder ni les r~gles ni les m.a.t,  comme des ~l~mentspassifs qu'on manipule, mais comme des processus qui coop~rent ~ la r~al i sat iond'une tache commune, l l s  sent donc en communication entre eux et d~veloppent unt rava i l  simultan~.
Des appl icat ions semblables a ce l le -c i  peuvent se trouver en(7, 8).
Cette id le  peut ~tre g~n~ralis~e au niveau des grammaires dans un syst~metransformationnel,  en ajoutant une communication entre les processus qui repr~-sentent les grammaires.Pour chacune des r~gles, on act ive un processus qui sera charg~ de questionner lesnoeuds de la m.a.t,  pour savoir si la r~gle est appl icable ~ cet endro i t ,  c 'est -~-dire s ' i l  ex iste une occurrence de la r~gle enracin~e sur ce point.
I I  y a deux~tapes dans chaque processus : i l  faut reconnaitre un schema dans la structure,puis transformer une part ie  de ce l le -c i .
Chacune de ces ~tapes est fa i te  en paral-l~ le ,  mais on ne commence la transformation que lorsque la reconnaissance globalea 6t6 r~alis~e pour tous les  noeuds et routes les r~gles, en tenant compte de tou-tes les res t r i c t ions  d 'app l icat ion  entre les r~gles, c 'es t -a -d i re  lorsqu'une con-jecture globale est trouv~e.
Par centre, la reconnaissance peut d~marrer pour lepassage suivant des r~gles s ' i l  yen  a, en para l l~ le  avec la transformationpr~c~dente.Pour r~al iser  une transformation, le syst~me ut i l i se  deux principes qui serontd~crits d'une mani~re g~n~rale.
Chaque processus repr~sentant un noeud de lam.a.t,  se trouve dans un ~tat par t i cu l ie r ,  depuis lequel i l  est capable d'envoyeret de recevoir des messages.
Ces messages contr61ent la synchronisation et lechangement d '~tat  de chaque processus.
Le graphe de la f igure 3a i l l us t re  lesposs ib i l i t6s  de t rans i t ions  d '6 ta t  d'un noeud en STAR-PALE.- L '~tat  l ib re  (L) est affect~ aux noeuds de la m.a.t ,  qui sent " inact i f s " ,  so i tparce qu '~ iennent  d 'et re  c r~s  et n'ont pas encore commenc~ l '~tape de recon-naissance ou de transformation, so i t  parce qu ' i l s  viennent de f in i r  une reconnais-sance ou une transformation et qu ' i l s  sent pr~ts ~ recevoir des messages, l l s  ontaussi le r61e de "retransmettre" des messages qui vent en d i rect ion de leursdescendants.- L '~tat  test  (T) indique que le noeud se trouve en t ra in  de d~terminer la conjec-ture locale-des r~gles.
Le r~sul tat  des operations r~alis~es dans cet ~tat d~ter-mine si le noeud se trouve dans la zone d'act ion d'au moins une r~gle appl icable.Si ce n'est  pas le cas, i l  peut se preparer pour le prochain passage de r6gles etpour cela i l  passe a l '~tat  in i t ia l i sa t ion  ( I )~ Autrement, i l  do i t  attendre lad~f in i t ion  de la conjecture ~ passage pour savoir le sort qui lu i  estdestin~.- L '~tat  attente (A) sert ~ la d~termination de la conjecture globale par t ie l le(parce qu oT-on-ne--tient cempte que des conf l i t s  depuis le niveau du noeud vers lebas) par une recherche de conf l i t s  de bas en haut de la m.a.t .
Une fo is  f in iecette operation pour le noeud, i l  passe ~ l '~tat  pr~t (P) de faGon directe ou bienau travers de l '~tat  r~vision (R).- L '6tat  pr~t est un ~tat interm~diaire oQ le noeud.a une conjecture globale par-t ie l le  (ve--rs-le bas) et attend ou bien un message qui lu i  indique qu 'e l le  est bien404 J.N.
VERASTEGU1-CARVAJALd~finit ive, ou des messages indiquant des modifications ~ lui faire avant de passerla transformation.
S ' i l  y a des changements, i l  revient ~ l '~tat  attente en pas-sant par l '~tat  r~vision.
Sinon, une fois connue la conjecture g lob~in i t i ve ,i l  change d'~tat pou-~ phase de transformation.
II passe dans l '~tat  m~tamorphose(M) s ' i l  participe d'une faGon active aux changements, et sinon difectement dansl '~tat  in i t ia l isat ion.- L'6tat r~vision sert ~ constater des modifications de la conjecture globale par-t ie l le  d u ~  un moment donn~.
II s 'agit  d'un ~tat interm~diaire t obligatoiFedans les deux sens entre les ~tats pr6__~t et attente, en cas de "retour arri~re"jusqu'~ ce dernier .- L '~tat  m~tamorphose est r~serv~ aux noeuds racines des r6gles appl icables.
Cesnoeuds seront charges d 'e f fectuer  la transformation.
Un noeud dans cet ~tat a led ro i t  de c r ie r  ou de supprimer d'autres noeuds et de modif ier leurs d~corations.I I  peut s' "autosupprimer" ~ la f in  de la transformation si c 'est  n~cessaire, sinoni l  passe ~ l '~tat  in i t ia l i sa t ion ,- L'~tat in i t ia l i sat ion est un ~tat d'attente d'autorisation d 'a l ler  au passagesuivant de r~gles.
~f fe t ,  un noeud dans cet ~tat peut encore #tre supprim~.Dans ce cas, i l  passe a l '~tat  suppression (S), sinon, i l  arrive a l '~tat  l ibrepour un nouveau passage de r~gles.
Le cycle est ainsi fermi.- L '~tat  suRpression est un ~tat f ina l  o~ un noeud est maintenu pour indiquer lenom du noeu~ qui- le remplace, ou simplement pour noter qu ' i l  ne do l t  plus ~tre prisen compte.
Une fo is  qu ' i l  ne sera plus n~cessaire, i l  pourra ~tre ~limin~ r~e l le -ment, en l ib~rant  la place occup~e.Les messages repr~sentent des signaux ou des questions et peuvent produire deschangements d'~tat des destinataires.
Nous avons d~finit 13 types de messages :reconnaissance, d~part, confirmation, refus, prevention, reconfiguration, modifica-tion, pas de modification, ordre de transformation, suppression, nouveau nom,identif ication et f in de transformation.
Le syst~me de communication des messagesse comporte de sorte que, lorsqu'un noeud envoie plusieurs messages a un m~me noeud,i ls  seront reGus par le destinataire dans le m~me ordre que celui dans lequel i lsont ~t~ exp~di~s.Nous avons pu constater en faisant des transformations avec cette m~thode que lesdiff~rents processus peuvent t ravai l ler  en parall~le et en synchronisation avec unebonne performance.
Ceci peut ~tre visualis~ a l 'a ide d'un graphe de messages (voirfigure 3b qui est une partie du graphe correspondant a l 'appl ication des r~gles dela figure 2b)oO chaque noeud repr~sente un message et un arc du noeud i au noeud jindique que le message i precede le message j .
Par cons#quent, tousles messagessur la m~me colonne sont susceptibles d'etre envoy~s en parall~le et les diff#rentstravaux r~alis~s entre temps peuvent ~tre executes simultan~ment.CONCLUSION- Le syst~me pr~sent~ i c ies t  plus puissant et plus g~n~ral que ROBRA.
I I  s 'ag i td'un syst~me de transformation de structures arborescentes qui permet une exp lo i -ta t ion  du paral l~l isme ~ des niveaux d ivers ,  depuis la d~f in i t ion  de la structurede donn~es jusqu'aux contr61es d 'app l i ca t ion  de r6gles et de grammaires.
Le paral-l~lisme peut ~tre applique, m~me au niveau de la manipulation de d~corations.
Dem~me, on a le  cas des d ict ionnaires  qui implique aussi des recherches 6ventuellesen para l l~ le .- Les phases de reconnaissance et de transformation sont susceptibles d'ut~liserle parall~lisme, ~ cause des expressions d'ordre et de l'usage de priorit~s hori-zontales et verticales, ce qui permet en effet la description de plusieurs possi-b i l i t~s avec une seule r~gle.s ?PARALLELISME EN TRADUCTION AUTOMATISEE 405- Les syst~mes transformationnels munis de plusieurs points d'entr@e, et desoptions de contr61e, permettent le test de dif f~rentes strat@gies en para l l~ le ,  laproduction de diff@rents r@sultats et leurs comparaisons en parall@le, ou larecherche non-d~terministe d'une ou plusieurs solutions.- Le fa i t  d 'avo i r  la poss ib i l i t~ de m.a.t,  d'entr@e et de sort ie  de type l i s te  ouarbre, ainsi que l ' i n t roduct ion  de d ict ionnaires,  laisse supposer qu'un syst~mecomme STAR-PALE pourrait  remplacer non seulement ROBRA mais aussi ATEF et SYGMOR(deux autres sous-syst~mes du laborato i re GETA) (5).- L'@tude d'une m@thodologie d'impl~mentation a permis de d@finir un algorithmed'appl icat ion de r~gles en paral l~le qui a St@ test~ sur des petites arborescences.Son comportement do i t  @tre @tudi@ d'une fagon th~orique et pratique.
II est int~-ressant de vo i r  les gains d'un tel  syst~me en fonction du nombre de processeursdisponibles et de la ta i l l e  de la m.a.t,  a transformer.L'importance d'une ~tude de cette nature est grande du point de vue pratique etth~orique.REFERENCES( I )  R.D.
Fennell et V.R.
Lesser, "Parall@lisme in AI problem solving.
A case studyof Hearsay I I " ,  ( in) Working Papers in Speech Recognition IV.
the HEARSAY I Isystem, Carnegie Mellon University,  Computer Science Speech Group, February,1976.
(2) J.N.
V@rast@gui-Carvajal, "Etude du parall@lisme appliqu~ ~ la traductionautomatique.
STAR-PALE : un syst@me para l l~ le" ,  th@se Docteur-lng~nieur, INPG,Grenoble, 1982.
(3) J.P. Banatre, J.P. Routeau et L. T r i l l i ng ,  "An Event-driven Compiling Techni-que", CACM, Vol.
22, N ?
I ,  Jan. 1979, pp 34-42.
(4) Ch.
Boitet ,  P. Guillaume et M. Qu~zel-Ambrunaz, "Manipulation d'arborescenceset parall@lisme : Syst~me ROBRA", Communication pr@sent~e a COLING 78(14-18 aoOt 1978), Bergen.
(5) J. Chauch~, "Transducteurs et Arborescences.
Etude et r@alisation de syst~mesappliques aux grammaires transformationnel les",  th@se d 'Etat ,  Universit@ deGrenoble, 1974.
(6) J. Earley, "An e f f i c ient  context-free parsing algorithm", CACM, Vol.
13, N ?
2,F~vrier 1970, pp 94-102.
(7) J.L.W.
Kessels, "A Conceptual Framework for a Nonprocedural Programming Lan-guage",'CACM, Dec. 1977, Vol.
20, N ?
12, pp 906-913.
(8) D.S.
Hirschberg, "Paral lel  Algorithms for the Transit ive Closure and theConnected Component Problem", Proc.
8th annual ACM Symp.
on theory ofComputing, Hershey, Pa., may 1976, pp 55-57.
