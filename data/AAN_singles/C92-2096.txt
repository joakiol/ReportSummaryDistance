GENERATING COHERENT ARGUMENTATIVE PARAGRAPHSMichael ElhadadDepartment of Computer Science450 Computer Science BuildingColmnbia UniversityNew York, N.Y. 10027ELHADAD@ CS .COLUMBIA.EDUAbstractWe address the problem of generating a coherentparagraph presenting arguments for a conclusion in atext generation system.
Existing text planning tech-niques are not appropriate lor this task for two mainreasons: they do not explain how arguments can belinked together in a linear presentation rder and they donot explain how the rhetorical function of a propositionaffects its wording.We present a mechanism to generate argumentativeparagraphs where argumentative relations constrain otonly the rhetorical structure of the paragraph, but alsothe surface form of each proposition.
In our approach, atext planner elies on a set of specific argumentativerelations to extract information from the knowledgebase, to map it to scalar and context dependent evalua-tions and to organize it into chains of arguments.
Thesame information used for planning is also used by thesurface realization component to perform lexical choiceat all the levels of the clause (connectives, main verb,adverbial adjuncts, adjectives and determiners).
Themechanism is implemented in the ADVISOR I1 systemusing ~F,  an extended functional unification formalism.INTRODUCTION:  MOTIVAT IONCeaain types of questions require in response a state-ment of a conclusion and arguments osupport i .
In ourdomain, a question-answeting system offering advice tostudents selecting classes to plan their schedule(McKeown, 1988), should-questions, e.g., should I takeAI?, fall into this class.
The example shown in Figure I,extracted from a corpus of naturally occurring advisingsessions that we have collected, illustrates this point.The task we consider is that of generating similarargumentative paragraphs presenting an evaluation of acourse and its supporting arguments.
To produce suchparagraphs, a generation system must determine whicharguments o include in the paragraph, ow to organizethem in a structured Immgraph, and how to phrase achpiece of the argument.
For example in Figure 1, theadvisor selects the argument chain that AI providespreparation for all followup courses in the field, that themore the student is interested in AI the more he shouldtake these followup courses and therefore, the morereason he has to take AI.
This sequence of argamentsforms the structure of the answer.In terms of wording, note that the conclusion that isQ Should I take AI this semester?A ~ you want to take courses likeNatural Language Processing orExpert S~stems or Vis ionnext semester,it's very advisab~ you take AI nowbecausethat's going to ~ you a l o;.So ~ you are interestedin the whole f ield at all,I would advise you strong~to take AI now.Figure 1: An argumentative paragraphsupported affects the choice of expressions at manylevels.
We have marked in italics words that are selectedin part because of the argumentative function of theproposition i  which they appear.
For example, saying itis very advisable as opposed to it is OK, deciding to addstrongly and selecting a lot instead of somewhat are alldecisions motivated by the advisor's goal of convincingthe student to take AI.In previous work in text generation, rhetoricalschemas (McKeown, 1985) and RST (rhetorical struc-lure theory) (Mann & Thompson, 1987) have beenproposed as operational techniques to produce coherentparagraphs.
We have found, however, that these tech-niques, in their current forms, are not appropriate oad-dress the task of generating argumentative paragraphsfor two main reasons: first, RST relations are too geneticto perform argument selection and construct coherent ar-gument chains; second, rhetorical relations in boththeories do not influence directly linguistic realizationand therefore cannot determine wording decisions of thetype illustrated inFigure 1.We present in this paper a mechanism for planningand realizing argumentative t, aragraphs which addressesthese two shortcomings.
In our approach, specific ar-gumentative r lations guide both content planning andiexieal choice within the clause.
Content planning isperformed using two levels of argumentative relations -evaluation functions and topoi (Anscombre & Ducrot,1983) to derive content from the underlying knowledgebase and organize it into coherent argumentative chains.Surface realization takes advantage of the output of theparagraph stracturer to perform lexical choice at alllevels of the clause.ACRES DE COLING-92, NANTES, 23-28 hol\]'r 1992 6 3 8 PRoc.
OF COLING-92, NAm'ES, AUG. 23-28, 1992In the rest of the paper, we first review previouswork in paragraph planning, explaining why existingtechaiques cannot be used directly in the case of ar-gumentative paragraphs.
We then present our approach,describing file content planner and the surface realizationcomponent.PREVIOUS WORK:  SCHEMAS AND RS FIn previous work in text generation, two methodshave emerged to generate coherent paragraph-long texts:rhetorical schemas and RST (for Rhetorical StructureTheory).Schemas (McKeown, 1985) encode conventional pat-terns of text StlUCture.
A schema is associated with acommunicative goal and describes how this goal is con-ventionally satisfied.
For example, the constituencyschema is used to describe the parts of an object, and theprocess chema (Paris, 1987) is nsed to describe a com-plex process.
A schema describes a sequence ofrhetorical predicates where each predicate is either aprimitive communicative function, which can be full'diedby a single proposition, or rectursively another schema.For example the primitive predicate attributive attributesa property to an object.
Each predicate is assigned asemantics in terms of a query to a knowledge base,therefore when the schema is traversed, prepositions areretrieved from the knowledge base as predicates are in-stantiated.
The output of a schema traversal is thereforea sequence of propositions labeled by the name of therhetorical predicate they instantiate.While schemas label each proposition as the instan-tiation of a predicate, RST attempts to label the relationbetween propositions.
RST (Mann & Thompson,1987) was t-u'st introduced as a descriptive theory aimingat enmnerating possible rhetodcal relations between dis-course segments.
RST relations include elaboration,anti-thesis, evidence and solutionhood.
A relation con-nects two text spans, which can be either single proposi-tions or recursively embedded rhetorical relations.
Oneurgument of the relation is marked as its "nucleus'"while the others are the "satellites" and are all optional.RST was made operational s a technique for plan-ning the structure of paragraphs in (Hovy, 1988a) and(Moore & Paris, 1989).
The idea is to attach a com-manicative intent with each RST relation and to view thecombining of relations into paragraphs as a planningprocess, decomposing a high-level intention into lower-level goals that eventually can be mapped to singlepropositions.
The communicative goals associated withthe leaves of the structure are then used to retrieve thecontent of each proposition fi'om an underlyingknowledge base.
By making the intentional structure ofa paragraph explicit, this work follows the discoursestructure theory advanced in (Grosz & Sidner, 1986).Note also that, since in RST with planning, the structureof paragraphs i dynamically derived, it is possible toview schemas as the compilation of RST configurationswith some information abswacted out, as pointed out in(Mann, 1987).We found that schemas and RST were not ap-propriate for planning and generating argumentativeparagraphs because argument selection cannot be easilyperformed.
Among the types of relations enumerated inRST, only two would apply to the analysis of argumen-tative paragraphs: evidence and thesis-antithesis.
Ifthese relations were to be composed into a paragraphstructure, they would yield a chain of undistinguishedevidence links.
To determine which propositions canserve as arguments and how to order them, one needs tospecify precisely how arguments in the domain combineand relate to a conclusion.
An RST type of approaclicannot be used alone to plan the content of an argumen-tative paragraph.
Schemas uffer from the same limita-tion.In place of a generic relation like evidence, we usespecific argumentative relations called topoi (Anscombre& Ducrot, 1983), e.g., the more a class is difficult, theless a student wants to take it, to perform content selec-tion.
The mechanism is detaiUed later in the paper.Rhetorical  Relations and Lexical ChoiceWhile rhettwical schemas or RST have been used todetermine the content of the paragraph and the orderingof the ~opositions, they have not been used to determinethe surface form of the clause.
We have found, however,that in argumentative paragraphs, the rhetorical functionof a proposition affects its wording at many levels.
Con-sider the following utterances, extracted from our cor-pus:(1) It requires quite a lot of prograrmning(2) It does involve some programming, but nothingoutrageous.Our contention is that either (1) or (2) can begenerated from the same content as input, but that thedifference between the two forms is determined by theargumentative function of the clause: (1) supports theconclusion that a course should not be taken because itrequires a lot of programming, which is time consumingand therefore makes the course difficult.
In contrast, (2)supports the conclusion that the level of programmingshould not affect he decision whether to take the course.The amount of programming involved in a coursecan be quantified by considering how many program-ming assignments are required and the number of pro-gramming projects.
The question is then, given this in-formation, how to describe this information to a student:what level constitutes some programming, quite a lot ofprogramming or a not outrageous amount ofprogramming?Our position is that the mapping from the objectiveinformation that a course requires two programming as-signments to an evaluation that it requires someprogramming isonly partially determined by the content.It is also and over all a rhetorical decision.
It is becausewe want to suppea certain conclusion that we view andAct,s DE COLING-92.
NAI'CfES.
23-28 AOI\]T 1992 6 3 9 PROC.
OF COLING-92.
NANTES, AUO.
23-28.
1992evaluate an objective quantity as a lot or some.In addition, by looking back at examples (1) and (2),we find that this rhetorical decision also affects thechoice of the main verb: the course requires program-ming when the evaluation of the course is negative,while it involves programming when the evaluation ispositive.
In (Hovy, 1988b), similar issues of lexicalchoice were also addressed, but different mechanismswere used to perform lexical choice and paragraph or-ganization.This is an instance of the general problem of expres-sibility discussed in (Meteer, 1990): RST and schemas intheir current form do not bridge the gap between rhetori-cal relations and surface realization, and as a con-sequence, surface realization cannot ake advantage ofthe paragraph organization tomake decisions.In earlier work, we have studied the problem ofgenerating certain connectives like but, although,because or since (Elhadad & McKeown, 1990) and ofgenerating adjectives (Elhadad, 1991).
In both cases, wehave found that argumentative features play an importantrole in the selection of appropriate wording.
The impor-tam point, is that the same argumentative features couldbe used to constrain both the choice of connectivesbetween the clause and the choice of adjectives withinthe clause.
The particular argumentative features we useare inspired from work by (Anscombre & Ducrot, 1983),(Bruxelles et al 1989) and (Broxdles & Raccah, 1991).In this paper, we show how these argumentative featurescan be generated by a paragraph structurer, and thereforeserve as a bridge between the rhetorical function of aclause and its surface realization.OUR APPROACHIn order to explain how lexical choice within theclause can he affected by the rbetorical function of aproposition, we must design a text planner that annotatesthe propositions with information about their argumen-tative function.
In the ADVISOR system, the followingactivities are performed to produce the answer to ashould-type question:1.
An expert-system determines whether tilecourse should be taken.2.
An evaluation system maps observationsabout he course from the knowledge baseinto evaluations that are scalar and context-dependenL3.
The evaluation system finks these evalua-tions into argument chains using argumen-tative relations called topoi.
Topoi relationsare stored within the propositions as aseparate f attme.4.
A paragraph stmcturer selects and or-ganizes argumentative chains into an ar-gumentative strategy.5.
A surface realization component maps theargumentative strategy into a paragraph,relying on a grammar which is sensitive tothe argumentative nformation stored in thepropositions.An hnportam feature of this approach is that themapping between information i the knowledge base andthe content of the propositions is performed in twostages by two types of argumentative relations: evalua-tion functions and topoi.
We distinguish betweenevaluation, which is the leap from the observation of anobjective fact in the knowledge base to a context-dependent scalar evaluation, and argumentative r la-tions, which only operate on scalar evaluations, and noton knowledge-base facts.
In contrast, most other textplanners imply organize propositions directly retrievedfrom the knowledge base.Another important feature is that we do not usegeneric rhetorical relations like "anti-thesis" or"evidence" but instead specific argumentative relationscalled topoi.
Because topoi are gradual inference rules,our content planner performs a task similar to generatingexplanations for a rule-based expert system (McKeown& Swartout, 1987).
But in addition to determining con-tent, topoi are also used to influence wording: they areadded as annotations tothe propositions generated by thetext planner and are used by the suiface realization com-ponent o perform lexical choice.In the following sections, we detail how contentplanning is performed and how the grammar takes ad-vantage of the argumentative information placed in itsinput o perform lexical choice.CONTENT PLANNINGOur system determines which content can be used togenerate an answer in two stages using In'st evaluationfunctions then topoi.Evaluation FunctionsEvaluation functions are used to map from obser-vations of facts in the knowledge base to context~dependent evaluations.
They are domain specific andrely on the presence of a user-model.
An evaluation isthe rating of a knowledge-base entity on a scale.
In theADVISOR domain we have identified the relevant scalesby examining a corpus of transcripts of advising ses-sions.
We looked at all the adjectives modifying a classin these transcripts and classified them into semanticcategories.
The following classes were thns identified(details on this analysis are provided in (Elhadad,1991)):* Goodness?
Importance?
Level?
Difficulty?
WorkloadACRES DE COLING-92.
NANTES, 23-28 AOt\]T 1992 6 4 0 PRO(:.
OF COLING-92.
NANTES, AUG. 23-28, 1992?
Domain: programming and mathematicalNote that all of these categories are scalar and there-fore define a set of dimensions along which a class canhe evaluated.
The task of the evaluation component is torank a course on relevant scales.
In the current im-plementation, r' mking is binary so a course can be inthree possible states with respect to each scale: notranked (the scale is not ,active in the current context), +(the course is high on the scale) or - (the course is low onthe scale).
In the current slate of the program, there is nodistiaction between degrees (interesting vs. veryinteresting).Rmlking is accomplished by using simple ruleswhich determine under which conditiolts objective factsstored iu the knowledge b,ase ean become convincingevidence for an evaluation.
Figure 2 shows three evalua-tion rules used in the current system.IfthenI\[thenIfthenU(user .progra~ning.
- - )  &K(c la~s .progra~ing-hw > O)E(c lase.programmi l ig  +)U (user.
programlil ing.
* ) aK (e \[ ass.
progranuning hw :- 0 )E ( c I as s, p rogramming  - )U (user .p rogran~ing .?)
&K(e lass .programming-hw > 3)E (e lass .programming  +)Figure 2: Sample valuation rulesU (user .p rogramming  - )  checks if in the cur-rent slate of the user model the system has evidence thatthe user dislikes programming.K(c lass .programming-hw > 0) i saquerytotheknowledge base to determine whether the class has someprogramming assigmenls.
An assertiou of the formE ( c las  s. p rogramaning  + ) is a. positive valuationof the course Oil tile programming  scale.
If none ofthe rules shown in Figure 2 are activated, theprogramming scale will remain on-activated.If the first rule is activated, n proposition attributing anumber of programming assignments to the class isadded to the paragraph being planned.
In addition, thiscontent is annotated by an evaluation on theprogramming  scale.
Tile output of the evaluation sys-tem is therefore a set of propositions annotated byevaluations along each of the activated scales.Argumentative Relations: TopoiOnce the course has been evaluated on the activatedscales, the evaluation system considers relations betweenthe scales.
We use the notion of topoi as defined in(Anscombre & Ducrot, 1983) to describe such relations.Topoi are gradual inference rules of the form "themore/less X is P, the more/less Y is Q."
Figure 3 showssample topoi used in the ADVISOR system.work load  + / d i f f i cu l ty  .
;work load  ~ / t ime- requ i redd i f f i cu l ty  .I / work load  +?
d i f f i cu l ty  4 / t ime requ i redd i f \ [ i cu l ty - ,  / takeprogralltmin9 } / t ime- lequ i red  +in teres t  + / take +importai~ce h / take +Figure 3: Sample topoi nsed in ADVISORTopoi play the role of dletoricM relations ill RST byexplaining the relation between two propositions ill itparagraph.
But they are different ill that they mc veryspecific relations ,as opposed to generic relations like"anti-thesis" or "evidence".
They can therefore heused to determine the content of the answer and the orderin which arguments should be presented.But the most in~pomant feature of topoi for our puroposes is that they can he related to lexical choice ill anatural way.
In (Bruxelles et al 1989) ,'rod (Bruxelles &Raccah, 1991) it is suggested that lexical items can bedefined ht p,'wt by their argumentative potential.
Forexample, it is part of the definition of the verb "to reoquire" as used in our domain, that its subject isevaluated oil the scale of difficulty.
This argumentativeconnotation explains tile contrast between (3) and (4), illa context where both are addressed to a student whoenjoys progr, unming:(3) ?
At least Al requires prograrmning, so it's easy.
(4) At least AI involves programming, so it's easy.The same scales are u~d both in topoi taxi ill ourlexieal description.
They therefore serve `as a bridge be-tween the rhetodeal structure of tile p~wagraph and lex-iced choice.A GRAMMAR SENSIT IVE  TOARGUMENTATIVE  CONSTRAINTSThe output of the evaluation system is a list of chainsof acceptable argamentative d rivations upporting tileconclusion that a course should be taken or Blot.
Eachproposition in the chain is annotated by a featore AO lbrArgumentative Orientation which indicates how it relatesto the surrounding propositions.
Figure 4 shows asample proposition using the notation of fmmtionaldescriptions (FDs) used in fimcfioual unification gram-mars.This input represents he proposition that AI covers(among others) a set of topics in the area of theory(namely, logic), and the AO feature indicates that thisproposition is used as an argument for the conclusionthat AI is a difficult course, by virtue of the topostheoret i ca l  + / d i f f i cu l t  + (the conclusinnAcrEs DE COLING-92, NANn..'S, 23-28 ^ our 1992 6 4 1 Paoc.
o1: COLING-92, NAm-es, AUCL 23-28, 1992(cat lex-verb)(alt verbal- lexicon {:index concept){{{concept c-contain)(alt contain- lex (:bk-class ao)(;; Verbs argumentatively marked\[({AO) {(scale s-difficultyl(carrier c-class)(carrier {participants carrier))(orientation +)(ao-conveyed lex-verb))){participants carrier} c-class)(lex ((ralt ("require" "demand')))));; Neutral verbs((lex ((ralt ('contain""involve'))))))))<<other concepts>>)))Figure 5: Fragment of the grammar((cat relation)(name topics-of)(roles((class ((cat class)(name AI)})(topics(Icat set}(kind ((cat topic)))(cardinality I}(Intenslon((cat relation)(name area-of)(argument (^ roles topic})(roles I(toplc ((cat topic)))(area ((name theory))))(extension((cat listl(elements ~(((name logic)))))))(AO({scope\[(cat clause)(type attributive)(participantsI(carrier {roles class})lattribute ((cat scale))))})(scale ((name theoretical){)(orientation +)(focus{^ scope participants carrier})(scalar{^ scope participants attribute}(conclusion (+ difficult(AI))))))Figure 4: Input to the grammarpart of the topos is shown in abbreviation).
Details onthe role of each fields in the AO feature and on therepresentation of quantification are provided in (EI-hadad, 1992).Because of this AO specification, the grammar willchoose appropriately realization (5) instead of (6):(5) AI requires a lot of programming(6) AI involves ome programming.The realization component is implemented in FUF, allextended functional unification grammar formalismwhich we have implemented (Elhadad, 1990, Elhadad,1992).
In the grammar we use, lexical choice and syn-tactic realization ate interleaved.
For example, thechoice of the verb is handled by the altemation shown inFigure 5.
In this Figme, the notation a l t  indicates adisjunction between alternatives; ra l t  indicates a ran-dom alternation, and is used to indicate that he grammardoes not account for the difference between the alter-natives; the curly braces notation in pairs of the form( (go)  va lue  ) indicates that the go feature is not em-bedded in the lexical verb constituent unified with thegrammar but rather is a top level feature within theclause.The fragment shown in Figure 5 specifies how thegrammar can map from an input concept e -conta in  toa verb expressing this relation.
The grammar for thisrelation contains two branches: in the first branch, theverbs "require" and "demand" are described as beingargumentatively marked on the scale of difficulty.
Theycan therefore be selected to project an evaluation on theirsubject.
Note that the choice between "require" and"demand" is arbitrary, as indicated by the ra l t  con-strnct - it is not explained by the grammar.
The secondbranch describes the verbs "contain" and "involve" asneutral verbs, that 60 not add any connotation.When there is an argumentative connotation, thegrammar specifies which participant in the clause is af-fected by the argumentative evaluation (for both verbs inthe example, the subject of the verb is the entity thatcarries the evaluation).
Similar lexical descriptions foradjectives are described in (Elhadad, 1991).The part of the grammar generating the syntacticstructure of the clause is inspired both by systemic gram-mars ( (Halliday, 1985) and especially (Fawcett, 1987))ACRES DE COLING-92, NANTES, 23-28 AOtT 1992 6 4 2 PRec.
OF COLING-92, NANTES, AUG. 2.3-28, 1992\[or the semantic features of the input and by HPSG (Pol-lard & Sag, 1987) for the overall flow of control.
It hasbeen extended to account for the flow of argumentativeinformation from lexical items to constituents and to theclause.
For example, inserting an adjective argumen-tatively marked as the describer of a noun group createsan argumentative orientation feature at the level of thenoun group which is then percolated to the clause inwhich the noun group is a participant.Finally, the clause grammar has been extended with aclause complex constituent which determines connectiveselection and clause combining (an extension of(McKeown & Elhadad, 1991)).
A clause complex isrepresented as an FD with features d i rec t ive  andsubord inate  (a notion similar to the RST distinctionbetween ucleus and satellite).
As discussed in (Ethadad& McKeown, 1990), there are many different connec-lives expressing argumentative r lations.
For exampleall of the following connectives can be used to expressan evidence relation: because, since, therefore, so, as aconsequence, then.
The choice offered to the analyst isthen: (i) to ignore the differences between such closecounectives; (ii) to define a single rhetorical relation foreach connective or (iii) to determine the choice of con-nective on other factors than the rhetorical relation alone.We adopt his later approach, and conclude that the out-put of the pat'agmph structurer must not determine theconnectives, as is generally done by schema or RSTbused planners.
Instead we take advantage of how ourtext planner labels each proposition with informationabout its rhetorical function to determine which connec-tive is most ,appropriate in combination with the otherpragmatic factors discussed in (Elliadad & McKeown,1990).
In this paper, we have also explained how theargumentative features needed to select connectives arebroduced by the content planner.User Profile:Programming +MathYear SophInterests AI, NLPCb.ss profile (AI):Progranm~ing Assignments 3Paper AssigIlments 1Projects 0Topics : Logic \[Math\] , NLP \[AI \]Should I take AI?AI can be difficult,because itrequires alot of workandit is pretty mathematical,but it is an interesting course,because it covca's many nip topics.andit offers lots of programming hws.Figure 6: An argumentative paragraphImplementat ionThe content planner is fully implemented.
In thesurface realization component, he clause grammar isfully implemented with account fi)r argumentative lea-tares in adjectives, verbs and adverbial adjuncts.
A 'largeportion of the grammar covers the determiner sequenceand how the choice of determiners like "many" ,"most" ,  " few"  etc.
has an influence ou tile argunlea-tative orientation of the close.
The grammar for con-nectives is separately implemented but not yet mergedwith the rest of the grammar.Tile grammar is quite large: the current version in-cludes 580 disjunctions; it covers simple and complexclauses, interrogation, egation, a complex tense system,relative clauses, control and raising, coordination withsome forms of ellipsis.
We have extended FUF by addingsophisticated conlrol devices (Elhadad & Robin, 1992),making it possible to ha*vile sucl, -large grammars.
Inparticular, we are able to deal with tile non-kw~al con-straints across constituent boundaries i,nposed by ar-gumentative r lations in an efficient way.Figure 6 shows the type of paragraphs obtained whenall the pieces of the surface realization component areput together.CONCLUSIONWe have described a model for planning argumen-tafive paragraphs which can perform content selectionand which allows the surface realization component toadapt lexical choice within each clause to the rhetoricalfunction of file clause.
The model relies on the fact thatthe same argumentative relations which can he used asspecific rhetorical relations also participate in the lexiclddescription of verbs, adjectives, adverbs and deter-miners.Oar model "also distinguishes between two types ofargumentative relations: evaluative functions and topoi.Evaluatiun function retch information from theknowledge base and make it scalar and context-dependent, while topoi are purely rhetorical relations thatlink scMar propositions together according to the ar-gumentative goal of the speaker.
This two-stage contentretrieval mechanism is in coatrast to most existing plan-ners which assemble facts directly retrieved from theknowledge base, and do not mmsfonn them according tothe pragmatic ontext (goals of the speaker a*al usermodel).
The mec "lmnism is implemented using the FUFtext generation system.Some of the open questions we face are:* Deciding whether to use a connective or not.?
Deciding whether propositions can be leftimplicit and still be recoverable..
Combining several independent argumen-tative chains and deciding how to order thearguments in the combined structure.- Acquiring the argumentative lexical descrip-Acr~ DE COLING-92.
NANTES, 23-28 AOtT 1992 6 4 3 l'koc.
OF COL1NG-92, NANrI~s, AUG. 23-28, 1992tions we need on a large scale?
Scaling up the text planning mechanism togenerate s veral paragraphs.In particular, when several independent argumen-tative chains upport the same conclusion, argumentativerelations alone cannot determine in which order theymust be organized.
We are currently investigatingwhether argumentative strategies similar to RSTschemas can be combined with our technique.
We arealso evaluating bow other discourse aspects like topicprogression can help in the planning of the paragraph.Acknowledgments.
This work was supported byDARPA under contract N00039-84-C-0165, by NSFGrant IRT-84-51438 and by ONR Grant N00014-89-J-1782.
I want to thank Kathy McKeown, JacquesRobin and Frank Z. Smadja for helping me write thispaper and Chaya Ochs for helping with the corpusanalysis and the implementation of evaluation functions.REFERENCESAnscombre, J.C. and O., Ducrot.
(1983).
Philosoplu'e tlangage.
L' argumentation dans la langue.Bruxelles: Pierre Mardaga.Bruxelles, S. and Raccah P.Y.
(1991).
Argumentation etSemantique: l  parti-pris du lexique.
In Acres duColloque 'Enonciation et parti-pris'.
Forthcom-ing.Bruxelles, S., Careaguo, D. and Founder, C. (1989).Vers ane construction automatique d s topoi a par-tir du lexique.
CC AI - Journal for the integratedstudy of Artificial Intelligence cognitive scienceand applied epistemology, 6(4), 309-328.Elhadad, M. (1990).
Types in Functional UnificationGrammars.
Proceedings of 28th Meeting of theACL (ACL'90).
Pittsburgh.Ethadad, M. (1991).
Generating Adjectives to Expressthe Speaker's Argumentative Intent.
Proceedingsof 9th National Conference on Artificial Intel-ligence (AAAI 91).
Anaheim.Elhadad, Michael.
(1992).
Using Argumentation to Con-trol Lexical Choice: a Functional Unification-based approach.
Doctoral dissertation, ColumbiaUniversity.Elhadad, M. and K,R.
McKeown, (1990).
GeneratingConnectives.
Proceedings of COLING'90(Volume 3).
Helsinki, Finland.Elhadad, M. & Robin, J.
(1992).
Controlling ContentRealization with Functional Unification Gram-mars.
In R. Dale, E. Hovy, D. Roesner andO.
Stock (Fxl.
), Aspects of Automated Natural Lan-guage Generation.
Springer Verlag.Fawcett, R.P.
(1987).
The semantics ofclause and verbfor relational processes in English.
In Halliday,M.A.K.
& Fawcett, R.P.
(T_,d.
), New developmentsin systemic linguistics.
London and New York:Frances Pinter.Gmsz, B. and Sidaer, C. (1986).
Attentions, intentions,and the structure of discourse.
ComputationalLinguistics, 12(3), 175-204.Halliday, M.A.K.
(1985).
An Introduction to Func-tional Grammar.
London: Edward Arnold.Hovy, E.H. (June 1988).
Planning Coherent Multisen-tential Text.
Proceedings of the 26th ACLConference.
Buffalo: ACL.Hovy, E.H. (1988), Generating natural language underpragmatic constraints.
Hillsdale, N.J.:L. Erlbanm Associates.
Based on the author'sthesis (doctoral--Yale University, 1987).Mann, W.C. (1987).
Text generation: the problem oftext structure (Tech.
Rep. ISI/RR-87-181).Marina del Rey, CA: ISI.Mann, W.C. and S.A. Thompson.
(1987).
RhetoricalStructure Theory: Description and Construction fText Structures.
InGerard Kempen (Ed.
), NaturalLanguage Generation.
Martinus Nijhoff,McKeown, K.1L (1985).
Text Generation: Using Dis-course Strategies and Focus Constraints toGenerate Natural Language Text, Studies inNatural Language Processing.
Cambridge,England: Cambridge University Press.McKeown, K.R.
(1988).
Generating Goal Oriented Ex-planations.
International Journal of ExpertSystems, 1(4).
377-395.McKeown, K. and M. Ethadad.
(1991).
A ContrastiveEvaluation of Functional Unification Glammar forSurface Language Generators: A Case Study inChoice of Connectives.
In Cecile L. Pads, Wil-liam R. Swartout and William C. Mann (Eds.
),Natural Language Generation i  Artificial Intel-ligence and Computational Linguistics.
KluwerAcademic Pubfishers.McKeown, K.R.
& Swartout W.R. (1987).
Languagegeneration a d explanation.
The Annual Review ofComputer Science, (2), pp.
401--449.Meteer, M.W.
(1990).
The generation gap: the problemof expressibility in text planning.
Doctoral disser-tation, University of Massaebnssets at Ahmerst.Also available as BBN technical repoR No.
7347.Moore, I.D.
and C.L.
Paris.
(June 1989).
Planning Textfor Advisory Dialogues.
Proceeding 27th ACL.Vancouver, BC: ACL.Pads, C.L.
(1987).
The Use of Explicit User models inText Generation: Tailoring to a User's level ofexpertise.
Doctoral dissertation, ColumbiaUniversity.Pollard, C. and I.A.
Sag.
(1987).
CSLI Lecture Notes.Vol, 13: Information-based Syntax and Semantics- Volume 1.
Chicago, I1: University of ChicagoPress.ACIES DE COLING-92.
NANTES.
23-28 AOI\]T 1992 6 4 4 PROC.
OF COLING-92, NANTES, AUG. 23-28.
1992
