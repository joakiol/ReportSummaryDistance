Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008), pages 369?376Manchester, August 2008Contents Modelling of Neo-Sumerian Ur III Economic Text CorpusWojciech JaworskiInstitute of InformaticsWarsaw UniversityBanacha 2, 02-097 Warsaw, Polandwjaworski@mimuw.edu.plAbstractThis paper describes a system for process-ing economic documents written in the an-cient Sumerian language.
The system isapplication-oriented and takes advantageof the simplicity of ancient economy.
Wehave developed an ontology for a selectedbranch of economic activities.
We trans-late the documents into a meaning repre-sentation language by means of a semanticgrammar.
The meaning representation lan-guage is constructed in a way that allowsus to handle massive ambiguity caused by:the specifics of the Sumerian writing sys-tem (signs?
polyvalence, lack of mid-wordsigns), our incomplete knowledge of theSumerian language and frequent damagesof documents.
The system is augmentedwith the capability of processing docu-ments whose parts describe concepts notincluded in the ontology and grammar.
Asan effect we obtain a structural descriptionof the documents contents in the mean-ing representation language, ready to usein historical research.1 IntroductionSumerians lived from prehistoric times until late3rd millennium BC in lower Mesopotamia (mod-ern Iraq).
Sumer was the first highly developed ur-ban civilisation, which used cuneiform script.
Dur-ing the period of the 3rd dynasty of Ur (2100 BC-2000 BC), whose power extended as far as presentc?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.Iraq and western Iran, the state introduced a cen-trally planned economy with an extensive bureau-cratic apparatus.Civil servants reported on clay tablets agri-culture and factory production, lists of workersalaries, summaries of executed work, distributionof commodities, goods, animals etc., lists of sac-rificed animals, travel diets and other economicalinformation.Archaeologists dug out about 100000 of tabletsfrom that period (known also as the Neo-Sumerianperiod).
The corpus of 44365 tablets (as of March26, 2008) is available in electronic version in thedatabase of Cuneiform Digital Library Initiative(CDLI, 2006), run by the University of Californiain Los Angeles and Max Planck Institute for theHistory of Science.
Tablets are stored in the formof Latin transliteration, often accompanied by pho-tographs or drawings (which are irrelevant for us).Economic documents are an essential source ofinformation about ancient Sumer.
The corpus con-tains crucial information about economic, socialand political history of the state, as well as its po-litical system and administration structure.
Thesources of this type provide the most complete in-formation about the daily life of those days.
Formore information about the economy of the Ur IIIkingdom see for example (Stepien, 1996; Shar-lach, 2004; Steinkeller, 1987).As more and more Neo-Sumerian economicdocuments were published, the problem arose ofsearching for documents relevant to the investi-gated topic, and the problem of representing thecontent of a large number of documents in a con-cise way.As a solution to these problems we proposea knowledge base, that would assist in prosopo-graphic (identification of Sumerian officials), his-369Figure 1: An example of a transliterated cuneiform tablet from Ur III&P123831 = OIP 121, 101tabletobverse1.
1(disz) sila4 ur-mes ensi2 1 lamb Urmes governor2.
1(disz)# sila4 da-da dumu lugal 1 lamb Dada son of king3.
1(disz)# sila4 id-da-a 1 lamb Iddareverse1.
u4 2(u) 3(asz@t)-kam Day 23$ 1 line blank3.
mu-DU delivery4.
ab-ba-sa6-ga i3-dab5 Abbasaga received5.
iti sze-KIN-ku5 month sze-kin-ku56.
mu en {d}inanna ba-hun Year when high priest of goddess Innanaleft was elevated to office1.
3(disz) 3torical and philological research.
For our studies,we selected a subcorpus of 11891 documents con-cerning distribution of domestic animals.The design of our system was determined bytwo factors: the characteristics of the underlyingcorpus and and the functionality needed by histo-rians who are end-users of the system.We developed an ontology for the selected sub-corpus.
It determins the structure of the knowledgebase.
It also defines the components of the mean-ing representation language, which we use for stor-ing data in the knowledge base.We translate the documents into the meaningrepresentation language by means of a semanticgrammar.
The grammar has the strength equal to aregular language.
Grammar symbols are equippedwith semantic values that carry information in-cluded in the texts.
Semantic values are generatedduring the parsing process by means of semanticattachments to grammar symbols.The meaning representation language is con-structed in a way that allows it to handle ambi-guities caused by: the inherent ambiguity of theSumerian writing system (signs?
polyvalence, lackof mid-word signs), our incomplete knowledge ofthe Sumerian language and frequent damages oftablets.The system is augmented with the capability ofprocessing documents whose parts describe con-cepts not included in the ontology and grammar.We keep the ontology itself small (circa 30 con-cepts) because we include in it only concepts thatare commonly found in documents.
This approachis determined by the needs of the intended users:historians need a structural representation for typi-cal information contained in the documents, whichwould provide insight into the structure and ac-tivity of Sumerian administration and analyse itby means of statistical methods; rare, untypicalphrases are thoroughly examined and interpretedmanually.The paper is organised as follows: In Section2 we describe the Neo-Sumerian Ur III EconomicText Corpus.
In Section 3 we present the ontol-ogy for documents.
In Sections 4, 5, 6 we defineaccordingly: the meaning representation language,grammar, representation semantic values of gram-mar symbols and semantic attachments.
In Section8 we show how to extract transaction descriptionsfrom the documents.
In Section 9 we present ap-plications of the system.
Section 10 draws conclu-sions.2 Ur III text corpusSumerian writing system was like a rebus, with-out punctuation signs, also with large amount ofpolyvalential signs.
According to the rule of poly-valence one sign could, depending on the context,be read differently.
For example the DU sign mean-ing?
a leg, could have also other translations like:gin ?
to go, gub ?
to stand straight, tum2 ?to bring, etc.Phonetical values of signs are most often sin-gle syllables.
Simple words are written by singleideograms equipped with phonetically written af-fixes.
More complicated terms can be representedby combinations of multiple signs.
Due to lackof mid-word signs and agglutinative character ofthe Sumerian language, it is hard to identify if weread a word or a phrase, and define its borders inthe text.
For more information about the Sumerianlanguage see (Labat and Malbran-Labat, 1988).The fact that administrative documents are writ-ten in bureaucratic language which is full of nota-370Figure 2: Ontology of Sumerian economic text corpustion abbreviations, lacks most of grammatical af-fixes and does not have uniformed spelling for non-Sumerian words, makes the situation even morecomplicated.Texts are often physically damaged.
Dam-ages can concern one or many following signs.Sometimes many following lines are illegible.
Inthe transliterations damages are marked by spe-cial symbols or descriptions in English, German,French, etc., depending on translator?s nationality.Fig.
1 presents the contents of a typical Sume-rian document.
This documents reports the trans-fers of lambs from 3 people to ab-ba-sa6-ga,an official of the Ur III state.
They took place inthe 23th day of the month sze-kin-ku5 in theyear when the high priest of goddess Innana waselevated to office.3 OntologyAs we mentioned above, we examine the subcor-pus of documents concerning distribution of breed-ing animals.
The distribution was organised inthe form of transactions.
During each transactionone Person, called Supplier, transfers a Num-ber of animals to another Person, called Receiver.Animal description consists of information like:species, age, gender, fodder, etc.
Person is de-scribed by means of his/her Name, Filiation, Joband/or Nationality.
Apart from the Supplier andReceiver, other Persons might have assisted in thetransaction:giri3 PN Middleman between Supplier and andReceivermu-DU PN Person on whose account the transac-tion took place, Receiver is probably Mu Du?srepresentativemu PN-sze3 Person in whose name the Receiveror Supplier acted.kiszib3 PN Person who sealed the documentPN maszkim Overseer of the transactionbala PN Person who provides goods as royal tax.The roles are named after the Sumerian phrasesused to introduce them PN states for PersonalName), their meaning is still studied by sumerol-ogists.
One of applications of our research is toprovide more facts on their meaning.There are a few kinds of Summaries of variousanimal types in the documents, denoted by con-cepts: Szu Lagab, Szu Nigin as well as singleNumber.
Dates of transactions are also provided.371Figure 3: The semantics of text.
Observe the use of domain knowledge and the representation of am-biguous semantics for year name.Number(q1, 1) ?
Animal(a1, sila4) ?
Name(n1, ur-mes) ?
Job(j1, ensi2)?
?Person(m1, n1, j1) ?
Supplier(s1,m1) ?
NumberAnimalName(nam1, q1, a1, s1)?
?Number(q2, 1) ?
Animal(a2, sila4) ?
Name(n2, da-da) ?
Job(j2, lugal)?
?Person(m2, j2) ?
Filiation(f1, dumu,m2) ?
Person(m3, n2, f1) ?
Supplier(s2,m3) ?
NumberAnimalName(nam2, q2, a2, s2)?
?Number(q3, 1) ?
Animal(a3, sila4) ?
Name(n3, id-da-a) ?
Person(m4, n3) ?
Supplier(s3,m4) ?
NumberAnimalName(nam3, q3, a3, s3)?
?NumberAnimalNamelist(l1, nam1, nam2, nam3)?
?Day(d1, 23)??Delivery(del1)?
?Name(n4, ab-ba-sa6-ga) ?
Person(m5, n4) ?
Receiver(r1,m5)?
?Month(month1, 12)?
?`Year(y1, AS5) ?
Year(y1, IS4)??
?Number(q4, 3) ?
Summary(s1, q4)?
?Document(t1, l1, d1, del1, r1,m1, y1)The dependencies between concepts havemeronymical nature.
They witness the fact that oneobject is a part, property, attribute or description ofanother one.
Fig.
2 presents the diagram of depen-dencies between concepts.Animals, roles and dates are transaction at-tributes.
Yet, often one document describes manytransactions and their common attribute values arewritten only once in the document.
As a result,transactions are entangled and the individual trans-action do not appear explicitly until the very lastphase of processing.4 Meaning representation languageThe meaning representation language representsconcepts included in the data and dependencies be-tween them.
Syntax of the language is defined asfollows: We have a set of constants and a set ofpredicate names.
Constants play the role of labelsfor entities described in the data.
Predicates con-sist of lists of one or more arguments.
Number ofarguments for a given predicate is not fixed.
Predi-cates represent relations on finite sequences of en-tities.
Names of most predicates are identical tothe names of the related ontological concepts.
Thefirst argument of a predicate is an object which be-longs to the ontological concept denoted by predi-cate name.Predicates are atomic formulas.
Compound for-mulas are composed of one or more atomic formu-lae connected by conjunctions and/or disjunctions.We do not use quantifiers, functions and negation.Fig.
3 we provide our example tablet writ-ten in formal language.
Number, Animal,Name, Person, Receiver, Year, Document,etc.
denote corresponding ontological categories.q1, q2, a1,m1, del1, etc.
represent objects de-scribed in the text.For example:?
Day(d1, 23) means that d1is a Day and itsnumber is 23.?
Name(n1,ur-mes) means that n1is a Namewritten as ur-mes.?
Job(j1,ensi2) means that j1is a Job calledensi2.?
Name(n1,ur-mes) ?
Job(j1,ensi2) ?Person(m1, n1, j1) means that n1is a Namewritten as ur-mes and j1is a Job calledensi2 and m1is a Person described by n1and j1.?
NumberAnimalName(nam1, q1, a1, s1)refers to the triple of Number, Animaland Supplier referenced by q1, a1, s1andrepresented by nam1.?
Year(y1, AS5)?Year(y1, IS4) means that y1is 5th Year of reign of king Amar-Sin or 4thYear of reign of king Ibbi-Sin.5 Syntax analysisFrom the linguistic point of view, an economicdocument is a single sentence, whose length mayvary from below 50 up to more than 5000 signs.The documents from the subcorpus are in generalwords of a regular language.
Connections betweenwords and phrases are determined by their posi-tions in text.
Taking this into account we decidedto perform the syntax analysis by means of a gram-mar that generates a regular language.We use semantic categories (such as divinenames, personal names, job names, year namesetc.)
to describe dependencies between words.Apart from describing word connections, grammarplays the role of a lexicon and is used for determin-ing word borders.372Morphological analysis is not needed, due to theagglutinative character of Sumerian and absenceof most grammatical suffixes in economic docu-ments.We define the grammar as follows:G = (?, N,XI, R,+,?)where?
?
is a finite set of terminal symbols,?
N is a finite set of non-terminal symbols.?
XI?
N is the start-symbol of G.?
R is a finite set of production rules.
Each pro-duction has the form A ?
?
or A ?
?+,where A is a non-terminal and ?
is a se-quence of terminals and non-terminals and?
?
?
?
N .
A ?
?+ is a shortcut for aninfinite set of rules: A ?
?,A ?
?
?,A ???
?, .
.
.
.
We call such rules accumulationrules.?
?
is binary relation on?
?N such thatA ?
Bif and only if there is a rule A ?
?
in Rsuch that B belongs to ?
or there is a ruleA ?
B+.?
?
is an irreflexive and transitive partial order.This guarantees that G is recursion-free andgenerates a regular language.We will call every subsequence parsed to agrammar symbol a phrase.Proposition 1 Language L can be generated by agrammar of the form defined above if and only if Lis regular.Names of the symbols in the grammar reflect theconcept names.
Example rules:Head BodyName ::= ur mesPerson ::= Name JobPerson ::= NamePerson ::= JobNumberAnimal ::= Number AnimalNumberAnimalList ::= Animal +We represent all the possible derivation trees fora given text and grammar by means of a directedacyclic graph whose edges are labelled by gram-mar symbols.
We call it a chart.The text is a sequence of signs.
We representthis sequence as an oriented graph which is a listwith signs as edges.
Vertices of this graph are num-bers pointing to the position in text.
Then for eachrule we find all paths in the graph with sequencesof edge labels that match the body of the rule, andadd to the graph new edges from the beginningsto the ends of those paths, and label them with therule head.
We will denote an edge labelled ?
fromvertex i to vertex j by ?i,j.6 Semantic analysisIn case of an ambiguous grammar (as in our case),the number of possible syntax derivation trees maybe exponential in the sequence length.
The conceptof chart is intended to be their common, compactrepresentation.
The number of possible seman-tic values of the sequence is equal to the numberof syntax derivation trees.
That is why we can-not represent them directly.
Instead, we distributethe semantic values across the chart.
Our methodresembles to the approach known in the literatureas Minimal Recursion Semantics (Copestake et al,1999)The formulas of the meaning representation lan-guage are spread across the chart.
Consider theedge ?i,jof chart.
This edge was created as theresult of parsing a phrase.
The phrase describesan entity.
We represent this entity by means of aconstant a?,i,j.
We describe its properties derivedfrom the phrase by the formula of meaning repre-sentation language.
Such a formula is composedout of constants which represent entities and pred-icates that describe syntactic structure connectingthem.
We name this formula the semantic value ofthe grammar symbol and denote it as [[?
]]i,j.The formula [[?
]]i,jhas the following structure:n?k=1pk(a?,i,j, a?k1,ik1,jk1, .
.
.. .
.
, a?kmk,ikmk,jkmk) ?mk?l=1[[?kl]]ikl,jkl,where ?klare labels corresponding to the symbolsin the body of the rule used to create the edge ?i,j.Each [[?kl]]ikl,jklis assigned to the edge ?klikl,jkl, soonly the set of atomic formulae{p1(a?,i,j, a?11,i11,j11, .
.
.
, a?1mk,i1mk,j1mk), .
.
.. .
.
, pn(a?,i,j, a?n1,in1,jn1, .
.
.
, a?nmk,inmk,jnmk)}must by associated with graph edge on the imple-mentation level.
Semantics for a terminal symbol?i,jis a one-argument predicate whose name is ?and whose argument is variable a?,i,j.373Figure 4: ChartFigure 5: Semantic values of grammar symbols[[Name]]4,6= Name(aName,4,6, aga,4,5, amu,5,6) ?
[[ga]]4,5?
[[mu]]5,6== Name(aName,4,6, aga,4,5, amu,5,6) ?
ga(aga,4,5) ?
mu(amu,5,6)[[NumberAnimalName]]1,6=(NumberAnimalName(aNumberAnimalName,1,6, aNumberAnimal,1,3, aName,3,6)?[[NumberAnimal]]1,3?[[Name]]3,6)??
(NumberAnimalName(aNumberAnimalName,1,6, aNumberAnimal,1,4, aName,4,6)?[[NumberAnimal]]1,4?
[[Name]]4,6)On Fig.
4 we present an example a chart.
Thenames of predicates associated with the grammarsymbols are usually identical to their names.
Thefirst argument of each predicate is a constant thatrepresents an entity described by the phrase.
In-dices of this constant identify the edge into whichthis phrase was parsed.On Fig.
5 we show semantic values for someof the edges for chart on Fig.
4.
For exam-ple the semantic value of the edge Name4,6(de-noted as [[Name]]4,6) is calculated to be the for-mula Name(aName,4,6, aga,4,5, amu,5,6), because theconstant aga,4,5refers to the edge ga4,5and amu,5,6to mu5,6.Ambiguous phrases may be parsed to a num-ber of predicates.
Each predicate generated fora given subsequence is a possible descriptionof an entity.
That is why we point that en-tity by the same constant in each predicate (con-sider for example semantic value of an edge[[NumberAnimalName]]1,6).We connect different possible subsequence in-terpretations using disjunction.
Domain knowl-edge provides constraints on relations.
These con-straints may, for example, make the disjunctionmutually exclusive.We represent the semantic value of a symbolgenerated by an accumulation rule as a graph,whose vertices are constants that are arguments ofthe predicate.
Each path from the first to the last374vertex in such a graph represents a list of predi-cate arguments.
The predicates are connected bydisjunction.Semantic values of grammar symbols are con-structed using semantic attachments of grammarrules.
Semantic attachments are functions thatcompose semantics of greater objects out of the se-mantics of smaller ones.
Predicate sets associatedwith edges of chart are arguments and values forthese functions.Upon the end of the parsing process we obtainan edge labelled by the start symbol of the gram-mar.
Its semantic value is a formula which containsevery possible translation of the entire text into themeaning representation language.There are three types of rules that occur duringthe corpus processing:?
Rules that make up the lexiconName ::= ur mesName(varName, varur, varmes)?
Rules that describe the document structurePerson ::= Name JobPerson(varPerson, varName, varJob)Person ::= NamePerson(varPerson, varName)Person ::= JobPerson(varPerson, varJob)?
Rules that introduce domain knowledge(numbers, year names etc)YearGod ::= d inanna{AS04(varYearGod), AS05(varYearGod))}Year ::= mu en YearGod Verb{p(varYear) : p ?
valYearGod?
valVerb}varNameis a variable, whose index is an edge la-belled by the symbol Name.
valYearGodis a setof predicate names connected with the symbolYearGod.7 Incomplete ontology and damageddocumentsIn every corpus, there is a number of phrases thatcannot be expressed using concepts typical for thatcorpus.
These phrases are rare, irregular and de-void of characteristic contexts.In order to obtain completely parsed documentswe must develop a semantic representation fordocuments we partially do not understand.
Weclose the ontology with the Other Informationconcept, which is treated as a transaction attributeand refers to information not included in the rest ofconcepts.Parser recognises phrases it does not under-stand using the following heuristics: Boundariesof transaction attributes are correlated with verseboundaries.
If the parser does not recognise thecontent of a verse it decides that this verse containsOther Information.Apart from being not understood the texts areoften damaged.
There are several types of damagesin documents.When a single sign is illegible, it is denoted inthe document as x.
The parser considers the xsymbol as a wildcard that may be matched withany terminal symbol.When a part of a verse is broken, it is denoted inthe document by [...].
We estimate the numberof signs in the broken verse counting the numberof signs in the other verses in the document.
Thenwe replace the [...] symbol by a sequence of xsymbols.We do not estimate precise contents of brokenphrases, we only determine their role in the docu-ment and ontological category.
This allows us toavoid combinatorial explosion while parsing dam-aged documents.When a whole verse or a number of verses isbroken we assume that they have syntactic struc-ture of a typical verse or contain Other Informa-tion.8 Transaction ExtractionAfter performing the semantic analysis we knowthe concepts used in the document, its topic andstructure.
Now, we extract transactions from thedocuments.Transactions extracted from our example docu-ment (Fig.
1) are presented on Fig.
6.
Extractedtransactions are are represented as edges of chartand they compose a formula of meaning represen-tation language.
For unequivocal tablets this for-mula is a simple conjunction of transaction predi-cates, whilst ambiguous documents provide trans-actions which are connected by conjunction anddisjunction as well.While extracting transactions, we analyse docu-ment summaries: we correlate the number of ani-mals with their quantity written down in the docu-ment summary.
This allows us to reduce the num-ber of ambiguities generated by document dam-ages and specifics of writing system.We extracted 68619 transactions from the se-lected subcorpus with precision 86% and recall90%.375Figure 6: Transactions described in the text (already with resolved Year ambiguities).Date Number Animal Supplier Receiver23-11-AS05 1 sila4 ur-mes ensi2 ab-ba-sa6-ga23-11-AS05 1 sila4 da-da dumu lugal ab-ba-sa6-ga23-11-AS05 1 sila4 id-da-a ab-ba-sa6-ga9 ApplicationsOur methodology proved its usefulness in severalapplications.The first, simple, but powerful and needed ap-plication is document retrieval.
The system allowsus to retrieve documents that satisfy queries con-cerning concepts and structure of the texts.It is worth mentioning that due to the scriptpolyvalence, text damages and editor recordsmixed with Sumerian text, matching a sequence ofsigns in a document is not a trivial task.Using the transaction based knowledge repre-sentation we found pairs of documents that containinformation about the same transaction.
This taskis important due to the fact that this is the way tofollow the distribution process and administrationactivity.The system provides help also in the tasks of:identification o Sumerian officials (prosopogra-phy); determining relations between Sumerian of-ficials in terms of number of commodities that aretransferred between them; classification of types ofdocuments generated by Sumerian administration;research on Sumerian language itself.10 ConclusionsWe presented an ontology driven methodology forprocessing Sumerian economic documents.
Weapplied it with a success to sumerological researchproblems.We plan to extend the ontology, grammar andlexicon so that the system could process the wholecorpus of Neo-Sumerian economic documents.
Itwill allow us to construction of the model of Sume-rian economics.
We will estimate the contents ofunavailable documents be means of statistic basedapproximation and machine learning methods.Language characteristics have little influence onthe system construction, so nothing prevents thesystem form being applied to narrow subject mat-ter corpora written in other languages.
Especiallythe problems of incomplete ontologies and partialdata (caused for example by damages done to doc-uments) are independent from the language char-acteristics.AcknowledgementsI would like to thank Jerzy Tyszkiewicz for theinspiration in my work.
I would also like to thankMarek Ste?pie?n for the support with his knowledgeof Sumerian language.The research has been supported by the grantN-N206-400234 from Ministry of Science andHigher Education of the Republic of Poland.ReferencesCopestake, A., D. Flickinger and A.
Sag.
1999.
Min-imal recursion semantics: An introduction.
CSLI,Stanford University.Cuneiform Digital Library Initiative, The.
2006.http://cdli.ucla.edu.Jaworski, W. 2006.
Learning Compound DecisionFunctions for Sequential Data in Dialog with Ex-perts.
In: S. Greco et al (Eds.)
Proc.
RSCTC 2006,LNAI 4259, Springer, pp.
627-636.Jurafsky, D., J. H. Martin.
2000.
Speech and LanguageProcessing: An Introduction to Natural LanguageProcessing, Computational Linguistics, and SpeechRecognition.
Prentice-Hall.Labat, R., F. Malbran-Labat.
1988.
Manueld?epigraphie akkadienne Signes, Syllabaire,ideogrammes, 6th edition.
Geuthner (LibrarieOrientaliste Paul Geuthner S.A.).Sharlach, T.M.
2004.
Provincial Taxation and the Ur IIIState.
Leiden-Boston.Steinkeller, P. 1987.
The Administrative and EconomicOrganization of the Ur III State: The Core and thePeriphery.
In: R.D.
Biggs, Mc.G.
Gibson (Eds.)
TheOrganization of Power: Aspect of Bureaucracy in theAncient Near East.
SAOC 46, Chicago, s.19-41Ste?pie?n, M. 1996.
Animal Husbandry in the AncientNear East: A Prosopographic Study of Third-Millennium Umma.
Bethesda, Md.
: CDL Press.376
