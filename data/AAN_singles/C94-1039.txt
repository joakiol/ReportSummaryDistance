Adjuncts and the Processing of Lexical RulesGertjan van Noord and Gosse BoumaBCN RUG Groningen{vannoord, goss e} 0 let .
rug.
n\].AbstractThe standard HPSG analysis of Germanic verbclusters can not explain the observed narrow-scope readings of adjuncts in such verb clus-ters.We present an extension of the HPSG analy-sis that accounts for the systematic ambiguityof the scope of adjuncts in verb cluster con-structions, by treating adjuncts as membersof the sul)eat list.
The extension uses power-Nl reeursive lexical rules, implemented as com-plex constraints.
We show how 'delayed eval-uation' teehMques from constrMnt-loglc pro-gramming can be used to process such lexicalrules.1 Problem Description1.1 Dutch  Verb  C lus tersConsider the following Dutch subordinate sen-tences.
(1) dat Arie wil slapenthat Arie wants to-sleep(2) dat Arie Bob wil slaanthat Arie Bob wants to-hitthat Arie wants to hit l/ot)(3) * (lat Arie Bob wil slapenthat Arie Bob wants to-sleepthat Arie wants to sleep lloh(4) * dat Arie wil Bob slaan(5) dat Arie Bob cadeautjes wil geventhat Arie Bob presents want to-givethat Arie wants to give presents to Bob(6) * dat Arie Bob wil cadeautjes gevendat Arie wil Bob ca(leautjes geven(7) dat Arie Bob zou moeten kunnen willenknssenthat Arie Bob should must can wantto-kissthat Arie should be able to want to kissIlobThe examples 1-3 indicate that in l)utch thearguments of a main verb can be realized tothe left of an intervening auxiliary verb, suchas a modM verl).
Furthermore the sentencesin d-6 indicate that in such constructions thearguments must 1)e realized to the left of theauxiliary verbs.
In 7 it is illustrated that therecan he any numl)er of auxiliaries.1.2 The  I IPSG ana lys i s  o f  verb -c lus tersThe now standard analysis within t\[PSG ofsuch verb-clusters i based oil ideas from Cat-egorial Grammar (cf.
for example Moortgat(1988)) and defined within the HPSG flame-work by IIinrichs and Nakazawa (1989).
Inthis analysis auxiliary verbs subcategorize foran unsaturated verb-phrase and for the com-pleinents that are not yet realized by this verb-l)hrase.
In other words, the arguments ofthe embedded verl)-phrase are inherited by theauxiliary.For example, the auxiliary 'wil' might be de-fined as in Iigure 1.
If we assume an ai)plica-tion rule that produces flat vp-structures, thenwe obtain the derivation in figure 2 for tim in-finite verb-phrase(8) .
.
.
Arie boeken wil kunnen geven1.3 P rob lems w i th  the  scope  o f  ad-junctsA major problem that this analysis faces isthe possibillity of narrow-scope readings ill tile250\[ v;;;UlA;'ant(Subj,able(Subj,give(Subj,books,arie))) \]lez : ar ie  le~: boeken le:r, : witd i r  : left  j , / / , ' : l e f t  l, sc : (P ,  R ,L ,  J)  sc : (R , I , ,  J)  .~c : ( L , J )dir : r ight  p dir: r ight  RFigure 2: The parse tree for tile verb-phrase %'ie t)oeken wil kunnen geven'.stem(VERBAL\[ 1 seml ,~c lq fso .
: argl : Subj soa-arg : Obj\[ w,ntnAt, 1sere : Objsc : ( s~tbj lseml indez : S j l x  IA)sc :AFigure 1: The modal auxiliary 'wil'.case of adjuncts.
For example, the follow-ing Dutch subordinate sentences are all sys-tematically ambiguous between a wide-scopereading (adjunct modilies tile event introducedby the auxiliary) or a narrow-scope reading(adjunct modi%s the event introduced by themain verb).
(9) dat Arie vandaag Bob wil slaanthat Arie today Bob want to-hitthat Arie wants to hit IIob today(10) dat Arie hot artikel op tljd probeerde, opte  s t l l renthat Arie the article on time tried to sendthat Arie tried to send the article in time(11) dat Arie Bob de vronwen met eenverrekljker zag bekljkenthat Arie Bob the women with thetelescope saw look-atthat Arie saw Bob looking at the womenwith the telescopeFirstly note that tile treatment of adjunctsas presented in Pollard and Sag (in press), can-not be maintained a.s it simply fails to deriveany of these sentences because the introduc-tion of adjuncts is only possible as sisters ofsaturated elements.
The fact that ~trgumentsand adjuncts can come interspersed (at least inlanguages uch as Dutch and German) is notaccounted for.A straight forw~ml solution to this problem ispresented in Kasper (in prepar~tion).
Here ad-jmwts and arguments are all sisters to a head.Tim arguments hould satisfy the subcat re-quirements of this hea.d - the adjuncts modifythe semantics of the head (via a recnrsivelydefined a.djuncts principle).The main I)rol)lem for this treatment of ad-.iuncts is that it cannot explain the narrow-scope readings observed above, if adjunctsmodify the.
head of the phrase they are part ofthen we will only obtain the wide-scope rea,d-ings.If we assume, on the other hand, that ad-.jnncts are oil the subcat list;, then we will ob-tain both readings straightforwardly.
In tilenarrow-scope case tile adjunct is on the snbcatlist of the embedded w~rb, and then inheritedby the matrix w.~rb.
In the wide-scope casetilt adjunct simply is on the subcat list of thematrix verb.
in the next section we present atreatment of adjuncts in which each adjunct issubcategorized for.
By me,ms of lexical ruleswe are able to obtain the.
effect that there canbe any mmfl)er of adjuncts.
We also sketchhow the semantics of modification might bedelined.2572 Adjuncts as Arguments2.1 Adding adjunctsThe previous section presented an argumentthat VP modifiers are selected for by the verb.Note that this is in line with earlier analysesof adjuncts in HPSG (Pollard and Sag, 1987)which where abandoned as it was unclear howthe semantic ontribution of adjuncts could bedefined.IIere we propose a solution in which ad-juncts are members of the subcat list, just likeordinary arguments.
The difference betweenarguments and adjuncts is that adjuncts are'added' to a subcat list by a lexical rule thatoperates recursively.
1 Such a lexical rule mightfor example be stated as in figure 3.Note that in this rule the construction ofthe semantics of a modified verb-phrase is stilltaken care of by a rood feature on the adjunct,containing a val and arg attribute.
The argattribute is unified with the 'incoming' seman-tics of the verb-phrase without the adjunct.The val attribute is the resulting semantics ofthe verb-phrase including the adjunct.
This al-lows the following treatment of the semanticsof modification 2, cf.
figure 4.We are now in a position to explain the ob-served ambiguity of adjuncts in verb-clusterconstructions.
Cf.
:(12) dat Arie Bob vandaag wil kussenthat Arie Bob today wants to-kissIn the narrow-scope r ading tim adjunct is firstadded to the subeat list of 'kussen' and thenpassed ou to the subcat list of the auxiliaryverb.
In the wide-scope reading the adjunct isadded to the subcat list of the auxiliary wM~.The final instantiations of the auxiliary 'wil'for both readings are given iu figure 5.2.2 DiscussionA further problem concerning the syntax of ad-juncts is posed by the fact that adjuncts cantake part in unbounded ependency construe-lions.
Lexical treatments of the kind presentedin Pollard and Sag (in press), chapter 9 assumethat a lexlcal rule is responsible for 'moving'lcf.
Miller (1992) for a similar suggestions concern-ing French.2inspired by Kasper (in preparation)an element from the subcat list to the slashlist.
Such an account predicts that adjunctscau not take part in such unbounded epen-dency constructions.
In Pollard and Sag (inpress), chapter 9 a special rule is introducedto account for those cases where adjuncts dotake part in UI)Cs.
'\['he treatment hat wepropose for adjuncts obviates the need for suchan 'ad-hoc' rule.Clearly many details concerning the syntaxof adjuncts are left untouched here, such as thequite subtle restrictions in word-order possibil-ities of certain adjuncts with respect to argu-ments and with respect to other adjimcts.
Inthe current framework linguistic insights con-cerning these issues could be expressed as con-straints on the resulting subcategorization list(e.g.
by means of LP-constraints).lit should also be stressed that treating ad-juncts and arguments on a par on the levelof subcategorization does not imply that ob-serve<\[ differences in the behavi<)r of adjunctsand arguments could not be handled in theproposed framework.
For example the differ-ence of adjuncts and arguments in the case ofleft dislocation in Dutch (exemplified in 13-16)can be treated by a lexica\] rule that oper~teson the subcat list before adjuncts are added.
(13) De voorstelling duurt een uurTim show takes an hour(l,l) l';en uur, dat duurt de voorstelling(15) Arieen Bob wandelen een uurArie and Bol) wall< an hour(16) * l"en uur, dat wandelen Arieen Bob3 Processing Lexical Rules3.1 Lex ica l  Ru les  as Const ra in ts  onLex ica l  Categor iesRather than formalizing the 'add-adjuncts'rule as a lexical rule we propose to use re-cursive constraints on lexical categories.
Suchlexical constraints are then processed using de-layed ewduation techniques, aSuch an approach is more promising than anoff-line approach that precomputes the effectaRefer to Carpenter (1991) for a proof of TurilLgequivalence of simple eategorial grammar with recur-slve lexical rules.252VERBAL 1sc : P ?
S :~sere : Sere0VI,;RBAI,sc : l ' .
(  wod : ar~l : Sem~) ) .
Sva/:  Sere.N(?
'Gq, : ~OIllFigure 3: A lexieal rule that adds a single adjunct to the sul)cat list of >t verb.
In the.
case of n~uljuncts the rule applies n times.RI,~S T I1.~.1) VE ll.n I A Larg lnuc  : \[~ttod :va l \ [nuc  : \[resh"qI*oa : Q \]O P_.AI)Vt,;RIIIA Larg : Soam~d : va"nucl I,'~,~t," : 0Figure 4: A restrictive, adverbial and an olmrator a(lverl)ial.
Restrictive adverbials (such as locativesand time adverbials) will generally be encoded as presented, where R0 is a meta-wu'iable that isinstantiated by the restriction introduced by the adjunct.
Operator ~ulverblals (such as causatives)on the other hand introduce their own quantified state of aft'airs.
Such mlverbials generally areencoded as in the following examph', of the adverbial 'toewdlig' (accidentally).
Adw.,rbials of the firsttype add a restriction to the semantics of the verb; ;Ldwn'bials of the second type introduce a newscope of modification.of lexical rules by compil~tion of the lexicon,as it is unclear how recursive lexical rules canbe treated in such an architecture (especiallysince sOllle recursive rules e:ut easily lead toan infinite number of lexical entries, e.g.
tlleadjuncts rule).Another alternative is to consider lexicalrules as 'ordinary'  unary rules.
If this tech-nique, is applied for the lexical rules we haveenvisaged here, then (unary) derivations withunbounded length have to be <:mlsidet'ed.\]f we formalize lexieal rules as (oomph,x)constraints on lexical categories then we areable to use delayed evaluation techniques forsuch constraints.Assume that the 'underlying' feature struc-ture of a verb is given by a definition of 'stem'(e.g.
as the example of 'wil' abow'., or as theexample of a simple transitive verb such as'kussen' (to-kiss) in figure 6).Such a feature-structure is not the actualcategory of the verb -- rather this categoryis define.d with complex eonstraints with re.speet to this base form.
\]lere the constraintthat adds adjuncts to the subc:tt list has ourVEItBAI, /\[ "?U" \]sc : s,:,,, : a .
,  ) \[ ou.
\]sub j  : se re :  A Iscml , , , c lq f .
soa  : k i sser  :A1k issed  A'2l;'igure (i: (h~.tet,;ory for 'kussen' (to Idss)special attention, but there, is also a constrainttha.t adds a snbj<'.ct to the subeat list (as partof the in\[lection constraint for finite verbs) anda constraint hat pushes an element from thesubeat list to slash (to trea,t utll)ounded epen-dencies along the lines of eha.pter 9 of Pollardand Sag (in press)), etc.
Thus a \]exical entrymight be defilmd as in ligure 7.\],exical rules are regarded as (complex) con-strah~ts ill l;his framework because it allows animple.mentation using delayed evaluation tech-niques from logic progrannning.
The idea is253VERBALsc : (E, tI)sc : ( lea: : kussen 'dir : rightlee: : wilVERBALVERBALsc : (II)sc : ( lex : kussendir : rightlea wi llea : vandaag , lea: : bob , lez : ariedir : left E dir : left tl dir: left} \[N?
N 1 \[ ?uN \] , lez : vandaag , lex : bob , lez : arie dir:  left dir:  left lI dir:  left)Figure 5: The finM instant iat ion of the moda.l for both the narrow- and the wide-scope reading ofthe sentence ~Arie Bob vandaag wil kussen'.
In tit(', narrow-scope rending the adverbial  occurs bothon the subeat  list of the embedded verb and on the subeat list of the matr ix  verb - -  indicat ing thatthe embedded verb introduced the adjunct.
In the wide-scope reading the adverb only occurs onthe subcat  list of the matr ix  verb.lexicM_entry(A) : -stem(B), add_adj(B, C),inflection(C, D), push_slash(D, A).inflection (VEnBAL "\] FINITEphon : P phon : P (9 "t"se : Se ' sc : Sc .
(Subj)  )'subj : Subj subj : SubjF igure 7: A lexical entry is defined with re-spect to a base form using complex constraints.Subject  addit ion is a constraint associatedwith finite inflection.that  a certain constraint is only (part ial ly)evaluated if 'enough'  information is availableto do so successfully.
As a relatively simpleexample we consider the constraint hat  is re-sponsible for adding a sul)ject as the last el-ement on a subcat  list of finite verbs.
As alexical rule we might define:\[FINITE 1subj :  Subj ==> \[ sc : St .
(Subj) \]8C : ScIf we use constra ints  the definition can be givenas in figure 7, as part  of the constraint associ-ated with finite morphology.
Note that  the twoapproaches are not equivalent.
If we use lexicalrules then we have to make sure that  the add-subject  rule should be applied only once, andonly for finite verbs.
As a constraint  we sim-ply call the constraint once at the appropr iateposition.The concatenat ion constraint  (associatedwith the ~dot' notat ion) is defined as usual:concat (0  , A, a ) .eoneat((BIC), A, (II\]D)) : -concat(C, A, l)).If this constraint api)lies on a category of whichthe subcat list is not yet fully specified (for ex-ample because we do not yet know how manyadjuncts have been added to this l ist) then wecannot yet compute the result ing subcat  list.The constrMnt can be suimessfully appl ied ifeither one of the subcat lists is instmtt iated:then we obtain a finite miml)er of i)osslble so-hltions to the.
colistraint.The relation add_ad j  recursively descendsthrough a subcategor izat ion list and at eachposition either adds or does not add an ad-junct (of the appropr iate  type).
Its definitionis given in figure 8.
Note that  it is assumedin this definition that the scope of (operator-type) adverbials is given by the order in whichthey are put in in the subcategor izat ion list,i.e.
in the obliqueness order.
44Cf.
Kasper (i,, preparation) for discussion of thispoint, also in rehttion with adjm, cts that introduceqmuttiflers.
Note that in our approach dilR.
'rent pos-sibilities can be defined.254I SIGN \] SIGN 1add_adj( sc : A sc : Jsere : B ' sere : K ) : -subj : Subj subj : Subjadd_adj(A, J B, K).~dd-~dj(0, A, a).add_adj((CID), (ClE), A, n):-add_adj(D, E, A, B).add_adj(A,( rood: arg : Bw,l : l,;add_adj(A, D, I,;, C).ID), 1~, C):-Figure 8: Definite clause specification of'add_adj' constraint.3 .2  De layed  eva luat ionFor our current purposes, the co-routining fa-cilities offered by Sicstns Prolog are power-ful enough to implement a delayed evaluationstrategy for the cases discussed al)ove.
Foreach constraint we declare the conditions forevMuating a constraint of that type by meansof a b lock  declaration.
For example the con-cat constraint is associated with a declaration:' -  b lock  coneat ( - , ?
, - ) .This declaration says that evaluation of a c~dlto concat should be delayed if both the Iirst andthird arguments are currently variable (unin-stantiated, of type "toP).
It is clear fr<>mthe definition of concat that if these argu-ments are instantiated then we can evahm.tethe constraint in a top-down manner with-out risking non-termination, l!
',.g, the goalconcat((A, B), C, D) succeeds by insta.ntiatingD as the list (A, I \ ] \]C).Note that block declarations apply recur-sively.
If tit(: third argument o a call to con-eat is instantiated as a list with a wu'iahle tail,then the evaluation of the recursive al)l)licationof that goat might be blocked; e.g.
ewduationof the goat co,~.~(A, (S j), <nit>)s.e,'.oeds ei-ther with both A and C instantiated as theempty list and by unifying Sj ;rod B, or withA instantiated as the list (l\]\[l)) for which theconstraint concat(D, (Sj), C )has  to be satis-tied.
Similarly, for each of the other constraintswe declare the conditions under which the con-stra.int can be ewluated.
For the add_adj con-straint we define:"- block add_adj(?, - ,  7, 7).One may wonder whether in such a,n archi-tecture enough information will ever becomeavailable to allow the evaluation of any of theconstraints, hi general such a prol)lem maysurface: the parser then finishe.s a derivationwith a large collection of constraints that itis not ~dlowed to evaluate - and hence it isnot clear whether the sentence associated withthat derivation is in fad; gram m~tical (as there.may 1)e no solutions to these constraints).The strategy we have used successfitl/y so-far is to use the structure hypothesized by theparsm' as a 'generator'  of information.
For ex-ample, given that the parser hypothesizes theal)plication of rules, and hence of certain in-stmttiations of the sul)cat list of the (lexicM)head of such rules, this provides informationon the subcat-list of lexical categories.
Keep--ing in mind the definition of a lexical entry asin figure 7 we then are able to ewfluate eachof the constraints O)l the wdue of the subcatlist in tl,rn, starting with the push_slash con-straint, up through the inflection and add_adjconstraints.
Thus ra.ther than using the con-sir.tints as q)uilders' of subcat-l ists the con-straints :~re evaluated by checking whether asubcat-list hypothesized by the parser can berelated to a sat)cat-list provided by a verb-stein, in other words, the \[1GW of informationin the definition of Ie:~:ical_entry is not as theorder of constraints might suggest (froln topto 1)ottom) but ratht, r the other way around(from hottom to top).4 F ina l  remarksWe illustrated that recursive lexic~d con-straints might be useful from a linguistic per-spectiw~.
If lexlc~d rules are formalized ascotni)lex cot/strahlts ol) \]exica\] categories thenmethods from logic l)rogl:amtning can be usedto imtflement such constraints.Note that complex CG,lstraints and delayedeva.huttion techniques are also useful in otherareas of linguistic desciptlon.
For example.we used the same methods to deline and pro-255cess I IPSG's FOOT FEATURE PRINCIPLE.
Themethod may also be applied to implementIIPSG's binding theory.As a testcase we improved upon the IIPSGanalysis of (Germanic) verb clusters and ad-juncts by treating adjuncts as categories thatare on the subcat list by virtue of a complexconstraint.
The fragment that has been imple-mented with the methods described is muchlarger than the discussion in the previous ec-tions suggest, but includes treatments ofextra-position, ipp, modal inversion, participium in-version, the third construction, partial-vp top-icalisation, particle verbs, verb-second, subjectraising, subject control, raising-to-object, ob-ject control and clitic climbing in Dutch.ReferencesBob Carpenter.
The generative power of cat-egoriM grammars and head-driven phrasestructure grammars with lexical rules.
Com-putational Linguistics, 17(3):301-313, 1991.Erhard Hinrichs and Tsuneko Nakazawa.Flipped out: AUX in german.
In Papersf~vm the 25th Annual Regional Meeting ofthe Chicago Linguistic Society, pages 187-202.
Chicago Linguistics Society, Chicago,1989.Robert Kasper.
Adjuncts in the mittelfeld.
IllJohn Nerbonne, Klaus Netter, and C~trl Pol-lard, editors, German Grammar in IIPSG,Lecture Note Series.
CSLI, Stanford, inpreparation.Philil) Miller.
Clitics and Constituents inPhrase Structure Grammar.
Garland, NewYork, 1992.Michael Moortgat.
Categorial Investigations.PhD thesis, University of Amsterdam, 1988.Carl Pollard and Ivan Sag.
Information BasedSyntax and Semantics, Volume 1.
Centerfor the Study of Language and InformationStanford, 1987.Carl Pollard and Ivan Sag.
l\[ead-drivenPhrase Structure Grammar.
Center for theStudy of Language and Information Stun-ford, in press.256
