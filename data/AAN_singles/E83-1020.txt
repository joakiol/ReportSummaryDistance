A FLEXIBLE NATURAL LANGUAGE PARSERBASED ON A TWO-LEVEL REPRESENTATION OF SYNTAXLeonardo Lesmo and Pietro TorassoIstituto di Scienze dell' InformazioneUniversit~ di TorinoC.so Massimo D'Azeglio 42 - 10125 TORINO - ITALYABSTRACTIn this paper we present a parser which allows to make explicit the interconnections betweensyntax and semantics, to analyze the sentences ina quasi-deterministic fashion and, in many cases,to identify the roles of the various constituentseven if the sentance is ill-formed.
The main feature of the approach on which the parser is basedconsists in a two-level representation of the sy_ntactic knowledge: a first set of rules emits h~potheses about the constituents of the sentenceand their functional role and another set of rulesverifies whether a hypothesis satisfies the constraints about the well-formedness of sentences.However, the application of the second set ofrules is delayed until the semantic knowledge confirms the acceptability of the hypothesis.
If thesemantics reject it, a new hypothesis is obtainedby applying a simple and relatively unexpensive"natural" modification; a set of these modifications is predefined and only when none of them isapplicable a real backup is performed: in mostcases this situation corresponds to a case wherepeople would normally garden path.INTRODUCTIONThe problem of performing an accurate synta~tic analysis of Natural Language sentences isstill challenging for A.I.
people working in thefield of N.L.
interpretation (Charniak 81, Kaplan82).
The most relevant points which attracted attention recently are:the need of a strong connection between synta~tic processing and semantic interpretation inorder to reduce the space of the alternative sy~tactic analyses (Konolige 80, Sidner et al 81,Milne 82)- the convenience of a quasi-deterministic synta~tic analysis, in order to reduce the computational overhead associated with a heavy use of backup (Marcus 80)- the convenience of an approach which toleratesalso (partially) incorrect sentences, at leastwhen it is possible to obtain a meaningful interpretation (Weischedel & Black 80, Kwasny & Sondheimer 81, Hayes 81).The first two of these remarks guided the designand the implementation of a system devoted to theinterpretation of N.L.
(Italian) commands (Lesmo,Magnani & Torasso 81a and 81b).
In that system,however, as in most N.L.
interpreters, the anal~sis of the input sentence is mainly syntax-driven;for this reason, jus t in  case the input sentencerespects the constraints imposed by the syntacticknowledge it can be interpreted.The problem of analyzing ill-formed sentenceshas received a great deal of attention recently.However, most studies (Weischedel & Black 80,Kwasny & Sondheimer 81) are based on standard syn_tactic analyzers (A.T.N.)
which have been furtherly augmented in order to take into account senfences lacking some required constituents (elli~sis) or where some syntactic constraints are notrespected (e.g.
agreement in number between thesubject and the verb).There are two problems with this approach;both of them depend on the choice of having a sy~tax based analysis.
The first problem is the necessity of extending the grammar; of course, it isnecessary, in general, to specify what is grarmuat~cal 'and what is not, but it would be useful thatthis specification does not interfere too heavilyin the interpretation of the sentence.
In fact, ifall deviations would have to be accounted for inthe grammar, an unforeseen structure would blockthe analysis, even if the sentence can be considered as understandable.
Consider, for instance, thefollowing sentence:Mary drove the car and John the truck (SI)The absence of the verb in the second clause canbe considered an acceptable form of ellipsis and,consequently, the sentence can be interpreted correctly.
On the othe: hand, it is very unlikelythat an extension of the grammar would cover thefollowing ungrammatical (see Winograd 83, pag.480)sentence: ?The book that for John to read would bedifficult is beautiful ($2)114However, even if some efforts are required, thissentence can be considered as understandable.
Asstated above, a comprehensive system must be ableto detect the ungrammaticality of $2, but this detection should not prevent the construction of astructure to pass to the semantic analyzer.
Moreover, it seems that a subtle grammaticality test ofthis kind is easier to make (and to express) on astructured representation of the sentence (e.g.
atree) than on the input sentence as such.The second problem which must be faced whenan ATN .
~s extended to handle ill-formed sentences is the one of word ordering.
ATNs are po Eerful formal tools able to analyze type-O languages; in the theory of formal languages a language is defined as a set of strings; for thisreason ATNs must recognize Uordered sequences" ofsymbols (or words).
Of course also the natural languages have fixed rules which define the admissible orderings of words and constituents, but, ifthose constraints have to be relaxed to accept ill-formed inputs, some extension%which are lessstraightforward than the ones used for handlingthe absence of a constituent are needed.
For exampie, the sentenceAte the apple John ($3)is ungrammatical, easily understandable, but seemsto require in an ATN the extension of the S net~toallow to traverse the constituents in a different(even if syntactically wrong) order.
Also in thiscase it seems that the construction of a struetured representation of the sentence could be thefirst step of the analysis; when it is done, theordering constraints can easily be verified and,in case they are not respected either an alternarive analysis is tried?or, as in the case of $3~the sentence is passed to the Semantic analyzerand, possibly, the parser signals the presence ofa syntactic error.In this paper we present a parser which allows to make axplicit the interconnections betweensyntax and semantics , to analyze the sentences ina quasi-deterministic fashion and, in many cases,to identify the roles of the various constituentseven if the sentence is ill-formed.The main feature of the approach on which theparser is based consists in the two-level represe~tation of the syntactic knowledge: a first set ofrules emits hypotheses about the constituents ofthe sentences and their functional role and anmother set of rules verifies whether a hypothesissatisfies the constraints about the well-formedhess of sentences.
However, the application of thesecond set of rules is delayed until the semanticknowledge confirms the acceptability of the hyp~thesis.
If the semantics reject the current hyp~thesis, an alternative one is tested: this controlstructure guarantees that all hypotheses which satisfy the weak syntactic constraints (which governthe emission of hypotheses) and the semantic constraints are tried before considering the inputsentence as uninterpretable.The claim that the parser operates in a quasi-deterministic fashion is justified by the kind ofprocessing that the system performs when a hyp~thesis is rejected: in most cases a new hypothesisis obtained by applying a simple and relatively unexpensive "natural" modification; a set of thesemodifications is predefined and only when none ofthem is applicable a real backup is performed: inmost cases this situation corresponds to a casewhere people would normally garden path.The decision of paying particular attentionto the problem of analyzing ill-formed sentencesis motivated by the intended application of theparser.
In fact it is included in a larger system,which allows the user to interact in natural language with a relational data base (Siklossy, Lesmo& Torasso 83, Lesmo, Siklossy & Torasso 83).Various systems have been developed in the lastyears, which act as N.L.
interfaces to data bases(Harris 77, Waltz 78, Konolige 80) and all of thempointed out the necessity of having at disposalmechanisms for handling ill-formed inputs (mainlyellipsis).In the following some example sentences willbe discussed; they refer both to the implementedsystem and to more general sentences.
This is ju~tified, because the linguistic coverage of theperser is wider than the one required by a database interface, even if the data base, the semantic knowledge and the lexicon are restricted to"a particular domain.AN EXAMPLE OF THE PARSER'S RESULTBefore describing the parser control structure, it is worth having a look at the final re~resentation of the input sentence which is prod~ced by the parser.
It consists in a tree whichrepresents the relationships existing among theconstituents of the input sentence according tothe "head and modifier" approach (Winograd 83,pag.73) ?.
An example of such a tree is reported infig.l.It may be noticed that the tree is a case re?resentation of the sentence: in the verbal nodeso This structure might be related to the "synta~tic/semantic shape representation of RUS (Sidneret al 81), but we are not sure.if5RELICONNI ?REF2REL2REF3ADJIFig.
l - Result of the analysis of the sentence:CONN4 ~ CONN~-~ kCONN7\]UNMARKED~t I IUNMARKEDI+I I~R E ~  REF5 REF7\[CHEIH \] I'ES~E\[t\[H'\]t\[ IDAREF6 ?\[FISICAIH;"Quali sono gli studenti di sesso maschile che hanno sostenuto l'esame di Fisica in data 18/1/83?
"(Who are the students of male sex who passed the test of Physics on 18/1/83?
).HEADTENSEMODEFORMGENDERNUMBERPERSONAUXMOODDEPENDTYPELINKUPROLE iROLE 2ROLE nTRANSLRoot of the verbPresent, Past, FutureIndicative, Participle ...Active, PassiveM, FSingular, PluralI, 2, 3Yes, NoDeclarative, !nterrosative ...Main, Relative ...RELa pointer: : : : :a translation(a)\[ROLETYPE I POINTERI SPECIAL I SYN F  i(b)Fig.2 - Prototypical structure of the REL nodes.All the slots appearing in fig.2a are atomic and their possible contents are exempl !fled in the slot (LINKUP is the upwardpointer which enables to traverse the treebottom-up; this link is not depicted infig.l); the only exception are the ROLEs,which correspond to the links shown infig.
l and whose structure is shown infig.2b.
For the meaning of the differentfields refer to the example of fig.3.
TheTRANSL slot refers to the interpretation(in terms of data base operations) of theconstituent headed by the node (see expl~nations in the text).HEADTENSEMODEFORMGENDERNUMBERPERSONAUXMOODDEPENDTYPELINKUPROLESTRANSLFig.3 -SOSTENEREPresent PastIndicativeActiveAnyPlural3NoDeclarativeRelativeRELREF2CASE CONN4 RELPRON SUBJAUX / / /H / / /CASE CONN5 NIL OBJCASE CONN7 NIL PP(select &pass((~course eq Fisica)(~date eq 18/1/83)))Actual contents of the node REL2 (SOSTENERE) of fig.l.
Five ROLEs appear in thisinstance of REL.
In the first, fourth andfifth ROLE the ROLETYPE is "CASE", becausethey refer to actual cases of the verb;the syntactic function of each case is reported in the fourth field (SYNTFUN).
Thesecond and third ROLE have the only function of marking the position in the sentence of the auxiliary (hanno - have) andof the verbal head (sostenuto - passed).The SPECIAL field is used to mark cases ~filled by interrogatives, reflexive pronouns, etc.
(RELPRON means RELative PRONoun).
Notice that the AUX slot is used tosignal the fact that the head of the verbis (or is not) an auxiliary.116REL Relation Verbs, copulasREF Referent Nouns, pronounsCONN Connector Prepositions, conjunctionsArticles,DET Determiner demonstrative adjectives,adjectival question wordsAdverbialMOD AdverbsModifierADJ Adjectival AdjectivesModifierTable 1 - The node types: the first column containsthe name (actual and extended); the second one contains the classical syntacticcategories associated with the node type.
(RELation) each pointer corresponds to a syntacticcase associated with the verb; in the REF nodes,which roughly correspond to nouns and pronouns,the dependent structures represent the specific~tions of the node.
The H field indicates the pos!tion of the constituent's head (i.e.
the verb ornoun) in the surface sentence and the A fields areused in the REL nodes to indicate the position ofthe possible auxiliaries.
The actual structure ofthe nodes appearing in the figure is much more complex; for example, the protoype description of theREL nodes is reported in fig.2.
In fig.3 the actual structure of the node REL2 (SOSTENERE) is reported.
A number of remarks are required:- when a REL node is instantiated it does not conrain any ROLE slot.
Whereas the other slots are"filled" when the needed piece of information isavailable (normally this happens when the headof the verb is scanned), the ROLE slots are d~namically created when a given constituent isattached to the REL node (with the exception ofAUX and H);- some slots are redundant, since their contentscan be deduced by traversing the tree.
For exampie, the contents of the slot DEPEND and of thefield SPECIAL of the ROLE slot can be obtainedon the basis of the LINKUP node and of the firstcase of the clause respectively.
They have beenincluded for the sake of efficiency;- the sole input word of the example sentencewhich does not appear in a node of fig.l is theauxiliary "hanno".
Auxiliaries have been considered as components of the verb, so that theirpresence is signalled only by means of an AUXrole.
The actual auxiliary, its tense, its number, etc.
are deducible from the contents of theother slots of the REL node.The different types of nodes which have beendefined are listed in Table i.As stated in the introduction, the systemshould act a~ a natural language front-end for arelational data base.
The structure reported infig.l is the basis for performing the semanticchecks and for translating the sentence in a relational algebra expression (Date 81) which corr~spond to the input query.
As will be described inthe following sections, neither the semanticchecks nor the actual translation of the query aredone at the end of the syntactic analysis; in factthe semantic checks are performed when a node isfilled with a content word and the translation isobtained in an incremental way from the constit~ents occurring in the tree.
For instance, the s~mantic check procedures will be triggered when theword "sesso" (sex) is encountered and the correspending REF node is created, linked and filledto verify that the students have a sex (or, moreprecisely, that the sequence "studente di sesso"is acceptable).As regards the translation, it is worth n~ricing that it does not represent the interpret~tion of the given node, but the data base interpretation of the whole constituent headed by thatnode; for this reason it is obtained by combiningthe translations of all depending constituents.Let us consider, for example, the node REF2.
Thetranslation associated with CONN3 is(join %s tudent(select &sex ((~sex eq m)))($student eq ~person))The translation associated with REL2 is(select &pass ((~course eq Fisiea)(~date eq 18/1/83)))The resulting translation associated with REF2 i3(join (join %student(select &sex ((~sex eq m)))($student eq ~person))(select &pass (($course eq Fisica)(~date eq 18/1/83)))(~student eq ~student))A detailed description of the way this translationis obtained is reported in (Lesmo, Siklossy, Tora hso 83).
However, for the sake of clarity it is important to say that %student is the unary relationwhose unique attribute is ~student and which co~tains the names of all the students whose data arestored in the data base; &sex is a binary relation(attributes Sperson and ~sex) containing the sexof all the persons known to the system; finally&pass is the relation (attributes ~student,~course, ~grade, ~date) where are stored the resuits of the tests passed by the students.
Thetranslation which have been shown are stored inthe TRANSL slot of the associated nodes.117THE CONSTRUCTION PROCESSThe tree described in the previous section isbuilt by means of a set of rules of the form condition-action.
With each syntactic category a subsetof these rules is associated: when an input word ofthe given category is encountered in the input sentence, then the subset of rules associated withthat category is activated and the conditions areevaluated.
The conditions involve tests on the current structure of the tree (i.e.
the "status" ofthe analysis) and may request a one-word lookahead.If just one rule is selected (i.e.
all other conditions evaluate to false), its action part is execured.
An action consists in the construction ofnew nodes, in their filling up with particular values (normally depending on the input word) and intheir attachment to the already existing tree.
Intable 2 are reported as an example some of therules of the packet associated with the categoryADJECTIVE.
The rules which are not reported handlethe cases of predicative adjectives and adjective~preceded by adverbs.
In some of the rules a one-word lookahea~is used; it allows the parser tobuild the right structure in virtually all simplecases.
In fact, even if the semantic knowledgesource does not affect the choice of the rule, itcan trigger the natural ch~l~nges, which modify thetree; these changes substitute the backup in manyof the cases wher~the hypothesized syntactic structure does not satisfy the semantic constraints.An example of a sentence portion which otto,can be disambiguated only by inspecting the semantic constraints is the following:... - Determiner - Noun ~ Adjective - Noun - ...In this case the adjective may modify either thepreceding or the following noun.
Consider the sentences $4 and $5?
:Per le persone anziane bevande ghiacciate ($4)sono dannose(For old people icy-cold drinks are harmful)Si arrampicano sulle montagne agiliscalatori ($5)(Agile cragsmen cramble up the mountains)The strategy adopted by the parser is to attach thenode representing the adjective to a newly createdREF node which will be filled when the second nounis analyzed (see the action part of Rule 4 in tab.2).
In case the semantics reject this choice (se~tence $4) a natural change is triggered; it disconnects the adjectival node and moves it back to theREF node which represents the first noun.?
The sequence of categories given in the textcorresponds to "... le persone anziane bevande..." in $4 and to "... le montagne agili scalatori ..." in $5.RULE I COND : CURRENT CONNACTION: CRLINK REF CONNCRLINK ADJ REFFILL ADJRULE 2 CON'D: UNFILLED REF or(CURFILL ADJ and NEXT # NOUN)ACTION: CRLINK ADJ REFFILL ADJRULE 4 COND:ACTION:(CURFILL REF or CURRENT NIL orCURRENT REL) and NEXT = NOUNCRLINK CONN RELFILL CONN 'UNMARKEDCRLINK REF CONNCRLINK ADJ REFFILL ADJTable 2 - Some of the rules associated with the sY_nntactic category ADJECTIVE.The predicates used in the conditions areCURRENT X: TRUE if the current node is oftype X.UNFILLED X: TRUE if the current node orthe node above is of type X and it isnot f i l ledyet .CURFILL X: TRUE if the current node is oftype X and is filled.NEXT CAT: is a lookahead function whichreturns TRUE if the category of thenext word in the input string is CAT.The structure-building functions used inthe actions areCRLINK XI X2: creates a new node of typeXI and links it to a node of type X2.The node which must be used is locatedby moving up on the rightmost branchof the tree.FILL X VAL: a node of type X (located asin CRLINK) is filled with the valueVAL (~ denotes the normalized form ofthe current word).In general, however, it is not possible tovoid the use of backup.
The backup mechanism isneeded when more than one of the conditions of therules associated with a particular category ismatched, but this case is actually restricted tovery complex (and unusual) relative clauses.
Moreoften, the backup is required when the input wordis ambiguous, i.e.
it belongs to more than one sy~tactic categories.
In this case all conditions a~sociated with the different categories are evaluated an~ in some cases more than one of them ismatched.
In all these cases the status of the analysis is saved (i.e.
the current tree) togetherwith the identifiers of the matched rules and apointer to the input sentence.As an example of sentences in which the bac hi18up mechanism is used consider the sentences $6-$8;in them there is a lexical ambiguity for the word"che" (it acts as a relative pronoun in $6, as aconjunction in S7 and as an adjectival modifier in$8); moreover in $6 and S7 "pesca" is a form of theverb "pescare" (to fish) whereas in $8 it is a noun(the fishing).Di a quel ragazzo ehe pesca di andarsene ($6)(Tell that boy who is fishing to go away)Di a quel ragazzo che pesca male ($7)(Tell that boy that he is fishing badly)DI a quel ragazzo che pesca fantastica (s8)hai fatto (Tell that boy what a marvellous fishing you have done).THE VERIFICATION PROCESSWhen a node is filled, it is supposed to bealready attlched to the tree.
The filling operalion triggers some procedures associated with thetype of the node which is being filled.
Among them,the AGREEMENT procedures have the task of checkingperson, number and gender agreement between a nodeand its dependants.
Particularly important is theagreement procedure associated with the REL nodetype, because it selects the REF node which canact as syntactic subject of the sentence (thissuggestion may be overcome later by virtue of semantic considerations).
If the agreement constraints are violated, then the natural changesare attempted; if no restructuring of the tree issuccessful, then the initial status is maintainedwithout changes and a warning message is issued.Perhaps, among the procedures triggered bythe filling of a node, the one which have the mostdramatic effects on the subsequent behavior of thesystem is the semantic check procedure.
In fact,if the outcome of the semantic check procedure reports the non-admissibility of an attachment, theparser is forced to find another alternative.
Thisis done by first applying the natural changes andthen, if all of them fail, by performing a backup.A semantic procedure refers to the semantic knowledge of the domain under consideration, which isstored in form of a two-level network (Lesmo,"iklossy & Torasso 83); the external level allowsto perform the checks, whereas the internal levelcarries the information necessary to perform thetranslation.Different checks are done depending on thetype of the node.
When an ADJ node is attached toa REF node, the system has to verify that the adjective is an acceptable linguistic description ofthe noun stored in the REF node.
In case two REFnodes are attached (this case occurs in Italianonly when the lower REF contains a proper noun)the system has to verify that the lower REF conrains a possible identifier of the class represen~ed by the noun stored in the upper REF.When twoREFs are attached via a CONN node, the constituentheaded by the lower REF has the purpose either ofspecifying a subset of the class identified by thenoun stored in the upper REF or to refer to a pro~erty of a given object.
An example of the firstkind is "the professors of the department X" andan example of the second kind is "the sex of theprofessors ...".
In this case the semantic proc~dure accesses the net to reject incorrect specif!cations of the form "the sex of the department X".A quite different behavior characterizes the attachment of a role to a verb (a REF node to a RELnode via a CONN node); of course, the attachmentof a new case cannot trigger a simple case check,but must take into account also all the cases attached before.
A side effect of this process isthe binding of the actual cases to the cases pr~dieted in the net; this can be useful when thereare two cases which have the same marker (or whichare both unmarked) to determine, by using the selectional restrictions stored in the net, the actual role of the filler of each case (e.g.
syntacticsubject or syntactic object).The completion of a constituent triggers thelast set of syntactic rules; they verify whetherthe constituent (that is the node itself and itsdescendants) respects the ordering constraints.
Incase those constraints are violated (e.g.
"belli ibambini sono" - nice the babies are) a warning message is issued but the sentence is considered asinterpretable.A word is due to explain the meaning of theterm "complete".
The constituent headed by thenode n?
is considered as complete when a new nodein.
is attached to a node n k which is an ancestorgf ni; all constituents headed by the nodes b~longing to the rightmost path of the tree are considered as complete when the system encounters theend of the sentence.
The concept of "completion"of a constituent is particularly important becauseonly when the constituent headed by the node n. isicomplete the system translates the constituent byusing different pieces of information gathered bythesemant ic  procedures and stores the translationin the TRANSL slot of the node n..1NATURAL CHANGES VERSUS BACKUPThe natural changes have the purpose of restructuring the tree by moving around constituentswithout requiring backup.
They are represented aspattern-action rules, where the pattern part isused to select the rules which can be applied,whereas the action part implements the transformalion of the tree.
The natural changes currently implemented are of two main types:- MOVE UP (the easiest and most common): it at119REL1( ESSERE\[ t\[ Ht'~ ICONN1 .r  "CONN2$l tl 1 UN R.EPklREFI ~ REF2 ~"ISTUDENTEI+I HIllD E ~ ' ~ C ~REF3ADJI ~ REL2L  SCHXLEi \[(a) CONN4 W "IRELI\[EssE \[ JHtr\[CONNI ~ i )CONN2?%(b)Fig.4 - Example of the use of a MOVE UP naturalchange.
The semantic procedure associatedwith the REL node type detects that "sesso"cannot fill any of the cases of "sostenere"(a), so that the constituent headed by "sostenere" is MOVEd UP to "studente" (b).taches a constituent (i.e, a subtree) to a highernode (whose type is specified in the rule) of thecurrent branch of the tree.- MOVE BACK: it attaches a constituent to the rightmost leaf of the preceding branch of the tree.For example; a MOVE UP rule is used to build thetree shown in fig.l: the relative clause "che hannosostenuto ..." is firstly attached to the nearestREF node ("sesso"); when the verb is found the nodeREL2 is filled (fig.4a), the agreement and semanticcheck procedures are triggered and this latter returns that "sesso" cannot fill an unmarked case of"sostenere", so that the partially built relativeclause is moved up to REF2 ("studente" - fig.4b);this new hypothesis is validated by the agreementand semantic procedures.
An example of the'applic~tion of a MOVE BACK rule has been given in thethird section, in connection with the problem ofattaching the adjectival nodes (see fig.5).As stated in the previous section, the naturalchanges do not substitute in all cases the backupmechanism; the backup is strictly connected withthe concept of "garden path".
PARSIFAL (Marcus 80)RELICONNIz~ ~ CONN2I t lIPERSONAI tIH'l IBEVA~AItlHI(a) D E~ -~ A D ~RELICONNI ~' - -~CONN2Z----"(b) IPERSONAItlHI*I IBEVKNDAIH IDE~ A ~Fig.5 - Example of MOVE BACK natural change.
Whenthe word "bevande" (drinks) is scanned thenode ADJI is MOVED BACK from REF2 (a) tothe last REF node of the previous branchof the tree, i.e.
REFI (b).is able to parse sentences in a deterministic waywhen they are not garden paths.
However it has beenshown (Milne 82) that:- For a pair of potential garden path sentences, itis not possible to uniquely determine which is agarden path and which is not (different peoplemay choose in different ways).- The choice of having a n-constituent lookahead(as in PARSIFAL) does not allow to decide whethera sentence is a potential garden path in a psych~logically plausible way.- The semantic knowledge plays a fundamental rolein choosing a particular analysis.Milne argues that a one-word lookahead, with thesubstantial help of semantic information is what isneeded to provide a model of N.L.
which is psych~logically sound (one-word lookahead plus semanticsis also advocated in RUS - Braehman et al - 79).We think that the approach adopted in our pa~ser basically agrees with this position.
In a rat~er vague sense, the non-complete nodes of our treecorrespond with the Active Node Stack, i.e.
withthe not yet completed constituents of the sentence.The natural changes allow to operate on these nodeson the basis of semantic information.
However thereis a fundamental difference: our parser has at disposal the whole structure built previously.
An e~ample of the possibility of using non-active co~stituents is given by the MOVE BACK natural changeswhere a previou$constituent (already completed) ~sused to attach a node (see REFI in fig.5).
Thisgreater flexibility has the disadvantage of not gi~ing any cue for deciding a-priori what is a validnatural change and what is not (it is possible todevise natural changes for all possible kinds ofrestructuring of the tree); however, it allows to120-choose heuristics which are in agreement with theactual behavior of humans and which fit in a simpleway in the proposed model.As regards the use of backup, the cited worksdo not give an account of what happens in the palset when an analysis fails due to a garden path(see, however, Marcus 80, pp.202-220).
Our prov!sional solution is to use the backup, a computational tool heavier than the natural changes: it shouldcorrespond to the situation when "the user must tonmsciously undo this previous choice after detecting an inconsistency" (woods 73, pag.133).
We acknowledge the problems associated with this choice,e.g.
the need of saving at some times the status ofthe analysis, the possibility of interference withthe natural changes, etc., but the backup is usedparsimoniously (due to the condition part of thesyntactic rules) and, anyway, we do not believe itis the final solution to this problem.CONCLUDING REMARKSThe paper describes a parser for a large subset of Italian.
The novel control structure involves the use of natural changes which restructurethe tree representing the status of the analysiswithout the intervention of the backup mechanism.This allows the system to operate in a pseudo-dete~ministic way, in that the use of backup is limitedto sentences which could make people garden path.Another major feature of the parser is its ability to cope with some kinds of ill-formedness ofthe input sentences.
This is obtained by a decomp~sition of the syntactic knowledge into two levels:the first level contains structure building rules,whereas the second level contains rules of agreement and rules related with the ordering of constituents.
This structuring of the syntactic knowledgeallows the parser to be data driven: the scanningof a new input word produces its insertion into theanalysis tree; this may be seen as an hypothesis ofinterpretation, which can be accepted or rejectedlater on the basis of other independent knowledgesources.
This allows the system to avoid the use ofclassical rewriting rules or transition networkswhich represent in an integrated way all syntacticconstraints.As stated in the introduction, the authors aredeveloping a N.L.
interface to a relational database.
The lexical analyzer and the access procedures to the network representing the semantic constraints are running, the construction rules andthe natural changes are being debugged, whereas theordering rules are under development.
The translation into the actual data base query is running.The system is written in FRANZ LISP and runs on aVAX 11/780 under the UNIX operating system.REFERENCESBrachman R.J.-et al: Research in Natural LanguageUnderstanding.
BBN Report no.4274 (1979).Charniak E.: Six Topics in Search of a Parser: AnOverview of AI Language Research.
Proc.7th IJCAI,Vancouver, B.C.
(1981), 1079-1087.Date C.J.
: An Introduction to Database Systems (3rdedition), Addison Wesley (1981).Harris L.R.
: User-Oriented Data Base Query in theROBOT Natural Language Query System.
Int.
3. ofMan-Machine Studies 9 (1977), 697-713'.Hayes P.J.
: Multiple Strategies Construction Spec~fic Parsing for a Flexible Database Access andUpdate.
P=oc.7th IJCAI,Vancouver(1981), 432-439.Kaplan S.J.
(ed.
): Special Issue on Natural Language Processing, SlGART Newsletter 79 (1982).Konolige K.G.
: A Framework for a Portable NaturalLanguage Interface to Databases.
In D.Sagalowicz(ed.
): Mechanical Intelligence: Research and A~plications, Final Tech.
Rep., SRI Int.
(1980).Kwasny S.C., Sondheimer N.K.
: Relaxation Techniquesfor Parsing Grammatically Ill-Formed Input inNatural Language Understanding Systems.
AJCL 7(1981), 99-108.Lesmo L., Magnani D., Torasso P.: A DeterministicAnalyzer for the Interpretation of Natural Language Commands.
Proc.7th IJCAI, Vancouver B.C.
(1981a), 440-442.Lesmo L., Magnani D., Torasso P.: Lexical and Pra~matic Knowledge for Natural Language Analysis.Proc.
IEEE Int.Conf.
on Cybernetics and Society,Atlanta GA (1981b), 301-305.Lesmo L., Siklossy L., Torasso P.: A Two-Level Netfor Integrating Selectional Restrictions and Semantic Knowledge.
IEEE Int.
Conf.
on Cyberneticsand Society, Bombay and New Delhi (Dec 1983).Marcus M.P.
: A Theory of Syntactic Recognition forNatural Language.
MIT Press, Cambridge MA (1980)Milne R.W.
: Predicting Garden Path Sentences.Cognitive Science 6 (1982), 349-373.Sidner C.L.
et al: Research in Knowledge Repre~entation for Natural Language Understanding.BBN Report no.4735 (1981).Siklossy L., Lesmo L., Torasso P.: Flexible Pragm~tics for Database Oriented Query Answering.
ISIInternal Report (1983).Waltz D.L.
: An English Language Question-AnsweringSystem for a Large Relational Data Base.
Comm.ACM 21 (1978), 526-539.Weischedel R.M., Black J.E.
: Responding Intelligently to Unparsable Inputs.
AJCL 6 (1980), 97-109.Wlnograd T.: Language as a Cognitive Process.Vol.l: Syntax.
Addison Wesley (1983).Woods W.A.
: An Experimental Parsing System forTransition Network Grammars.
In R.Rustin (ed.
):Natural Language Processing.
Algorithmics Press,New York (1973), 111-154.121
