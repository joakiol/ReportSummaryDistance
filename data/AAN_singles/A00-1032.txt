Language Independent Morphological AnalysisYamashita, Tatsuo and Matsumoto, YujiGraduate School of Information ScienceNara Institute of Science and Technology{ tatuo-y, matsu} @is.
aist-nara, ac.jpAbstractThis paper proposes a framework of language inde-pendent morphological nalysis and mainly concen-trate on tokenization, the first process of morpholog-ical analysis.
Although tokenization is usually notregarded as a difficult task in most segmented lan-guages uch as English, there are a number of prob-lems in achieving precise treatment oflexical entries.We first introduce the concept of morpho-fragments,which are intermediate units between characters andlexical entries.
We describe our approach to resolveproblems arising in tokenization so as to attain alanguage independent morphological nalyzer.1 IntroductionThe first step in natural anguage processing is toidentify words in a sentence.
We call this process amorphological nalysis.
Various languages exist inthe world, and strategies for morphological nalysisdiffer by types of language.
Conventionally, mor-phological analyzers have been developed in one an-alyzer for each language approach.
This is a lan-guage dependent approach.
In contrast, We proposea framework of language independent morphologi-cal analysis ystem.
We employ one analyzer forany language approach.
This approach enables arapid implementation f morphological nalysis ys-tems for new languages.We define two types of written languages: oneis a segmented language, and the other is a non-segmented language.
In non-segmented languagessuch as Chinese and Japanese, since words are notseparated by delimiters uch as white spaces, tok-enization is a important and difficult task.
In seg-mented languages such as English, since words areseemingly separated by white spaces or punctuationmarks, tokenization is regarded as a relatively easytask and little attention has been paid to.
Therefore,each language dependent morphological nalyzer hasits own strategy for tokenization.
We call a stringdefined in the dictionary lexeme.
From an algorith-mic point of view, tokenization is regarded as theprocess of converting an input stream of charactersinto a stream of lexemes.We assume that a morphological nalysis consistsof three processes: tokenization, dictionary look-up, and disambiguation.
Dictionary look-up getsa string and returns a set of lexemes with part-of-speech information.
This implicitly contains lemma-tization.
Disambiguation selects the most plausiblesequence of lexemes by a use of a rule-base modelor a hidden Markov model (HMM)(Manning andSchiitze, 1999).
Disambiguation i s already languageindependent, since it does not process strings di-rectly and therefore will not be taken up.
On theother hand, tokenization and dictionary look-up arelanguage dependent and shall be explained more inthis paper.We consider problems concerning tokenizationof segmented languages in Section 2.
To resolvethese problem, we first apply the method of non-segmented languages processing to segmented lan-guages (Section 3).
However, we do not obtain asatisfactory result.
Then, we introduce the con-cept of morpho-fragments to generalize the methodof non-segmented language processing (Section 4).The proposed framework resolves most problems intokenization, and an efficient language independentpart-of-speech tagging becomes possible.2 P rob lems o f  Token izat ion  inSegmented  LanguagesIn segmented languages such as English, tokeniza-tion is regarded as a relatively easy task and littleattention has been paid to.
When a sentence hasclear word boundaries, the analyzer just consultsthe dictionary look-up component whether stringsbetween delimiters exist in the dictionary.
If anystring exists, the dictionary look-up component re-turns the set of possible parts-of-speech.
This stringis known as graphic word which is defined as "a stringof contiguous alphanumeric characters with space oneither side; may include hyphens and apostrophes,but no other punctuation marks" (Ku~era nd Fran-cis, 1967).Conventionally, in segmented languages, an ana-lyzer converts a stream of characters into graphicwords (see the rows labeled "Characters" and232Sentence Dr. Lee and John's son go to the McDonald's in New York.Characters IDIrl.
I ILFe\[el lalnldl IJlo\[hJal'\[sl Islolal lglol Nol  \]t\[hlel IMlc\]Dlolnlall\]dl'lm\] Iilnl INlelul fflo\]rlkl.
IGraphic \[Drl I \]Lee I land I IJohn'sl Isonl \]go I Itol Ithel \]McDonald's\[ linl \]Newl IYork\].l WordsLexemes \[Dr.\[ ILee I landl \]John\]'s\[ Isonl Igo\] Itol \]thel IScDonald'sl \]inl tNew York\].lMorpho- fragments IDr\['\[ ILeel landl \[Johnl'lsl Isonl Igol Itol Ithel \]McDonaldl'\[s\] linl \[Newl IYork\].lFigure 1: Decomposition of Sentence in EnglishSentence (He is home for holiday.
)Characters \ [~\ [  ~ \[z~k\[ ~t  "C" I')~ I~" I L t "C \[ ~ I ~ \] oMorpho-fragments V I'J  I I L. I I I I oFigure 2: Decomposition of Sentence in Japanese"Graphic Words" in Figure 1) and searches the dic-tionary for these graphic words.
However, in prac-tice, we want a sequence of lexemes (see the linelabeled "Lexemes" in Figure 1).
We list two majorproblems of tokenization i segmented languages be-low (examples in English).
We use the term segmentto refer to a string separated by white spaces.1.
Segmentation(one s gment into several lex-emes):Segments with a period at the end (e.g, "Calif."and "etc.")
suffer from segmentation ambigu-ity.
The period can denote an abbreviation, theend of a sentence, or both.
The problem of sen-tence boundary ambiguity is not easy to solve(Palmer and Hearst, 1997).
A segment withan apostrophe also has segmentation ambiguity.For example, "McDonald's" is ambiguous sincethis string can be segmented into either "Mc-Donald / Proper noun" + " 's / Possessive nd-ing" or "McDonald's / Proper noun (companyname)".
In addition, "boys' " in a sentence "...the boys' toys ..." is ambiguous.
The string canbe segmented into either "boys' / Plural posses-sive" or "boys /P lura l  Noun" ? "
' / Punctu-ation (the end of a quotation)" (Manning andSchiitze, 1999).
If a hyphenated segment suchas "data-base," "F-16," or "MS-DOS" exists inthe dictionary, it should be an independent lex-eme.
However, if a hyphenated segment such as"55-years-old" does not exist in the dictionary,hyphens hould be treated as independent to-kens(Fox, 1992).
Other punctuation marks suchas "/" or "_" have the same problem in "OS/2"or "max_size" (in programming languages).2.
Round-up(several segments into one lexeme):If a lexeme consisting of a sequence of segmentssuch as a proper noun (e.g., "New York") ora phrasal verb (e.g., "look at" and "get up")exists in the dictionary, it should be a lexeme.To handle such lexemes, we need to store multi-segment lexemes in the dictionary.
Webster andKit handle idioms and fixed expressions in thisway(Webster and Kit, 1992).
In Penn Tree-bank(Santorini, 1990), a proper noun like "NewYork" is defined as two individual proper nouns"New / NNP" ?
"York / NNP," disregardinground-up of several:segments into a lexeme.The definition of lexemes in a dictionary dependson the requirement of application.
Therefore, a sim-ple pattern matcher is not enough to deal with lan-guage independent tokenization.Non-segmented languages do not have a delimiterbetween lexemes (Figure 2).
Therefore, a treatmentof further segmentation and rounding up has beenwell considered.
In a non-segmented language, theanalyzer considers all prefixes from each position inthe sentence, checks whether each prefix matchesthe lexeme in the dictionary, stores these lexemesin a graph structure, and finds the most plausiblesequence of lexemes in the graph structure.
To findthe sequence, Nagata proposed a probabilistic lan-guage model for non-segmented languages(Nagata,1994)(Nagata, 1999).The crucial difference between segmented and233non-segmented languages in the process of morpho-logical analysis appears in the way of the dictionarylook-up.
The standard technique for looking up lex-emes in Japanese dictionaries i to use a trie struc-ture(Fredkin, 1960)(Knuth, 1998).
A trie structureddictionary gives all possible lexemes that start ata given position in a sentence ffectively(Morimotoand Aoe, 1993).
We call this method of wordlooking-up as "common prefix search" (hereafterCPS).
Figure 3 shows a part of the trie for Japaneselexeme dictionary.
The results of CPS for "~ j~~'7 ~ o "(I go to Ebina.)
are "~j~" and "~."
Toget al possible lexemes in the sentence, the analyzerhas to slide the start position for CPS to the rightby character by character.3 A Na ive  ApproachA simple method that directly applies the mor-phological analysis method for non-segmented lan-guages can handle the problems of segmentedlanguages.
For instance, to analyze the sen-tence, "They've gone to school together," we firstdelete all white spaces in the sentence and get"They'vegonetoschooltogether."
Then we pass it tothe analyzer for non-segmented languages.
However,the analyzer may return the result as "They / 've /gone / to / school / to / get / her / ."
inducing aspurious ambiguity.
Mills applied this method andtokenized the medieval manuscript in Cornish(Mills,1998).We carried out experiments o examine the in-fluence of delimiter deletion.
We use Penn Tree-bank(Santorini, 1990) part-of-speech tagged cor-pus (1.3M lexemes) to train an HMM and ana-lyze sentences by HMM-based morphological na-lyzer MOZ(Yamashita, 1999)(Ymashita et al, 1999).We use a bigram model for training it from the cor-pus.
Test data is the same as the training corpus.Table 1 shows accuracy of segmentation a d part-of-speech tagging.
The accuracy is expressed in termsof recall and precision(Nagata, 1999).
Let the num-ber of lexemes in the tagged corpus be Std, the num-ber of lexemes in the output of the analyze be Sys,and the number of matched lexemes be M. Recallis defined as M/Std, precision is defined as M/Sys.The following are the labels in Table 1 (sentence for-mats and methods we use):LXS We isolate all the lexemes in sentences andapply the method for segmented languages tothe sentences.
This situation is ideal, sincethe problems we discussed in Section 2 donot exist.
In other words, all the sentencesdo not have segmentation ambiguity.
We usethe results as the baseline.
Example sentence:"Itu ' suMr.
uLeeu ' supenu ?
"NSP We remove all the spaces in sentences andapply the method for non-segmented lan-guages to the sentences.
Example sentence:"It ' sMr.
Lee  ' spen.
"NOR Sentences are in the original normal format.We apply the method for non-segmented lan-guages to the sentences.
Example sentence:"It ' SuMr.
uLee  ' supen.
"Because of no segmentation ambiguity, "LXS"performs better than "NSP" and "NOR."
The fol-lowing are typical example of segmentation errors.The errors originate from conjunctive ambiguity anddisjunctive ambiguity(Guo, 1997).conjunctive ambiguity The analyzer ecognized"away, .... ahead," anymore," and '~orkforce"as "a way," "a head," "any more," and '~orkforce," respectively.
In the results of "NSP," thenumber of this type of error is 11,267.disjunctive ambiguity The analyzer recognized"a tour," "a ton," and "Alaskan or" as "at our,""at on," and "Alaska nor," respectively.
In theresults of "NSP," the number of this type of er-ror is 233.Since only "NSP" has disjunctive ambiguity, "NOR"performs better than "NSP."
This shows that whitespaces between segments help to decrease segmenta-tion ambiguity.Though the proportional difference in accuracylooks slight between these models, there is a con-siderable influence in the analysis efficiency.
In thecases of "NSP" and "NOR," the analyzer may lookup the dictionary from any position in a given sen-tence, therefore candidates for lexemes increase, andthe analysis time also increase.
The results of ourexperiments show that the run time of analyses of"NSP" or "NOR" takes about 4 times more thanthat of "LXS.
"4 Morpho- f ragments :  The  Bu i ld ingB locksAlthough segmented languages seemingly have clearword boundaries, there are problems of further seg-mentation and rounding up as introduced in Section2.
The naive approach in Section 3 does not workwell.
In this section, we propose an efficient and so-phisticated method to solve the problems by intro-ducing the concept of morpho-/ragments.
We alsoshow that a uniform treatment of segmented andnon-segmented languages i possible without induc-ing the spurious ambiguity.4.1 DefinitionThe morpho-fragments (MFs) of a language is de-fined as the smallest set of strings of the alphabetwhich can compose all lexemes in the dictionary.
Inother words, MFs are intermediate units between234, O--O, "~/Noun (shrimp)I~ ?
- -  "~/Proper  noun (Ebina City)~/Noun (pawn)/?
- -  -:~ ( /Verb  (walk)?
i ?~/Noun (sidewalk)I ~?
- - , :~ /Noun (footbridge)LXSNSPNORMFFigure 3: Japanese Trie Structured DictionarySegmentation POS Tagging Analysis Time( Recall / Precision ) ( Recall / Precision ) ( Ratio )100 96.98 1.099.52 / 99.67 96.52 / 96.69 4.399.87 / 99.91 96.84 / 96.88 4.299.88 / 99.93 96.85 / 96.91 1.4Table 1: Results of Experimentscharacters and lexemes (see Figure 1 and Figure 2).MFs are well defined tokens which are specializedfor language independent morphological nalysis.For example, in English, all punctuation marksare MFs.
Parts of a token separated by a punctu-ation mark such as "He," "s," and the punctuationmark itself, .
.
.
.
.
in "He's" are MFs.
The tokens ina compound lexeme such as "New" and "York" in"New York" are also MFs.
In non-segmented lan-guages uch as Chinese and Japanese, every singlecharacter is a MF.
Figure 4 shows decomposition ofsentences into MFs (enclosed by "\[" and "\]") for sev-eral languages.
Delimiters (denoted " J ' )  are treatedas special MFs that cannot start nor end a lexeme.Once the set of MFs is determined, the dictio-nary is compiled into a trie structure in which theedges are labeled by MFs, as shown in Figure 5 forEnglish and in Figure 3 for Japanese.
A trie struc-ture ensures to return all and only possible lexemesstarting at a particular position in a sentence by aone-time consultation to the dictionary, resulting inan efficient dictionary look-up with no spurious am-biguity.When we analyze a sentence of a non-segmentedlanguage, to get al possible lexemes in the sentence,the analyzer slides the position one character byone character from the beginning to the end of thesentence and consults the trie structured ictionary(Section 2).
Note that every character is a MF innon-segmented languages.
In the same way, to an-alyze a sentence of a segmented language, the an-alyzer slides the position one MF by one MF andconsults the trie structured ictionary, then, all pos-sible lexemes are obtained.
For example, in Figure 5,the results of CPS for "'m in ..." are ..... and "'m,"and the results for "New York is ..." are "New" and"New York.
"Therefore, a morphological analyzer with CPS-based dictionary look-up for non-segmented lan-guages can be used for the analysis of segmentedlanguages.
In other words, MFs make possible lan-guage independent morphological nalysis.
We canalso say MFs specify the positions to start as well asto end the dictionary look-up.235Language Sentence Recognized Morpho-fragmentsEnglishChineseKoreanJapaneseI'm in New York.~ J ~ .
(He is my little brother.
)L~--~ ~ot  I ~c~.
(I go to school.
)-~g\ [~ ~ $ b .~ ~) o (Let's go to school.
)\[Zl\[ ' \] \[mlu\[?nlu\[Newlu\[Yorkl\[ .
\]-*  \]- *  \]Figure 4: Recognition of Morpho-fragments0- -  I/PronounAW I1I' / Punctuat ionmA 'm/VerbS0- -  's/Possessive ndingNew0,  New/AdjectiveYork" '0  w A New_York /Proper  nounFigure 5: English Trie Structured Dictionary4.2 How to Recognize Morpho-fragmentsThe problem is that it is not easy to identify thecomplete set of MFs for a segmented language.
Wedo not make effort o find out the minimum and com-plete set of MFs.
Instead, we decide to specify allthe possible delimiters and punctuation marks ap-pearing in the dictionary, these may separate MFsor become themselves as MFs.
By specifying the fol-lowing three kinds of information for the languageunder consideration, we attain a pseudo-completeMF definition.
The following setting not only sim-plifies the identification of MFs but also achieves auniform framework of language dependent morpho-logical analysis ystem.1.
The language type:The languages are classified into two groups:segmented and non-segmented languages.
"Language type" decides if every character inthe language can be an MF.
In non-segmentedlanguage every character can be an MF.
Insegmented language, punctuation marks andsequences of characters except for delimiterscan be an MF.2.
The set of the delimiters acting as boundaries:These act as boundaries of MFs.
However, thesecan not be independent MFs (can not start norend a lexeme).
For example, white spaces aredelimiters in segmented languages.3.
The set of the punctuation marks and othersymbols:These act as a boundary of MFs as well as anMF.
Examples are an apostrophe in "It's," aperiod in "Mr.," and a hyphen in "F-16."?
Using these information, the process of recogniz-ing MFs becomes imple and easy.
The process canbe implemented by a finite state machine or a simplepattern matcher.The following is the example of the definition forEnglish:1.
Language type: segmented language2.
Delimiters: white spaces, tabs, and carriage-returns3.
Punctuation marks: \[.\] [,\]\[:\] ; ['\] ["l \[-\] . "
"\[0\] \[1\] [2\].
?
?As is clear from the definition, "punctuation marks"are not necessary for non-segmented language, since236every character is an MF.
The following is the ex-ample for Japanese and Chinese.1.
Language type: non-segmented language2.
Delimiters: not required3.
Punctuation marks: not requiredThough Korean sentences are separated by spacesinto phrasal segments, Korean is a non-segmentedlanguage essentially, since each phrasal segment doesnot have lexeme boundaries.
We call this type of lan-guages incompletely-segmented languages.
Germanis also categorized as this type.
The following is theexample for Korean.1.
Language type: non-segmented language2.
Delimiters: spaces, tabs, and carriage-returns3.
Punctuation marks: not requiredIn incompletely-segmented languages, uch as Ko-rean, we have to consider two types of connection oflexemes, one is "over a delimiter" and the other is"inside a segment" (Hirano and Matsumoto, 1996).If we regard delimiters as lexemes, a trigram modelcan make it possible to treat both types.The definition gives possible starting positions ofMFs in sentences of the language and the samemorphological nalysis ystem is usable for any lan-guage.We examined an effect of applying the morpho-fragments o analysis.
Conditions of the experimentare almost the same as "NOR."
The difference isthat we use the morpho-fragments definition for En-glish.
The row labeled "MF" in Table 1 shows theresults of the analysis.
Using the morpho-fragmentsdecreases the analysis time drastically.
The accuracyis also better than those of the naive approaches.Well studied language such as English may havea hand tuned tokenizer which is superior to ours.However, to tune a tokenizer by hand is not suitableto implement many minor languages.4.3 ImplementationWe implement a language independent morphologi-cal analysis ystem based on the concept of morpho-fragments(Yamashita, 1999).
With an existence oftagged corpus, it is straightforward to implementpart-of-speech taggers.
We have implemented sev-eral of such taggers.
The system uses an HMM.This is trained by a part-of-speech tagged corpus.We overview the setting and performance oftaggingfor several languages.EnglishAn HMM is trained by the part-of-speechtagged corpus part of Penn Treebank(Santorini,1990) (1.3 million morphemes).
We use a tri-gram model.
The lexemes in the dictionary aretaken from the corpus as well as from the en-try words in Oxford Advanced Learner's Dictio-nary(Mitton, 1992).
The system achieves 97%precision and recall for training data, 95% pre-cision and recall for test data.JapaneseAn HMM is trained by Japanese part-of-speechtagged corpus(Rea, 1998) (0.9 million mor-phemes).
We use a trigram model.
Thelexemes in the dictionary are taken from thecorpus as well as from the dictionary ofChaSen(Matsumoto et al, 1999), a freely avail-able Japanese morphological nalyzer.
The sys-tem achieves 97% precision and recall for train-ing and test data.ChineseAn HMM is trained by the Chinese part-of-speech tagged corpus released by CKIP(ChineseKnowledge Information Processing Group,1995) (2.1 million morphemes).
We use a bi-gram model.
The lexemes in the dictionaryare taken only from the corpus.
The systemachieves 95% precision and recall for trainingdata, 91% precision and recall for test data.5 Re la ted  Work  and  RemarksWe address two problems of tokenization in seg-mented languages: further segmentation a d round-up.
These problems are discussed by several authorsincluding Mills(Mills, 1998) Webster & Kit(Websterand Kit, 1992).
However, their proposed solutionsare not language independent.To resolve the problems of tokenization, we firstapply the method of non-segmented languages pro-cessing.
However, this causes spurious segmenta-tion ambiguity and a considerable influence in theanalysis times.
Therefore, we propose the conceptof morpho-fragments that minimally comprises thelexemes in a language.
Although the idea is quitesimple, our approach avoids purious ambiguity andattains an efficient look-up of a trie structured ic-tionary.
In conclusion, the concept of morpho-fragments makes it easy to implemented languageindependent morphological nalysis.ReferencesChinese Knowledge Information Processing Group,1995.
~ ~;~\[ ~ \[~ ~z ~ ~ ~.~  ~ ~ ~ ~ _~ ~j\].Academia Sinica Institute of Information Science.in Chinese.Christopher Fox, 1992.
Lexical Analysis and Sto-plists, chapter 7, pages 102-130.
In Frakes andBaeza-Yates (Frakes and Baeza-Yates, 1992).William B. Frakes and Ricardo A. Baeza-Yates, ed-itors.
1992.
Information Retrieval: Data Struc-tures ~ Algorithms.
Prentice-Hall.237Edward Fredkin.
1960.
Trie memory.
Communica-tions of the ACM, 3(9):490-500, September.Jin Guo.
1997.
Critical tokenization and its prop-erties.
Computational Linguistics, 23(4):569-596,December.Yoshitaka Hirano and Yuji Matsumoto.
1996.
Aproposal of korean conjugation system and its ap-plication to morphological analysis.
In Proceed-ings of the 11th Pacific Asia Conference on Lan-guage, Information and Computation (PACLIC11), pages 229-236, December.Donald E. Knuth.
1998.
The Art of Computer Pro-gramming : Sorting and Searching, volume 3.Addison-Wesley, second edition, May.Henry Ku~era and W. Nelson Francis.
1967.
Com-putational Analysis of Present-Day American En-glish.
Brown University Press.Christopher D. Manning and Hinrich Schiitze.
1999.Foundations of Statistical Natural Language Pro-cessing.
The MIT Press.Yuji Matsumoto, Akira Kitauchi, Tatsuo Yamashita,and Yoshitaka Hirano, 1999.
Japanese Mor-phological Analysis System ChaSen version 2.0Manual.
NAIST Technical Report NAIST-IS-TR99009, April.Jon Mills.
1998.
Lexicon based critical tokenization:An algorithm.
In Euralex'98, pages 213-220, Au-gust.Roger Mitton, 1992.
A Description of A Computer-Usable Dictionary File Based on The Oxford Ad-vanced Learner's Dictionary of Current English.K.
Morimoto and J. Aoe.
1993.
Two trie structuresfor natural language dictionaries.
In Proceedingsof Natural Language Processing Pacific Rim Sym-posium, pages 302-311.Masaaki Nagata.
1994.
A stochastic japanese mor-phological analyzer using a forward-dp backward-a* n-best search algorithm.
In COLING-9$, vol-ume 1, pages 201-207, August.Masaaki Nagata.
1999.
A part of speech estimationmethod for japanese unknown words using a sta-tistical model of morphology and context.
In 37thAnnual Meeting of the Association for Computa-tional Linguistics, Proceedings of the Conference,pages 277-284, June.David D. Palmer and Marti A. Hearst.
1997.
Adap-tive multilingual sentence boundary disambigua-tion.
Computational Linguistics, 23(2):241-267,June.Real World Computing Partnership, 1998.
RWCText Database Report.
in Japanese.Beatrice Santorini, 1990.
Part-of-Speech TaggingGuidelines for the Penn Treebank Project (3rd Re-vision, 2nd printing), June.Jonathan J. Webster and Chunyu Kit.
1992.
Tok-enization as the initial phase in nip.
In COLING-92, volume 4, pages 1106-1110, August.Tatsuo Yamashita, 1999.
MOZ and LimaTK Man-ual NAIST Computational Linguistics Labora-tory, <http://cl.aist-nara.ac.jp/-tatuo-y/ma/>,August.
in Japanese.Tatsuo Ymashita, Msakazu Fujio, and Yuji Mat-sumoto.
1999.
Language independent tools fornatural anguage processing.
In Proceedings of theEighteenth International Conference on ComputerProcessing, pages 237-240, March.238
