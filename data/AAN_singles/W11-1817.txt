Proceedings of BioNLP Shared Task 2011 Workshop, pages 121?129,Portland, Oregon, USA, 24 June, 2011. c?2011 Association for Computational LinguisticsSentence Filtering for BioNLP: Searching for Renaming ActsPierre Warnier1,2 Claire Ne?dellec11MIG INRA UR 1077, F78352 Jouy-en-Josas, France2LIG Universite?
de Grenoble, Franceforename.lastname@jouy.inra.frAbstractThe Bacteria Gene Renaming (RENAME)task is a supporting task in the BioNLP SharedTask 2011 (BioNLP-ST?11).
The task con-sists in extracting gene renaming acts and genesynonymy reminders in scientific texts aboutbacteria.
In this paper, we present in detailsour method in three main steps: 1) the doc-ument segmentation into sentences, 2) the re-moval of the sentences exempt of renaming act(false positives) using both a gene nomencla-ture and supervised machine learning (featureselection and SVM), 3) the linking of genenames by the target renaming relation in eachsentence.
Our system ranked third at the of-ficial test with 64.4% of F-measure.
We alsopresent here an effective post-competition im-provement: the representation as SVM fea-tures of regular expressions that detect com-binations of trigger words.
This increases theF-measure to 73.1%.1 IntroductionThe Bacteria Gene Renaming (Rename) supportingtask consists in extracting gene renaming acts andgene synonymy reminders in scientific texts aboutbacteria.
The history of bacterial gene naming hasled to drastic amounts of homonyms and synonymsthat are often missing in gene databases or evenworse, erroneous (Nelson et al, 2000).
The auto-matic extraction of gene renaming proposals fromscientific papers is an efficient way to maintain genedatabases up-to-date and accurate.
The present workfocuses on the recognition of renaming acts in theliterature between gene synonyms that are recordedin the Bacillus subtilis gene databases.
We assumethat renaming acts do not involve unknown genenames.
Instead, our system verifies the accuracy ofsynonymy relations as reported in gene databases byinsuring that the literature attests these synonymy re-lations.1.1 ExampleThis positive example of the training corpus is rep-resentative of the IE task:?Thus, a separate spoVJ gene as defined by the 517mutation does not exist and is instead identical withspoVK.
?There are 2 genes in this sentence:ID Start End NameT1 17 22 spoVJT2 104 109 spoVKTable 1: Example of provided data.There is also a renaming act: R1 Renaming For-mer:T1 New:T2Given all gene positions and identifications (Tn),the Rename task consists in predicting all renamingacts (Rn) between Bacillus subtilis genes in multi-sentence documents.
The gene names involved areall acronyms or short names.
Gene and proteinnames often have both a short and a long form.
Link-ing short to long names is a relatively well-knowntask but linking short names together remains lit-tle explored (Yu et al, 2002).
Moreover, specifyingsome of these synonymy relations as renaming ap-pears quite rare (Weissenbacher, 2004).
This taskrelates to the more general search of relations of121synonymous nicknames, aliases or pseudonyms ofproper nouns from definitory contexts in encyclope-dia or dictionaries.
For instance, in Alexander IIIof Macedonia commonly known as Alexander theGreat the synonymy relation is supported by com-monly known as between the proper noun Alexan-der III of Macedonia and the nickname Alexanderthe Great.
Renaming act extraction differs from thesearch of coreferences or acronyms by the linguisticmarkers involved.1.2 DatasetsThe renaming corpus is a set of 1,648 PubMed refer-ences of bacterial genetics and genome studies.
Thereferences include the title and the abstract.
Theannotations provided are: the position and name ofgenes (see Table 1) for all sets and the renaming actsin the training and the development sets only.Train Dev.
TestDocuments 1146 246 252Genes 14372 3331 3375Unique Genes 3415 1017 1126New genes 0 480 73Relations 308 65 88Words / Doc 209 212 213Genes / Doc 12.5 12.7 13.4Unique Genes / Doc 3.0 4.1 4.5Relations / Doc 0.27 0.26 0.35Table 2: Datasets of the Rename task corpus.2 MethodsAn early finding is that renaming acts very seldomspan several sentences (i.e.
former and new are inthe same sentence).
For the training set, 95.4% ofthe relations verify this claim and in the develop-ment set, 96.1%.
Thus, it is decided to first segmentthe documents into sentences and then to look for re-naming acts inside independent sentences.
Thus themaximum expected recall is then 96.1% on the de-velopment set.
This is done by automatically filter-ing all the sentences out that do not contain evidenceof a renaming act and then to relate the gene namesoccurring in the renaming sentences.
The AlvisNLPpipeline (Ne?dellec et al, 2009) is used throughoutthis process (see Fig.
1).List based filteringMachine learning based filteringAttribute selection on lemmas(AnnotationClassifierAttributeSelection)Classification: grid search(AnnotationClassifierTrain)Selection of best parametersBacteriaNomenclatureTagging(AnnotationClassifierTag)Lemmatization(TreeTagger)Gene search.a2 filesFix forms(SimpleContentProjector)Word segmentation(WoSMIG)Sentence segmentation(SeSMIG)GenesSpeciesMoleculesAcronyms (imp)Abreviations (imp)Bacteria (imp)Stop wordsBacteriaRegularexpressions (imp)Figure 1: Flowchart: Notes represent the resources usedand (imp) represent later improvements not used for theofficial submission.2.1 Word and sentence segmentationWord and sentence segmentation is achieved by theAlvis NLP pipeline.
Named entity recognition sup-plements general segmentation rules.2.1.1 Derivation of boundaries from namedentitiesNamed entities often contains periods that shouldnot be confused with sentence ends.
Species abbre-viations with periods are specially frequent in thetask corpus.
First, dictionaries of relevant namedentities from the molecular biology domain (e.g.122genes, species and molecules) are projected ontothe documents before sentence segmentation, sothat periods that are part of named entities are dis-ambiguated and not interpreted as sentence ends.Moreover, named enties are frequently multi-word.Named entity recognition prior to segmentation pre-vents irrelevant word segmentation.
For example,the projection of named entity dictionaries on the ex-cerpt below reveals the framed multi-word entities:?Antraformin, a new inhibitor of Bacillus subtilistransformation.
[...] During this screening program,Streptomyces sp.
7725-CC1 was found to producea specific inhibitor of B. subtilis transformation.
?2.1.2 Word segmenterThe word segmenter (WosMIG in Fig.
1) has thefollowing properties: 1) primary separator: space,2) punctuation isolation: customized list, 3) customrules for balanced punctuation, 4) fixed words: notsplittable segments The following list of terms isobtained from the example:[?Antraformin?
, ?,?, ?a?, ?new?, ?inhibitor?, ?of?,?
Bacillus subtilis ?, ?transformation?, ?.
?, [...],?During?, ?this?, ?screening?, ?program?, ?,?,?
Streptomyces sp.
?, ?
7725-CC1 ?, ?was?, ?found?,?to?, ?produce?, ?a?, ?specific?, ?inhibitor?, ?of?,?
B. subtilis ?, ?transformation?, ?.?
]2.1.3 Sentence segmenterThe sentence segmenter (SeSMIG in Fig.
1) hasthe following properties: 1) strong punctuation:customized list; 2) tokens forcing the end of asentence (e.g.
etc...); 3) an upper case letter mustfollow the end of a sentence.
The system worksvery well but could be improved with supervisedmachine learning to improve the detection ofmulti-word named entities.
Finally, the list of wordsis split into sentences:[[?Antraformin?
, ?,?, ?a?, ?new?, ?inhibitor?, ?of?,?
Bacillus subtilis ?, ?transformation?, ?.?],[...
],[?During?, ?this?, ?screening?, ?program?, ?,?,?
Streptomyces sp.
?, ?
7725-CC1 ?, ?was?, ?found?,?to?, ?produce?, ?a?, ?specific?, ?inhibitor?, ?of?,?
B. subtilis ?, ?transformation?, ?.?
]]2.2 Sentence filteringOnce the corpus is segmented into sentences, thesystem filters out the numerous sentences that mostlikely do not contain any renaming act.
This way,the further relation identification step focuses on rel-evant sentences and increases the precision of theresults (Nedellec et al, 2001).
Before the filtering,the recall is maximum (not 100% due to few renam-ing acts spanning two sentences), but the precisionis very low.
The sentence filters aim at keeping therecall as high as possible while gradually increasingthe precision.
It is composed of two filters.
The firstfilter makes use of an a priori knowledge in the formof a nomenclature of known synonyms while thesecond filter uses machine learning to filter the re-maining sentences.
In the following, the term Bacil-lus subtilis gene nomenclature is used in the sense ofan exhaustive inventory of names for Bacillus sub-tilis genes.2.2.1 Filtering with a gene nomenclatureWe developed a tool for automatically buildinga nomenclature of Bacillus subtilis gene and pro-tein names.
It aggregates the data from variousgene databases with the aim of producing the mostexhaustive nomenclature.
The result is then usedto search for pairs of synonyms in the documents.Among various information on biological sequencesor functions, the entries of gene databases recordthe identifiers of the genes and proteins as assertedby the biologist community of the species.
Bacil-lus subtilis community as opposed to other specieshas no nomenclature committee.
Each database cu-rator records unilateral naming decisions that maynot reported elsewhere.
The design of an exhaus-tive nomenclature require the aggregation of multi-ple sources.Databases Our sources for the Bacillus subtilisnomenclature are six publicly available databasesplus an in-house database.
The public databasesare generalist (1 to 3) or devoted to Bacillus subtilisgenome (4 to 6) (see Table 3):GenBank The genetic sequence database managedby the National Center for Biotechnology In-formation (NCBI) (Benson et al, 2008).
It con-tains the three official versions of the annotated123genome of B. subtilis with all gene canonicalnames;UniProt the protein sequence database managed bythe Swiss Institute of Bioinformatics (SIB),the European Bioinformatics Institute (EBI)and the Protein Information Resource (PIR)(Bairoch et al, 2005).
It contains man-ual annotated protein sequences (Swiss-Prot)and automatically annotated protein sequences(TrEMBL (Bairoch and Apweiler, 1996)).
Itspolicy is to conserve a history of all informa-tion relative to these sequences and in particu-lar all names of the genes that code for thesesequences.Genome Reviews The genome database managedby the European Bioinformatics Institute (EBI)(Sterk et al, 2006).
It contains the re-annotatedversions of the two first official versions of theannotated genome of B. subtilis;BSORF The Japanese Bacillus subtilis genomedatabase (Ogiwara et al, 1996);Genetic map the original genetic map of Bacillussubtilis;GenoList A multi-genome database managed bythe Institut Pasteur (Lechat et al, 2008).
It con-tains an updated version of the last official ver-sion of the annotated genome of B. subtilis;SubtiWiki A wiki managed by the Institute for Mi-crobiology and Genetics in Go?ttingen (Flo?rezet al, 2009) for Bacillus subtilis reannotation.It is a free collaborative resource for the Bacil-lus community;EA List a local lexicon manually designed frompapers curation by Anne Goelzer and E?lodieMarchadier (MIG/INRA) for Systems Biologymodeling (Goelzer et al, 2008).Nomenclature merging We developed a tool forperiodically dumping the content of the seven sourcedatabases through Web access.
With respect to genenaming the entries of all the databases contain thesame type of data per gene:?
a unique identifier (required);?
a canonical name, which is the currently rec-ommended name (required);?
a list of synonyms considered as deprecatednames (optional).The seven databases are handled one after theother.
The merging process follows the rules:?
the dump of the first database (SubtiWiki, seeTable 3 for order) in the list is considered themost up-to-date and is used as the referencefor the integration of the dumps of the otherdatabases;?
for all next dumps, if the unique gene identifieris new, the whole entry is considered as newand the naming data of the entry is added to thecurrent merge;?
else, if the unique identifier is already presentinto the merge, the associated gene names arecompared to the names of the merge.
If thename does not exist in the merge, it is added tothe merge as a new name for this identifier andsynonym of the current names.
The synonymclass is not ordered.Order Databases AE AN1 SubtiWiki 4 261 59202 GenoList 0 2643 EA List 33 3784 BSORF 0 425 UniProt 0 746 Genome 0 0Reviews7 GenBank 0 78 Genetic Map 0 978Total 4 294 7 663Table 3: Database figures.
AE: number of added entries,AN: number of added names.Synonym pair dictionary: The aggregatednomenclature is used to produce a dictionary of allcombinations of pairs in the synonym classes.124Sentence filtering by gene cooccurrence: Foreach sentence in the corpus, if a pair of gene syn-onyms according to the lexicon is found inside thenthe sentence is kept for the next stage.
Other-wise, it is definitively discarded.
The comparisonis a case-insensitive exact match preserving non al-phanumeric symbols.
The recall at this step is re-spectively 90.9% and 90.2% on the train and devel-opment sets.
The recall loss is due to typographicerrors in gene names in the nomenclature.
The pre-cision at this stage is respectively 38.9% and 38.1%on the train and development sets.
There are stillmany false positives due to gene homologies or re-naming acts concerning other species than Bacillussubtilis for instance.2.2.2 Sentence filtering by SVMFeature selection The second filtering step aimsat improving the precision by machine learning clas-sification of the remaining sentences after the firstfiltering step.
Feature selection is applied to enhancethe performances of the SVM as it is shown to sufferfrom high dimensionality (Weston et al, 2001).
Fea-ture selection is applied to a bag-of-word representa-tion using the Information Gain metrics of the Wekalibrary (Hall et al, 2009).
Words are lemmatized byTreeTagger (Schmid, 1994).
A manual inspectionof the resulting sorting highly ranks words such asformerly or rename and parentheses while rankingother words such as cold or encode surprisingly cer-tainly due to over-fitting.
Although the feature se-lection is indeed not particularly efficient comparedto the manual selection of relevant features but doeshelp filtering out unhelpful words and then drasti-cally reducing the space dimension from 1919 to141 for the best run.Sentence classification and grid search: A SVMalgorithm (LibSVM) with a RBF kernel is appliedto the sentences encoded as bag of words.
The twoclasses are: ?contains a renaming act?
(True) or not(False).
There are 4 parameters to tune: 1) the num-ber of features to use (N ?
1, 5, 10, ..., 150) mean-ing the N first words according to the feature selec-tion, 2) the weight of the classes: True is fixed to 1and False is tuned (W ?
0.2, 0.4, ..., 5.0), 3) the er-rors weight (C ?
2?5,?7,...,9), 4) the variance of theGaussian kernel (G ?
2?11,?9,...,1).
Thus, to findthe best combination of parameters for this problem,#N ?#W ?#C ?#G = 31 ?
25 ?
8 ?
7 = 43, 400models are trained using 10-fold cross-validation onthe training and development sets together (giventhe relatively small size of the training set) andranked by F-measure.
This step is mandatory be-cause the tuning of C and G alone yield variationsof F-measure from 0 to the maximum.
The gridsearch is run on a cluster of 165 processors and takesaround 30 minutes.
The best model is the modelwith the highest F-measure found by the grid search.Test sentence filtering: Finally the test set is sub-mitted to word and sentence segmentation, featurefiltering and tagged by the best SVM model (Anno-tationClassifierTag in Fig.
1).
The sentences that areassumed to contain a renaming act are kept and theothers are discarded (see Fig.
2).2.3 Gene position searchingAt this step, all remaining sentences are assumed tobe true positives.
They all contain at least one pairof genes that are synonymous according to our genenomenclature.
The other gene names are not con-sidered.
The method for relating gene candidates bya renaming relation, relies on the assumption thatall gene names are involved in at least one relation.Most of the time, sentences contain only two genes.We assume in this case that they are related by a re-naming act.
When there are more than two genesin a sentence, the following algorithm is applied: 1)compute all combinations of couples of genes; 2)look-up the lexicon for those couples and discardthose that are not present; 3) if a given gene in acouple has multiple occurrences, take the nearest in-stance from the other gene involved in the renamingact.3 DiscussionThe system ranks 3rd/3 among three participantsin the Rename task official evaluation with a F-measure of 64.4% (see Fig.
4), five points behind thesecond.
The general approach we used for this taskis pragmatic: 1) simplify the problem by focusing onsentences instead of whole documents for a minimalloss, 2) then use a series of filters to improve the pre-cision of the sentence classification while keepingthe recall to its maximum, 3) and finally relate gene125names known to be synonymous inside sentences fora minimal loss (around 2% of measure).
As opposedto what is observed in Gene Normalization tasks(Hirschman et al, 2005), the Rename task is char-acterised by the lack of morphological resemblanceof gene synonyms.
The gene synonyms are not ty-pographic variants and the recognition of renamingact requires gene context analysis.
The clear bottle-neck of our system is the sentence filtering part andin particular the feature selection that brings a lotof noise by ranking statistically spurious terms.
Onthe plus side, the whole system is fully automatedto the exception of the resources used for the wordsegmentation that were designed manually for othertasks.
Moreover, our strategy does not assume thatthe gene pairs from the nomenclature may be men-tioned for other reasons than renaming, it then tendsto overgeneralize.
However, many occurrences ofthe predicted gene pairs are not involved in renamingacts because the reasons for mentioning synonymsmay be different than renaming.
In particular, equiv-alent genes of other species (orthologues) with highsequence similarities may have the same name as inBacillus subtilis.
An obvious improvement of ourmethod would consists in first relating the genes totheir actual species before relating the only Bacillussubtilis gene synonyms by the renaming relation.Team Pre.
Rec.
F-M.U.
of Turku 95.9 79.6 87.0Concordia U.
74.4 65.9 69.9INRA 57.0 73.9 64.4Table 4: Official scores in percentage on the test set.3.1 Method improvement by IE patternsAfter the official submission and given the result ofour system compared to competitors, a simple mod-ification of the feature selection was tested with sig-nificant benefits: the addition of regular expressionsas additional features.
Intuitively there are words orpatterns that strongly appeal to the reader as impor-tant markers of renaming acts.
For example, vari-ations of rename or adverbs such originally or for-merly would certainly be reasonable candidates.
Fif-teen such shallow patterns were designed (see Table5) supplemented by six more complex ones, orig-inally designed to single out gene names.
In ap-pendix A, one of them is presented, the precisionof which is 95.3% and recall 27.5%.
That is, morethan a quarter of renaming acts in the training anddevelopment sets together.
Interestingly, in table5 the word formerly (3rd in feature selection rank-ing) alone recalls 10.7% of the renaming acts witha precision of 96.9%.
In contrast, the words origi-nally and reannotated although having 100% preci-sion are respectively ranked 33rd and 777th.
In total,21 patterns are represented as boolean features ofthe classification step in addition to the ones selectedby feature selection.
Unsurprisingly, the best classi-fiers, according to the cross-validation F-measure af-ter the grid search, only used the regular expressionsas features neglecting the terms chosen by featureselection.
A significant improvement is achieved:+8.7% of F-measure on the test set (see Fig.
2).Pattern Pre.
Rec.
F-M.(reannotated) 100.0 0.4 0.7(also called) 100.0 0.4 0.7(formerly) 96.9 10.7 19.2(originally) 100.0 1.4 2.8((also)?
known as) 100.0 1.8 3.4(were termed) 100.0 0.4 0.7(identity of) 100.0 0.7 1.4(be referred (to|as)?)
100.0 0.4 0.7(new designation) 100.0 0.4 0.7( allel\w+) 80.0 2.8 5.4(split into) 100.0 0.4 0.7( rename ) 83.4 1.8 3.4( renamed ) 88.5 8.0 14.6( renaming ) 100.0 0.4 0.7(E(\.|scherichia) coli) 11.3 4.5 6.4Table 5: Handwritten patterns.
Scores are in percentageon the training and development sets together after thegene nomenclature filtering step.
A very low precisionmeans the pattern could be used to filter out rather thanin.3.2 Error analysisThe false positive errors of the sentence filter-ing step, using hand-written patterns can be clas-sified as follows: 1) omission: Characteriza-tion of abn2 (yxiA), encoding a Bacillus subtilisGH43 arabinanase, Abn2, and its role in arabino-126before filtering after nomenclature after SVM final evaluation0102030405060708090100F-measure(%)4.153.571.7 69.24.153.580.8 78.364.473.1DevDev with patternsTestTest with patternsFigure 2: Evolution of F-measure at different measurepoints for the Rename task.
Dev: training on train setand testing on dev set.
Test: training on train + dev setsand testing on test set (no intermediary measure).
64.4%is the official submitted score.
73.1% is the best scoreachieved by the system on the test set.polysaccharide degradation.
(PMID 18408032).
Inthis case the sentence has been filtered out by theSVM and then the couple abn2/yxia was not an-notated as a renaming act, 2) incorrect informa-tion in the nomenclature: These results substanti-ate the view that sigE is the distal member of a2-gene operon and demonstrate that the upstreamgene (spoIIGA) is necessary for sigma E forma-tion.
(PMID 2448286).
Here, the integration ofthe Genetic Map to the nomenclature has introduceda wrong synonymy relation between spoIIGA andsigE, 3) homology with another species: We reportthe cloning of the wild-type allele of divIVB1 andshow that the mutation lies within a stretch of DNAcontaining two open reading frames whose pre-dicted products are in part homologous to the prod-ucts of the Escherichia coli minicell genes minC andminD.
(PMID 1400224).
The name pair actuallyexists in the nomenclature but here, divIVB1 is agene of B. subtilis and minC is a gene of E. Coli,4) another problem linked to the lexicon is the factthe synonym classes are not disjoint.
Some depre-cated names of given genes are reused as canoni-cal names of other genes.
For example, purF andpurB referred to two different genes of B. subtilisbut purB was also formerly known as purF: Thefollowing gene order has been established: pbuG-purB-purF-purM-purH-purD-tre (PMID 3125411).Hence, purF and purB are uncorrectly recognizedas synonyms while they refer to two different genesin this context.
Possible solutions for improving thesystem could be: 1) the inclusion of species namesas SVM features, 2) the removal of some couplesfrom the nomenclature (PurF/purB for instance),3) evaluate the benefits of each resource part of thenomenclature.4 ConclusionOur system detects renaming acts of Bacillus sub-tilis genes with a final F-measure of 64.4%.
Af-ter sentence segmentation, the emphasis is on sen-tence filtering using an exhaustive nomenclature anda SVM.
An amelioration of this method using pat-terns as features of the machine learning algorithmwas shown to improve significantly (+8.7%) the fi-nal performance.
It was also shown that the bag ofwords representation is sub-optimal for text classi-fication experiments (Fagan, 1987; Caropreso andMatwin, 2006) With the use of such patterns, the fil-tering step is now very efficient.
The examinationof the remaining errors showed the limits of the cur-rent shallow system.
A deeper linguistic approachusing syntactic parsing seems indicated to improvethe filtering step further.AcknowledgmentsThe authors would like to thank Julien Jourde forgranting them the permission to use the Bacteriasubtilis synonym nomenclature that he is currentlybuilding and Philippe Veber for his insightful ad-vices on text classification.
This research is partlyfounded by the French Oseo QUAERO project.ReferencesA.
Bairoch and R. Apweiler.
1996.
The SWISS-PROTprotein sequence data bank and its new supplementTREMBL.
Nucleic Acids Research, 24(1):21.A.
Bairoch, R. Apweiler, C.H.
Wu, W.C. Barker,B.
Boeckmann, S. Ferro, E. Gasteiger, H. Huang,R.
Lopez, M. Magrane, and Others.
2005.
The uni-versal protein resource (UniProt).
Nucleic Acids Re-search, 33(suppl 1):D154.127D.A.
Benson, I. Karsch-Mizrachi, D.J.
Lipman, J. Ostell,and D.L.
Wheeler.
2008.
GenBank.
Nucleic acidsresearch, 36(suppl 1):D25.M.
Caropreso and S. Matwin.
2006.
Beyond the Bag ofWords: A Text Representation for Sentence Selection.Advances in Artificial Intelligence, pages 324?335.J.L.
Fagan.
1987.
Experiments in automatic phrase in-dexing for document retrieval: a comparison of syn-tactic and non-syntactic methods.LA Flo?rez, SF Roppel, A.G. Schmeisky, C.R.
Lammers,and J. Stu?lke.
2009.
A community-curated consensualannotation that is continuously updated: the Bacillussubtilis centred wiki SubtiWiki.
Database: The Jour-nal of Biological Databases and Curation, 2009.A Goelzer, B Brikci, I Martin-Verstraete, P Noirot,P Bessie`res, S Aymerich, and V Fromion.
2008.
Re-construction and analysis of the genetic and metabolicregulatory networks of the central metabolism ofBacillus subtilis.
BMC systems biology, 2(1):20.M Hall, E Frank, G Holmes, B Pfahringer, P Reute-mann, and I H Witten.
2009.
The WEKA data min-ing software: an update.
ACM SIGKDD ExplorationsNewsletter, 11(1):10?18.Lynette Hirschman, Alexander Yeh, Christian Blaschke,and Alfonso Valencia.
2005.
Overview of BioCre-AtIvE: critical assessment of information extractionfor biology.
BMC bioinformatics, 6 Suppl 1:S1, Jan-uary.P.
Lechat, L. Hummel, S. Rousseau, and I. Moszer.
2008.GenoList: an integrated environment for comparativeanalysis of microbial genomes.
Nucleic Acids Re-search, 36(suppl 1):D469.C.
Nedellec, M. Abdel Vetah, and Philippe Bessie`res.2001.
Sentence filtering for information extraction ingenomics, a classification problem.
Principles of DataMining and Knowledge Discovery, pages 326?337.C Ne?dellec, A Nazarenko, and R Bossy.
2009.
Infor-mation Extraction.
Handbook on Ontologies, pages663?685.K E Nelson, I T Paulsen, J F Heidelberg, and C MFraser.
2000.
Status of genome projects for non-pathogenic bacteria and archaea.
Nature biotechnol-ogy, 18(10):1049?54, October.A.
Ogiwara, N. Ogasawara, M. Watanabe, and T. Tak-agi.
1996.
Construction of the Bacillus subtilis ORFdatabase (BSORF DB).
Genome Informatics, pages228?229.H Schmid.
1994.
Probabilistic part-of-speech taggingusing decision trees.P.
Sterk, P.J.
Kersey, and R. Apweiler.
2006.
Genomereviews: standardizing content and representation ofinformation about complete genomes.
Omics: a jour-nal of integrative biology, 10(2):114?118.Davy Weissenbacher.
2004.
La relation de synonymie enGe?nomique.
RECITAL.J.
Weston, S. Mukherjee, O Chapelle, M. Pontil, T. Pog-gio, and V. Vapnik.
2001.
Feature selection for SVMs.Advances in neural information processing systems,pages 668?674.Hong Yu, Vasileios Hatzivassiloglou, Carol Friedman,Andrey Rzhetsky, and W.J.
Wilbur.
2002.
Automaticextraction of gene and protein synonyms from MED-LINE and journal articles.
In Proceedings of the AMIASymposium, page 919.
American Medical InformaticsAssociation.128A Gene or operon couple matching patternPattern that uses bacteria gene naming rules (3 lowercase + 1 upper case letters), short genes (3 lowercase letters), long gene names, factorized operons(3 lower case + several upper case letters), genenames including special and/or numerical charactersin presence or not of signal words such as named,renamed, formerly, formally, here, herein, here-after, now, previously, as, designated, termed and/orcalled, only if the pattern does not begin with andor orf.
Although this pattern could be used to di-rectly filter in sentences containing a renaming act,its recall is too low thus it is used as a feature of theclassifier instead.and|orf\GENE|OPERON-fact\[|((now|as|previously|formerly|formally|here(in|after))\((re)named|called|designated|termed) (now|as|previously|formerly|formally|here(in|after))\GENE|OPERON-fact)|]Table 6: Long pattern used for gene pair matching.Terms matched Pattern PMIDshort-GENE (short-GENE) cotA (formerly pig) 8759849long-GENE (long-GENE) cotSA (ytxN) 10234840fact-OPERON (fact-OPERON) ntdABC (formally yhjLKJ) 14612444spe-GENE (spe-GENE) lpa-8 (sfp) 10471562GENE (GENE) cwlB [lytC] 8759849GENE (now designated GENE) yfiA (now designated glvR) 11489864GENE (previously GENE) nhaC (previously yheL) 11274110GENE (formerly called GENE) bkdR (formerly called yqiR) 10094682GENE (now termed GENE) yqgR (now termed glcK) 9620975GENE (GENE) other forms fosB(yndN) 11244082GENE (hereafter renamed GENE) yhdQ (hereafter renamed cueR) 14663075GENE (herein renamed GENE) yqhN (herein renamed mntR) 10760146GENE (formally GENE) ntdR (formally yhjM) 14612444GENE (formerly GENE) mtnK (formerly ykrT) 11545674GENE (renamed GENE) yfjS (renamed pdaA) 12374835GENE (named GENE) yvcE (named cwlO) 16233686GENE (GENE) pdaA (yfjS) 14679227Table 7: Examples matched with the long pattern.129
