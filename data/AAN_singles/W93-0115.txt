THE LONG JOURNEY FROM THE CORE TO THE REAL SIZE OF LARGE LDBElena PASKALEVA,  Kiril S IMOV, Mar iana  DAMOVA,  Mi lena  SLAVCHEVALinguist ic  Mode l ing  Laboratory,  Center  for In format icsand  Computer  Techno logy ,  Bulgar ian Academy of  SciencesAcad.
G. Bonchev St. 25a, 1113 Sofia, Bulgariafax:+359-2-707273, e -mai l :HELLEN@BGEARN.b i tnet1.
In t roduct ion :  The  Mean ings  Of  "Large"Large Lexical Data Bases are one of the earliest applications of NLP.
The initial stage of their rise,with the admiration for the automation of lexicographic work itself, came to an end long ago.
In the followingstages LexicalData Bases (LDB) began to extend considerably the range of their application and the scope ofCL problems put forward by them \[see Calzolari 1991, Calzolari and Zampolli 1988 and Boguraev et a1.1988\].It is worth discussing a new version of LDB (for a concrete new language) only in the present-day context ofthese problems.
This does not, however, relieve the creators of LDB for a new language of the solution of thetrivial problems tanding at the lower foot of the ladder used to "storm" the lexical wealth of language.After overcoming these obstacles, there is prototype version available or a core of LDB, which cannot becalled large especially when its volume is concerned.
Speaking of volume, quite naturally, the followingquestion arises: in what direction should the linguistic knowledge be extended, so that the system could bedefined as large?
Shall we say "large" in the literal sense, having in mind the number of entries in DB, or does"large" mean "deep", i.e.
the richer linguistic information in the lexical entry means a larger scope oflinguistic phenomena included in DB?It is obvious that the researchers who have climbed higher up the ladder mentioned above (in theworks quoted above) are interested in the second sense of the attribute "large", as the first type of expansion ofthe basis has long been a fact for them.This paper is an attempt o share the experience of researchers who have climbed up the first fewsteps of the ladder, and who are clearly conscious of the height hey still have to reach (on account of the factthat they began to build an LDB in the early 90s).
This consciousness makes them speed up the process ofclimbing the first few steps (i.e., to make the base large in physical volume), in order to continue at a higherspeed the expansion of the base with regard to the scope of linguistic knowledge (i.e.
to build a "deeper" largeDB).The intellectualization, hence the speeding up of the first type of expansion of the base through thecreation of special programming tools for representing, correcting and enriching the linguistic knowledge in aseparate ntry, is a task we have already confronted with at the Linguistic Modeling Laboratory whenworking on an LDB for Russian and Bulgarian.This paper is about the programming tools accomplishing the interface with the linguist who has athis disposal a nuclear prototype DB and whose task is to turn it into a really large DB.2.
Des ign ing  The  Core  Of  The  System:  The Vo lume Of  L inguist ic  KnowledgeIn the Linguistic Modelling Laboratory the idea of creating a large DB was in fact a naturalcontinuation of the research work on an exhaustive formalized description of Bulgarian inflexionalmorphology in the form of procedures for morphological nalysis and synthesis including the entire scope ofphenomena in Bulgarian word inflexion.
This goal is achieved through the system MORPHO-ASSISTANT\[see MORPHO-ASSISTANT 1990\].
The exhaustiveness of the morphological description is guaranteed by: a)a full list of inflexional types of Bulgarian inflected words; b) a full list of all types of graphemic hanges -1612the so-called alternation types; c) inclusion of all possible doublets; d) inclusion of morphosyntacticphenomena (i.e.
going beyond the framework of the separate wordform) of first order.
It concerns thedescription of complex verb tenses, as well as the exhaustive classification of verbs with regard to their voicebehaviour.
This classification makes possible the analysis and synthesis of complex structures consisting of averb and declined reflexive and pronominal clitics (in this configuration some vocables of verbs are given inBulgarian dictionaries).
Semantic haracteristics are included in the description only if they are relevant othe word inflexion.The first project variant of MORPHO-ASSIST~NT is served by a minimal dictionary of lexemes andmorphemes reflecting all the phenomena described above.
The next most natural question concerns therepresentativity of the lexical base of the system.
Thus the ambition of the creators of a computer systemwith an exhaustive morphological knowledge quite naturally turned into an ambition for creating a largelexical data base for Bulgarian and Russian (the former containing 60 000, and the latter - 100 000 units).
Thesimplicity of the transition: lexical base of a morphological component - -> lexical data base was ensured bythe programming language chosen for the two products, namely PROLOG.The information included in the so designed Bulgarian LDB brings it near to the so called grammaticaldictionaries (such as the known to all Slavonic scholars Grammatical dictionary of A.A.Zaliznyak \[seeZaliznyak 1977\].In this way, the core of LDB includes the following portions of linguistic knowledge: a) a list of allgrammatical formatives participating in the inflexion; b) a list of the grammatical categories characterizingthe inflexion; c) a list of the full paradigms of the different parts of speech; d) a list of the inflexional typesof the inflected words - each inflexional type is a set of correspondences between a member of the paradigmand the formative representing it; e) a list of the types of alternation describing the letter changes in the stemas a result of alternation and the conditions for these changes (determined by the grammatical categories ofthe member of the paradigm for which they are valid); f) procedures for morphological analysis andsynthesis; g) a dictionary of lexemes for which the principle of minimal representativeness is applied - theset of lexemes hould make possible the representation of each linguistic fact from a) to e) applying theprocedures in f); h) an exhaustive description of the completeness of the paradigm for all lexemic units(marking the possible defects in the inflexion).3.
How To Make  The  Data  Base Rea l ly  "Large" In A Shor t  T ime?The problem of expansion of the prototype core system to the volume of a real LDB is solveddepending on the sources of this expansion.
A standard source for collecting lexical elements in the requiredvolume are obviously the existing dictionaries.
But as the action takes place in the early 90s, it is natural torely at least on machine-readable dictionaries (MRD) in their great variety of volume and type of data.When such a civilized solution is found, the problem of completing the base to its real volume is reduced to thecreation of programming tools for recoding the information in MRD and its eventual completion in interfacemode \[see Boguraev and Briscoe 1987\].
A similar approach was used for the construction of the Russian LDBwhich we are developing together with the Department for Machine Fund of Russian in the Institute ofRussian language (Moscow).
As the Dictionary of Zaliznyak - the base of the Russian LDB - is machinereadable, the work on its representation in MORPHO-ASSISTANT format is reduced to the construction of arecoding program accomplishing the translation from the specific notation of the grammatical information inits entries into the corresponding classes of inflexion and alternation.
The information for possible defects inthe paradigm is the only one, introduced manually.
As for the Bulgarian LDB the problem is a littledifferent.
Bulgarian lexicography has not its own grammatical dictionary even in a man-readable form.
Herethe problem is, how from the great number of one-language or spelling dictionaries, normative grammars andhandbooks in morphology we can determine the units of LDB and give the necessary information for each oneof them according to the principles established in the construction of the core.
The first problem was solved bychoosing the vocabulary of the latest Bulgarian spelling dictionary (60,000 words).
Represented as a text file,this lexicon served us as a MRD consisting only of the vocables of the dictionary entries (the information aboutthe word inflexion in the spelling dictionary usually point out the exceptions and difficulties).
Thus the firsttask in the process of expanding the LDB core came out: the determination of the dictionary information for agiven entry.162The rich morphological system of Bulgarian (145 classes of word inflexion, 72 classes of alternation,great variety of not regularly determined cases of incompleteness in the rich paradigm of Bulgarian words)makes the specification of this information even if carried out by a highly qualified linguist a difficult andnot safe from mistakes task.
We did our best to make improvements by creating a special software, i.e.
"linguist friendly" programs peeding up the process of filling the entries.
This "linguist friendly" softwareconsists of two basic programming packages: programs for filling LDB entries and programs for revising LDBentries.3.1.
F i l l ing A Lexical Ent ry  In A F r iend ly  WayThe above mentioned information in LDB core determines also the content of the LDB entry which,most generally speaking, consists of the following portions of linguistic information: part of speech,characteristics of the lexeme (depending on the part of speech: gender, animateness and person of nouns, aspectand transitivity of verbs, etc.
), inflexional type, type of alternation, defects in the paradigm of the lexeme.The considered software models partially the filling of each LDB entry, performed by a human, withoutrelieving entirely the user of the duty to use his linguistic ompetence in the bottle-neck points.The system has the following functions: calculating the calculable, correcting the erroneous andsimplifying the difficult.
In the first two functions we use the knowledge about the links between variouslinguistic categories and their values.
The specific part of linguistic knowledge, accessible to man only andnecessary for fulfilling the third function of the programming environment, is reduced to elementary outinework on building the concrete paradigm.
The three functions mentioned above are performed by a system ofmenus reflecting the relations in the linguistic knowledge.The most essential facility for the linguist ( in the third function of the programming environment) isthe determining of the inflexional and derivational classes.
In accordance with the chosen grammaticalcharacteristics of a given lexeme, a so called "diagnostic paradigm" is automatically formed.
The number ofits members i greatly reduced (as it is possible to calculate some functional dependencies).
When processingthis diagnostic part, the user fixes the correct wordforms of the lexeme, i.e.
he determines the inflexion andeventually edits the stem in case of alternation.
After creating the diagnostic part of the paradigm, theinflexional type and the type of alternation come out automatically.
If the input values do not correspond tothe information from the core, the system answer is either wrong combination of formatives (so it has to becorrected), or necessity of introducing a new classificational type.
As the richest paradigm in Bulgarianinflexion - a verbal one - consists of 52 forms, we are satisfied with the achieved maximum speed of filling theentries - 80 eritries per hour (on an XT computer).The error control (in the third function of the software) is exercised only over dependencies betweenthe combinations of the grammatical categories and the formatives expressing them (separately or as awhole), but cannot check the authenticity of the specific lexical information which is filled in (for examplestem featureS, paradigm defects, etc.).
That is why a considerable part of the responsibility for the correctfilling of the iexical entries is shifted on another software product ensuring their revision and updating.3.2.
F r iend ly  Tool -K i t  For Updat ing  The  Lexical Entr iesThe LDB organization of the Bulgarian grammatical computer dictionary (in ARITY PROLOG) savesus the boring subsequent updating of lexical entries.
The input lexical entries are grouped in a natural waydepending on the values of the grammatical characteristics.
The grouping specifies the entities to beprocessed simultaneously.
The minimal group for viewing/updating is the group of lexemes with equal valuesin all fields of the entry.
This grouping, however, can be optimized from a linguistic point of view as well,according to the actual hierarchy of the linguistic knowledge in question.The linguistic knowledge hierarchy, correlated with the objects grouped in such a way, can be seen inthe screen of the system, given below in the Fig.1.1634I 'Stem view- -  S tem FeaturesPart  of Speech -->Type of Noun -->Gender  .
.
.
.
.
>Animateness --->- DefectsSingular, CountSingular, Vocative00001:001NounCommonMasculineNon-animate00001:001- S tem View6peCTaK,QpHCbK/ 3e~eHqyK?
Parad igm3eneHqyK--3eneHqyKa--3eneHqyKbT--3eneHqyUH--Base form .
.
.
.
.
.
.
.
.
.
.
.
.
.
> 3eneHqyKInflextlonal Type ....  > 101ITAlternatlonAlternation Type --> 104ransformation:K---> ~ Pos = 2Condtttons:pl 00001:001Line: -Verb  TypesnoneGroup  Number  - 65Count  - 9' \[ \] Wi thout  Parad igmF9-  Remote,  F10-  Delete, A l t /U -  updateSingular, Indefinite \] Singular, Short DefiniteSingular, Full definiteP~lural, Indefinite00001:001 I Choice Group I(*) Only View I previous Group I( ) S tem Edi t ing I I( ) Group Edi t ing \] Next Group \]- -00001:001  -Figure 1: View/Update ScreenThe screen information has not only illustrating but editing functions as well.
The characteristics arerepresented on the screen by windows and string fields with a dynamic reflection of the links between theattributes and the values of the features of each choice.
Besides the static characteristics from LDB, thescreen reflects the results from the generating procedure in the special window "Paradigm", containing themembers of the full paradigm of the chosen lexeme.
The editing in "Paradigm" window may invoke changesin the characteristics of the entry - the procedural testing is the best control (for example the deletion of amember of the paradigm causes a change in the window "Defects"; the correction of an inflexion in"Paradigm" leads to a change in the information about the inflexional type, etc.).4.
How To Use  The  Large Bu lgar ian  LDB?The flexible programming tools described in I and II aim at speeding up the process of creating theBulgarian LDB through making easier the task of "the constructors.
These tools, however, are only anintermediate device for achieving the final goal wl~ich deserves to be discussed in detail in this lastparagraph.
What are the benefits of the final users?
The screens below illustrate its potential capacities.We are not going to discuss the standard capacities of LDB which can be seen in Fig.
2 and 3.164: 5Search Dictionary\[ \] Verb - aSpectPerfectiveImpeffectiveDual,---TransitivityTransitiveIntransitive\[ \] Noun i-Gendert,,' MasculineFeminineNeuter- anlmateness?'
AnimateNon-animate\[ \] Adjective DegreeDegreeNon-degreePersonPersont /  Non- 3ersonInflective type ---> noneAlternative type ---> noneF9 .
Remote Values, Ctr l /Q - Exit Edit  BoxString --->Position --->Figure 2: Query screen1656Resul ts  -- <S> for saveStem features:Noun,  Mascul ine, Animate,  Non-personF lecType= << a6a;cc/p >> A l tType= <<6~aon6pbM6apr.l"lvlraHrymepKaJ1KaHOKTOnO,g,OBeHOXJllOBnapa3~TnenvtKaHrlI4HrBPIHnp14nenCOKOnTlO.r'le HxaMeJ-leOHStem features:Noun,  Mascul ine, An imate,  Non-personF lecType = < < a6a~o/p > > AI tType = < <6o6bpWithout  A l temat ic~ >aM?.Tea'rbp >>Figure 3: Search resultsWe shall consider some expansions of the standard LDB operations:a) As we can see in figure 3., the output lists of lexemes, extracted by given features, are in additionautomatically grouped according to the characteristics which do not participate in the searching.
Thelexemes of such a group are alphabetically ordered.b) There is a special searching-by-string-and-position procedure.
What is more, it processes a leveldeeper than the graphemic one - namely, the morphemic level.The result represents groups of lexemes with the same letter combinations in the given position.
Usinga special option, the searching procedure nsures preliminary elimination of the prefix elements and searchof the given string at the be~nning of the rest of the lexeme (see fig.
4 and 5).
In this way the output includesfamilies of words of first approximation.1667Search Dictionary- aSpect \[ \] VerbPerfectiveImpeffecfiveDual--TransitivityTransitiveIntransitive\[ \] Noun -GenderMasculineFeminineNeuter- anImatenessAnimateNon-animate\[ \] Adjective i DegreeDegreeNon-degreei PersonPersonNon-personInflective type---> noneAlternative type ---> noneF9 - Remote Values, Ctr l /Q.
Exit Edit BoxString ---> nt4Position --- > <Pref> + <.>Figure 4: Query screen with prefix-eliminating search167Results -- < S> for saveStem features:Verb, Imperfective, IntransitiveFlec Type = < < a6fiHK~paM > >3a.
n~ll.U,qBaMpa3.ni4CKBaMStem features:Verb, Perfective, IntransitiveF lecType= << 6~t,?1 >>la3.
n~lLLfflStem features:Verb, Imperfecfive, IntransitiveFlec Type = < < B~brl6a.q > >143.no.Ha.nl/l~Stem features:Verb, Imperfective, TransitiveFlec Type = < <,~,o.nl4paM3a.
nl4c BaMH3.nH.nRBaMHa.nHBaMa6~HKHpaM >>Alt Type = < < Without Alternation > >Alt Type = < < Without Alternation > >Alt Type = < < Without Alternation > >Alt Type = < < Without Alternation > >Figure 5: Results from prefix-eliminating search - word family of first approximation5.
Future Deve lopment :  The JoumeyTo The LkbBeing aware of the long way to the creation of a real LKB (Lexical Knowledge Base), we would liketo write about the first steps we have made in this direction which coincides with the main goal of the CLgroup in the Linguistic Modeling Laboratory.
It is the creation of the base of linguistic knowledge forBulgarian.1.
The inclusion of the procedures of analysis and synthesis (realized in the system MORPHO-ASSISTANT) in LDB makes possible not only the expansion of the searching procedures but theaccomplishment of the following transitions as well:a) from a text corpus to LDB (using the analysis of MORPHO-ASSISTANT);b) from any LDB entry to arbitrary parts of its paradigm (using the synthesis of MORPHO-ASSISTANT);2.
The linguistic results from the string searching can be considerably deepened by the creation ofsoftware tools for editing the family words of first approximation i dialog mode.
In such a way, the real168I9family of derivationally related words can be constructed.
Their accumulation and connection with the mainLDB will make possible the automated creation of a Bulgarian morphemic computer dictionary (which doesnot exist even in a traditional form) and a knowledge base for the derivational morphology.3.
The acquired experience in creating a flexible software nvironment, facilitating the filling of thelexical entry, makes it possible to create, in the same style, a procedure for completing the LDB withinformation about he accentual characteristics of words.
A description of Bulgarian word inflexion eglectingthe accentual iriformation cannot be regarded as a complete one, because the movable stress in Bulgarian is anessential part Of the inflexional mechanism.4.
Following the tradition in creating "linguist friendly" software, we are planning the filling of thesyntactic part of lexical entries (and some other information).
Unfortunately, we should say that Bulgarianlexicography is not so friendly to computational linguists and has not supplied them (and not only them)with suitable syntactic dictionaries including information about the subcategorization f lexical units.
Inspite of the delay in creating LDB (due to historical and technological reasons) and the lack of traditionallexicographic sources on which to rely, the CL group hopes to rank in the forefront of CL investigations u ingadvanced computer technologies.References:Boguraev et al 1988: Boguraev, B., E. Briscoe, N.Calzolari, A. Cater, W. Meijs, A. Zampolli.Acquisition of Lexical Knowledge for NaturalLanguage Processing Systems.
Proposal forESPRIT Basic Research Actions, August 1988.Calzolari and Zampolli 1988: Calzolari, N., A.Zampolli.
From Monolingual to BilingualAutomated Lexicons: Is There a Continuum?
In:Lexicographica, 4/1988.Calzolari 1991: Calzolari, N. Structure andaccess in an automated lexicon and relatedissues.
In: Automating the Lexicon, Walker D.,A .Zampol l i ,  N .Ca lzo lar i  (ed i tors) .Cambridge University Press, 19917MORPHO-ASSITANT 1990: Simov, K., G.Angelova and E. Paskaleva.
M O R P H O-ASSISTANT:The proper treatment ofmorphological knowledge.
Proc.
COLING'90,vol.3, 4,53 - 457.Zal iznyak 1977, Grammaticheskii slovarrusskogo yazika: Slovoizmenenie.
Moskva1977.169
