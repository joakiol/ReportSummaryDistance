AN APPLICATION OF AUTOfIATED LANGUAGE UNDERSTANDI;IG TECHNIQUES TO THF GENERATION OF DATA BASE ELEMENTSGeorgette Silva, Christine Montoomerv.
and Don DwigginsOperating Systems, Inc.21031 Ventura BoulevardWoodland Hil ls,  CA 91364This paper defines a methodology for automatically an-alyzing textual reports of events and synthesizingevent data elements from the reports for automated in-put to a data base.
The long-term goal of the workdescribed is to develop a support technology for spe-c i f ic  analytical functions related to the evaluationof daily message traff ic in a mil itary environment.The approach taken leans heavily on theoretical ad-'vances in several disciplines, including linguistics,computational l inguistics, a r t i f i c ia l  intelligence,and cognitive psychology.
The aim is to model thecognitive activit ies of the human analyst as he readsand understands message text, d is t i l l ing  its contentsinto information items of interest to him, and build-ing a conceptual model of the information conveyed bythe message.
This methodology, although developed onthe basis of a restricted subject domain, is presumedto be general, and extensible to other domains.Our approach is centered around the notion of "event",and uti l izes two major knowledge sources: (1) a modelof the sublanguage for event reporting which charac-terizes the message t raf f ic ,  and (2), a model of theanalyst-user's conceptualization of the world ( i .e .
,a model of the entities and relations characteristicof his world).THE SUBLANGUAGEThe two sublanguage domains studied thus far consistof descriptions of events involving a i rc ra f t  ac t iv i t iesand launchings of missiles and sate l \ ] i tes .The source data are contained in the text portions ofmi l i ta ry  messages typical of these subject domains,consisting of a report t i t le  summarizing a given event,followed by one or more declarat ive sentences describ-ing that event (and opt iona l ly ,  other related events).Both the semantics and the syntax of these event de-script ions are constrained by two factors.
One, bythe part icu lar  subject domain, and two, by the factthat the events described are l imited to what is ob-servable and what should be reported according to areporting procedure.
This results in a substantialnumber of par t i c ip ia l  constructions of various types,complex nominalizati~ns and agentless passives, aswell as a range of types of quant i f icat ion,  conjunc-t ion,  complementation, e l l ips i s ,  and anaphora.
Thesublanguage, although less extensive in i ts  inventoryof syntactic constructions than event reports injourna l i s t i c  narrat ive,  nevertheless contains certainconstructions which present challenging semantic pro-blems.
Such problems include the treatment of "re-spectively" constructions, as well as certain types ofdef in i te  anaphora which not only transcend sentenceboundaries and, in some cases, even message boundaries,but often are of the kind that have no exp l i c i t  re-ferent in the previous discourse.Of the two languages studied thus far ,  the discoursestructure of the missi le and sate l l i te  reports is con-siderably more complex than that of a i r  ac t iv i t ies .While in a i r  ac t iv i t ies  reports the description of agiven event is often completed within a single sentence(e.g., a particular aircraft penetrated enemy airspaceat a specific location and a specific time), in missileand satel l i te reports the complete specification of theproperties of an event and of the object(s) involvedmore frequently requires several sentences, and not un-commonly, several messages.
Thus, a report on somelaunch operation can consist of an in i t ia l ,  ratherskeletal statement, followed by one or more messagesreceived over a period of time, which update the prev-ious report, adding to and sometimes changing previousspecifications.
The boundaries of a discourse relevantto a single event, then, can range from a single sen-tence to several messages.
The problem of assemblingthe total mental "picture" relating to any given eventcan only be approached on the discourse level.Any message may contain descriptions of more than oneevent.
These events may be connected in some way, ortotal ly unrelated (e.g., a summary), Our approach tothis problem is to describe the meaning content of themessage in terms of a "rlessage Grammar" in which the"primitives" are event classes, and the relations arediscourse-level relations.
The latter may be optionalor obligatory and determine the connectivity or non-connectivity between events.THE WORLD rIODELA particular world of discourse is characterized by acollection of entit ies, including their properties andthe relations in which they participate.
We define aworld model in terms of abstract data structures called"templates", which resemble l inguistic case frames.Each template describes a class of entities in termsof those properties which are normally associated withthat class in a particular domain.
A template thus re-flects the information user's conceptualization of thedomain, i .e .
,  his view of what that class of entitiesinvolves.
In the domains under investigation there aretemplates for classes of objects (aircraft,  missiles),classes of events (f l ights,  launchings), classes of re-lations (temporal, causal), and other concepts such astime and date.
A template represents an n-ary relation,where the n-ary relationship is named by a predicatesymbol (e.g., Precede (Eventl, Event2), Enroute (Object,Source, Destination, Time, etc.
)).The templates are the basic data objects of an EventRepresentation Language (ERL), an experimental anguagewritten to explore the use of "templates" as a knowledgerepresentation technique with which to build languageunderstanding systems for message text analysis.The Event Representation Language is implemented in asubset of Prolog, a formalism using a clausal form oflogic restricted to "Horn" clauses.
Horn clauses can begiven both a declarative and a procedural intrepretationand are therefore very well suited for the expression ofconcepts in the Event Representation Language.
Thebasic computational mechanism of Prolog is a patternmatching process ("unification") operating on generalrecord structures ("terms"of logic).Templates are encoded as "construct" clauses.
For ex-ample, the DEPLOY template, which is informallyThis' research was sponsored by the Air Force SystemsCommand's Rome Air Development Center, Griffiss AirForce Base, New York.95Table I .
Informal Descript ion of  the DEPLOY ConceptIIDescr ipt ive Elements ) Procedural ElementstI .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
":;;Z 7 :  ) .
.
.
.
.
.
.
.
.
.
.
.
.
.
.IOescriptor F i l l e r  Specif ication -L_  i I for ., /OPT;  , f i l l i ng  smots' : Y - -  .
.
.
.
.
: I, Log ica l  Subject OBL Construct 'A i rc ra f t 'Object : noun phrase) (+acft)IIDestination: PP:'to'+ NP(+loc) OBL~.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
_ .
.
_ .
.
.
.
.
.
.
.
.
.~ .
.
.
.
.
.
.template from log ica lsubjectSearch VMODS l i s tfo r  appropr iateprepos i t iona l  phrase!1 -- ,+ -.
+ -, : Search VMODS list ?
Aov~ time reT) Time 9 ao {a, .4 .
.
ha.
.
.
.
.
OPT , fo r  appropr iate~" ~" '~""~ .
.
.
.
.
.
.
.  )
const i tuent  NP( ti,.~y .
,Table 2.
Prolog Representation of DEPLOY Templateconstruct ('DEPLOY', s(Subj,Vbgr,Obj,Compl,Vmods),\[OB1 ,S ,LZ,DTG\]):-object(Subj,OB1),desttnation(Vmods,D1),construct('DTG' ,VmodsoDTG).. .
.
.
.
.
.
.
- .
- .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
- .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
- .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.~lTable 3.
A "Destination" Clausedesttnation(Vmods, slot('DESTINATION=',S1ot)):-f l l l - s lo t (Vmods, \ [ 'TO' \ ] , ' LOC' ,S lot ) .96represented in Table 1 in a simplified form, is encodedas in Table 2.The head of the "construct" clause has three arguments:a template name, the name of the syntactic constituentwhich serves as the context which is searched in anattempt o find f i l le rs  for the descriptor slots of thetemp\]ate in question, and a third argument which re-presents the output of the procedure, i .e .
,  the in-stantiated slots.The body of the "construct" clause consists of three"goals" corresponding to the three slots of the DEPLOYtemplate shown in Table 2.
These three goals are them-se\]ves defined as procedures, which seek f i l le rs  forthe descriptor slots they represent.For example, the "destination" slot in the "construct"procedure for DEPLOY is written as in Table 3.This representation has certain advantages, among whichwe might mention the following two: (1) i f  additionalinformation eeds to be associated with a particularpredicate, this can be done simply by adding anotherclause; and (2), Prolog provides a uniform way of re-presenting structures and processes at several levelsof grammatical description: syntactic structures,syntactic normaIJzation, description of objects, de-scription of events, and description of text-leve\] re-lations.THE UNDERSTANDING PROCESSThe formal definition of the sublanguage currentlytakes the form of an ATN grammar.
The parser takes asentence as input and produces a parse tree.
The parseis input to the ERL "machine", which uses templatesfor the interpretation of the input and produces "eventrecords" as output.
Event records can be viewed as"instantiated" templates.
They are event-centered datastructures in which the information conveyed by the in-put can be viewed from the perspective of time, loca-tion, type of act ivity,  object(s) involved, etc.
Theseevent records constitute the "extensional" data basewhich serves as a support tool for higher-level analy-tical functions in a decision-making environment.The computer program which embodies this approach tonatural language understanding is written in FORTH,Pro\]og, and SrIOBOL4, and runs on a PDP l\]/45 underthe RSX operating system.The major part of the system was bui lt  in the program-ming language FORTH, which is an interactive, incremen-tal system with a low-level semantics which the usercan easily and quickly extend.
This allowed the rapiddevelopment of the ATN language and control scheme, aswell as the support scheme for the execution of the ERLalgorithms.
These are written in Prolog, which is--asmentioned above--a language that is well suited to thespecification of templates and the algorithms for in-stantiating them.
For ease of implementation, thecompiler for the subset of Prolog uti l ized in thisapplication was written in S~OBOL4.The use of FORTH and the Prolog formalism allowed fair -ly easy development of the system even without thepowerful structure manipulation capabilities of a lan-guage like LISP.
The major impact of the minicomputerenvironment was fe l t  near the completion of system de-velopment, when the combined programs nearly f i l ledthe available 64K byte address space.
This has beenmitigated somewhat by moving the working data to a formof virtual memory which is supported by FORTH, and byoverlaying the grammar code with the interpretationcode.9"/
