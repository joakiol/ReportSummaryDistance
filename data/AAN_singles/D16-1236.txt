Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 2183?2192,Austin, Texas, November 1-5, 2016. c?2016 Association for Computational LinguisticsPOLY: Mining Relational Paraphrases from Multilingual SentencesAdam GrycnerMax-Planck Institute for InformaticsSaarland Informatics CampusBuilding E1.4, 66123Saarbru?cken, Germanyagrycner@mpi-inf.mpg.deGerhard WeikumMax-Planck Institute for InformaticsSaarland Informatics CampusBuilding E1.4, 66123Saarbru?cken, Germanyweikum@mpi-inf.mpg.deAbstractLanguage resources that systematically orga-nize paraphrases for binary relations are ofgreat value for various NLP tasks and have re-cently been advanced in projects like PATTY,WiseNet and DEFIE.
This paper presents anew method for building such a resourceand the resource itself, called POLY.
Startingwith a very large collection of multilingualsentences parsed into triples of phrases, ourmethod clusters relational phrases using prob-abilistic measures.
We judiciously leveragefine-grained semantic typing of relational ar-guments for identifying synonymous phrases.The evaluation of POLY shows significant im-provements in precision and recall over theprior works on PATTY and DEFIE.
An ex-trinsic use case demonstrates the benefits ofPOLY for question answering.1 IntroductionMotivation.
Information extraction from text typi-cally yields relational triples: a binary relation alongwith its two arguments.
Often the relation is ex-pressed by a verb phrase, and the two arguments arenamed entities.
We refer to the surface form of therelation in a triple as a relational phrase.
Reposito-ries of relational phrases are an asset for a variety oftasks, including information extraction, textual en-tailment, and question answering.This paper presents a new method for systemat-ically organizing a large set of such phrases.
Weaim to construct equivalence classes of synonymousphrases, analogously to how WordNet organizesunary predicates as noun-centric synsets (aka.
se-mantic types).
For example, the following relationalphrases should be in the same equivalence class:sings in, is vocalist in, voice in denoting a relationbetween a musician and a song.State of the Art and its Limitations.
Startingwith the seminal work on DIRT (Lin and Pantel,2001), there have been various attempts on build-ing comprehensive resources for relational phrases.Recent works include PATTY (Nakashole et al,2012), WiseNet (Moro and Navigli, 2012) and DE-FIE (Bovi et al, 2015).
Out of these DEFIE is thecleanest resource.
However, the equivalence classestend to be small, prioritizing precision over recall.On the other hand, PPDB (Ganitkevitch et al, 2013)offers the largest repository of paraphrases.
How-ever, the paraphrases are not relation-centric andthey are not semantically typed.
So it misses out onthe opportunity of using types to distinguish iden-tical phrases with different semantics, for example,performance in with argument types musician andsong versus performance in with types athlete andcompetition.Our Approach.
We start with a large collectionof relational triples, obtained by shallow informa-tion extraction.
Specifically, we use the collectionof Faruqui and Kumar (2015), obtained by com-bining the OLLIE tool with Google Translate andprojecting multilingual sentences back to English.Note that the task addressed in that work is relationaltriple extraction, which is orthogonal to our problemof organizing the relational phrases in these triplesinto synonymy sets.We canonicalize the subject and object arguments2183of triples by applying named entity disambiguationand word sense disambiguation wherever possible.Using a knowledge base of entity types, we can theninfer prevalent type signatures for relational phrases.Finally, based on a suite of judiciously devised prob-abilistic distance measures, we cluster phrases in atype-compatible way using a graph-cut technique.The resulting repository contains ca.
1 Million rela-tional phrases, organized into ca.
160,000 clusters.Contribution.
Our salient contributions are: i) anovel method for constructing a large repository ofrelational phrases, based on judicious clustering andtype filtering; ii) a new linguistic resource, coinedPOLY, of relational phrases with semantic typing,organized in equivalence classes; iii) an intrinsicevaluation of POLY, demonstrating its high qualityin comparison to PATTY and DEFIE; iv) an extrin-sic evaluation of POLY, demonstrating its benefitsfor question answering.
The POLY resource is pub-licly available 1.2 Method OverviewOur approach consists of two stages: relationalphrase typing and relational phrase clustering.
InSection 3, we explain how we infer semantic typesof the arguments of a relational phrase.
In Section4, we present the model for computing synonyms ofrelational phrases (i.e., paraphrases) and organizingthem into clusters.A major asset for our approach is a large corpus ofmultilingual sentences from the work of Faruqui andKumar (2015).
That dataset contains sentences fromWikipedia articles in many languages.
Each sen-tence has been processed by an Open InformationExtraction method (Banko et al, 2007), specificallythe OLLIE tool (Mausam et al, 2012), which pro-duces a triple of surface phrases that correspond toa relational phrase candidate and its two arguments(subject and object).
Each non-English sentence hasbeen translated into English using Google Trans-late, thus leveraging the rich statistics that Googlehas obtained from all kinds of parallel multilingualtexts.
Altogether, the data from Faruqui and Kumar(2015) provides 135 million triples in 61 languagesand in English (from the translations of the corre-sponding sentences).
This is the noisy input to our1www.mpi-inf.mpg.de/yago-naga/poly/method.
Figure 1 shows two Spanish sentences, theextracted triples of Spanish phrases, the sentences?translations to English, and the extracted triples ofEnglish phrases.The figure shows that identical phrases in the for-eign language - ?fue filmado por?
- may be trans-lated into different English phrases: ?was shot by?vs.
?was filmed by?, depending on the contextin the respective sentences.
This is the main in-sight that our method builds on.
The two resultingEnglish phrases have a certain likelihood of beingparaphrases of the same relation.
However, this isan uncertain hypotheses only, given the ambiguityof language, the noise induced by machine transla-tion and the potential errors of the triple extraction.Therefore, our method needs to de-noise these inputphrases and quantify to what extent the the relationalphrases are indeed synonymous.
We discuss this inSections 3 and 4.3 Relation TypingThis section explains how we assign semantic typesto relational phrases.
For example, the relationalphrase wrote could be typed as <author> wrote<paper>, as one candidate.
The typing helps us todisambiguate the meaning of the relational phraseand later find correct synonyms.
The relationalphrase shot could have synonyms directed or killedwith a gun.
However, they represent different sensesof the phrase shot.
With semantic typing, we canseparate these two meanings and determine that<person> shot <person> is a synonym of <per-son> killed with a gun <person>, whereas <direc-tor> shot<movie> is a synonym of<director> di-rected <movie>.Relation typing has the following steps: argumentextraction, argument disambiguation, argument typ-ing and type filtering.
The output is a set of candi-date types for the left and right arguments of eachEnglish relational phrase.3.1 Argument ExtractionFor the typing of a relational phrase, we have to de-termine words in the left and right arguments thatgive cues for semantic types.
To this end, we iden-tify named entities, whose types can be looked up ina knowledge base, and the head words of common2184El video fue filmado por el direcor Matthew Rolston.
Un segundo video fue filmado por David Fincher.The video was shot by director Matthew Rolston.
A second movie was filmed by David Fincher.El video fue filmado por el direcor Matthew Rolston Un segundo video fue filmado por David Fincherarg1 rel arg2 arg1 rel arg2The video was shot by director Matthew Rolston A second movie was filmed by David Fincherarg1 rel arg2 arg1 rel arg2Translation TranslationFigure 1: Multilingual input sentences and triplesnoun phrases.
As output, we produce a ranked listof entity mentions and common nouns.To create this ranking, we perform POS taggingand noun phrase chunking using Stanford CoreNLP(Manning et al, 2014) and Apache OpenNLP 2.
Forhead noun extraction, we use the YAGO Javatools3and a set of manually crafted regular expressions.Since the input sentences result from machine trans-lation, we could not use dependency parsing, be-cause sentences are often ungrammatical.Finally, we extract all noun phrases which containthe same head noun.
These noun phrases are thensorted according to their lengths.For example, for input phrase contemporaryBritish director who also created ?Inception?, ourmethod would yield contemporary British director,British director, director in decreasing order.3.2 Argument DisambiguationThe second step is responsible for the disambigua-tion of the noun phrase and named entity candidates.We use the YAGO3 knowledge base (Mahdisoltaniet al, 2015) for named entities, and WordNet (Fell-baum, 1998) for noun phrases.
We proceed in theranking order of the phrases from the first step.Candidate senses are looked up in YAGO3 andWordNet, respectively, and each candidate is scored.The scores are based on:?
Frequency count prior: This is the number ofWikipedia incoming links for named entities inYAGO3, or the frequency count of noun phrasesenses in WordNet.?
Wikipedia prior: We increase scores of YAGO3entities whose URL strings (i.e., Wikipedia ti-tles) occur in the Wikipedia page from which thetriple was extracted.2opennlp.apache.org/3mpi-inf.mpg.de/yago-naga/javatools/?
Translation prior: We boost the scores of senseswhose translations occur in the original inputsentence.
For example, the word stage is disam-biguated as opera stage rather than phase, be-cause the original German sentence contains theword Bu?hne (German word for a concert stage)and not Phase.
The translations of word sensesare obtained from Universal WordNet (de Meloand Weikum, 2009).We prefer WordNet noun phrases over YAGO3named entities since noun phrases have lower typeambiguity (fewer possible types).
The final score ofa sense s is:score(s) = ?freq(s)+?wiki(s)+?trans(s) (1)where freq(s) is the frequency count of s, andwiki(s) and trans(s) equal maximal frequencycount if the Wikipedia prior and Translation priorconditions hold (and otherwise set to 0).
?, ?, ?
aretunable hyper-parameters (set using withheld data).Finally, from the list of candidates, we generatea disambiguated argument: either a WordNet synsetor a YAGO3 entity identifier.3.3 Argument TypingIn the third step of relation typing, we assign can-didate types to the disambiguated arguments.
Tothis end, we query YAGO3 for semantic types (incl.transitive hypernyms) for a given YAGO3 or Word-Net identifier.The type system used in POLY consists of a sub-set of the WordNet noun hierarchy.
We restrict our-selves to 734 types, chosen semi-automatically asfollows.
We selected the 1000 most frequent Word-Net types in YAGO3 (incl.
transitive hypernyms).Redundant and non-informative types were filteredout by the following technique: all types were or-ganized into a directed acyclic graph (DAG), and2185we removed a type when the frequency count ofsome of its children was higher than 80% of the par-ent?s count.
For example, we removed type trainersince more than 80% of trainers in YAGO3 are alsocoaches.
In addition, we manually removed a fewnon-informative types (e.g.
expressive style).As output, we obtain lists of semantic types forthe two arguments of each relational phrase.3.4 Type FilteringIn the last step, we filter types one more time.
Thistime we filter candidate types separately for eachdistinct relational phrase, in order to choose the mostsuitable specific type signature for each phrase.
Thischoice is made by type tree pruning.For each relational phrase, we aggregate all typesof the left arguments and all types of the right ar-guments, summing up their their frequency counts.This information is organized into a DAG, based ontype hypernymy.
Then we prune types as follows(similarly to Section 3.3): i) remove a parent typewhen the relative frequency count of one of the chil-dren types is larger than 80% of the parent?s count;ii) remove a child type when its relative frequencycount is smaller than 20% of the parent?s count.For each of the two arguments of the relationalphrase we allow only those types which are left afterthe pruning.
The final output is a set of relationalphrases where each has a set of likely type signatures(i.e., pairs of types for the relation?s arguments).4 Relation ClusteringThe second stage of POLY addresses the relationclustering.
The algorithm takes semantically typedrelational phrases as input, quantifies the semanticsimilarity between relational phrases, and organizesthem into clusters of synonyms.
The key insight thatour approach hinges on is that synonymous phraseshave similar translations in a different language.
Inour setting, two English phrases are semanticallysimilar if they were translated from the same rela-tional phrases in a foreign language and their ar-gument types agree (see Figure 1 for an example).Similarities between English phrases are cast intoedge weights of a graph with phrases as nodes.
Thisgraph is then partitioned to obtain clusters.4.1 Probabilistic Similarity MeasuresThe phrase similarities in POLY are based on prob-abilistic measures.
We use the notation:?
F : a set of relational phrases from a foreign lan-guage F?
E: a set of translations of relational phrases fromlanguage F to English?
c(f, e): no.
of times of translating relationalphrase f ?
F into relational phrase e ?
E?
c(f), c(e): frequency counts for relationalphrase f ?
F and its translation e ?
E?
p(e|f) = c(f,e)c(f) : (estimator for the) probabilityof translating f ?
F into e ?
E?
p(f |e) = c(f,e)c(e) : (estimator for the) probabilityof e ?
E being a translation of f ?
FWe define:p(e1|e2) =?fp(e1|f) ?
p(f |e2) (2)as the probability of generating relational phrasee1 ?
E from phrase e2 ?
E. Finally we define:support(e1, e2) =?f?Fc(f, e1) ?
c(f, e2) (3)confidence(e1, e2) =21p(e1|e2) +1p(e2|e1)(4)Confidence is the final similarity measure usedin POLY.
We use the harmonic mean in Equation4 to dampen similarity scores that have big differ-ences in their probabilities in Equation 2.
Typically,pairs e1, e2 with such wide gaps in their probabilitiescome from subsumptions, not synonymous phrases.Finally, we compute the support and confidence forevery pair of English relational phrases which havea common source phrase of translation.
We prunephrase pairs with low support (below a threshold),and rank the remaining pairs by confidence.4.2 Graph ClusteringTo compute clusters of relational phrases, we usemodularity-based graph partitioning.
Specifically,we use the partitioning algorithm of Blondel et al(2008).
The resulting clusters (i.e., subgraphs) are2186Cluster of relational phrases<location> is the heart of <location><location> is situated in <location><location> is enclosed by <location><location> is located amidst <location><location> is surrounded by <location>Table 1: Example of a cluster of relational phrasesthen ranked by their weighted graph density multi-plied by the graph size (Equation 5).
The exampleof a cluster is shown in Table 1.?
(ei,ej)?E sim(ei, ej)|V | ?
|V ?
1| ?
|V | (5)5 EvaluationFor the experimental evaluation, we primarily chosetriples from the German language (and their Englishtranslations).
With about 23 million triples, Ger-man is the language with the largest number of ex-tractions in the dataset, and there are about 2.5 mil-lion distinct relational phrases from the German-to-English translation.
The POLY method is imple-mented using Apache Spark, so it scales out to han-dle such large inputs.After applying the relation typing algorithm, weobtain around 10 million typed relational phrases.If we ignored the semantic types, we would haveabout 950,000 distinct phrases.
On this input data,POLY detected 1,401,599 pairs of synonyms.
Thesynonyms were organized into 158,725 clusters.In the following, we present both an intrinsic eval-uation and an extrinsic use case.
For the intrin-sic evaluation, we asked human annotators to judgewhether two typed relational phrases are synony-mous or not.
We also studied source languagesother than German.
In addition, we compared POLYagainst PATTY (Nakashole et al, 2012) and DEFIE(Bovi et al, 2015) on the relation paraphrasing task.For the extrinsic evaluation, we considered a sim-ple question answering system and studied to whatextent similarities between typed relational phrasescan contribute to answering more questions.5.1 Precision of SynonymsTo assess the precision of the discovered synonymyamong relational phrases (i.e., clusters of para-Precision RangeTop 250 0.91 0.87?
0.94Random 0.83 0.78?
0.87Table 2: Precision of synonym pairs in POLYphrases), we sampled POLY?s output.
We assessedthe 250 pairs of synonyms with the highest similar-ity scores.
We also assessed a sample of 250 pairs ofsynonyms, randomly drawn from POLY?s output.These pairs of synonyms were shown to severalhuman annotators to check their correctness.
Re-lational phrases were presented by showing the se-mantic types, the textual representation of the rela-tional phrase and sample sentences where the phrasewas found.
The annotators were asked whether tworelational phrases have the same meaning or not.They could also abstain.The results of this evaluation are shown in Ta-ble 2 with (lower bounds and upper bounds of) the0.95-confidence Wilson score intervals (Brown etal., 2001).
This evaluation task had good inter-annotator agreement, with Fleiss?
Kappa around 0.6.Table 3 shows anecdotal examples of synonymouspairs of relational phrases.These results show that POLY?s quality is com-parable with state-of-the-art baselines resources.WiseNet (Moro and Navigli, 2012) is reported tohave precision of 0.85 for 30,000 clusters.
This isalso the only prior work where the precision of syn-onymy of semantically typed relational phrases wasevaluated.
The other systems did not report thatmeasure.
However, they performed the evaluationof subsumption, entailment or hypernymy relation-ships which are related to synonymy.
Subsumptionsin PATTY have precision of 0.83 for top 100 and0.75 for a random sample.
Hypernyms in RELLYare reported to have precision of 0.87 for top 100 and0.78 for a random sample.
DEFIE performed sep-arate evaluations for hypernyms generated directlyfrom WordNet (precision 0.87) and hypernyms ob-tained through a substring generalization algorithm(precision 0.9).Typical errors in the paraphrase discovery ofPOLY come from incorrect translations or extractionerrors.
For example, heard and belongs to were clus-tered together because they were translated from the2187Id Relation phrase Synonymous Relational Phrase1 <location> is surrounded by <region> <location> is the heart of <region>2 <artifact> is reminiscent of <time period> <artifact> recalls <time period>3 <painter> was a participant in <show> <painter> has participated in <show>4 <group> maintains a partnership with <district> <group> has partnered with <district>5 <movie> was shot at <location> <movie> was filmed in <location>6 <person> was shot by <group> <person> was shot dead by <group>7 <movie> was shot by <film director> <movie> was directed by <film director>Table 3: Examples of synonyms of semantically typed relational phrasessame semantically ambiguous German word geho?rt.An example for extraction errors is that took andparticipated in were clustered together because tookwas incorrectly extracted from a sentence with thephrase took part in.
Other errors are caused byswapped order of arguments in a triple (i.e., mis-takes in detecting passive form) and incorrect argu-ment disambiguation.5.2 Comparison to CompetitorsTo compare POLY with the closest competitorsPATTY and DEFIE, we designed an experimentalong the lines of the evaluation of Information Re-trieval systems (e.g.
TREC benchmarks).
First, werandomly chose 100 semantically typed relationalphrases with at least three words (to focus on themore interesting multi-word case, rather than singleverbs).
These relational phrases had to occur in allthree resources.
For every relational phrase we re-trieved synonyms from all of the systems, forming apool of candidates.
Next, to remove minor syntacticvariations of the same phrase, the relational phraseswere lemmatized.
In addition, we removed all lead-ing prepositions, modal verbs, and adverbs.We manually evaluated the correctness of the re-maining paraphrase candidates for each of the 100phrases.
Precision was computed as the ratio of thecorrect synonyms by one system to the number of allsynonyms provided by that system.
Recall was com-puted as the ratio of the number of correct synonymsby one system to the number of all correct synonymsin the candidate pool from all three systems.The results are presented in Table 4.
All resultsare macro-averaged over the 100 sampled phrases.We performed a paired t-test for precision and re-call of POLY against each of the systems and ob-tained p-values below 0.05.
POLY and DEFIE of-Precision Recall F1PATTY 0.63 0.32 0.42DEFIE 0.66 0.32 0.44POLY 0.79 0.46 0.58Table 4: Comparison to the competitorsfer much higher diversity of synonyms than PATTY.However, DEFIE?s synonyms often do not fit the se-mantic type signature of the given relational phraseand are thus incorrect.
For example, was assumedby was found to be a synonym of <group> wasacquired by <group>.
PATTY, on the other hand,has higher recall due to its variety of prepositions at-tached to relational phrases; however, these also in-clude spurious phrases, leading to lower precision.For example, succeeded in was found to be a syn-onym of <person> was succeeded by <leader>.Overall, POLY achieves much higher precision andrecall than both of these baselines.5.3 Ablation StudyTo evaluate the influence of different components,we performed an ablation study.
We consider ver-sions of POLY where Wikipedia prior and Trans-lation prior (Section 3.2) are disregarded (?
dis-ambiguation), where the type system (Section 3.3)was limited to the 100 most frequent YAGO types(Type system 100) or to the 5 top-level types fromthe YAGO hierarchy (Type system 5), or where thetype filtering parameter (Section 3.4) was set to 70%or 90% (Type filtering 0.7/0.9).
The evaluation wasdone on random samples of 250 pairs of synonyms.Table 5 shows the results with the 0.95-confidenceWilson score intervals.
Without our argument dis-ambiguation techniques, the precision drops heav-ily.
When weakening the type system, our tech-2188Precision CoveragePOLY 0.83 1,401,599?
disambiguation 0.66?
0.06 1,279,941Type system 100 0.76?
0.05 858,053Type system 5 0.62?
0.06 236,804Type filtering 0.7 0.81?
0.05 192,117Type filtering 0.9 0.73?
0.05 2,061,257Table 5: Ablation StudyTop 250 Random 250French 0.93?
0.03 0.85?
0.04Hindi 0.86?
0.05 0.71?
0.05Russian 0.85?
0.05 0.77?
0.05Table 6: Precision of synonyms (other languages)niques for argument typing and type filtering are pe-nalized, resulting in lower precision.
So we see thatall components of the POLY architecture are essen-tial for achieving high-quality output.
Lowering thetype-filtering threshold yields results with compara-ble precision.
However, increasing the threshold re-sults in a worse noise filtering procedure.5.4 Evaluation with Other LanguagesIn addition to paraphrases derived from German, weevaluated the relational phrase synonymy derivedfrom a few other languages with lower numbers ofextractions.
We chose French, Hindi, and Russian(cf.
(Faruqui and Kumar, 2015)).
The results arepresented in Table 6, again with the 0.95-confidenceWilson score intervals.Synonyms derived from French have similar qual-ity as those from German.
This is plausible as onewould assume that French and German have similarquality in translation to English.
Synonyms derivedfrom Russian and Hindi have lower precision due tothe lower translation quality.
The precision for Hindiis lower, as the Hindi input corpus has much fewersentences than for the other languages.5.5 Extrinsic Evaluation: Question AnsweringAs an extrinsic use case for the POLY resource, weconstructed a simple Question Answering (QA) sys-tem over knowledge graphs such as Freebase, anddetermined the number of questions for which thesystem can find a correct answer.
We followed theapproach presented by Fader et al (2014).
The sys-tem consists of question parsing, query rewriting anddatabase look-up stages.
We disregard the stage ofranking answer candidates, and merely test whetherthe system could return the right answer (i.e., wouldreturn with the perfect ranking).In the question parsing stage, we use 10 high-precision parsing operators by Fader et al (2014),which map questions (e.g., Who invented papyrus?
)to knowledge graph queries (e.g., (?x, invented, pa-pyrus)).
Additionally, we map question words to se-mantic types.
For example, the word who is mappedto person, where to location, when to abstract en-tity and the rest of the question words are mapped totype entity.We harness synonyms and hyponyms of relationalphrases to paraphrase the predicate of the query.
Theparaphrases must be compatible with the seman-tic type of the question word.
In the end, we usethe original query, as well as found paraphrases, toquery a database of subject, predicate, object triples.As the knowledge graph for this experiment we usedthe union of collections: a triples database fromOpenIE (Fader et al, 2011), Freebase (Bollackeret al, 2008), Probase (Wu et al, 2012) and NELL(Carlson et al, 2010).
In total, this knowledge graphcontained more than 900 Million triples.We compared six systems for paraphrasing se-mantically typed relational phrases:?
Basic: no paraphrasing at all, merely using theoriginally generated query.?
DEFIE: using the taxonomy of relationalphrases by Bovi et al (2015).?
PATTY: using the taxonomy of relationalphrases by Nakashole et al (2012).?
RELLY: using the subset of the PATTY taxon-omy with additional entailment relationships be-tween phrases (Grycner et al, 2015).?
POLY DE: using synonyms of relationalphrases derived from the German language.?
POLY ALL: using synonyms of relationalphrases derived from the 61 languages.Since DEFIE?s relational phrases are represented byBabelNet (Navigli and Ponzetto, 2012) word senseidentifiers, we generated all possible lemmas for2189each identifier.We ran the paraphrase-enhanced QA system forthree benchmark sets of questions:?
TREC: the set of questions used for the eval-uation of information retrieval QA systems(Voorhees and Tice, 2000)?
WikiAnswers: a random subset of questionsfrom WikiAnswers (Fader et al, 2013).?
WebQuestions: the set of questions about Free-base entities (Berant et al, 2013).From these question sets, we kept only those ques-tions which can be parsed by one of the 10 questionparsing templates and have a correct answer in thegold-standard ground truth.
In total, we executed451 questions for TREC, 516 for WikiAnswers and1979 for WebQuestions.For every question, each paraphrasing systemgenerates a set of answers.
We measured for howmany questions we could obtain at least one correctanswer.
Table 7 shows the results.The best results were obtained by POLY ALL.We performed a paired t-test for the results ofPOLY DE and POLY ALL against all other sys-tems.
The differences between POLY ALL andthe other systems are statistically significant with p-value below 0.05.Additionally, we evaluated paraphrasing systemswhich consist of combination of all of the describeddatasets and all of the described datasets with-out POLY.
The difference between these two ver-sions suggest that POLY contains many paraphraseswhich are available in none of the competing re-sources.TREC WikiAnswers WebQuestionsBasic 193 144 365DEFIE 197 147 394RELLY 208 150 424PATTY 213 155 475POLY DE 232 163 477POLY ALL 238 173 530All 246 176 562All / POLY 218 157 494Questions 451 516 1979Table 7: Number of questions with correct answer.6 Related WorkKnowledge bases (KBs) contribute to many NLPtasks, including Word Sense Disambiguation (Moroet al, 2014), Named Entity Disambiguation (Hof-fart et al, 2011), Question Answering (Fader et al,2014), and Textual Entailment (Sha et al, 2015).Widely used KBs are DBpedia (Lehmann et al,2015), Freebase (Bollacker et al, 2008), YAGO(Mahdisoltani et al, 2015), Wikidata (Vrandecicand Kro?tzsch, 2014) and the Google KnowledgeVault (Dong et al, 2014).
KBs have rich informa-tion about named entities, but are pretty sparse onrelations.
In the latter regard, manually created re-sources such as WordNet (Fellbaum, 1998), Verb-Net (Kipper et al, 2008) or FrameNet (Baker et al,1998) are much richer, but still face the limitation oflabor-intensive input and human curation.The paradigm of Open Information Extraction(OIE) was developed to overcome the weak cover-age of relations in automatically constructed KBs.OIE methods process natural language texts to pro-duce triples of surface forms for the argumentsand relational phrase of binary relations.
The firstlarge-scale approach along these lines, TextRunner(Banko et al, 2007), was later improved by Re-Verb (Fader et al, 2011) and OLLIE (Mausam etal., 2012).
The focus of these methods has been onverbal phrases as relations, and there is little effortto determine lexical synonymy among them.The first notable effort to build up a resourcefor relational paraphrases is DIRT (Lin and Pantel,2001), based on Harris?
Distributional Hypothesis tocluster syntactic patterns.
RESOLVER (Yates andEtzioni, 2009) introduced a probabilistic relationalmodel for predicting synonymy.
Yao et al (2012)incorporated latent topic models to resolve the am-biguity of relational phrases.
Other probabilistic ap-proaches employed matrix factorization for findingentailments between relations (Riedel et al, 2013;Petroni et al, 2015) or used probabilistic graphi-cal models to find clusters of relations (Grycner etal., 2014).
All of these approaches rely on the co-occurrence of the arguments of the relation.Recent endeavors to construct large repositoriesof relational paraphrases are PATTY, WiseNet andDEFIE.
PATTY (Nakashole et al, 2012) deviseda sequence mining algorithm to extract relational2190phrases with semantic type signatures, and orga-nized them into synonymy sets and hypernymy hier-archies.
WiseNet (Moro and Navigli, 2012) tappedWikipedia categories for a similar way of organizingrelational paraphrases.
DEFIE (Bovi et al, 2015)went even further and used word sense disambigua-tion, anchored in WordNet, to group phrases withthe same meanings.Translation models have previously been usedfor paraphrase detection.
Barzilay and McKeown(2001) utilized multiple English translations of thesame source text for paraphrase extraction.
Bannardand Callison-Burch (2005) used the bilingual pivot-ing method on parallel corpora for the same task.Similar methods were performed at a much biggerscale by the Paraphrase Database (PPDB) project(Pavlick et al, 2015).
Unlike POLY, the focus ofthese projects was not on paraphrases of binary rela-tions.
Moreover, POLY considers the semantic typesignatures of relations, which is missing in PPDB.Research on OIE for languages other than Englishhas received little attention.
Kim et al (2011) usesKorean-English parallel corpora for cross-lingualprojection.
Gamallo et al (2012) developed anOIE system for Spanish and Portuguese using rulesover shallow dependency parsing.
The recent workof Faruqui and Kumar (2015) extracted relationalphrases from Wikipedia in 61 languages using cross-lingual projection.
Lewis and Steedman (2013) clus-tered semantically equivalent English and Frenchphrases, based on the arguments of relations.7 ConclusionsWe presented POLY, a method for clusteringsemantically typed English relational phrasesusing a multilingual corpus, resulting in a repos-itory of semantically typed paraphrases withhigh coverage and precision.
Future work in-cludes jointly processing all 61 languages inthe corpus, rather than considering them pair-wise, to build a resource for all languages.The POLY resource is publicly available atwww.mpi-inf.mpg.de/yago-naga/poly/.ReferencesCollin F. Baker, Charles J. Fillmore, and John B. Lowe.1998.
The Berkeley FrameNet project.
In ACL.Michele Banko, Michael J. Cafarella, Stephen Soderland,Matthew Broadhead, and Oren Etzioni.
2007.
Openinformation extraction from the web.
In IJCAI.Colin J. Bannard and Chris Callison-Burch.
2005.
Para-phrasing with bilingual parallel corpora.
In ACL.Regina Barzilay and Kathleen McKeown.
2001.
Extract-ing paraphrases from a parallel corpus.
In ACL.Jonathan Berant, Andrew Chou, Roy Frostig, and PercyLiang.
2013.
Semantic parsing on Freebase fromquestion-answer pairs.
In EMNLP.Vincent D Blondel, Jean-Loup Guillaume, Renaud Lam-biotte, and Etienne Lefebvre.
2008.
Fast un-folding of communities in large networks.
Jour-nal of Statistical Mechanics: Theory and Experiment,2008(10):P10008.Kurt D. Bollacker, Colin Evans, Praveen Paritosh, TimSturge, and Jamie Taylor.
2008.
Freebase: a collabo-ratively created graph database for structuring humanknowledge.
In SIGMOD.Claudio Delli Bovi, Luca Telesca, and Roberto Navigli.2015.
Large-scale information extraction from textualdefinitions through deep syntactic and semantic analy-sis.
TACL, 3:529?543.Lawrence D. Brown, T. Tony Cai, and Anirban Dasgupta.2001.
Interval estimation for a binomial proportion.Statistical Science, 16:101?133.Andrew Carlson, Justin Betteridge, Bryan Kisiel, BurrSettles, Estevam R. Hruschka, and Tom M. Mitchell.2010.
Toward an architecture for never-ending lan-guage learning.
In AAAI.Gerard de Melo and Gerhard Weikum.
2009.
Towardsa universal wordnet by learning from combined evi-dence.
In CIKM.Xin Dong, Evgeniy Gabrilovich, Geremy Heitz, WilkoHorn, Ni Lao, Kevin Murphy, Thomas Strohmann,Shaohua Sun, and Wei Zhang.
2014.
Knowledgevault: a web-scale approach to probabilistic knowl-edge fusion.
In KDD.Anthony Fader, Stephen Soderland, and Oren Etzioni.2011.
Identifying relations for open information ex-traction.
In EMNLP.Anthony Fader, Luke S. Zettlemoyer, and Oren Etzioni.2013.
Paraphrase-driven learning for open questionanswering.
In ACL.Anthony Fader, Luke Zettlemoyer, and Oren Etzioni.2014.
Open question answering over curated and ex-tracted knowledge bases.
In KDD.Manaal Faruqui and Shankar Kumar.
2015.
Multilingualopen relation extraction using cross-lingual projection.In NAACL.2191Christiane Fellbaum, editor.
1998.
WordNet: an elec-tronic lexical database.
MIT Press.Pablo Gamallo, Marcos Garcia, and Santiago Ferna?ndez-Lanza.
2012.
Dependency-based open informationextraction.
In Proceedings of the Joint Workshop onUnsupervised and Semi-Supervised Learning in NLP,ROBUS-UNSUP ?12, pages 10?18, Stroudsburg, PA,USA.
Association for Computational Linguistics.Juri Ganitkevitch, Benjamin Van Durme, and ChrisCallison-Burch.
2013.
PPDB: The paraphrasedatabase.
In NAACL.Adam Grycner, Gerhard Weikum, Jay Pujara, JamesFoulds, and Lise Getoor.
2014.
A unified probabilisticapproach for semantic clustering of relational phrases.In AKBC ?14: Proceedings of the 2014 Workshop onAutomated Knowledge Base Construction.Adam Grycner, Gerhard Weikum, Jay Pujara, James R.Foulds, and Lise Getoor.
2015.
RELLY: Inferring hy-pernym relationships between relational phrases.
InEMNLP.Johannes Hoffart, Mohamed Amir Yosef, Ilaria Bordino,Hagen Fu?rstenau, Manfred Pinkal, Marc Spaniol,Bilyana Taneva, Stefan Thater, and Gerhard Weikum.2011.
Robust disambiguation of named entities in text.In EMNLP.Seokhwan Kim, Minwoo Jeong, Jonghoon Lee, andGary Geunbae Lee.
2011.
A cross-lingual anno-tation projection-based self-supervision approach foropen information extraction.
In IJCNLP.Karin Kipper, Anna Korhonen, Neville Ryant, andMartha Palmer.
2008.
A large-scale classification ofenglish verbs.
Language Resources and Evaluation,42:21?40.Jens Lehmann, Robert Isele, Max Jakob, Anja Jentzsch,Dimitris Kontokostas, Pablo N. Mendes, SebastianHellmann, Mohamed Morsey, Patrick van Kleef,So?ren Auer, and Christian Bizer.
2015.
DBpedia -a large-scale, multilingual knowledge base extractedfrom wikipedia.
Semantic Web, 6:167?195.Mike Lewis and Mark Steedman.
2013.
Unsuper-vised induction of cross-lingual semantic relations.
InEMNLP.Dekang Lin and Patrick Pantel.
2001.
DIRT@SBT@discovery of inference rules from text.
InKDD.Farzaneh Mahdisoltani, Joanna Biega, and Fabian M.Suchanek.
2015.
YAGO3: A knowledge base frommultilingual wikipedias.
In CIDR.Christopher D. Manning, Mihai Surdeanu, John Bauer,Jenny Rose Finkel, Steven Bethard, and David Mc-Closky.
2014.
The Stanford CoreNLP natural lan-guage processing toolkit.
In ACL.Mausam, Michael Schmitz, Stephen Soderland, RobertBart, and Oren Etzioni.
2012.
Open language learningfor information extraction.
In EMNLP.Andrea Moro and Roberto Navigli.
2012.
WiseNet:building a wikipedia-based semantic network with on-tologized relations.
In CIKM.Andrea Moro, Alessandro Raganato, and Roberto Nav-igli.
2014.
Entity linking meets word sense disam-biguation: a unified approach.
TACL, 2:231?244.Ndapandula Nakashole, Gerhard Weikum, and Fabian M.Suchanek.
2012.
PATTY: A taxonomy of relationalpatterns with semantic types.
In EMNLP.Roberto Navigli and Simone Paolo Ponzetto.
2012.
Ba-belNet: The automatic construction, evaluation andapplication of a wide-coverage multilingual semanticnetwork.
Artificial Intelligence, 193:217?250.Ellie Pavlick, Pushpendre Rastogi, Juri Ganitkevitch,Benjamin Van Durme, and Chris Callison-Burch.2015.
PPDB 2.0: Better paraphrase ranking, fine-grained entailment relations, word embeddings, andstyle classification.
In ACL.Fabio Petroni, Luciano Del Corro, and Rainer Gemulla.2015.
CORE: Context-aware open relation extractionwith factorization machines.
In EMNLP.Sebastian Riedel, Limin Yao, Andrew McCallum, andBenjamin M. Marlin.
2013.
Relation extractionwith matrix factorization and universal schemas.
InNAACL.Lei Sha, Sujian Li, Baobao Chang, Zhifang Sui, andTingsong Jiang.
2015.
Recognizing textual entailmentusing probabilistic inference.
In EMNLP.Ellen M. Voorhees and Dawn M. Tice.
2000.
Building aquestion answering test collection.
In SIGIR.Denny Vrandecic and Markus Kro?tzsch.
2014.
Wiki-data: a free collaborative knowledgebase.
Commun.ACM, 57(10):78?85.Wentao Wu, Hongsong Li, Haixun Wang, and Kenny QiliZhu.
2012.
Probase: a probabilistic taxonomy for textunderstanding.
In SIGMOD.Limin Yao, Sebastian Riedel, and Andrew McCallum.2012.
Unsupervised relation discovery with sense dis-ambiguation.
In ACL.Alexander Yates and Oren Etzioni.
2009.
Unsupervisedmethods for determining object and relation synonymson the web.
Journal of Artificial Intelligence Research,34(1).2192
