A Meta-Level Grammar:Redefining Synchronous TAG for Translation and ParaphraseMark  DrasMicrosoft Research InstituteDepartment of Computer ScienceMacquarie University, Austral iamarkd@?cs, mq.
edu.
auAbst ractIn applications uch as translation andparaphrase, operations are carried out ongrammars at the meta level.
This pa-per shows how a meta-grammar, definingstructure at the meta level, is useful inthe case of such operations; in particu-lar, how it solves problems in the currentdefinition of Synchronous TAG (Shieber,1994) caused by ignoring such structurein mapping between grammars, for appli-cations uch as translation.
Moreover, es-sential properties of the formalism remainunchanged.1 In t roduct ionA grammar is, among other things, a device bywhich it is possible to express structure in aset of entities; a grammar formalism, the con-straints on how a grammar is allowed to ex-press this.
Once a grammar has been used toexpress structural relationships, in many ap-plications there are operations which act at a'meta level' on the structures expressed by thegrammar: for example, lifting rules on a depen-dency grammar to achieve pseudo-projectivity(Kahane et al 1998), and mapping betweensynchronised Tree Adjoining Grammars (TAGs)(Shieber and Schabes, 1990; Shieber 1994) asin machine translation or syntax-to-semanticstransfer.
At this meta level, however, the oper-ations do not themselves exploit any structure.This paper explores how, in the TAG case, us-ing a meta-level grammar to define meta-levelstructure resolves the flaws in the ability of Syn-chronous TAG (S-TAG) to be a representationfor applications such as machine translation orparaphrase.This paper is set out as follows.
It describesthe expressivity problems of S-TAG as notedin Shieber (1994), and shows how these occuralso in syntactic paraphrasing.
It then demon-strates, illustrated by the relative structuralcomplexity which occurs at the meta level insyntactic paraphrase, how a meta-level gram-mar resolves the representational problems; andit further shows that this has no effect on thegenerative capacity of S-TAG.2 S -TAG and Mach ine  Trans la t ionSynchronous TAG, the mapping between twoTree Adjoining Grammars, was first proposedby Shieber and Schabes (1990).
An applica-tion proposed concurrently with the definitionof S-TAG was that of machine translation, map-ping between English and French (Abeill~ et al1990); work continues in the area, for exampleusing S-TAG for English-Korean machine trans-lation in a practical system (Palmer et al 1998).In mapping between, say, English and French,there is a lexicalised TAG for each language (seeXTAG, 1995, for an overview of such a gram-mar).
Under the definition of TAG, a grammarcontains elementary trees, rather than flat rules,which combine together via the operations ofsubstitution and adjunction (composition oper-ations) to form composite structures--derivedtrees--which will ultimately provide structuralrepresentations for an input string if this stringis grammatical.
An overview of TAGs is givenin Joshi and Schabes (1996).The characteristics of TAGs make them bettersuited to describing natural language than Con-text Free Grammars (CFGs): CFGs are not ad-equate to describe the entire syntax of naturallanguage (Shieber, 1985), while TAGs are ableto provide structures for the constructions prob-lematic for CFGs, and without a much greatergenerative capacity.
Two particular chaxacteris-80(~1:  SNP0 $ VPV NP1 j.Idefeateda2: NPIGarradNPIGarrada4: DetIthe(~3:  NPDet$ NISumer~ans;35: VPAdv VP,IcunninglyFigure 1: Elementary TAG treestics of TAG that make it well suited to describ-ing natural anguage are the extended omain oflocality (EDL) and factoring recursion from thedomain of dependencies (FRD).
In TAG, for in-stance, information concerning dependencies isgiven in one tree (EDL): for example, in Fig-ure 1,1 the information that the verb defeatedhas subject and object arguments i containedin the tree al .
In a CFG, with rules of theform S --+ NP  VP  and VP  --+ V NP ,  it isnot possible to have information about both ar-guments in the same rule unless the VP nodeis lost.
TAG keeps dependencies together, orlocal, no matter how far apart the correspond-ing lexicM items are.
FRD means that recursiveinformation--for example, a sequence of adjec-tives modifying the object noun of defeated--arefactored out into separate trees, leaving depen-dencies together.A consequence of the TAG definition is that, un-like CFG, a TAG derived tree is not a record ofits own derivation.
In CFG, each tree given asa structural description to a string enables therules applied to be recovered.
In a TAG, this isnot possible, so each derived tree has an asso-ciated derivation tree.
If the trees in Figure 1were composed to give a structural descriptionfor Garrad cunningly defeated the Sumerians,the derived tree and its corresponding deriva-1The figures use standard TAG notation: $ for nodesrequiring substitution, ?
for foot nodes of auxiliary trees.SvPAdv VPcunninglyV NPdefeated Det NJ Ithe Sumeriansor2 (1) ;35 (2) or3 (2.2)ip~4(1)Figure 2: Derived and derivation trees, respec-tively, for Figure 1tion tree would be as in Figure 2.
2Weir (1988) terms the derived tree, and itscomponent elementary trees, OBJECT-LEVELTREES; the derivation tree is termed a META-LEVEL TREE,  since it describes the object-leveltrees.
The derivation trees are context free(Weir, 1988), that is, they can be expressed bya CFG; Weir showed that applying a TAG yieldfunction to a context free derivation tree (thatis, reading the labels off the tree, and substi-tuting or adjoining the corresponding object-level trees as appropriate) will uniquely specifya TAG tree.
Schabes and Shieber (1994) charac-terise this as a function 7) from derivation treesto derived trees.The idea behind S-TAG is to take two TAGsand link them in an appropriate way so thatwhen substitution or adjunction occurs in a treein one grammar, then a corresponding compo-sition operation occurs in a tree in the othergrammar.
Because of the way TAG's EDL cap-tures dependencies, it is not problematic to havetranslations more complex than word-for-wordmappings (Abeill~ et al 1990).
For example,from the Abeill~ et alpaper, handling argumentswap, as in (1), is straightforward.
These wouldbe represented by tree pairs as in Figure 3.2In derivation trees, addresses are given using theGorn addressing scheme, although these are omitted inthis paper where the composit ion operations are obvious.81o~6:sg\]Np$~~VP Np$~~~VpV NP$ \[~\] V PPmisses manque P NP$\[-~Idor7 :  I \] as:  \] IJohn Jean Mary  MarieFigure 3: S-TAG with argument swap(1) a. John misses Mary.b.
Marie manque g Jean.In these tree pairs, a diacritic (\[-/7) representsa link between the trees, such that if a substi-tution or adjunction occurs at one end of thelink, a corresponding operation must occur atthe other end, which is situated in the othertree of the same tree pair.
Thus if the tree forJohn in a7 is substituted at E\] in the left treeof a6, the tree for Jean must be substituted at\[-~ in the right tree.
The diacritic E\] allows asentential modifier for both trees (e.g.
unfortu-nately / malheureusement).The original definition of S-TAG (Shieber andSchabes, 1990), however, had a greater genera-tive capacity than that of its component TAGgrammars: even though each component gram-mar could only generate Tree Adjoining Lan-guages (TALs), an S-TAG pairing two TAGgrammars could generate non-TALs.
Hence, aredefinition was proposed (Shieber, 1994).
Un-der this new definition, the mapping betweengrammars occurs at the meta level: there is anisomorphism between derivation trees, preserv-ing structure at the meta level, which estab-lishes the translation.
For example, the deriva-?
tion trees for (1) using the elementary trees ofFigure 3 is given in Figure 4; there is a clearisomorphism, with a bijection between odes,and parent-child relationships preserved in themapping.In translation, it is not always possible to havea bijection between odes.
Take, for example,(2).a\[misses\] a\[man.que ~\]sa\[John\] a\[Mary\] a\[Jean\] a\[Marie\] /Figure 4: Derivation tree pair for Fig 3(2) a. Hopefully John misses Mary.b.
On esp~re que Marie manqueJean.In English, hopefully would be represented by asingle tree; in French, on esp~re que typicallyby two.
Shieber (1994) proposed the idea ofbounded subderivation to deal with such aber-rant cases--treating the two nodes in the deriva-tion tree representing on esp~re que as singular,and basing the isomorphism on this.
This ideaof bounded subderivation solves several difficul-ties with the isomorphism requirement, but notall.
An example by Shieber demonstrates thattranslation i volving clitics causes problems un-der this definition, as in (3).
The partial deriva-tion trees containing the clitic lui and its Englishparallel are as in Figure 5.
(3) a.
The doctor treats his teeth.b.
Le docteur lui soigne les dents.A potentially unbounded amount of material in-tervening in the branches of the righthand treemeans that an isomorphism between the treescannot be established under Shieber's pecifi-cation even with the modification of boundedsubderivations.
Shieber suggested that the iso-morphism requirement may be overly stringent;82o~\[treats\] a\[s~gne\]c~\[teeth I a\[lui\] a\[dents\]a\[his\]Figure 5: Clitic derivation treesbut intuitively, it seems reasonable that whatoccurs in one grammar should be mirrored inthe other in some way, and this reflected in thederivation history.Section 3 looks at representing syntactic para-phrase in S-TAG, where similar problems areencountered; in doing this, it can be seen moreclearly than in translation that the difficulty iscaused not by the isomorphism requirement i -self but by the fact that the isomorphism doesnot exploit any of the structure inherent in thederivation trees.3 S -TAG and ParaphraseSyntactic paraphrase can also be described withS-TAG (Dras, 1997; Dras, forthcoming).
Themanner of representing paraphrase in S-TAGis similar to the translation representation de-scribed in Section 2.
The reason for illustratingboth is that syntactic paraphrase, because of itsstructural complexity, is able to illuminate thenature of the problem with S-TAG.
In a specificparallel, a difficulty like that of the clitics oc-curs here also, for example in paraphrases suchas (4).
(4) a.
The jacket which collected the dustwas tweed.b.
The jacket collected the dust.
Itwas tweed.Tree pairs which could represent the elements inthe mapping between (4a) and (4b) are given inFigure 6.
It is clearly the case that the trees inthe tree pair c~9 are not elementary trees, in thesame way that on esp~re que is not representedby a single elementary tree: in both cases, suchsingle elementary trees would violate the Con-dition on Elementary Tree Minimality (Frank,1992).
The tree pair a0 is the one that capturesthe syntactic rearrangement in this paraphrase;such a tree pair will be termed the STRUCTURALMAPPING PAIR (SMP).
Taking as a basic set oftrees the XTAG standard grammar of English(XTAG, 1995), the derivation tree pair for (4)would be as in Figure 7.
3 Apart from c~9, eachtree in Figure 6 corresponds to an elementaryobject-level tree, as indicated by its label; theremaining labels, indicated in bold in the meta-level' derivation tree in Figure 7, correspond tothe elementary object-level trees forming (~9, inmuch the same way that on esp~re que is repre-sented by a subderivation comprising an on treesubstituted into an esp~re que tree.Note that the nodes corresponding to the lefttree of the SMP form two discontinuous groups,but these discontinuous groups are clearly re-lated.
Dras (forthcoming) describes the condi-tions under which these discontinuous groupingsare acceptable in paraphrase; these discontinu-ous groupings are treated as a single block withSLOTS connecting the groupings, whose fillersmust be of particular types.
Fundamentally,however, the structure is the same as for clitics:in one derivation tree the grouped elements arein one branch of the tree, and in the other theyare in two separate branches with the possibilityof an unbounded amount of intervening mate-rial, as described below in Section 4.4 Meta -Leve l  S t ructureExample (5) illustrates why the paraphrase in(4) has the same difficulty as the clitic examplein (3) when represented in S-TAG: because un-bounded intervening material can occur whenpromoting arbitrarily deeply embedded relativeclauses to sentence level, as indicated by Fig-ure 8, an isomorphism is not possible betweenderivation trees representing paraphrases suchas (4) and (5).
Again, the component rees ofthe SMP are in bold in Figure 8.
(5) a.
The jacket which collected the dustwhich covered the floor was tweed.b.
The jacket which collected the dust3Node labels, the object-level tree names, are givenaccording to the XTAG standard: see Appendix B ofXTAG (1995).
This is done so that the component treesof the aggregate (~9 and their types are obvious.
Thelexical item to which each is bound is given in squarebrackets, to make the trees, and the correspondence b -tween for example Figure 6 and Figure 7, clearer.83SNPNPo ~ ' ~ ' ~ SComp S'which NP VP,IcollectedVPA V vPis V AdjPI I e AdjItweedSSNPo ~ ~ V PV NP1 $\['~ IcollectedPunctI SNP VPIt V VPis V AdjPI I AdjItweedNP NP  >a lo :  Det$ N Det$ NI Ijacket jacketDetal l :  t~eNPDet  >I C~12: Det$ Nthe \]dustNPA Det$ NtdustFigure 6: S-TAG for (4)ocnxOAxl \[tweed\]~DXD\[the\] /3N0nx0Vnxl\[collected\]~COMPs\[which\] c~NXdxN\[dust\]ic~DXD\[the\]3Vvx\[was\] ~NXdxN\[jacket\] ~Vvx\[was\] ~sPUs\[.\]* it i~DXD\[ the \ ]  cmx0Vnxl^\[collected\]sc~NXN\[it\] aNXdx,N\[dust\]tJc~DXD\[the\]Figure 7: Derivation tree pair for example (4)was tweed.
The dust covered thefloor.
4The paraphrase in (4) and in Figures 6 and 7,and other paraphrase examples, strongly sug-gest that these more complex mappings are notan aberration that can be dealt with by patch-ing measures uch as bounded subderivation.
Itis clear that the meta level is fundamentally notjust for establishing a one-to-one onto mappingbetween nodes; rather, it is also about defin-ing structures representing, for example, the4The referring expression that is the subject of thissecond sentence has changed from it in (4) to the dustso the antecedent is clear.
Ensuring it is appropriatelycoreferent, by using two occurrences of the same diacriticin the same tree, necessitates a change in the propertiesof the formalism unrelated to the one discussed in thispaper; see Dras (forthcoming).
Assume, for the purposeof this example, that the referring expression is fixed andgiven, as is the case with it, rather than determined bycoindexed diacritics.SMP at this meta level: in an isomorphism be-tween trees in Figure 8, it is necessary to re-gard the SMP components of each tree as a uni-tary substructure and map them to each other.The discontinuous groupings should form thesesubstructures regardless of intervening material,and this is suggestive of TAG's EDL.In the TAG definition, the derivation trees arecontext free (Weir, 1988), and can be expressedby a CFG.
The isomorphism in the S-TAG def-inition of Shieber (1994) reflects this, by effec-tively adopting the single-level domain of local-ity (extended slightly in cases of bounded sub-derivation, but still effectively a single level), inthe way that context free trees are fundamen-tally made from single level components andgrown by concatenation of these single levels.This is what causes the isomorphism require-ment to fail, the inability to express substruc-tures at the meta level in order to map betweenthem, rather than just mapping between (effec-84............... y Nx?~\]~DXDI, h0\] ~ l \ [ :o~I~dJ/~COMPs\[which\] aNXdxN\[dust\]aDXD\[the\] /~N0nx0Vnxl \[covered\]aDXD\[t he\]flVvx\[~s\] .
.
_ %~xdx~lNf~c~ ~Vvx\[is\] /~sPUs\[.\]~DXD\[the\] ~N0nx0Vnx l\[coliect ed\] anxOVnx l  \[covered\]~COMPs\[which\] aNXdxN\[dust\] aNXN\[it\] oNXdxN\[floor\]~DXD\[the\] aDXD\[the\]Figure 8: Derivation tree for example (5)tively) single nodes.To solve the problem with isomorphism, a meta-level grammar can be defined to specify thenecessary substructures prior to mapping, withminimality conditions on what can be consid-ered acceptable discontinuity.
Specifically, inthis case, a TAG meta-level grammar can bedefined, rather than the implicit CFG, becausethis captures the EDL well.
The TAG yieldfunction of Weir (1988) can then be applied tothese derivation trees to get derived trees.
This,of course, raises questions about effects on gen-erative capacity and other properties; these aredealt with in Section 5.A procedure for automatically constructing aTAG meta-grammar is as follows in Construc-tion 1.
The basic idea is that where the nodebijection is still appropriate, the grammar e-tains its context free nature (by using single-level TAG trees composed by substitution, mim-icking CFG tree concatenation), but where EDLis required, multi-level TAG initial trees aredefined, with TAG auxiliary trees for describ-ing the intervening material.
These meta-leveltrees are then mapped appropriately; this cor-responds to a bijection of nodes at the meta-meta level.
For (5), the meta-level grammar forthe left projection then looks as in Figure 9,and for the right projection as in Figure 10.?
Figure 11 contains the meta-meta-level trees,the tree pair that is the derivation of the metalevel, where the mapping is a bijection betweennodes.
Adding unbounded material would thenjust be reflected in the meta-meta-level as a listof/3 nodes depending from the j315/j31s nodes inthese trees.The question may be asked, Why isn't it thecase that the same effect will occur at the meta-meta level that required the meta-grammar inthe first place, leading perhaps to an infinite(and useless) sequence?
The intuition is that itis the meta-level, rather than anywhere 'higher',which is fundamentally the place to specifystructure: the object level specifies the trees,and the meta level specifies the grouping orstructure of these trees.
Then the mappingtakes place on these structures, rather than theobject-level trees; hence the need for a grammarat the meta-level but not beyond.Const ruct ion  1 To build a TAG metagram-mar:1.
An initial tree in the metagrammar isformed for each part of the derivation treecorresponding to the substructure repre-senting an SMP, including the slots so thata contiguous tree is formed.
Any node thatlinks these parts of the derivation tree toother subtrees in the derivation tree is alsoincluded, and becomes a substitution odein the metagrammar tree.2.
Auxiliary trees are formed corresponding tothe parts of the derivation trees that are slotfillers along with the nodes in the discon-tinuous regions adjacent to the slots; onecontiguous auxiliary tree is formed for eachbounded sequence of slot fillers within eachsubstructure.
These trees also satisfy cer-tain minimality conditions.3.
The remaining metagrammar trees thencome from splitting the derivation treeinto single-level trees, with the nodes on85Ot13: anx0Axl~NXdxN ~VvxaDXD ~N0nx0Vnxl~COMPs aNXdxN$a14: c~NXdxNIaDXDJ315: aNXdxNaDXD ~N0nx0Vnxl~COMPs aNXdxN,Figure 9: Meta-grammar for (5a)these single-level trees in the metagrammarmarked for substitution if the correspondingnodes in the derivation tree have subtrees.The minimality conditions in Step 2 of Con-struction 1 are in keeping with the idea of min-imality elsewhere in TAG (for example, Frank,1992).
The key condition is that meta-levelauxiliary trees are rooted in c~-labelled nodes,and have only ~-labelled nodes along the spine.The intuition here is that slots (the nodes whichmeta-level auxiliary trees adjoin into) must bec~-labelled: fl-labelled trees would not needslots, as the substructure could instead be con-tinuous and the j3-1abelled trees would just ad-join in.
So the meta-level auxiliary trees arerooted in c~-labelled trees; but they have only ~-labelled trees in the spine, as they aim to repre-sent the minimal amount of recursive material.Notwithstanding these conditions, the construc-tion is quite straightforward.5 Generat ive  Capac i tyWeir (1988) showed that there is an infinite pro-gression of TAG-related formalisms, in genera-tive capacity between CFGs and indexed gram-mars.
A formalism ~-i in the progression is de-fined by applying the TAG yield function to aderivation tree defined by a grammar formalism~16; cmx0Axl~NXdxN ~Vvx /~sPUsI Ic~DXD aNXdxNc~NXdxN c~NXdxN$cqT: aNXdxNIaDXDaNXdxNc~DXD ~N0nx0Vnxl~COMPs c~NXdxN,Figure 10: Meta-grammar for (5b)0t14 ~15 a17 ~18/Figure 11: Derivation tree pair for Fig 35~i_1; the generative capacity of ~i is a supersetof ~'i-1- Thus using a TAG meta-grammar, asdescribed in Section 4, would suggest hat thegenerative capacity of the object-level formal-ism would necessarily have been increased overthat of TAG.However, there is a regular form for TAGs(Rogers, 1994), such that the trees of TAGs inthis regular form are local sets; that is, theyare context free.
The meta-level TAG built byConstruction 1 with the appropriate conditionson slots is in this regular form.
A proof of thisis in Dras (forthcoming); a sketch is as follows.If adjunction may not occur along the spine ofanother auxiliary tree, the grammar is in regu-lar form.
This kind of adjunction does not oc-cur under Construction 1 because all meta-levelauxiliary trees are rooted in c~-labelled trees(object-level auxiliary trees), while their spinesconsist only of p-labelled trees (object-level ini-tial trees).Since the meta-level grammar is context free,despite being expressed using a TAG grammar,this means that the object-level grammar is still8{}a TAG.6 Conc lus ionIn principle, a meta-grammar is desirable, as itspecifies ubstructures at a meta level, which isnecessary when operations are carried out thatare applied at this meta level.
In a practical ap-plication, it solves problems in one such formal-ism, S-TAG, when used for paraphrase or trans-lation, as outlined by Shieber (1994).
Moreover,the formalism remains fundamentally the same,in specifying mappings between two grammarsof restricted generative capacity; and in caseswhere this is important, it is possible to avoidchanging the generative capacity of the S-TAGformalism in applying this meta-grammar.Currently this revised version of the S-TAG for-malism is used as the low-level representation inthe Reluctant Paraphrasing framework of Dras(1998; forthcoming).
It is likely to also be use-ful in representations for machine translationbetween languages that are structurally moredissimilar than English and French, and hencemore in need of structural definition of object-level constructs; exploring this is future work.ReferencesAbeill@, Anne, Yves Schabes and Aravind Joshi.1990.
Using Lexicalized TAGs for Machine Trans-lation.
Proceedings of the 13th International Con-ference on Computational Linguistics, 1-6.Dras, Mark.
1997.
Representing Paraphrases UsingS-TAGs.
Proceedings of the 35th Meeting of the As-sociation for Computational Linguistics, 516-518.Dras, Mark.
1998.
Search in Constraint-BasedParaphrasing.
Natural Language Processing and In-dustrial Applications (NLPq-IA98), 213-219.Dras, Mark.
forthcoming.
Tree Adjoining Grammarand the Reluctant Paraphrasing of Text.
PhD thesis,Macquarie University, Australia.Joshi, Aravind and Yves Schabes.
1996.
Tree-Adjoining Grammars.
In Grzegorz Rozenberg and?
Arto Salomaa (eds.
), Handbook of Formal Lan-guages, Vol 3, 69-123.
Springer-Verlag.
New York,NY.Kahane, Sylvain, Alexis Nasr and Owen Ram-bow.
1998.
Pseudo-Projectivity: A Polynomi-ally Parsable Non-Projective Dependency Gram-mar.
Proceedings of the 36th Annual Meeting of theAssociation for Computational Linguistics, 646-652.Palmer, Martha, Owen Rainbow and Alexis Nasr.1998.
Rapid Prototyping of Domain-Specific Ma-chine Translation Systems.
AMTA-98, Langhorne,PA.Rogers, James.
1994.
Capturing CFLs with TreeAdjoining Grammars.
Proceedings of the 32nd Meet-ing of the Association for Computational Linguis-tics, 155-162.Schabes, Yves and Stuart Shieber.
1994.
An Al-ternative Conception of Tree-Adjoining Derivation.Computational Linguistics, 20(1): 91-124.Shieber, Stuart.
1985.
Evidence against the context-freeness of natural language.
Linguistics and Philos-ophy, 8, 333-343.Shieber, Stuart and Yves Schabes.
1990.
Syn-chronous Tree-Adjoining Grammars.
Proceedings ofthe 13th International Conference on ComputationalLinguistics, 253-258.Shieber, Stuart.
1994.
Restricting the Weak-Generative Capacity of Synchronous Tree-AdjoiningGrammars.
Computational Intelligence, 10(4), 371-386.Weir, David.
1988.
Characterizing Mildly Context-Sensitive Grammar Formalisms.
PhD thesis, Uni-versity of Pennsylvania.XTAG.
1995.
A Lexicalized Tree Adjoining Gram-mar for English.
Technical Report IRCS95-03, Uni-versity of Pennsylvania.87
