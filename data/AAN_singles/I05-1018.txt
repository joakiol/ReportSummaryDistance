Adapting a Probabilistic Disambiguation Modelof an HPSG Parser to a New DomainTadayoshi Hara1, Yusuke Miyao1, and Jun?ichi Tsujii1,2,31 Department of Computer Science, University of Tokyo,Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033, Japan2 CREST, JST (Japan Science and Technology Agency),Honcho, 4-1-8, Kawaguchi-shi, Saitama 332-0012, Japan3 School of Informatics, University of Manchester,POBox 88, Sackville St, Manchester, M60 1QD, UKAbstract.
This paper describes a method of adapting a domain-inde-pendent HPSG parser to a biomedical domain.
Without modifying thegrammar and the probabilistic model of the original HPSG parser, wedevelop a log-linear model with additional features on a treebank of thebiomedical domain.
Since the treebank of the target domain is limited, weneed to exploit an original disambiguation model that was trained on alarger treebank.
Our model incorporates the original model as a referenceprobabilistic distribution.
The experimental results for our model trainedwith a small amount of a treebank demonstrated an improvement inparsing accuracy.1 IntroductionNatural language processing (NLP) is being demanded in various fields, suchas biomedical research, patent application, and WWW, because an unmanage-able amount of information is being published in unstructured data, i.e., naturallanguage texts.
To exploit latent information in these, the assistance of NLPtechnologies is highly required.
However, an obstacle is the lack of portabilityof NLP tools.
In general, NLP tools specialized to each domain were developedfrom scratch, or adapted by considerable human effort.
This is because linguisticresources for each domain, such as a treebank, have not been sufficiently devel-oped yet.
Since dealing with various kinds of domains is an almost intractablejob, sufficient resources can not be expected.The method presented in this paper is the development of disambiguationmodels of an HPSG parser by combining a disambiguation model of an originalparser with a new model adapting to a new domain.
Although the training of adisambiguation model of a parser requires a sufficient amount of a treebank, itsconstruction requires a considerable human effort.
Hence, we exploit the originaldisambiguation model that was trained with a larger, but domain-independenttreebank.
Since the original disambiguation model contains rich information ofgeneral grammatical constraints, we try to use its information in developing adisambiguation model for a new domain.R.
Dale et al (Eds.
): IJCNLP 2005, LNAI 3651, pp.
199?210, 2005.c?
Springer-Verlag Berlin Heidelberg 2005200 T. Hara, Y. Miyao, and J. TsujiiOur disambiguation model is a log-linear model into which the original disam-biguation model is incorporated as a reference distribution.
However, we cannotsimply estimate this model, because of the problem that has been discussed instudies of the probabilistic modeling of unification-based grammars [1,2].
Thatis, the exponential explosion of parse candidates assigned by the grammar makesthe estimation intractable.
The previous studies solved the problem by applyinga dynamic programming algorithm to a packed representation of parse trees.
Inthis paper, we borrow their idea, and define reference distribution on a packedstructure.
With this method, the log-linear model with a reference distributioncan be estimated by using dynamic programming.In the experiments, we used an HPSG parser originally trained with thePenn Treebank [3], and evaluated a disambiguation model trained with the GE-NIA treebank [4], which consisted of abstracts of biomedical papers.
First, wemeasured the accuracy of parsing and the time required for parameter estima-tion.
For comparison, we also examined other possible models other than ourdisambiguation model.
Next, we varied the size of a training corpus in order toevaluate the size sufficient for domain adaptation.
Then, we varied feature setsused for training and examined the parsing accuracy.
Finally, we compared theerrors in the parsing results of our model with those of the original parser.In Section 2, we introduce the disambiguation model of an HPSG parser.
InSection 3, we describe a method of adopting reference distribution for adaptinga probabilistic disambiguation model to a new domain.
In Section 4, we examineour method through experiments on the GENIA treebank.2 An HPSG ParserThe HPSG parser used in this study is Enju [5].
The grammar of Enju was ex-tracted from the Penn Treebank [3], which consisted of sentences collected fromThe Wall Street Journal [6].
The disambiguation model of Enju was trainedon the same treebank.
This means that the parser has been adapted to TheWall Street Journal, and would be difficult to apply to other domains suchas biomedical papers that include different distribution of words andtheir constraints.In this study, we attempted the adaptation of a probabilistic disambiguationmodel by fixing the grammar and the disambiguation model of the originalparser.
The disambiguation model of Enju is based on a feature forest model[2], which is a maximum entropy model [7] on packed forest structure.
Theprobability, pE(t|s), of producing the parse result t for a given sentence s isdefined aspE(t|s) =1Zsexp(?i?ifi(t, s))Zs =?t?
?T (s)exp(?i?ifi(t?, s)),Adapting a Probabilistic Disambiguation Model of an HPSG Parser 201Fig.
1.
Chart for parsing ?he saw a girl with a telescope?where T (s) is the set of parse candidates assigned to s. The feature functionfi(t, s) represents the characteristics of t and s, while the corresponding modelparameter ?i is its weight.
Model parameters were estimated so as to maximizethe log-likelihood of the training data.Estimation of the above model requires a set of training pairs ?ts, T (s)?, wherets is the correct parse for the sentence s. While ts is provided by a treebank, T (s)is computed by parsing each s in the treebank.
However, the simple enumerationof T (s) is impractical because the size of T (s) is exponential to the length of s.To avoid an exponential explosion, Enju represented T (s) in a packed form ofHPSG parse trees [5].
In chart parsing, partial parse candidates are stored in achart, in which phrasal signs are identified and packed into an equivalence classif they are determined to be equivalent and dominate the same word sequence.A set of parse trees is then represented as a set of relations among equivalenceclasses.
Figure 1 shows a chart for parsing ?he saw a girl with a telescope?, wherethe modifiee (?saw?
or ?girl?)
of ?with?
is ambiguous.
Each feature structureexpresses an equivalence class, and the arrows represent immediate-dominancerelations.
The phrase, ?saw a girl with a telescope?, has two ambiguous subtrees(A in the figure).
Since the signs of the top-most nodes are equivalent, they arepacked into the same equivalence class.
The ambiguity is represented as twopairs of arrows that come out of the node.A packed chart can be interpreted as an instance of a feature forest [2].
Afeature forest represents a set of exponentially-many trees in an ?and/or?
graphof a tractable size.
A feature forest is formally defined as a tuple ?C, D, R, ?, ?
?,where C is a set of conjunctive nodes, D is a set of disjunctive nodes, R ?
Cis a set of root nodes1, ?
: D ?
2C is a conjunctive daughter function, and?
: C ?
2D is a disjunctive daughter function.1 For the ease of explanation, the definition of root node is slightly different from theoriginal.202 T. Hara, Y. Miyao, and J. TsujiiHEAD  prepMOD  NPSUBCAT <>HEAD  nounSUBCAT <>HEAD  verbSUBCAT<NP,NP>HEAD  nounSUBCAT <>HEAD  prepMOD  VPSUBCAT <NP>HEAD  prepMOD  VPSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  verbSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  verbSUBCAT <NP>HEAD  prepMOD  VPSUBCAT <>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT<NP,NP>HEAD  nounSUBCAT <>HEAD  nounSUBCAT <>HEAD  verbSUBCAT<NP,NP>hesawc1c3c2c4c5 c6c8c7Fig.
2.
Packed representation of HPSG parse trees in Figure 1Figure 2 shows (a part of) the HPSG parse trees in Figure 1 representedas a feature forest.
Square boxes are conjunctive nodes, dotted lines express adisjunctive daughter function, and solid arrows represent a conjunctive daughterfunction.Based on the definition, parse tree t of sentence s can be represented as theset of conjunctive nodes in the feature forest.
The probability pE(t|s) is thenredefined aspE(t|s) =1Zsexp(?c?t?i?ifi(c))Zs =?t?
?T (s)exp(?c?t?
?i?ifi(c)),where fi(c) are alternative feature functions assigned to conjunctive nodes c ?
C.By using this redefined probability, a dynamic programming algorithm can beapplied to estimate p(t|T (s)) without unpacking the packed chart [2].Feature functions in feature forest models are designed to capture the char-acteristics of a conjunctive node.
In HPSG parsing, it corresponds to a tuple of amother and its daughters.
Enju uses features that are combinations of the atomicfeatures listed in Table 1.
The following combinations are used for representingthe characteristics of the binary/unary rule applications.fbinary =?rule,dist,comma,spanh, symh,wordh, posh, leh,spann, symn, wordn, posn, len?funary = ?rule,sym,word,pos,le?where suffixh andnmeans a headdaughter anda non-headdaughter, respectively.Adapting a Probabilistic Disambiguation Model of an HPSG Parser 203Table 1.
Templates of atomic featuresrule the name of the applied schemadist the distance between the head words of the daughterscomma whether a comma exists between daughters and/or inside of daughter phrasesspan the number of words dominated by the phrasesym the symbol of the phrasal category (e.g.
NP, VP)word the surface form of the head wordpos the part-of-speech of the head wordle the lexical entry assigned to the head wordHEAD  verbSUBCAT<NP,NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  verbSUBCAT <NP>HEAD  prepMOD  VPSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>hetransitiveVBD,saw,S,root =fprep-mod-vpwith,IN,PP,3,,transitiveVBD,saw,VP,3,mod,3,0,-headbinary =fc1c2c3 c4Fig.
3.
Example featuresIn addition, the following feature is used for expressing the condition of theroot node of the parse tree.froot = ?sym,word,pos,le?Figure 3 shows example features: froot is the feature for the root node, inwhich the phrase symbol is S and the surface form, part-of-speech, and lexicalentry of the lexical head are ?saw?, VBD, and a transitive verb, respectively.The fbinary is the feature for the binary rule application to ?saw a girl?
and?with a telescope?, in which the applied schema is the Head-Modifier Schema, thehead daughter is VP headed by ?saw?, and the non-head daughter is PP headedby ?with?, whose part-of-speech is IN and the lexical entry is a VP-modifyingpreposition.3 Re-training of Disambiguation ModelsThe method of domain adaptation is to develop a new maximum entropy modelwith incorporating an original model as a reference probabilistic distribution.The idea of adaptation using a reference distribution has already been presented204 T. Hara, Y. Miyao, and J. Tsujiiin several studies [8,9].
When we have a reference probabilistic model p0(t|s) andare making a new model pM (t|s), the probability is defined aspM (t|s) =1Z ?sp0(t|s) exp??
?j?jgj(t?, s)?
?where Z ?s =?t?
?T (s)p0(t?|s) exp??
?j?jgj(t?, s)??
.Model parameters, ?j, are estimated so as to maximize the likelihood of thetraining data as in ordinary maximum entropy models.
The maximization of thelikelihood with the above model is equivalent to finding the model pM that isclosest to the reference probability p0 in terms of the Kullback-Leibler distance.However, we cannot simply apply the above method to our task because theparameter estimation requires the computation of the above probability for allparse candidates T (s).
As discussed in Section 2, the size of T (s) is exponentiallyrelated to the length of s. This imposes a new problem, that is, we need toenumerate p0(t|s) for all candidate parses.
Obviously, this is intractable.Since Enju represented a probabilistic disambiguation model in a packedforest structure, we exploit that structure to represent our probabilistic model.That is, we redefine pM with feature functions gj on conjunctive nodes aspM (t|s) =1Z ?sp0(t|s) exp???c?t?j?jgj(c)?
?where Z ?s =?t?
?T (s)p0(t|s) exp???c?t??j?jgj(c)??
.HEAD  verbSUBCAT<NP,NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  verbSUBCAT <NP>HEAD  prepMOD  VPSUBCAT <>HEAD  verbSUBCAT <NP>HEAD  nounSUBCAT <>hec1c2c3 c4t1 selectedt2 selected?
j cgjj )( 1?
?i cfii )( 1??
j cgjj )( 4??
j cgjj )( 3??
j cgjj )( 2?
?i cfii )( 2?
?i cfii )( 3?
?i cfii )( 4?Fig.
4.
Example of importing a reference distribution into each conjunctive nodeAdapting a Probabilistic Disambiguation Model of an HPSG Parser 205As described in Section 2, the original model, pE(t|s), is expressed in a packedstructure aspE(t|s) =1Zsexp(?c?t?i?ifi(c))where Zs =?t?
?T (s)exp(?c?t?i?ifi(c)).Then, p0(t|s) is substituted by pE(t|s), and pM (t|s) is formulated aspM (t|s) =1Z ?s{1Zsexp(?c?t?i?ifi(c))}exp???c?t?j?jgj(c)?
?=1Z ?s ?
Zsexp??
?c?t?i?ifi(c) +?c?t?j?jgj(c)?
?=1Z ??sexp????c?t??
?i?ifi(c) +?j?jgj(c)????
?where Z ?
?s = Zs ?
Z ?s =?t?T (s)exp????c?t??
?i?ifi(c) +?j?jgj(c)????
?.With this form of pM (t|s), a dynamic programing algorithm can be applied.For example, we show how to obtain probabilities of parse trees in the case ofFigure 4.
For ease, we assume that there are only two disjunctive daughters(dotted lines) that are of the top conjunctive node.
The left disjunctive nodeintroduces a parse tree t1 that consists of conjunctive nodes {c1, c2, c3, .
.
.
},and the right one, t2 that consists of {c1, c2, c4, .
.
.
}.
To each conjunctive nodeck, a weight from the reference distribution?i ?ifi(ck) is assigned.
ProbabilitypM (t1|s) and pM (t2|s) are then given aspM (t1|s)=1Z ??sexp?????
?i?ifi(c1) +?j?jgj(c1)??+??
?i?ifi(c2) +?j?jgj(c2)??+??
?i?ifi(c3) +?j?jgj(c3)??
+ ?
?
???
?pM (t2|s)=1Z ??sexp?????
?i?ifi(c1) +?j?jgj(c1)??+??
?i?ifi(c2) +?j?jgj(c2)??+??
?i?ifi(c4) +?j?jgj(c4)??
+ ?
?
???
?.206 T. Hara, Y. Miyao, and J. Tsujii4 ExperimentsWe implemented the method described in Section 3.
The original parser, Enju,was developed on Section 02-21 of the Penn Treebank (39,832 sentences)[5].
Forthe training of our model, we used the GENIA treebank [4], which consisted of500 abstracts (4,446 sentences) extracted from MEDLINE.
We divided the GENIAtreebank into three sets of 400, 50, and 50 abstracts (3,524, 455, and 467 sentences),and these setswere used respectively as training, development, and final evaluationdata.
The method of Gaussian MAP estimation [10] was used for smoothing.The meta parameter ?
of the Gaussian distribution was determined so asto maximize the accuracy on the development set.
In the following experiments,we measured the accuracy of predicate-argument dependencies on the evaluationset.
The measure is labeled precision/recall (LP/LR), which is the same measureas previous work [11,5] that evaluated the accuracy of lexicalized grammars onthe Penn Treebank.First, we measured the accuracy of parsing and the time required for pa-rameter estimation.
Table 2 compares the results of the following estimationmethods.Table 2.
Accuracy and time cost for various estimation methodsF-score Training Parsing time (sec.
)GENIA Corpus Penn Treebank time (sec.)
GENIA Corpus Penn TreebankOur method 86.87 86.81 2,278 611 3,165Combined 86.32 86.09 29,421 424 2,757GENIA only 85.72 42.49 1,694 332 8,183Original model 85.10 87.16 137,038 515 2,5548585.285.485.685.88686.286.486.686.8870 500 1000 1500 2000 2500 3000 3500training sentencesF-scoreRULE WORDh + WORDn RULE + WORDh + WORDnFig.
5.
Corpus size vs. AccuracyAdapting a Probabilistic Disambiguation Model of an HPSG Parser 207Table 3.
Accuracy with atomic feature templatesFeatures LP LR F-score diff.RULE 85.42 84.87 85.15 +0.05DIST 85.29 84.77 85.03 ?0.07COMMA 85.45 84.86 85.15 +0.05SPANh+SPANn 85.58 85.02 85.30 +0.20SYMBOLh+SYMBOLn 85.01 84.56 84.78 ?0.32WORDh+WORDn 86.59 86.07 86.33 +1.23WORDh 85.48 84.98 85.23 +0.13WORDn 85.44 84.64 85.04 ?0.06POSh+POSn 85.23 84.77 85.00 ?0.10LEh+LEn 85.42 85.06 85.24 +0.14None 85.39 84.82 85.10Table 4.
Accuracy with the combination of RULE and other featuresFeatures LP LR F-score diff.RULE+DIST 85.41 84.85 85.13 +0.03RULE+COMMA 85.92 85.15 85.53 +0.43RULE+SPANh+SPANn 85.33 84.82 85.07 ?0.03RULE+SYMBOLh+SYMBOLn 85.43 85.00 85.21 +0.11RULE+WORDh+WORDn 87.12 86.62 86.87 +1.77RULE + WORDh 85.74 84.94 85.34 +0.24RULE + WORDn 85.10 84.60 84.85 ?0.25RULE+POSh+POSn 85.51 85.08 85.29 +0.19RULE+LEh+LEn 85.48 85.08 85.28 +0.18None 85.39 84.82 85.10Our method: training with our methodCombined: training Enju model with the training corpus replaced by the com-bination of the GENIA corpus and the Penn TreebankGENIA only: training Enju model with the training corpus replaced by theGENIA corpus onlyOriginal Model: training an original Enju modelThe table shows the accuracy and the parsing time for the GENIA corpus andthe Penn Treebank Section 23, and also shows the time required for the trainingof the model.
The additional feature used in our method was RULE+WORDh+WORDn, which will be explained later.
In the ?Combined?
method, we couldnot train the model with the original training parameters (n = 20,  = 0.98 in[5]) because the estimator ran out of memory.
Hence, we reduced the parametersto n = 10,  = 0.95.For the GENIA corpus, our model gave the higher accuracy than the origi-nal model and the other estimation methods, while for the Penn Treebank, ourmodel gave a little lower accuracy than the original model.
This result indicatesthat our model was more adapted to the specific domain.
The ?GENIA only?208 T. Hara, Y. Miyao, and J. TsujiiTable 5.
Accuracy with the combination of WORD and another featureFeatures LP LR F-score diff.WORDh+WORDn+RULE 87.12 86.62 86.87 +1.77WORDh+WORDn+DIST 86.41 85.86 86.14 +1.04WORDh+WORDn+COMMA 86.91 86.38 86.64 +1.54WORDh+WORDn+SPANh+SPANn 85.77 85.22 85.49 +0.39WORDh+WORDn+SYMBOLh+SYMBOLn 86.58 85.70 86.14 +1.04WORDh+WORDn+POSh+POSn 86.53 85.99 86.26 +1.16WORDh+WORDn+LEh+LEn 86.16 85.68 85.92 +0.82None 85.39 84.82 85.10Table 6.
Errors in our model and EnjuTotal errors Common errors Errors not inthe other modelOur model 1179 1050 129Original model 1338 1050 288method gave significantly lower accuracy.
We expect that the method clearlylacked the amount of the training corpus for obtaining generic grammaticalinformation.The ?Combined?
method achieved the accuracy close to our method.
How-ever, it is notable that our method took much less time for the training of themodel since ours did not need to handle the Penn Treebank.
Instead, our methodexploited the original model of Enju, which was trained on the Penn Treebank,and this resulted in much less cost of training.Next, we changed the size of the GENIA treebank for training: 40, 80, 120,160, 200, 240, 280, 320, 360, and 400 abstracts.
Figure 5 shows the accuracy whenthe size of the training data was changed.
We can say that, for those feature setsgiving remarkable accuracy in the experiments, the accuracy edged upwards withthe size of the training corpus, and the trend does not seem to converge even ifmore than 400 abstracts exist.
If we choose more complex feature sets for higheraccuracy, data sparseness will occur and an even larger corpus will be needed.These findings indicate that we can further improve the accuracy by using alarger treebank and a proper feature set.Table 3 shows the accuracy of models with only atomic feature templates.The bottom of the table gives the accuracy attained by the original parser.When we focus on the WORD features, we can see the combination of WORDhand WORDn improved the accuracy significantly, although each of the featuresby itself did not improve so much.
DIST, SYMBOL, and POS feature templateslowered the accuracy.
The other feature templates improved the accuracy, thoughnot as well as the WORD templates.Table 4 shows that the RULE feature combined with one or more otherfeatures often gave a little higher accuracy than the RULE feature gave byitself, though not as well as the WORD features.Adapting a Probabilistic Disambiguation Model of an HPSG Parser 209Table 5 shows that the WORD features combined with one or more otherfeatures gave remarkable improvement to the accuracy as a whole.
RULE andCOMMA features gave even higher accuracy than with only the WORD features.Our results revealed that the WORD features were crucial for the adaptation tothe biomedical domain.
We expect that this was because the biomedical domainhad a different distribution of words, while more generic grammatical constraintswere not significantly different from other domains.Table 6 shows the comparison of the number of errors of our model with thoseof the original model in parsing the GENIA corpus.
Though our model gave lesserrors than the original model, our model introduced a certain amount of newerrors.
In future work, we need to investigate manually those errors to find moresuitable feature templates without losing the information in the original model.5 ConclusionsWe have presented a method of adapting a domain-independent HPSG parserto a biomedical domain.
Since the treebank of the new domain was limited,we exploited an original disambiguation model.
The new model was trainedon a biomedical treebank, and was combined with the original model by usingit as a reference distribution of a log-linear model.
The experimental resultsdemonstrated our new model was adapted to the target domain, and was superiorto other adaptation methods in accuracy and the cost of training time.
With ourmodel, the parsing accuracy for the target domain improved by 1.77 point withthe treebank of 3,524 sentences.
Since the accuracy did not seem to saturate, wewill further improve the accuracy by increasing the size of the domain-dependenttreebank.
In addition, the experimental results showed that the WORD featuresignificantly contributed to the accuracy improvement.We examined only a few feature templates, and we must search for furthermore feature templates.
Not only the new combinations of the atomic featuresbut also new types of features, which may be domain-dependent such as namedentities, will be possible.References1.
Geman, S., Johnson, M.: Dynamic programming for parsing and estimation ofstochastic unification-based grammars.
In: Proc.
40th ACL.
(2002)2.
Miyao, Y., Tsujii, J.: Maximum entropy estimation for feature forests.
In: Proc.HLT 2002.
(2002)3.
Marcus, M., Kim, G., Marcinkiewicz, M.A., MacIntyre, R., Bies, A., Ferguson, M.,Katz, K., Schasberger, B.: The Penn Treebank: Annotating predicate argumentstructure.
In: ARPA Human Language Technology Workshop.
(1994)4.
Kim, J.D., Ohta, T., Teteisi, Y., Tsujii, J.: Genia corpus - a semantically annotatedcorpus for bio-textmining.
Bioinformatics 19 (2003) i180?i1825.
Miyao, Y., Tsujii, J.: Probabilistic disambiguation models for wide-coverage HPSGparsing.
In: Proc.
ACL 2005.
(2005)210 T. Hara, Y. Miyao, and J. Tsujii6.
Miyao, Y., Ninomiya, T., Tsujii, J.: Corpus-oriented grammar development foracquiring a Head-driven Phrase Structure Grammar from the Penn Treebank.
In:Proc.
IJCNLP-04.
(2004)7.
Berger, A.L., Pietra, S.A.D., Pietra, V.J.D.
: A maximum entropy approach tonatural language processing.
Computational Linguistics 22 (1996) 39?718.
Jelinek, F.: Statistical Methods for Speech Recognition.
The MIT Press (1998)9.
Johnson, M., Riezler, S.: Exploiting auxiliary distributions in stochastic unification-based grammars.
In: Proc.
1st NAACL.
(2000)10.
Chen, S., Rosenfeld, R.: A gaussian prior for smoothing maximum entropy models.Technical Report CMUCS-99-108, Carnegie Mellon University (1999)11.
Clark, S., Curran, J.R.: Parsing the WSJ using CCG and log-linear models.
In:Proc.
42nd ACL.
(2004)
