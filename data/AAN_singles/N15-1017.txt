Human Language Technologies: The 2015 Annual Conference of the North American Chapter of the ACL, pages 164?174,Denver, Colorado, May 31 ?
June 5, 2015.c?2015 Association for Computational LinguisticsDiscriminative Unsupervised Alignment of Natural Language Instructionswith Corresponding Video SegmentsIftekhar Naim1, Young Chol Song1, Qiguang Liu1, Liang Huang2,Henry Kautz1, Jiebo Luo1and Daniel Gildea11Department of Computer Science, University of Rochester, Rochester, NY 146272Queens College & Graduate Center, City University of New York, Flushing, NY 11367AbstractWe address the problem of automaticallyaligning natural language sentences with cor-responding video segments without any directsupervision.
Most existing algorithms for in-tegrating language with videos rely on hand-aligned parallel data, where each natural lan-guage sentence is manually aligned with itscorresponding image or video segment.
Re-cently, fully unsupervised alignment of textwith video has been shown to be feasible us-ing hierarchical generative models.
In contrastto the previous generative models, we proposethree latent-variable discriminative models forthe unsupervised alignment task.
The pro-posed discriminative models are capable of in-corporating domain knowledge, by adding di-verse and overlapping features.
The resultsshow that discriminative models outperformthe generative models in terms of alignmentaccuracy.1 IntroductionLearning to integrate natural language descriptionswith video events is attracting increasing attentionin the natural language processing and computer vi-sion communities.
The Grounded Language Learn-ing task aims to map the meaning of natural lan-guage expressions to their corresponding referentsin videos (e.g., objects, actions, and events) with-out any dictionary.
Most existing grounded lan-guage learning algorithms are either supervised orweakly-supervised.
During the training stage, theyassume each video is pre-segmented to chunks ofshort duration, and each video segment is manuallyLabel the bottleAdd 500 mL of DI water to the labeled bottleTransfer 1 mL of MgSO4 to the 50 mL Falcon tubeAlignment of Video Segments with Text SentencesAdd 500 mL of DI water to the labeled bottleVerb NounsVideo Objects Touched by HandsFigure 1: The proposed discriminative learning algorithmaligns protocol sentences to corresponding video frames.We incorporate features that can learn the co-occurrencesof nouns and verbs in the sentences with the objects inthe video.aligned with a natural language sentence that de-scribes that segment.
Manually aligning each videosegment with a sentence is tedious, especially forlong videos.
Therefore, it is desirable to automati-cally align video segments with their correspondingnatural language sentences without direct supervi-sion.Recently, Naim et al (2014) proposed an unsuper-vised learning algorithm for automatically aligningsentences in a document with corresponding videosegments.
Given a sequence of natural languageinstructions and an unaligned video recording of aperson following these instructions, a hierarchicalgenerative model was applied to align each instruc-164tion to its corresponding video segment, and to alignnouns in each instruction to their corresponding ob-jects in the video.
We extend this generative align-ment framework by applying several discriminativemodels with latent variables.
Discriminative mod-els are attractive as they can easily incorporate do-main knowledge by adding many diverse, overlap-ping, and complex features.
By incorporating a largenumber of features and regularizing their weightsproperly, discriminative models have been shown tooutperform generative models in many natural lan-guage processing tasks (Collins, 2002; Dyer et al,2011; Yu et al, 2013).Similar to Naim et al (2014), we applied our al-gorithm to align the natural language instructionsfor biological experiments in ?wet laboratories?
withrecorded videos of people performing these experi-ments.
Typically, each wetlab experiment has a pro-tocol written in natural language, describing the se-quence of steps necessary for that experiment.
How-ever, these instructions are often incomplete, and donot spell out implicit assumptions and knowledge,causing the results to be difficult to reproduce (Be-gley and Ellis, 2012).
Given a set of such wetlabexperiment protocols and associated videos, our ini-tial goal is to infer the correct alignment betweenthe steps mentioned in the protocol and correspond-ing video segments in which a person performs thesesteps (Figure 1).
The aligned and segmented out-put of the system described in this paper can even-tually be used to learn detailed visual models of cor-rectly performed activities and to identify experi-mental anomalies.In this paper, we apply three latent discriminativelearning algorithms: latent conditional random field(LCRF), latent structured perceptron (LSP), and la-tent structured support vector machine (LSSVM) forunsupervised alignment of video with text.
We showthat discriminative models outperform the existinggenerative models by incorporating diverse features.While the previous models only considered the map-pings of nouns to blobs, and ignored verbs, we in-corporated the co-occurrences of verbs with blobsas features in our model.
Finally, we propose a con-strained variant of the standard LSP and LSSVM up-date rule, which provided better alignment accuracyand more stable convergence on our datasets.2 Background Research2.1 Unsupervised Grounded LanguageLearningMost existing grounded language learning algo-rithms for integrating language with vision relyon either a fully supervised (Kollar et al, 2010;Matuszek et al, 2012) or a weakly supervisedtraining stage (Yu and Ballard, 2004; Kate andMooney, 2007; Krishnamurthy and Kollar, 2013;Yu and Siskind, 2013; Krishnamoorthy et al, 2013;Rohrbach et al, 2013; Tellex et al, 2013).
The fullysupervised methods assume that each sentence inthe training data is manually paired with the corre-sponding image or video segment, and furthermore,each word or phrase in a sentence is already mappedto its corresponding blob or action in the imageor video segment.
Given the detailed annotations,these methods train a set of classifiers to recog-nize perceptual representations for commonly usedwords or phrases.
After the initial fully supervisedtraining stage, these methods can learn the mean-ing of new words as they are encountered.
Suchdetailed supervision is difficult to obtain, and as aresult most of the recent grounded language learn-ing algorithms rely on weaker supervision (Krish-namurthy and Kollar, 2013; Yu and Siskind, 2013;Krishnamoorthy et al, 2013; Rohrbach et al, 2013;Tellex et al, 2013), where each image or videoframe is manually paired with corresponding sen-tence, but the mapping between objects and wordsis not provided, and instead learned and inferred au-tomatically as latent variables.
Manually pairingeach video segment or image frame with the cor-responding sentence can be tedious, especially forlong videos.
Furthermore, these methods can be rel-atively difficult to extend to new domains, as thismay require collecting new annotated data.Recently, Naim et al (2014) proposed a fullyunsupervised approach for aligning wetlab experi-ment videos with associated text protocols, with-out any direct supervision.
They proposed a hier-archical generative model to infer the alignment be-tween each video segment with corresponding pro-tocol sentence, and also the mapping of each blobwith corresponding noun in that sentence.
First, itmodels the generation of each video segment fromone of the sentences in the protocol using a Hidden165Markov Model (HMM) (Rabiner, 1989; Vogel et al,1996).
Next, each tracked object or blob in a videosegment is generated from one of the nouns in thecorresponding sentence using IBM Model 1 (Brownet al, 1993), a generative model frequently used inmachine translation.
The IBM Model 1 probabilitiesare incorporated as emission probabilities in HMM.The transition probabilities are parameterized usingthe jump size, i.e., the difference between the align-ments of two consecutive video segments.
Theyalso extended IBM Model 1 by introducing latentvariables for each noun, allowing some of the non-object nouns to be unobserved in the video.
Whilethe alignment results are encouraging, and show thatunsupervised alignment is feasible, they consideredthe mappings between nouns and blobs only, and ig-nored the verbs and other relations in the sentences.Moreover, incorporating domain knowledge is notstraightforward in these generative models.2.2 Discriminative Word AlignmentIn machine translation, alignment of the words insource language with the words in target languagehas traditionally been done using the IBM wordalignment models (Brown et al, 1993), which aregenerative models, and typically trained using Ex-pectation Maximization (Dempster et al, 1977).Early attempts (Blunsom and Cohn, 2006; Taskaret al, 2005) towards discriminative word alignmentrelied on supervised hand-aligned parallel corpora.Dyer et al (2011) first applied a latent variable con-ditional random field (LCRF) to perform unsuper-vised discriminative word alignment.
They treatedthe words?
alignments as latent variables, and for-mulated the task as predicting the target sentence,given the source sentence.
We apply similar la-tent variable discriminative models for unsupervisedalignment of sentences with video segments.3 Problem Formulation and NotationsThe input to our system is a dataset containing Npairs of observations {(xi,yi)}Ni=1, where xirep-resents the ithexperiment protocol, and yirepre-sents a video of a person carrying out the instruc-tions in that protocol.
The protocols are not neces-sarily unique, as we have multiple videos of differentpeople carrying out the same protocol.Xi,11 2  2yi = Yi,1 Yi,2 Yi,3Xi,2 Xi,33Yi,4hi =xi =Figure 2: EachXi,mis a sentence in the protocol, consist-ing of the nouns and verbs in the sentence, and each Yi,nis a video chunk represented by the set of blobs touchedby hands in that chunk.
The alignment hi= [1, 2, 2, 3]maps each video chunk to the corresponding sentence.We apply similar data preprocessing as Naim etal.
(2014).
First, we parse each protocol sentenceusing the two-stage Charniak-Johnson parser (Char-niak and Johnson, 2005), and extract the head nounsand verbs from each sentence.
Let mibe the num-ber of sentences in the protocol xi.
We represent xias a sequence of sets xi= [Xi,1, .
.
.
, Xi,mi], whereXi,mis the set of nouns and verbs in the mthsen-tence of xi.
Each video yiis segmented into a se-quence of chunks, each one second long.
For eachvideo chunk, we determine the set of objects touchedby the participant?s hands using automated imagesegmentation and tracking.
We ignore the chunksover which no object is touched by a hand.
Let nibethe number of chunks in yi.
We represent the videoyias a sequence of sets: yi= [Yi,1, .
.
.
, Yi,ni], onefor each video chunk, where Yi,nis the set of ob-jects or blobs touched by hands in the nthchunk ofyi.
If VYis the set of all blobs in the videos, thenYi,n?
VY.Our goal is to learn the alignment hibetweenthe sentences in xiwith their corresponding videochunks in yi(Figure 2).
Formally, hi[n] ?
{1, .
.
.
,mi}, for 1 ?
n ?
ni, where hi[n] = mindicates that the video segment Yi,nis aligned tothe protocol sentence Xi,m.4 Discriminative AlignmentTo formulate the alignment problem as a discrim-inative learning task, we assume the text sequencexias the observed input, and the video sequenceyias the output sequence that we aim to predict.Since the alignments are unknown, we treat them166as latent variables.
Let hibe the hidden alignmentvector for an observation pair (xi,yi).
The featurefunction ?
(xi,yi,hi) maps the input observation(xi,yi), and their latent alignment vector hito a d-dimensional feature vector.
Our goal is to learn theweights w ?
Rdfor these features.4.1 Latent Variable Conditional Random FieldGiven a text sequence xiand a video sequence yiwith lengths |xi| = miand |yi| = ni, the condi-tional probability of the video sequence is:p(yi|xi) = p(yi, ni|xi)= p(yi|xi, ni) p(ni|xi) (1)Since we only aim to learn the alignments given(xi,yi), we ignore the length probability p(ni|xi),and consider only the first term:p(yi|xi, ni) =?hip(yi,hi|xi, ni) (2)We model the conditional probabilityp(yi,hi|xi, ni) using a log-linear model:p(yi,hi|xi, ni) =exp wT?
(xi,yi,hi)Z(xi, ni), (3)where Z(xi, ni) =?y?hexp wT?(xi,y,h).
Tokeep our models tractable, we assume our featurefunction ?
decomposes linearly, similar to a linear-chain graphical model:?
(xi,yi,hi) =ni?n=1?
(Xi,m, Yi,n,m, n,m?
),where hi[n] = m and hi[n ?
1] = m?.
There-fore, each factor in our linear chain graph structuredepends on the alignment state for the current andthe previous video chunk.
For any two consecutivealignment states hi[n] = m and hi[n?
1] = m?, werepresent the factor potential as:?
(Xi,m, Yi,n,m, n,m?)
=exp[wT?
(Xi,m, Yi,n,m, n,m?
)]Our goal is to maximize the following log-likelihood function:L(w) =N?i=1log?hip(yi,hi|xi, ni).
(4)The gradient of the log-likelihood function with re-spect to the weight parameters is:?L?w=N?i=1[Ep(h|xi,ni,yi)[?(xi,yi,h)]?Ep(y,h|xi,ni)[?
(xi,y,h)]](5)We apply the stochastic gradient descent algo-rithm (Vishwanathan et al, 2006) to maximize theconditional log-likelihood.
For each observation(xi,yi), we perform forward-backward dynamicprogramming to estimate the two expectation termsin equation 5, as discussed next.4.1.1 Estimation of Ep(h|xi,ni,yi)[?
(xi,yi,h)]To estimate the first expectation term in equa-tion 5, we need to sum over all the possible align-ment states h[n] = m, where n ?
{1, .
.
.
, ni} andm ?
{1, .
.
.
,mi}.
Since the output sequence yiisgiven, we refer to this stage as ?forced?
forward-backward stage.
The forward messages ?Fn[m] ?p(Yi,1, .
.
.
, Yi,n,h[n] = m | xi) are estimated usingthe following recursion:?Fn(m) =?m??Fn?1(m?)
?
(Xi,m, Yi,n,m, n,m?
)wherem?is one of the predecessors of the alignmentstate h[n] = m. Assuming no restrictions on thepossible alignments, the computational complexityof each iteration on a single observation pair (xi,yi)isO(m2inid) formisentences, nivideo chunks, andd dimensional features.
However, we allow only aconstant number of predecessor and successor statesfor each alignment state, and hence the computa-tional complexity becomes O(minid).
Similarly,we apply backward recursions, with the same com-putational complexity.4.1.2 Estimation of Ep(y,h|xi,ni)[?
(xi,y,h)]While computing the second expectation term, weassume only xiand the number of video chunksniare observed, and we need to sum probabilitiesover all possible alignments h[n] = m and all pos-sible video sequences y.
Again we apply forward-backward.
The computational complexity, however,grows significantly, as we need to sum over all pos-sible set of blobs that may be touched by hands in167each video segment.
The forward message ?n(m)is computed as:?n(m) =?m??n?1(m?)?Y?VY?
(Xim, Y,m, n,m?
)There can be 2|VY|?
1 possible subset of blobsat each of the alignment position, and the overallcomputational complexity becomesO(2|VY|minid),which is prohibitively expensive, even for a smallnumber of blobs.
In our videos, the hands nevertouch more than 3 objects at a time.
So we con-sidered only the non-empty subsets with 3 or lesselements: P = {S : S ?
VY, |S| ?
3, S 6= ?
}.The pruning of larger subsets reduces the complex-ity to O(|VY|3minid).
We can further reduce com-putation by decomposing the forward-backward re-cursions to the co-occurrence features and alignmentpath features:?
(Xim, Y,m, n,m?)
= ?co(Xim, Y )?ap(m,n,m?
)The potential due to alignment path features (?ap)does not depend on the subset of blobs, and onlydepends on the current and previous alignment statesh[n] = m and h[n ?
1] = m?.
On the other hand,the co-occurrence potential ?cofor a given set ofblobs Y depends only on the sentence that it is beingaligned to, and does not depend on the video chunkindex n. Therefore we can decompose the forwardrecursion as:?n(m) =?m??n?1(m?)
?ap(m,n,m?)
?
(m)where ?
(m) =?Y ?P?co(Xim, Y ).
We can pre-compute the values of ?
(m) for each of the misen-tences, which takes O(mid|VY|3) operations.
Fi-nally, we run forward recursions over all the align-ment states using the precomputed values, and thecomplexity becomes O(mid|VY|3+ minid) Simi-larly the backward recursion becomes:?n(m) =?m??n+1(m?)
?ap(m?, n+1,m) ?(m?
)The alignment state transition probabili-ties ?n(m?,m) represents the probabilityp(hn?1= m?,hn= m | xi), which can beestimated by marginalizing over all possible sets ofblobs:?n(m?,m) ?
?n?1(m?)?ap(m,n,m?)?
(m)?n(m)4.2 Latent Variable Structured PerceptronStructured Perceptron (Collins, 2002) has become apopular method for discriminative structured learn-ing due to its relatively fast convergence rate andtheoretical convergence guarantee.
Since true align-ments are unknown, we apply the latent variablestructured perceptron algorithm (Liang et al, 2006;Sun et al, 2009; Yu et al, 2013) for our discrimina-tive alignment task.We iteratively scan through our dataset, one pro-tocol and video pair (xi,yi) at a time.
First, we inferthe best alignment hForcedifor the given observationpair (xi,yi) and the current weight vector w:hForcedi= arg maxhwT?(xi,yi,h).
(6)This step is known as Forced Decoding, as we aregiven both the protocol sentences and the associatedvideo chunks.
Forced decoding is performed usingViterbi-like dynamic programming (Algorithm 1),where the dynamic programming states are thealignment states (m,n) such that h[n] = m.Algorithm 1 Perceptron Forced-DecodingInput: Observation pair (xi,yi) and a weight vector w.1: mi?
length(xi), and ni?
length(yi),2: D[m,n]?
??
for 0 ?
m ?
miand 0 ?
n ?
ni3: D[0, 0]?
04: for m = 1 to mido5: for n = 1 to nido6: for each (m?, n?
1) ?
Predecessors(m,n) do7: ??
create-features(Xi,m, Yi,n,m, n,m?
)8: if D[m?, n?
1] + wT?
> D[m,n] then9: D[m,n]?
D[m?, n?
1] + wT?10: Backpointers[m,n]?
m?11: hForcedi?
Backtrack(D, Backpointers)12: Return hForcediNext, we decode both the highest scoring align-ment?hiand video sequence?yi, given the protocolxiand the number of video chunks ni.
?hi,?yi= arg maxh,ywT?
(xi,y,h) (7)We refer to this step as Full Decoding (Algorithm 2).The dynamic programming is similar to that forforced decoding, except that we need to find the bestset of blobs given a set of nouns, for every protocolsentence Xi,m:B[m] = arg maxS?PwTco?co(Xi,m, S) (8)168where P is the pruned set of blobs and?co(Xi,m, S) is a vector containing only theco-occurrence features, and wcocontains theircorresponding weights.
The detailed algorithm isdescribed in Algorithm 2.
Finally, we update theweight vector w:w(new)= w(old)+?(xi,yi,hForcedi)??
(xi,?yi,?hi)Algorithm 2 Perceptron Full DecodingInput: Input protocol xi, set of all blobs VY, number of videochunks ni, weight vector w.1: mi?
length(xi)2: D[m,n]?
??
for 0 ?
m ?
miand 0 ?
n ?
ni3: B[m]?
?
for 0 ?
m ?
mi4: D[0, 0]?
05: P ?
{S : S ?
VY, |S| ?
3, S 6= ?}
// precompute thepruned list of subsets of blobs6: for m = 1 to mido7: B[m]?
argmaxS?PwTco?co(Xi,m, S)8: for n = 1 to nido9: for each (m?, n?
1) ?
Predecessors(m,n) do10: ??
create-features(Xi,m, B[m],m, n,m?
)11: if D[m?, n?
1] + wT?
> D[m,n] then12: D[m,n]?
D[m?, n?
1] + wT?13: Backpointer[m,n]?
m?14:?hi?
Backtrack(D, Backpointers)15:?yi?
[B[?hi,1], .
.
.
, B[?hi,ni]]16: Return?hi,?yi4.3 Constrained DecodingDuring the full decoding of (?hi,?yi), we have no in-formation regarding how many video chunks to as-sign to each sentence.
As a result, the full decodingis unlikely to predict the correct video sequence, nomatter how many training iterations performed.
Inpractice, the unconstrained full decoding often endsup aligning too many video chunks to one of the pro-tocol sentences.To address this problem, we modified the per-ceptron update rule.
Instead of performing uncon-strained full decoding, we constrain the alignment?hito be same as the forced alignment hForcedi, andinfer the best sequence of video chunks?yConstriun-der this constraint:?yConstri= arg maxywT?
(xi,y,hForcedi)We refer to this decoding step as ?constrained de-coding?
(Algorithm 3), and refer to this constrainedLSP variant as LSP-C.
The modified weight updaterule is:w(new)= w(old)+ ?(xi,yi,hForcedi)??
(xi,?yConstri,hForcedi)Algorithm 3 Perceptron Constrained-DecodingInput: Input protocol xi, set of all blobs VY, number of videochunks ni, forced alignment hForcedi, weight vector w.1: P ?
{S : S ?
VY, |S| ?
3, S 6= ?
}2: for n = 1 to nido3: m?
hForcedi[n]4:?YConstri,n?
argmaxS?PwTco?co(Xi,m, S)5: Return y?Constri= [?YConstri,1, .
.
.
,?YConstri,ni]4.4 Latent Structured SVMStructured SVM can be formulated by extendingstructured perceptron with two simple modifica-tions: (1) incorporating a large-margin regulariza-tion term, and (2) incorporating a general loss func-tion, instead of the zero-one loss of perceptron.
Theregularization reduces overfitting by keeping featureweights relatively small.
Let the loss-augmented fulldecoding be:(?yi,?hi) = arg maxy,hwT?
(xi,y,h) + Li(y,h),where Li(y,h) is the loss function for the ithobser-vation.
LSSVM minimizes the following objectivefunction:C(w) =1NN?i=1(wT?
(xi,?yi,?hi) +Li(?yi,?hi)?wT?
(xi,yi,hForcedi))+?2?w?2,which is non-convex and non-differentiable, and op-timized utilizing the subgradient method (Ratliff etal., 2007).
We perform online learning, and the sub-gradient in each iteration is:gi(w) = ?(xi,?yi,?hi)??
(xi,yi,hForcedi) + ?w.Similar to LSP-C, we can obtain a constrained vari-ant LSSVM-C, by replacing loss-augmented decod-ing with a constrained variant, where we fix?hitoforced alignment hForcedi.1694.5 Latent Variables to Map Blobs to NounsGiven a sentence Xi,nand a video segment Yi,m, wefurther introduce additional latent variables to mapeach blob in Yi,mto one of the nouns in Xi,n.
Theselatent variables are similar to the IBM Model 1 la-tent variables of Naim et al (2014).
Instead of turn-ing on the (noun, blob) co-occurrence feature for ev-ery noun and blob in Xi,nand Yi,m, the latent vari-ables map each blob to one of the nouns only.
ForLCRF, we sum over all the latent variables for esti-mating the expectations.
For LSP and LSSVM, the(noun,blob) feature with maximum feature weighttriggers for each blob.5 Feature DesignThe features used in our discriminative models canbe grouped in two categories: (1) co-occurrencefeatures, and (2) alignment path features.
The co-occurrence features depend only on a protocol sen-tence and the video segment it aligns to.
The align-ment path features, on the other hand, do not dependon the co-occurrence of sentence and video segment,and instead capture general alignment properties,e.g., jump size and the distance of an alignment statefrom the diagonal.5.1 Co-occurrence FeaturesThe co-occurrence features included in our experi-ments are:?
Co-occurrence of Nouns and Blobs: For eachnoun in the input protocols and each blob in thevideos, we add a boolean feature (noun, blob),which is turned on if we align a sentence con-taining that noun with a video segment contain-ing that blob.?
Co-occurrence of Verbs and Blobs: For eachverb in the input protocols and each blob inthe videos, we add a boolean feature.
This fea-ture captures the observation that certain verbsare more likely to occur with certain objects(e.g., ?write?
co-occurs with ?pen?, ?aspirate?co-occurs with ?pipette?
).We experimented with co-occurrence features ofthe form: (noun, verb, blob) triplets.
However, in-cluding these features did not provide any noticeablegain, while significantly increasing the computationtime, as the number of features increased drastically.Therefore, we did not include these features in ourfinal experiments.5.2 Alignment Path FeaturesAlignment path features depend on the current align-ment state h[n] = m, and the previous alignmentstates h[n?
1] = m?.
These features do not dependon the nouns and verbs in the sentences and the blobsin the video segments.
We used the following align-ment path features:?
Jump Size: Since we allow monotonic jumpsonly, the jump sizes can be either zero or one.Therefore, we added two features for these twojump sizes.?
Positional Features: we added positional fea-tures (Dyer et al, 2011) to discourage align-ment states that are too far from the diago-nal.
For each alignment state (m,n), we es-timate normalized distance from the diagonalas |mmi?nni|.
Again we used boolean featuresby assigning this normalized distance to fiveequally spaced bins.The alignment features are not updated by the LSP-C and LSSVM-C methods, as they assume hForcediand?hito be identical.6 ResultsOur dataset contains 12 wetlab experiment videos,for 3 different protocols (4 videos per protocol).Each protocol contains natural language instructionsfor an actual biological experiment.
On average,each protocol has 9 steps, and 24 sentences.
Thevideos are recorded using an RGB-D Kinect camera,in a mock wetlab setup.
The average video length is?
5 minutes.
There are 34 unique nouns and 25unique verbs in the protocols, and 22 distinct blobsin the videos.We follow the same data pre-processing techniqueas described by Naim et al (2014).
The num-ber of blobs is assumed to be known apriori.
Weoversegment each frame into many superpixels us-ing the SLIC Superpixels algorithm (Achanta et al,2012).
We combine multiple adjacent superpixelsinto a blob, based on a pre-trained Gaussian mixture170DatasetAverage Alignment Accuracy (%)LHMM LCRF LSP LSP-C LSP-H LSSVM LSSVM-C LSSVM-HManual-Tracking 75.58 85.09 79.64 80.68 80.41 79.64 80.68 80.41Auto-Tracking 64.04 65.59 61.99 63.95 65.27 61.99 63.95 65.27Table 1: Alignment accuracy (% of video chunks aligned to the correct protocol step) for both manual and automatictracking data.
LHMM is the existing state-of-the-art generative model.
For the variants of latent perceptron (LSP) andlatent structured SVM (LSSVM), ?C?
indicates constrained decoding, and ?H?
indicates hybrid update.color model and their boundary maps (Luo and Guo,2003), and track each blob using a 3D Kalman filter.In order to isolate alignment error from computervision tracking and segmentation error, we manu-ally tracked and annotated each of the video seg-ments with the set of blobs touched by hands us-ing the video annotation tool Anvil (Kipp, 2012).The alignment accuracies are reported both for themanual and automated tracking datasets.
Parsing er-ror is relatively small.
The Charniak-Johnson parsercorrectly identified the nouns and verbs for mostsentences, except for several single-word imperativesentences (e.g., Mix.
), for which the verbs were mis-takenly parsed as nouns.We experimented with the latent CRF (LCRF),latent perceptron (LSP) and its constrained vari-ant (LSP-C), and latent SVM (LSSVM) and itsconstrained variant (LSSVM-C).
Furthermore, wetried two hybrid variants LSP-H and LSSVM-H,where we started with constrained decoding, andlater switched to full decoding.
We experimentedby incorporating additional latent variables for Blob-to-Noun mapping (Section 4.5), which significantlyimproved alignment accuracy for LCRF, but de-creased accuracy for LSP and LSSVM and theirvariants.
We report the best result for each model.The discriminative algorithms are compared withthe state-of-the-art LHMM model (Naim et al,2014), which is a generative HMM with latent vari-ables for blob-to-noun mapping and the observationstates of each noun.We initialized the weights for co-occurrence andjump size features to the log-probabilities learned bythe generative HMM model.
All the other featuresare initialized to zero.
For both LHMM and thediscriminative models, we used monotonic jumpsas they performed better than the non-monotonicjumps.
We used the same learning rate ?
=0.001?t(where t is the iteration number) for all the discrim-inative models, and the LSSVM regularization con-stant ?
= 0.001.
All the Perceprton and SVM vari-ants performed ?weight averaging?
(Collins, 2002).The number of iterations are set to 100 for all thealgorithms.Table 1 shows that the discriminative models, es-pecially LCRF and LSP-H/LSSVM-H, outperformthe generative model LHMM both on the manual-tracking and auto-tracking datasets.
For the manual-tracking dataset, the difference between LHMM andeach of the discriminative models is statistically sig-nificant (p-value < 0.0001).
On the auto-trackingdataset, however, the differences are not significant(p-value > 0.1).
Table 2 shows an example of analignment obtained by LCRF for a short segment ofa manually tracked video.The average running time for each iteration pervideo is 0.8 seconds for LHMM, 1.1 seconds forLSP and LSSVM, and 2.5 seconds for LCRF on a2.9 GHz Intel Core-i7 processor and 8GB RAM.7 Discussions and Future WorkThe results show that discriminative methods out-perform the generative LHMM model on both themanual and auto-tracking datasets.
We achievedthe best overall accuracy using the LCRF model.LCRF takes expectations over all possible alignmentstates and video sequences.
On the other hand, LSPand LSSVM consider the highest scoring predic-tion only, which is similar to the hard-decision de-coding.
With no information regarding how manyvideo segments to align to each sentence, LSP andLSSVM could not correctly predict the output videosequences during full decoding, and the weight vec-tors did not converge.
By constraining the alignmentto the forced alignment, we avoid aggressive up-dates, which may have helped LSP-C and LSSVM-C to learn better alignments.
However, constraineddecoding has a limitation that it can not update align-171Start (s) End (s) Blobs in Hands Detected Nouns Detected Verbs Protocol Sentence40.58 42.58 boat boat, scale place place the plastic boat on the scale .42.58 42.90 boat scale zero the scale .42.90 48.48 base spatula, base, boat measure using the spatula , measure 20 g of lb broth baseinto the plastic boat .48.48 58.95 base, spatula spatula, base, boat measure using the spatula , measure 20 g of lb broth baseinto the plastic boat .58.95 65.93 base spatula, base, boat measure using the spatula , measure 20 g of lb broth baseinto the plastic boat .65.93 80.90 boat, bottle base, bottle pour pour the lb broth base into the 1000 ml bottle .83.80 84.80 water water add add 800 ml of di water .84.80 88.95 water water, sink use use the di water near the sink .88.95 96.68 water, bottle water, sink use use the di water near the sink .96.68 104.67 water mix mix .108.15 118.12 bottle cap, bottle, water put, shake, mix put a cap on the bottle and shake to mixthe dry ingredients with the water .Table 2: An example of an alignment, obtained for a part of a manually tracked video.
We notice several incorrectparses, e.g., the verbs ?mix?
and ?zero?
were not detected correctly.ment path features.
LCRF sums over all possibleoutput and latent variables, which includes the cor-rect solution, and hence constrained decoding is notnecessary.
While the latent variables for blob-to-noun mappings improved the alignment accuracy forLCRF, it did not improve alignment accuracy forLSP and LSSVM and their variants, presumably be-cause of their hard-decision decoding approach.Among the different variants of LSP and LSSVM,we obtained the best accuracy with the hybrid vari-ants (LSP-H and LSSVM-H), where we started withconstrained decoding, and then switched to standardupdates.
While these hybird approaches providedbetter accuracy, they still suffer from the issue of notconverging.
The feature weights learned by LSSVMand its variants were smaller than that for LSP (dueto regularization).
However, they always resulted inthe same forced decoding alignments in our experi-ments, and obtained same alignment accuracy.Unlike the previous models, we considered theco-occurrences of verbs with blobs in the video.
Thehighest weighted features include: (write, pen), (as-pirate, pipette), which agree with our intuition.
Ourimmediate next step will be to automatically learna dictionary of hand motion patterns, and considerthe co-occurrence of these patterns with verbs in thesentences.
Some of the objects in our video are smalland thin (e.g., pen, pipette, spatula, plastic boat), andwere not reliably detected by the computer visionsegmentation and tracking system.
This may be thereason why we achieved relatively smaller improve-ments on the auto-tracking dataset.Our alignment models are different from the tra-ditional discriminative approaches in that our costfunction is not same as our evaluation criteria.
Al-though our goal is to improve alignment accuracy,the objective function that we minimize is either thenegative conditional log-likelihood (LCRF) or thenumber of mis-predicted video segments (LSSVM).Since the ground truth alignments are unknown, wecould not integrate alignment error in our objectivefunction.
The proposed discriminative models out-perform LHMM despite the fact that the discrimi-native models are simpler ?
lacking latent variablesfor the observation states of nouns.
The alignmentaccuracy of the discriminative models is expected toimprove even further once these latent variables areincorporated.8 ConclusionWe proposed three discriminative unsupervisedalignment algorithms and their novel variants us-ing constrained decoding.
The proposed algorithmsincorporate overlapping features to capture the co-occurrences of nouns and verbs with video blobs,and outperform the state-of-the-art latent HMMmodel via discriminative training.Acknowledgments Funded by NSF IIS-1446996,ONR N00014-11-10417, Intel ISTCPC, DoD SBIRN00014-12-C-0263, DARPA FA8750-13-2-0041(DEFT), NSF IIS-1449278, and a Google FacultyResearch Award.172ReferencesR.
Achanta, A. Shaji, K. Smith, A. Lucchi, P. Fua, andSabine Susstrunk.
2012.
SLIC superpixels comparedto state-of-the-art superpixel methods.
IEEE Trans-actions on Pattern Analysis and Machine Intelligence,34(11):2274?2282.C.
Glenn Begley and Lee M. Ellis.
2012.
Drug develop-ment: Raise standards for preclinical cancer research.Nature, 483(7391):531?533.Phil Blunsom and Trevor Cohn.
2006.
Discriminativeword alignment with conditional random fields.
InProceedings of the 21st International Conference onComputational Linguistics and the 44th Annual Meet-ing of the Association for Computational Linguistics,ACL-44, pages 65?72, Stroudsburg, PA, USA.
Asso-ciation for Computational Linguistics.Peter F. Brown, Stephen A. Della Pietra, Vincent J. DellaPietra, and Robert L. Mercer.
1993.
The mathematicsof statistical machine translation: Parameter estima-tion.
Computational Linguistics, 19(2):263?311.Eugene Charniak and Mark Johnson.
2005.
Coarse-to-fine n-best parsing and maxent discriminative rerank-ing.
In ACL.Michael Collins.
2002.
Discriminative training meth-ods for Hidden Markov Models: Theory and experi-ments with perceptron algorithms.
In Proceedings ofthe 2002 Conference on Empirical Methods in NaturalLanguage Processing.A.
P. Dempster, N. M. Laird, and D. B. Rubin.
1977.Maximum likelihood from incomplete data via the EMalgorithm.
Journal of the Royal Statistical Society,39(1):1?21.Chris Dyer, Jonathan Clark, Alon Lavie, and Noah ASmith.
2011.
Unsupervised word alignment with ar-bitrary features.
In Proceedings of the 49th AnnualMeeting of the Association for Computational Linguis-tics: Human Language Technologies-Volume 1, pages409?419.
Association for Computational Linguistics.Rohit J Kate and Raymond J Mooney.
2007.
Learninglanguage semantics from ambiguous supervision.
InAAAI, volume 7, pages 895?900.M Kipp.
2012.
Anvil: A universal video research tool.Handbook of Corpus Phonology.
Oxford UniversityPress.Thomas Kollar, Stefanie Tellex, Deb Roy, and NicholasRoy.
2010.
Toward understanding natural languagedirections.
In Human-Robot Interaction (HRI), 20105th ACM/IEEE International Conference on, pages259?266.
IEEE.Niveda Krishnamoorthy, Girish Malkarnenkar, RaymondMooney, Kate Saenko, and Sergio Guadarrama.
2013.Generating natural-language video descriptions usingtext-mined knowledge.
In Proceedings of the NationalConference on Artificial Intelligence (AAAI-13), vol-ume 2013, page 3.Jayant Krishnamurthy and Thomas Kollar.
2013.
Jointlylearning to parse and perceive: Connecting natural lan-guage to the physical world.
Transactions of the As-soc.
for Comp.
Ling., 10:193?206.Percy Liang, Alexandre Bouchard-C?ot?e, Dan Klein, andBen Taskar.
2006.
An end-to-end discriminative ap-proach to machine translation.
In Proceedings of the21st International Conference on Computational Lin-guistics and 44th Annual Meeting of the Associationfor Computational Linguistics, pages 761?768, Syd-ney, Australia, July.Jiebo Luo and Cheng-en Guo.
2003.
Perceptual group-ing of segmented regions in color images.
PatternRecognition, 36(12):2781 ?
2792.Cynthia Matuszek, Nicholas Fitzgerald, Luke Zettle-moyer, Liefeng Bo, and Dieter Fox.
2012.
A jointmodel of language and perception for grounded at-tribute learning.
In Proceedings of the 29th Interna-tional Conference on Machine Learning (ICML-2012),pages 1671?1678.Iftekhar Naim, Young Song, Qiguang Liu, Henry Kautz,Jiebo Luo, and Daniel Gildea.
2014.
Unsupervisedalignment of natural language instructions with videosegments.
In Proceedings of Twenty-Eighth AAAIConference on Artificial Intelligence.Lawrence R. Rabiner.
1989.
A tutorial on HiddenMarkov Models and selected applications in speechrecognition.
Proceedings of the IEEE, 77(2):257?286.Nathan Ratliff, J. Andrew (Drew) Bagnell, and MartinZinkevich.
2007.
(Online) subgradient methods forstructured prediction.
In Eleventh International Con-ference on Artificial Intelligence and Statistics (AIS-tats), March.M.
Rohrbach, Wei Qiu, I. Titov, S. Thater, M. Pinkal, andB.
Schiele.
2013.
Translating video content to natu-ral language descriptions.
In 14th IEEE InternationalConference on Computer Vision (ICCV), pages 433?440, Dec.X.
Sun, T. Matsuzaki, D. Okanohara, and J. Tsujii.
2009.Latent variable perceptron algorithm for structuredclassification.
In Proceedings of the 21st Interna-tional Joint Conference on Artificial Intelligence (IJ-CAI 2009), pages 1236?1242.Ben Taskar, Simon Lacoste-Julien, and Dan Klein.
2005.A discriminative matching approach to word align-ment.
In Proceedings of the Conference on HumanLanguage Technology and Empirical Methods in Nat-ural Language Processing, HLT ?05, pages 73?80,Stroudsburg, PA, USA.
Association for ComputationalLinguistics.Stefanie Tellex, Pratiksha Thaker, Joshua Joseph, andNicholas Roy.
2013.
Learning perceptually grounded173word meanings from unaligned parallel data.
MachineLearning, pages 1?17.SVN Vishwanathan, Nicol N Schraudolph, Mark WSchmidt, and Kevin P Murphy.
2006.
Acceleratedtraining of conditional random fields with stochasticgradient methods.
In Proceedings of the 23rd inter-national conference on Machine learning, pages 969?976.
ACM.Stephan Vogel, Hermann Ney, and Christoph Tillmann.1996.
HMM-based word alignment in statistical trans-lation.
In COLING-96, pages 836?841, Copenhagen,Denmark.Chen Yu and Dana H Ballard.
2004.
On the integrationof grounding language and learning objects.
In AAAI,volume 4, pages 488?493.Haonan Yu and Jeffrey Mark Siskind.
2013.
Groundedlanguage learning from video described with sen-tences.
In Proceedings of the 51st Annual Meeting ofthe Association for Computational Linguistics (ACL-13), volume 1, pages 53?63.Heng Yu, Liang Huang, Haitao Mi, and Kai Zhao.2013.
Max-violation perceptron and forced decodingfor scalable MT training.
In Conference on EmpiricalMethods in Natural Language Processing (EMNLP-13).174
