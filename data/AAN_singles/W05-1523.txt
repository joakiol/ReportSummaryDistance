Proceedings of the Ninth International Workshop on Parsing Technologies (IWPT), pages 192?193,Vancouver, October 2005. c?2005 Association for Computational LinguisticsParsing Generalized ID/LP GrammarsMichael W. DanielsDepartment of LinguisticsIndiana University402 Memorial Hall1021 E Third StreetBloomington, IN 47405daniels@ling.osu.edu1 IntroductionThe Generalized ID/LP (GIDLP) grammar formal-ism (Daniels and Meurers 2004a,b; Daniels 2005)was developed to serve as a processing backbone forlinearization-HPSG grammars, separating the dec-laration of the recursive constituent structure fromthe declaration of word order domains.
This pa-per shows that the key aspects of this formalism ?the ability for grammar writers to explicitly declareword order domains and to arrange the right-handside of each grammar rule to minimize the parser?ssearch space ?
lead directly to improvements in pars-ing efficiency.2 Defining GIDLP GrammarsA brief overview of GIDLP syntax is given in 1, andan example GIDLP grammar is given in 2 that recog-nizes a very small fragment of German, focusing onthe free word order of arguments and adjuncts in theMittelfeld.1 The basic idea of this grammar is thatno word order constraints apply below the level ofthe clause.
This allows the verb?s arguments and ad-juncts to freely intermingle, before being compactedat the clause level, at which point the constraints onthe location of the finite verb apply.
It is important tonote that this grammar cannot be straightforwardlyexpressed in the ID/LP formalism, where LP con-straints only apply within local trees.3 The GIDLP Parsing AlgorithmThe GIDLP parser Daniels and Meurers (2004a);Daniels (2005) is based on Earley?s algorithm for1For compactness, categories are described in this examplewith prolog-style terms; the actual GIDLP syntax assumes fea-ture structure categories.Terminal: tNon-terminal: CLexical entry: C ?
tGrammar rule: C ?
C+;LP?
; DD?Start declaration: start (S) : LP?LP [Constraint]: C1{<,}C2D[omain] D[eclaration]: ?
{C+}, C, LP?
?Figure 1: GIDLP syntaxa) start(s): []b) s ?
s(cmp)c) s ?
s(que)d) s(cmp) ?
cmp, clause;?
{[0]}, s(cmp), cmp < , < v( )?e) s(que) ?
clause;?
{[0]}, s(que), v( ) < ?f) clause ?
np(n), vpg) vp ?
v(ditr), np(a), np(d)h) vp ?
adv, vpi) vp ?
v(cmp), s(cmp)j) [np(Case)] ?
det(Case), n(Case);1  2Figure 2: Example GIDLP Grammarcontext-free parsing, suitably modified to handlediscontinuous constituents.A central insight of the GIDLP parsing algorithmis that the same data structure used to describe thecoverage of an edge can also encode restrictions onthe parser?s search space.
This is done by adding twobitvectors to each edge: a negative mask (n-mask),which marks positions that must not be part of theedge, and a positive mask (p-mask), which markspositions that must be part of the edge.
These masksare generated during the prediction phase and thentested during the completion phase using efficientbitvector operations.
Compiling LP constraints into192bitmasks in this way allows the LP constraints to beintegrated directly into the parser at a fundamentallevel.
Instead of weeding out inappropriate parsesin a cleanup phase, LP constraints in this parser canimmediately block an edge from being added to thechart.4 EvaluationTo evaluate the effectiveness of the GIDLP formal-ism, a moderate-scale grammar of German was ob-tained from Professor Martin Volk (Stockholm Uni-versity).
This grammar combines ID/LP rules withPS rules, as argued for in (Volk 1996), and uses aflat structure to encode the flexibility of the GermanMittelfeld.
As an example, the rule for ditransitiveverbs is given in (1).
(1) S -> N2 V N2 N2 ADV* (ERG) (PRAEF)This grammar can be mechanically translated intothe GIDLP format, as each of Volk?s PS rules cor-responds to a GIDLP rule.
This translation estab-lishes an ?initial?
GIDLP grammar.2 The grammarwas then optimized in two successive steps to takeadvantage of the GIDLP formalism.
First, a ?medial?grammar was created in which word order domainswere introduced only when necessary.
(In the ID/LPformalism, every local tree is an order domain.)
Sec-ond, a ?final?
grammar was created by reordering theRHS order of each rule so as to put the most discrim-inatory RHS element first ?
generally the finite verb.To compare these three grammars, a testsuite of150 sentences was constructed.
The sentences weregenerally chosen to equally cover the sentence typesrecognized by the grammar.
The results from pars-ing this testsuite with each grammar are summa-rized in Figure 3, which shows the average numberof chart insertion attempts at each sentence length.
(Chart insertion attempts have traditionally beenused as an overall metric for parsing efficiency, asparse time tends to be dominated by the time takensearching the chart for blocking edges.)
Overall, thefinal grammar shows a clear improvement over themedial and initial grammars.2As Volk?s parser is not available, the relative performanceof the GIDLP parser on the initial grammar and of Volk?s parseron his grammar cannot be determined.
Thus Volk?s grammar isonly used as a basis for the three GIDLP grammars describedhere.0100002000030000400005000060000700003  4  5  6  7  8  9  10  11Chart Size(edges)Sentence Length (words)InitialMedialFinalFigure 3: Average Chart Size per Sentence LengthAveraging over all 150 sentences, the final gram-mar sees a decrease of 69.2% in the number of chartinsertion attempts compared to the initial grammar.Thus the expressive capabilities provided by theGIDLP formalism lead directly to improvements inparsing efficiency.5 SummaryThis paper has shown that two key aspects of theGIDLP grammar formalism ?
the ability for gram-mar writers to explicitly declare word order domainsin the spirit of the linearization-HPSG tradition andthe ability to completely order the RHS of a gram-mar rule to minimize the parser?s overall searchspace ?
lead directly to improvements in parse ef-ficiency.ReferencesDaniels, Michael W. 2005.
Generalized ID/LP Grammar: AFormalism for Parsing Linearization-Based HPSG Gram-mars.
Ph.
D.thesis, The Ohio State University.Daniels, Michael W. and Meurers, W. Detmar.
2004a.
A Gram-mar Formalism and Parser for Linearization-based HPSG.In Proceedings of the Twentieth International Conference onComputational Linguistics, pages 169?175.Daniels, Mike and Meurers, Detmar.
2004b.
GIDLP: A Gram-mar Format for Linearization-Based HPSG.
In Stefan Mu?ller(ed.
), Proceedings of the Eleventh International Conferenceon Head-Driven Phrase Structure Grammar, pages 93?111,Stanford: CSLI Publications.Volk, Martin.
1996.
Parsing with ID/LP and PS rules.
In Natu-ral Language Processing and Speech Technology.
Results ofthe 3rd KONVENS Conference (Bielefeld), pages 342?353,Berlin: Mouton de Gruyter.193
