Proceedings of the 8th Workshop on Language Technology for Cultural Heritage, Social Sciences, and Humanities (LaTeCH) @ EACL 2014, pages 80?85,Gothenburg, Sweden, April 26 2014. c?2014 Association for Computational LinguisticsA Tool for a High-Carat Gold-Standard Word AlignmentDrayton C. BennerNear Eastern Languages & Civilizations DepartmentUniversity of ChicagoChicago, IL  USAdrayton@uchicago.eduAbstractIn this paper, we describe a tool designed toproduce a gold-standard word alignmentbetween a text and its translation with a novelvisualization.
In addition, the tool is designedto aid the aligners in producing an alignmentat a high level of quality and consistency.
Thistool is presently being used to align theHebrew Bible with an English translation of it.1 Introduction and BackgroundGold-standard word alignments have beenproduced for a variety of purposes, but themachine translation community has been the mostinterested in aligned texts.
For this community,aligning texts is not an end in and of itself.
Rather,gold-standard aligned texts have served to trainand also evaluate machine translation algorithmsor their components, especially automaticalignment algorithms.
However, there are otherscholarly endeavors in which gold-standard wordalignments are useful in and of themselves.Within linguistics they are certainly helpful to thesubfields of contact linguistics, corpus linguistics,and historical linguistics, but they are also usefulin humanistic inquiry more broadly, especially inin studies of translation technique, textualcriticism, philology, and lexicography.
In addition,presenting gold-standard aligned texts can maketexts more accessible to a broader audience,especially to an audience that has limited skill ineither the source or target language.A gold-standard alignment that is designed toaid the humanist is likely to have differentrequirements with regard to quality, consistency,and visualization than a gold-standard alignmentdesigned as an input to a machine translationalgorithm.
Results from research into the effect ofthe quality of alignments above a certain level onmachine translation quality has been mixed(Fraser and Marcu, 2007; Fossum et al., 2008;Lambert et al., 2012).
Thus, the extra cost ofmaking a good alignment excellent mightoutweigh its benefits if its only purpose is to aidin machine translation.
Put differently, a 14 caratgold-standard alignment may be sufficient for thepurposes of machine translation.
However, for thehumanistic endeavors enumerated above,incremental improvements in quality continue tobe useful to scholars; a 24 carat gold-standardalignment is highly desirable.
Similarly,consistency is important for many of thesehumanistic endeavors.
For example, a scholarresearching the way in which a particular word orclass of words is translated needs the alignment tobe done consistently across the translated corpus.Finally, when the translation and alignmentthemselves are an object of study, the alignmentneeds to be presented visually in an appealingmanner, and the researcher needs to be able toaccess additional information easily.2 Alignment Project and ToolAchieving a high level of quality and consistencyrequires a software tool designed to facilitate this,and the visualization techniques for this softwaretool can be similar to the visualization of the finalalignment.
In what follows, we present a manualalignment tool that has been built as a Javaapplication for desktop operating systems in orderto achieve these goals for an ongoing project toalign the Hebrew Bible with an Englishtranslation of it.
For the Hebrew Bible, we use theWestminster Leningrad Codex (WLC) and80Westminster Hebrew Morphology (WHM), bothversion 4.18.
WLC is a diplomatic edition ofCodex Leningradensis, the oldest completemanuscript of the Hebrew Bible in the Tiberiantradition.
WHM tokenizes the text and provides alemma and morphology codes for each token.WLC and WHM are presently maintained by the J.Alan Groves Center for Advanced BiblicalResearch.
For an English translation, we use theEnglish Standard Version, 2011 text edition.
Itstokenization is straightforward and was done atthe word level.While various groups have aligned the HebrewBible with various English translations, beginningwith (Strong, 1890), and even to the GreekSeptuagint translation (Tov, 1986), this project isunparalleled in its focus on quality andconsistency in the alignment, and the alignmenttool reflects that.
The Alignment Panel providesthe primary visualization of the alignment andallows for its manipulation while several otherpanels provide data to aid the aligner with regardto quality and consistency.
The aligners follow alengthy document outlining consistency standards.2.1 Alignment PanelSeveral types of visualizations have typically beenused to display aligned texts.
Most commonly,lines have been used to show links betweenaligned tokens (Melamed, 1998; Daume III;Smith and Jahr, 2000; Madnani and Hwa, 2004;Grimes et al., 2010; Hung-Ngo and Winiwarter,2012).
While this is helpful, the lines becomedifficult to follow when the word order differssignificantly between the source text and itstranslation or even if one text requiressignificantly more tokens than the other.
Thesecond common approach uses an alignmentmatrix (Tiedemann, 2006; Germann, 2007;Germann, 2008).
Again, this is a helpfulvisualization technique, but it takes time for theuser to see which source tokens link to whichtarget tokens at a glance, and it is easy toaccidentally move over a row or column withone?s eye.
A third approach involves coloringlinked words using distinguishable colors (Merkel,2003; Ahrenberg et al., 2002; Ahrenberg et al.,2003).
When used by itself, this is helpful butslow for the eye to find which source token linksto which target token.
A fourth approach requiresthe user to place the mouse over a particular tokenof interest to see links for just that token(Germann, 2007; Germann, 2008).
This removesthe clutter but is cumbersome for a user trying tosee the entirety of the alignment.The approach taken here, shown in Figure 1,combines the first and third of these visualizationtechniques but modifies them in order to make thealignment easier to read and to enable the alignerto align quickly while maintaining high quality.
Inaddition, the Alignment Panel includes languagehelps to speed up the human aligner.
Tokens aredisplayed vertically.
While previous alignmenttools have more conventionally displayed thetokens horizontally, whether as a flowing text oras separated tokens, Hebrew is written right-to-left, while English is written left-to-right, so avertical display, as done by (Grimes et al., 2010)for an Arabic-English alignment, makes moresense: both languages can be read top to bottom.The Hebrew tokens are grouped by the humanaligner into token sets, and these token sets forma partition over all the Hebrew tokens.
The sameis true for the English tokens.
Hebrew token setscan then be aligned with English token sets.
Inaddition, in token sets with two or more tokens,the human aligner can optionally declare preciselyone token in the token set to have primary statusif it is most basic to the token set on a semanticlevel.
For example, in Figure 1, the Hebrew word?????
(?wicked?)
is linked to an English token setconsisting of two tokens: the and wicked.
Thealigner has correctly identified wicked as theprimary token in this English token set.
In tokensets containing just one token, the one tokenalways has primary status.Alignment visualizations using lines can bedifficult to process if the word order differssharply between the source text and its translation.In order to combat this issue, a key innovation ofthis tool is that blank rows are inserted at times onboth the source and target sides.
The blank rowsare inserted in such a way that the number ofstraight, horizontal lines linking source token setsto target token sets is maximized.
That is, themaximum possible number of aligned token setsare aligned horizontally.
Subject to this constraint,blank rows are inserted so as to minimize the sumof the length of the vertical components of thelines, including both the lines joining multipletokens into a token set and the lines indicatinglinks between source and target token sets.
Whenthe user changes the alignment, which is doneprimarily using drag-and-drop, the toolimmediately recalculates the optimal blank rowsand redraws if necessary, all the while remainingresponsive.
While multiple formats are supportedfor exporting the alignment data, all of the data isimported into memory during application startup.This requires more updating of complex internal81data structures during execution than if anexternal database were used, but the approachtaken here supports responsiveness.
Decidingwhere to put the blank rows is analogous to themore familiar problem of finding the weightedminimum edit distance between two strings withbacktrace and thus can be done using the Wagner?Fischer algorithm, a dynamic programmingalgorithm that is O(mn) in both time and memory,where m and n are the number of source and targettokens (Wagner and Fischer, 1974).
In addition,the tokens in token sets are connected via lines.For example, in Figure 1, the English tokens the,counsel, and of are connected together with lines.So as to avoid visual clutter, the line linking thisEnglish token set to the Hebrew meets at theprimary token in the token set.
If there is noprimary token in the token set, a centrally locatedtoken is chosen instead.The Alignment Panel uses fifteen different,easily distinguishable colors that still show upwell on computer monitors for both tokens andlines to make it immediately clear which tokensare linked to one another.
A few extremelycommon function words as well as pronominalsuffixes in the source language always get aconsistent color when they are linked.
These arethe tokens that cause Hebrew words often tocontain multiple tokens.
For the rest of the tokens,the colors are selected in such a way so as to avoidhaving similar colors near each other and to keepthe colors as stable as possible as the user changesthe alignment.
In token sets containing multipletokens, primary tokens are bolded.When aligning modern languages, one mightbe able to assume that the aligners are fluent inboth languages.
However, when dealing withancient languages or ancient dialects withrelatively small corpora, language helps are anecessity in order to allow the aligner to workquickly.
On the source language side, the Hebrewlemmas and morphology codes from WHM arepresented to the aligner.
The Hebrew lemmas arepresented closest to the center rather than thesurface forms simply because dividing multi-token Hebrew surface forms would lookorthographically inappropriate and would beslower for the human aligner to process.
For mostlanguages the surface form should be presentedclosest to the center.
A literal yet contextual glossof the Hebrew token is also presented.
Theseglosses were produced by Thom Blair using aseparate software tool we wrote; they weredesigned for use in (Hebrew-English Interlinear,2013).
The English lemmas to which the Hebrewlemma has been linked elsewhere are also listed.To be listed, both the Hebrew lemma and theEnglish lemma must have primary status.
Whenthere are multiple such English lemmas, they arelisted in order of frequency of being linked.
Thetarget language side mirrors some of the sourcelanguage side but is less extensive since weassume the aligner is fluent in English.
TheEnglish lemmas were initially produced usingStanfordCoreNLP (Toutanova et al., 2003, deMarneffe et al., 2006), with post-processing usedto fix errors.
The human aligner can edit them incase of errors.Figure 1.
Alignment Panel822.2 Other panels aiding quality andconsistencySeveral other panels, shown in Figures 2-4, aredesigned to enable the aligner to check thealignment for quality and consistency.Figure 2.
Source Detailed PanelFigure 3.
Source Overview PanelFigure 4.
Consistency PanelThe Source Detailed Panel gives detailedinformation about the alignment for eachoccurrence of a lemma in the source text in asortable table.
In order to aid the aligner, the thirdcolumn shows a form of the English gloss that hasbeen shortened, usually to a single lemma, bymaking use of WHM?s morphology informationand WordNet.
The Target Detailed Panel is similar.The Source Overview Panel briefly presentsinformation concerning how all source tokens arealigned in a sortable, filterable table.
The glossesshown are the short forms and are sorted based onfrequency.
Similarly, the translations are primarylemmas only and are sorted according tofrequency.
The Target Overview Panel is similar.The Consistency Panel is oriented towardenforcing the consistency standards.
It uses WHMas well as information from StanfordCoreNLP,including the syntactic dependency tree, to lookfor probable deviations from the project?sconsistency standards.
It can fix some errorsautomatically if the human aligner allows it, butthe human aligner is not required to follow itssuggestions since it sometimes make mistakes,especially when the syntactic dependency treefrom StanfordCoreNLP contains errors.3 Conclusions and future workThe alignment tool is enabling a fast productionof a high-quality, consistent gold-standardalignment between the Hebrew Bible and anEnglish translation because of the way it providesan easy-to-process visualization of the alignment,provides options for aligners to dig deeper into thedata and check their work, and makes changingthe alignment easy.
At present, the alignment toolis an in-house tool geared toward two specifictexts, but with the exception of the consistencyrules, which will be specific to particularlanguages and projects, it could be generalized toalign other texts and languages.
At that point, thegeneralized alignment tool could be licensedliberally to researchers.AcknowledgmentsThe work presented in this paper has been fundedby Crossway Books.
The author would like tothank James Covington for his input.83ReferencesLars Ahrenberg, Mikael Andersson, Magnus Merkel.2002.
A System for Incremental and InteractiveWord Linking.
In Proceedings of the 3nd LanguageResources and Evaluation Conference (LREC 2002),Las Palmas, Spain.
ELRA.Lars Ahrenberg, Magnus Merkel, and MichaelPetterstedt.
2003.
Interactive Word Alignment forLanguage Engineering.
In Conference Companionof the 10th Conference of the European Chapter ofthe Association for Computational Linguistics(EACL 2003), pages 49-52, Budapest, Hungary.ACL.Hal Daume III.
HandAlign Documentation.http://www.umiacs.umd.edu/~hal/HandAlign/.Victoria Fossum, Kevin Knight, and Steven Abney.2008.
Using Syntax to Improve Word AlignmentPrecision for Syntax-Based Machine Translation.
InProceedings of the Third Workshop on StatisticalMachine Translation, pages 44-52, Columbus, Ohio.ACL.Alexander Fraser and Daniel Marcu.
2007.
MeasuringWord Alignment Quality for Statistical MachineTranslation.
Computational Linguistics, 33(3), 293-303.Ulrich Germann.
2007.
Two Tools for Creating andVisualizing Sub-sentential Alignments of ParallelTexts.
In Proceedings of the Linguistic AnnotationWorship, pages 121-124.
Prague, Czech Republic.ACL.Ulrich Germann.
2008 Yawat: Yet Another WordAlignment Tool.
Proceedings of the ACL-08: HLTDemo Session (Companion Volume), pages 20-23.Columbus, Ohio.
ACL.Stephen Grimes, Xuansong Li, Ann Bies, Seth Kulick,Xiaoyi Ma, and Stephanie Strassel.
2010.
CreatingArabic-English Parallel Word-Aligned TreebankCorpora at LDC.
In Proceedings of the 7thInternational Language Resources and EvaluationConference (LREC 2010), Valletta, Malta.
ELRA.Hebrew-English Interlinear ESV Old Testament:Biblia Hebraica Stuttgartensia (BHS) and EnglishStandard Version (ESV).
2013.
Wheaton, Il.Crossway.Quoc Hung-Ngo and Werner Winiwarter.
2012.
AVisualizing Annotation Tool for Semi-Automatically Building a Bilingual Corpus.
InProceedings of the 8th International LanguageResources and Evaluation Conference (LREC 2012),pages 67-74, Istanbul, Turkey.
ELRA.Patrik Lambert, Simon Petitrenaud, Yanjun Ma, andAndy Way.
2012.
What types of word alignmentimprove statistical machine translation?
MachTranslat 26, 289?323.Nitin Madnani and Rebecca Hwa.
2004.
The UMIACSWord Alignment Interface.http://www.umiacs.umd.edu/~nmadnani/alignment/.Marie-Catherine de Marneffe, Bill MacCartney, andChristopher D. Manning.
2006.
Generating TypedDependency Parses from Phrase Structure Parses.
InProceedings of the 5th International LanguageResources and Evaluation Conference (LREC 2006),pages 449-454, Genoa, Italy.
ELRA.I.
Dan Melamed.
1998.
Manual Annotation ofTranslational Equivalence: The Blinker Project.IRCS Technical Report #98-07.
The University ofPennsylvania.Magnus Merkel, Michael Petterstedt, and LarsAhrenberg.
2003.
Interactive Word Alignment forCorpus Linguistics.
In Proceedings of CorpusLinguistics 2003, 533-542, Lancaster University,United Kingdom.
UCREL technical paper 16.Noah A. Smith and Michael E. Jahr.
2000.
Cairo: AnAlignment Visualization Tool.
In Proceedings ofthe 2nd Language Resources and EvaluationConference (LREC 2000), Athens, Greece.
ELRA.James Strong.
1890.
The exhaustive concordance ofthe Bible: showing every word of the text of thecommon English version of the canonical books,and every occurrence of each word in regular order:together with A comparative concordance of theAuthorized and Revised versions, including theAmerican variations:  also brief dictionaries of theHebrew and Greek words of the original, withreferences to the English words.
Cincinnati:Jennings & Graham.J?rg Tiedemann.
2006.
ISA & ICA ?
Two WebInterfaces for Interactive Alignment of Bitexts.
InProceedings of the 5th International Conference onLanguage Resources and Evaluation (LREC 2006),pages 2154-2159, Genoa, Italy.
ELRA.Kristina Toutanova, Dan Klein, Christopher D.Manning, and Yoram Singer.
2003.
Feature-RichPart-of-Speech Tagging with a Cyclic DependencyNetwork.
In Proceedings of the 2003 Conference ofthe North American Chapter of the Association forComputational Linguistics on Human LanguageTechnology, pages 173-180, Edmonton, Canada.ACL.Emmanuel Tov.
1986.
A Computerized Data Base forSeptuagint Studies: The Parallel Aligned Text of theGreek and Hebrew Bible.
Computer Assisted Toolsfor Septuagint Studies (CATSS) Vol.
2.
Journal ofNorthwest Semitic Languages Supplement Series 1.Stellenbosch.84Robert A. Wagner and Michael J. Fischer.
1974.
TheString-to-String Correction Problem.
Journal of theAssociation for Computing Machinery, 21(1): 168-173.85
