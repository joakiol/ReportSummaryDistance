AN IBM-PC ENVIRONMENT FOR CHINESE CORPUS ANALYS ISRobert Wing Pong LukDepartment ofChinese, Translation and Linguistics, City Polytechnic of Hong KongEmail: CTRWPL92@CPtlKVX.BITNETABSTRACTThis paper describes a set of computerprograms for Chinese corpus analysis.
These programsinclude (1) extraction of different characters, bigramsand words; (2) word segmentation based on bigram,maximal-matching and the combined technique; (3)identification of special terms; (4) Chineseconcordancing; (5) compiling collocation statistics and(6) evaluation utilities.
These programs run on the IBM-PC and batch programs co-ordinate the use of theseprograms.L INTRODUCTIONCorpus analysis utilities are developed andwidely available for English.
For example, tbe OxfordConcordance program is available for over 10 kinds ofmainframe computer (Hockey and Martin, 1987) andthe Longman mini-concordancer (Trible and Joncs,1990) is available for the sales.
Further enhancement ofthese utilities include compiling collocation statistics(Smadja, 1993) and semi-automatic gloassaryconstruction (Tong, 1993).
Current research as focusedon bilingual corpora (Gale and Clmrch, 1993) with thealignment of parallel-text becomeing an importanttechnical problem.
However, there has been littledevelopment of corpus analysis tools for Chinese.
Sinceusing Chinese fiJr compnters has only become moregenerally availablein the last ten years, analysis utilitiesfor Chinese are not widely.
Although no integratedenvironment is available for Chinese corpus analysis,many specific analysis programs have been reported inthe literature (Kit et al, 1989; Tong et al, 1993; Changand Chen, 1993; Zhou et al, 1993).
A Chineseconcordance program a,~d a clmractcr-list extractionprogram are freely available from a Singapore (FTP)network site (Guo and Liu, 1992).
tlowever, theprograms run in the SUN workstations while manyusers, particularly non-computing experts, interact withan IBM-PC in Chinese, rather than a SUN workstation.Tile rapid adwmce of microcomputers hasmitigated many storage and processing speed problcms.As for storage, the hard disk capacity can reach as highas 340M bytes which is adequate in comparison with tiledemand for a corpus (8M bytes from the PH corpus) anda dictionary (10M bytes).
Using a 486 processor, tileprocessing speed is acceptable if the user expect data tobe analyzed over-night, similar to submilting a batch jobto a mainframe computer.
For example; the utililies weare developing ranked around 42,000 words in a fewminutes and produced about one-hundred lines ofkeyword-in-context in a few seconds for a 4 millioncharacter Chinese corpus.This paper describes our effort to developcorpus analysis programs for Chinese.
Tile programs arewritten in Turbo C++, implemented on an IBM-PC(486) with a 120M byte hard disk.
The programs aredivided into several types:a. format conversion program(norm.exe, phseg.exe, wform.exe)b. extraction of characters, bigrams and words(exsega.exe, xsegmi.exe,bigram.exe,miana.exe, worddh.exe, wral'~ka.exe,wlranka.cxe)c. word segmentation programs(bisegl.exe, whash.exc, bimaxn.exe)d. concordaucing programs(kwic.exe, kwicw.exe)e. collocation statistics programs(cxtract.exe, cxtractw.exe, cxstat.exe,cxstatw.exe)f. gcncral (evaluation) programs(wcomp.exe, scgperf.exe)To run these analysis utilities, a Chinesecomputing environment called Eten nmst be set up;otherwise Chinese characters cannot be displayed orentered.
Since there are many different Chinesecharaclers (i.e.
13,000) compared with Westernlanguages, cach Chincse charactcr is specified by twobytes instead of one.
llowcver, many docmuent includesboth single-byte characters and two-byte Chinesecharacters .
Tiros, tile convers ion  progra ln ,  norl l l .exe, isused to convcrt all the single--byte characters (i.e.A..Z,a.. z..... :,;, {,~L#,$,%,^,&, *, ( ),-,+,=,l,\,/,<,>,', {, }, 1,1,0..9, ~, <space>, _ and ") i,~to their corresponding two-byte equivalent, for simplicity.
For example, the-single-byte character "a" is converted to "~ " (2-byte).
Thisprogram also changes tile docmnent iulo a clause orphrase format, using the -e option, where a new line isinserted after a punctuation mark (e.g.
comma or fidlstop):--Jt,/kPq'q~-I ~..l~\]-I~Jt, l l 'q,~ ~b~ ~/ff ~'~ ,;'IIM/~L~I:H~i~j~ ~-~e,) l ,Figure 1 : Exlraet of file llong Kong Basic l~aw in clause format.584If the text are segmented into words by space or"/" markers, it is possible to change or delete thesemarkers using the -s option.
Once, the document iscotwerted into two-byte format using norm.axe, theother utilities can be used.
Batch programs can bewritten to use these utilities.
For example, tile followingbatch program extracts different characters, performsbigram segmentation, extracts different words andobtain only the top 10% of the extracted words forcompiling key-word in contexts and collocationstatistics.norm -t %1 -o carp.trap -e 2 -s 5/" 1-byte to 2-byte; phrase format; delete space */exsegs -t carp.trap -w 2 -b 0/* extract different charaotsrs and bigrams =1bigram-m 101" sort bigram and extract top 10% */bisagl/" segment using the top 10% bigrams ' /wotddh1= extract different words =/wranka-m 101" sort and extract top 10% words "1kwic -t carp.trap -k words.cut > kwie.lst\[* concordancing on the top 10% words ' /cxtract1" extract different characters from contexts "/oxstat/" compile collocation statistics '1IL EXTRACTION PROGRAMSThe extraction progranls assume that the text isnot segmented.
Thus, norm.axe should be used toremove markers fi'om the seglnented text.The programs, exsega.exe and exsegmi.cxe,extract different characters and their co-occurringcharacters, stored in cfreq.tmp (Fig 2) andbifile/mifile.tnlp, respectively.
The first program obtainsthe co-occurrence frequencies while the second obtainsthe inutnal infornmtion.
By default, tbe programs do notcount punctuation but this can be override using the -aoption, The different characters can be supplementedwith information about their frequencies, pcrce,ltagcsand clunnlative percentages if the -w option is set to 2.~~?d 909 3.529 3.5 1I~J/ 905 3.513 7.0 2~'-.f/ 789 3.063 10.1 '3i'12/ 647 2.512 12.6 4~1~/ 645 2.504 15.1 5~J:/ 630 2.446 17.6 6Figure 2: Part of tile extracted single characters from the I longKong Basic latw.
The characters are ranked by theirfrequencies.
The first number is the fi'equency, followed bythe percentage, cumulative percentage and rank number.By default, all tltc different ch:lracters arestored.
However, sometimes only tile most frequently orinfrequently occurring characters are interestingcandidates for filrther investigation (e.g.concordaucing).
The user can select characters by theirfrequencies (i.e.
- f  and -g options), the top or bottomN% (i.e.
-m and -n options), their ranks (i.e.
-r and -soptions) and by their frequencies above two standarddeviations phlS the mean (Smadja, 1993) (i.e.
-z option).By default, the extracted bigrams havefrequencies above unity but this can be override usingthe -b option.
The bigrams stored can be sortedaccording to their frequencies or their mutualinformation in descending order using bigram.exe andmiens.axe, respectively.
The sorted bigratns are storedin bifile.rnk or mifile.rnk.
The user can select differentbigrams using options available for exseg programs (i.e.-f, -g, -m, -n, -r, -s and -z options).
Both programs givethe frequency distribution of the bigram frequencies andthe log of their freqnencies.
The selected bigrams willbecome usefid for detecting componnd nouns or wordsegmentation (Zhang et el., 1992).Given the text is segtnented by "/" markers(space markers can be converted using norm.exe),worddh.exe can extract all the different words from thetext and compute word frequencies.
The programextracted 42,613 words from the PIt corpus.
There is nolimit to the number of different words that it can extractbut it needs some disk space to hold temporary files.
Theextracted words are stored in words.lst and they aresorted in descending frequencies using wranka.exe, hiaddition, wlranka.exe sorts the extractcd words firstly byword length and secondly by their frequencies.
This isparticularly usefid to examine compound notms,technical terms and translated words as they tend 10 belong.
Furthermore, the segmentation program,whash.exe, needs the words to be order by their length.111.
WORI) SEGMENTATION PROGRAMSUnlike English, Chinese words are notdelimited by any tentative markers like spaces althoughChinese clanses are easily identified (Fig 1).
Manysegmentation programs were proposed (Chiang et el,1993; Fan and Tsai, 1988).
We have re-implemented then~axinml-matchillg technique (Kit et al 1989) using aword list, L, because it is simple to program andachieved one of the best segmentation performance (I-2% error rate).
However, the segmentation accuracy isdegraded significantly (to 15% error rate in (Luk,1993)) when the text has many compotmd notms andtechnical terms since the accuracy depends on thecoverage of L. A word segmentation program usingbigrams as well as combining bigrams and maximal-matching was subsequently developed.The basic idea of tnaximal-nlalching is tomatch the input clause from left-to-right with entries inthe given word list, L. If there is more than one matches,the longest entry is selected.
The process iterates withthe remaining clause at the end with the clause matchedwith the longest entry.
Apart from luaxilnal-matching,585whash.exe divides and output the text in the clauseformat (Fig 2).
The file that holds the word list can bespecified using the -b option and the text using the -toption.
Tile word list should rank tile words, firstly, bytheir length in descending order (use wlranka) and,secondly, by their .frequencies.
Usually, the segmentedclauses are displayed on tile screen for visual inspectionafter which the ou'tput can be redirected using the >option (MS DOS 5.0 option).
The current whash.exeprogram can hold around 20,000 Chinese words in themain memory for segmentation but this is not largeenough for a general Chinese dictionary (Fu, 1987)which has about 54,000 entries.The bigram technique does not need anydictionary for segmentation.
This technique needs a setof bigrams extracted, from the text or from a generalcorpus.
Typically, tile top 10% of tile bigrams arecaptured and ranked according to their co-occurrencefrequencies (CF) or mutual information (MI).
This isdue to the fac that if tile distributions of CF and MI arenormal, then the top 10% corresponds to the 10%significance level.
The distribution of MI lypically doesappear normal bnt not for CF.
The top N% bigranls arestored ill either bifile.cut or mifile.cut, The bigramsegmentation program, bisegl.exe, loads the bigramsusing the -b option.
A segmentation marker is placedbetween two characters in the text if the bigram of thesetwo adjacent characters does not appear in bifile.cut ormifile.cut.
This segmentation is the same as performingnearest-neighbour clustering of substrings (l,nk, 1993).The program detected many non-words depending on N.However, the number of non-words are significantlyreduced if we restrict o examining only the top N% (say10) of the frequently occurring words.Both maximal-umtching and bigranl techniqueswere combined, in order to detect words not in the wordlist and reduce tile amount of non-words detected (Luk,1993).
Maximal-matching is carried out first and thebigram technique is used to combine consecutive single-character words in the segmented text since words not inL are usually segmented into smaller ones by maximal-matching.
The test data shows that the combinedtechnique reduced tbe error rate by 33"/o and detected33% of the desired words not in L. The combinedtechinque is written as a batch program as follow:whesh -b wordlst .
txt-t  ext > text.trap/ '  maximal-match with existing word list "/bimaxn -t text.trap/" combine single-character words from segmented text "/worddh1" extract words from segmented text "/wlrenka -t words.lst/" rank words by their lengths ~/whash -b wordl.rnk -t text > text.res/" maximal-match with identified words "/IV.
CONCORDANCE PROGRAMSWe modified tile concordance program by Guoand Lin (1992) since tile program assumed that themain nlenlory can hold the entire corpus or text.
Instead,the modified program loads a portiou called a page intothe main memory and performs matching to find theappropriate contexts.
The page size can be changedusing file -p option but we fouud that tile programoperates well at -p 10000 (which is the default size).The modified programs, kwic.exe and kwicw.exe, canprocess files of size just over 2G bytes which is muchbigger than the hard disk.38 l,~Jt-)~ut?ll~l,:~l~, </ i l :~>~J J ;~t '~Tth~3 -Figure 3: The keyword-ln-context (kwlc) fi~m~at produced by kwie.exe.Note that the line ntm'tbers are on the left-most posilioes and the keywordis delimited by "<" and ">".A keyword file mnst be specified using the -koption and each keyword sltould be terminated by "/".The nunlber of characters in tile left and right contextscan be spccified in bytes, using file -1 and -r optionsrespectively.
I f-n 0 is specified then lille numbers willappear on the left.
There are additional options forindexing in the original concordance programs but theseoptions are not important in tile current implementation.Tbe kwicw.exe deals with segmented text.
tlere, the -1and -r options specify the number of words in the leftand right contexts.
The length of each context (approx.1000 characters allocated) can hold 20 words assumingthat each word has 24 characters.V.
COMPILING COLLOCATION STATISTICSCollocation statistics (Fig 4) refers to tilefrequencies of each different words or characters atdifferent positions in the contexts of a keyword.
Thesefrequencies are usefid for detecting significantcollocation in English but these frequencies are tediousand error prone to conlpile by hand.
We have alsowritten programs lo compile these statistics lbr Chinesebut factorial analysis (l\]iber, 1993) still rem,'fins Io beimplenlcnlcd.Chinese concordancing is carricd out first toextract the relevant contexts.
The output ofconcordancing shonld be storcd in kwic.lst.
Theu,cxtractl.exe will extract all the different words in thecontext, using an FSM to decode the kwie format.
Theprogram sorts these words according to their fieqncncyof occurrence in the context.
The different words arestored in cxtract.crk and the user can select candidatesusing options as in exsega.exe Next, cxstat.exe compilethe frequencies of these different words at differeutpositions in the contexts.
The statistics are stored incxtract.sla.
For segmented text, kw~cw.exe, cxtractw.exeand cxsiaiw.exe are used instead.586kov =lgJ/<1~>/  \[ 711 0 0 0 0 O< 71> 0 0 0 0 0,fill I 501 5 6 9 2 O< O> 1 4 10 8 5~'/ \[ 241 a 7 1 2 1< o> 0 2 1 1 2~/  \ [181  o o 2 1 I<  O> 1 0 1 I 2Figure 4: Collimation statistics.
'rile dilli~rent words in the contexts aredisplayed on the left and flJe square brackets show tile frequency ofoccurrence in the context of the keyword.
The mlgle brackets indicate tileposition orthe key,.vord.Unlike Smadja (1993), the ke~vord rnay bepart of a Chinese word.
Thus, the program can compilestatistics about different prefixes, suffixes or stems of aChinese word.
This is particularly interesting foritwestigatiog translated terms and compound nouns.VL EVALUATION PROGRAMSTwo progranls were written to meastlre theperformance of word segmentation and wordidentification.
For segmentation, segperf.exe xaminestwo identical texts that were segmented by differentmettmds.
The program shows the amount ofsegmentation error, the number of clauses, the mmlberof clause th.
'lt are segmented correctly and the amount ofover- or under-segmentation.
Files of the segntentedtexts are specified by the -a and -m options.
The usercan inspect parallel clauses to examine individualdifferences in segmentation by setting the -d(diagnostic) option to 1.For word identification, wcomp.exe comparestwo sets of different word lists and determines theantount of word overlap.
The program shows thedistribution of word overlap for different length ofwords.
This is important since long words tend to becompound nouns thal are not in a general dictionary.Using the -i and -j options, the program saves wordsthat overlap and words that do not overlap, respectively.REFERENCESItlI~EI~,, D. (1993) "Co-occurrence patterns amongcollocations: a 1ooi Ibr corpus-based lexical knowledgeacquisition", Computational Linguistics, 19, n3, pp.531-538.CIIANG, C-H. AND C-D. CIII",N (1993) "Chinese t)art-of-speech tagging using an HMM", l'roceedingx of(2omputational Linguistics: Research and Applications,Xiamen, PRC, pp.
114-119.CmAN(;, T.tI., J.S.
CHAN(;, M.Y.
L~M AND K.Y.
Su(1993) "Statistical models for word segmentation andnnkown word resolution", Proceedingx ~" RO(;LING 1 /~93, pp.
123-146.FAN, C.K.
AND W.tI.
TSAI (1988) "Automatic wordidentification in Chinese sentences by the relaxationtechnique", Computer Processing of Chinese andOriental Languages, 4, nl, pp.
33-56.Fir, X-L. (1987)Xiandiao llanyu 7'unrun Cidian, WaiynJiaoxue Yu Yanjiu Pnblishing House: Beijing, PRC.GALE, W.A.
AND K.W.
CllUlml!
(1993) "A program foraligning sentences in bilingual corpora", ComputationalLinguistics, 19, nl, pp.
75-102.Guo, J.
AND }t.C.
LnI (1992) "PI!
- a Chinese corpus forpinyin-hanzi transcriplion", ISS Technical report 1R93~112-0, htstitute of Systems Science, Nalional Universilyof Singapore.HOCKI:,?, S. AND J. MAICnN (1987) "The Oxfordconcordance program version 2", Literary andLinguistic U, omlmtin?, , 19, nl, pp.
75--102.Krr, C., Y. l_,lu AND N. LIANt; (1989) "On methods ofChinese automatic word segmentation", Journal ofChinese Infi~rmation Processing, 3, n l, pp.
13-20.LIJK, R.W.P.
(1994) "Chinese word segmentation usingnmximal-matching and bigram techniques", submittedto ROCLING '94, Taiwan.TON(;, K. S-T. (1993)"From single parenl to bound-pairs: the secret fiR: of compuleresc", in PEMIIEI(TON R.AND "I'sAN(;, I'2.
S-C. (1993) Studies in Lexis, LangnageCentre, ltong Kong University of Science andTechnology, pp.
196-214.TONG, X., C. I\[UANG AND C. Guo (1993) "Example-based sense tagging of atoning Chinese text",Proceedings of the Workxho I) on Vein Large Corpora,ACL-93, Ohio Stale University, Cofimtbus, 22 June.SMA1)JA, 1:.
(1993) "Retrieving collocations from text:Xlracr', Computational Linguisticx, 19, n l, pp.
141-177.Tltll~lll.l', C. ANI)G. JONES (1990) Cotlcordattce in theclassroom, Suffolk: Longman.ZIIANG, J-S., ,q. CIII:N, Y. ZIIENG, X-Z.
Lit!
ANI) S-J.
KE(1992) "Automatic recognition of Chinese fifll namedepending on nmlliple corpus", Journal of Chine, seInformation Procexsinj4, 6, n3, pp.
7-15.Znou, M., 17;.
IIUANG AND J. YANG (1993) "CST'F:Chinese syntactic tagging tool with self-learningabilily", l'roceedin,w of Computational Linguistics:Research atut AptHicationx , Xianten, PRC, pp.
155-160.ACKNOWI) I ,GEMENTThanks to l)r. Webster Ibr correcting the grammaficalmistakes in this paper.5/47
