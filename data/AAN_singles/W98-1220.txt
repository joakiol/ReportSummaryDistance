//II///////IEvolution and Evaluation of Document Retrieval QueriesRobert Steele, David PowersDepartment ofComputer ScienceThe Flinders University of South Australiarsteele@cs.flinders.edu.au, powers@acm.org1.
IntroductionThis short paper introduces ome ideas for theapplication of Genetic Programming to the task ofproducing queries for the accurate retrieval ofdocuments on a particular topic of interest.
Thisapplication will involve expanding the initial querygiven by the user, using extra words that havevarious semantic relationships to the words of theoriginal query via the use of a system such asWordNet, and using Genetic Programming tooptimize how this expansion is done.
The aim is toproduce an optimal general template of expansion,that can be used for any particular query a user maymake.
The method suggested is one that will be usedto produce a search enhancer that can be used withexisting search engines.1.1.
DefinitionsFirstly, Genetic Programming (Koza, 1992; Koza1994) is a way of evolving a program that meetssome objective criteria, and is closely related toGenetic Algorithms (Goldberg, 1989).
With GeneticProgramming, the "programs" are represented asexpression trees consisting of operators at internalnodes of the tree eg.
plus, minus, and values, at theleaf (terminal) nodes of the tree.
The GeneticProgramming algorithm involves making apopulation of such expression trees (randomly atfirst), evaluating the fitness of each of the trees(done with some evaluation function defined by theapplication), and then creating a new population bycrossover or mutation of the fit individuals(crossover would involve choosing a random nodeand the subtree which starts with it, from tree A, andchoosing arandom node and the subtree which startsfrom it, from tree B, and interchanging these twosubtrees, to create two new tree expressions).Query expansion refers to adding more terms tothe original query.
For example, if a search engineuser made the query 'tree and paper' the querymight expand to '(tree or forest) and paper'.A semantic net, such as WordNet (Miller et al,1993), is a database of words and their variousrelationships.
So WordNet, given a particular word,will be able to tell you such things as its synonyms,antonyms, hyponyms and meronyms amongst manyother possibilities.
This will give the building blocksfor query expansion i this application.2.
Aims and DiscussionOur basic aim is to produce a search engineenhancement that is practical in an application suchas searching the World Wide Web.
This manifestsitself in two ways.First, the application requires no change to theunderlying search engine.
It uses the searchoperators of the underlying search engine, andsimply extends queries so that they will lead tohigher precision in the returned ocumentsSecond, the expression trees must be generic andshould be applicable to any particular user query.This contrasts with the use of Genetic Programmingto refine a particular oft-used query (Kratt, Petry,Buckles & Sadasivan, 1994) rather than produce ageneral template of expansion.The choice of Genetic Programming as themethod for the automatic refinement of the queryexpansion is supported in two ways: other learningmethods, select heir next search node based on asingle promising node.
With Genetic Programmingthe permutation makes use of a subeomponent(subtree) of a second promising node.
This should bebeneficial in this case, where some subtrees in thepopulation of expression trees will have a highindividual fitness.Moreover, in this application, the points in thesearch space are in fact programs (mappings fromthe user query to a useful query expansion) and sothis is well suited to the assumed 'program nature'of the objects in the search space that GeneticProgramming investigates.3.
MethodologyThe first point to note is that the optimized queryexpansion method will be evolved in a developmentphase, prior to everyday use of the searchenhancement.Steele and Powers 163 Evolu'~on, Evaluation of Document Retrieval QueriesRobert Steele and David Powers (I 998) Evolution and Evaluation of Document Retrieval Queries.
In D.M.W.
Powers (ed.
)NeMLaP3/CoNLL98: New Methods in Language Processing and ComputationaI N tural Language'Learning, ACL, pp 163-164.In constructing a Genetic Programming system,there are three basic variables that need to bedefined.Firstly, the internal nodes for the application.
Herethey will be either 'and', 'or', or 'not'.
The reasonfor this choice, is that these are the operators alreadycommonly available in search engines.Secondly, the leaf nodes must be chosen.
Herethey will be the words of the original query, andvarious related words produced by WordNet.
Theimportant feature of these, is that they will not befixed words, but rather of the form A, synonym(A)or hyponym(A) for example (where A is an originalsearch term), and it is this that allows the evolvedexpression trees to be applicable to any search thatmay be made.Thirdly, the fitness evaluation function isrequired.
Fitness in this case is determined by therelevance of the documents returned by a query.
Anumber of possible measures exist (Hatter, 1996);*frequency of original search word in document,*nearness of multiple search words in the fulldocument,*correct relative frequencies ofthe words desired,*cluster signatures can be used to indicate if theretrieved documents are similar to each other.Greater homogeneity is better..location and frequency of various related words,suggested by WordNet in the full document.The evaluation function will weigh up all the datathat can be extracted from the full returneddocuments, and weight according to which isdeemed the best indicator of relevance.4.
ImplementationA problem with development of the system is thatit will require the retrieval of many documents.
Forthis reason it is best to develop it off-line.
TheTIPSTER CD used at the TREC conferences,represents a good benchmark.
To make use of this,we will create a basic indexing system, similar tothose of existing search engines.This will involve creating a file for each word thatoccurs in the database (excepting very frequentwords, and possibly words that do not occur in anydocument more times than some threshold number),and storing in the file, a reference to each documentthe file occurs in, the corresponding frequency andits first location in the document.This simulated search engine will order theimportance of documents with the following rules:*Rf(A) = freq(A)/freq(most frequent word)-Rf( A and B ) = sqrt(R_f(A)*Rf(B))*R.f(A or B) = (Rf(A) + Rf(B))/2Steele and Powers*RI(A) -- (document length - first occurrence)/document length.RI(A and B) = sqrt(Rl(a)*Rl(B)).RI(A or B) = (RI(A) + RI(B))/2*R = Rf + bPdWhere Rf is the relevance based on frequency, RIis the relevance based on location, b is some weightand R is the overall relevance value.5.
ConclusionThis abstract describes the starting point of aproject we are undertaking on the evolution of usefulrules for search enhancement.
There are a number ofprobable advantages to using the approach givenabove, to produce a search enhancer.
Firstly, the useof Genetic Programming allows the discovery ofoptimal search expressions that would notnecessarily be intuitively chosen.
Secondly, thequery expansion methods produced will be general,so that they can be utilized in any particular querymade, and thereby much increases the generalusefulness of the system.
Thirdly, the system doesnot assume improvements in the underlying searchengine technology and so is more easily applied.Although the present query expansion method isstatic - that is, evolution stops on delivery due to thecost of on-line evolution, we are also developing lowcost ideas for continuing the evolution using cacheinformation, pre-fetch and post-fetch, therebyallowing dynamic user profiling.6.
ReferencesGoldberg, D.E.
(1989).
Genetic Algorithms in Search,Optimization and Machine Learning.
Addison-Wesley.Hatter, S.P.
(1996).
Variations in relevance assessments and themeasurement of retrieval effectiveness.
Journal of the AmericanSocie~for Information Science vol.47, no.
I, p. 37-49.Koza, J.
(1992).
Genetic Programming, On the Programming ofComputers by Means of Natnral Selection.
MIT Press.Koza, J.R. (1994).
Genetic Programming 2: Automatic Discoveryof Reusable Programs.
Bradford Book, MIT Press.Kraft, D.H., Petty, F.E., Buckles, B.P.
& Sadasivan, T. (1994).
Theuse of genetic programming to build queries for informationretrieval.
Proceedings of the First IEEE Conference onEvolutionary Computation, IEEE World Congress onComputational Intelligence (Cat.
No.94n~0650.2), p.2 vol.
(xx+xiv+862), 468-73 vol.LMiller, G.A., Beckwith, R., Felbaum, C., Gross, D.& Miller,K.(1993).
Introduction to WordNet: An On-line LexicalDatabase.
http ://www.cogsci.princeton.edu/-wn/.Petrie, C. (1997).
What is an Agent.'?.
Intelligent Agents Ill, AgentTheories, Architectures and Languages, ECAI'96 Workshop(A TAL) Proceedings.164 Evolution, Evaluation of Document Retrieval QueriesIIIIIIIIIIIIIIIIIIIIIIIIk
