AN ATN TREATMENT WH-MOVEMENTHans HaugenederSiemens AGZT ZTIOtto.Hahn.Ring 68 Mfinchen 83, West GermanyABSTRACTAn ATN-Parser is presented with emphasis onthe treatment of those phenomena which in theframework of transformational grammar are sub-sumed under the concept of WH-movement.
Theapproach taken tries to embed these constructionsinto an ATN grsmmar in a general, linguisticallymotivated and in terms of the ATN gr~mrn~rformalism descriptive way.
To accomplish this goalthe approach described incorporates the basicprinciples governing such constructions asformulated in the framework of the trace theoryroposed in the development of the Extendedtandard Theory (EST).
Thus a ,miffed treatmentfor both relative clauses and wh-questions isachieved.1 Overview1.1 The GrammarThe ATN-Language used is - except for someminor deviations which are not of importance here -in accordance with the one specified in \[BATES 78\]and covers the following subset of English:- the most frequent verb types for declarativeand imperative sentences and questions- direct and indirect WH-questions(for NPs, PPs, ADJPs, ADVPs)- direct and indirect Y/N-questions- sentential complements for verbsand nounsvarious types of relative clauses(complete, reduced...)infintive construction (including control verbswith subject and nonsubject control)conjunction of complete constituents of everysyntactic categorysubordinate clausesThe grammar is written in very compact way,making extensively use of merging techniques; itcomprises about 75 states and 170 arcs.The structure built by the grnmmar is cLui.tesimilar to the phrase structure trees usea mtransformational gr, mmar  on the S-structure level.
(See appendix for some examplesDStructures of that type seem to us very suited forfurther semantic interpretation, since they offer alevel of syntactic structure which both expresses~'~mmatical functions (which are defined~onfigurationally) and constituent structurefeatures which axe important for certain aspects oflogical form as e.g.
quantifier scoping.
Especially theuse of the device of traces (as a phonologically emptyphrase) allows for displaced elements to appear inthe phrase marker in their surface postion and atthe same time expresses the role which thiselement's original position plays in thecorresponding predicate-argument structure.1.2 The ParserThe parser itself is an active chart parser asdescribed in \ [KAPLAN 73\] and \ [KAY  73\]; a detaileddesciption of our implementation can be found in\[ENDERS et  al 82\].By combining an active chart, which representsall fully analyzed (sub)constituents (the passiveedges) and all incomplete partial derivations (theactive edges) with an agenda, which contains anexplicit representation of all further tasks to beprocessed, the chart parsing framework is especiallysuited for mul-ti-way analyses on syntacticly andlexically highly ambiguous input.Furthermore it offers a high degree of flexibilityin the use of various control-structures beyond theuniform ones like depth-first and breadth-first.
Thiscan be achieved by means of heuristic measures ofvarious types which are used for the weighting of thesingle tasks, thus being responsible for the orderingof the agenda.
Thereby several features of theparser such as closure and attachment features andpreference of certain readings not induced byattachment ambiguities can be varied effectivelyby simply modifying this weigthing function.There exist three versions of the parser differingin the strategy by which the grammar isprocessed:- a top-down version (which is the standardcase with ATNs)- a top-down version augmented with an auto-matic one-word look-ahead on PUSH-arcs41- a mixed bottom-up/top-down versionThe latter two versions which both demand somepre-rocessing of the grammar are clearly better interms of performance than the pure top-downversion.
They have about 75% of the memoryrequirements and need 80% of the cpu-time of thetop-down version.All three versions have been implemented inSiemens-Interlisp running on Siemens main-frames.
An implementation on a lisp machine is onthe way.2 Integrating WH-Movement into ATNGrammars2.1 The Descriptive Adequacy of ATNsATNs, though being a (computationally)powerful specification language for grammars arenot committed to a certain lingistic theory as statedcleary in \[WAHLSTER 79\].
This often leads togrammars in which various types of syntacticphenomena are treated descriptively inadequateand linguistically unfounded.
In the case of the wh-movement phenomena being discussed here, onehas to cope with the fact that the origin of thedisplaced element can be embedded in some deeperclausal constituent arbitrarily far away from itssurface position.
(For an example see figure 2. in theappendix !).
Sticking to the standard facilitiesoffered by ATNs  for constructions of that typeimplies the use of SEN'DR actions on PUSH-arcs orthe HOLD/V IR  mechanism in order to allow theinvolved subnets to communicste with each other.
IBut neither of the two possibilities can be viewedas a satifactory solution.
The former (pushingcertain register contents through possibly severalsubnets) burdens the gr~rnrnar wrlter with thetasks of controlling the use of the pushed registereither by using it in some network or by pushing itfurther down.
It thus puts extreme mphasis on theprocedural aspect of the grammar thus msk~ng itclumsy and hard to comprehend.
Therefore thisapproach can hardly be considered as a satisfactorysolution to the problem.The second possibility, namely the use of aglobal register environment and virtual arcs hasbeen introduced into the ATN framework in order tohandle displaced elements of the sort discussed here.In this mechanism the HOLD-action offers thefacility to put an analyzed constituent on the HOLD-list (a global additional stack).
Later on a VIR-arccan consume a constituent from the HOLD-list as ifit occured at the actual point in the input string.The necessity of the use of one of these twomechanisms is thereby only under theassumption, that the phrase structure to beproduced is thought to express the functionalrole played by an displaced element in some wayor the other.Thus the HOLDfV IR  facility and extensions of it asproposed in \[FININ 83\], though surely beingpreferable to the first possibility still misses toexpress the relevant syntactic restrictions andpermits violations of grammatical constraintsgoverning these constructions.Thus to us it seems worthwhile to incorporatewh-phenomena into ATN grammars on aconceptually higher and syntactically motivatedlevel.2.22.2.1Description of the ApproachWH-Movement in ESTBefore decribing the embedding of WH-movement into an ATN grammar a shortpresentation of the general principles of itstreatment in EST  is given.The fundamental feature of it is the use of antransformation (move wh-phrase) which moves awh-phrase of a nonverbal phrasal category into ansentence?initial non-argument position by adjoiningit to the COMP-node.
The moved phrase leavesbehind an empty phrase (its trace), which iscoindexed with the fronted wh-phrase.This fronting can be achieved in one step as inthe unbounded movement analysis or successivly asin the COMP- to -COMP analysis, yielding the sameresulting structure in both cases (ignoring theintermediate COMp-deminated traces).
The versionreflected in our approach is the unboundedmovement analysis as only the COMP-node finallydominating the wh-element is affected.2.2.2 The ATN-Treatment2.2.2.1 General IdeaThe basic idea in the proposed treatment of wh-construction is to let the parser build up phrasestructures containing unbound traces and bind thesetraces to the fronted wh-phrase when the entire wh-construction is accomplished.This task itself is divided into the following twosteps:.
The phrase structure trees built during theparse may contain unbound ~aces.
At thegrammar level this is achieved by adding JUMP-arcs to the grammar, which can accept emptyconstituents.
This means that you have JUMP-arcs parsing traces of type XP, which in thegr~mm~r are alternative arcs to thecorresponding PUSH XP-arcs (with XP otherthan VP).
Furthermore these arcs containcertain register actions responsible for buildingthe structures for the empty phrases.The possible locations of traces assubconstituents in the wh-constrnction phrasestructure depend on the restrictions described bythese JUMP-arcs when the grammar is applied42to the input.2.
On  the level where the phrase structure trees forwh-constructions are constructed a bindingprocedure tries to bind (i.e.
coindex) the frontedwh-phrase with its trace.Since this binding procedure is actually thecentral part of the mechanism its features aredescribed in more detail in the following section.2.2.2.2 The Binding ProcedureWhat  the binding procedure (BindWhTrace)actually does is to establish a mapping of a phrasestructure tree into another phrase structure tree,where the mapping is structure preserving in thesense that it does not alter the phrases' internalstructure.
The effect of the mapping is to establish acoindexing between a wh-phrase in COMP-positionand its trace in an argument position as shown inthe following diagram.
(S/(COMP(ADJP < +wh>)..)(S..(ADJP e)..))(S/(COMP(ADJP i < + wh > )--)(S-.
(ADJPi e)..))The coindexing itself is restricted by variousconstraining conditions.
These concern the morpho-syntactic,, functional and configurational features ofthe two phrases to be bound.So, for example the wh-NP "whom" in COMP-position can only be coindexed with an empty NPbearingthe grammatical function of direct object orprepositional object for example.
Furthermore thereare configurational constraints between the twocandidate phrases that have to be fullfilled, in orderto establish a proper binding as e.g.
the coordinatestructure constraint.
This constraint does not allowmovement of a phrase out of a conjunctive structurewhich, being applied to the binding procedure meansthat the coindexing may not take place in astructure where f~ is an empty constituent of thecategory XP'.
(S/(COMP (XP' < + wh > ).)..(XP(XP...I3..)
and (XP..).
)not ---->(S/(COMP(XP'i< + wh>).)..(XP(XP..Bi..)
and (XP..).
)Since the phrase structure built at the pointwhere the binding procedure is involved maycontain traces which are no su/table candidates fora proper binding (since they do not fullfiU theserestricting conditions) the procedure may notsucceed to establish a proper indexing.
That's whythe procedure can also be viewed as a functionreporting success or failure respectively, thus fil-tering out part of the structures btdlt so far.Furthermore even in the case of a proper bindingdone by the binding procedure the resulting phrasestructure trees may still contain unbound traces.Such structures however must be blocked accordingto two constraints which do not allow constituents inwh-question and relative clause structures to bemoved outside the entire phrase, which in terms ofthe coindexing means that they may not becoindexed with a constituent outside thesestructures.In the case of (headed) relative clauses this isruled out by the complex-NP constraint, which(stated in a simplified form) does not allow aconstituent ~ to be moved out of the followingstructure:(Np...N/(s/...R...))For questions an equivalent restriction isexpressed by the wh-island constraint, which doesnot allow a phrase ~ to be moved out of the followingstructure:(S/(COMP.. < + wh > )(S.-.fl--.
))Since the binding procedure does its work just onthis sort of phrase structure, namely the structuresproduced by the relative clause and the wh-question subnets, it can easily test these twoconstraints too, thus blocking all structures with norOper binding of the displaced wh-element or withftover unbound traces.Now the way in which this procedure isembedded in the gr~mmex should be clear.
It hasbeen incorporated into each POP-arc of a wh-construction subnet (i.e.
the relative clause and thewh-question subnet), where it is used as a test-predicate reporting whether the structure built sofar contains a proper binding with no unboundtraces left.
The actual binding is done as a side-effectof that predicate.
So the corresponding POP-arc lookHke this :(POP pro' (BindWhTrace pm)) I(With pro' derived from the phrase marker pm byIn terms of the grammar  used, a POP-arc for awh-construction network has the following form:(0.7 POP (GETR R)(BindWhTrace R))(Here R is the register containing the phrasestructure tree on which the binding procedureworks.
The first item in this arc is a weightassigned to it.
)43successful application of BindWhTrace)Thus POP-arcs with an additional test of the sortdescribed act as filters popping the form pro' only ifthis test has been sucessfully applied to thestructure pro.2.2.3 Interaction with the Treatment of ControlVerbsAs already mentioned our grammar also dealswith certain contol verb constructions.
These axelSO handled by a coindexing procedure whichnctions similar to the binding procedure.
It isinvoked on the POP-arc of the correspondingnetwork and tries - based on the lexical features ofthe control verb in the matrix clause - to coindex theabstract subject "Pro" with its controller, alsoreporting success or failure.In cases where this coindexing mechanism andthe binding procedure may affect the sameconstituent (as an example see f~gure 2. of theappendix) we have adopted the strategy of doing thewh-element binding before the control-indexing.This means that the controller-NP may alreadyhave assigned an index that actually is used for thecontrol indexing of Pro.
So in our example the finalstructure is constructed in the following way:S~COMI~NP < +wh>).
)(S-V~V p~rslladeJ(N1~)(S/.
(S(Np Pro).
))))wh-binding = = ~>S~COM~NPI< +wh > ).
)(.~(V~V persuade)(Nl~e)(si.
(S(Np Pro).
))))control binding = -"S~COMI~NPI< + wh >).)(S.
(VI~V persuade)(l~pie)(s/.
(S(Npl Pro).
))))The procedure is invoked at the same level,namely when a wh-construction is actually parsed(i.e.
whenever the syntactic rule is applied, whichcombines a wh-element with a phrase of thecategory S.) This roughly corresponds to the POP-arc ofa wh-construction subnet in our case.But in contrast to our approach where thebinding procedure acts on a constituent structurealready containing traces, Wehrli's bindingprocedure is activated by the absence of anobligatory slot in the functional structure.
Afterlocating such a slot an empty element is insertedboth into the functional and the constituentstructure with a suitable index.
So in his approachthe search for the argument position traces (whichin our approach is done by the parser by offeringdifferent phrase structures already containingtraces) is part of the binding procedtire.This, on the one hand has the advantage offocussing on the treatment solely in the bindingprocedure.
On  the other hand, it makes the~ rocedure considerably more complex, since it must e able to detect ambiguities I which in ourapproach are dealt with in the grammar rules.2.3.2.
PARSIFALThe second approach discussed here is the workby Marcus on wh-movement in his PARSIFALsystem \ [MARCUS 80\].
There the cyclic analysis ofwh-movement is adopted which, besides itslinguistic motivation \ [CHOMSKY 77\] is enforced bythe  s t ruc ture  of the  gr~mm~r interpreter.
Thereason for this lies in the fact that during theparsing of some embedded clause Se there is noaccess to any structure beyond this Se as at that timeit is the current cyclic node in the active node stack.So for example in a structure likeThis reflects the ordering of these twomechanisms in transformational gr~rnmRr  (namelythe move-wh transformation and the rules ofconstrual) ; thus the correct handling for a widevariety of structures involving both wh-movementand control constructions has been achieved.2.32.3.1Comparison to other ApproachesWehrli's GB-ParserIn this section the comparison with other parsersis limited to the discussion of the handling of wh-constructions only; thus this is not intended anoverall comparision of the parsers per se.One approach to the treatment of wh-constructions that lends itself well to a comparisoncan be found in Wehrlis's parser for French\[W'EHRL183\].
There a binding procedure is incor-porated as a separate module in a parser which intoto is based on the GB-framework \ [CHOMSK?
82\].
(S(COMP (NP'< + wh >))...(S, ...(NP ~ e) ...)...)at the moment  when the trace NP"  is parsed (i.e.created, dropped into the buffer and attached to Se)there is no access to the headed wh-NP  NP' thuspreventing the trace NP"  to be bound to it.
ThisThere may be several unfilled slots in thefunctional structure, in the matrix sentence asweU as in some embedded sentence.
This is forexample the case if the headed wh-phrase is a PPwhose attachment is ambiguous, as in:On  which day will John hold a speech?
(.with its "when"-reading "When will .... " and itstopic'-reading "On which topic will .... ")44r~blem is avoided, if the gr~mm~r rules create aMP-Node with a bound trace attached to it beforeanalyzing Se.
Thus the trace NP" can be bound to theheaded wh-NP via some intermediate COMP-attached traces, as for example via NP"  in thefollowing structure:(S(COMP (NP' i < + wh > ))--(S,(COMP(NP'i e)..(NP" e).).
)This mechanism is implemented by means of aspecial register, WH-comp, which in must behandled explicitly the grammar rules when creatingand binding traces.
Furthermore the status of thatregister (which can be set in the grammar to'utilized" and "not utilized") serves as a conditionfor triggering certain actions in the course of theanlysis of wh-constructions (such as thedeactivation of certain rule packets).
This from thegrsmmar writer's point of view seems to have someof the flavour and disadvantages of the SENDR-solution discussed before (section 2.1).The approach described so far however causesdifficulties in a productive class of constructions,where the trace to be analyzed is dominated by anNP  which also serves as the current cyclic nodemaking the headed wh-phrase inaccessible for thebinding of its trace as in constructions like:(S/(COMP(NP who ))(S is that (NP a portrait of e)))Tiffs problem is overcome by Marcus by means ofan ad hoc mechanism which exactly allows access toa headed wh-element in such constructions, whereasin our approach constuctions of both types arehandled in a uniform way.3 ConclusionThe approach described has from our experienceproved to be a useful step in the direction ofhandling wh-movement constructions in an ATNgrammar in a linguistically motivated way.
Theresulting gr'~tmrnar turned out to be moreperspicuous than a grsmmar dealing with thesephenomena with the standard ATN facilities (assketched in in section 2.1).The work described will be continued in threedirections.
First, we wil l  incorporate thistreatment of wh-constructions and othersyntactically motivated mechanisms (as forexample NP-movement) in a grammar for asubstantial subset of German.
Secondly, we willinclude further binding-mechanisms for variouskinds of anaphoric relationships.
Thirdly, we willexplore the possibility of embedding such conceptsinto the ATN language formalism.ACKNOWLEDGEMENTSThe implementation of the various versions ofthe parser and the grammar editor has been done incooperation with my (partly former) colleaguesReinhard Enders, Ludwig Schmid and BertramFronh6fer.REFERENCES\ [BATES 78\]Bates, Madelaine, "Theory and Practice ofAug-mented Transition Network Grsmmars", inBolc, Leonard (ed), Natural LanguageComunication with Computers, Berlin, 1978\ [BENNIS & GROOS 82\]Bennis, Hans, and Groos, Anneke, "DieRektions-Bindungs-Theorie: Neue Aspekte seitden 'Aspekten' Zeitschrift f~rSprachwissenschaft, 2 (19'82)\[CHOMSKY 77\]Chomsky, Noam, "On Wh-Movement', inCulicover, P. W., Wasow, Thomas, andAl~majian, Adrian (eds), Formal Syntax, NewYork, 1977\[CHOMSKY 82\]Chomsky, Noam, Lectures on Government andBinding, Dordrecht 1982l ENDERS et a182\]Enders, Reinhard, Fronh6fer, Bertram, Hau-neder, Hans, and Schmid, Ludwig,erlegungen zu einem A TN-C hart-Parser,Internal Report (Siemens), 1982\[FININ 83\]Finin, Timothy W., "An ATN ProgrammingEnvironment , in Bolc, Leonard (ed), The Designof Interpreters, Compilers, and Editors forAugmented Transition Networks, Berlin, 1983\ [GORZ 79\]G6rz, Gitnther, "ATN und Kontrollstrukturen",in Christaller, Thomas, and Metzing, Dieter(eds), Augmented Transition NetworkGrammatiken, Berlin, 1979\ [KAPLAN 73\]Kaplan, Ronald, "A GeneralProcessor", in Rustin, Randall (ed),Language Processing, New York, 1973SyntacticNatural\ [KAY  73\]Kay, Martin, '~rhe Mind System", in Rustin,Randall (ed), Natural Language Processing, NewYork, 1973\[MARCUS 80\]Marcus, Michell P., A Theory of SyntacticRecognition for Natural Language, Cam-bridge/MA, 198045\ [WAHLSTER 79\]Wahlster, Wolfgang, .
"ATNs und diesemantisch-pragmatische Steuerung derAnalyse undGenerierung natiirlicher Sprache',in Christaller, Thomas, and Metzing, Dieter(eds), Augmented Transition NetworkGrammatiken, Berlin, 1979\[V~E I .~  83\]Wehrli, Eric, "A Modular Parser For French", inProc.
8th IJCAI Karlsruhe 1983, Los Altos/CA,1983APPENDIX  A.
Sample  Parses8/COMP $PP3NP PRPIABOUT QOETIWHICHN/ADJP NOGR AOJ TOPICI IVERY IhlPORTANT/+WH NP VPt ~N AUX V PP3I I I 1JOHN /PERF TALK ?PP/ , ' /~PRP NPI ION NI8UNDA'Y'F{gure 1.
Parse tree for "About which very important topic has John talked on Sunday?
"8/COMP $NP2 /+~/H NP VPNP N PRON AUX V NP2/ , ,  I I \[ I IQOET N WOMAN HE /FUT PERSUADE eI IWHICH MAN8/COMP $/-WH NP2 VPPr'o AUX V NP\] I I/ - in f l  DATE PRONIHit4Figure 2.
Parse tree for "Which man's woman will he persuade to date him?
"46$/COMP S/-514 NP ~PN ~lJi( V NP NPI I I ~l /  BILL.
/PRES GIVE DET N DETI I IIRELPRONIM4ICHNIBOOK$/C0~ $NP2 /-M4 NP ~P'PRON At/4( V NP3 $/HE /PRE$ /NEG EXPECT PRON COIqP $HER /-WH NP3 ~PPro AU~I V NP2I I I.~ / - in f l  RE~ eFigure 3.
Parse tree for "Bill gives the woman a book which he does not expect her to read.
"47
