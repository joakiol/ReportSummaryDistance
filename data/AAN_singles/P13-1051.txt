Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 517?527,Sofia, Bulgaria, August 4-9 2013. c?2013 Association for Computational LinguisticsCoordination Structures in Dependency TreebanksMartin Popel, David Marec?ek, Jan S?te?pa?nek, Daniel Zeman, Zdene?k Z?abokrtsky?Charles University in Prague, Faculty of Mathematics and PhysicsInstitute of Formal and Applied Linguistics (U?FAL)Malostranske?
na?me?st??
25, CZ-11800 Praha, Czechia{popel|marecek|stepanek|zeman|zabokrtsky}@ufal.mff.cuni.czAbstractParatactic syntactic structures are noto-riously difficult to represent in depen-dency formalisms.
This has painful con-sequences such as high frequency of pars-ing errors related to coordination.
In otherwords, coordination is a pending prob-lem in dependency analysis of natural lan-guages.
This paper tries to shed somelight on this area by bringing a system-atizing view of various formal means de-veloped for encoding coordination struc-tures.
We introduce a novel taxonomy ofsuch approaches and apply it to treebanksacross a typologically diverse range of 26languages.
In addition, empirical obser-vations on convertibility between selectedstyles of representations are shown too.1 IntroductionIn the last decade, dependency parsing has grad-ually been receiving visible attention.
One ofthe reasons is the increased availability of depen-dency treebanks, be they results of genuine depen-dency annotation projects or converted automat-ically from previously existing phrase-structuretreebanks.In both cases, a number of decisions have to bemade during the construction or conversion of adependency treebank.
The traditional notion ofdependency does not always provide unambiguoussolutions, e.g.
when it comes to attaching func-tional words.
Worse, dependency representation isat a loss when it comes to representing paratacticlinguistic phenomena such as coordination, whosenature is symmetric (two or more conjuncts playthe same role), as opposed to the head-modifierasymmetry of dependencies.11We use the term modifier (or child) for all types of de-pendent nodes including arguments.The dominating solution in treebank design is tointroduce artificial rules for the encoding of coor-dination structures within dependency trees usingthe same means that express dependencies, i.e., byusing edges and by labeling of nodes or edges.
Ob-viously, any tree-shaped representation of a coor-dination structure (CS) must be perceived only asa ?shortcut?
since relations present in coordinationstructures form an undirected cycle, as illustratedalready by Tesnie`re (1959).
For example, if a nounis modified by two coordinated adjectives, thereis a (symmetric) coordination relation between thetwo conjuncts and two (asymmetric) dependencyrelations between the conjuncts and the noun.However, as there is no obvious linguistic in-tuition telling us which tree-shaped CS encodingis better and since the degree of freedom has sev-eral dimensions, one can find a number of distinctconventions introduced in particular dependencytreebanks.
Variations exist both in topology (treeshape) and labeling.
The main goal of this pa-per is to give a systematic survey of the solutionsadopted in these treebanks.Naturally, the interplay of dependency and co-ordination links in a single tree leads to seriousparsing issues.2 The present study does not try todecide which coordination style is the best fromthe parsing point of view.3 However, we believethat our survey will substantially facilitate experi-ments in this direction in the future, at least by ex-ploring and describing the space of possible can-didates.2CSs have been reported to be one of the most frequentsources of parsing errors (Green and Z?abokrtsky?, 2012; Mc-Donald and Nivre, 2007; Ku?bler et al, 2009; Collins, 2003).Their impact on quality of dependency-based machine trans-lation can also be substantial; as documented on an English-to-Czech dependency-based translation system (Popel andZ?abokrtsky?, 2009), 39% of serious translation errors whichare caused by wrong parsing have to do with coordination.3There might be no such answer, as different CS conven-tions might serve best for different applications or for differ-ent parser architectures.517The rest of the paper is structured as follows.Section 2 describes some known problems relatedto CS.
Section 3 shows possible ?styles?
for rep-resenting CS.
Section 4 lists treebanks whose CSconventions we studied.
Section 5 presents empir-ical observations on CS convertibility.
Section 6concludes the paper.2 Related workLet us first recall the basic well-known character-istics of CSs.In the simplest case of a CS, a coordinatingconjunction joins two (usually syntactically andsemantically compatible) words or phrases calledconjuncts.
Even this simplest case is difficult torepresent within a dependency tree because, in thewords of Lombardo and Lesmo (1998): Depen-dency paradigms exhibit obvious difficulties withcoordination because, differently from most lin-guistic structures, it is not possible to characterizethe coordination construct with a general schemainvolving a head and some modifiers of it.Proper formal representation of CSs is furthercomplicated by the following facts:?
CSs with more than two conjuncts (multi-conjunct CSs) exist and are frequent.?
Besides ?private?
modifiers of individualconjuncts, there are modifiers shared byall conjuncts, such as in ?Mary came andcried?.
Shared modifiers may appear along-side with private modifiers of particular con-juncts.?
Shared modifiers can be coordinated, too:?big and cheap apples and oranges?.?
Nested (embedded) coordinations are possi-ble: ?John and Mary or Sam and Lisa?.?
Punctuation (commas, semicolons, threedots) is frequently used in CSs, mostly withmulti-conjunct coordinations or juxtaposi-tions which can be interpreted as CSs with-out conjunctions (e.g.
?Don?t worry, behappy!?).?
In many languages, comma or other punctu-ation mark may play the role of the main co-ordinating conjunction.?
The coordinating conjunction may be a mul-tiword expression (?as well as?).?
Deficient CSs with a single conjunct exist.?
Abbreviations like ?etc.?
comprise both theconjunction and the last conjunct.?
Coordination may form very intricate struc-tures when combined with ellipsis.
For ex-ample, a conjunct can be elided while its ar-guments remain in the sentence, such as inthe following traditional example: ?I gavethe books to Mary and the records to Sue.??
The border between paratactic and hypotacticsurface means of expressing coordination re-lations is fuzzy.
Some languages can use en-clitics instead of conjunctions/prepositions,e.g.
Latin ?Senatus Populusque Romanus?.Purely hypotactic surface means such as thepreposition in ?John with Mary?
occur too.4?
Careful semantic analysis of CSs disclosesadditional complications: if a node is mod-ified by a CS, it might happen that it isthe node itself (and not its modifiers) whatshould be semantically considered as a con-junct.
Note the difference between ?red andwhite wine?
(which is synonymous to ?redwine and white wine?)
and ?red and whiteflag of Poland?.
Similarly, ?five dogs andcats?
has a different meaning than ?five dogsand five cats?.Some of these issues were recognized alreadyby Tesnie`re (1959).
In his solution, conjuncts areconnected by vertical edges directly to the headand by horizontal edges to the conjunction (whichconstitutes a cycle in every CS).
Many differentmodels have been proposed since, out of which thefollowing are the most frequently used ones:?
MS = Mel?c?uk style used in the Meaning-Text Theory (MTT): the first conjunct is thehead of the CS, with the second conjunct at-tached as a dependent of the first one, thirdconjunct under the second one, etc.
Coor-dinating conjunction is attached under thepenultimate conjunct, and the last conjunctis attached under the conjunction (Mel?c?uk,1988),?
PS = Prague Dependency Treebank (PDT)style: all conjuncts are attached under thecoordinating conjunction (along with sharedmodifiers, which are distinguished by a spe-cial attribute) (Hajic?
et al, 2006),4As discussed by Stassen (2000), all languages seem tohave some strategy for expressing coordination.
Some ofthem lack the paratactic surface means (the so called WITH-languages), but the hypotactic surface means are present al-most always.518?
SS = Stanford parser style:5 the first conjunctis the head and the remaining conjuncts (aswell as conjunctions) are attached under it.One can find various arguments supporting theparticular choices.
MTT possesses a complexset of linguistic criteria for identifying the gov-ernor of a relation (see Mazziotta (2011) for anoverview), which lead to MS. MS is preferred ina rule-based dependency parsing system of Lom-bardo and Lesmo (1998).
PS is advocated byS?te?pa?nek (2006) who claims that it can representshared modifiers using a single additional binaryattribute, while MS would require a more complexco-indexing attribute.
An argumentation of Tratzand Hovy (2011) follows a similar direction: Wewould like to change our [MS] handling of coordi-nating conjunctions to treat the coordinating con-junction as the head [PS] because this has fewerambiguities than [MS].
.
.We conclude that the influence of the choice ofcoordination style is a well-known problem in de-pendency syntax.
Nevertheless, published worksusually focus only on a narrow ad-hoc selection offew coordination styles, without giving any sys-tematic perspective.Choosing a file format presents a different prob-lem.
Despite various efforts to standardize lin-guistic annotation,6 no commonly accepted stan-dard exists.
The primitive format used for CoNLLshared tasks is widely used in dependency parsing,but its weaknesses have already been pointed out(cf.
Stran?a?k and S?te?pa?nek (2010)).
Moreover, par-ticular treebanks vary in their contents even morethan in their format, i.e.
each treebank has its ownway of representing prepositions or different gran-ularity of syntactic labels.3 Variations in representingcoordination structuresOur analysis of variations in representing coordi-nation structures is based on observations from aset of dependency treebanks for 26 languages.75We use the already established MS-PS-SS distinction tofacilitate literature overview; as shown in Section 3, the spaceof possible coordination styles is much richer.6For example, TEI (TEI Consortium, 2013), PML (Hanaand S?te?pa?nek, 2012), SynAF (ISO 24615, 2010).7The primary data sources are the following: AncientGreek: Ancient Greek Dependency Treebank (Bamman andCrane, 2011), Arabic: Prague Arabic Dependency Tree-bank 1.0 (Smrz?
et al, 2008), Basque: Basque DependencyTreebank (larger version than CoNLL 2007 generously pro-In accordance with the usual conventions, we as-sume that each sentence is represented by one de-pendency tree, in which each node correspondsto one token (word or punctuation mark).
Apartfrom that, we deliberately limit ourselves to CSrepresentations that have shapes of connected sub-graphs of dependency trees.We limit our inventory of means of expressingCSs within dependency trees to (i) tree topology(presence or absence of a directed edge betweentwo nodes, Section 3.1), and (ii) node labeling(additional attributes stored insided nodes, Sec-tion 3.2).8 Further, we expect that the set of pos-sible variations can be structured along several di-mensions, each of which corresponds to a certainsimple characteristic (such as choosing the left-most conjunct as the CS head, or attaching sharedmodifiers below the nearest conjunct).
Even if itdoes not make sense to create the full Cartesianproduct of all dimensions because some valuescannot be combined, it allows to explore the spaceof possible CS styles systematically.93.1 Topological variationsWe distinguish the following dimensions of topo-logical variations of CS styles (see Figure 1):Family ?
configuration of conjuncts.
We di-vide the topological variations into three maingroups, labeled as Prague (fP), Moscow (fM), andvided by IXA Group) (Aduriz and others, 2003), Bulgarian:BulTreeBank (Simov and Osenova, 2005), Czech: PragueDependency Treebank 2.0 (Hajic?
et al, 2006), Danish: Dan-ish Dependency Treebank (Kromann et al, 2004), Dutch:Alpino Treebank (van der Beek and others, 2002), English:Penn TreeBank 3 (Marcus et al, 1993), Finnish: Turku De-pendency Treebank (Haverinen et al, 2010), German: TigerTreebank (Brants et al, 2002), Greek (modern): Greek De-pendency Treebank (Prokopidis et al, 2005), Hindi, Ben-gali and Telugu: Hyderabad Dependency Treebank (Husainet al, 2010), Hungarian: Szeged Treebank (Csendes et al,2005), Italian: Italian Syntactic-Semantic Treebank (Mon-temagni and others, 2003), Latin: Latin Dependency Tree-bank (Bamman and Crane, 2011), Persian: Persian Depen-dency Treebank (Rasooli et al, 2011), Portuguese: Florestasinta?
(c)tica (Afonso et al, 2002), Romanian: Romanian De-pendency Treebank (Ca?la?cean, 2008), Russian: Syntagrus(Boguslavsky et al, 2000), Slovene: Slovene DependencyTreebank (Dz?eroski et al, 2006), Spanish: AnCora (Taule?et al, 2008), Swedish: Talbanken05 (Nilsson et al, 2005),Tamil: TamilTB (Ramasamy and Z?abokrtsky?, 2012), Turk-ish: METU-Sabanci Turkish Treebank (Atalay et al, 2003).8Edge labeling can be trivially converted to node labelingin tree structures.9The full Cartesian product of variants in Figure 1 wouldresult in topological 216 variants, but only 126 are applicable(the inapplicable combinations are marked with ???
in Fig-ure 1).
Those 126 topological variants can be further com-bined with labeling variants defined in Section 3.2.519Main family Prague family (code fP)[14 treebanks]Moscow family (code fM)[5 treebanks]Stanford family (code fS)[6 treebanks]Choice of headHead on left (code hL)[10 treebanks]dogsand,  cats rats dooooogsanoos, oocsantrnHead on right (code hR)[14 treebanks]Mixed head (code hM) [1 treebank] A mixture of hL and hRAttachment of shared modifiersShared modifierbelow the nearest conjunct(code sN)[15 treebanks]Shared modifier below head(code sH)[11 treebanks]dogsdogsaaan, caaaaataaaaaarocaaaaaocondogs an, cct dodogsan, cctoraoodogsaaan, caaaataaaarocaaaonocAttachment of coordinating conjunctionCoordinating conjunctionbelow previous conjunct (code cP)[2 treebanks]?dogsand,, acst,,racs dooooogsanoooooooooo,sanctnsrCoordinating conjunctionbelow following conjunct (code cF)[1 treebank]?dogssadn,g c,adn,tssrdn,dog dooooogsanoooooooooo,sanctnsrCoordinating conjunctionbetween two conjuncts (code cB)[8 treebanks]?dogsand,  cats rats dooooogsanoos, oocsantrnCoordinating conjunction as the head (code cH)is the only applicable style for the Prague family [14 treebanks] ?
?Placement of punctuationvalues pP [7 treebanks], pF [1 treebank] and pB [15 treebanks] are analogous to cP, cF and cB(but applicable also to the Prague family)Figure 1: Different coordination styles, variations in tree topology.
Example phrase: ?
(lazy) dogs, catsand rats?.
Style codes are described in Section 3.1.Stanford (fS) families.10 This first dimension dis-tinguishes the configuration of conjuncts: in thePrague family, all the conjuncts are siblings gov-erned by one of the conjunctions (or a punctuationfulfilling its role); in the Moscow family, the con-juncts form a chain where each node in the chaindepends on the previous (or following) node; inthe Stanford family, the conjuncts are siblings ex-cept for the first (or last) conjunct, which is the10Names are chosen purely as a mnemonic device, so thatPrague Dependency Treebank belongs to the Prague family,Mel?c?uk style belongs to the Moscow family, and Stanfordparser style belongs to the Stanford family.head.11Choice of head ?
leftmost or rightmost.
Inthe Prague family, the head can be either the left-most12 (hL) or the rightmost (hR) conjunction orpunctuation.
Similarly, in the Moscow and Stan-ford families, the head can be either the leftmost(hL) or the rightmost (hR) conjunct.
A third op-11Note that for CSs with just two conjuncts, fM and fSmay look exactly the same (depending on the attachment ofconjunctions and punctuation as described below).12For simplicity, we use the terms left and right even iftheir meaning is reversed for languages with right-to-leftwriting systems such as Arabic or Persian.520tion (hM) is to mix hL and hR based on some cri-terion, e.g.
the Persian treebank uses hR for coor-dination of verbs and hL otherwise.
For the exper-iments in Section 5, we choose the head which iscloser to the parent of the whole CS, with the mo-tivation to make the edge between CS head and itsparent shorter, which may improve parser training.Attachment of shared modifiers.
Shared mod-ifiers may appear before the first conjunct or afterthe last one.
Therefore, it seems reasonable to at-tach shared modifiers either to the CS head (sH),or to the nearest (i.e.
first or last) conjunct (sN).Attachment of coordinating conjunctions.
Inthe Moscow family, conjunctions may be eitherpart of the chain of conjuncts (cB), or they may beput outside of the chain and attached to the previ-ous (cP) or following (cF) conjunct.
In the Stan-ford family, conjunctions may be either attachedto the CS head (and therefore between conjuncts)(cB), or they may be attached to the previous (cP)or the following (cF) conjunct.
The cB option inboth Moscow and Stanford families, treats con-junctions in the same way as conjuncts (with re-spect to topology only).
In the Prague family, thereis just one option available (cH) ?
one of the con-junctions is the CS head while the others are at-tached to it.Attachment of punctuation.
Punctuation to-kens separating conjuncts (commas, semicolonsetc.)
could be treated the same way as conjunc-tions.
However, in most treebanks it is treateddifferently, so we consider it as well.
The val-ues pP, pF and pB are analogous to cP, cF andcB except that punctuation may be also attachedto the conjunction in case of pP and pF (other-wise, a comma before the conjunction would benon-projectively attached to the member follow-ing the conjunction).The three established styles mentioned in Sec-tion 2 can be defined in terms of the newly intro-duced abbreviations: PS = fPhRsHcHpB, MS =fMhLsNcBp?, and SS = fShLsNcBp?.133.2 Labeling variationsMost state-of-the-art dependency parsers can pro-duce labeled edges.
However, the parsers produceonly one label per edge.
To fully capture CSs,we need more than one label, because there areseveral aspects involved (see the initial assump-13The question marks indicate that the original Mel?c?ukand Stanford parser styles ignore punctuation.tions in Section 3): We need to identify the co-ordinating conjunction (its POS tag might not beenough), conjuncts, shared modifiers, and punctu-ation that separates conjuncts.
Besides that, thereshould be a label classifying the dependency rela-tion between the CS and its parent.Some of the information can be retrieved fromthe topology of the tree and the ?main label?
ofeach node, but not everything.
The additional in-formation can be attached to the main label, butsuch approach obscures the logical structure.In the Prague family, there are two possibleways to label a conjunction and conjuncts:Code dU (?dependency labeled at the upperlevel of the CS?).
The dependency relation of thewhole CS to its parent is represented by the labelof the conjunction, while the conjuncts are markedwith a special label for conjuncts (e.g.
ccof in theHyderabad Dependency Treebank).Code dL (?lower level?).
The CS is representedby a coordinating conjunction (or punctuation ifthere is no conjunction) with a special label (e.g.Coord in PDT).
Subsequently, each conjunct hasits own label that reflects the dependency relationtowards the parent of the whole CS, therefore, con-juncts of the same CS can have different labels,e.g.
?Who[SUBJ] and why[ADV] did it?
?Most Prague family treebanks use sH, i.e.shared modifiers are attached to the head (coor-dinating conjunction).
Each child of the head hasto belong to one of three sets: conjuncts, sharedmodifiers, and punctuation or additional conjunc-tions.
In PDT, conjuncts, punctuation and addi-tional conjunctions are recognized by specific la-bels.
Any other children of the head are sharedmodifiers.In the Stanford and Moscow families, one ofthe conjuncts is the head.
In practice, it is never la-beled as a conjunct explicitly, because the fact thatit is a conjunct can be deduced from the presenceof conjuncts among its children.
Usually, the otherconjuncts are labeled as conjuncts; conjunctionsand punctuation also have a special label.
Thistype of labeling corresponds to the dU type.Alternatively (as found in the Turkish treebank,dL), all conjuncts in the Moscow chain have theirown dependency labels and the fact that they areconjuncts follows from the COORDINATION la-bels of the conjunction and punctuation nodes be-tween them.To represent shared modifiers in the Stan-521ford and Moscow families, an additional labelis needed again to distinguish between privateand shared modifiers since they cannot be distin-guished topologically.
Moreover, if nested CSsare allowed, a binary label is not sufficient (i.e.?shared?
versus ?private?)
because it also has toindicate which conjuncts the shared modifier be-longs to.14We use the following binary flag codes for cap-turing which CS participants are distinguished inthe annotation: m01 = shared modifiers anno-tated; m10 = conjuncts annotated; m11 = bothannotated; m00 = neither annotated.4 Coordination Structures in TreebanksIn this section, we identify the CS styles definedin the previous section as used in the primary tree-bank data sources; statistical observations (suchas the amount of annotated shared modifiers) pre-sented here, as well as experiments on CS-styleconvertibility presented in Section 5.2, are basedon the normalized shapes of the treebanks as con-tained in the HamleDT 1.0 treebank collection(Zeman et al, 2012).15Some of the treebanks were downloaded indi-vidually from the web, but most of them camefrom previously published collections for depen-dency parsing campaigns: six languages fromCoNLL-2006 (Buchholz and Marsi, 2006), sevenlanguages from CoNLL-2007 (Nivre et al, 2007),two languages from CoNLL-2009 (Hajic?
and oth-ers, 2009), three languages from ICON-2010 (Hu-sain et al, 2010).
Obviously, there is a certainrisk that the CS-related information contained inthe source treebanks was slightly biased by theproperties of the CoNLL format upon conversion.In addition, many of the treebanks were nativelydependency-based (cf.
the 2nd column of Table 1),but some were originally based on constituentsand thus specific converters to the CoNLL for-mat had to be created (for instance, the Span-ish phrase-structure trees were converted to de-pendencies using a procedure described by Civitet al (2006); similarly, treebank-specific convert-ers have been used for other languages).
Again,14This is not needed in Prague family where shared modi-fiers are attached to the conjunction provided that each sharedmodifier is shared by conjuncts that form a full subtree to-gether with their coordinating conjunctions; no exceptionswere found during the annotation process of the PDT.15A subset of the treebanks whose licenseterms permit redistribution is available directly athttp://ufal.mff.cuni.cz/hamledt/.Danish Romaniandogsan,  anctttr  attt,ddogsan,n           cntnrnsn     c,nHungariandogsadnnnn,nnnn ctrdadnnnnrncgdasdFigure 2: Annotation styles of a few treebanks donot fit well into the multidimensional space de-fined in Section 3.1.there is some risk that the CS-related informationcontained in treebanks resulting from such conver-sions is slightly different from what was intendedin the very primary annotation.There are several other languages (e.g.
Esto-nian or Chinese) which are not included in ourstudy, despite of the fact that constituency tree-banks do exist for them.
The reason is that thechoice of their CS style would be biased, becauseno independent converters exist ?
we would haveto convert them to dependencies ourselves.
Wealso know about several more dependency tree-banks that we have not processed yet.Table 1 shows 26 languages whose treebankswe have studied from the viewpoint of their CSstyles.
It gives the basic quantitative properties ofthe treebanks, their CS style in terms of the tax-onomy introduced in Section 3, as well as statis-tics related to CSs: the average number of CSs per100 tokens, the average number of conjuncts perone CS, the average number of shared modifiersper one CS,16 and the percentage of nested CSsamong all CSs.
The reader can return to Figure1 to see the basic statistics on the ?popularity?
ofindividual design decisions among the developersof dependency treebanks or constituency treebankconverters.CS styles of most treebanks are easily classifi-able using the codes introduced in Section 3, plusa few additional codes:?
p0 = punctuation was removed from the tree-bank.16All non-Prague family treebanks are marked sN andm00 or m10, (i.e.
shared modifiers not marked in the origi-nal annotation, but attached to the head conjunct) because wefound no counterexamples (modifiers attached to a conjunct,but not the nearest one).
The HamleDT normalization proce-dure contains a few heuristics to detect shared modifiers, butit cannot recover the missing distinction reliably, so the num-bers in the ?SMs/CJ?
column are mostly underestimated.522Language Orig.
Data Sents.
Tokens Original CS CSs / CJs / SMs / Nested RTtype set style code 100 tok.
CS CS CS[%] UASAncientGreek dep prim.
31 316 461 782 fP hR sH cH pB dL m11 6.54 2.17 0.16 10.3 97.86Arabic dep C07 3 043 116 793 fP hL sH cH pB dL m00 3.76 2.42 0.13 10.6 96.69Basque dep prim.
11 225 151 593 fP hR sN cH pP dU m00 3.37 2.09 0.03 5.1 99.32Bengali dep I10 1 129 7 252 fP hR sH cH pP dU m11 4.87 1.71 0.05 24.1 99.97Bulgarian phr C06 13 221 196 151 fS hL sN cB pB dU m10 2.99 2.19 0.00 0.0 99.74Czech dep C07 25 650 437 020 fP hR sH cH pB dL m11 4.09 2.16 0.20 14.6 99.42Danish dep C06 5 512 100 238 fS* hL sN cP pB dU m10 3.68 1.93 0.13 7.5 99.76Dutch phr C06 13 735 200 654 fP hR sN cH pP dU m10 2.06 2.17 0.05 3.3 99.47English phr C07 40 613 991 535 fP hR sH cH pB dU m10 2.07 2.33 0.05 6.3 99.84Finnish dep prim.
4 307 58 576 fS hL sN cB pB dU m10 4.06 2.41 0.00 6.4 99.70German phr C09 38 020 680 710 fM hL sN cP pP dU m10 2.79 2.09 0.01 0.0 99.73Greek dep C07 2 902 70 223 fP hR sH cH pB dL m11 3.25 2.48 0.18 7.2 99.43Hindi dep I10 3 515 77 068 fP hR sH cH pP dU m11 2.45 1.97 0.04 10.3 98.35Hungarian phr C07 6 424 139 143 fT hX sN cX pX dL m00 2.37 1.90 0.01 2.2 99.84Italian dep C07 3 359 76 295 fS hL sN cB pB dU m10 3.32 2.02 0.03 3.8 99.51Latin dep prim.
3 473 53 143 fP hR sH cH pB dL m11 6.74 2.24 0.41 12.3 97.45Persian dep prim.
12 455 189 572 fM*hM sN cB pP dU m00 4.18 2.10 0.18 3.7 99.82Portuguese phr C06 9 359 212 545 fS hL sN cB pB dU m10 2.51 1.95 0.26 11.1 99.16Romanian dep prim.
4 042 36 150 fP* hR sN cH p0 dU m10 1.80 2.00 0.00 0.0 100.00Russian dep prim.
34 895 497 465 fM hL sN cB p0 dU m10 4.02 2.02 0.07 3.9 99.86Slovene dep C06 1 936 35 140 fP hR sH cH pB dL m00 4.31 2.49 0.00 10.8 98.87Spanish phr C09 15 984 477 810 fS hL sN cB pB dU m10 2.79 1.98 0.14 12.7 99.24Swedish phr C06 11 431 197 123 fM hL sN cF pF dU m10 3.94 2.19 0.13 0.7 99.66Tamil dep prim.
600 9 581 fP hR sH cH pB dL m11 1.66 2.46 0.22 3.8 99.67Telugu dep I10 1 450 5 722 fP hR sH cH pP dU m11 3.48 1.59 0.06 5.0 100.00Turkish dep C07 5 935 69 695 fM hR sN cB pB dL m10 3.81 2.04 0.00 34.3 99.23Table 1: Overview of analyzed treebanks.
prim.
= primary source; C06?C09 = CoNLL 2006?2009;I10 = ICON 2010; SM = shared modifier; CJ = conjunct; Nested CS = portion of CSs participating innested CSs (both as the inner and outer CS); RT UAS = unlabeled attachment score of the roundtripexperiment described in Section 5.
Style codes are defined in Sections 3 and 4.?
fM* = Persian treebank uses a mix of fM andfS: fS for coordination of verbs and fM oth-erwise.Figure 2 shows three other anomalies:?
fS* = Danish treebank employs a mixture offS and fM, where the last conjunct is attachedindirectly via the conjunction.?
fP* = Romanian treebank omits punctuationtokens and multi-conjunct coordinations getsplit.?
fT = Hungarian Szeged treebank uses?Tesnie`re family?
?
disconnected graphs forCSs where conjuncts (and conjunction andpunctuation) are attached directly to the par-ent of CS, and so the other style dimensionsare not applicable (hX, cX, pX).5 Empirical Observations onConvertibility of Coordination StylesThe various styles cannot represent the CS-relatedinformation to the same extent.
For example,it is not possible to represent nested CSs in theMoscow and Stanford families without signifi-cantly changing the number of possible labels.17The dL style (which is most easily applicable tothe Prague family) can represent coordination ofdifferent dependency relations.
This is again notpossible in the other styles without adding e.g.
aspecial ?prefix?
denoting the relations.We can see that the Prague family has a greaterexpressive power than the other two families: itcan represent complex CSs using just one addi-tional binary label, distinguishing between sharedmodifiers and conjuncts.
A similar additional labelis needed in the other styles to distinguish betweenshared and private modifiers.Because of the different expressive power, con-verting a CS from one style to another maylead to a loss of information.
For example, as17Mel?c?uk uses ?grouping?
to nest CSs ?
cf.
related so-lutions involving coindexing or bubble trees (Kahane, 1997).However, these approaches were not used in any of the re-searched treebanks.
To combine grouping with shared modi-fiers, each group in a tree should have a different identifier.523there is no way of representing shared modifiersin the Moscow family without an additional at-tribute, converting a CS with shared modifiersfrom Prague to Moscow family makes the modi-fiers private.
When converting back, one can usecertain heuristics to handle the most obvious cases,but sometimes the modifiers will stay private (veryoften, the nature of a modifier depends on contextor is debatable even for humans, e.g.
?Young boysand girls?
).5.1 Transformation algorithmWe developed an algorithm to transform one CSstyle to another.
Two subtasks must be solved bythe algorithm: identification of individual CSs andtheir participants, and transforming of the individ-ual CSs.Obviously, the individual CSs cannot be trans-formed independently because of coordinationnesting.
For instance, when transforming a nestedcoordination from the Prague style to the Moscowstyle (e.g.
to fMhL), the leftmost conjunct in theinner (lower) coordination must climb up to be-come the head of the inner CS, but then it mustclimb up once again to become the head of theouter (upper) CS too.
This shows that inner CSsmust be transformed first.We tackle this problem by a depth-first recur-sion.
When going down the tree, we only recog-nize all the participants of the CSs, classify themand gather them in a separate data structure (onefor each visited CS).
The following four typesof CS participants are distinguished: coordinat-ing conjunctions, conjuncts, shared modifiers, andpunctuations that separate conjuncts.18 No changeof the tree is performed during these descent steps.When returning back from the recursion (i.e.,when climbing from a node back up to its par-ent), we test whether the abandoned node is thetopmost node of some CS.
If so, then this CS istransformed, which means that its participants arerehanged and relabelled according the the targetCS style.This procedure naturally guarantees that the in-18Conjuncts are explicitly marked in most styles.
Coordi-nating conjunctions can be usually identified with the help ofdependency labels and POS tags.
Punctuation separating con-juncts can be detected with high accuracy using simple rules.If shared modifiers are not annotated (code m00 or m10),one can imagine rule-based heuristics or special classifierstrained to distinguish shared modifiers.
For the experimentsin this section, we use the HamleDT gold annotation attributeis shared modifier.ner CSs are transformed first and that all CSs aretransformed when the recursions returns to theroot.5.2 Roundtrip experimentThe number of possible conversion directions ob-viously grows quadratically with the number ofstyles.
So far, we limited ourselves only to con-versions from/to the style of the HamleDT tree-bank collection, which contains all the treebanksunder our study already converted into a com-mon scheme.
The common scheme is basedon the conventions of PDT, whose CS style isfPhRsHcHpB.19We selected nine styles (3 families times 3 headchoices) and transformed all the HamleDT schemetreebanks to these nine styles and back, which wecall a roundtrip.
Resulting averaged unlabeled at-tachment scores (UAS, evaluated against the Ham-leDT scheme) in the last column of Table 1 indi-cate that the percentage of transformation errors(i.e.
tokens attached to a different parent after theroundtrip) is lower than 1% for 20 out of the 26languages.20 A manual inspection revealed twomain error sources.
First, as noted above, the Stan-ford and Moscow families have lower expressivepower than the Prague family, so naturally, the in-verse transformation was ambiguous and the trans-formation heuristics were not capable of identify-ing the correct variant every time.
Second, we alsoencountered inconsistencies in the original tree-banks (which we were not trying to fix in Ham-leDT for now).6 Conclusions and Future WorkWe described a (theoretically very large) space ofpossible representations of CSs within the depen-dency framework.
We pointed out a range of de-tails that make CSs a really complex phenomenon;anyone dealing with CSs in treebanking shouldtake these observations into account.We proposed a taxonomy of those approaches19As documented in Zeman et al (2012), the normalizationprocedures used in HamleDT embrace many other phenom-ena as well (not only those related to coordination), and in-volve both structural transformation and dependency relationrelabeling.20Table 1 shows that Latin and Ancient Greek treebankshave on average more than 6 CSs per 100 tokens, more than2 conjuncts per CS, and Latin has also the highest number ofshared modifiers per CS.
Therefore the percentage of nodesaffected by the roundtrip is the highest for these languagesand the lower roundtrip UAS is not surprising.524that have been argued for in literature or employedin real treebanks.We studied 26 existing treebanks of differentlanguages.
For each value of each dimension inFigure 1, we found at least one treebank where thevalue is used; even so, several treebanks take theirown unique path that cannot be clearly classifiedunder the taxonomy (the taxonomy could indeedbe extended, for the price of being less clearly ar-ranged).We discussed the convertibility between the var-ious styles and implemented a universal tool thattransforms between any two styles of the taxon-omy.
The tool achieves a roundtrip accuracy closeto 100%.
This is important because it opens thedoor to easily switching coordination styles forparsing experiments, phrase-to-dependency con-version etc.While the focus of this paper is to explore anddescribe the expressive power of various annota-tion styles, we did not address the learnability ofthe styles by parsers.
That will be a complemen-tary point of view, and thus a natural direction offuture work for us.AcknowledgmentsWe thank the providers of the primary data re-sources.
The work on this project was sup-ported by the Czech Science Foundation grantsno.
P406/11/1499 and P406/2010/0875, and byresearch resources of the Charles University inPrague (PRVOUK).
This work has been using lan-guage resources developed and/or stored and/ordistributed by the LINDAT-Clarin project of theMinistry of Education of the Czech Republic(project LM2010013).
Further, we would like tothank Jan Hajic?, Ondr?ej Dus?ek and four anony-mous reviewers for many useful comments on themanuscript of this paper.ReferencesItzair Aduriz et al 2003.
Construction of a Basque de-pendency treebank.
In Proceedings of the 2nd Work-shop on Treebanks and Linguistic Theories.Susana Afonso, Eckhard Bick, Renato Haber, and Di-ana Santos.
2002.
?Floresta sinta?(c)tica?
: a tree-bank for Portuguese.
In LREC, pages 1968?1703.Nart B. Atalay, Kemal Oflazer, and Bilge Say.
2003.The annotation process in the Turkish treebank.
InProceedings of the 4th Intern.
Workshop on Linguis-tically Interpreteted Corpora (LINC).David Bamman and Gregory Crane.
2011.
The An-cient Greek and Latin dependency treebanks.
InLanguage Technology for Cultural Heritage, Theoryand Applications of Natural Language Processing,pages 79?98.
Springer Berlin Heidelberg.Igor Boguslavsky, Svetlana Grigorieva, Nikolai Grig-oriev, Leonid Kreidlin, and Nadezhda Frid.
2000.Dependency treebank for Russian: Concept, tools,types of information.
In Proceedings of the 18thconference on Computational linguistics-Volume 2,pages 987?991.
Association for Computational Lin-guistics Morristown, NJ, USA.Sabine Brants, Stefanie Dipper, Silvia Hansen, Wolf-gang Lezius, and George Smith.
2002.
The TIGERtreebank.
In Proceedings of the Workshop on Tree-banks and Linguistic Theories, Sozopol.Sabine Buchholz and Erwin Marsi.
2006.
CoNLL-Xshared task on multilingual dependency parsing.
InProceedings of CoNLL, pages 149?164.Montserrat Civit, Maria Anto`nia Mart?
?, and Nu?ria Buf??.2006.
Cat3LB and Cast3LB: From constituents todependencies.
In FinTAL, volume 4139 of Lec-ture Notes in Computer Science, pages 141?152.Springer.Michael Collins.
2003.
Head-driven statistical mod-els for natural language parsing.
Computational lin-guistics, 29(4):589?637.Do?ra Csendes, Ja?nos Csirik, Tibor Gyimo?thy, andAndra?s Kocsor.
2005.
The Szeged treebank.
InTSD, volume 3658 of Lecture Notes in ComputerScience, pages 123?131.
Springer.Mihaela Ca?la?cean.
2008.
Data-driven dependencyparsing for Romanian.
Master?s thesis, UppsalaUniversity, August.Sas?o Dz?eroski, Tomaz?
Erjavec, Nina Ledinek, Petr Pa-jas, Zdene?k Z?abokrtsky?, and Andreja Z?ele.
2006.Towards a Slovene dependency treebank.
In LREC2006, pages 1388?1391, Genova, Italy.
EuropeanLanguage Resources Association (ELRA).Nathan Green and Zdene?k Z?abokrtsky?.
2012.
Hy-brid combination of constituency and dependencytrees into an ensemble dependency parser.
In Pro-ceedings of the Workshop on Innovative Hybrid Ap-proaches to the Processing of Textual Data, pages19?26, Avignon, France.
Association for Computa-tional Linguistics.Jan Hajic?, Jarmila Panevova?, Eva Hajic?ova?, PetrSgall, Petr Pajas, Jan S?te?pa?nek, Jir???
Havelka,Marie Mikulova?, Zdene?k Z?abokrtsky?, and MagdaS?evc???kova?-Raz??mova?.
2006.
Prague DependencyTreebank 2.0.
CD-ROM, Linguistic Data Consor-tium, LDC Catalog No.
: LDC2006T01, Philadel-phia.525Jan Hajic?
et al 2009.
The CoNLL-2009 sharedtask: Syntactic and semantic dependencies in mul-tiple languages.
In Proceedings of the 13th Confer-ence on Computational Natural Language Learning(CoNLL-2009), June 4-5, Boulder, Colorado, USA.Jirka Hana and Jan S?te?pa?nek.
2012.
Praguemarkup language framework.
In Proceedings of theSixth Linguistic Annotation Workshop, pages 12?21, Stroudsburg, PA, USA.
Association for Compu-tational Linguistics, Association for ComputationalLinguistics.Katri Haverinen, Timo Viljanen, Veronika Laippala,Samuel Kohonen, Filip Ginter, and Tapio Salakoski.2010.
Treebanking Finnish.
In Proceedings ofthe Ninth International Workshop on Treebanks andLinguistic Theories (TLT9), pages 79?90.Samar Husain, Prashanth Mannem, Bharat Ambati,and Phani Gadde.
2010.
The ICON-2010 toolscontest on Indian language dependency parsing.
InProceedings of ICON-2010 Tools Contest on IndianLanguage Dependency Parsing, Kharagpur, India.ISO 24615.
2010.
Language resource management ?Syntactic annotation framework (SynAF).Sylvain Kahane.
1997.
Bubble trees and syntacticrepresentations.
In Proceedings of the 5th Meetingof the Mathematics of the Language, DFKI, Saar-brucken.Matthias T. Kromann, Line Mikkelsen, and Stine KernLynge.
2004.
Danish dependency treebank.Sandra Ku?bler, Erhard Hinrichs, Wolfgang Maier, andEva Klett.
2009.
Parsing coordinations.
In Pro-ceedings of the 12th Conference of the EuropeanChapter of the ACL (EACL 2009), pages 406?414,Athens, Greece, March.
Association for Computa-tional Linguistics.Vincenzo Lombardo and Leonardo Lesmo.
1998.
Unitcoordination and gapping in dependency theory.
InProcessing of Dependency-Based Grammars; pro-ceedings of the workshop.
COLING-ACL, Montreal.Mitchell Marcus, Beatrice Santorini, and Mary AnnMarcinkiewicz.
1993.
Building a large annotatedcorpus of English: the Penn Treebank.
Computa-tional Linguistics, 19:313?330.Nicolar Mazziotta.
2011.
Coordination of verbal de-pendents in Old French: Coordination as a specifiedjuxtaposition or apposition.
In Proceedings of In-ternational Conference on Dependency Linguistics(DepLing 2011).Ryan McDonald and Joakim Nivre.
2007.
Charac-terizing the errors of data-driven dependency pars-ing models.
In Proceedings of the 2007 Joint Con-ference on Empirical Methods in Natural LanguageProcessing and Computational Natural LanguageLearning (EMNLP-CoNLL), pages 122?131.Igor A. Mel?c?uk.
1988.
Dependency Syntax: Theoryand Practice.
State University of New York Press.Simonetta Montemagni et al 2003.
Building the Ital-ian syntactic-semantic treebank.
In Building and us-ing Parsed Corpora, Language and Speech series,pages 189?210, Dordrecht.
Kluwer.Jens Nilsson, Johan Hall, and Joakim Nivre.
2005.MAMBA meets TIGER: Reconstructing a Swedishtreebank from antiquity.
In Proceedings of theNODALIDA Special Session on Treebanks.Joakim Nivre, Johan Hall, Sandra Ku?bler, Ryan Mc-Donald, Jens Nilsson, Sebastian Riedel, and DenizYuret.
2007.
The CoNLL 2007 shared task on de-pendency parsing.
In Proceedings of the CoNLL2007 Shared Task.
EMNLP-CoNLL, June.Martin Popel and Zdene?k Z?abokrtsky?.
2009.Improving English-Czech Tectogrammatical MT.The Prague Bulletin of Mathematical Linguistics,(92):1?20.Prokopis Prokopidis, Elina Desipri, Maria Koutsom-bogera, Harris Papageorgiou, and Stelios Piperidis.2005.
Theoretical and practical issues in the con-struction of a Greek dependency treebank.
In Pro-ceedings of the 4th Workshop on Treebanks and Lin-guistic Theories (TLT), pages 149?160.Loganathan Ramasamy and Zdene?k Z?abokrtsky?.
2012.Prague dependency style treebank for Tamil.
InProceedings of LREC 2012, pages 23?25, I?stanbul,Turkey.
European Language Resources Association.Mohammad Sadegh Rasooli, Amirsaeid Moloodi,Manouchehr Kouhestani, and Behrouz Minaei-Bidgoli.
2011.
A syntactic valency lexicon forPersian verbs: The first steps towards Persian de-pendency treebank.
In 5th Language & TechnologyConference (LTC): Human Language Technologiesas a Challenge for Computer Science and Linguis-tics, pages 227?231, Poznan?, Poland.Kiril Simov and Petya Osenova.
2005.
Extendingthe annotation of BulTreeBank: Phase 2.
In TheFourth Workshop on Treebanks and Linguistic Theo-ries (TLT 2005), pages 173?184, Barcelona, Decem-ber.Otakar Smrz?, Viktor Bielicky?, Iveta Kour?ilova?, JakubKra?c?mar, Jan Hajic?, and Petr Zema?nek.
2008.Prague Arabic dependency treebank: A word on themillion words.
In Proceedings of the Workshop onArabic and Local Languages (LREC) 2008, pages16?23, Marrakech, Morocco.
European LanguageResources Association.Leon Stassen.
2000.
And-languages and with-languages.
Linguistic Typology, 4(1):1?54.Jan S?te?pa?nek.
2006.
Capturing a Sentence Struc-ture by a Dependency Relation in an Annotated Syn-tactical Corpus (Tools Guaranteeing Data Consis-tence) (in Czech).
Ph.D. thesis, Charles Univer-526sity in Prague, Faculty of Mathematics and Physics,Prague, Czech Republic.Pavel Stran?a?k and Jan S?te?pa?nek.
2010.
Represent-ing layered and structured data in the CoNLL-STformat.
In Alex Fang, Nancy Ide, and JonathanWebster, editors, Proceedings of the Second Inter-national Conference on Global Interoperability forLanguage Resources, pages 143?152, Hong Kong,China.
City University of Hong Kong, City Univer-sity of Hong Kong.Mariona Taule?, Maria Anto`nia Mart?
?, and Marta Re-casens.
2008.
AnCora: Multilevel annotated cor-pora for Catalan and Spanish.
In LREC.
EuropeanLanguage Resources Association.TEI Consortium.
2013.
TEI P5: Guidelines for Elec-tronic Text Encoding and Interchange.Lucien Tesnie`re.
1959.
Ele?ments de syntaxe struc-turale.
Paris.Stephen Tratz and Eduard Hovy.
2011.
A fast, ac-curate, non-projective, semantically-enriched parser.In Proceedings of EMNLP, pages 1257?1268, Edin-burgh, Scotland, UK, July.
Association for Compu-tational Linguistics.Leonoor van der Beek et al 2002.
Chapter 5.
TheAlpino dependency treebank.
In Algorithms for Lin-guistic Processing NWO PIONIER Progress Report,Groningen, The Netherlands.Daniel Zeman, David Marec?ek, Martin Popel,Loganathan Ramasamy, Jan S?te?pa?nek, Zdene?kZ?abokrtsky?, and Jan Hajic?.
2012.
HamleDT: Toparse or not to parse?
In Proceedings of LREC 2012,pages 2735?2741, I?stanbul, Turkey.
European Lan-guage Resources Association.527
