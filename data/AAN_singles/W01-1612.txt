Annotating Anaphoric and Bridging Relations with MMAXChristoph Mu?ller and Michael StrubeEuropean Media Laboratory GmbHVilla BoschSchlo?-Wolfsbrunnenweg 3369118 Heidelberg, Germanyfchristoph.mueller, michael.strubeg@eml.villa-bosch.deAbstractWe present a tool for the annotation ofanaphoric and bridging relations in a cor-pus of written texts.
Based on differences aswell as similarities between these phenom-ena, we define an annotation scheme.
Wethen implement the scheme within an anno-tation tool and demonstrate its use.1 IntroductionAnaphoric and bridging relations between discourseentities are of major importance for establishing andmaintaining textual coherence.
Consider the follow-ing examples, taken from the Heidelberg Text Corpus(HTC).
The HTC is a collection of 577 short texts de-scriptive of the city of Heidelberg, which have beencollected at our lab for a tourist information system inthe course of the DeepMap project (Malaka & Zipf,2000).Im Gegensatz zu anderen Sta?dten steht [das HeidelbergerStadttheater] nicht an herausgehobener Stelle, sondern [es]fu?gt sich in die Stra?enflucht ohne Vorplatz ein.
[DerHaupteingang] zeigt noch das alte Arkadenmotiv mit denflachen Segmentbo?gen.
(HTC002)In contrast to other cities, [the Heidelberg theatre] is notsituated at a particularly exposed position, but [it] blends inwith the street.
[The main entrance] still shows the originalmotif of the arcades with the flat segments.In the first sentence, [das Heidelberger Stadtthe-ater] is introduced into the universe of discourse, andthen referred to anaphorically by means of the pro-noun [es].
In the next sentence, there is a bridging re-lation between the entities denoted by [der Hauptein-gang] and [das Heidelberger Stadttheater].
1Note that in each example it is the fact that the sec-ond discourse entity is either a definite NP or a pro-noun that triggers the attempt to establish a relation1Note that in this analysis (which is only one of two thatare possible here), [das Heidelberger Stadttheater] is at thesame time the antecedent to an anaphoric and a bridging ex-pression.to some previous entity: Normally, the use of a def-inite NP respectively a pronoun presupposes that theentity thus denoted has either already been introducedinto the universe of discourse or is assumed to be fa-miliar to the reader.
This is the case in the anaphori-cally used pronoun in the first sentence.
In the secondsentence, the relation between the two discourse enti-ties [das Heidelberger Stadttheater] and [der Hauptein-gang] is less obvious: The second one does not denotethe same entity as the first, but an entity that the secondone is a part of.The ability to automatically resolve these kinds ofrelations is an important feature of text understand-ing systems.
For both the training as well as theevaluation of these systems, manually annotated cor-pora are required.
The creation of these corpora inturn has a number of preliminaries.
The phenom-ena anaphor, bridging and the closely related conceptof antecedence need to be sufficiently defined (Sec-tion 2).
On the basis of this definition, an annotationscheme needs to be developed (Section 3).
Finally, anannotation tool is required which implements the an-notation scheme in a robust and efficient way.
We re-view a selection of existing tools, then present MMAX(Multi-Modal Annotation in XML), our versatile Javatool (Section 4), and we demonstrate how the annota-tion scheme for anaphoric and bridging relations canbe implemented in MMAX (Section 5).2 DefinitionIn general, anaphoric as well as bridging relations holdbetween specifying expressions.
These are those ex-pressions that specify (i.e.
are used to refer to) aparticular extra-linguistic entity.
In what follows, webriefly discuss the approach of (Vieira & Poesio, 2000)and present our own definition.
Since (Vieira & Poe-sio, 2000) address the problem of bridging annotation,they try to find an operational and easily applicabledefinition.
This is the main motivation for choosing(Vieira & Poesio, 2000) (and not e.g.
(Clark, 1975),who introduced the term bridging) as the backgroundof our discussion.
In the following discussion, twofeatures of pairs of specifying expressions will be im-portant.
The first one is cospecification (Sidner, 1983),also known as coreference, a relation holding betweentwo or more specifying expressions which specify thesame extra-linguistic entity.
The second important fea-ture is identity of the head noun.
This feature is appli-cable to full NPs only and simply states that in a pairof NPs the head of each is realized by the same noun.Anaphor.
In (Vieira & Poesio, 2000), only thoserelations are classified as anaphoric in which bothcospecification and identity of the head noun is given.
2Consequently, their rather strict definition contains butone type, which the authors call direct anaphor.
Incontrast to this, we take only cospecification to be anecessary condition for anaphor.
In case that iden-tity of the head noun is also given, we call this directanaphor as well.
We believe, however, that additionalsub-types of anaphor should be defined depending onthe type of the anaphoric expression.
Along theselines, we further distinguish pronominal anaphors, andthose in which the object specified by the second ex-pression is standing in a conceptual IS-A (or hyponym-hyperonym) relation to the object specified by the firstone.
Consider the NP [das Bauwerk] in the follow-ing example, which denotes a super-concept of [demGeba?ude].Seit 1972 befindet sich das Romanische Seminar in [demGeba?ude Seminarstra?e 3].
[Das Bauwerk] wurde 1847[...] errichtet.
(HTC010)Since 1972, the Romance Seminar is situated in [the build-ing Seminarstra?e 3].
[The structure] was built [...] in1847.Bridging.
Due to their strict definition of anaphor,the term bridging is applied rather widely in (Vieira &Poesio, 2000).
First, those expressions are classifiedas bridging which cospecify with their antecedent, butwhich do so not by means of an identical, but a differ-ent head noun.
Finally, also non-cospecifying expres-sions are classified as bridging as long as they standin some lexical relation (i.e.
hyponymy, meronymyor co-hyponymy) to their antecedent.
The respec-tive bridging sub-types are introduced by the authorsaccordingly.
Our approach, in contrast, classifiesas bridging only those expressions which are non-cospecifying and which stand in some conceptual rela-tion to their antecedent.
At this time, we consider thefollowing relations to be relevant: cause-effect, part-whole, and entity-attribute, for which we give the fol-lowing examples:Deshalb wurden [verschiedene Untersuchungen] [...]vorgenommen.
[Das Ergebnis] (cause-effect) war die Er-stellung von Leitlinien fu?r die gestalterische Behandlung des2It must be added here that (Vieira & Poesio, 2000) con-sider definite NPs only, and in particular no pronouns.
[Hortus Palatinus].
Danach plante man, [die Zwischen-terasse] (part-whole) [...] wiederherzustellen.
(HTC113)Therefore, [various examinations] [...] were conducted.
[The result] (cause-effect) was the production of guidelinesfor the design of the [Hortus Palatinus].
After that, planswere made to restore [...] [the middle terrace] (part-whole).The Concept of Antecedence.
In pairs of anaphoricor bridging expressions, one member is regarded asthe antecedent of the other.
In fact, the task of resolv-ing such a relation is often identified with finding theantecedent.
While there are certainly cases where it ispossible to find exactly one antecedent to a given ex-pression, there are also cases where this decision is notobvious.
This is true for anaphoric as well as bridgingantecedents: Consider the case of an NP that has beenintroduced into the universe of discourse, and that isreferred back to anaphorically twice by means of apronoun.
We believe that it is not at all clear what is tobe regarded as the antecedent of the second pronoun,since one could argue for the NP on the grounds of itssemantic explicitness, or for the first pronoun on thegrounds of its being the more recent cospecifying en-tity.
The same is true with bridging expressions.
In theexample in Section 1, one could regard the pronoun[es] as the bridging antecedent of [der Haupteingang]as well.Preliminary Conclusion.
Our definition of anaphorand bridging developed so far can be summed up asfollows: Anaphoric relations can be observed betweencospecifying expressions.
A pair of antecedent andanaphor is always cospecifying, while on the otherhand, given a set of (more than two) cospecifying ex-pressions, determining the antecedent to a given ex-pression is not necessarily trivial.
Anaphors can befurther differentiated according to the nature of thelexical items taking part in the relation.
Bridging re-lations, in contrast, occur between non-cospecifyingexpressions only.
Here, the criterion for division intosub-types is the conceptual relation between the enti-ties denoted by the expressions taking part in the re-lation.
Finally, it is possible for an expression to beantecedent to more than one anaphoric and / or bridg-ing expressions at the same time, while we believe thatthe reverse, i.e.
one expression having more than oneantecedent, is not possible.3 Annotation SchemeThe first step in the development of an annotationscheme is the definition of the relevant markables, i.e.the class of entities in the text between which the rela-tions to be annotated can possibly occur.
It is in termsof these markables (with their attributes) and labelledrelations between markables that the annotation itselfis expressed.In Section 2, we already roughly defined whatcounts as a markable by stating that anaphoric andbridging relations hold between specifying expres-sions.
To further distinguish, we introduce the at-tribute np form which allows to differentiate betweenthe following subclasses: Proper noun, definite NP, in-definite NP, personal pronoun, possessive pronoun anddemonstrative pronoun.
In addition, other grammati-cal features of markables, like agreement or the gram-matical role they play, might also be of interest.
Wecapture these in two respective attributes, for which wespecify a closed list of possible values to be assignedduring annotation.
These possible values are the com-bination person/number/gender for the first and sub-ject, object and other for the second attribute.In a given pair of expressions it is the way in whichthe second expression relates to the first one that de-termines whether an anaphoric or a bridging relationexists.
It is natural, therefore, to represent this infor-mation on this second markable and only there.
More-over, this is the only way to allow for the represen-tation of cases in which one markable is antecedentto several others.
Since we rule out the possibility ofone markable being anaphor or bridging expression tomore than one antecedent, this information is easilyrepresented by means of an attribute which identifiesthe markable as an anaphor or a bridging expression.We add a further attribute for the respective relation?ssub-type.
For anaphoric expressions, the possible val-ues for this attribute include direct, pronominal andIS-A, and for bridging expressions part-whole, cause-effect and entity-attribute, respectively.Finally, the annotation of an anaphoric or bridg-ing markable has to be complemented with informa-tion on which markable is its antecedent.
This canbe accomplished by supplying the markable with afurther attribute.
However, selecting the correct an-tecedent from several candidates can contain a consid-erable amount of interpretation on the part of the anno-tator.
This is highly undesirable, because it is likely toforce arbitrary decisions which in turn can introduceerror and inconsistency into the annotation.
It wouldbe preferable, therefore, if the explicit identification ofthe antecedent would be optional.
We do this by sup-plying in our annotation scheme a means to representcospecification.
With this additional representation,the annotation of anaphoric relations in our annotationscheme is a two-step process: Upon encountering ananaphoric markable and setting its general attributes,the markable is first annotated as being cospecifyingwith all other markables already in this set of cospeci-fying expressions.
This is the only mandatory annota-tion, and together with the information that the mark-able is of the anaphoric type it perfectly well repre-sents the anaphoric relation.
The second, optional stepconsists in the specification of the markable?s exact an-tecedent.
By separating the annotation of anaphoricrelations in this way, the concept antecedent becomesfree to be used only in those cases where it is bothrelevant and unambiguously decidable.
It is impor-tant to note that no relevant information appears to belost here: Supplied that the linear order of markableswithin the text is preserved, it should be possible to es-tablish an antecedent to any anaphoric expression froma set of cospecifying expressions annotated within thescheme described above.
Moreover, the importanttask of evaluating the annotation scheme is not af-fected either, because common evaluation algorithmsfor anaphor annotations (Vilain et al, 1995) do not de-pend on antecedence information, but treat anaphoricexpressions as cospecifying equivalence classes.What is even more important is that by the samemeans we can render optional the explicit specifica-tion of bridging antecedents as well.
Two cases can bedistinguished here: Whenever only a single candidatefor antecedence exists, specifying it is trivial.
Thus,the only cases where uncertainty as to the correct an-tecedent of a bridging expression can arise appear tobe those in which multiple cospecifying candidates areavailable.
Since bridging (as we define it) is a relationnot between lexical items, but between extra-linguisticentities, and since cospecification is a transitive rela-tion, a bridging relation can be sufficiently expressedby specifying any of the candidates.
The major dif-ference to the annotation of anaphoric relations is thatin case of bridging, the selection of an antecedent ismandatory, but can be made at random, because whatis really selected is not the markable but the extra-linguistic entity that it specifies.4 Annotation ToolThis section deals with the question how the annota-tion scheme developed in the previous section can beimplemented in a real annotation tool.
Before present-ing our own tool MMAX, we briefly review a selectionof already existing tools.4.1 Existing ToolsThe Discourse Tagging Tool (DTTool) (Aone & Ben-nett, 1994) is a Tcl/Tk program for the annotationand display of antecedent-anaphor relations in SGML-encoded multilingual texts.
While this field of applica-tion makes it a potential candidate for the implementa-tion of our scheme as well, this is not the case, mainlybecause the tool lacks the possibility of assigning ar-bitrary combinations of attributes and possible valuesto markables, a feature that obviously is needed for therepresentation of different types of relations.CLinkA3 (Ora?san, 2000) is a more recent Java tool3http://www.wlv.ac.uk/sles/compling/software/for coreference annotation.
In this case, it is a morestructural constraint which prevents our annotationscheme from being implemented in this tool.
Thisconstraint results from the fact that CLinkA was builtto implement the annotation scheme proposed in theMUC-7 Coreference Task Definition (Hirschman &Chinchor, 1997).
In this scheme, cospecification is ex-pressed in terms of antecedence only, a concept whichwe have shown to be problematic, and which our anno-tation scheme therefore avoids.
Another problem withCLinkA is that it does not seem to support additionaluser-defined attributes either.The Alembic Workbench4 is an annotation toolwhich, among other tasks, directly supports cospecifi-cation annotation.
In contrast to DTTool and CLinkA,it also allows for the extension of the tag set, so thatin principle the handling of different coreference phe-nomena is possible.
The tool (like the other two men-tioned before) processes SGML files, into which an-notation tags are inserted directly during annotation.We regard this approach to annotation as a drawback,because it mixes the basic data (i.e.
the texts to be an-notated) with the annotation itself.
This can give riseto problems, e.g.
in cases where alternative annota-tions of the same data are to be compared.Referee, a Tcl/Tk program for coreference annota-tion (DeCristofaro et al, 1999), is better in this respectin that it writes the annotations to a separate file, leav-ing the annotated text itself unaltered.
The format ofthis annotation file, however, is highly idiosyncratic,rendering very difficult the subsequent analysis of theannotation.
Moreover, this tool also represents cospec-ification in terms of antecedence only, making it im-possible to annotate the former without specifying thelatter.
On the other hand, Referee directly supports thedefinition of user-definable attributes.Finally, the MATE Workbench5 is the most ambi-tious tool that we considered for the implementationof our annotation scheme.
It has been developed inJava as a highly customizable tool for the XML-basedannotation of arbitrary and possibly non-hierarchicallevels of linguistic description.
From a theoreticalpoint of view, the MATE Workbench would thus bean ideal platform for the implementation of our anno-tation scheme.
In practical terms, however, we foundthe performance of the program to be rather poor, ren-dering it practically unusable as soon as a certain cor-pus size was reached.4.2 MMAX, an XML Annotation ToolSince we found the existing tools that we consideredto be insufficient for the task of implementing our an-notation scheme, we decided to develop our own tool.4http://www.mitre.org/technology/alembic-workbench/5http://mate.nis.sdu.dkMMAX6 is written in Java for reasons of platformindependence.
It processes XML-encoded text cor-pora which make use of standoff annotation (Thomp-son & McKelvie, 1997).
Using this technique al-lows us to keep apart the basic data and the annota-tion.
XML support in Java is realized by means of theApache7 implementations of an XML parser and XSLstylesheet processor.4.2.1 The Data ModelIn MMAX, written texts are represented in XML interms of base-level and supra-base level elements.
Foreach of these element types, Document Type Defini-tions (DTDs) exist which describe the structure of awell-formed element.
In the following, we give DTDfragments and discuss their semantics.A word is the most straightforward base level ele-ment for a written text.
Apart from the representationof the word itself, each element of this type has an IDattribute which serves to uniquely identify the wordwithin the text.<!ELEMENT words (word*)><!ELEMENT word (#PCDATA)><!ATTLIST word id ID #REQUIRED>The sequence of words which as a whole constitutesthe complete text can be divided with respect to twocriteria, a formal and a pragmatic one: Each word ispart of a particular (formally defined) text, which con-sists of sentences, which in turn may be grouped intoparagraphs.
Each sentence has an ID and a span8attribute which is a pointer to a sequence of word el-ements.
In addition, every text can have an optionalheadline, which consists of any number of sentences.The formal structure of a text is described by the fol-lowing DTD:<!ELEMENT text ((headline?
),((paragraph+) | (sentence+)))><!ELEMENT headline (sentence*)><!ELEMENT paragraph (sentence*)><!ATTLIST paragraph id ID #REQUIRED><!ELEMENT sentence (EMPTY)><!ATTLIST sentence id ID #REQUIRED><!ATTLIST sentence span CDATA #REQUIRED>In pragmatic terms, on the other hand, a text can beregarded as a discourse, consisting of a series of dis-course segments.
Again, each discourse segment hasan ID and a span attribute, as well as a function at-tribute indicative of its communicative function.
Thispragmatic structure can be translated into a DTD asfollows:<!ELEMENT discourse (discourse_segment*)><!ELEMENT discourse_segment (EMPTY)><!ATTLIST discourse_segment id ID #REQUIRED><!ATTLIST discourse_segment span CDATA #REQUIRED><!ATTLIST discourse_segment function CDATA #IMPLIED>6http://www.eml.villa-bosch.de/english/research/nlp/7http://www.apache.org8We use our own attribute here instead of the href at-tribute as defined in XPointer, because our element differsfrom the latter both in semantics and implementation.4.2.2 MarkablesIn MMAX, the XML elements representing mark-ables possess a set of attributes which is only partlypre-defined: A closed set of fixed system attributesis complemented by an open set of user-definable at-tributes which depend on the annotation scheme thatis to be implemented.System Attributes.
Each markable has an ID at-tribute which uniquely identifies it.
In addition, a spanattribute is needed as well which maps the markableto one or more word elements.
Finally, we intro-duce a type attribute the meaning of which will be de-scribed in the next subsection.
Two additional systemattributes serve to express the relations between mark-ables.
We argue that two basic relations are sufficienthere.The first is an unlabelled and unordered relation be-tween arbitrarily many markables, which can be inter-preted as set-membership, i.e.
markables standing inthis relation to each other are interpreted as constitut-ing a set.
Note that the interpretation of this relationis not pre-defined and needs to be specified within theannotation scheme.
In order to express a markable?smembership in a certain set, a member attribute is in-troduced which has as its value some string specifica-tion.
Set membership can thus be established/checkedby unifying/comparing the member attribute values oftwo or more markables.The second is a labelled and ordered relation be-tween two markables, which is interpreted as onemarkable pointing to the other.
Note that here, again,the nature of this pointing is not pre-defined.
However,there is a structural constraint imposed on the pointingrelation which demands that each markable can pointto at most one other markable.
Since there is no con-straint as to how many different markables can pointto another one, n:1 relations can be represented.
Apointer attribute is required for the expression of thepointing relation.
The range of possible values for thisattribute is the range of existing markables?
IDs, withthe exception of the current markable itself.The DTD fragment for markables and their systemattributes looks as follows:<!ELEMENT markables (markable*)><!ATTLIST markable id ID #REQUIRED><!ATTLIST markable span CDATA #REQUIRED><!ATTLIST markable type CDATA #REQUIRED><!ATTLIST markable member CDATA #IMPLIED><!ATTLIST markable pointer IDREF #IMPLIED>User-definable Attributes.
It is by means of itsuser-definable attributes that a markable obtains itssemantic interpretation within an annotation scheme.But even within a single scheme, it may be requiredto discriminate between different types of markables.In MMAX, the type attribute is introduced for this pur-pose.
This attribute does not have any pre-defined pos-Figure 1: Pair of bridging expression and antecedentsible values.
Instead, a list of these has to be suppliedby the annotation scheme.
For each of these values,in turn, a list of relevant attributes and possible valueshas to be defined by the user.
Depending on which ofthe mutually exclusive type attributes is assigned to agiven markable during annotation, only the attributesrelevant to this type will be offered in a separate at-tribute window for further specification.5 ImplementationWe utilize the system attribute type to discriminate be-tween the three basic classes of markables, i.e.
nor-mal9, anaphoric and bridging ones.
The respectiveattributes and possible values for these mutually ex-clusive markable types can directly be adopted fromthe annotation scheme.
Note that a subset of theseis in fact identical for each type (np form, agreementand grammatical role), while other attributes?
possiblevalues vary with the type of markable: For anaphoricmarkables, e.g., the sub-types direct, pronominal andIS-A are relevant, which make no sense for bridgingexpressions, and vice versa.
This is directly supportedby the adaptive attribute window.
Figure 1 shows theattribute window in response to the selection of a valuefor the type attribute.Cospecification between two or more markables isexpressed by means of an identical member attribute.This value, though at this time realised as a stringof the form set XX only, can be interpreted as whathas been called universe entity, elsewhere, e.g.
inthe Mate Dialogue Annotation Guidelines10.
Adding9Normal markables are those that are either not part ofany relation or serve as the antecedent only.10http://www.ims.uni-stuttgart.de/projekte/mdagFigure 2: Annotation of an anaphora markable to a set of cospecifying markables is ac-complished in two steps: First, the set as a whole isselected by left-clicking any of its members.
As a re-sult, all members are displayed in a different color, theselected one in addition being highlighted.
The mark-able to be added is then right-clicked, and the desiredaction chosen from a popup menu.
Figure 2 shows thissituation.
Note that the attribute window has changedin response to the selection of the value anaphoricfor the type attribute.
Specifying the antecedent toan anaphoric expression is done as follows: First,the anaphoric markable is selected by left-clicking it.The desired antecedent is then right-clicked.
Finally,selecting the appropriate menu item from a popupmenu causes the anaphoric markable to point to its an-tecedent.
The antecedent and the anaphoric respec-tively bridging expression are displayed in a differ-ent colour whenever the latter is selected.
Note thatby combination of the member and pointer attributes,cospecification and bridging can be represented simul-taneously, which may be needed in cases of long-distance anaphor and short-distance bridging.6 Outlook: Multi-modal CorporaThe definitions of the phenomena anaphor and bridg-ing presented in this paper as well as the annotationscheme developed were tailored mainly to the needs ofwritten texts.
This bias is apparent both in the way wedefined markables as well as in the attributes that wespecified for them.
In addition, our conception of an-tecedence was also influenced by it in that the notionof linear order (as can be observed between words ina written text) was at least implicit in it.
All phenom-ena, however, are not limited to the domain of writ-ten text: They also occur in spoken language and di-alogue.
What is even more important: The means bywhich they are accomplished there include non-verbalelements like gazes and in particular pointing gestures.It is not at all clear yet if and how traditional defini-tions of phenomena like anaphor or bridging can betransferred to multi-modal corpora.
In particular, phe-nomena like cross-modal anaphor and bridging needto be studied in more detail.
As a step in this direc-tion, we have already applied MMAX to the annota-tion of cospecification in multi-modal corpora (Mu?ller& Strube, 2001).Acknowledgements.
We thank Lutz Wind for giv-ing feedback on previous versions of MMAX.
We alsothank the two anonymous reviewers for their usefulcomments.
The work presented here has been partiallyfunded by the German Ministry of Research and Tech-nology under grant 01 IL 904 D/2 (EMBASSI) and bythe Klaus Tschira Foundation.ReferencesAone, C. & S. W. Bennett (1994).
Discourse tagging tooland discourse-tagged multilingual corpora.
In Pro-ceedings of the International Workshop on SharableNatural Language Resources (SNLR), Ikoma, Nara,Japan, 10?11 August, 1994, pp.
71?77.Clark, H. H. (1975).
Bridging.
In Proc.
of TINLAP-1, pp.169?174.DeCristofaro, J., M. Strube & K. F. McCoy (1999).
Build-ing a tool for annotating reference in discourse.
InACL ?99 Workshop on the Relationship between Dis-course/Dialogue Structure and Reference, Universityof Maryland, Maryland, 21 June, 1999, pp.
54?62.Hirschman, L. & N. Chinchor (1997).
MUC-7Coreference Task Definition, http://www.muc.saic.com/proceedings/.Malaka, R. & A. Zipf (2000).
Deep Map: ChallengingIT research in the framework of a tourist informationsystem.
In Proceedings of the International Confer-ence on Information and Communication Technologiesin Tourism (ENTER 2000), Barcelona, Spain, 26-28April, 2000.Mu?ller, C. & M. Strube (2001).
MMAX: A tool for the an-notation of multi-modal corpora.
In Proceedings of2nd IJCAI Workshop on Knowledge and Reasoning inPractical Dialogue Systems, Seattle, Wash., 5 August2001.Ora?san, C. (2000).
ClinkA a coreferential links annotator.
InProc.
of LREC ?00, pp.
491?496.Sidner, C. L. (1983).
Focusing in the comprehension of defi-nite anaphora.
In M. Brady & R. Berwick (Eds.
), Com-putational Models of Discourse, pp.
267?330.
Cam-bridge, Mass.
: MIT Press.Thompson, H. S. & D. McKelvie (1997).
Hyperlink seman-tics for standoff markup of read-only documents.
InProceedings of SGML Europe ?97, Barcelona, Spain,May 1997.Vieira, R. & M. Poesio (2000).
An empirically-based systemfor processing definite descriptions.
ComputationalLinguistics, 26(4):539?593.Vilain, M., J. Burger, J. Aberdeen, D. Connolly &L. Hirschman (1995).
A model-theoretic coreferencescoring scheme.
In Proceedings fo the 6th MessageUnderstanding Conference (MUC-6), pp.
45?52.
