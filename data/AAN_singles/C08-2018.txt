Coling 2008: Companion volume ?
Posters and Demonstrations, pages 71?74Manchester, August 2008Quantification and Implication in Semantic Calendar ExpressionsRepresented with Finite-State TransducersJyrki Niemi and Kimmo KoskenniemiDepartment of General Linguistics, University of HelsinkiPO Box 9, FI?00014 University of Helsinki, Finland{jyrki.niemi, kimmo.koskenniemi}@helsinki.fiAbstractThis paper elaborates a model for rep-resenting semantic calendar expressions(SCEs), which correspond to the inten-sional meanings of natural-language calen-dar phrases.
The model uses finite-statetransducers (FSTs) to mark denoted peri-ods of time on a set of timelines repre-sented as a finite-state automaton (FSA).We present a treatment of SCEs corre-sponding to quantified phrases (any Mon-day; every May) and an implication oper-ation for requiring the denotation of oneSCE to contain completely that of another.1 IntroductionThis paper elaborates the temporal representationmodel proposed in Niemi and Koskenniemi (2007)and developed in Niemi and Koskenniemi (2008).This bracketing FST model covers temporal infor-mation ranging from simple dates to such mean-ings as 6?8 pm on every Monday in April, excepton Easter Monday.
The model represents seman-tic calendar expressions (SCEs) using finite-statetransducers (FSTs) that bracket periods of time ontimelines represented as a finite-state automaton(FSA).
Motivations for a finite-state representationinclude an efficient treatment of periodicity andcertain kinds of sparse sets of sets common in cal-endar information, as well as a well-known theory.In this paper, we treat SCEs corresponding toquantified calendar phrases, such as any Mondayand every May.
We also present implication forrepresenting such cases as a course with compul-sory attendance, whose all class times should co-incide with the free slots of time of a student.c?
2008.
Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li-cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).Some rights reserved.2 Semantic Calendar Expressions (SCEs)and the Bracketing FST ModelWe use the semi-formal SCEs as the basic repre-sentation.
An SCE typically corresponds to thedisambiguated intensional meaning of a natural-language calendar phrase.
An SCE may denote ei-ther a specific period of time or a set of periods.An SCE is compiled to a sequence of bracketingFSTs through regular (relation) expressions.Table 1 lists some implemented SCE constructsand the corresponding calendar phrases.
Most con-structs can be combined with each other.Construct SCE example; calendar phrasecalendar period may; fri; caldayMay; Friday; (calendar) daylist (union) union (mon, fri, sun)Monday, Friday and Sundaycommon part(intersection)intersect (aug, y2008)August 2008interval interval (may, jun)May to Juneanchored nth_following (3, mon, easter)the third Monday after Easterquantified any_n (1, mon)any (single) MondayTable 1: Examples of SCE constructs and the cor-responding calendar phrasesThe bracketing FST model represents the deno-tations of an SCE as an acyclic timeline FSA defin-ing a finite timeline string for each alternative de-notation.1 A basic timeline FSA defines a singletimeline consisting of brackets and labels for cal-endar periods, with no denotations marked.
Thefollowing is a (simplified) timeline for the year2008 at month level (spaces separate symbols):1Timeline FSAs are equivalent to the timeline FSTs ofNiemi and Koskenniemi (2008).71[y y2008 [m Jan ]m [m Feb ]m .
.
.
[m Dec ]m ]yTo represent the denotation of an SCE s, a basictimeline FSA is composed with a bracketing FST(sequence) representing s. The result is a time-line FSA with the denotation marked with markerbrackets {in .
.
.
}in.
The following timeline corre-sponds to union (jan, mar) (January and March):[y y2008 {i3 {i1 [m Jan ]m }i1 }i3 [m Feb ]m {i3 {i2[m Mar ]m }i2 }i3 [m Apr ]m .
.
.
[m Dec ]m ]yFirst, January is marked with i1 and March with i2.Then the bracketing FST for union marks each pe-riod i1 and i2 with i3, the denotation of the whole.3 Representing Quantified SCEsA natural-language calendar phrase may be un-quantified, such as Monday, or it may contain dif-ferent kinds of quantification, such as all Mondays,any Monday, three Mondays and all Mondays insome May.2 We treat any Monday, some Mondayand one Monday as meaning any single Monday,and we equate all Mondays, each Monday and ev-ery Monday.
Numerical quantification can be gen-eralized to intervals, possibly open-ended, such astwo to five Mondays and at most four Mondays.3.1 Collective Representation (All)The meaning all Mondays is represented simply asthe SCE mon, which is represented as a timelineFSA with each Monday marked on the same time-line, as illustrated in Fig.
1 (simplified).3 We callthis the collective representation of an SCE.Su {Mo} Tu Su {Mo} Tu Su {Mo} TuFigure 1: A timeline FSA for the SCE mon (allMondays); ?{Mo}?
denotes a marked MondayThe denotation can be interpreted in severalways: as the union of all Mondays, as all the partsof a timeline that are part of a Monday, as the re-curring ?event?
of Monday, or as a disconnected(non-convex) interval of all Mondays.3.2 Distributive Representation (Any)The meaning any Monday is represented as theSCE any_n (1, mon) and as a timeline FSA with2All could be regarded as universal quantification, and anyresembles existential quantification, but because of some dif-ferences, we avoid using these logical terms.3Each transition in the figures corresponds to a numberof states and transitions between them in the actual timelineFSA, as the representation of each day consists of the calendarday brackets, symbols for the day of the week and the day ofthe month, and possibly finer granularities inside.each Monday marked on a separate, alternativetimeline of its own, as illustrated in Fig.
2.
We callthis the distributive representation of an SCE.4Su{Mo}Mo Tu Su{Mo}Mo Tu Su{Mo}Tu Su Mo Tu Su Mo TuFigure 2: A timeline FSA representing the SCEany_n (1, mon) denoting any single MondayFor numerical quantification, we combine col-lective and distributive representation.
For exam-ple, any_n (3, mon) (three Mondays) is representedas a timeline FSA defining a set of timelines, eachwith three Mondays marked, so that the set coversall possible combinations.
A collective representa-tion alone would not suffice: a single timeline withall periods of three Mondays marked would in ef-fect represent all Mondays.3.3 Collective Representation as PrimaryIn natural language, an unquantified calendarphrase, such as Monday, is typically underspeci-fied and refers to the closest preceding or follow-ing Monday relevant in the context.
In the brack-eting FST model, however, we represent unquanti-fied expressions collectively: the SCE mon repre-sents both Monday and all Mondays.A major practical reason for preferring the col-lective representation is that it is easy to constructa bracketing FST that splits a single timeline witheach Monday marked to a set of alternative time-lines, each with only one of the Mondays marked,whereas the converse operation is not possible.
Ineffect, a bracketing FST can only refer to symbolson a single timeline at a time.A single timeline with all Mondays markedcan also be used as a basis for such an SCE asnth_following (3, mon, easter) (the third Mondayafter Easter).
The bracketing FST correspond-ing to nth_following gets as its input a timelinewith each Monday and each Easter marked.
Itthen counts the third Monday after each Easter andmarks it.
This would be much more difficult witheach Monday marked on a timeline of its own.3.4 Combining Quantified SCEsMultiple SCEs with quantification can be com-bined appropriately.
For example, all Mondays in4We deviate from the common terminology that uses col-lective for all Mondays and distributive for each Monday.72any (single) May is represented by a timeline FSAdefining a set of timelines, each with all Mondaysof a single May marked, and any (single) Mondayin every May by one with a single Monday markedin each May, covering all possible combinations.Combinations of quantified SCEs can often berepresented compositionally with intersection.
Forexample, all Mondays in every May is representedas intersect (mon, may), all Mondays in any Mayas intersect (mon, any_n (1, may)) and any Mon-day in any May as intersect (any_n (1, mon), any_n(1, may)).However, any Monday in every May cannot berepresented simply with intersection, since inter-secting a set of timelines, each with only oneMonday marked, and a timeline with every Maymarked would result in timelines with one Mon-day marked in (at most) one May.
For this case,we have defined the SCE operation n_within_each(n, period, frame), which marks n periods withineach frame.
Any Monday in every May is then rep-resented as n_within_each (1, mon, may).3.5 Other Uses of Distributive RepresentationA distributive representation is obligatory for anSCE denoting possibly overlapping periods oftime, although each alternative timeline may con-tain several non-overlapping periods.For example, we represent n_consecutive (3,calday) (three consecutive days) as a set of time-lines, each with one possible combination of non-overlapping periods of three consecutive daysmarked.5 If each timeline had only a single periodmarked, it would complicate representing such anSCE as union (intersect (n_consecutive (3, cal-day), may), intersect (n_consecutive (3, calday),jun)) (three consecutive days in May and in June)so that the periods of consecutive days in May andJune are marked on the same timeline.
In contrast,a single timeline with all possible non-overlappingperiods marked would not cover the periods over-lapping with the marked ones.A distributive representation is also used forSCEs containing a distributive union operation torepresent a disjunctive meaning.
For example,distr_union (union (mon, fri), union (tue, sun))5Since consecutive days are adjacent, they can be enclosedin marker brackets and treated as a single connected period,with several periods on a single timeline.
In contrast, the mul-tiple disconnected periods of three consecutive Mondays can-not be represented in a general way on the same timeline in thebracketing FST model, but only by having a different markerbracket index for each period of three Mondays.
(Monday and Friday or Tuesday and Sunday) isrepresented as a timeline FSA defining two time-lines, one with every Monday and Friday markedand the other with every Tuesday and Sunday.3.6 Distributive Representation and FirstDistributive representation requires special consid-erations in conjunction with some SCE operations,most notably nth_within (n, period, frame), whichmarks the nth period within each longer periodframe.
Although a period might be the nth markedone within a frame on one timeline, alternativetimelines might contain earlier occurrences.As an example, we consider nth_within (1,n_consecutive (3, workday), jun) (the first periodof three consecutive working days in June).6 Fora June beginning on a Sunday, we have alterna-tive timelines with the first period of three workingdays beginning on Monday, Tuesday and Wednes-day, but we would like to mark only the one be-ginning on Monday.
However, a bracketing FSTcannot refer to the alternative timelines to test ifany of them contains an earlier applicable period.As a solution, we have such operations asn_consecutive insert an alternative marker bracket(denoted by [.
.
. ]
below) on each timeline into eachposition in which it adds a marker bracket ({.
.
.
})on another timeline.
The following simplified al-ternative timelines illustrate the example above:Su { Mo [ Tu [ We } Th ] Fr ] SaSu [ Mo { Tu [ We ] Th } Fr ] SaSu [ Mo [ Tu { We ] Th ] Fr } SaThe operation nth_within seeks the first marked pe-riod in June with no opening alternative markerbracket between it and the beginning of June.4 Implication: All or NothingIn some applications, an SCE may denote a set ofperiods of times all of which should be containedin those denoted by another SCE, or if impossi-ble, none of them should be.
For example, all theclass times of a course with compulsory attendanceshould coincide with the free slots of time in thecalendar of a student wishing to attend the course.An intersection of the class times and the student?sfree slots of time would also contain partial resultsif he or she could attend only some of the classes.6The SCE nth_within (1, n_consecutive (3, calday), jun)(the first period of three consecutive (calendar) days in June)denotes the same as first_n_within (3, calday, jun) (the firstthree days in June).
A similar rephrasing would not be correctfor working days, however.73To obtain the desired result, we use the opera-tion impl (a, b) to mark all the periods a if and onlyif they all are fully contained in the periods b.
If apoint of time is in a, it must also be in b for a tobe marked, so the operation can be regarded of asa kind of an implication a?
b.
Above, we wouldcompute impl (course, student_free).A course with alternative instances would berepresented with a timeline FSA defining an alter-native timeline for each instance.
The bracketingFST corresponding to the above implication wouldthen mark the class times of each instance that iscompletely within the student?s free slots of time.5 Related WorkWe briefly mention the approaches to quantifica-tion of some research related to the bracketingFST model in purpose or coverage.
TEL (En-driss, 1998) represents universally quantified ex-pressions like unquantified ones.
TEL has numer-ical quantification and quantifier negation.
TCNL(Han and Lavie, 2004) represents universal quan-tification as an enumeration.
An unquantified ex-pression denotes an underspecified time.
LikeTEL, TCNL has no explicit existential quantifica-tion.
Ohlbach and Gabbay (1998) represent uni-versal quantification with a parametrized modaloperator ?always within a period?
and existentialwith ?sometime within a period?.
Cukierman andDelgrande (1998) represent quantified expressionsin a way resembling that of ours but unquantifiedexpressions effectively as existentially quantified.TimeML (Saur?
et al, 2006) represents quantifica-tion by quantifier and frequency attributes.
OWL-Time (Pan and Hobbs, 2005) uses temporal aggre-gates for universal and numerical quantification.6 Discussion and Further WorkIn our view, SCEs corresponding to typical quan-tified calendar phrases can be represented in thebracketing FST model fairly naturally, althoughthe naturalness of representing unquantified, un-derspecified phrases collectively can be disputed,and the representation of any Monday in every Mayis not compositional.
Implication, in turn, wouldseem useful for representing a set of periods oftime fully contained in another set of periods.Although some types of calendar informationare impossible to represent exactly or naturallywith finite-state methods, we find the bracketingFST model a promising representation for manycommon types.
However, to be usable in practice,the model needs further work in both coverage andefficiency.
Moreover, applications would benefitfrom a component to parse a (restricted) natural-language calendar phrase to an SCE and anotherone to generate the former from the latter.AcknowledgementsThis paper represents independent work by the firstauthor based on the suggestions of the second au-thor and funded by the Graduate School of Lan-guage Technology in Finland.
We thank the anony-mous reviewers for their valuable comments.ReferencesCukierman, Diana and James P. Delgrande.
1998.Expressing time intervals and repetition within aformalization of calendars.
Computational Intelli-gence, 14(4):563?597.Endriss, Ulrich.
1998.
Semantik zeitlicher Ausdr?ckein Terminvereinbarungsdialogen.
Verbmobil Report227, Technische Universit?t Berlin, Fachbereich In-formatik, Berlin, August.Han, Benjamin and Alon Lavie.
2004.
A frameworkfor resolution of time in natural language.
ACMTransactions on Asian Language Information Pro-cessing (TALIP), 3(1):11?32, March.Niemi, Jyrki and Kimmo Koskenniemi.
2007.
Repre-senting calendar expressions with finite-state trans-ducers that bracket periods of time on a hierarchi-cal timeline.
In Nivre, Joakim, Heiki-Jaan Kaalep,Kadri Muischnek, and Mare Koit, editors, Pro-ceedings of the 16th Nordic Conference of Compu-tational Linguistics NODALIDA-2007, pages 355?362, Tartu, Estonia.
University of Tartu.Niemi, Jyrki and Kimmo Koskenniemi.
2008.
Rep-resenting and combining calendar information byusing finite-state transducers.
In Proceedingsof the Seventh International Workshop on Finite-State Methods and Natural Language Processing(FSMNLP) 2008.
To appear.Ohlbach, Hans J?rgen and Dov Gabbay.
1998.
Calen-dar logic.
Journal of Applied Non-classical Logics,8(4):291?324.Pan, Feng and Jerry R. Hobbs.
2005.
Temporal aggre-gates in OWL-Time.
In Proceedings of the 18th In-ternational Florida Artificial Intelligence ResearchSociety Conference (FLAIRS-2005), pages 560?565,Clearwater Beach, Florida.
AAAI Press.Saur?, Roser, Jessica Littman, Bob Knippen, RobertGaizauskas, Andrea Setzer, and James Pustejovsky.2006.
TimeML annotation guidelines, version 1.2.1.http://timeml.org/site/publications/timeMLdocs/annguide_1.2.1.pdf, January.74
