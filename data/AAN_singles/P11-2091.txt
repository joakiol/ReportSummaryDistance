Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers, pages 519?523,Portland, Oregon, June 19-24, 2011. c?2011 Association for Computational LinguisticsInteractive Group Suggesting for TwitterZhonghua Qu, Yang LiuThe University of Texas at Dallas{qzh,yangl}@hlt.utdallas.eduAbstractThe number of users on Twitter has drasti-cally increased in the past years.
However,Twitter does not have an effective user group-ing mechanism.
Therefore tweets from otherusers can quickly overrun and become in-convenient to read.
In this paper, we pro-pose methods to help users group the peo-ple they follow using their provided seedingusers.
Two sources of information are used tobuild sub-systems: textural information cap-tured by the tweets sent by users, and socialconnections among users.
We also proposea measure of fitness to determine which sub-system best represents the seed users and useit for target user ranking.
Our experimentsshow that our proposed framework works welland that adaptively choosing the appropriatesub-system for group suggestion results in in-creased accuracy.1 IntroductionTwitter is a well-known social network service thatallows users to post short 140 character status updatewhich is called ?Tweet?.
A twitter user can ?follow?other users to get their latest updates.
Twitter cur-rently has 19 million active users.
These users fol-lows 80 other users on average.
Default Twitter ser-vice displays ?Tweets?
in the order of their times-tamps.
It works well when the number of tweetsthe user receives is not very large.
However, theflat timeline becomes tedious to read even for av-erage users with less than 80 friends.
As Twitterservice grows more popular in the past few years,users?
?following?
list starts to consist of Twitter ac-counts for different purposes.
Take an average user?Bob?
for example.
Some people he follows are his?Colleagues?, some are ?Technology Related Peo-ple?, and others could be ?TV show comedians?.When Bob wants to read the latest news from his?Colleagues?, because of lacking effective ways togroup users, he has to scroll through all ?Tweets?from other users.
There have been suggestions frommany Twitter users that a grouping feature could bevery useful.
Yet, the only way to create groups isto create ?lists?
of users in Twitter manually by se-lecting each individual user.
This process is tediousand could be sometimes formidable when a user isfollowing many people.In this paper, we propose an interactive group cre-ating system for Twitter.
A user creates a group byfirst providing a small number of seeding users, thenthe system ranks the friend list according to howlikely a user belongs to the group indicated by theseeds.
We know in the real world, users like to grouptheir ?follows?
in many ways.
For example, somemay create groups containing all the ?computer sci-entists?, others might create groups containing theirreal-life friends.
A system using ?social informa-tion?
to find friend groups may work well in the lat-ter case, but might not effectively suggest correctgroup members in the former case.
On the otherhand, a system using ?textual information?
may beeffective in the first case, but is probably weak infinding friends in the second case.
Therefore inthis paper, we propose to use multiple informationsources for group member suggestions, and use across-validation approach to find the best-fit sub-519system for the final suggestion.
Our results showthat automatic group suggestion is feasible and thatselecting approximate sub-system yields additionalgain than using individual systems.2 Related WorkThere is no previous research on interactive sug-gestion of friend groups on Twitter to our knowl-edge; however, some prior work is related and canhelp our task.
(Roth et al, 2010) uses implicit so-cial graphs to help suggest email addresses a personis likely to send to based on the addresses alreadyentered.
Also, using the social network informa-tion, hidden community detection algorithms suchas (Palla et al, 2005) can help suggest friend groups.Besides the social information, what a user tweets isalso a good indicator to group users.
To character-ize users?
tweeting style, (Ramage et al, 2010) usedsemi-supervised topic modeling to map each user?stweets into four characteristic dimensions.3 Interactive Group CreationCreating groups manually is a tedious process.However, creating groups in an entirely un-supervised fashion could result in unwanted results.In our system, a user first indicates a small numberof users that belong to a group, called ?seeds?, thenthe system suggests other users that might belong tothis group.
The general structure of the system isshown in Figure 1.
[ Social Sub-System?
?Textual Sub-SystemSub-SystemSelectorSeed UsersTarget Users RanksFigure 1: Overview of the system architectureAs mentioned earlier, we use different informa-tion sources to determine user/group similarity, in-cluding textual information and social connections.A module is designed for each information source torank users based on their similarity to the providedseeds.
In our approach, the system first tries to detectwhat sub-system can best fit the seed group.
Then,the corresponding system is used to generate the fi-nal ranked list of users according to the likelihood ofbelonging to the group.After the rank list is given, the user can adjust thesize of the group to best fit his/her needs.
In addition,a user can correct the system by specifically indicat-ing someone as a ?negative seed?, which should notbe on the top of the list.
In this paper, we only con-sider creating one group at a time with only ?positiveseed?
and do not consider the relationships betweendifferent groups.Since determining the best fitting sub-system orthe group type from the seeds needs the use of thetwo sub-systems, we describe them first.
Each sub-system takes a group of seed users and unlabeledtarget users as the input, and provides a ranked listof the target users belonging to the group indicatedby the seeds.3.1 Tweet Based Sub-systemIn this sub-system, user groups are modeled usingthe textual information contained in their tweets.
Wecollected all the tweets from a user and groupedthem together.To represent the tweets information, we could usea bag-of-word model for each user.
However, sinceTwitter messages are known to be short and noisy,it is very likely that traditional natural language pro-cessing methods will perform poorly.
Topic mod-eling approaches, such as Latent Dirichlet Alloca-tion (LDA) (Blei et al, 2003), model document as amixture of multinomial distribution of words, calledtopics.
They can reduce the dimension and groupwords with similar semantics, and are often morerobust in face of data sparsity or noisy data.
Be-cause tweet messages are very short and hard to infertopics directly from them, we merge all the tweetsfrom a user to form a larger document.
Then LDAis applied to the collection of documents from allthe users to derive the topics.
Each user?s tweetscan then be represented using a bag-of-topics model,where the ith component is the proportion of the ith520topic appearing in the user?s tweet.Given a group of seed users, we want to find targetusers that are similar to the seeds in terms of theirtweet content.
To take multiple seed instances intoconsideration, we use two schemes to calculate thesimilarity between one target user and a seed group.?
centroid: we calculate the centroid of seeds,then use the similarity between the centroid andthe target user as the final similarity value.?
average: we calculate the similarity betweenthe target and each individual seed user, thentake the average as the final similarity value.In this paper, we explore using two different sim-ilarity functions between two vectors (ui and vi),cosine similarity and inverse Euclidean distance,shown below respectively.dcosine(u, v) =1| u || v |n?i=1ui ?
vi (1)deuclidean(u, v) =1?
?ni=1(ui ?
vi)2(2)After calculating similarity for all the target users,this tweet-based sub-system gives the ranking ac-cordingly.3.2 Friend Based Sub-systemAs an initial study, we use a simple method to modelfriend relationship in user groups.
In the future, wewill replace it with other better performing meth-ods.
In this sub-system, we model people usingtheir social information.
In Twitter, social informa-tion consists of ?following?
relation and ?mentions?.Unlike other social networks like ?Facebook?
or?Myspace?, a ?following?
relation in Twitter is di-rected.
In Twitter, a ?mention?
happens when some-one refers to another Twitter user in their tweets.Usually it happens in replies and retweets.
Becausethis sub-system models the real-life friend groups,we only consider bi-directional following relationbetween people.
That is, we only consider an edgebetween users when both of them follow each other.There are many hidden community detection algo-rithms that have been proposed for network graphs(Newman, 2004; Palla et al, 2005).
Our task is how-ever different in that we know the seed of the targetgroup and the output needs to be a ranking.
Here, weuse the count of bi-directional friends and mentionsbetween a target user and the seed group as the scorefor ranking.
The intuition is that the social graph be-tween real life friends tends to be very dense, andpeople who belong to the clique should have moreedges to the seeds than others.3.3 Group Type DetectionThe first component in our system is to determinewhich sub-system to use to suggest user groups.
Wepropose to evaluate the fitness of each sub-systembase on the seeds provided using a cross-validationapproach.
The assumption is that if a sub-system(information source used to form the group) is agood match, then it will rank the users in the seedgroup higher than others not in the seed.The procedure of calculating the fitness score ofeach sub-system is shown in Algorithm 1.
In the in-put, S is the seed users (with more than one user),U is the target users to be ranked, and subrank isa ranking sub-system (two systems described above,each taking seed users and target users as input, andproducing the ranking of the target users).
This pro-cedure loops through the seed users.
Each time, ittakes one seed user Si out and puts it together withother target users.
Then it calls the sub-system torank the new list and finds out the resulting rank forSi.
The final fitness score is the sum of all the ranksfor the seed instances.
The system with the highestscore is then selected and used to rank the originaltarget users.Algorithm 1 Fitness of a sub-system for a seedgroupproc fitness(S,U, subrank) ?ranks := ?for i := 1 to size(S) doU ?
:= Si ?
US?
:= S \ Sir := subrank(U ?, S?
);t := rankOf(Si, r);ranks := ranks ?
t; odfitness := sum(ranks);print(fitness);end4 DataOur data set is collected from Twitter website usingits Web API.
Because twitter does not provide directfunctions to group friends, we use lists created by521twitter users as the reference friend group in testingand evaluation.
We exclude users that have less than20 or more than 150 friends; that do not have a qual-ified list (more than 20 and less than 200 list mem-bers); and that do not use English in their tweets.After applying these filtering criteria, we found 87lists from 12 users.
For these qualified users, their1, 383 friends information is retrieved, again usingTwitter API.
For the friends that are retrieved, their180, 296 tweets and 584, 339 friend-of-friend infor-mation are also retrieved.
Among all the retrievedtweets, there are 65, 329 mentions in total.5 ExperimentIn our experiment, we evaluate the performance ofeach sub-system and then use group type detectionalgorithm to adaptively combine the systems.
Weuse the Twitter lists we collected as the referenceuser groups for evaluation.
For each user group, werandomly take out 6 users from the list and use asseed candidate.
The target user consists of the rest ofthe list members and other ?friends?
that the list cre-ator has.
From the ranked list for the target users, wecalculate the mean average precision (MAP) scorewith the rank position of the list members.
For eachgroup, we run the experiment 10 times using ran-domly selected seeds.
Then the average MAP on allruns on all groups is reported.
In order to evaluatethe effect of the seed size on the final performance,we vary the number of seeds from 2 to 6 using the 6taken-out list members.In the tweet based sub-system, we optimize its hy-per parameter automatically based on the data.
Aftertrying different numbers of topics in LDA, we foundoptimal performance with 50 topics (?
= 0.5 and?
= 0.04).System Seed Size2 3 5 6Tweet SubCosCent 28.45 29.34 29.54 31.18CosAvg 28.37 29.51 30.01 31.45EucCent 27.32 28.12 28.97 29.75EucAvg 27.54 28.74 29.12 29.97Social Sub 26.45 27.78 28.12 30.21Adaptive 30.17 32.43 33.01 34.74BOW baseline 23.45 24.31 24.73 24.93Random Baseline 17.32Table 1: Ranking Result (Mean Average Precision) usingDifferent Systems.Table 1 shows the performance of each sub-system as well as the adaptive system.
We includethe baseline results generated using random ranking.As a stronger baseline (BOW baseline), we used co-sine similarity between users?
tweets as the similar-ity measure.
In this baseline, we used a vocabularyof 5000 words that have the highest TF-IDF values.Each user?s tweet content is represented using a bag-of-words vector using this vocabulary.
The rankingof this baseline is calculated using the average simi-larity with the seeds.In the tweet-based sub-system, ?Cos?
and ?Euc?mean cosine similarity and inverse Euclidean dis-tance respectively as the similarity measure.
?Cent?and ?Avg?
mean using centroid vector and averagesimilarity respectively to measure the similaritiesbetween a target user and the seed group.
From theresults, we can see that in general using a larger seedgroup improves performance since more informa-tion can be obtained from the group.
The ?CosAvg?scheme (which uses cosine similarity with averagesimilarity measure) achieves the best result.
Usingcosine similarity measure gives better performancethan inverse Euclidean distance.
This is not surpris-ing since cosine similarity has been widely adoptedas an appropriate similarity measure in the vectorspace model for text processing.
The bag-of-wordbaseline is much better than the random baseline;however, using LDA topic modeling to collapse thedimension of features achieves even better results.This confirms that topic modeling is very useful inrepresenting noisy data, such as tweets.In the adaptive system, we also used ?CosAvg?scheme in the tweet based sub-system.
After the au-tomatic sub-system selection, we observe increasedperformance.
This indicates that users form listsbased on different factors and thus always usingone single system is not the best solution.
It alsodemonstrates that our proposed fitness measure us-ing cross-validation works well, and that the two in-formation sources used to build sub-systems can ap-propriately capture the group characteristics.6 ConclusionIn this paper, we have proposed an interactive groupcreation system for Twitter users to organize their?followings?.
The system takes friend seeds pro-vided by users and generates a ranked list according522to the likelihood of a test user being in the group.We introduced two sub-systems, based on tweet textand social information respectively.
We also pro-posed a group type detection procedure that is ableto use the most appropriate system for group userranking.
Our experiments show that by using differ-ent systems adaptively, better performance can beachieved compared to using any single system, sug-gesting this framework works well.
In the future, weplan to add more sophisticated sub-systems in thisframework, and also explore combining ranking out-puts from different sub-systems.
Furthermore, wewill incorporate negative seeds into the process ofinteractive suggestion.ReferencesDavid M. Blei, Andrew Y. Ng, Michael I. Jordan, andJohn Lafferty.
2003.
Latent dirichlet alocation.
Jour-nal of Machine Learning Research, 3:2003.Mark Newman.
2004.
Analysis of weighted networks.Physical Review E, 70(5), November.Gergely Palla, Imre Derenyi, Illes Farkas, and Tamas Vic-sek.
2005.
Uncovering the overlapping communitystructure of complex networks in nature and society.Nature, 435(7043):814?818, June.Daniel Ramage, Susan Dumais, and Dan Liebling.
2010.Characterizing microblogs with topic models.
InICWSM.Maayan Roth, Assaf Ben-David, David Deutscher, GuyFlysher, Ilan Horn, Ari Leichtberg, Naty Leiser, YossiMatias, and Ron Merom.
2010.
Suggesting friendsusing the implicit social graph.
In SIGKDD, KDD ?10,pages 233?242.
ACM.523
