Domain Communicat ion KnowledgeOwen Rambow*Department ofComputer and Information ScienceUniversity of PennsylvaniaPhiladelphia, PA 19104AbstractThis paper advances the hypothesis that any text plan-ning task relies, explicitly or implicitly, on domain-specific text planning knowledge.
This knowledge, "do-main communication k owledge", is different from bothdomain knowledge and general knowledge about com-munication.
The paper presents the text generationsystem Joyce, which represents such knowledge xplic-itly.The Joyce Text Generation SystemThe Joyce text generation system is a part of the soft-ware design environment Ulysses (Korelsky and UlyssesStaff, 1988; Rosenthal el al., 1988).
Ulysses is a graph-ical environment for the design of secure, distributedsoftware systems.
The design proceeds hierarchicallyby top-down refinement.
A formal specification i ter-face and a theorem prover allow the user to formallyverify the flow security of the designed system.Joyce is part of the user interface.
Joyce generatesdifferent types of texts about software designs:?
It generates annotations of the design which are in-tended to serve as system documentation during andafter the design process.?
It is used to explain the result of a heuristic securitydesign tool, the "flow analyzer".The texts Joyce generates are specifically conceivedof as written texts: there is no feature for interactivenatural-language explanation.
The texts may be severalparagraphs long.
The text in figure 1 is an annotationof the component "Host"; the graphical representationof the first level of the design of the Host is shown in fig-ure 2.
(This picture corresponds to the first of the twoparagraphs of the text.)
The text annotates the soft-ware design by describing its structure and interpretingit in terms of its security characteristics.
*The research reported in this paper was carried outwhile the author was at Odyssey Research Associates,Ithaca, NY.
It was supported by the Air Force SystemsCommand at Rome Air Development Center under Con-tract No.
F30602-85-C-0098St ructure  of  JoyceJoyce consists of three separate modules, which performdistinct asks and access their own knowledge bases.1.
The text planner produces a list of propositions,which represents both the content and the structureof the intended text.
Thus, the task of Joyce's textplanner is similar in definition to TEXT's (McKe-own, 1985), but different from that of Penman (Hovy,1988), which expects the content selection task tohave already been performed.
Each proposition isex-pressed in a language-independent, conceptual frame-like formalism.
It encodes aminimal amount of infor-mation, but can be realized as an independent sen-tence if necessary.
The text planner draws on domaincommunication k owledge xpressed in a high-levelschema language (see below).2.
The sentence planner takes the list of propositionsand determines how to express them in naturallanguage.
This task includes choosing lexicaliza-tions and a syntactic structure for each propositions,and assembling these lexico-syntactic structures intolarger sentences.
It draws on knowledge captured inthe conceptual/Engish dictionary.3.
The linguistic realizer takes the syntactic structuresand produces urface sentences.
It draws on syntacticand morphological knowledge, expressed in the lexi-con.
The linguistic omponent is based on Meaning-Text Theory (Mel'~uk, 1988), and is a reimplementa-tion in Lisp of Polgu~re's Prolog implementation (see(Iordanskaja etal., 1988a; Iordanskaja etat., 1988b)).Usually, the task of text generation is subdividedinto two subtasks (planning and realization), not three.However, there is a certain amount of disagreementabout where the line between the two is to be drawn.For example, McKeown's TEXT (McKeown, 1985) andR/Ssner's SEMTEX (RSsner, 1987) seem to considerthe tasks that Joyce classifies as sentence planningas part of the realization process, whereas Meteer'sSPOKESMAN (Meteer, 1989) classifies them as partof text planning.
The proposed finer-grained terminol-ogy may prove useful in discussing text generation and87HOST: General Structure and Security FeaturesThe multilevel Host is a complex component ofthe Sta-tion.
It contains a Kernel, a TIP, a Process, a Net Han-dler and a group of Managers.
The Process, the TIP,the Managers and the Net Handler communicate onlythrough the Kernel.
The manifestly secure Process andthe Managers perform auxiliary functions.
The Processis low-level.
The TIP serves as interface to a User; theNet Handler handles communication with a Net.
Thesecurity statuses of the TIP, the Managers and the NetHandler have not yet been specified.The Kernel is a complex component.
Its security statushas not yet been specified.
The Kernel contains a Mes-sage Switch, an Adress Register and a Locator.
TheAdress Register, the Locator and the Message Switchcommunicate directly with each other.
The low-levelAdress Register and the multilevel Locator are data-bases.
The Message Switch handles communicationwith the TIP, the Process, the Managers and the NetHandler.
The security status of the Message Switch hasnot yet been specified.Figure 1: The HOST Texttext generation systems by avoiding ambiguity.
In thispaper, "text planning" will always be used in this nar-rower sense.The three modules have been implemented in apipelined manner.
Execution is interleaved temporally,so that surface text is produced shortly after the gener-ation process is initiated.
However, data need only flowin one direction; each module knows what informationthe next module requires.Text  P lann ing  in Joyce:  the  TaskSince there was no corpus of texts available for analysisprior to the design of the text planning component, thefirst task of the design was to assemble such a corpus.Specialists in the design of secure software were asked toproduce short descriptions of their designs, concentrat-ing on the structure and security features of the designs.This exercise provided useful insight into the problem.In particular, it became obvious that a text planner,whether human or machine, would face the followingproblems:?
Even if virtually unlimited omain knowledge isavail-able (i.e, human experts), it is impossible to translatethis knowledge directly into the knowledge requiredfor writing texts about that domain.
How to writeabout a new domain must be learned.
Typically, hu-mans do this by repeatedly going through a cycle oftext production, critique and revision.?
The underlying representation in Ulysses (its domainrepresentation) is designed in a way best suited forthe formal modeling and mathematical verification ofsecurity properties, rather than for the storage andretrieval of information.
Therefore, the text plannermust interpret the data in order to communicate it.It is not sufficient to simply retrieve data.?
The texts in the corpus have a clear rhetorical struc-ture, but the relations that hold between the rhetori-cal blocks are not very varied: using the terminologyof RST (Mann and Thompson, 1987), they are byand large restricted to the elaborate, backgroundand sequence relationships.
This rhetorical "flat-ness" effectively rules out an approach to planningthese texts which is based only or even largely onrhetorical considerations.?
Since there are numerous objects in the domain, withan ever larger number of interconnections betweenthem, "paths" through the domain representationcannot be relied on for providing the organizing prin-ciple for text planning: the text would become repet-itive and long.
Furthermore, the decision of which ofthe many possible paths to take would still remainopen.
A "procedural strategy" (Paris and McKeown,1986) is not sufficient to plan the text.The question, then, is: how can text be planned inthose domains and applications in which previously pro-posed strategies seem to fail for reasons particular tothe domain or application?
(This Js essentially the sec-ond of Hovy's "unsolved problems in the planning ofparagraphs", (Hovy, 1989)).Text  P lann ing  and  DomainCommunicat ion  KnowledgeThree Types of KnowledgeRecent research in text planning has stressed the impor-tance for text planning of what may be called "commu-nication knowledge", general and domain-independentknowledge about how to use language in order toachieve communicative goals.
Communication k owl-edge includes rhetoric and knowledge about thematic 1structure.
Rhetoric relates complex goals of communi-cation to other, more elementary goals of communica-tion.
Thematic knowledge relates the thematic func-tion of sentence lements to the thematic function ofelements in adjacent sentences.
Communication k owl-edge is independent of any particular domain knowl-edge.
However, between domain and communicationknowledge one may identify a third type of knowl-edge, which I will call "domain communication k owl-edge".
Domain communication k owledge relates do-main knowledge to all aspects of verbal communication,including communicative goals and function.
It is nec-essarily domain-dependent.
However, it is not the sameas domain knowledge; it is not needed to reason about1The term "thematic" will refer, in this paper, to thecommunicative structure of a sentence, and will grouptogether the phenomena that have been identified astopic/comment or theme/theme.88UlyssB~ Gt~phics I ncar~G~ - -  HOSTSNET t'IA,qOI.ER~ t  ~ KIERNELOTHER MANAGERSIt/I OTHER POCESSESTIPel--.~.,.
O?~nmae4=:Figure 2: The HOST Graphical Representationthe domain, it is needed to communicate about thedomain.
For example, consider the task of describingsome objects in some domain.
Communication knowl-edge about thematic structure implies a strategy thatdescribes those objects together that share some fea-ture.
Domain knowledge can supply information aboutwhich objects share which feature.
But if there aremany different features, the task remains of choosingthe feature according to which the descriptions will begrouped together.
This choice must be based on knowl-edge which is neither general knowledge about com-munication (since the choice depends on the particularfeatures of objects in the domain), but it is not actualdomain knowledge, either (since it is only needed forplanning communiction).What is the role of domain communication k owledgein text planning?
Rather than trying avoid the stigmaof domain-specifity, I propose to tackle the problemhead-on, and posit the hypothesis that all text planningtasks require domain communication knowledge; Therest of this section will attempt to motivate this hypoth-esis by investigating two other text planning systems.The following section then discusses the representationof domain communication knowledge in Joyce.Domain  Communicat ion  Knowledge inOther  Sys temsResearchers whose principal interest lies in the repre-sentation and use of rhetorical or thematic knowledgehave paid less attention to domain-specific problems intext planning.
I will analyze two text planning systemsin order to illustrate the hypothesis that any text plan-ning task involves domain communication knowledge.?
McKeown's TEXT (McKeown, 1985) uses schemas toencode rhetorical knowledge 2.
These schemas "cap-ture patterns of textual structure that are frequentlyused by a variety of people" (McKeown, 1985, p. 37).Each schema consists of a list of rhetorical predi-cates; the predicates can be matched against he do-main representation and reMized by a proposition,or they can be instantiated by another schema.
Theschemas/predicates r present basic rhetorical opera-tions, such as identification, compare and con-trast and constituency.The rhetorical schemas are domain-independent, butthe text planner needs to relate them to a given do-main in order to produce a text plan.
This is wheredomain communication knowledge is needed.
Thedomain communication knowledge is implicitly en-2For reasons of space limitations, this analysis disregardsTEXT's use of thematic knowledge.
A more complete anal-ysis would not significantly alter the conclusion.89coded in the "semantics" ofthe rhetorical predicates:"these are semantics in the sense that they definewhat a predicate means  in a database system" (McK-eown, 1985, p. 45).
The semantics are implementedas functions that access the data base.
The semanticsare dependent on the structure of the data base, butindependent of its domain.
However, the domain ofthe texts is precisely the st ructure  of the data base,not the domain  of the data base.
In this sense, ~ thesemantics are specific to the domain of the texts.
(Asimilar analysis would apply to other interfaces todata bases that are based on principally on rhetoric,such as Maybury's JENNY (Maybury, 1989).
)By way of example, consider McKeown's discussion ofTEXT's response to the user query "What is a ship?
"(McKeown, 1985, p. 47).
Using its rhetorical com-munication knowledge, TEXT decides that the firstpredicate to be matched is the identif ication pred-icate.
Communication k owledge cannot, however,be used to interpret the domain representation in or-der to find appropriate information that might serveto identify a ship.
Neither is domain knowledge suf-ficient: the domain representation e codes the factsthat a ship is a water-going vehicle and that it travelson the surface, but it does not reveal that these twofacts are exactly what is needed to identify a ship.Thus the different types of knowledge have very dif-ferent purposes in TEXT: rhetorical knowledge re-lates the discourse goal to a sequence of constituentcommunicative goals.
Each communicative goal canin turn be related to another set of communicativegoals.
Once the recursive xpansion of communica-tive goals comes to an end, domain communicationknowledge (the semantics function) relates each com-municative goal to domain knowledge and producesa proposition.?
TWRM-TOPOGRAPHIC, a system under develop-ment at the University of Constance (see (Sonnen-berger, 1988)), produces natural anguage abstractsfrom texts.
The generation component of TWRM-TOPOGRAPHIC uses a similar system architectureto TEXT, but relies on different knowledge.
Itsgeneration component, developped by Gabi Sonnen-berger, uses an explicit encoding of thematic knowl-edge to guide the text planning process.
The start-ing point of the abstracting and generation process isa representation f the contents of a text, the "textgraph".
It expresses the thematical relations betweentext spans.
A discourse strategy is chosen on the ba-sis of the thematic progression pattern of the textgraph.
The graph determines the sequence of propo-sitions for realization.Thus, domain-independent k owledge about typicalpatterns of thematic progression guides the text plan-ning process.
Here, no semantics are needed since theinformation about hematic roles is already expressedby the text graph from which the discourse strategiesdraw their information.
It is in constructing the textgraph that domain communication k owledge isusedso that the relevance of domain facts to the commu-nicative process can be encoded.
The use of domaincommunication k owledge is crucial to the text plan-ning process, but remains implicit.Mak ing  Domain  Communicat ionKnowledge  Exp l i c i tIf the hypotheses that any text planning task requiresdomain communication k owledge is correct, then thequestion arises about how to represent and use suchknowledge.
Usually, domain communication k owledgeis simply represented asLISP code (such as the seman-tics in TEXT), or implicitly encoded into the input tothe text planner (such as the text graph in TWRM-TOPOGRAPHIC).
Some other knowledge representa-tion formalism is needed.Domain Communication KnowledgeRepresentation i n  JoyceIn choosing a formalism for representing domaincommunication knowledge, a fact becomes apparent:though certain types of texts (such as Russian folktales) may be generated by a context-free formalismsuch as a "story grammar" (or even a "mildly context-sensitive" formalism such as a TAG), this is not truein general.
A context-free formalism cannot capture infull generality the knowledge needed to plan texts.
Onthe other hand, if domain communication k owledgeis to be an interesting concept, then its representationmust be restricted in some way; simply using, say, LISPcode does not represent much insight into the processof text planning.
A good approach may be, therefore,to choose a restricted formalism and then to enquirein what ways it needs to be expanded to allow for thetypes of operations that text planning requires.These considerations have lead to the choice ofdomain-specific s hemas as the basis for text planningin Joyce.
These schemas are similar in form to thoseused by McKeown.
Basically, aschema isan ordered setof instructions.
The instructions can be calls to otherschemas, recursive calls to the same schema, or theycan produce a specific proposition and add it to thetext representation.
The schemas upport conditionalbranching and iteration.
In addition, two new instruc-tions represent extensions to the context-free formalism.?
A portion of the text plan can be edited.
To do this,a schema is called, but any propositions that are cre-ated (by the schema or by any schema it calls) are notadded to the text representation.
They are kept on aseparate list in the order they are created.
When theexecution of the schema terminates, an editing func-tion is applied to the list.
This editing function canbe a default function, or it can be explicitly named90in the call to the schema.
It can delete propositions,change their order, change their contents or createnew ones.
The choice of an editing function dependson the domain and on the particular equirements ofthe text.
This type of revision is different from therevision Meteer discusses in (Meteer, 1988), as it issituated at the text plan level, rather than the sen-tence level.
The same remark holds for Gabriel's Yhsystem (Gabriel, 1988).
Its complex architecture ex-ecutes a cycle of text production, observation by "ex-perts" and text modification.
However, these expertsare all situated at the sentence planning level; thetext plan is produced by domain-specific text plan-ners (such as an "array expert"), and is not itselfsubject o revision.?
Schemas can post to a "blackboard", and check thisblackboard for messages.
This allows for additionalcontrol and communication between schemas whichare called at different imes during the text planningprocess and cannot communicate with each other bypassing arguments.Instead of being templates that limit the structure ofthe text to certain preconceived types, the schemas arenow an explicit and compact representation f domaincommunication k owledge.ExampleConsider the first paragraph of the sample text in fig-ure 1.
It describes the component "Host".
A rhetoricalschema might specify a sequence of the ident i f icat ionpredicate (the first sentence), the const i tuency  pred-icate (the second and third sentences) and several am-pl i f icat ion predicates (the remaining four sentences).This analysis hows that the resulting text has a well-formed rhetorical structure.
However, this analysis initself does not constitute a text plan, since the textplanner must know how to relate the rhetorical predi-cates to the domain knowledge, i.e., how to choose infor-mation from the domain representation to realize eachpredicate.
The system maintains many different kindsof information about each component: its name; itsparent, sibling, and subcomponents in the hierarchicalmodel; its ports; its security level; its secutiy status;the location and size of its icon on the screen; variousinformation relating to the formal specification of thecomponent.
Choosing different ypes of information torealize each predicate will result in very different exts:?
For example, the ident i f icat ion could be accom-plished by reporting the name of a comonent andits location on the screen, or by describing its con-nectivity with its sibling components.?
In order to describe the const i tuency  of a compo-nent, the text planner will most likely report the sub-components of a component, but it could also dicussits ports.
It may or may not discuss the way thesubcomponents are connected (their connectivity).defschema describe-complex-component1.
condi t ion not-atomic-component?$.
local-variable relevant-componentsare (get-relevant-components self)3. theme self~.
exclusive-choice toplevel-id or lower-id5.
contains6.
excluslve-cholce star-connectivityor complete-connectivityor default-connectivity7.
exclusive-cholce enforced-security or not-secure8.
edi t - for - these-objectsobjects (exclude-from coins relevant-components)schema security-functional-featuresedit-function join-same-concepts9.
force-paragraph10.
for - these-objects  relevant-components: generalFigure 3: The DESCRIBE-COMPLEX-COMPO-NENT Schema?
The notion of amplification is so general as to allowany of the information in the domain representationto realize the rhetorical predicate.The domain communication knowledge needed tomake these decisions is explicitly represented in Joyceby schemas.
An  example of such a schema is found infigure 3.
It provides the basic framework for the firstparagraph of the HOST text.In this schema, each numbered line represents an in-struction.
Executing every instruction in turn will ac-complish the goal associated with the schema, namelyto describe a cornlpex component.
Special operators arerepresented in boldface.
Words in Roman font repre-sent either calls other schemas, or variables or functions.Words and numbers in italics are comments.
(The ac-tual lisp-based representation of this schema in Joycecontains some additional parentheses, of course.
)This particular schema is only applicable if the com-ponent to which its is applied is not atomic.
The Hostmeets this condition (line 1).
Line 2 sets up a localvariable, and line 3 defines the theme (topic) of theparagraph to be the Host.
Line 4 identifies the com-ponent under discussion: the particular choice of howto identify a component depends on whether it is thetop-level component, or whether it has a parent com-ponent.
Since the Host does have a parent component,schema lower-id (not shown here) is chosen.
Its execu-tion generates three propositions, identifying the Hostby its parent component, its complexity and its securitylevel.
The sentence planner merges these propositionsinto the first sentence.In order to describe the constituents of the compo-nent under discussion, Joyce first calls the containsschema which lists the subcomponents of the Host (line5).
It then describes the connectivity of the subcompo-9\].nent.
The simple solution would be to follow a proce-dural strategy and to list all connections between sub-components (The Net Handler communicates with ~heKernel.
The Kernel communicates with the Managers....).
However, for certain types of connectivity thereare descriptive shortcuts: for example, all subcompo-nents may communicate with all other subcomponents,or all subcomponents may communicate with exactlyone central subcomponent (as is the case of the Hostin the sample paragraph).
In fact, if no descriptiveshortcut is available, it turns out that the resulting textis so cumbersome that it is better not to describe theconnectivity at all (the user may consult he graphicalrepresentation).
The text planner must be able to iden-tify these special cases of connectivity and choose theapplicable descriptive strategy, or initiate the defaultstrategy if no shortcuts are available (fine 6).Joyce amplifies on the previously given informationby giving some additional information about the Host(line 7; no additional security information is availablefor the Host, so no proposition isgenerated), and abouteach of its subcomponents.
Joyce has already deter-mined that one component, he Kernel, contains ub-components of its own (and is thus a "relevant" com-ponent - line 2).
The second paragraph of the HOSTtext is devoted to it, so it is not discussed in the para-graph about the Host.
For the remaining subeompo-nents, Joyce decides to give a brief description of theirfunction and of their security features.
However, Joycemust also decide on how to order the information.
Noorder can be specified on rhetorical grounds, since nocomponent is more salient han the others.
Joyce triesto group together those components hat perform sim-ilar functions, thus avoiding the need to repeat func-tional descriptions: The (...) Process and the Man-agers perform auxiliary functions.
This is encoded inthe edit-for-these-objects instruction of the schema(line 8).
It calls schema security-functional-featureson the reduced set of subcomponents (without he Ker-nel).
Instead of sending propositions to the sentenceplanner as they are generated by schema security-functional-features, the propositions are saved un-til comlpeteion of the iteration.
Then editing func-tion join-same-concepts is applied, which rearrangesthe propositions, and they are then sent to the sen-tence planner.
The sentence planner can exploit theadjacency of similar propositions, and forms single sen-tences.The paragraph is then completed (line 9) and thegeneral text planner called recursively on the Kernel(line 10).Domain  Communicat ion  Knowledge  and"P lann ing  F rom F i rs t  P r inc ip les"If the thesis that all text planning tasks require domaincommunication k owledge is correct, then it would ap-pear that "planning from first principles", i.e.
textplanning using only general knowledge about communi-cation and knowledge about the domain (and a readermodel), would he impossible.
This conclusion is non-sensical: clearly, human text planners ucceed in writ-ing about new domains.
But if text planning fromfirst principles is possible, as anecdotal evidence sug-gests, then what is the status of domain communicationknowledge?Consider the following approach to text planning:Supposing that for any given domain only a finite num-ber of facts is known, one could list all possible order-ings of the elements of all subsets of these facts anduse pure communication k owledge along with a readermodel to evaluate ach of these text plans.
The com-munication knowledge would serve as a constraint onpossible text plans, or as an evaluation metric for thequality of a text plan (the fewer violations of commu-nicative principles it exhibits, the better).
This brute-force bottom-up approach can be refined by using gen-eral communication k owledge to do some preliminarytop-down planning.
For example, a rhetorical predicatecan refine a high-level communicative goal into a set ofmore easily achievable goals, as in TEXT.
Nonetheless,even in this approach it is necessary to form all possiblesequences ofrelevant domain information that togethermay achieve a lower-levi goal and perform extensive r a-soning based on communication k owledge and the usermodel.These approaches thus represent true text planningfrom first principles, since they do not require domaincommunication k owledge.
But they require reason-ing about an exponential number of possible text se-quences.
They are computationally unattractive forany true applications.
In order to make text planningmore efficient, domain communication k owledge is re-quired.
Thus, costly text planning from first principlescan be understood as the process of acquiring or compil-ing domain communication k owledge.
Ways in whichdomain facts can contribute to achieving a particularcommunicative goal are deduced by a complex processusing only domain and communication k owledge, butonce such reasoninghas been performed, its results areexplicitly encoded in the domain communication k owl-edge representation.
This knowledge can then be usedfor subsequent text planning tasks.
Intuitively, this ex-plains why humans get better and faster at generatinga given type of text about a specific domain once theyhave done so several times.This view is analogous to Patten's proposal (Patten,1988) to precompile communication planning knowl-edge according to the theory of register.
However, hisproposal is aimed at what in Joyce is classified as sen-tence planning knowledge, since register-related deci-sions are made by the sentence-planner in Joyce.
Do-main communication k owledge might be considered aprecompilation fgenre knowledge.92Further ResearchA fundamental issue remains as an open research ques-tion: what is the mode of interaction between domaincommunication knowledge and general communicationknowledge?
Three views are possible:1.
Does text planning start with general communicationknowledge, with the domain-specific knowledge tak-ing over in order to relate "atomic" communicativegoals to domain facts (as in TEXT)?2.
Is there a continuum from general domain-independent knowledge via s'pecific but domain-independent knowledge to domain-dependent com-munication knowledge (Moore and Paris's Moti-vation plan operator for motivating replacements(Moore and Paris, 1989) is an example of a specificbut domain-independent communication strategy)?This would suggest a multi-layered representation fthese different ypes of communication knowledge.3.
Is general communication knowledge implicitly en-coded into the domain communication knowledge(as in Joyce)?
In this view, general communicationknowledge would be used explictly only during theprocess of compiling domain communication knowl-edge.This underlying issue affects the more particularquestions that the proposed representation formalismfor domain communication knowledge raises:1.
Is a schema-based approach an adequate representa-tion for domain communication knowledge?2.
What types of editing functions are needed?3.
How do genre and user-tailoring affect domain com-munication knowledge?AcknowledgmentsI would like to thank Robert Dale, Richard Kittredge,Tanya Korelsky, Libby Levison and Bonnie Webber forhelpful comments and discussions about various draftsof this paper.BibliographyRichard P. Gabriel.
Deliberate writing.
In David D.McDonald and Leonard Bolc, editors, Natural Lan-guage Generation Systems, pages 1-46.
Springer Ver-lag, 1988.Eduard H. Hovy.
Planning coherent multisententialtext.
In Proceedings of the 26th Annual Meeting,pages 163-169, Buffalo, 1988.
ACL.Eduard I-I.
Hovy.
Some unsolved problems in the plan-ning of paragraphs.
In Extended Abstracts Presentedat the Second European Natural Langugae GenerationWorkshop, Edinburgh, 1989.Lidija Iordanskaja, Richard Kittredge, and AlainPolgu~re.
Implementing the meaning-text model forlanguage generation.
Paper presented at COLING-88, 1988.Lidija Iordanskaja, Richard Kittredge, and AlainPolgu~re.
Lexical selection and paraphrase in ameaning-text generation model.
Technical report,Odyssey Research Associates, 1988.Tatiana Korelsky and Ulysses Staff.
Ulysses: a com-puter security modeling environment.
In Proceedingsof the 14th National Conference on Security and Pri-vacy, Baltimore, 1988.
NBS.William C. Mann and Sandra A. Thompson.
Rhetori-cal structure theory: A theory of text organization.Technical report, ISI, 1987.Mark T. Maybury.
Knowledge based text generation.Technical report, RADC, 1989.Kathleen McKeown.
Text Generation.
Cambridge Uni-versity Press, Cambridge, 1985.Igor A. Mel'Suk.
Dependency Syntax: Theory andPractice.
State University of New York Press, NewYork, 1988.Marie W. Meteer.
The implication of revisions for natu-ral language generation.
In Proceedings of the FourthInternational Workshop on Natural Language Gener-ation, Catalina Island, 1988.Marie W. Meteer.
The spokesman atural languagegeneration system.
Technical report, BBN Systemsand Technologies Corporation, 1989.Johanna D. Moore and CEcile L. Paris.
Planning textfor advisory dialogues.
In Proceedings of the 27thAnnual Meeting, Vancouver, 1989.
ACL.Cecile L. Paris and Kathleen R. McKeown.
Discoursestrategies for describing complex physical objects.In Gerard Kempen, editor, Natural Language Gen-eration, pages 97-115.
Martinus Nijhoff Publishers,1986.Terry Patten.
Compiling the interface between textplanning and realization.
In Proceedings of the AAAIWorkshop on Text Planning and Realization, St.Paul,1988.David Rosenthal, Tatiana Korelsky, Daryl McCullogh,Owen Rambow, and D.G.Weber.
The Ulysses inte-grated modeling environment and its relationship toKBSA.
Heuristics, 1(2):42-49, 1988.Dietmar RSsner.
The automated news agency SEM-TEX - a text generator for German.
In G. Kempen,editor, Natural Language Generation: New Resultsin Artificial Intelligence, Psychology and Linguistics,pages 138-148.
Kluwer Academic Publishers, Boston,1987.93Gabi Sonnenberger.
Flexible Generierung yonnatiirlichsprachigen Abstracts aus Textrepr~en-tationsstrukturen.
In 4.
Osterreichische Artifi-cial Intelligence Tagung: Proceedings, pages 72-82.Springer, Berlin, 1988.94
