Clustering Syntactic Positions withSimilar Semantic RequirementsPablo GamalloUniversidade de Santiago deCompostelaAlexandre Agustini.Pontif?
?cia Universidade Cato?lica do RioGrande do Sul, Centro de Informa?tica eTecnologias de InformaZa?oGabriel P. Lopes-Centro de Informa?tica e Tecnologias deInformaZa?oThis article describes an unsupervised strategy to acquire syntactico-semantic requirements ofnouns, verbs, and adjectives from partially parsed text corpora.
The linguistic notion ofrequirement underlying this strategy is based on two specific assumptions.
First, it is assumedthat two words in a dependency are mutually required.
This phenomenon is called herecorequirement.
Second, it is also claimed that the set of words occurring in similar positionsdefines extensionally the requirements associated with these positions.
The main aim of thelearning strategy presented in this article is to identify clusters of similar positions byidentifying the words that define their requirements extensionally.
This strategy allows us tolearn the syntactic and semantic requirements of words in different positions.
This informationis used to solve attachment ambiguities.
Results of this particular task are evaluated at the endof the article.
Extensive experimentation was performed on Portuguese text corpora.1.
IntroductionWord forms, as atoms, cannot arbitrarily combine with each other.
They form newcomposites by both imposing and satisfying certain requirements.
A word uses alinguistic requirement (constraint or preference) in order to restrict the type of wordswith which it can combine in a particular position.
The requirement of a given wordis characterized by at least two different objects: the position occupied by the wordsthat can be combined with the given word and the condition that those words mustsatisfy in order to be in that position.
For a word w and a specific description of alocation loc, the pair bloc, w?
represents a position with regard to w. In addition,* 2005 Association for Computational Linguistics Departamento de L?
?ngua Espanhola, Faculdade de Filologia, Universidade de Santiago de Compostela,Campus Universitario Norte, 15782 Santiago de Compostela, Spain.
E-mail: gamallo@fct.unl.pt.. Faculdade de Informa?tica, Pontif?
?cia Universidade Cato?lica do Rio Grande do Sul, Av.
Ipiranga 6681pre?dio 30 bloco 4, CEP 90619-900 Porto Alegre (RS), Brazil.
E-mail: agustini@inf.pucrs.br.- Department of Computer Science, Faculty of Science and Technology, Universidade Nova de Lisboa,Quinta da Torre, 2829-516, Caparica, Portugal.
E-mail: gpl@di.fct.unl.pt.Submission received: 13th June 2004; Revised submission received: 4th May 2004; Acceptedfor publication: 17th June 2004condition cond represents the set of linguistic properties that words must satisfy inorder to be in position bloc, w?.
So a linguistic requirement of w can be represented asthe pair:bbloc, w?, cond?
?1?Consider, for instance, position bof_right, ratification?, where of_right is a locationdescribed as being to the right of preposition of.
This position represents the argument slotratification of [_ ].
Considering also that cond stands for the specific property being anominal phrase (np) whose head denotes a legal document (abbreviated by doc), then the pairbbof_right, ratification?, doc?
means that the particular position ratification of [_ ] selectsfor nouns denoting legal documents.
In other words, ratification requires nominalarguments denoting legal documents to appear after preposition of.
Suppose that thereexist some words such as law, treaty, and constitution that are nouns denoting legaldocuments.
Then it follows that they fill the condition imposed by ratification in theof_right location.
An expression like the ratification of the treaty is then well-formed,because treaty satisfies the required condition.Let us look now more carefully at several linguistic issues we consider to beimportant to characterize the notion of linguistic requirement: extensionality/intensionality, soft/hard requirements, the scope of a condition, syntactic/semanticrequirements, and corequirements.A condition can be defined either intentionally or extensionally.
For example, thetwo specific properties being the head of an np and being a legal document are used todefine intensionally the condition imposed by position bof_right, ratification?.
However,it is also possible to define it extensionally by enumerating all those words thatactually possess such properties: for example, law, treaty, and constitution.Moreover, the process of satisfying a condition can be defined as a binary actionproducing a Boolean (yes/no) value.
From this point of view, a word either satisfiesor does not satisfy the condition imposed by another word in a specific location.
Thisis a hard requirement.
By contrast, the satisfaction process can also be viewed asa soft requirement, in which some words are ??preferred??
without completelyexcluding other possibilities.
In Beale, Niremburg, and Viegas (1998), hardrequirements are named constraints, whereas the term preferences is employedfor soft requirements.
In the following, we use one of these two terms only if it isnecessary to distinguish between hard and soft requirements.
Otherwise, require-ment is taken as the default term.Let?s describe now what we call the scope of a condition.
A position imposes aspecific condition on the words that can appear in that position.
Yet a specificcondition is generally imposed not by only one position, but by a large set of them.
If acondition were bound only to a particular position, every combination of words wouldbe a noncompositional idiomatic expression.
So speakers could not combine wordseasily, and new composite expressions would be difficult to learn.
The scope of acondition embraces the positions that use it to restrict word combination.
For instance,the condition imposed by ratification of [_ ] seems to be the same as the one imposed bythe verb ratify on the words appearing at its right: bright, ratify?
(to ratify [_ ]).
Inaddition, these positions also share the same conditions as to approve [_ ], to sign [_ ], orsignatories to [_ ].
Each of these similar positions is within the scope of a specificcondition, namely, being an np whose head denotes a legal document.
In this article, weassume that every linguistic condition is associated with a set of similar positions.
This108Computational Linguistics Volume 31, Number 1109set represents the scope of the condition.
The larger the set of similar positions, thelarger the condition scope, and the more general the property used to characterize thecondition.We distinguish syntactic and semantic requirements.
A syntactic requirement ischaracterized by both a position and a morpho-syntactic condition.
For instance,requirement bbof_right, ratification?, np?
consists of a position, bof_right, ratification?,which selects for a nominal phrase.
Note that the different syntactic requirements ofa word can serve to identify the set of subcategorization frames of that word.
Note alsothat, in some cases, a particular position presupposes a particular morpho-syntacticcondition.
In our example, position bof_right, ratification?
requires only a np.
So we canuse this position as a shorter form of the syntactic requirement bbof_right, ratification?,np?.
We call a syntactic position a position that presupposes a specific morpho-syntactic condition.
On the other hand, a semantic requirement (also known asselection restriction) is characterized by both a position and a semantic condition,which presupposes a syntactic one.
So bbof_right, ratification?,doc?
means that positionbof_right, ratification?
selects for the head of a np denoting a legal document.
Conditiondoc presupposes then a np.
Identifying a particular semantic requirement entails theidentification of the underlying syntactic one.The final linguistic issue to be introduced is the phenomenon referred to ascorequirements.
It is assumed that each syntactic dependency between two words(which are the heads of two phrases) is composed of two complementaryrequirements.
For instance, it seems that two different requirements underlie theexpression ratification of the treaty: bof_right, ratification?
(ratification of [_ ]) needs to befilled by words like treaty, while bof_left, treaty?
([_ ] of the treaty) needs to appear withwords such as ratification.The main objective of this article is to describe an unsupervised method forlearning syntactic and semantic requirements from large text corpora.
For instance, ourmethod discovers that the word secretary is associated with several syntactic positions(i.e., positions with morpho-syntactic conditions), such as secretary of [_ ], [_ ] of thesecretary, [_ ] to the secretary, and [_ ] with the secretary.
The set of syntactic positionsdefined by a word can be used to characterize a set of subcategorization frames.
Theprecise characterization of these frames remains, however, beyond the scope of thisarticle.
In addition, for each syntactic position, we assess the specific semanticcondition a word needs to fill in order to appear in that position.
Another importantobjective of the article is to use the semantic requirements to capture contextuallyrelevant semantic similarities between words.
In particular, we assume that two wordsfilling the same semantic requirement share the same contextual word sense.Consequently, learning semantic requirements also leads us to induce word senses.Suppose that the word organization fills the condition imposed by secretary of [_ ].
In thissyntactic context, the word denotes a social institution and not a temporal process oran abstract setup.To achieve our objectives, we follow a particular clustering strategy.
Syntacticpositions (and not words) are compared according to their word distribution.
Similarsyntactic positions are put in more clusters following some constraints that aredefined later.
Each cluster of positions represents a semantic condition.
The features ofeach cluster are the words that can fill the common condition imposed by thosepositions: They are the fillers.
They are used to extensionally define the particularcondition they can fill.
That is, a condition is defined by identifying those words likelyto appear in positions considered similar.
Given that a condition is extensionallydefined by the words that are able to fill it, our method describes the process ofGamallo, Agustini, and Lopes Clustering Syntactic Positionssatisfying a condition as a Boolean constraint (yes/no) and not as a probabilisticpreference.
The similar positions defining a cluster are within the scope of a particularsemantic condition.
The association between each position of the cluster and thatcondition characterizes the semantic requirement of a word.
This learning strategydoes not require hand-crafted external resources such as a WordNet-like thesaurus ora machine-readable dictionary.The information captured by this strategy is useful for two different NLPdisambiguation tasks: selecting contextual senses of words (word sense disambigu-ation) and solving structural ambiguity (attachment resolution).
This article is focusedon the latter application.In sum, the main contribution of our work is the large amount of linguisticinformation we learn for each lexical word.
Given a word, we acquire, at least, threetypes of information: (1) an unordered set of syntactic positions, which is a firstapproximation to define the set of subcategorization frames of the given word, (2) thesemantic requirements the word imposes on its arguments, and (3) the differentcontextual senses of the word.
By contrast, related work focuses only on one or twoaspects of this linguistic information.
Another contribution is the use of corequire-ments to characterize the arguments of a word.To conclude the introduction, let?s outline the organization of the article.
In thenext section, we situate our approach with regard to related work on acquisition oflinguistic requirements.
Later, in sections 3 and 4, we describe in detail the mainlinguistic assumptions underlying our approach.
Special attention will be paid to boththe relativized view on word sense (i.e., contextual sense) and corequirements.
Then,section 5 depicts a general overview of our strategy.
Two particular aspects of thisstrategy are analyzed next.
More precisely, section 6 describes both how syntacticpositions are extracted and how they are clustered in larger classes (section 7).
Finally,in section 8, we evaluate the results by measuring their performance in a particularNLP task: syntactic-attachment resolution.2.
Statistics-Based Methods for Learning Linguistic RequirementsDuring the last years, various stochastic approaches to linguistic requirementsacquisition have been proposed (Basili, Pazienza, and Velardi 1992; Hindle and Rooth1993; Sekine et al 1992; Grishman and Sterling 1994; Framis 1995; Dagan, Marcus, andMarkovitch 1995; Resnik 1997; Dagan, Lee, and Pereira 1998; Marques, Lopes, andCoelho 2000; Ciaramita and Johnson 2000).
In general, they follow comparable learningstrategies, despite significant differences observed.
In this section, we present first thecommon strategy followed by these approaches, and then we focus on theirdifferences.
Special attention is paid to lexical methods.
At the end, we situate ourstrategy with regard to the related work.2.1 A Common StrategyThe main design of the strategy for automatically learning requirements is to computethe association degree between argument positions and their respective linguisticconditions.
For this purpose, the first task is to count the frequency with whichbbloc, w?, cond?
occurs in a large corpus:F?bbloc, w?, cond??
?2?110Computational Linguistics Volume 31, Number 1111where F counts the frequency of co-occurring bloc, w?
with cond.
Then this frequency isused to compute the conditional probability of cond given position bloc, w?
:P?cond j bloc, w??
?3?This probability is then used to measure the strength of statistical association betweenbloc, w?
and cond.
Association measures such as mutual information or log-likelihood areused for measuring the degree of (in)dependence between these two linguistic objects.Intuitively, a high value of the association measure is evidence of the existence of a truerequirement (i.e., a type of linguistic dependence).The stochastic association values obtained by such a strategy turn out to be usefulfor NLP disambiguation tasks such as attachment resolution in probabilistic parsingand sense disambiguation.2.2 Specific Aspects of the Common StrategyDespite the apparent methodological unanimity, approaches to learning requirementspropose different definitions for the following objects: association measure, positionbloc, w?, and linguistic condition cond.
Many approaches differ only in the way inwhich the association measure is defined.
Yet such differences are not discussed in thisarticle.As regards position bloc, w?, we distinguish, at least, among three differentdefinitions.
First, it can be considered as a mere word sequence (Dagan, Marcus, andMarkovitch 1995): For instance, bright, w?, where right means being to the right of.Second, a position can also be defined in terms of co-occurrence within a fixed window(Dagan, Lee, and Pereira 1998; Marques, Lopes, and Coelho 2000).
Finally, it can beidentified as the head or the dependent role within a binary grammatical relationshipsuch as subject, direct object, or modifier (Sekine et al 1992; Grishman and Sterling1994; Framis 1995).
In section 4, we pay special attention to the grammaticalcharacterization of syntactic positions.As far as cond is concerned, various types of information are used to definea linguistic condition: syntactic, semantic, and lexical information.
The approachesto learning requirements are easily distinguished by how they define cond.Table 1 displays three different ways of encoding the condition imposed by verbapprove to the nominal the law in the expression to approve the law.Requirement conditions of the pairs in Table 1 represent three descriptive levelsfor the linguistic information underlying the nominal expression the law when itappears to the right of the verb approve.1 The properties np, doc, and law are situated atdifferent levels of abstraction.
The morpho-syntactic tag np conveys more abstractinformation than the semantic tag doc (document), which, in turn, is more general thanthe lemma law.
Some conditions can be inferred from other conditions.
For instance,doc is used only to tag nouns, which are the heads of nominal phrases.
So the semantictag doc entails the syntactic requirement np.
Likewise, the lemma law is associated onlywith nouns.
It entails, then, an np.Some approaches describe linguistic conditions only at the syntactic level (Hindleand Rooth 1993; Marques, Lopes, and Coelho 2000).
They count the frequency of pairs1 In case of Portuguese, for intransitive verbs the occurrence of an np to the right of the verb does not meanthat the verb is transitive.
In fact, this is the standard position of the subject for intransitive verbs.Gamallo, Agustini, and Lopes Clustering Syntactic Positionslike bbright, approve?, np?
in order to calculate the probability of an np occurring givenbright, approve?.
This probability is then used to compute the degree of associationbetween approve and an np located to the right.
This association value may be useful indifferent linguistic tasks.
For instance, it may serve to solve structural ambiguities(Hindle and Rooth 1993) or to build a subcategorization lexicon (Marques, Lopes, andCoelho 2000).
Most approaches to learning syntactic requirements assume thatsyntactic properties can be identified by means of some specific morphological ??cues?
?appearing in the corpus.
For instance, the article a following a verb is a clear evidencefor an np appearing at the right of the verb; the preposition of following a verb isevidence for an of_right complement; and the conjunction that after a verb introduces athat_clause.
Morphological cues are used to easily identify syntactic requirements.
Thistechnique allows raw text to be worked on directly.
Let us note that these techniquesdo not allow the acquisition of complete subcategorization frames (Brent 1991;Manning 1993).
They are able to acquire that, for instance, approve subcategorizes annp on two locations: both right and of_right locations (e.g., to approve the laws, to approveof the decision).
So they associate that verb with two syntactic arguments.
However,they are not able to learn that the two arguments are incompatible and must belongto two different subcategorization frames of the verb.
We return to this issue insection 8.1.In other approaches to requirement learning, linguistic conditions are defined insemantic terms by means of specific tags (Basili, Pazienza, and Velardi 1992; Resnik1997; Framis 1995).
In order to calculate the degree of association between tag doc andposition bright, approve?, these approaches count the frequency of pairs like bbright,approve?, doc?
throughout the corpus.
If the association value is higher than that forother related cases, then one might learn that the verb approve requires nominalphrases denoting doc entities to appear at the right.According to other learning approaches, the linguistic conditions used tocharacterize requirements may be situated at the lexical level (Dagan, Lee, andPereira 1998; Dagan, Marcus, and Markovitch 1995; Grishman and Sterling 1994;Sekine et al 1992).
A pair like bbright, approve?, law?
matches those expressionscontaining a form of lemma law (e.g., law, laws, Law, Laws) appearing to the rightof the verb approve (to be more precise, to the right of any form of lemma approve).
Thefrequency of this pair in the corpus serves to compute the degree of associationbetween law and the verb approve at the right.
In these approaches, then, conditions arelearned from lexical co-occurrences.
From now on, when it is not necessary todistinguish between lemmas and word forms, we use the term ??word??
for bothobjects.To compare the three types of approaches more accurately, let?s analyze theirbehavior regarding different quantitative aspects: (1) the continuum betweensupervised and unsupervised learning, (2) the continuum between knowledge-poorand knowledge-rich methodology, and (3) the continuum between general- andspecific-information acquisition.112Table 1Various levels of encoding linguistic conditions.Syntactic level bbright, approve?, np?Semantic level bbright, approve?, doc?Lexical level bbright, approve?, law?Computational Linguistics Volume 31, Number 11132.2.1 Supervised/Unsupervised Learning.
The first continuum ranges over the degreeof human supervision that is needed to annotate the training corpus.
Among the workscited above, Basili, Pazienza, and Velardi (1992) has the highest degree of supervision.This semantic approach requires hand-tagging text nouns using a fixed set of semanticlabels.
The other approaches involve close to total nonsupervision, since they do notrequire a training corpus to be annotated by hand.
However, some degree of humansupervision could be involved in building automatic tools (e.g., a neural tagger inMarques, Lopes, and Coelho [2000]) or linguistic external sources (e.g., WordNet inResnik [1997]; Framis [1995]; Ciaramita and Johnson [2000]), which are used toannotate the corpus.2.2.2 Knowledge-Rich/Knowledge-Poor Methods.
The second continuum refers to thenotions introduced by Grefenstette (1994).
He distinguishes the learning methodsaccording to the quantity of linguistic knowledge they require.
The most knowledge-rich approaches need a handcrafted thesaurus (WordNet) to semantically annotatenouns of the training corpus (Resnik 1997; Framis 1995; Ciaramita and Johnson 2000).At the opposite end of the continuum, the most knowledge-poor methods areintroduced in Dagan, Marcus, and Markovitch (1995) and Dagan, Lee, and Pereira(1998); these merely need to identify lemmas in the corpus.2.2.3 General/Specific Conditions.
As regards the general/specific continuum, syn-tactic methods, that is, approaches to learning syntactic requirements, are the learningmethods that use the most general linguistic information.
At the opposite end of thecontinuum, we find the lexical methods, that is, those strategies situated at the lexicallevel.
Methods using tags like doc, human, and institution are situated at an interme-diate level and are known as semantic methods.
One of the most difficult theoreticalproblems is to choose the appropriate generalization level for learning requirementinformation.The syntactic level seems not to be appropriate for solving structural ambiguity.Concerning the parsing task, syntactic information is not always enough to produce asingle parse.
Consider the following analyses:?vpcut ?npthe potato ?ppwith a knife ?4?
?vpcut ?npthe potato ?ppwith a hole ?5?In order to decide which analysis, either (4) or (5), is correct, we must enlist the aid ofour world knowledge concerning cutting actions, use of knives, and the properties ofpotatoes.
In general, we know that knives are used for cutting and that potatoes areobjects likely to have holes.
So the parser is able to propose a correct analysis only if thelexicon is provided not only with syntactic requirements, but also with information onsemantico-pragmatic requirements (i.e., with selection restrictions).
Selection restric-tions are typically used to capture facts about the world that are generally, but notnecessarily, true (Androutsopoulos and Dale 2000).
So the main goal of semantic andlexical methods is precisely the acquisition of selection restrictions.As has been mentioned previously, semantic methods use handcrafted sources oflinguistic knowledge such as WordNet.
There are several disadvantages associatedGamallo, Agustini, and Lopes Clustering Syntactic Positionswith these knowledge-rich approaches: Manually created thesauri contain manywords either having rare senses or missing domain-specific meanings.
In sum, thelevel of semantic information provided by handcrafted thesauri is either too specificor too general, and it is usually incomplete.
It seems not to be appropriate for mostNLP tasks (Grefenstette 1994).
By contrast, lexical methods are able to acquireinformation at the level of detail required by the corpus domain.
They are domain-dependent approaches.
However, they are very sensitive to the problem of datasparseness.2.3 Lexical Methods and the Data Sparseness ProblemMost word co-occurrences (for instance, the co-occurrence of agreement with approve atlocation right) have very small probabilities of occurring in the training corpus.
Notethat if they were not observed in the corpus, they would have identical probabilities(i.e., probability 0) to those of incorrect co-occurrences such as cow appearing to theright of approve.
This is what is known as the data sparseness problem.
To solve thisproblem, many lexical methods estimate the probabilities of unobserved pairs bytaking into account word similarity.
Suppose that the pair bbright, approve?, agreement?is not observed in the training corpus.
To obtain an appropriate measure of theassociation between agreement and bright, approve?, the degree of association betweenbright, approve?
and each word most similar to agreement is computed.
The maincriterion for measuring word similarity is comparing the context distribution of words.The total association value for the specific lexical co-occurrence is the average of theseassociation values.Information on word similarity is used to generalize the pairs appearing in thecorpus and to smooth their co-occurrence probabilities.
That is, very specificrequirements described at the lexical level can be generalized by means of wordsimilarity information.For instance, the following pair:bbright, approve?, MOST SIM?agreement??
?6?associates the information MOST SIM?agreement?
with the position bright, approve?,where MOST SIM?agreement?
represents the most similar words to agreement: forexample, law, treaty, accordance, and conformity.
The use of word similarity allows theprobabilities computed at the lexical level to be smoothed (generalized).
Computationsinvolving similar words minimize the data sparseness problem to a certain extent.Lexical methods provided with similarity-based generalizations are found in Sekineet al (1992), Grishman and Sterling (1994), and Dagan, Lee, and Pereira (1998).
Later,in section 8.3.4, we use a lexical method with similarity-based generalization to solvesyntactic attachments.
The results obtained using this method are explicitly comparedto those obtained by our clustering strategy.The methodology for automatically measuring word similarity is often based onHarris?s (1985) distributional hypothesis on word meaning.
According to thishypothesis, words occurring in similar syntactic contexts (i.e., in similar syntacticpositions) are semantically similar.
A simple way of implementing this hypothesis is tocompute the similarity between words by comparing the whole information concerningtheir context distribution.
Allegrini, Montemagni, and Pirrelli (2003) call this strategythe absolute view on word similarity.
The absolute view leads to the characterization of114Computational Linguistics Volume 31, Number 1115word similarity as an intransitive relation (Dagan, Lee, and Pereira 1998).
Let usexamine expressions (7)?
(10), which show that even if treaty is similar to agreement, andagreement is similar to conformity, it does not mean that treaty is similar to conformity:to approve the agreement=treaty ?7?to ratify the agreement=treaty ?8?we are in agreement=conformity with your proposal ?9?my signature indicates my agreement=conformity to the rules ?10?Intransitivity makes this type of word similarity rather inefficient for identifyingcontextual word senses.
For instance, it does not help show that agreement is similar totreaty in quite a different way than it is similar to conformity.
Expressions (7) and (8)introduce the linguistic contexts in which agreement denotes a document containinglegal information.
This word is considered to be semantically similar to treaty withregard to the contexts introduced by verbs approve and ratify.
By contrast, (9) and (10)introduce different linguistic contexts.
There, agreement conveys a different sense: theverbal act of agreeing.
In these contexts, it becomes similar to conformity.
Wordsimilarity methods based on the absolute view seem to be unable to distinguish suchcontextual meanings.
This shortcoming may disrupt the smoothing process definedabove.
As conformity and accordance are part of the most similar words to agreement,they are involved in the process of computing the degree of association between thisword and bright, approve?.
Yet this is counterintuitive, since they are not semanticallyrequired by the verb in such a particular position.2.4 General Properties of Our MethodThe objective of this article is to propose a new strategy for learning linguisticrequirements.
This strategy is designed to overcome the main drawbacks underlyingthe different approaches introduced above.
Our method can be characterized as follows: The information it acquires is described at a semantically appropriatelevel of generalization. It is defined as a knowledge-poor and unsupervised strategy.As regards the first characteristic, we consider the method to be semanticallyappropriate only if the acquired requirements are useful for solving disambiguationproblems such as those illustrated above by parses (4) and (5).
So our acquisitionmethod is focused on more specific information than that contained in syntacticrequirements.
Given a word, our aim is to learn not only the syntactic positions inwhich that word appears, but also the semantico-pragmatic constraints (i.e., what arebroadly called selection restrictions associated with each syntactic requirement.Selection restrictions are extracted from position-word co-occurrences.
We thus followa lexical method.
However, selection restrictions are defined in accordance with atheory of word sense that is not based on the absolute view on word similarity.
We usea more relativized viewpoint on word senses.
In sum, we follow a strategy slightlyGamallo, Agustini, and Lopes Clustering Syntactic Positionsdifferent from that described in section 2.3.
In the next section, we describe our basicassumptions on word sense and word similarity.Concerning the second characteristic (i.e., knowledge-poor and unsupervisedstrategy), our method does not rely on external structured sources of lexicalinformation (e.g., WordNet) or on a training corpus built and corrected by hand.Unlike the semantic methods outlined above (in section 2.2), ours attempts to reducehuman intervention to a minimum.3.
The Foundations of Our Learning StrategyIn this section, we outline the basic assumptions underlying our learning strategy.
Thisstrategy relies on a particular definition of semantic condition (sections 3.1 and 3.2)and a relativized view on word similarity (section 3.3), as well as a specific viewpointon word sense (section 3.4).3.1 Extensional DefinitionGiven a requirement bbloc, w?, cond?, we define a semantic condition, cond, as the set ofwords that can occur in position bloc, w?.
This means that linguistic conditions aredefined extensionally.
For instance, consider again position bright, approve?
and one ofits possible conditions, namely, doc, which, as has been shown, means being a noundenoting a legal document.
This condition is extensionally defined by enumerating theset of words likely to occur with both bright, approve?
and their similar positions.Identifying such a word set is not a trivial task.
This set is not a closed, fixed, andpredefined list of nouns.
Rather, it turns out to be a set open to a great variety ofextensions, since it can be modified as time, domain, or speaker change.
The aim of ourmethod is to learn, for each argument position, the open set (or sets) of words itrequires.
Each word set represents, in extensional terms, a specific linguistic condition.For this purpose, we opt for the following learning strategy.The condition imposed by an argument position is represented by the set of wordsactually appearing in this position in the training corpus.
For instance, let?s supposethat bright, approve?
occurs with four different words: law, agreement, convention, and oil(to simplify the explanation, frequencies are not taken into account).
For the present,we know only that these words are mere candidates to satisfy the condition imposedby that position.
In order to actually know whether or not the candidate fillers satisfysuch a condition, we select the most similar positions to bright, approve?.
So we getclusters of similar positions imposing the same condition.
Consider, for instance, thefollowing cluster:fbright, approve?, bright, ratify?,bto right, signatories?,bby left, becertified?,bof right, ratification?g ?11?which is made of positions sharing features such aslaw, agreement, article, treaty, convention, document ?12?So, cluster features in (12) are the words that may fill the specific condition imposedby the similar positions in (11).
These words can be viewed as fillers satisfying the116Computational Linguistics Volume 31, Number 1117intensional property being a noun denoting a legal document.
Note that (12) contains somewords (e.g., article and treaty) that do not actually occur with position bright, approve?
inthe corpus.
However, as these words actually occur with most of the positions that aresimilar to bright, approve?, we may assume that they satisfy the condition of this particularposition.
This is the technique we use to generalize (smooth) occurrences of position-word pairs that are not observed in the training corpus.
Details of our method ofclustering are given in section 7.2.
Notice also that the set of fillers does not include theword oil.
This word does not belong to the set of shared features because it does notoccur with any of the positions similar to bright, approve?.
This is the method we useto identify and remove invalid associations between a position and a word.
It isexplained in section 7.1.In sum, positions are considered to be similar to one another because they imposethe same condition (i.e., they share the same selection restrictions).
As has been notedearlier, similar positions are within the scope of one common requirement.
The set ofsimilar positions in (11) represents the scope of condition (12).
The fillers are thosewords that characterize the extension of such a condition.3.2 Hard RequirementsWe assume that the process of condition satisfaction may be defined as a Booleanfunction and not as a probabilistic one.
The value of the association between, forinstance, the word treaty and the position bright, approve?
is either yes or no.
Ourmethod merely attempts to learn whether or not there is a true association betweenthem.
If the association is actually true, then we learn that the word satisfies thecondition.
Hard requirements can easily be used to constrain the grammar of asymbolic parser.
In particular, we use them to improve the parser described in Rocio,de la Clergerie, and Lopes (2001).
Although linguistic constraints are defined inBoolean terms, they are open to potential changes.
Clusters and their features aresupposed to be modified and extended as the training corpus grows and isprogressively annotated with more trustworthy syntactic information.
Moreover, anew domain-specific corpus can lead us not only to create new clusters, but also totune old ones.
From this viewpoint, Boolean constraints cannot be considerednecessary and sufficient conditions.
They evolve progressively.3.3 Relativized Word SimilarityOur learning strategy relies on a specific assumption on word similarity.
We areinterested in computing similarity between words with regard to a set of similarpositions.
So we must first compute similarity between positions.
As has beenmentioned before, similar positions impose the same linguistic condition.
Hence, theyare likely to be filled by the same set of words.
Statistically, this means that they havesimilar word distribution.
A definition of this similarity is given in section 7.1.
Unlikein the absolute view stated above, we are not interested in measuring similaritybetween words on the basis of the distribution of all their corpus-based positions (theirwhole context distribution).
Our aim is, first, to compute the similarity betweenpositions via their word distribution.
Positions are in fact less ambiguous than words.Then, we consider two words to be similar if they occur with at least a pair of similarpositions.
This way of using similar positions allows all possible dimensions ofsimilarity of a given word to be captured.
This is close to the ?
?relativized view??
onword similarity offered by Allegrini, Montemagni, and Pirrelli (2003).Gamallo, Agustini, and Lopes Clustering Syntactic Positions3.4 Contextual Hypothesis on Word SenseBehind this account of similarity, there is a particular view of word sense that is not farfrom that of Schu?tze (1998):Contextual Hypothesis for Word Sense: A set of similar positions defines aparticular type of context.
A word occurring with positions of the sametype keeps the same sense.
The sense of a word changes if the wordappears in a different type of context.For instance agreement refers to a legal document when it satisfies the require-ment of similar positions such as to approve [_ ] or ratification of [_ ].
By contrast, thisword denotes a verbal act when it appears in positions such as in [_ ] with your proposalor [_ ] to the rules.According to this hypothesis, identifying word senses relies on identifying sets ofsimilar positions (i.e., types of contexts).
The noun book, for instance, can denote at leastthree different contextual senses provided it appears in three context types: forexample, physical actions (carrying the book, putting it on the table, etc.
), symbolicprocesses (writing or reading books), and economic transactions (selling or buyingbooks).
This notion of word sense is dependent on the ability to grasp classes ofcontexts, that is, the ability to learn clusters of similar positions.
The more accurate isthis ability, the more precise are the senses identified in a particular corpus.
Thismeans that the set of senses associated with a word cannot be predefined by anexternal lexical resource like WordNet or any machine-readable dictionary.
Wordsenses are dynamically learned as the text is processed and positions are organized insemantically homogenous clusters.
Each cluster of similar positions (or context type)represents a particular word sense.
From this viewpoint, the set of contextual senses ofa word represents its whole meaning.
Such a notion of word meaning is in accordancewith the encyclopedic hypothesis on lexical meaning within the cognitive grammarframework (Langacker 1991).
According to this hypothesis, every word or lexical unitis associated with a continuum of encyclopedic knowledge (the word meaning).
Theuse of the word in a particular context makes a partial aspect of this continuum moresalient (a specific word sense).Within a particular corpus, we assume that the meaning of a word is defined bythe context types that organize the different positions of the word.
In other words, aword?s meaning is described by identifying the types of requirements the word fulfills.In the next section, we explore the notions of requirement and syntactic position.4.
Syntactic Positions and CorequirementsThis section discusses the general properties of syntactic positions and their role inextracting linguistic requirements.
Syntactic positions are defined here as internalelements of binary dependencies.
Two aspects of dependencies are retained: the head-dependent distinction and the predicate-argument structure.
Special attention is paidto corequirements.4.1 Head-Dependent DistinctionThe head-dependent pattern takes over the process of transferring morpho-syntacticfeatures to higher grammatical levels.
A composite expression inherits the features of118Computational Linguistics Volume 31, Number 1119the headword.
There are two different locations (or grammatical roles) within a binarydependency: the head and the dependent.
Consider the binary dependencies shownin the first column of Table 2, which represent the expressions to ratify the law and longdinner.
The grammatical relations between the two words are expressed by both robj,which stands for the nominal object appearing to the right of the verb,2 and mod, whichstands for the noun-adjective dependency.
The word indexed by , (down location)plays the role of head, whereas the word indexed by j (up location) plays the role ofdependent.
Since a binary dependency is constituted by two grammatical locations, wecan split the dependency into two complementary syntactic positions.Each pair of positions in the second column of Table 2 was extracted from a binarydependency.
We show below that the two positions extracted from a dependency areassociated with specific semantic conditions.
Hence, they can be used to characterizesyntactico-semantic requirements.
In our work, the different types of binary relationsfrom which we extract all positions are lobj, robj, iobj_prepname, aobj_prepname,prepname, and mod.
Relation lobj designates the nominal object appearing to the leftof verb, robj represents the nominal object appearing to the right of the verb,iobj_prepname introduces a nominal after a verb and a preposition, aobj_prepnamerepresents a nominal after an adjective and a preposition, prepname corresponds to anominal following a noun and a preposition, and mod refers to the adjectivemodification of nouns.
Note that each relation conveys not only two argumentpositions, but also specific morpho-syntactic conditions.
robj, for instance, signals thatthere is an np to the right of a vp.
So brobj_down, ratify?
contains the same information asthe syntactic requirement bbrobj_down, ratify?, np?, while brobj_up, law?
is equivalent tobbrobj_up, law?, vp?.4.2 Predicate-Argument StructureBesides the head-dependent pattern, binary dependencies are also organized aspredicative structures: Predicate(Argument).
While the former pattern drives theprocess of inheriting morpho-syntactic information throughout grammatical levels, thelatter is directly related to semantic requirements.
This section starts by introducingthe standard account concerning the role of the Predicate(Argument) structure in theprocess of imposing linguistic requirements.
Then we make new assumptions aboutwhat we consider to be a more accurate notion of requirement information.
This notionis modeled by means of what we call corequirements.
Corequirements are used later,in sections 6 and 7, to elaborate our learning method.Table 2Two binary dependencies and their positions.Dependencies Contexts(robj; ratify,, lawj) brobj_down, ratify?brobj_up, law?
(mod; dinner,, longj) bmod_down, dinner?bmod_up, long?2 In Portuguese, a right object (without governing preposition) can be elaborated, under specific conditions,as either a direct object or a subject.Gamallo, Agustini, and Lopes Clustering Syntactic Positions4.2.1 Simple Requirements.
It is broadly assumed that a binary syntactic dependencyis constituted by both the word that imposes linguistic constraints (the predicate) andthe word that must fill such constraints (its argument).
In a syntactic dependency, eachword is considered to play a fixed role.
The argument is perceived as the wordspecifying or modifying the syntactico-semantic constraints imposed by the predicate,while the predicate is viewed as the word that is specified or modified by the former.Notice that a predicate is not defined here in model-theoretic terms.
We inherit theintuitive definition assumed in the linguistic tradition of dependency grammar(Hudson 2003).
According to this tradition, a predicate is the semantic representationof one of the two words taking part in a binary dependency.
More precisely, it is therepresentation of one word (either head or dependent) that actually imposes semanticrequirements on the other word.In standard linguistic approaches, the Predicate(Argument) structure is the se-mantic counterpart of the head-dependent pattern.
The former relates to the latter inthe following way.
Typically, the dependent word playing the role of Argument isconceived as the complement or object of the head (see Figure 1).
By contrast, when itplays a more active role, behaving more like a Predicate, it is viewed as a modifier orthe adjunct of the head (Figure 2).
In other words, the dependent of a head-dependentstructure is described either as a passive complement, if it satisfies the linguisticrequirements of the head (Argument role), or as an active modifier, when thedependent itself requires a specific type of head (Predicative role).The most typical case of a head being a predicate is when a verb is the head withina direct-object dependency.
The noun is viewed here as a complement, that is, as adependent expression fulfilling the conditions imposed by the verbal predicate.
Themost typical case of a dependent taken as a predicate is the standard use of anadjective or an adverb.
In this case, it is the adjective (or adverb) that imposes theselection restrictions on the noun (or verb), which is the head of the dependency.By contrast, in case of dependencies such as prepositional relations, it is notpossible to distinguish between a complement and a modifier, unless we have accessto the specific semantico-pragmatic information conveyed by words.
However, thereare many cases in which the borderline between complement and modifier is not clear.In these cases, even semantico-pragmatic knowledge is not enough to enable a decisionto be made in favor of one particular predicative structure.
For instance, consider theexpression to play with a doll.
Which is the word that can be taken as the predicate, andwhich as the argument?Linguists have made a considerable effort to discriminate between complementsand modifiers (= adjuncts).
The complement/modifier distinction is probably one ofthe most unclear issues in linguistics (Langacker 1991).
No linguistic proposal is able todistinguish in absolute terms complements from external adjuncts; for example, in theprevious expression, is with a doll an internal complement or an adverbial modifier ofplay?
In other words, is position biobj_with_down,play?
one that requires as argument thenoun doll (complement construction)?
Or, on the contrary, is position biobj_with_up, doll?one that requires as argument the verb play (modifier structure)?
There is no reliableevidence on which to choose between the two possible requirement structures.
Most120Figure 1Complement structure.Computational Linguistics Volume 31, Number 1121linguistic proposals may be situated in one of two general trends: (1) Some linguistsinterpolate finer distinctions between the two extremes (Pustejovsky 1995).
So betweentrue or basic complements and completely optional adjuncts, it is possible to finddefault complements, shadow complements, and so on which share properties of bothcomplements and adjuncts.
(2) A more radical view is to consider the complement/modifier opposition as a continuum in which it is not easy to fix borderlines betweenwhat is entirely optional and what is obligatory (Langacker 1991).The idea of a continuum entails that complements and modifiers cannot be definedin absolute terms.
All binary dependencies always contain a certain degree of bothcomplementarization and modification.
That is, given a dependency, the head requiresthe dependent (complementarization), and conversely, the dependent requires thehead (modification).
We assume in this article that such corequirements underlie anybinary dependency.4.2.2 Corequirements.
Recent linguistic research assumes that two words related by asyntactic dependency are mutually constrained (Pustejovsky 1995; Gamallo 2003).Each word imposes linguistic requirements on the other.
There does not exist a single,pre-fixed predicate-argument pattern.
Each related word is at the same time both apredicate and an argument.
We call such a phenomenon corequirement structure.Consider again the expression potato with a hole.
It does not seem obvious whetherhole is the complement or the modifier of potato within the with dependency.
If it isconsidered the complement, then it is the head potato that should be provided with theappropriate requirements.
Otherwise, it should be the modifier hole, the wordimposing specific requirements on the head.
Following recent research, we claim,however, that such a radical opposition is not useful for describing linguisticrequirements.
It is assumed here that two syntactically related expressions presupposetwo complementary requirements.
In other words, every binary dependency isconstituted by two compatible predicate-argument structures.On the one hand, the noun potato requires words denoting parts or properties ofpotatoes to appear in the with_down location.
The noun hole satisfies such a requirement.On the other hand, the noun hole is also provided with selective requirements in thewith_up location.
Indeed, in this location, it requires nouns denoting material objectsthat can have holes.
The noun potato fulfills such a condition.
Note that the expressionscut with a knife and play with a doll could also be considered borderline cases.Corequirements are not useful only for modeling borderline cases.
We believe thatthey are also pertinent for typical complement structures (e.g., the direct-object relationbetween verbs and nouns), as well as for typical modifier constructions (i.e., adjective-noun and verb-adverb dependencies).
In long dinner, for instance, the noun seems tobehave as a predicate constraining the adjective to denote a temporal dimension (andnot a spatial one).
So not only does the adjective disambiguate the noun, but the nounalso disambiguates the adjective.Therefore, according to the assumption on corequirements, two syntactically de-pendent expressions are no longer interpreted as a standard predicate-argument pair,in which the predicate is the active function imposing semantic conditions on a passiveFigure 2Modifier structure.Gamallo, Agustini, and Lopes Clustering Syntactic Positionsargument, which matches these conditions.
On the contrary, each word of a binarydependency is perceived simultaneously as both a predicate and an argument.
That is,each word both imposes semantic requirements and matches semantic requirements inreturn.
Figure 3 depicts a standard syntactic dependency between two words, the headand the modifier, with two Predicate(Argument) structures.
Figure 4 illustrates thetwo specific Predicate(Argument) structures extracted from the modifier relation be-tween the noun dinner (the head) and the adjective long (the dependent).The learning strategy described in the remainder of the article takes advantage ofthe corequirement structure.5.
System OverviewTo evaluate the hypotheses presented above, a software package was developed tosupport the automatic acquisition of syntactic and semantic requirements.
The sys-tem is constituted by six main processes, which are displayed as rectangles with solidlines in Figure 5.
They are organized as a linear sequence of data transformations.
InFigure 5, solid ellipses are used to display the data transformed by these processes.Two local subprocesses (dotted rectangles) build extra data (dotted ellipses), in orderto constrain some of the main transformation processes.
In the remainder of thissection, we merely outline the overall functionalities of these processes.
Then insubsequent sections, we describe them in detail.Tagging and Chunking: Raw text is tagged (Marques and Lopes 2001) and thenanalyzed in chunks using some potentialities of the shallow parser introduced inRocio, de la Clergerie, and Lopes (2001).
This parser is implemented usingtabulation capabilities of the DyALog system (de la Clergerie 2002).
The output is asequence of basic chunks.
For instance, the sentence The President sent the documentto the Minister is analyzed as a sequence of four basic chunks: np, vp, np, and pp.These chunks contain neither dependencies nor recursivity.Attachment Heuristic RA: An attachment heuristic based on right association(RA) is applied to chunk sequences in order to combine pairs of chunks.
Theheadwords of two related chunks form a syntactic dependency.
Section 6.1describes some properties of the dependencies extracted using the RA strategy.Extractor of Position Vectors: Dependencies are used to extract syntacticpositions, which are internally characterized as vectors of word frequencies.
Thisprocess is described in section 6.2.122Figure 3Dependency with corequirements.Computational Linguistics Volume 31, Number 1123Clustering 1: Position vectors are compared with one another using a specificsimilarity measure.
Pairs of similar positions are put in basic clusters.
A basiccluster is constituted by two similar positions whose features are the words theyshare.
Section 7.1 describes this process.Clustering 2: Basic clusters are successively aggregated using a conceptualclustering methodology to induce more-general classes of positions.
A corpus-based thesaurus, built on the basis of the extracted dependencies, is used toconstrain cluster aggregation.
We present this process (together with the thesaurusdesign subprocess) in section 7.2.Attachment Heuristic CR: Finally, the resulting clusters are used to parse againthe chunks and propose new dependencies (section 8).
This is accomplished in twosteps.
First, a lexicon builder module organizes the information underlying theFigure 4Corequirements in long dinner.Figure 5System modules.Gamallo, Agustini, and Lopes Clustering Syntactic Positionslearned clusters and builds a lexicon with syntactico-semantic corequirements (seesection 8.1).
Then, the grammar underlying the parser is provided with a specificattachment heuristic that uses corequirement (CR) information from the lexicon.This heuristic allows the parser to propose a new set of dependencies (section 8.2).We evaluate the resulting dependencies in section 8.3.The system was implemented on two different Portuguese text corpora: PGR3 andEC.4 The experiments that were conducted are described and some results given insection 7.3.6.
Extracting Dependencies and PositionsIn this section, we describe two modules of the method: the attachment heuristic RAand the extractor of position vectors.
These modules involve the extraction ofcandidate binary dependencies and syntactic positions.6.1 Attachment Heuristic RAAttachment heuristic RA takes as input parses constituted by sequences of chunks.
Ituses the right-association strategy.
That is, a new chunk is preferentially attached tothe preceding chunk.
The headwords of two attached chunks form a possible binarydependency.
Consider the expression::: a lei citada em o anterior parecer::: ?the law cited in the previous opinion?
?13?The RA heuristic allows us to identify three candidate dependencies, which areillustrated in the left column of Table 3.
These dependencies are not considered at thispoint to be actual attachments, but only potential candidates.
Later, the parser will beprovided with the learned requirements stored in the lexicon, in order to propose newdependencies, which will be the output of the parsing strategy.
Note that lobj denotes anominal object appearing to the left of the verb.
This cannot be identified with thesubject grammatical function.
The order of verbal objects is not the main feature bymeans of which to identify the subject and direct-object functions in Portuguese (andin most Latin languages).
The position of verb complements is quite free in theselanguages.
We consider then that grammatical functions are semantic-dependentobjects, since we need semantico-pragmatic knowledge to identify them.In addition, we also provide some dependencies with specific morpho-syntacticinformation.
For instance, verb citar (to cite) is annotated using the past participle(vpp) tag.
This morpho-syntactic information is relevant for defining the semanticrequirements of dependencies.
As we show later, only semantic information enablesus to consider the dependency underlying a lei citada (the law that was cited) asbeing semantically similar to the one underlying citar a lei (to cite the law).
Thesedependencies are not merely merged into one single relation using morpho-syntacticrules.
Such rules pose some important problems: First, they require specific knowledge1243 PGR (Portuguese General Attorney Opinions) consists of case law documents.4 EC (European Commission) contains documents on different aspects (legislation in force, social policy,environment, etc.)
of the European Commission.
This corpus is available at http://europa.eu.int/eur-lex/pt/index.html.Computational Linguistics Volume 31, Number 1125on particular languages; and second, they introduce a great amount of noise.
In ourapproach, these two dependencies are merged in one cluster only if our learningprocess provides us with semantic evidence to justify such merging.
In fact, one of theobjectives of our learning method is to use information on semantic requirements foridentifying morpho-syntactic alternations of dependencies: for example, citadapeloministro/o ministro citou (cited by the Minister/the Minister cited); mencionar alei/mencionou-se a lei (to mention the law/the law was mentioned); ratificar alei/ratificac$a?
o da lei (to ratify the law/ratification of the law).
If two morpho-syntactic alternations are considered to share the same semantic requirements, thenthey will automatically occur in the same cluster.
This strategy allows us to reducelanguage-dependent knowledge to a minimum.It is also worth noticing that tag pre in Table 3 is used to annotate adjectives in theleft position with regard to the modified noun (i.e., in the mod relation).
We distinguishthree different adjective relations: the left modifier, the right modifier, and theprepositional object.
It is assumed here that these three dependencies can stressdifferent semantic aspects of an adjective.
For instance, our strategy led us to learn thatanterior (previous) is semantically similar to primeiro ( first) and seguinte( following) when it takes the role of left modifier.
However, when the adjective is tothe right of a noun and is followed by a prepositional object (anterior a, previous to),it is clustered together with inferior (inferior) and igual (equal), which also appearwithin prepositional dependencies: equal to, inferior to.Since the right-association strategy is knowledge-poor, the attachments it proposesgive rise to a substantial amount of odd syntactic dependencies (25%), including thosecaused by POS-tagging errors.
The overall precision of the tagger is 96.2%.
Yetconsidering only those tags we use in the learning strategy (i.e., nouns, adjectives,articles, verbs, etc.
), the precision is close to 90%.
To overcome such a noisy input, weneed a reliable learning method.6.2 Position VectorsGiven that each dependency contains two complementary grammatical locations(head and dependent), we split dependencies into two syntactic positions: the positionassociated with the head (or down) location and the one associated with the dependent(or up) location.
The positions extracted from expression (13) are illustrated in the rightcolumn of Table 3.
Following the assumption on corequirements, each position mustbe provided with a particular linguistic requirement.We represent each syntactic position as a feature vector.
Each feature correspondsto a word occurring in the position.
The value of the feature is the frequency of theTable 3Binary dependencies and syntactic positions extracted from expression (13).Binary dependencies Syntactic positions(lobj; citar : vpp,, leij)(be cited, law)blobj_down, citar : vpp?blobj_up, lei?
(iobj_em; citar : vpp,, parecerj)(be cited in report)biobj_em_down, citar : vpp?biobj_em_up, parecer?
(mod; parecer,, anterior : prej)(opinion, previous)bmod_down, parecer?bmod_up, anterior : pre?Gamallo, Agustini, and Lopes Clustering Syntactic Positionsword in that position.
A position is thus defined by means of its word distribution.
Ashas been mentioned before, those words appearing in a particular position can be usedto represent, in extensional terms, a first approximation of the semantic condition theposition requires (i.e., its selection restrictions).
Clustering enables us to enlarge thescope of each condition.
In Table 4, we illustrate the word distribution of the twocomplementary positions underlying citada no parecer (be cited in the report).Note that those words occurring once in a position are also considered as features.This allows us to minimize the data sparseness problem.
Linguistic corpora are sparsein the sense that most co-occurrences occur few times in a given corpus.
So, if co-occurences with lower frequencies were not used by the learning strategy, pertinentlinguistic information would be missing, and coverage would remain low.
In order tominimize missing information and coverage reduction, we retain infrequent words inposition vectors.Nevertheless, taking into account infrequent co-occurrences increases noise andthus may disturb the learning task.
There are a number of noise sources: wordsmissing from the dictionary, words incorrectly tagged, wrong attachments, etc.
Theposition shown in the first line of Table 4 occurs with at least two words that are notsyntactically required: apoio (support) and sentido (sense).5 Note that these wordshave frequency 1 in that position.
Retaining requirements with frequency 1 enables usto retain other words that are syntactically and semantically appropriate for thatposition, such as artigo (article) and regulamento (regulation), which also occuronly once.
The next step of our method (Clustering 1) focuses on the automaticremoval of odd features introduced in position vectors.7.
Clustering of PositionsPositions that share similar features are combined into clusters.
Clustering is dividedinto two different agglomerative processes: Clustering 1 and Clustering 2.7.1 Clustering 1Clustering 1 builds pairs of similar positions called basic clusters.
A basic cluster is theresult of merging two positions considered to be similar.
The features associated with abasic cluster are only those words appearing in both similar positions.
This allows us126Table 4Two position vectors.biobj_em_down, citar : vpp?
(be cited in [_ ])(nota 53) (parecer 7) (conclusa?
o 3) (informac$a?
o 2)(regulamento 1) (artigo 1) (apoio 1) (sentido 1)note, report, conclusion, information, regulation, article, support, sensebiobj_em_up, parecer?
(afirmar:vpp 9) (defender:vpp 7) (citar:vpp 7)(analisar:vpp 7) (escrever 3) (reafirmar:vpp 2)(esclarecer:vpp 1) (notar:vpp 1) (publicar:vpp 1)(concluir:vpp 1) (assinalar:vpp 1)([_ ] in the report) be affirmed, be defended, be cited, be analyzed, writer, be affirmed again,be clarified, be noted, be published, be concluded, be pointed out5 Word sentido (sense) appears in that position, not as a verb complement, but as a member of theprepositional locution no sentido de (in the sense that), which is attached to the whole sentence.Computational Linguistics Volume 31, Number 1127to filter out odd features from clusters.
Features defining a basic cluster are, then, themost reliable fillers of the semantic condition imposed by the two similar positions.Those words that are not required by both positions are removed from the cluster.
Thealgorithm of this process is the following:Similarity: We calculate the similarity between each pair of positions.
To do this,we measure the distance between their word distributions (see the details of thismeasure below).Selection: Then, for each position, we select the N (where N = 20) most similarones.Aggregation: Then, given a position and the list of N most similar positions, wemerge the position with each member of the list.
So, given a position, we create Naggregations of that position with one similar position.Filtering: Finally, for each aggregation of two similar positions, we select theintersection of their features; that is, the features of a basic cluster are those wordsthat appear in both positions.As a result of this process, we obtain a set of basic clusters, each augmented by reliablefeatures.
The aim is to automatically filter out noisy features from each pair of similarsyntactic positions.
Many incorrectly tagged words are removed at the filtering step.Let?s take an example.
Consider the position shown in the first row of Table 4, thatis, biobj_em_down, citar : vpp?.
According to our similarity measure, its worddistribution is similar to that of the following positions:6biobj em down, mencionar : vpp?
biobj em down, cite?biobj em down, assinalar : vpp?
bde down, leitura?biobj em down, referir : vpp?
biobj em down, referenciar : vpp?
:::?14?Then, biobj_em_down, citar : vpp?
is merged with each one of the above positions.
Notethat this position is similar to the position associated with the active form, citar.Finally, each pair of similar positions (i.e., each basic cluster) is defined by the wordsthey have in common.
For instance, take the basic cluster shown in (15):fbiobj em down, citar : vpp?
?
biobj em down, mencionar : vpp?g ?nota conclusa?o informac$a?o artigo?note, conclusion, information, article?Looking at those words appearing as prepositional objects of both cited in [_ ] andmentioned in [_ ], one can see that they are semantically homogeneous.
The filteredfeatures no longer include odd words such as support and sense (see Table 4).
Indeed,6 English translation of (14): mencionar = be mentioned in [_ ], cite = cite in [_ ], assinalar = be pointed out in [_ ],leitura = reading of [_ ], referir = be referred to in [_ ], referenciar = be made reference to in [_ ].
?15?Gamallo, Agustini, and Lopes Clustering Syntactic Positionsthe process of selecting the words shared by two similar positions relies on thecontextual hypothesis stated above in section 3.4, as well as on the following corpus-based observation: Those words whose appearance in a particular position would beincorrect are not likely to occur in similar positions.Merging two similar positions by intersecting their features allows a semanticcondition to be associated with two positions.
In (15), a single set of words is associatedwith the two positions, since the positions have in common the same semanticcondition (or selection restrictions).
However, the scope of the condition is still toonarrow: It merely embraces two positions.
In order to extend the scope of semanticconditions, we cluster them using a less restrictive clustering process that allows us tobuild more general classes of words and positions.Before explaining the following process (Clustering 2), let us describe the measureused to calculate the similarity between syntactic positions.
We use a particularweighted version of the Lin (1998) coefficient.
Our version, however, does not usepointwise mutual information to characterize the weight on position-word pairs.
AsManning and Schu?tze (1999) argued, this does not seem to be a good measure of thestrength of association between a word and a local position.
When the similaritybetween two positions is computed using our method, higher scores are assigned torare attributes (i.e., words in our case) of compared objects (positions).
By contrast, thepointwise mutual information measure is not sensitive to the fact that frequent pairscan have a strong association.
In order to resolve this problem, we use a weight verysimilar to that proposed in Grefenstette (1994).
Consequently, we employ, on the onehand, the general structure of the Lin coefficient, and on the other, the weightproposed by Grefenstette.Words are weighted considering their dispersion (global weight) and their con-ditional probability given a position (local weight).
The weight Assoc, measuring thedegree of association between word w and position p, is computed by equation (16):Assoc?p,w?
?
log2?PMLE?wjp??
 log2?disp?w??
?16?On the other hand, the conditional probability PMLE is estimated by using themaximum likelihood estimate (MLE), which is calculated in (17):PMLE?wjp?
?f ?p, w?F?p?
?17?where f ?p, w?
represents the frequency of word w appearing in position p, and F?p?
isdefined, for a particular position, as the total sum of its word frequencies: ~i f ?p, wi?.On the other hand, word dispersion, disp, is defined as the following mean:disp?w?
?
F?w?number of positions f or w?18?where F?w?
is defined as the total sum of position frequencies of w: ~i f ?pi, w?.
Highervalues are assigned by equation (18) to those words that are not dispersed, that is, to128Computational Linguistics Volume 31, Number 1129those words frequently appearing in few positions.
disp measures the ability of a wordto be semantically selective with regard to its positions.
So the Lin coefficient (LIN)between two positions is computed using equation (19):LIN?p1, p2?
?Pfw:M?p1, w?,M?p2, w?g?Assoc?p1, w?
?
Assoc?p2, w?
?Pfw:M?p1, w?gAssoc?p1, w?
?Pfw:M?p2, w?gAssoc?p2; w?
?19?In the numerator of (19), the condition of the summation indicates that each word wmust be found with both positions p1 and p2.
In the denominator, w varies over allwords found in p1 and p2.7.2 Clustering 2Basic clusters are the input objects of the second process of clustering.
We use anagglomerative (bottom-up) clustering for aggregating basic clusters into larger ones.The clustering algorithm is described in Table 5.
According to this algorithm, twoobjects are clustered if they satisfy the following restrictions: (1) they have the samenumber of features (i.e., words), (2) they share more than 80% common features, and(3) the features that are different must be thesaurically related to at least one of thecommon features.
In order to provide words with thesaurical relations, weautomatically build a thesaurus of similar words.
Details of the thesaurus design aregiven in section 7.5.Figure 6 shows how two basic clusters are merged into one more general class ofpositions.
For two basic clusters such as CL_00013, which contains the features note,article, dispatch, document, and text, and CL_03202, whose features are article, dispatch,document, text, and opinion, we obtain the more general cluster CL_04447, which isconstituted by all the different positions and words of its basic components.
Note thatthe two basic clusters are different with regard to two features: note and opinion.According to our clustering restrictions, the two clusters can be merged if eachdifferent feature (i.e., note and opinion) is thesaurically related to at least one of thecommon features: article, dispatch, document, and text.
A word is thesaurically related toanother if it belongs to the list of most similar words, a list that was automaticallygenerated and entered in our thesaurus.
The thesaurus, then, is used to control andconstrain the construction of abstract classes of positions.
In addition, the larger class,CL_04447, allows us to induce collocation data that does not appear in the corpus.
Forinstance, we induce that the word parecer (opinion) may appear in position biobj_em,mencionar : vpp?
(mentioned in [_ ]).
Similarly, we also learn that word nota (note) canoccur with biobj_em, referenciar : vpp?
(made reference to in [_ ]).7.3 Tests and ResultsWe tested our learning strategy over two training corpora, PGR and EC.7 Dataconcerning the information extracted from these two corpora are presented in Table 6.The clusters generated by Clustering 2 are used to build a lexicon of words alongwith their syntactic and semantic requirements.
Each corpus has its own lexicon.
Later,in section 8.1, we describe how this information is stored in the lexicon entries.7 Some results can be consulted at http://di165.di.fct.unl.pt/~agustini/restr_web.Gamallo, Agustini, and Lopes Clustering Syntactic PositionsLearned clusters represent linguistic requirements that cannot be reduced to asmaller set of general syntactico-semantic roles, such as Agent, Patient, Theme, andInstrument.
On the other hand, they cannot be associated with word-specific roles like,for instance, Reader, Eater, and Singer.
The level of elaboration of these clusters rangesfrom very abstract to very specific lexical levels.
They are situated, in fact, at thedomain-specific level, which is considered more appropriate for use in computationaltasks (Gildea and Jurafsky 2002).
However, given the too-restrictive constraints of thealgorithm, the clustering method also overgenerates redundant clusters.
In futurework, we will attempt to reduce redundancy using clustering algorithms based onconcept lattices (Kovacs and Baranyi 2002).130Table 5Algorithm of Clustering 2.Input Set of basic clusters organized by number of features.Output A list of larger clusters representing classes of semantic conditions.Step 1 Prerestrictions on candidates to be clusteredFor each obj, select those objects that& have the same number of features than objAND& share at least 80% of featuresStep 2 Similarity restrictionsFrom candidates extracted in step 1, take those objects& that share all features with objOR& the different features of which are related by a thesaurusStep 3 Merging objects and their featuresobj is merged with all objects filling the conditions stated in steps 1 and 2.The new object has the following properties:& It is constituted by the union of the features defining the merged objects.& It is put together with objects having the same number of features.Iteration Repeat steps 1, 2, and 3, increasing the number of features, until no cluster fulfillsthe restrictions.Figure 6Clustering 2.Computational Linguistics Volume 31, Number 1131In order to evaluate the linguistic relevance of these clusters, we check in section 8whether they are useful in a parsing task.
The degree of efficiency in such a task(parsing) may serve as a reliable evaluation for measuring the soundness of thelearning strategy.7.4 Related Clustering MethodsThere are other approaches to acquisition of word senses by clustering wordsaccording to context-sensitive information.
Similarly to our work, these approachesassume, on the one hand, that a word can appear in different clusters (soft clustering),and on the other hand, that each cluster represents a particular sense distinction of thewords that are elements of it.
Different clustering methods can be distinguished.First, some methods compare the similarity between pairs of syntactic positions(and not pair of words) in order to generate clusters of syntactic positions, whosefeatures are set of words (Allegrini, Montemagni, and Pirrelli 2003; Faure and Ne?dellec1998; Reinberger and Daelemans 2003).
Similarly to our approach, these methodsfollow both the relative view on word similarity and the assumption on contextualword sense, which were introduced above in sections 3.3 and 3.4, respectively.However, these methods differ from ours in several aspects.
That of Reinberger andDaelemans (2003) does not use any kind of filtering process.
So given a cluster ofpositions, the set of its features is basically defined as the union of their co-occurringwords.
This method turns out not to be appropriate when extracted co-occurrences arenoisy.
The cooperative system Asium presented in Faure and Ne?dellec (1998) filtersout incorrect words from clusters of positions.
However, unlike in our work, this taskis not automatic.
It requires manual removal of those words that have been incorrectlytagged or analyzed.
Similarly to our approach, Allegrini, Montemagni, and Pirrelli(2000) developed an automatic procedure to remove odd words from clusters.
Itconsists in defining a first clustering step in which positions are aggregated in basicclusters, which are called substitutability islands.
As in Clustering 1 (section 7.1), eachbasic cluster selects only those words occurring in all positions of the cluster.However, Allegrini, Montemagni, and Pirrelli (2000) define a second clustering stepinvolving significant differences with regard to our Clustering 2.
Given a position p,they define a list of basic clusters containing p. This list is ranked and then used as theinput to a clustering strategy that aggregates only basic clusters belonging to that list.So a cluster containing p cannot be aggregated with a cluster that does not contain p.This is a very strong constraint.
It reduces significantly the system?s ability to makegeneralizations.Second, other methods discover word senses by clustering words according to thesimilarity of their whole distributions (Pantel and Lin 2002; Lin and Pantel 2001).
TheseTable 6Corpus data.Corpus PGR Corpus ECWord occurrences 6,643,579 3,110,397Binary dependencies 966,689 487,916Syntactic positions 178,522 113,847Basic clusters 370,853 166,886Clusters (Clustering 2) 16,274 10,537Gamallo, Agustini, and Lopes Clustering Syntactic Positionsmethods, then, follow both the absolute view on word similarity and Harris?sdistributional hypothesis, which we introduced in section 2.3.
However, in order tomake the absolute view more relative, a collection of small and tight clusters (calledcommittees) is proposed in a first step.
These tight clusters are supposed to representdifferent word senses.
Then in a second step, each word is assigned to a set ofcommittees.Finally, Pantel and Lin (2000) offer a hybrid method based on the two basic viewson semantic similarity, absolute and relative.
Given a word w occurring in position p,in any pair of type bverb, function?
or bnoun, preposition?, the system, in a first step,generates classes of contextually similar words.
A contextual class results from theintersection of the words occurring in p and the words similar to w. The definition of acontextual class contains the two views on word similarity.
On the one hand, thewords occurring in p are called the cohorts of w. The cohorts are similar to w only withregard to position p (relativized view).
On the other hand, a corpus-based thesaurus isused to select words similar to w with regard to its whole position distribution(absolute view).
Note that a contextual class is not far from what we call a basic cluster.In a second step, contextual classes are used to compute attachment association scores.The aim of the method is not to discover word senses (as in the methods outlinedabove), but to solve syntactic ambiguities.
No clustering strategy is proposed togenerate more general contextual senses.Our system could also be considered a hybrid method, since besides the contextualhypothesis and the relative view, we also take into account the absolute view on wordsimilarity to design a corpus-based thesaurus.7.5 Automatic Thesaurus ConstructionClustering 2 uses a thesaurus of similar words to avoid undesirable aggregations.
Todesign a corpus-based thesaurus, we follow the absolute view on word similarity: Thesimilarity between two words is computed by comparing their whole contextdistribution.
Our thesaurus is not specifically designed to be involved in the clusteringprocess.
It is designed primarily with the aim of measuring the discriminativecapabilities of syntactic positions defined on the basis of corequirements (Gamalloet al 2001).
In particular, we check whether corequired positions are semanticallymore selective than those used by Grefenstette (1994), which were defined in terms ofsimple requirements.
Experimental tests showed that corequirements permit a finer-grained characterization of ??meaningful??
syntactic positions.To compute word similarity, we used the weighted version of the binary Jaccardmeasure defined in Grefenstette (1994).
The weighted Jaccard similarity (WJ) betweentwo words, w1 and w2, is computed byWJ?w1, w2?
?Pi min?Assoc?w1, pi?, Assoc?w2, pi?
?Pi max?Assoc?w1, pi?, Assoc?w2, pi??
?20?In (20), the weight Assoc is the result of multiplying a local and a globalweight, whose definitions are analogous to those given in formulas (17) and (18).The major difference is that in (20), positions are taken as attributes and words asobjects.We designed a particular thesaurus for each training corpus.
As regards thePGR corpus, we produced 42,362 entries: 20,760 nouns, 16,272 verbs, and 15,330132Computational Linguistics Volume 31, Number 1133adjectives.
For each entry w, the thesaurus provides a list containing the 20 words mostsimilar to w. This is the list that was later used in the clustering process.8.
Application and EvaluationThe acquired classes are used to solve attachment ambiguities.
For this purpose, first, alexicon is designed by using the linguistic information contained in the learnedclusters.
Then a particular heuristic uses this information to propose correctattachments.
Some experiments are performed on two text corpora.
The results areevaluated in section 8.3.Table 7Excerpt of entry secreta?rio (secretary) (in the PGR corpus).secreta?
rio (secretary)SUBCAT& bde_up, secreta?rio?
([_ ] of secretary) =cargo, carreira, categoria, compete?
ncia, escala?
o, estatuto, funa$a?
o,remuneraca?
o, trabalho, vencimento(post, career, category, qualification, rank, status, function, remuneration, job, salary)& bde_down, secreta?rio?
(secretary of [_ ]) =administrac$a?
o, assembleia, autoridade, conselho, direcc$a?
o, empresa,entidade, estado, governo, instituto, juiz, ministro, ministe?
rio,presidente, servic$o, tribunal o?
rga?
o(administration, assembly, authority, council direction, company, entity, state, government, institute,judge, minister, ministery, president, service, tribunal organ)& biobj_a_up, secreta?rio?
([_ ] to the secretary) =aludir, aplicar:ref1, atender, atribuir, concernir, corresponder,determinar, presidir, recorrer, referir : ref1, respeitar(allude, apply, attend, assign, concern, correspond, determine, resort, refer, relate)& biobj_a_up, secreta?rio?
([_ ] to the secretary) =caber, competir, conceder:vpp, conferir, confiar:vpp, dirigir:vpp,incumbir, pertencer(concern, be incumbent, be conceded, confer, be trusted, be sent, be incumbent, belong)& biobj_por_up, secreta?rio?
([_ ] by the secretary) =assinar:vpp, conceder:vpp, conferir:vpp, homologar:vpp, louvar:vpp,subscrito(be signed, be conceded, be conferred, be homologated, be complimented, subscribe)& blobj_up, secreta?rio?
(the secretary [_ ]) =definir, estabelecer, fazer, fixar, indicar, prever, referir(define, establish, make, fix, indicate, foresee, refer)SENSE& administrac$a?
o, assembleia, autoridade, chefe, comandante, comissa?
o,conselho, director, direcc$a?
o, entidade, estado, funciona?
rio, gabinete,governador, governo, instituto, juiz, membro, ministro, ministe?
rio,presidente, provedor, secreteria, secreta?
rio, senhor, servic$o, tribunal,o?
rga?
o(administration, assembly, authority, chief, commander, commission, council, director, direction, entity,state, official, cabinet, governor, government, institute, judge, member, minister, ministry, president,purveyor, secretary, secretary, mister, service, tribunal, organ)& primeiro-ministro, autoridade, entidade, estado, membro, ministro,ministe?
rio, presidente, secreta?
rio(prime minister, authority, entity, state, member, minister, ministry, president, secretary)Gamallo, Agustini, and Lopes Clustering Syntactic Positions8.1 Design of a Lexicon with CorequirementsThe learning method provides a lexicon with syntactic and semantic information.
Aword entry is divided into two types of information (see Table 7).
SUBCAT is therepository of syntactic and semantic requirements.
SENSE contains the different wordsets to which the entry belongs.
Each word set corresponds to a particular sensedistinction.
However, only the SUBCAT information is used here for the purpose ofattachment resolution.
Table 7 shows an excerpt of entry secreta?
rio (secretary).
Thisentry is associated with a SUBCAT repository with six requirements and a SENSErepository containing two word senses.The word secreta?
rio requires two nominal and four verbal arguments.Concerning the nominal positions, we learn that secretary selects for nouns such aspost or rank in the de_up location, whereas it requires a class of nouns denotinginstitutions or functions in the de_down location.
Concerning the verbal positions, wealso learn that secretary requires various verb classes in different verbal positions: twoclasses in location iobj_a_up, one class in iobj_ por_up, and one more in lobj_up.A syntactic pattern of subcategorization arguments underlies the organization ofthe SUBCAT repository in Table 7.
This pattern can be represented as follows:?Xv aprep an?vp _ ?Yv porprep an?vp _ ?Zn deprep an?np _ ?an deprep Wn?np _ ?an Uv?vp ?21?where X, Y, Z, .
.
.
stand for variables of subcategorized words, while a is thesubcategorizer.
If a is secreta?
rio, then the specific values of X, Y, Z, .
.
.
can be foundin Table 7.
For example, according to Table 7, the noun cargo instantiates Z, while theverb pertencer instantiates X.
The symbol ?
stands for Boolean disjunction.
We takeinto consideration that at least in Portuguese, all word arguments are optional.
Eventhe subject of a verb may be omitted.
Note, however, that the syntactic pattern in (21)does not allow it to be distinguished whether arguments are compatible or not.
Forinstance, it is not able to predict that (Yv porprep an)vp and (an Uv)vp are argumentpositions that cannot appear in the same sentence.
Moreover, there are no restrictionson the linear order of arguments.
As we do not learn this type of syntactic information,the pattern depicted in (21) can be viewed merely as a set of potential arguments of aword.
So our method does not allow a set of entirely organized subcategorizationframes to be captured for each word.Note that it is the corequirement structure that allows us to acquire a great numberof requirement positions that are not usual in most standard approaches.
Fivepositions of secretary require not standard dependent complements, but different typesof heads.
This is a significant novelty of our approach.
Consider the positions thatimpose nonstandard requirements (i.e., nonstandard predicates).
According to thestandard definition of predicate given in section 4.2.1 (simple requirement definition),only locations robj_down, lobj_down, and mod_up give rise to positions withrequirements.8 By contrast, positions defined by the complementary locations (robj_up,lobj_up, mod_down) are considered mere complements of verbs or objects modified byadjectives.
So they cannot impose any requirement, and thereby they are notsemantically defined as predicates.
In opposition to this viewpoint, our system learnsmore classes of requirements imposed by positions considered nonstandard predicates(5,192) than classes of requirements imposed by positions considered standard1348 Positions with prepositions are not taken into account in this analysis because they are ambiguous.Computational Linguistics Volume 31, Number 1135predicates (4,600).
These experimental results seem to prove that nonstandardpredicates correspond to positions with requirements.
In sum, we may infer thatbinary dependencies are structured by corequirements.Consider now the SENSE repository in Table 7.
It contains two word sets whichshould represent two senses of secreta?
rio.
Unfortunately, our clustering algorithmgenerates some redundancy.
In this case, the two clusters should have been mergedinto one, since they seem to refer to the same concept.
Cluster redundancy is the majorproblem of our learning strategy.8.2 Attachment Heuristic CRThe syntactic and semantic requirements provided by the lexical entries are used toimprove a parser and the DCG grammar it is based on.
The description of the parserremains beyond the scope of this article; it has been described in Rocio, de la Clergerie,and Lopes (2001).
Details of a symbolic DCG grammar with information on linguisticcorequirements can be found in Gamallo, Agustini, and Lopes (2003).
In this article, weonly outline how the grammar uses this information to resolve syntactic attachments.Corequirements are at the center of attachment resolution.
They are used tocharacterize a particular heuristic on syntactic attachment.
This heuristic referred toas CR, is supposed to be more precise than RA.
It states that two chunks aresyntactically and semantically attached only if one of the following two conditions isverified: Either the dependent is semantically required by the head or the head issemantically required by the dependent.
Take the expression:::compete a o secreta?rio::: ?is incumbent on the secretary?
?22?This expression is analyzed as a vp?pp construction only if at least one of the twofollowing requirements is satisfied:Down requirement: The context biobj_a_down, competir?
(be-incumbent on [_ ])requires a class of nouns to which secreta?
rio (secretary) belongs.Up requirement: The context biobj_a_up, secreta?rio?
([_ ] on secretary) requires a classof verbs to which competir (be incumbent) belongs.Corequirements are viewed here as constraints on the syntactic rules of asymbolic grammar.
Attachments are then solved by using Boolean, and not purelyprobabilistic, constraints.
According to the lexical information illustrated in Table 7,expression (22) can be analyzed as a vp?pp construction because at least the uprequirement is satisfied.
Note that even if we had no information on the verb re-quirements, the attachment would be allowed, since the noun requirements in thedependent (up) location were learned.
So we learned that the noun secreta?
riohas as argument the verb competir in location biobj_a_up?.
As we show inthe evaluation procedure, corequirements are also used to resolve long-distanceattachments.8.3 Evaluating Performance of Attachment ResolutionWe evaluated the performance of CR, that is, the attachment heuristic based onBoolean corequirements.
The general aim of this evaluation was to check whether theGamallo, Agustini, and Lopes Clustering Syntactic Positionslinguistic requirements we learned were adequate for use in a parsing task.
The degreeof efficiency in such a task may serve as a reliable evaluation for measuring thesoundness of our learning strategy.8.3.1 Test Data.
The test data consisted of sequences of basic phrases (i.e., chunks).The phrase sequences selected belong to three types: vp?np?pp, vp?pp?pp, and np?pp?pp.
They were randomly selected from two different (and already chunked) testcorpora: a group of 633 sequences was selected from the EC corpus and another groupof 633 was selected from PGR.
Each group of 633 sequences was constrained to havethree equal partitions: 211 vp?np?pp sequences, 211 vp?pp?pp sequences, and 211 np?pp?pp sequences.
The test corpus from which each group was selected had previouslybeen separated from the training corpus, so the sequences used for the test wereexcluded from the learning process.
Then the annotators (the coauthors) manuallyproposed the correct attachments for each phrase sequence, using the full linguisticcontext.
Some specific instructions were given to the annotators for the mostcontroversial cases.
The following excerpts from these instructions are illustrative:(1) if a pp seems to be a modifier of the verb, then it is attached to the vp; (2) if a pp is amodifier of the sentence, no attachment is proposed; (3) if an np following a vp is eitherthe direct object or the subject of the verb, then the np is attached to the vp; (4) if a ppseems to be attached to two phrases, two attachments are proposed (we retain theambiguity); (5) if a phrase contains a word that was not correctly tagged, noattachment is proposed.
Note that verbal modifiers and verbal complements aretreated in the same way (see subsection 4.2.2).
Moreover, we consider a robj (i.e., an npfollowing a vp) as being able to be instantiated by two different functions: both a directobject and a subject (section 6.1).Most works on attachment resolution use as test data only phrase sequences oftype vp?np?pp (Sekine et al 1992; Hindle and Rooth 1993; Ratnaparkhi, Reymar, andRoukos 1994; Collins and Brooks 1995; Li and Abe 1998; Niemann 1998; Grishman andSterling 1994).
These approaches consider each sequence selected for evaluation ashaving the potential to be syntactically ambiguous in two ways.
For instance, theseuqence of chunks?VP cut?NP the potato?PP with a knife ?23?can be elaborated either by the parse?VP cut?NP the potato?PP with a knife ?24?which represents a syntactic configuration based on proximity (phrase2 is attached tophrase1 and phrase3 is attached to phrase2), or by?VP cut?NP the potato?PP with a knife ?25?which is here the correct configuration.
It contains both a contiguous and along-distance attachment: phrase2 is attached to phrase1 and phrase3 is attached tophrase1.136Computational Linguistics Volume 31, Number 1137We consider, however, that the process of attachment resolution can begeneralized to other syntactic sequences and ambiguity configurations.
On the onehand, we evaluated not only one, but three types of phrase sequences: vp?np?pp,vp?pp?pp, and pp?pp?pp.
On the other hand, these sequences cannot be reduced to onlytwo syntactic configurations (two parses).
They can be syntactically ambiguous indifferent ways.
These ambiguities are introduced by adjective arguments and sentenceadjuncts (see Table 8).Table 8 shows phrase sequences that cannot be analyzed by means of the twostandard configurations underlying parses (24) and (25).
None of the sequences in thattable match the two standard configurations.
For instance, a o decreto (to the decree),which is the phrase2 of the first example, is not attached to the head of phrase1, but tothe adjective relativo (referring).
Similarly, in the second expression, a o citadodiploma (to the referred diploma) is attached to the adjective anexos (appended) and notto the head of phrase2.
Subcategorization of adjectives introduces a new type ofstructural ambiguity, which makes it more difficult to make attachment decisions.Finally, in the third sequence, em a medida (insofar as) is the beginning of an adverbialsentence, so it is not attached to one of the individual phrases but to the wholeprevious sentence.
In sum, resolving structural ambiguity cannot be reduced to abinary choice between the two configurations depicted in (24) and (25).
We return tothis matter below.Another important property of test data is that they contain incorrectly taggedwords.
We do not remove these cases, since they can give us significant informationabout how (in)dependent of noisy data our learning method is.8.3.2 The Evaluation of Protocol.
Each sequence selected from the test corpus con-tains three phrases and two candidate attachments.
So given a test expression, twodifferent attachment decisions are evaluated:Decision A: Is phrase2 attached to phrase1, or not attached at all?Decision B: Is phrase3 attached to phrase2, attached to phrase1, ornot attached at all?As we selected 6332 test expressions, and each expression implicitly containstwo attachment decisions, the total number of decisions that we evaluated was 2,532.By contrast, in most related approaches, test expressions are ambiguous in only twosenses: phrase3 is attached to either phrase2 or phrase1.
Such approaches do not considerTable 8Different types of syntactic sequences and various types of syntactic ambiguities.np?pp?pp [np o artigo relativo] [pp a o decreto] [pp de a lei](the article referring to the decree-law)vp?pp?pp [vp publicou] [pp em os estatutos anexos] [pp a o citado diploma](published in the statutes appended to the referred diploma)vp?np?pp [vp tem] [np acesso] [pp em a medida](has access insofar as)Gamallo, Agustini, and Lopes Clustering Syntactic Positionsthe attachment between phrase2 and phrase1.
So in these approaches, Decision A is nottaken into account.
Moreover, they do not evaluate those cases in which phrase3 is notattached to phrase2 or to phrase1.
In sum, only one decision per expression is evaluated,namely, the decision concerning the PP-attachment.
This type of evaluation, however,is not appropriate to measure the capability of the system to identify the nonstandardstructural ambiguities described above (section 8.3.1).
For instance, we expect thesystem not to propose that the pp ao diploma (to the [referred] diploma) is attached tothe previous np, headed by estatutos, in the second example of Table 8.
The correctdecision is to propose no attachment between the pp (phrase3) and either of the twoprevious phrases taking part in the sequence vp?pp?pp.
The attachment is actually to aword, namely, the adjective anexo, which is not a direct constituent of the abstractsequence vp?pp?pp.Another important aspect of the evaluation protocol is that CR overgeneratesattachments.
There are several cases in which the three phrases of a sequence aresemantically related.
In those cases, CR often proposes three attachments even if onlytwo of them are syntactically allowed.
For instance, take the following np?pp?ppsequence:?npa remunerac$ a?o ?ppde o cargo ?ppde secreta?rio?the salary concerning the post of secretary?
?26?which would be correctly analyzed by using the same configuration as in parse (24),that is,?npa remunerac$ a?o ?ppde o cargo ?ppde secreta?rio ?27?Note that there exists a strong semantic relationship between phrase3 (de secre-ta?
rio) and phrase1 (a remunerac$a?
o), even if they are not syntactically attached in(27).
Taking into account the semantic requirements stocked in the lexicon (seeTable 7), CR is induced to propose, in addition to the two correct attachments, along-distance dependency, which seems not to be syntactically correct in thisparticular case.
We call this phenomenon attachment overgeneration.
When asequence contains two semantically related phrases that are not actually syntacticallydependent, CR overgenerates an additional attachment.
Attachment overgenerationwas found in ,15% of expressions selected from the test corpus.
In order toovercome this problem, we use a default rule based on right association.
The defaultrule removes the long-distance attachment and proposes only the two contiguousones.
This simple rule has an accuracy of more than 90% with regard to the 15% ofsequences containing overgeneration.From a semantic viewpoint, attachment overgeneration seems not to be a realproblem.
The semantic interpretation of sequence (26) needs to account for allconceptual relations underlying the sequence.
So the semantic requirements thatlinked secreta?
rio to remunerac$a?
o (even if they are not syntactically dependent)are useful for building a semantic representation of the sequence.8.3.3 Baseline (RA).
Concerning the ability to propose correct syntactic attachments,we made a comparison between CR and a baseline strategy.
As a baseline, we used the138Computational Linguistics Volume 31, Number 1139attachments proposed by right association.
For each sequence of the test data, RAalways proposes the configuration underlying parses (27) and (24); that is, phrase2 isattached to phrase1, and phrase3 is attached to phrase2.8.3.4 Similarity-Based Lexical Association.
We also compared CR to a very differentlearning strategy: the similarity-based lexical method (Sekine et al 1992; Grishman andSterling 1994; Dagan, Marcus, and Markovitch 1995; Dagan, Lee, and Pereira 1998),described in section 2.3.
We simulated here a particular version of this strategy.
First,we used the log-likelihood ratio as a score of the association between pairs of syntacticpositions and words.
We restricted the lexical association procedure to suggestattachments only in cases in which the absolute value of the ratio was greater than anempirically set threshold (3.00).
Then, in order to generalize from unobserved pairs, alist of similar words was used to compute nonzero association scores.
For this purpose,the thesaurus described in section 7.5 turned out to be useful.According to Dagan, Marcus, and Markovitch (1995), the similarity-based lexicalassociation LAsim between position p and word w is obtained by computing the averageof the likelihood ratios between p and the k most similar words to w:LAsim?p, w?
?P ki?
0 LA?p, wi?NZ?28?where LA?p, wi?
is the likelihood ratio between p and one of the k most similar wordsto w. NZ represents the number of nonzero values among LA?p, w1?, LA?p, w2?,...,LA?p, wk?.Corequirements are also considered.
Given dependency (robj; ratificar#, lei")(ratify the law), we compute the two following lexical associations:LAsim?brobj down, ratificar?,lei ?LAsim?brobj up, lei?ratificar?
?29?The scores of these two associations are taken into account in the evaluation procedure.In particular, the sum of the two scores (if each of them is greater than the empiricallyset threshold) will be used to make a decision on the attachment between an np headedby lei and a vp headed by ratificar.8.3.5 Precision and Recall.
The evaluation of each attachment decision made by thesystem can be True positive (tp): The system proposes a correct attachment; True negative (tn): The system proposes correctly that there isno attachment; False positive ( fp): The system proposes an incorrect attachment; False negative ( fn): The system proposes incorrectly that there isno attachment.We refer to both tp and tn as true decisions (td).
The evaluation test measures theability of the system to make true decisions.
As far as our strategy and the similarity-Gamallo, Agustini, and Lopes Clustering Syntactic Positionsbased approach are concerned, a false negative ( fn) is interpreted as the situation inwhich the system lacks sufficient subcategorization information to make a decision.
Bycontrast, the baseline always proposes an attachment.Taking into account these variables, precision is defined as the number of truedecisions suggested by the system divided by the number of total suggestions.
That is:precision ?
tdtd ?
fp ?30?Recall is computed as the number of true decisions suggested by the system dividedby all the decisions that have been made (i.e., the total number of ambiguities):recall ?
tdtd ?
fp ?
fn ?31?To clarify the evaluation procedure, Table 9 displays the different attachment decisionsmade on the following test sequence:?vp assistir ?pp por o representante ?pp de o EstadoMembro?assisted by the delegate of the MemberState?
?32?The two correct attachments in (32), proposed by the human annotator, are comparedagainst the attachment decisions proposed by the three methods at stake: heuristicwith Boolean corequirements, similarity-based lexical association, and right associa-tion, which is the baseline.
Table 9 assesses the two different decisions (A and B) madeby each method.
Note that both CR and LAsim take advantage of corequirements.Indeed, each decision is made after two types of subcategorization information havebeen considered: the requirements the dependent word must satisfy and therequirements that the headword must satisfy.Decision A concerns the first candidate attachment, that is, the dependencybetween [vp assistir] and [pp por o representante].
Let us analyze the behaviorof the three methods.
LAsim incorrectly suggests that there is no attachment.
The scoreof two internal requirements is zero, so the final decision is a false negative: fn.
Thesystem has no information on requirements because on the one hand, the two phrasesat stake do not co-occur in the training corpus, and on the other, co-occurrences ofphrases with similar words were not attested (and then no generalization wasallowed).
CR, by contrast, is endowed with the appropriate requirements to correctlysuggest an attachment (tp) between the two phrases, even though they are not attestedin the training corpus.
The clustering strategy allowed the system to learn both thatbiobj_ por_D, assistir?
requires representante and that biobj_ por_H, representante?requires assistir.
Note that in order to suggest the attachment, it is not necessarythat the two complementary requirements be learned.
As has been noted in section 8.2,the learning of only one of them is enough to make the suggestion.
Finally, RA alsosuggests the correct attachment.
Indeed, the two phrases in (32) are related by rightassociation.140Computational Linguistics Volume 31, Number 1141As regards Decision B, all three methods correctly suggest that there is anattachment (tp) between [np o representate] and [pp de o Estado-Membro].8.3.6 Results.
Table 10 reports the test scores in regard to the precision and recallfrom the experiments performed.
These scores concern three methods, namely RA,LAsim, and CR, two text corpora (EC and PGR), and three types of phrasesequences.
There are no significant differences between the scores obtained fromcorpus EC and those from PGR, CR, for instance, obtains very similar F-scores overthe two corpora.
However, there are important differences among the precisionvalues associated with the three phrase sequences.
In particular, the scores onsequence vp?np?pp are significatively higher than those on the other sequences,regardless of the method employed.
This is motivated by the fact that in most vp?np?pp sequences (,95%), there is a true attachment between np and vp.
So the precisionscore achieved by the three methods with regard to this particular attachmentdecision is very high.
Prepositional-phrase attachments, by contrast, are moreambiguous, which causes sequences vp?pp?pp and np?pp?pp to be less predictable.Indeed, such sequences have two prepositional phrases involved in the attachmentdecisions.Table 9Evaluation of a test sequence.CR Decision A:biobj_ por_D, assistir?
requires representante: YESbiobj_ por_H, represantante?
requires assistir: YESResult: tpDecision B:biobj_ por_D, assistir?
requires Estado-Membro: NObiobj_ por_H, Estado?Membro?
requires assistir: NObde_D, representante?
requires Estado-Membro: YESbde_H, Estado ?
Membro?
requires representante: YESResult: tpLAsim Decision A:LAsim (biobj_ por_D, assistir?, representante): 0LAsim (biobj_ por_H, representante?, assistir): 0Result: npDecision B:LAsim (biobj_ por_D, assistir?, Estado-Membro): 0LAsim (biobj_ por_H, Estado ?
Membro?, assistir): 0LAsim (bde_D, representante?, Estado-Membro): 136.70LAsim (bde_H, Estado ?
Membro?, representante): 176.38Result: tpRA Decision A:[vp assistir [pp por o representate]]: YESResult: tpDecision B:[pp por o representate [pp de os Estados-Membros]]: YESResult: tpGamallo, Agustini, and Lopes Clustering Syntactic PositionsConcerning the differences among the three methods, Table 11 averages the resultsof the three methods over the two corpora and the three phrase sequences.
The totalprecision of our method (CR) reaches 0.89, that is, four percentage points higher thanLAsim.
Note that the precision value of LAsim is not far from the values reached by otherapproaches to attachment resolution based on the similarity-based lexical associationstrategy.
For instance, the method described in Grishman and Sterling (1994) scores aprecision of ,0.84.
Concerning recall, CR also reaches a level of precision that is fourpoints higher than that achieved by LAsim.
This entails that on the one hand, the abilityof CR to learn accurate subcategorization information is higher than that of LAsim, andon the other hand, the ability of CR to learn from sparse data and to generalize is atleast no lower than that of LAsim.The baseline score informs us that about 76% of attachments are links byproximity.
The remainder (24%) are either long-distance attachments between phrase3and phrase1, other types of attachments such as adjective complements, and sentencemodifiers, or finally, tagger errors.
Note that there is no difference between thebaseline method?s precision and recall scores.
Since RA always makes a (true or false)positive decision, there cannot be (true or false) negative decisions.142Table 11Total scores of the three methods.
For each method, we compute the average of the threesequences and the two corpora.Precision Recall F-scoreBaseline .76 .76 .76LAsim .85 .71 .77CR .89 .75 .81Table 10Evaluation taking into account three types of sequences and two corpora: EC and PGR.Pr = precision, Rec = recall, and F-S = F-score.Baseline (RA)Sequences PrEC PrPGR RecEC RecPGR F-SRV F-SPGRnp?pp?pp .71 .72 .71 .72 .71 .72vp?np?pp .83 .80 .83 .80 .83 .80vp?pp?pp .75 .74 .75 .74 .75 .74Lexical association (LAsim)Sequences PrEC PrPGR RecEC RecPGR F-SRV F-SPGRnp?pp?pp .77 .82 .66 .72 .71 .77vp?np?pp .90 .86 .75 .74 .82 .79vp?pp?pp .85 .89 .65 .70 .74 .78Boolean requirements (CR)Sequences PrEC PrPGR RecEC RecPGR F-SRV F-SPGRnp?pp?pp .85 .86 .73 .76 .78 .81vp?np?pp .92 .93 .75 .78 .83 .85vp?pp?pp .86 .91 .69 .75 .77 .82Computational Linguistics Volume 31, Number 1143Some tagger errors, especially those that appear systematically and regularly in thetraining corpus, have a negative influence on the precision of both LAsim and CR.
Thesemethods are sensitive to noisy data.In order to measure recall and precision stability, we ran the clusteringprocess over six partitions (25%, 40%, 55%, 70%, 85%, and 100%) of the EC corpus.Figure 7 shows that recall improves with corpus size.
However, recall growth is moresignificant in smaller partitions.
In this particular corpus, recall stability seems to beachieved when the corpus contains three million words.
It follows that in order toimprove recall, we would have to use not only a bigger training corpus, but also amore efficient clustering strategy, that is, a strategy that would be able to makeadditional correct generalizations.
Finally, note that precision neither increases nordecreases with corpus size.9.
Conclusion and Future WorkThis article has presented a particular unsupervised strategy to automatically acquiresyntactic and semantic requirements.
Our aim was to learn two types of informationabout a given word: the syntactic positions in which the word appears and thesemantic requirements associated with each syntactic position.
Besides that, thisstrategy also allowed us to discriminate word senses.
The strategy is based on severallinguistic assumptions.
First, it was assumed that not only does the syntactic headimpose restrictions on its dependent word, but also that the dependent word mayselect for a specific type of head, a phenomenon referred to as corequirement.
Second,we claimed that similar syntactic positions share the same semantic requirements.
Sowe measured not similarity between words on the basis of their syntactic distribution,but similarity between syntactic positions on the basis of their word distribution.
Itwas assumed that the latter kind of similarity conveys more pertinent information onlinguistic requirements than the former one.
The learning process allowed us toprovide a lexicon with, among other information, both syntactic subcategorization andselection restrictions.
This information was used to constrain attachment heuristics.In current work, we are using the learned clusters in other NLP applications thanattachment resolution.
They are being used to automatically select word senses incontext (word sense disambiguation task).
For this purpose, we are performing newFigure 7Variation of recall and precision as a function of corpus size.Gamallo, Agustini, and Lopes Clustering Syntactic Positionsexperiments on less domain-specific text corpora, since such corpora increase thenumber of senses per word.
On the other hand, these clusters turn out to be veryuseful for checking whether two or more different morphological forms of a word aresemantically related.
For instance, if ratification of [_ ] is similar to ratify [_ ], we mayinfer that the verb ratify and the noun ratification are semantically related.In future work, we aim at extending the lexicon in order to increase the coverage ofthe parser.
To do this, parsing and learning can be involved in a bootstrapping process.The dependencies proposed by heuristic CR will be used as input to discover newlinguistic requirements.
This new information will enable us to update the lexicon, andthen to propose new dependencies.
At each cycle, the lexicon will be provided withnew requirements, and thereby the parser coverage will be higher.
The successive?
?learning + parsing??
cycles will stop as no more new information is acquired and nomore new dependencies are proposed.144AcknowledgmentsThe work by Pablo Gamallo was supportedby a grant from Portugal?s FundaZa?o para aCie?ncia e Tecnologia (ref: PRAXIS XXI/BPD/2209/99).
Alexandre Agustini wassupported by Brazil?s Federal Agency forPost-Graduate Education (CAPES) andPontifical Catholic University of Rio Grandedo Sul (PUCRS).ReferencesAllegrini, Paolo, Simonetta Montemagni,and Vito Pirrelli.
2000.
Learning wordclusters from data types.
In COLING-00,pages 8?14, Saarbru?cken, Germany.Allegrini, Paolo, Simonetta Montemagni,and Vito Pirrelli.
2003.
Example-basedautomatic induction of semantic classesthrough entropic scores.
In A. Zampolli, N.Calzolari, and L. Cignoni, editors,Computational Linguistics in Piza?LinguisticaComputazionale a Pisa (special issue ofLinguistica Computazionale).
Pisa andRome: IEPI, volume 1, pages 1?45.Androutsopoulos, Ion and Robert Dale.
2000.Selectional restrictions in HPSG.
InEighteenth Conference on ComputationalLinguistics (COLING), pages 15?20,Saarbru?cken, Germany.Basili, Roberto, Maria Pazienza, and PaolaVelardi.
1992.
Computational lexicons: Theneat examples and the odd exemplars.
InProceedings of the Third ANLP, Trento, Italy.Beale, Stephen, Sergei Niremburg, andEvelyn Viegas.
1998.
Constraints incomputational semantics.
In COLING-98,Montreal.Brent, Michel R. 1991.
Automatic acquisitionof subcategorization frames fromuntagged text.
In 29th Annual Meeting ofACL, pages 209?214, Berkeley, CA.Ciaramita, Massimiliano and Mark Johnson.2000.
Explaining away ambiguity:Learning verb selectional preference withBayesian networks.
In COLING-00, pages187?193, Saarbru?cken, Germany.Collins, Michael and James Brooks.
1995.Prepositional phrase attachment through abacked-off model.
In Proceedings of theThird Workshop on Very Large Corpora,pages 27?38, Cambridge, MA.Dagan, Ido, Lillian Lee, and FernandoPereira.
1998.
Similarity-based methods ofword cooccurrence probabilities.
MachineLearning, 43:56?63.Dagan, Ido, Shaul Marcus, and ShaulMarkovitch.
1995.
Contextual wordsimilarity and estimation from sparse data.Computer Speech and Language, 9(2):123?152.de la Clergerie, Eric.
2002.
Construire desanalyseurs avec dyalog.
In Proceedings ofTALN?02, Nancy, France.Faure, David and Claire Ne?dellec.
1998.Asium: Learning subcategorizationframes and restrictions of selection.
InECML98, Workshop on Text Mining,Chemnitz, Germany.Framis, Francesc Ribas.
1995.
Onlearning more appropriate selectionalrestrictions.
In Proceedings of the SeventhConference of the European Chapter of theAssociation for Computational Linguistics,Dublin.Gamallo, Pablo.
2003.
Cognitivecharacterisation of basic grammaticalstructures.
Pragmatics and Cognition,11(2):209?240.Gamallo, Pablo, Alexandre Agustini, andGabriel P. Lopes.
2003.
Learningsubcategorisation information tomodel a grammar with co-restrictions.Traitement Automatic de la Langue,44(1):93?117.Computational Linguistics Volume 31, Number 1145Gamallo, Pablo, Caroline Gasperin,Alexandre Agustini, and Gabriel P. Lopes.2001.
Syntactic-based methods formeasuring word similarity.
In V. Mautner,R.
Moucek, and K. Moucek, editors, Text,Speech, and Discourse (TSD-2001).
Berlin:Springer Verlag, pages 116?125.Gildea, Daniel and Daniel Jurafsky.
2002.Automatic labeling of semantic roles.Computational Linguistics, 28(3):245?288.Grefenstette, Gregory.
1994.
Explorations inAutomatic Thesaurus Discovery.
KluwerAcademic, Norwell, MA.Grishman, Ralph and John Sterling.
1994.Generalizing automatically generatedselectional patterns.
In Proceedings of the15th International Conference onComputational Linguistics (COLING-94),Kyoto, Japan.Harris, Zellig.
1985.
Distributional structure.In J. J. Katz, editor, The Philosophy ofLinguistics.
New York: Oxford UniversityPress, pages 26?47.Hindle, Donald and Mats Rooth.
1993.Structural ambiguity and lexicalrelations.
Computational Linguistics,19(1):103?120.Hudson, Richard.
2003.
The psychologicalreality syntactic dependency relations.
InMTT2003, Paris.Kovacs, Laszlo and Peter Baranyi.
2002.Document clustering based on conceptlattice.
In IEEE International Conference onSystem, Man and Cybernetics (SMC?02),Hammamet, Tunisia.Langacker, Ronald W. 1991.
Foundations ofCognitive Grammar: Descriptive Applications,volume 2.
Stanford University Press,Stanford.Li, Hang and Naoki Abe.
1998.
Wordclustering and disambiguation based onco-occurrence data.
In COLING-ACL?98,pages 749?755, Montreal.Lin, Dekang.
1998.
Automatic retrievaland clustering of similar words.
InCOLING-ACL?98, pages 768?774, Montreal.Lin, Dekang and Patrick Pantel.
2001.Induction of semantic classes fromnatural language text.
In SIGKDD-01,San Francisco.Manning, Christopher.
1993.
Automaticacquisition of a large subcategorizationdictionary from corpora.
In 31st AnnualMeeting of ACL, pages 235?242,Columbus, OH.Manning, Christopher and Hinrich Schu?tze.1999.
Foundations of Statistical NaturalLanguage Processing.
MIT Press,Cambridge, MA.Marques, Nuno and Gabriel P. Lopes.
2001.Tagging with small training corpora.
In F.Hoffmann, D. Hand, N. Adams, D. Fisher,and G. Guimaraes, editors, Advances inIntelligent Data Analysis.
Lecture Notes inComputer Science.
Springer Verlag,Berlin, pages 62?72.Marques, Nuno, Gabriel P. Lopes, and CarlosCoelho.
2000.
Mining subcategorizationinformation by using multiple featureloglinear models.
In 10th CLIN,pages 117?126, UILOTS Utrecht.Niemann, Michael.
1998.
Determining PPattachment through semantic associationsand preferences.
In ANLP Post GraduateWorkshop, pages 25?32, Sydney.Pantel, Patrick and Dekan Lin.
2000.
Anunsupervised approach to prepositionalphrase attachment using contextuallysimilar words.
In ACL?00, pages 101?108,Hong Kong.Pantel, Patrick and Dekan Lin.
2002.Discovering word senses from text.
InProceedings of ACM SIGKDD Conferenceon Knowledge Discovery and DataMining, pages 613?619, Edmonton,Alberta, Canada.Pustejovsky, James.
1995.
The GenerativeLexicon.
MIT Press, Cambridge, MA.Ratnaparkhi, Adwait, Jeff Reymar, and SalimRoukos.
1994.
A maximum entropy modelfor prepositional phrase attachment.
InProceedings of the ARPA Human LanguageTechnology Workshop, pages 250?255,Princeton, NJ.Reinberger, Marie-Laure and WalterDaelemans.
2003.
Is shallow parsinguseful for unsupervised learning ofsemantic clusters?
In Fourth Conference onIntelligent Text Processing and ComputationalLinguistics (CICLing-03), pages 304?312,Mexico City.Resnik, Philip.
1997.
Selectional preferenceand sense disambiguation.
In ACL-SIGLEXWorkshop on Tagging with Lexical Semantics,Washington, DC.Rocio, Vitor, Eric de la Clergerie, and GabrielLopes.
2001.
Tabulation for multi-purposepartial parsing.
Journal of Grammars,4(1):41?65.Schu?tze, Hinrich.
1998.
Automatic wordsense discrimination.
ComputationalLinguistics, 24(1):97?124.Sekine, Satoshi, Jeremy Carrol, SofiaAnaniadou, and Jun?ichi Tsujii.
1992.Automatic learning for semanticcollocation.
In Proceedings of the ThirdConference on Applied Natural LanguageProcessing, pages 104?110, Trento, Italy.Gamallo, Agustini, and Lopes Clustering Syntactic Positions
