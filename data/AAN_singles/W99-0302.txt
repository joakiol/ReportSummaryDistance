The MATE Annotation Workbench: User RequirementsJ ean  Car le t ta  and Amy I sardt ICR(~,  Un ivers i ty  of  Ed inb, , , 'ghJ.
Car le t ta@ed.
ac.
uk, hmy.
I sard~ed.
ac.
ukAbst rac tThe M A'I'E project (Telemati('s L1~4-8370) aims tofacilitate the re-use of spoken dialogue resour,'es an,lto foster etnl)iricai nvesl, igation o1" (lialoguc by pro-viding a workl)ench which ,:an l)e used to atlnotal.cand explore the.
relationships among diflb.rent stru(--tures within a (lialoguc corl),m. This I)aper des~:ribe.sthe hltended functionality of the workl)?~nch by ref-eren('e to the needs of several tyl)as of l)rO.sl)ectiw~users.
It should be considered a position i)aper aboutwhat kin(l of technological supl)ort the user (:olnnni-nity requires.
The workl)en(:h itself is scheduled tobe relea.se(l in I)et'emhe.r 19!
)9, with further dew:lop-nlent likely t)eyon(I that.1 IntroductionMany people wish to annotate spoken (li~dogu(~ (:or--I)ora with co(led information.
This information cancome in many forms for many different i)url)oses.Sorne ol' it will be linguisti(:; for instance, the anno-tation /nay tel)resent i)art-of-sl)eech information orsyntactic stru(:tur(.
~,for us(.
in language modelling.Some of it will be non-linguistic, representing infor-mation about the co,nmunicative situation or aboutevents such a.s coughing or gesturing.
If the dia-logue being armotated is being conducted with ormediated by technology, some of it may be sl)ecilicto that technology .. for instance, showing the re-suits of speech recognition in line with a human tran-scription of the same material in order to highlightwt~ere the dialogue model, broke down.
Althoughsome kinds of annotation, such a.s dialogue act in-formation, come up again and again, it is impossibleto prejudge what kinds of annotations people whowork with corpora will find usefld even when con-sidering a quite restricted set of coding purposes.Currently, corpus annotation is a very costly exer-cise not just because of the time which it takes codersto make the coding distinctions, but also becausethere is little etfeetive technological support for an-notation.
The MATE Workbench \[9\] is intended toaddress the need for technology by providing a sin-gle interface to all of the basic functionalities whichcorpus annotators need, but with enough flexibilitythat different I)rojects can to i~,',)vi(I,.
,lill'~r,.nt kindsof annotation and that inforlnation ('ktn I{?
~ i)()rt.
?.,Ibetween tint Workl)en('h anti ot lwr al)l)lical.i~,n,~.
Tlu"workbel|ch is a standalonct t()?
)l wril.l.
?.n ill .lay;t, s,~ il,will I)e able to ru.
with(,uL r,.,'tmq)ilathm ,m Illanydifferent I,lal.l'ornm including I'( Is, Mats, ;t{ul Ill,ixlna(:hines.2 Why Th is  is I ta rd' l 'he'single llJOSt iml),Jrtanf, obstacb, t.o ann*Jtai,i~)ntool design is the fat:t l, hat ~:,,rpus anlu,tat.i~ms ar,.not n~:essarily hierarchically arrange'd, m;.king it.difficult to design data stru,%iires and aJlo,ril, hlimwhich can hart(lie th,~ui ,~tliciently bul.
whirl, ar~- als,,llexiIJh ~.
enough to jznak,~ it, ?
:;my I,o inq~b~tn-nt w-wannotation st'henies.
I"(,r i,stanc,., diah,g,n~- I,iKhtuseflnJly be annotated fi,r int.ent, i,mal M,l'llCl, llr*-, i l ltonat ional  strll?
:|,ur?~, {llzd sylll, a?
:ti,: strtl?
:l, llr,-, ;tlSd,in I'a(:t, for the inost del.ailcd empirh:al w?,rk, ;tll t,fthese annotat ions  Inight be n,~,~(h~d shnnall.an~:,mHlyso that relatiollshij)s anlonl.~ th{~ln ?
:an I,: ,.xpb,rt-d.I~a(:h type ofstrllctilr?
: (:all r(~|'~r to SOlll?"
shar,,I I,;,s,:lev(:l of transcripti(m, whether (}rthogral~hi{: ~Jr ph,~i|etic, with thnhlg hlforlnatiol{ wllt:r~ I,he sp?
:r:,:h sip,ual is available.
Each Lype of strlu:ture IlJight involvo several kinds of tags (for h,stanc% dial,,g0,,~IIIOVei'{ alid gallle8, or  l)arf,-ofslJCi:cJJ lal,ell?cd l.,,k,:{m)phra.ses, and senten,:es) but can I)e ,:,msid,:r-d 1,,, I,,:broadly hierarchic:el.
I low(-.ver, th,.-hi~:rar,:hies them8eJvc:s l\[lay or lnay not IJear any r?
:la, tionsJlilJ f.r~ ,:;t*:J{other, a.s in l"igure I.Although it is possible to design I,,Jols whi,:h ,::mhandle such coxnplex arrangements t)l" t;tgs, il, i,',Hlljtlh easier to (\]?)
SO when ;I, ?:on?
:r*:f~*~ sr:t of  t;tEhis envisioned than to ilnpJP.n, Jr..nL a Itj,:neri,: ~,, l i l l .
i ,mwhich can be adapted 1,,, otlJ*:r tag s,~l.s.
'lh,:r,~l;,r%existing tools, (reviewed in MA'FE deliv,:ral,l,: 3.1\[2\]), such a~s I)AT \[8\] t(md to support parti , : .
lar ,:,,,1ing schemes, at best allowing tags to be r,:nan,,:d ,,rextra categories to be added to a tag set wil.hh~ astrict family resemblan(-(- for exampl% nl:l \[5\]), a ,d,in fax:t, few irnplement sets of' Lag,.i whi~:l, ,:r,,,~s i ,this way.
In ax\]dition, e.xisting t,,~ls tend t , ,  hawfixed methods for displaying information an,l lix,:,l11o"4 ~ iL__\]\o4;>I-4f~Figure 1: Overlapping Hierarchies12jactions for coding.
Since tools are often built forparticular coding exercises, the user interface is alsofixed, with no way of altering it to suit personalpreferences.
Although these limitations are under-standable, they are not insurmountable.
The MATEWorkbench aims to improve on the current state-of-the-art by exploiting recent developments in corpusrepresentation which allow a more flexible solution.3 A S tep  Forward ,  but  not  Mag icThe technological solution to the flexible represen-tation of overlapping tag hierarchies is to use theXML markup language \[11\].
XML can be used todescribe any sort of coding, and the coding struc-ture can be described in a Document Type Defini-tion (DTD) which describes what tags are possible,and where they can occur.
It is not possible forXML tags to overlap within a document, but onecan create overlapping hierarchies of markup in thesame corpus by using "hyperlinks", which serve notjust to point to elements in a different hierarchy ofmarkup but also to include them for structural pur-poses \[10\].
For example, if dialogue moves are madeup of words; and sentences are made up of the samewords, as in Figure 1, then both can be linked to thesame copy of the words, providing a way of relatingthe two structures.
An example XML representationof a short dialogue fragment is given in Figure 2.Of course, XML is designed to be machine-readable, and should rarely (if ever) be inspecteddirectly.
The MATE project will use "stylesheets"based on the XSL language \[12\], which allow one toexpress operations on an XML corpus which can beused to typeset it for the human reader, choosingboth what annotations to make visible and howthey should be displayed.
Using MATE stylesheets,it will also be possible to specify the link betweenuser actions and modifications to the XML whichis being displayed, and thus implement codinginterfaces.
Stylesheets are written as a sequence ofrules which match the input and give instructionsabout what to do for the output.
A simple exampleof such a rule i s :<msl:template match="($a: dummy);"> (I)<result> (2)<msl:text>A d.mmy.</msl:text> (3)</result></msl:template>Line (1) introduces one stylesheet rule.
Therewill usually be several rules in a stylesheet.
The'match' attribute tells us which elements this rulewill apply to.
In this case, the rule will match<dummy> elements in the input document.
In theMATE stylesheet language, matching is done usingthe MATE query language; query construction issupported in the workbench by means of a graph-ical user interface.
Line (2) and following lines givesthe template of the rule.
This is a description of theelements which will be created in the output doc-ument.
In this case <result> is a literal element,and the result of this rule will be that all <d~mmy>elements will be converted into<result>A dummy.
</result>elements.Rules in a stylesheet are applied in order of oc-currence starting with the top level element in thedocument.
There is a mechanism for top-down left-to-right traversal of the input document hierarchy,and a default rule for unmatched elements.Using XML and XSL allows a flexible solution tothe problem of technological support, but this solu-tion is not magical.
For instance, XML and XSLdo not remove the need to understand how tags re-late to each other; they simply make it easier tospecify a good machine-readable representation ofcomplex tag relationships and to display these rela-tionships for the human reader.
To see what benefitsthis technology will bring, it is necessary to analysethe capabilities and requirements of different ypesof potential workbench users separately.4 User  TypesType 1: The CoderAt least for sites involved in large scale coding exer-cises, data coders are typically the cheapest laboursource available.
They do not wish to know any-thing about how the coding interface works or evenhow different sets of tags relate to each other.
Theirneeds are fairly simple: an intuitive coding interfaceso that they can concentrate on the code distinc-tions, documentation f how to use the interface - al-though, human nature being what it is, we find thatno amount of written material will replace good ver-bal instruction - and the coding instructions nearby,preferably on-line.
The MATE Workbench will en-courage fulfilment of these needs by providing uide-lines and slots for documentation within the codingmodules which define the coding task, through theexample coding schemes which come with with theworkbench, and by providing sufficient coding ac-tions for a wide range of interface designs.
Thus themain benefit o coders is simply a side effect of hav-ing good support for the implementation f codingschemes via well-defined coding modules.
Anotherpotential benefit for longer-term coders is the abilityto reconfigure the user interface which controls inter-action with the workbench components o suit per-sonal preferences, for instance, by rearranging themenus and buttons.13Y</game>Speaker A moves f'de<move id="Am I" type="instruct" hre f="A_word_file#id(A l)..id(A6)'7>\[/Speaker A words file<word id= "A 1" start=-"!"
end="2">go</word><noi d="A2" start="2" end="3" type="cough"/><word id="A3" start="3" end="4">aro--</word><word id="A4" start="4" end="5">above</word><word id="AS" start="5" end="6">the</word>Both speakers games file<game type="instruct"><move_sequence hr f=-"A_move_file#id(Am t )"/><move_sequence href="B_move_file#id(Bm 1 )"/>Speaker B moves file |<move id="Bm I" type="acknowledge" href="B_word_file#id(B 1 )"/~I <word id="A6" start=-"6" end="7">swamp</word> -...... .
.
.
~., ~ <ip href="A_word_file#id(A 1 )"/>apeager A syntax tile \ \[ <ip href="A word_file#id(A3)..id(A6)"/><sentence> X x<pos type="v" hmf="A_word_file#id(A 1)"/> x x<phrase type="p"><pos type="prep" href="A word file#id(A4)"/> \<phrase type="n"><pos type="det" href="A_word_file#id(A5)"/><pos type="n" href="A_word_file#id(A6)"/></phrase></phrase></sentence>I Speaker B words file \[<word id="B 1" start="8" end="9">okay</word> I\] Speaker B intonation file \[\[ <ip href="B word_file#id(B 1)/>\]Speaker A disfluency file<disfluency t pe="s"><reparandum><dw href="A_word_file#id(A3) "/></reparandum><repair><dw href="A_word_fite#id(A4) "/> </repair></disfluency>Figure 2: XML File StructureType  2: The Coding ConsumerThere are several possible types of consumers of ex-isting coded data.
Some users might wish to checkthe relationships in the data for things which are sta-tistically aberrant, mining the data pre-theoreticallyfor whatever stands out.
Others might wish to ex-port some part of the data in order to train on therelationships which are present in it, in the hopesthat some theoretically-motivated relationship willimprove performance in, for instance, a spoken di-alogue system.
Straight theoreticians might wishto inspect particular elationships in order to testspecific research ypotheses.
Whatever the reasonfor interest in the corpus, consumers are united intheir need to ask questions of the corpus, lookingfor places which match a specific form, and to dis-play the results.
Using the coded data well requiresthe mathematical capacity to understand the kindof structural information represented graphically inFigure 1, since otherwise the questions which theuser asks will be meaningless.
The more theoreti-cally motivated the user, the more important hisrequirement is.
Of course, this is true for all workwith complex tag sets, not just those representedwithin MATE.
In addition, where new kinds of dis-play are required to match specific explorations ofthe data, new stylesheets will be required.
Themain benefits of the workbench for coding consumersare (a) the possibility of combining many differentkinds of annotation on one data source, (b) a well-specified query language for exploring the relation-ships among the tags, and (c) methods for exportingdifferent cuts on the data to other packages for fur-ther theoretical or statistical analysis.14Type 3: The Coding DeveloperMany people wish to design their own codingschemes, either to improve on the reliability or suit-ability of an existing scheme or in order to test aparticular esearch question.
These coding develop-ers may hire type 1 coders, but they are quite likelyto do their coding themselves.
This group of usershas the hardest job.
Designing a complete corpusrequires the mathematical capacity not just for un-derstanding structures uch as that represented inFigure 1, but also for constructing new ones andmapping these into the sorts of file structures repre-sented in Figure 2.
This is true whether or not thecorpus is represented in XML but is sometimes hid-den away as something which only the software de-veloper truly understands.
One need not understandthe relationships among all the tags on a corpus inorder to install a new coding level, but one must atleast be able to hook a new tag set into some partof the existing structure.
Although this may seemonerous for the user, in reality most of the require-ments are the same as they were before; users whowish to do something new have to understand whatit is they are trying to do.
The only additional re-quirement is that instead of developing their own adhoc data representations and mappings between thedata, the screen, and user actions, users need to un-derstand how data is represented in XML and howto write stylesheets expressing these mappings.
Thebenefit of XML and XSL for this activity is that theyare likely to be better-structured and more flexiblethan anything coding designers will come up withfor themselves, especially if they are not experiencedsoftware developers, and that there are many exist-ing tools for support, with more on the way.5 Our  So lu t ion :  P re - ImplementedSchemes  P lus  Deve lopment  Too lsIt is difficult to address all the user types at once,and since so little support currently exists for cod-ing designers, it will be impossible to get the facil-ities for them right the first time.
The fact thatthere are many users who do not necessarily wantto implement their own coding schemes leads us toa staged solution.
The MATE Workbench will bedistributed with coding tools and basic display ca-pabilities for a range of coding schemes at variouslevels of annotation from prosody and morphosyn-tax to dialogue acts and communication problems.These schemes are being chosen (or, in some cases,developed), based on an extensive review \[4\].
In ad-dition to simply being practical and reliable schemesto represent their levels of coding, they are beingchosen to represent as wide a spread of coding typesas possible in order to test the workbench design.Current coding tools have also been reviewed \[2\] inorder to inform us both about good design for toolsfor the chosen schemes and about the range of ca-pabilities needed in the workbench.
These schemesand the tools implemented for them can be used toallow users to develop a sense of the workbench ca-pabilities, and for users who do not wish to imple-ment new coding modules, they may be all that isrequired.
The introduction of new schemes will besupported by tools for authoring XML corpora andstylesheets, and by the use of the existing schemeimplementations a  examples to modify.6 Bas ic  Funct iona l i t iesKeeping in mind our description of the basic usertypes, these are the basic functions which the MATEworkbench will provide.6.1 DisplayGiven a coded corpus, the display function will showon screen a human-readable v rsion of the data.This display will be produced from the data using anXSL stylesheet, although there is no reason for theuser to know that.
Display options will include thesize ~nd placement of windows, text colour, font, andsize, and text layout such as lists and tables.
Thedisplay may include a speech waveform if one is as-sociated with the dialogue, and user actions (such asclicking on an area of text) may be associated withfurther display information.Some users believe that our flexible approach todocument ypesetting means that conceptualisingcomplex relationships within a data set will becomeeasier - that is, that using the workbench will helpto clarify their thinking about what to look for.
Ina sense, it will, because the ability to write special-ist display stylesheets will allow the user to createviews which abstract away to the right sections ofthe data.
However, stylesheets do not enforce thecreation of a usable data display.
In particular, it isjust as possible to overload a display with too muchinformation using this technique as using any other(and perhaps more tempting, because the stylesheetsmake this easier to do).
The basic limitation on con-ceptualising data relationships i human, and not aproduct of coding technologies.6.2 QueryGiven a coded corpus, the query function will allowthe user to construct a query which will match somepart of the data set, and then will either extractthat part (which can then either be exported or sentvia a stylesheet for display) or count the numberof matches, for performing frequency analyses.
TheMATE query language \[6, 7, 3\] contains constructswhich allow the expression of either hierarchical ortemporal relationships among a set of tags.
Thismeans that structural constraints Can be given nat-urally (such as asking for all response moves within?
15dialogues of a particular type, or verbs within rel-ative clauses), but that cross-hierarchy constraintscan also be expressed (such as asking for all disflu-encies which occur during a particular type of into-national phrase).
The MATE workbench includes apoint-and-click query formulation support tool; al-ternatively, queries can be typed at a command line.6.3 CodingCoding tools will allow the user to add an annota-tion corresponding to a particular coding scheme.Coding interfaces will be specified by means ofstylesheets.
Typical coding actions might includeusing the mouse to specify a location, to sweep ar-eas of text, or to bring up a text window or menuby which tagging details can be entered.6.4 Transcr ipt ionThe transcription process hould be highly individ-ualised for a particular corpus depending on howrecordings were obtained and for what purposesthe corpus has been collected.
Getting the pro-cess wrong can add months and great expense toa project.
Good transcription requires software,such as spelling checkers, which would be difficultto provide within a Workbench.
In addition, evenif good transcription tools were supported by' theworkbench, many projects would not be able touse them because they contract out transcriptionwork to secretarial agencies which are only willingto quote for the work based on the model of audio-typing using standard word processing packages.
Asa result, we would expect most users to wish to dotheir transcription elsewhere, using other software,and to transfer their transcripts into the workbenchwhen they are complete.
On the other hand, manyusers experimenting the system will wish to inputsmall amounts of data so that they can test out thecoding schemes and the workbench on new mate-rims.
In the first instance, we intend to provide avery simple transcription facility which will sufficefor this purpose but which one would not wish touse for large-scale transcription, at least not with-out a great deal of thought about the alternatives.6.5 ImportThe more existing corpora the workbench will workwith, the more useful it will be when it is introduced.Unfortunately, current corpora are in a wide rangeof formats, many of which bear little relationshipto XML.
We intend to supply two conversion toolswith the workbench which will handle conversionfrom BAS-Partitur and Entropic xwaves xlabel filesinto XML.
Corpora produced to EAGLES recom-mendations \[1\] require minimal conversions.
Usersof other formats must support heir own conversionprocesses, the software for which can be installed inlocal copies of the workbench.6.6 Expor tJust as users of existing corpora may wish to importdata, they may wish to export codings into anotherformat, for instance, so that they can apply exist-ing automatic annotation techniques to it.
As withimportation, possible xport formats are too numer-ous and varied for us to implement converters forthem all.
Users who supply their own converterswill again be able to install them into local copiesof the workbench.
Printing and postscript outputwill be available as a function closely allied to dis-play.
Stylesheets can be used to produce other out-put formats which give specific views of the data;for instance, it is possible to use them to constructHTML or tabular information for input into spread-sheets or statistical software.
We are still consider-ing how best to export information for visualisationof complete data sets, as required for data miningtechniques.7 Too ls  fo r  Deve lopersTher~ are two basic functions which will be re-quired for corpus and coding scheme developers:adding a new coding level, and creating or editing astylesheet.
For adding a new coding module, we in-tend to support good practice by creating a templatefor storing information about each type of codingwhich leaves space for describing working practice,who coded each file, exactly what form of the codingmanual was used, and so on.
We are still consideringwhat sorts of tools will best facilitate the DTD edit-ing and stylesheet creation essential for new codingschemes, but here the workbench may itself be of ser-vice.
XSL is an XML language, and current develop-ments in XML suggest hat DTDs will soon be writ-ten in XML itself using "XML schemata" \[13, 14\],so that DTD and stylesheet editors could be writ-ten quickly using the workbench.
Editors written inthis way could abstract away from the syntactic de-tails which users find so difficult to deal with, leavingthem to concentrate on the structure of the corpusadditions.8 T imesca leObviously, this is an ambitious project, and thetools for developers will take some time to settle,not least because they require developments o theunderlying markup languages.
The workbench isscheduled to be released in December 1999.
By thistime we would expect o provide reasonable supportfor using the coding schemes which we have imple-mented.
Note that this still leaves coding schemeand tool developers in a better situation than theyhave been previously, since, given th e willingness tolearn XML and XSL, software developers will al-ready be able to use the workbench to implement16new coding schemes, coding tools, and display func-tions.
This process should be faster than startingfrom scratch, especially with the examples imple-mented in the workbench.9 AcknowledgementsThis work was funded by the European Unionas part of the MATE project (Telematics LE4-8370).
We are grateful to project participants atour partner sites (NIS, Odense; CSELT, Turin; DFE,Barcelona; DFKI, Saarbriicken; IMS,Stuttgart; ILC, Pisa; and TID, Madrid) and to theMATE Advisory Panel for informing our thinkingon these issues.Re ferencesThe EAGLES Consortium.
EAGLES.http://www.ilc.pi.cnr.it/EAGLES/home.html.Amy Isard et al MATE Deliverable 3.1.ht tp: //mate.nis.sdu.dk/about/deliverables.ht ml.Andreas Mengel et al MATE Query Lan-guage, http://www.ims.unl-stuttgart.de/ men-gel/.MATE/Specs/quer.html.Marion Klein et al MATE Deliverable 1.1.http://mate.nis.sdu.dk/about/deliverables.html.Giovanni Flammia.
The Nb annotation tool.ht tp://www.sls.lcs.mit .edu/flammia/Nb.html.Andreas Mengel and Uli Heid.
Query language for ac-cess to speech corpora.
In Forum Acustieum, March1999.
(ASA,EAA,DEGA).Andreas Mengel and Uli Held.
A query language forresearch in phonetics.
In ICPhS 99 (InternationalCongress of Phonetic Sciences), August 1999.University of Rochester.
The DAT system.ht tp://www.cs.rochester.edu/research/trains/annotation/.The MATE Project.
Mate webpages.http://mate.mip.ou.dk/.Henry Thompson and David McKelvie.
Hyperlink se-mantics for standoff markup of read-only documents.In SGML Europe'97, May 1997'.The W3C.
Extensible Markup Language.http://www.w3.org/TR/REC-xml.The W3C.
Extensible Stylesheet Language.http://www.w3.org/TR/WD-xsl.The W3C.
Schema for object-orlented XML.http://www.w3.org/TR/NOTF_,-SOX.The W3C.
XML Schema requirements.ht tp://www.w3.org/TR/NOTF-r xml-schema-req.17
