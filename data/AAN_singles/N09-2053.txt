Proceedings of NAACL HLT 2009: Short Papers, pages 209?212,Boulder, Colorado, June 2009. c?2009 Association for Computational LinguisticsLanguage Specific Issue and Feature Exploration inChinese Event ExtractionZheng Chen Heng JiDepartment of Computer ScienceThe Graduate Center Queens College and The Graduate CenterThe City University of New York365 Fifth Avenue, New York, NY 10016, USAzchen1@gc.cuny.edu hengji@cs.qc.cuny.eduAbstractIn this paper, we present a Chinese event ex-traction system.
We point out a language spe-cific issue in Chinese trigger labeling, andthen commit to discussing the contributions oflexical, syntactic and semantic features ap-plied in trigger labeling and argument labeling.As a result, we achieved competitive perform-ance, specifically, F-measure of 59.9 in triggerlabeling and F-measure of 43.8 in argumentlabeling.1 IntroductionIn this paper we address the event extraction taskdefined in Automatic Content Extraction (ACE)1program.
The ACE program defines the followingterminology for event extraction task:z Trigger: the word that most clearly expressesan event?s occurrencez Argument:  an entity, or a temporal expressionor a value that plays a certain role in the eventinstancez Event mention: a phrase or sentence with adistinguished trigger and participant argu-mentsSome English event extraction systems based onsupervised learning have been reported by re-searchers (Ahn, 2006; Ji and Grishman, 2008).
Inthis paper we developed a modularized Chineseevent extraction system.
We nicely handled thelanguage specific issue in trigger labeling and ex-plored effective lexical, syntactic and semanticfeatures that were applied in trigger labeling andargument labeling.
Tan et al (2008) addressed the1 http://www.nist.gov/speech/tests/ace/same task as we did in this paper.
However, to ourknowledge, the language specific issue and featurecontributions for Chinese event extraction have notbeen reported by earlier researchers.The remainder of the paper is organized as fol-lows.
Section 2 points out a language specific issuein Chinese trigger labeling and discusses twostrategies of trigger labeling: word-based and char-acter-based.
Section 3 presents argument labeling.Section 4 discusses the experimental results.
Sec-tion 5 concludes the paper.2 Trigger LabelingWe split trigger labeling into two steps: 1) triggeridentification: to recognize the event trigger 2)trigger classification: to assign an event type forthe trigger.
The two strategies we will discuss intrigger labeling (word-based and character-based)only differ in the first step.2.1 A Language-Specific IssueChinese, and some other languages, e.g., Japanesedo not have delimiters between words.
Thus, seg-mentation is usually an indispensible step for fur-ther processing, e.g., Part-of-Speech tagging,parsing, etc.
However, the segmentation may causea problem in some tasks, e.g., name entity recogni-tion (Jing et al, 2003) and event trigger identifica-tion.
For a specific example, ????
(shoot and kill)is segmented as a Chinese word.
However, thereare two triggers in the word, one is ???
(shoot)with the event type of Attack, and the other is???
(kill) with the event type of Die.
The triggermay also cross two or more words, e.g., the triggeris ????
?
(public letter) which crosses twowords, ????
(public) and ???
(letter).In the ACE Chinese corpus, 2902 triggers ex-actly one-to-one match their corresponding words,209meanwhile, 431 triggers are inconsistent with thewords (either within the word, or across words).The inconsistency rate is as high as 13%.We then discuss two strategies of trigger label-ing, one is word-based in which we use a globalerrata table to alleviate the inconsistency problem,and the other is character-based which solves theinconsistency problem.2.2 Word-based Trigger LabelingWe apply Maximum-Entropy based classifiers fortrigger identification and trigger classification.The two classifiers share the same set of features:z Lexical features: word, POS of the word, pre-vious word + word, word + next word, previousPOS + POS, and POS + next POS.z Syntactic features: 1) depth: the depth of thetrigger in the parse tree 2) path to root: the pathfrom the leaf node of the trigger to the root in theparse tree 3) sub-categorization : the phrase struc-ture expanded by the father of the trigger 4)phrase type: the phrase type of the triggerz Semantic dictionaries: 1) predicate existence:a boolean value indicating the existence of triggerin a predicate list which is produced from Chi-nese Propbank (Xue and Palmer, 2008) 2) syno-nym entry: the entry number of the trigger in aChinese synonym dictionaryz Nearest entity information: 1) the entity typeof the syntactically nearest entity to the trigger inthe parse tree 2) the entity type of the physicallynearest entity to the trigger in the sentenceTo deal with the language-specific issue in trig-ger identification, we construct a global errata tableto record the inconsistencies existing in the train-ing set.
In the test procedure, if the scanned wordhas an entry in the errata table, we select the possi-ble triggers in the entry as candidate triggers.2.3 Character-based Trigger LabelingAlthough the error table significantly helps to re-duce segmentation inconsistencies, it is not a per-fect solution since it only recognizes theinconsistencies existing in the training data.To take a further step we build a separate char-acter-based trigger identification classifier forcomparison.
We use a MEMM (Maximum En-tropy Markov Model) to label each character witha tag indicating whether it is out of the trigger (O),or is the beginning of the trigger (B) or is a part ofthe trigger except the beginning (I).
Our MEMMclassifier performs sequential classification by as-signing each character one of the three tags.
Wethen apply Viterbi algorithm to decode the tag se-quence and identify the triggers in the sequence.Features used in our MEMM classifier include:the character, previous character, next character,previous tag and word-based features that the char-acter carries.
We apply the same set of features fortrigger classification as used in word-based triggerlabeling.3 Argument LabelingWe also split argument labeling into two steps: 1)argument identification: to recognize an entity or atemporal expression or a value as an argument 2)role classification: to assign a role to the argument.We apply Maximum-Entropy based classifiers forthe two steps and they share the same set of fea-tures:z Basic features: trigger, event subtype of theevent mention, type of the ACE entity mention,head word of the entity mention, combined valueof event subtype and head word, combined valueof event subtype and entity subtype.z Neighbor words: 1) left neighbor word of theentity, temporal expression, or value 2) rightneighbor word of the entity, temporal expression,or valuez Syntactic features: 1) sub-categorization: thephrase structure expanding the parent of the trig-ger 2) position: the relative position of the entityregarding to the trigger (before or after) 3) path:the minimal path from the entity to the trigger 4)distance: the shortest length from the entity to thetrigger in the parse tree4 Experimental Results4.1 Data and Scoring MetricWe used 2005 ACE training corpus for our ex-periments.
The corpus contains 633 Chinese docu-ments.
In this paper we follow the setting of ACEdiagnostic tasks and use the ground truth entities,times and values for our training and testing.We randomly selected 558 documents as train-ing set and 66 documents as test set.
For the train-ing set, we reserved 33 documents as developmentset.We define the following standards to determinethe correctness of an event mention:210z A trigger is correctly labeled if its event typeand offsets exactly match a reference trigger.z An argument is correctly labeled if its eventtype, offsets, and role match the reference argu-ment mention.4.2 Overall System PerformanceTable 1 shows the overall Precision (P), Recall (R)and F-Measure (F) scores of our baseline system(word-based system with only lexical features intrigger labeling and basic features in argument la-beling), word-based system with full integratedfeatures and character-based system with full inte-grated features.Comparing to the Chinese event extraction sys-tem reported by (Tan et al, 2008), our scores aremuch lower.
However, we argue that we applymuch more strict evaluation metrics.4.3 Comparison between Word-based andCharacter-based Trigger LabelingTable 1 lists the comparison results between char-acter-based and word-based trigger labeling.
It in-dicates that the character-based methodoutperforms the word-based method, mostly due tothe better performance in the step of trigger identi-fication (3.3% improvement in F-Measure) withprecision as high as 82.4% (14.3% improvement),and a little loss in recall (2.1%).4.4 Feature Contributions for Trigger Label-ingTable 2 presents the feature contributions forword-based trigger labeling, and we observe simi-lar feature contributions for character-based sinceit only differs from word-based in trigger identifi-cation and works similarly in trigger classification(we omit the results here).
Table 2 shows thatmaintaining an errata table is an effective strategyfor word-based trigger identification and diction-ary resources improve the performance.It is worth noting that the performance dropswhen integrating the syntactic features.
Our expla-nation might be that the trigger, unlike the predi-cate in the semantic role labeling task, can not onlybe a verb, but also can be a noun or other types.Thus the syntactic position for the trigger in theparse tree is much more flexible than the predicatein Semantic Role Labeling.
For this reason, syntac-tic features are not so discriminative in trigger la-beling.
Furthermore, the syntactic features cannotdiscriminate the word senses of a candidate trigger.In the following example,S1:???
??
??
??
??
??
??
?
?
?The players are entering the stadium to prepare forthe coming game.S2:??
???
?
??
??
??
?
??
?Many farm products have been rotted before enteringthe market.The word ????
(entering) indicates a ?Trans-port?
event in sentence 1 but not in sentence 2.
Thephrase structures around the word ????
in bothsentences are exactly the same (VP?VP-NP).However, if an entity of ?PERSON?
appears aheadof ???
?, the word ????
is much more likely tobe a trigger.
Hence the features of nearby entityinformation could be effective.4.5 Feature Contributions for Argument La-belingTable 3 shows feature contributions for argumentlabeling after word-based trigger labeling and wealso observe the same feature contributions for ar-gument labeling after character-based trigger label-ing (results are omitted).
It shows that the twoneighbor word features are fairly effective.
Weobserve that in some patterns of event description,the left word is informative to tell the followedentity mention is an argument.
For example, ??[Entity]???
(killed by [Entity]) is a common pat-tern to describe an attack event, and the leftneighbor word of the entity ???
(by) can stronglyimply that the entity is an argument with a role of?Attacker?.
Meanwhile, the right word can helpreduce the spurious arguments.
For example, in theChinese ???
(of) structure, the word ???
(of)strongly suggests that the entity on the left side of???
is not an argument.The sub-categorization feature contributes littlesince it is a feature shared by all the arguments inthe parse tree.
Table 3 also shows that Path andDistance are two effective features.
It is obviousthat in the parse tree, each argument attached to thetrigger is in a certain syntactic configuration.
Forexample, the path ?NP VP VV?
?
?
implies that itmight be a Subject-Verb structure and thus the en-tity in NP is highly likely to be an argument of thetrigger (VV).
The Position feature is helpful to dis-criminate argument roles in syntactically identicalstructure, e.g., ?Subject Verb Object?
structure.211Trigger Identification Trigger Labeling ArgumentIdentificationArgument Labeling PerformanceSystem P R F P R F P R F P R FBaseline 61.0 50.0 54.9 58.7 48.2 52.9 49.5 38.2 43.1 44.6 34.4 38.9Word-based  68.1 52.7 59.4 65.7 50.9 57.4 56.1 38.2 45.4 53.1 36.2 43.1Character-based  82.4 50.6 62.7 78.8 48.3 59.9 64.4 36.4 46.5 60.6 34.3 43.8Table 1.
Overall system performance (%)Trigger Identification Trigger LabelingP R F P R FLexical features : (1) 61.0 50.0 54.9 58.7 48.2 52.9(1) + Errata table: (2) 64.0 52.0 57.4 61.3 49.8 54.9(2) + Dictionaries: (3) 64.9 53.5 58.6 62.7 51.6 56.6(3)+ Syntactic features: (4) 64.3 51.8 57.4 60.6 48.9 54.1(3) + Entity information: (5) 68.1 52.7 59.4 65.7 50.9 57.4Table 2.
Feature contributions for word-based trigger labeling (%)Argument Identification Argument LabelingP R F P R FBasic feature set: (1) 40.5 32.8 36.2 37.7 30.5 33.7(1)+Left word: (2) 45.2 35.4 39.7 41.6 32.5 36.5(1)+Right word: (3) 47.7 35.6 40.8 44.1 32.9 37.7Feature set 2: (2)+(3) 49.0 35.7 41.3 46.1 33.6 38.9(1)+Sub-categorization: (4) 41.9 33.1 37.0 38.7 30.5 34.1(1)+Path: (5) 46.6 36.2 40.7 43.4 33.7 38.0(1)+Distance: (6) 49.5 37.0 42.3 45.0 33.6 38.5(1)+Position:(7) 43.8 35.3 39.1 41.0 33.1 36.6Feature set 3 (from 4 to 7) 56.2 36.1 43.9 51.2 32.9 40.0Total 56.1 38.2 45.4 53.1 36.2 43.1Table 3.
Feature contributions for argument labeling after word-based trigger labeling (%)5 Conclusions and Future WorkIn this paper, we took a close look at language spe-cific issue in Chinese event extraction and ex-plored effective features for Chinese eventextraction task.
All our work contributes to settingup a high performance Chinese event extractionsystem.For future work, we intend to explore an ap-proach to conducting cross-lingual event extractionand investigate whether the cross-lingual inferencecan bootstrap either side when running two lan-guage event extraction systems in parallel.AcknowledgmentsThis material is based upon work supported by theDefense Advanced Research Projects Agency un-der Contract No.
HR0011-06-C-0023 via 27-001022, and the CUNY Research EnhancementProgram and GRTI Program.ReferencesD.
Ahn.
2006.
The stages of event extraction.
Proc.COLING/ACL 2006 Workshop on Annotating andReasoning about Time and Events.
Sydney, Austra-lia.H.
Ji and R. Grishman.
2008.
Refining Event ExtractionThrough Cross-document Inference.
Proc.
ACL2008.
Ohio, USA.H.
Jing, R. Florian, X. Luo, T. Zhang, and A. Ittyche-riah.
2003.
HowtogetaChineseName(Entity): Seg-mentation and combination issues.
Proc.
EMNLP2003.H.
Tan; T. Zhao; J. Zheng.
2008.
Identification of Chi-nese Event and Their Argument Roles.
Proc.
of the2008 IEEE 8th International Conference on Com-puter and Information Technology Workshops.N.
Xue and M. Palmer.
2008.
Adding Semantic Role tothe Chinese Treebank.
Natural Language Engineer-ing.
Combridge University Press.212
