Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 113?116,Prague, June 2007. c?2007 Association for Computational LinguisticsCLR: Integration of FrameNet in a Text Representation SystemKen.
LitkowskiCL Research9208 Gue RoadDamascus, MD 20872ken@clres.comAbstractIn SemEval-2007, CL Research participated inthe task for Frame Semantic StructureExtraction.
Participation in this task was used asthe vehicle for efforts to integrate and exploitFrameNet in a comprehensive text processingsystem.
In particular, this involved steps to builda FrameNet dictionary with CL Research?sDIMAP dictionary software and to use thisdictionary (along with its semantic networkprocessing capabilities) in processing text intoXML representations.
Implementation of theentire integrated package is only in its initialstages and was used to make only a baresubmission of frame identification.
On this task,over all texts, a recall of 0.372, a precision of0.553, and an F-score of 0.445 were achieved.Considering only targets included in the DIMAPFrameNet dictionary, the overall F-score is0.605.
These results, competitive with the topscoring system, support continued attempts at adictionary-based approach to frame structureextraction.1 IntroductionCL Research participated in the SemEval-2007 taskfor Frame Semantic Structure Extraction.
Inparticipating in this task, we integrated the use ofFrameNet in the Text Parser component of the CLResearch Knowledge Management System (KMS).
Inparticular, we created a FrameNet dictionary fromthe FrameNet databases with the CL ResearchDIMAP dictionary software and used this dictionaryas a lexical resource.
This new lexical resource wasintegrated in the same manner as other lexicalresources (including WordNet and the OxfordDictionary of English (ODE, 2004)).
As such, theFrameNet dictionary was available as the basis forsense disambiguation.
In the CL Research TextParser, this integration was seamless, in whichdisambiguation can be performed against severallexical resources.
This work attempts to expand onsemantic role labeling experiments in Senseval-3(Litkowski, 2004a, and Litkowski, 2004b).In the following sections, we first describe theoverall structure of the CL Research KnowledgeManagement System and Text Parser, describingtheir general parsing and text analysis routines.
Next,we describe the creation of the FrameNet dictionary,particularly identifying design considerations toexploit the richness of the FrameNet data.
In section4, we describe our submission for the SemEval task.In section 5, we describe our results.
Finally, weidentify next steps that can be taken within the CLResearch KMS and DIMAP environments to extendthe FrameNet data.2 CL Research Text ProcessingThe CL Research Knowledge Management System(KMS) is an integrated environment for performingseveral higher level applications, particularlyquestion answering and summarization.
Theunderlying architecture of KMS relies on an XMLrepresentation of texts that captures discoursestructure and discourse elements, particularly nounphrases, verbs, and semantic roles (predominantly asreified in prepositions).
The texts that are representedinclude primarily full texts as they may appear inseveral forms, but also include questions, topicspecifications for which summaries are desired, andkeyword search expressions.Text processing is an integrated component ofKMS, but for large-scale processing, a separatesystem, the CL Research Text Parser is frequentlyused.
The same modules are used for both, withdifferent interfaces.
Text processing is performed intwo stages: (1) syntactic parsing, generating a parse113tree as output; and (2) discourse analysis, analyzingthe parse tree and building sets of data used to recordinformation about discourse segments (i.e., clauses),discourse entities (primarily noun phrases, but alsoincluding predicate adjective and adverb phrases),verbs, and semantic relations (prepositions).
After thedata structures are completed for an entire text duringthe discourse analysis phase, they are used to createa nested XML representation showing all theelements and providing attributes of each component.The parser is grammar-based and produces aconstituent structure, with non-terminals representingsyntactic components and leaves corresponding to thewords of the sentence.
The parser generates somedependency relationships by using dynamic grammarrules added during parsing, particularly through setsof subcategorization patterns associated with verbs(and some other words in the dictionary).
This allowsthe identification of such things as sentence subjects,preposition phrase attachments, and clauseattachments.
Syntactic ambiguity is handled bycarrying forward a variable number of possibleparses (usually 40, but user adjustable for anynumber), eliminating parses that are less well-formed.The discourse analysis phase includes ananaphora resolution component and detailed semanticanalyses of each sentence element.
Many dependencyrelationships are identified during this phase.
Thesemantic analysis includes a disambiguationcomponent for all words (using one or more of theintegrated dictionaries).
The semantic analysis alsoidentifies (for later use in the XML representation)relations between various sentence elements,particularly identifying the complement andattachment point for prepositions.1To make use of the FrameNet data, it is firstnecessary to put it into a form that can be usedeffectively.
For this purpose, a DIMAP dictionary isused.
Such dictionaries are accessible using btreelookup, so rapid access is ensured during large-scaletext processing.
Syntactic parsing proceeds at abouteight or nine hundred sentences per minute; thediscourse analysis phase is roughly the samecomplexity.
The result is that sentences are normallyprocessed at 300 to 500 sentences per minute.3 A FrameNet DictionaryThe integration of FrameNet into KMS and TextParser is generally handled in the same way thatother dictionaries are used.
Specifically, there is acall to a disambiguation component to identify theapplicable sense.
After this, FrameNet data are usedin a slightly different way.
Disambiguation proceedssequentially through the words in a sentence, but thelabeling of components with frame elements isperformed only after a sentence has been fullydiscourse-analyzed.
This is necessary because thelocation of frame elements requires full knowledge ofall components in a sentence, not just those whichprecede a given target (i.e., in left-to-right parsingand discourse analysis).The main issue is the design of a FrameNetdictionary; DIMAP provides sufficient capability tocapture all aspects of the FrameNet data(Ruppenhofer, et al, 2006) in various types of built-in data structures.
First, it is necessary to captureeach lexical unit and to create a distinct sense foreach frame in which a lexeme is used.
The currentFrameNet DIMAP dictionary contains 7575 entries,with many entries having multiple senses.2For eachsense, the FrameNet part of speech, the definition, theframe name, the ID number, and the definition source(identified as FN or COD, the Concise OxfordDictionary) are captured from the FrameNet files.3If there is an associated FrameNet lexical entryfile that contains frame element realizations, thisinformation is also captured in the appropriate sense.In DIMAP, this is done in an attribute-value featurestructure.
Each non-empty feature element realizationin the FrameNet data is captured.
A DIMAP featureattribute is constructed as a conflation of the phrasetype and the grammatical function, e.g.
?NP (Dep)?.The feature value is a conflation of the valence unit1At present, the analysis of the complement andattachment points examines only the highest rankedattachment point, rather than examining otherpossibilities (which are frequently identified inparsing).2We unwittingly used an August 2006 version ofFrameNet, not the latest version that incorporatedframes developed in connection with full-textannotation.
This affects our results, as described below.3The FrameNet dictionary data is captured usingFrameNet Explorer, a Windows interface for exploringFrameNet frames, available for free download at CLResearch (http://www.clres.com).114frame element name and the number of annotations inthe FrameNet corpus, e.g., ?Cognizer (28)?.
Thismanner of capturing FrameNet information is done tofacilitate processing; the DIMAP feature structure isfrequently used to access information about lexicalitems.
Further experience will assess the utility of thisformat.Frames and frame elements are captured in thesame dictionary.
However, they are not treated aslexical units, but rather as ?meta-entries?.
In theDIMAP dictionary, frame names are entered asdictionary entries beginning with the symbol ?#?
andframe elements are entered beginning with the symbol?@?.
In these entries, different data structures of aDIMAP entry are used to capture the different kindsof relations between frames and frame elements (i.e.,the frame-to-frame relations) that are found in theFrameNet data.
Thus, a frame will have a ?frame-element?
link to each of its frame elements.
It willalso have attribute-value features listing its frameelements and their type (core, peripheral, or extra-thematic).With a dictionary structured as described, it ispossible not only to look up a lexical unit, but also totraverse the various links that are reachable from agiven entry.
Specifically, when a lexical unit isrecognized in processing the text, the first step is toretrieve the entry for that item and to use the frameelement realization patterns to disambiguate amongthe senses (if more than one of the same part ofspeech).
After a sentence has been completelyprocessed (as described above), the meta-entriesassociated with each lexical unit can be examined(and appropriate traversals to other meta-entries canbe followed) in order to identify which sentenceconstituents fill the frame elements.Specific routines for traversing the variousFrameNet links have not yet been developed.However, this is primarily a matter of assessingwhich traversals would be useful.
Similar traversalsare used with other lexical resources, such asWordNet, where, for example, inheritance hierarchiesand other WordNet relation links are routinelytraversed.4 The SemEval FrameNet SubmissionTo participate in the SemEval FrameNet task, thethree test texts were wrapped into a standard XMLrepresentation used in processing texts.
This wrapperconsists only of an overall <DOCS> tag, a subtag<DOC> for each document, and a <TEXT> tagsurrounding the actual text.
The text was includedwith some minor changes.
Since Text Parser includesa sentence splitter, we had to make sure that the textswould split into the identifiable sentences as given oneach line of the texts.
Thus, for headers in the text,we added a period at the end.
Once we were sure thatthe same number of sentences would be recognized,we processed the texts using Text Parser, asdescribed in section 2.4As mentioned above, the FrameNet dictionarylookup occurred in a separate traversal of the parsetree after the discourse analysis phase.
During thistraversal, the base form of each noun, verb, adjective,or adverb content word was looked up in theFrameNet dictionary.
If there was no entry for theword, no further FrameNet processing wasperformed.
When an entry was found, each sense ofthe appropriate part of speech is examined in order todisambiguate among multiple senses.
A score iscomputed for each sense and the score with thehighest sense was selected.5Having identified a sense in the FrameNetdictionary, this was interpreted as finding aFrameNet target, with the FrameNet frame asidentified in the lexical entry.
Since the characterpositions of each word in the source sentence areincluded in the parse tree information, thisinformation was captured for inclusion in the output.
(Further implementation to identify the frameelements associated with the target has not beencompleted at this time.
As a result, our submissionwas only a partial completion of the FrameNet task.
)After completing the processing of each sentence,4To make a submission for the FrameNet task, it wasnecessary to initialize an XML object into which theresults could be inserted after processing eachsentence.
This is not a usual component of Text Parser,but was implemented solely for the purpose ofparticipating in this task.5At this time, all senses receive an identical score.
Thefirst sense is selected.
Senses are unsystematicallyordered as they were encountered in creating theFrameNet dictionary.
This will be extended to computea score based on the various frame element realizationpatterns associated with each sense.115all FrameNet frame information that had beenidentified was processed for inclusion in the XMLsubmission for this task.
In particular, the annotationsets required were incorporated into the XML objectthat had been initialized.
(Our annotation setsincluded only the ?Target?
layer.)
After all sentenceshad been completed, the XML object was printed toa file for submission.5 ResultsOur results are shown in Table 1, giving the recall,precision, and F-score for each text and over alltexts.
As indicated, these results are for only thetarget identification subtask.6Table 1.
Target Identification ScoresText Recall Precision F-ScoreDublin 0.33403 0.53572 0.41237China 0.51148 0.52525 0.51827Iran 0.44828 0.66102 0.53425All 0.37240 0.55337 0.44520As indicated above, we used an early version ofthe FrameNet databases that did not include all thelexical units in the training and test texts.
As a result,we did not have FrameNet entries for 30 percent ofthe words identified as targets in the test texts.
Table2 shows an estimate of the adjusted scores that wouldresult if those lexical items were included..Table 2.
Adjusted Target Identification ScoresText Recall Precision F-ScoreDublin 0.53445 0.65140 0.58716China 0.57037 0.62097 0.59459Iran 0.61494 0.72789 0.66667All 0.56144 0.65132 0.60305The results in Table 1 rank third of the fourteams participating in this subtask.
With the resultsin Table 2, our performance would improve to firstfor two of the texts and just below the top team forthe other text.6 Future StepsParticipation in the FrameNet frame structureextraction task has demonstrated the basic viabilityof our approach.
Many of the frames have beenrecognized successfully.
We have not yet examinedthe extent to which the disambiguation among framesis significant, particularly since there are not manyentries that have several senses.
We have yet todevelop specific techniques for making use of theframe element realization patterns.
However, webelieve that a reasonable performance can beexpected since KMS and Text Parser produce outputthat breaks sentences down into the types ofcomponents that should be included as frameelements.The architecture of KMS, Text Parser, andDIMAP provide significant opportunities forextending our performance.
In particular, since thesesystems include the Oxford Dictionary of English, asuperset of the Concise Oxford Dictionary, there isan opportunity for extending the FrameNet datasets.The COD definitions in FrameNet can be mapped tothose in ODE and can be exploited to extendFrameNet frames to lexical items not yet covered inFrameNet.ReferencesKenneth C. Litkowski.
2004a.
Senseval-3 Task:Automatic Labeling of Semantic Roles.
In Senseval-3: Third International Workshop on the Evaluationof Systems for the Semantic Analysis of Text.Association for Computational Linguistics.
9-12.Kenneth C. Litkowski.
2004b.
Explorations inDisambiguation Using XML Text Representation.
InSenseval-3: Third International Workshop on theEvaluation of Systems for the Semantic Analysis ofText.
Association for Computational Linguistics.141-146.The Oxford Dictionary of English.
2003.
(A. Stevensionand C. Soanes, Eds.).
Oxford: Clarendon Press.Josef Ruppenhofer, Michael Ellsworth, Miriam Petruck,Christopher Johnson, and Jan Scheffxzyk.
2006.FrameNet II: Extended Theory and Practice.International Computer Science Institute, Universityof California at Berkeley.6Corresponding to the ?-e -n -t?
options of the scoringprogram.
In these tables, ?Dublin?
refers toIntroOfDublin, ?China?
to ChinaOverview, and?Iran?
to workAdvances.116
