Proceedings of HLT/EMNLP 2005 Demonstration Abstracts, pages 6?7,Vancouver, October 2005.Demonstrating an Interactive Semantic Role Labeling SystemVasin Punyakanok Dan Roth Mark SammonsDepartment of Computer ScienceUniversity of Illinois at Urbana-ChampaignUrbana, IL 61801, USA{punyakan,danr,mssammon}@uiuc.eduWen-tau YihMicrosoft ResearchRedmond, WA 98052, USAscottyih@microsoft.comAbstractSemantic Role Labeling (SRL) is the taskof performing a shallow semantic analy-sis of text (i.e., Who did What to Whom,When, Where, How).
This is a cru-cial step toward deeper understanding oftext and has many immediate applications.Preprocessed information on text, mostlysyntactic, has been shown to be impor-tant for SRL.
Current research focuses onimproving the performance assuming thatthis lower level information is given with-out any attention to the overall efficiencyof the final system, although minimizingexecution time is a necessity in order tosupport real world applications.
The goalof our demonstration is to present an inter-active SRL system that can be used bothas a research and an educational tool.
Itsarchitecture is based on the state-of-the-art system (the top system in the 2005CoNLL shared task), modified to processraw text through the addition of lowerlevel processors, while achieving effectivereal time performance.1 IntroductionSemantic parsing of sentences is believed to be animportant subtask toward natural language under-standing, and has immediate applications in taskssuch information extraction and question answering.We study semantic role labeling (SRL), defined asfollows: for each verb in a sentence, the goal is toidentify all constituents that fill a semantic role, andto determine their roles (such as Agent, Patient or In-strument) and their adjuncts (such as Locative, Tem-poral or Manner).
The PropBank project (Kingsburyand Palmer, 2002), which provides a large human-annotated corpus of semantic verb-argument rela-tions, has opened doors for researchers to apply ma-chine learning techniques to this task.The focus of the research has been on improvingthe performance of the SRL system by using, in ad-dition to raw text, various syntactic and semantic in-formation, e.g.
Part of Speech (POS) tags, chunks,clauses, syntactic parse tree, and named entities,which is found crucial to the SRL system (Pun-yakanok et al, 2005).In order to support a real world application suchas an interactive question-answering system, theability of an SRL system to analyze text in real timeis a necessity.
However, in previous research, theoverall efficiency of the SRL system has not beenconsidered.
At best, the efficiency of an SRL sys-tem may be reported in an experiment assuming thatall the necessary information has already been pro-vided, which is not realistic.
A real world scenariorequires the SRL system to perform all necessarypreprocessing steps in real time.
The overall effi-ciency of SRL systems that include the preproces-sors is not known.Our demonstration aims to address this issue.
Wepresent an interactive system that performs the SRLtask from raw text in real time.
Its architecture isbased on the top system in the 2005 CoNLL sharedtask (Koomen et al, 2005), modified to process rawtext using lower level processors but maintaining6good real time performance.2 The SRL System ArchitectureOur system begins preprocessing raw text byusing sentence segmentation tools (available athttp://l2r.cs.uiuc.edu/?cogcomp/tools.php).
Next,sentences are analyzed by a state-of-the-art syntac-tic parser (Charniak, 2000) the output of which pro-vides useful information for the main SRL module.The main SRL module consists of four stages:pruning, argument identification, argument classifi-cation, and inference.
The following is the overviewof these four stages.
Details of them can be foundin (Koomen et al, 2005).Pruning The goal of pruning is to filter out un-likely argument candidates using simple heuristicrules.
Only the constituents in the parse tree areconsidered as argument candidates.
In addition, oursystem exploits a heuristic modified from that intro-duced by (Xue and Palmer, 2004) to filter out veryunlikely constituents.Argument Identification The argument identifi-cation stage uses binary classification to identifywhether a candidate is an argument or not.
We trainand apply the binary classifiers on the constituentssupplied by the pruning stage.Argument Classification This stage assigns thefinal argument labels to the argument candidatessupplied from the previous stage.
A multi-class clas-sifier is trained to classify the types of the argumentssupplied by the argument identification stage.Inference The purpose of this stage is to incor-porate some prior linguistic and structural knowl-edge, such as ?arguments do not overlap?
and ?eachverb takes at most one argument of each type.?
Thisknowledge is used to resolve any inconsistencies inargument classification in order to generate legiti-mate final predictions.
The process is formulated asan integer linear programming problem that takes asinput confidence values for each argument type sup-plied by the argument classifier for each constituent,and outputs the optimal solution subject to the con-straints that encode the domain knowledge.The system in this demonstration, however, dif-fers from its original version in several aspects.First, all syntactic information is extracted from theoutput of the full parser, where the original versionused different information obtained from differentprocessors.
Second, the named-entity information isdiscarded.
Finally, no combination of different parsetree outputs is performed.
These alterations aim toenhance the efficiency of the system while maintain-ing strong performance.Currently the system runs at the average speed of1.25 seconds/predicate.
Its performance is 77.88 and65.87 F1-score on WSJ and Brown test sets (Car-reras and Ma`rquez, 2005) while the original systemachieves 77.11 and 65.6 on the same test sets with-out the combination of multiple parser outputs and79.44 and 67.75 with the combination.3 Goal of DemonstrationThe goal of the demonstration is to present the sys-tem?s ability to perform the SRL task on raw text inreal time.
An interactive interface allows users to in-put free form text and to receive the SRL analysisfrom our system.
This demonstration can be foundat http://l2r.cs.uiuc.edu/?cogcomp/srl-demo.php.AcknowledgmentsWe are grateful to Dash Optimization for the freeacademic use of Xpress-MP.
This research is sup-ported by ARDA?s AQUAINT Program, DOI?s Re-flex program, and an ONR MURI Award.ReferencesX.
Carreras and L. Ma`rquez.
2005.
Introduction to theconll-2005 shared tasks: Semantic role labeling.
InProc.
of CoNLL-2005.E.
Charniak.
2000.
A maximum-entropy-inspired parser.In Proc.
of NAACL 2000.P.
Kingsbury and M. Palmer.
2002.
From Treebank toPropBank.
In Proc.
of LREC-2002, Spain.P.
Koomen, V. Punyakanok, D. Roth, and W. Yih.
2005.Generalized Inference with Multiple Semantic RoleLabeling Systems.
In Proceedings of CoNLL-2005.V.
Punyakanok, D. Roth, and W. Yih.
2005.
The neces-sity of syntactic parsing for semantic role labeling.
InProc.
of IJCAI-2005.N.
Xue and M. Palmer.
2004.
Calibrating features forsemantic role labeling.
In Proc.
of the EMNLP-2004.7
