Syntactic Graphs and Constraint SatisfactionJeff MartinDepartment of Linguistics, University of MarylandCollege Park, MD 20742jeffmar@umiacs.umd.eduIn this paper I will consider parsing as a discretecombinatorial problem which consists in constructing alabeled graph that satisfies a set of linguisticconstraints.
I will identify some properties of linguisticconstraints which allow this problem to be solvedefficiently using constraint satisfaction algorithms.
Ithen describe briefly a modular parsing algorithmwhich constructs a syntactic graph using a set ofgenerative operations and applies a filtering algorithmto eliminate inconsistent odes and edges.The model of grammar I will assume is not a monolithicrule system, but instead decomposes grammaticalproblems into multiple constraints, each describing acertain dimension of linguistic knowledge.
Thegrammar is partitioned into operations and constraints.Some of these are given in (1); note that manyconstraints, including linear precedence, are notdiscussed here.
I assume also that the grammarspecifies a lexicon, which is a list of complex categoriesor attribute-value structures (Johnson 1988), along witha set of partial functions which define the possiblecategories of the grammar.
(1) Operations ConstraintsPROJECT-X CASEMARK(X,Y)ADJOIN-X THETAMARK(X,Y)MOVE-X AGREE(X,Y)INDEX-X ANTECEDE(X,Y)This cluster of modules incorporates operations andconstraints from both GB theory (Chomsky 1981) andTAG (Johsi 1985).
PROJECT-X is a category-neutral X-bar grammar consisting of three context-free metaruleswhich yield a small set of unordered elementary trees.ADJOIN-X, which consists of a single adjunctionschema, is a restricted type of tree adjunction whichtakes two trees and adjoins one to a projection of thehead of the other.
The combined schema re given in(2):(2) X2 = { X1, Y2}Xl  = {x0,Y2}Xn = (0 (a lexical category)Xn = {Xn, Yn}specifier axiomcomplement axiomlabeling axiomadjunction axiomMOVE-X constructs chains which link gaps toantecedents, while INDEX-X assigns indices to nodesfrom the set of natural numbers.
In the parsing modelto be discussed below, these make up the four basicoperations of a nondeterministic automaton thatgenerates sets of cantidate structures.
Although thesesets are finite, their size is not bounded above by apolynomial function in the size of the input.
I showed inMartin(1989) that if X-bar and adjunction rules togetherallow four attachment levels, then the number ofpossible (unordered) trees formed by unconstrainedapplication of these rules to a string of n terminals iso(4n).
Also, Fong(1989) has shown that the number ofn z1distinct indexings for n noun phrases is bn= Xm= 1 {m},whose closed form solution is exponential.Unconstrained use of these operations therefore resultsin massive overgeneration, caused by the fact that theyencode only a fragment of the knowledge in a grammar.Unlike operations, the constraints in (1) cruciallydepend on the attributes of lexical items andnonterminal nodes.
Three key properties of theconstraints can be exploited to achieve an efficientfiltering algorithm:(i) they apply in local government configurations(ii) they depend on node attributes whose domain ofvalues is small(iii) they are binaryFor example, agreement holds between a phrase YPand a head Xo if and only if YP governs Xo, and YP andXo share a designated agreement vector, such as\[(zperson, ~number\]; case marking holds between ahead Xo and a phrase YP if and only if Xo governs YP,and Xo and YP share a designated case feature; and soforth.
Lebeaux (1989) argues that only closed classes offeatures can enter into government relations.
Unlikeopen lexical classes uch as (3a), it is feasible to list themembers of closed classes extensionally, for examplethe case features in (3b):(3)a.b.Verb : {eat, sing, cry .... }Case : {Nom, Acc, Dat, Gen}Constraints express the different types of attributedependency which may hold between a governor and agoverned node in a government domain.
Eachconstraint can be represented as a binary predicateP(X,Y) which yields True if and only if a designatedsubset of attributes do not have distinct values in thecategories X and Y.
We may picture such predicates asspecifying a path which must be unifiable in thedirected acyclic graphs representing the categories Xand Y.Before presenting the outline of a parsing algorithmincorporating such constraints, it is necessary tointroduce the notion of boolean constraint satisfaction355problem (BCSP) as defined in Mackworth (1987).
Givena finite set of variables {V1,V 2 ..... Vn} with associateddomains {D1,D2,...,Dn} , constraint relations are statedon certain subsets of the variables; the constraintsdenote subsets of the cartesian product of the domainsof those variables.
The solution set is the largest subsetof the cartesian product D1 x D2 x ... x Dn such thateach n-tuple in that set satisfies all the constraints.Binary CSP's can be represented as a graph byassociating a pair (Vi, Di) with each node.
An edgebetween nodes i and j denotes a binary constraint Pijbetween the corresponding variables, while loops at anode i denote unary constraints Pi which restrict hedomain of the node.
Consistency is defined as follows:(4) Node i is consistent iff Vx\[x~ D i\] ~Pi(x).Arc i,j is consistent iff Vx\[x~ D i\] :=~ 3y\[y~ Dj ,~Pij(x,y)\].A path of length 2 from node i through node m tonode j is consistent iffVxVz\[Pij(x,z)\] ~3y\[yE Dm ^  Pim(x,y)^ Pmj(Y,Z)\].A network is node, arc, and path consistent iff all itsnodes, arcs and paths are consistent.
Path consistencycan be generalized to paths of arbitrary length.The parsing algorithm tries to find a consistent labelingfor a syntactic graph representing the set of all syntacticanalyses of an input string (see Seo & Simmons 1989 fora similar packed representation).
The graph isconstructed from left to fight by the operations Project-X, Adjoin-X, Move-X and Index-X, which generate newnodes and arcs.
In this scheme, overgeneration doesnot result in an abundance of parallel structures, butrather in the presence of superfluous nodes and arcs ina single graph.
Each new node and arc generated isassociated with a set of constraints; these associationsare defined statically by the grammar.
For example,complement arcs are associated with thetamarkingconstraints, specifier arcs are associated withagreement constraints, and indexing arcs areassociated with coreference constraints.
On each cyclethe parser attempts to connect wo consistently labeledsubgraphs G1 and G2, where G1 represents theanalyses of a leftmost portion of the input string, and G2represents the analyses of the rightmost substringunder consideration.
The parse cycle contains threebasic steps:(a) select an operation(b) apply the operation to graphs G1 and G2, yielding G3(c) apply node, arc and path consistency to theextended graph (;3.Step (c) deletes inconsistent values from the domain ata node; also, if a node or arc is inconsistent, it is deleted.Note that nodes in syntactic graphs are labeled bylinguistic categories which may contain many attribute-value pairs.
Thus, a node typically represents not onebut a set of variables whose values are relevant o theconstraint predicates.
The properties of locality andfinite domains mentioned above turn out to be useful inthe filtering step.
Locality guarantees that the algorithmneed only apply in a government domain.
Therefore, itis not necessary to make the entire graph consistentafter each extension, but only the largest subgraphwhich is a government domain and contains the nodesand edges most recently connected.
The fact that thedomains of attributes have a limited range is usefulwhen the value of an attribute is unknown orambiguous.
In such cases, the number of possiblesolutions obtained by choosing an exact value for theattribute is small.In this paper I have sketched the design of a parsingalgorithm which makes direct use of a modular systemof grammatical  principles.
The problem ofovergeneration is solved by performing a limitedamount of local computation after each generationstep.
This approach is quite different from one whichpreprocesses the grammar by folding togethergrammatical rules and constraints off-line.
While thislatter approach can achieve an a priori pruning of thesearch space by eliminating overgeneration e tirely, itmay do so at the cost of an explosion in grammar size.ReferencesChomsky, N. (1981) Lectures on Government andBinding.
Foris, Dordrecht.Fong, S. (1990) "Free Indexation: CombinatorialAnalysis and a Compositional Algorithm.
Proceedingsof the ACL 1990.Johnson, M. (1988) Attribute-Value Logic and theTheory of Grammar.
CSLI Lecture Notes Series,Chicago University Press.Johsi, A.
(1985) "Tree Adjoining Grammars," In D.Dowty, L. Karttunen & A. Zwicky (eds.
), NaturalLanguage Processing.
Cambridge U.
Press, Cambridge,England.Lebeaux, D. (1989) Language Acquisition and the Formof Grammar.
Doctoral  d issertat ion,  U. ofMassachusetts, Amherst, Mass.Mackworth, A.
(1987) "Constraint Satisfaction," In: SShapiro (ed.
), Encyclopedia of Artificial Intelligence,Wiley, New York.Mackworth, A.
(1977) "Consistency in networks ofrelations," Artif.InteU.
8(1), 99-118.Martin, J.
(1989) "Complexity of Decision Problems inGB Theory," ms., U. of Maryland.Seo, J.
& R. Simmons (1989).
"Syntactic Graphs: ARepresentation for the Union of All Ambiguous ParseTrees," Computational Linguistics 15:1.3.56
