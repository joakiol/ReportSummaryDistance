Proceedings of ACL-IJCNLP 2015 System Demonstrations, pages 97?102,Beijing, China, July 26-31, 2015. c?2015 ACL and AFNLPA Data Sharing and Annotation Service InfrastructureAbstractThis paper reports on and demonstratesMETA-SHARE/QT21, a prototype im-plementation of a data sharing and an-notation service platform, which wasbased on the META-SHARE infrastruc-ture.
META-SHARE, which has beendesigned for sharing datasets and tools,is enhanced with a processing layer forannotating textual content with appro-priate NLP services that are documentedwith the appropriate metadata.
InMETA-SHARE/QT21 pre-defined pro-cessing workflows are offered to the us-ers; each workflow is a pipeline ofatomic NLP services/tools (e.g.
sen-tence splitting, part-of-speech tagging).Currently, workflows for annotatingmonolingual and bilingual resources ofvarious formats are provided (e.g.XCES, TXT, TMX).
From the legalframework point of view, a simple op-erational model is adopted by which on-ly openly licensed datasets can beprocessed by openly licensed services.1 IntroductionLanguage technology research and developmentrelies on the deployment of appropriate resourcesand processing services more than ever before.However, the resources and services landscape isunorganized and highly fragmented (Soria et al.,2012).
Recently, initiatives like CLARIN (Wit-tenburg et al., 2010), Language Grid (Ishida,2011), Panacea (Poch and Bel, 2011), LAPPSGrid (Ide et al., 2014) have been launched aim-ing at improving discoverability and accessibilityof resources and services, as well as their lawfulre-use and direct deployment in modern compu-tational environments.
In this paper, we presentMETA-SHARE/QT21, a prototype implementa-tion of a linguistic data infrastructure enhancedwith linguistic processing services, thus bringinglanguage datasets and processing services to-gether in a unified platform.
META-SHARE/QT21 builds upon and extends META-SHARE (Piperidis, 2012).
Section 2 briefly in-troduces the basics of META-SHARE, the un-derlying data model and the supporting softwareimplementation.
Section 3 elaborates on the op-erations of the new language processing layerand Section 4 presents the assumptions of thecurrent implementation.
Finally, in section 5 weconclude and present directions of future work.2 META-SHARE design and repositoryMETA-SHARE is designed as a network of dis-tributed repositories of language data, tools andweb services, documented with high-qualitymetadata, aggregated in central inventories al-lowing for uniform search and access to re-sources and services.
Language resources andservices are documented with the META-SHARE metadata schema (Gavrilidou et al.,2012)1 which builds upon previous initiatives(Broeder et al., 2010), including elements, mostof which are linked to ISOCat Data Categories1,as well as relations (e.g.
is_part_of,is_annotation_of) used to describe and link re-sources that are included in the META-SHARErepository.Every resource in META-SHARE is primari-ly assigned to one of the network's repositories,implementing the notion of a master copy of aresource, with the member maintaining the re-pository undertaking its curation.
Metadata rec-ords are harvested and stored in the META-SHARE central servers, which maintain an in-ventory including metadata of all resourcesavailable in the distributed network.
META-SHARE users, depending on their role, are ableto create a user profile, log-in, browse and search1 ISO 12620, http://www.isocat.org.Stelios Piperidis, Dimitrios Galanis, Juli Bakagianni, Sokratis SofianopoulosInstitute for Language and Speech Processing, Athena R.C., Athens, Greece{spip, galanisd,  julibak, s_sofian}@ilsp.gr97Figure 1: Dynamically generating annotationlevels relevant to a dataset.Figure 2: Presenting the processing services rele-vant to the annotation level chosen by the user.the repository, download resources, upload anddocument resources etc.
All META-SHAREsoftware is open source2, released under a BSDlicence and available at the GitHub repository3.3 Enhancing META-SHARE with anno-tation servicesFor the purposes of infrastructural projects whereMETA-SHARE was to be used as the languageresource sharing platform, notably the CLARINEL national language infrastructure4, its func-tionalities have been extended by providing amechanism for processing language datasets withappropriate natural language services.
The moti-vation behind this extension is twofold: a) tomake language processing services accessible toand usable by a wide range of users (e.g.
lin-guists, lexicographers, social sciences and digitalhumanities researchers), relieving them from theburden of the technical details of running thetools or services, and b) to bring these tools andservices together in a unified platform and facili-tate their combination with language datasets,thus paving the way towards the organic growthof the data infrastructure.Language processing tools are documentedwith the appropriate metadata in the enhanced2 The META-SHARE software has been developed usingthe Django framework, a Python-based web framework,PostgreSQL database and Apache web server.
META-SHARE comes with a pre-configured Apache Solr serverused to index the META-SHARE database for browsingand searching.3 https://github.com/metashare/META-SHARE4 http://www.clarin.gr/, http://inventory.clarin.grrepository version (META-SHARE/QT21)5, andare provided as web services through the lan-guage processing (LP) layer.
The LP layer hasbeen implemented in Java, based on the ApacheCamel framework6, an open-source project thatprovides libraries, which enable the easy integra-tion of different technologies and the creation ofdata processing workflows7.
For example, Cameloffers ready-to-use components/connectors for a)reading the files of a directory b) split-ting/aggregating their contents (e.g.
txt or XML)into chunks c) forwarding the chunks to dataprocessors d) writing final results to disk.In the typical scenario that we propose todemonstrate, when a registered META-SHARE/QT21 user selects to process a resource,a list of all available annotation levels (Figure 1)is provided.
Then all the available tools/servicesthat correspond to the chosen level are presented(Figure 2).
Annotation services can be atomic orcomposite (a.k.a.
workflows) and include: to-kenization, sentence splitting, POS tagging,lemmatization, dependency parsing, named enti-ty recognition, and parallel text alignment.
Assoon as the user selects a service (Figure 2), theMETA-SHARE/QT21 application consults itsdatabase.
If the user requests to process a datasetwith a specific service, and this dataset has al-ready been processed by the specific service,then the system will forward the user to the pro-cessed dataset that has been created and stored inthe repository.5 http://qt21.metashare.ilsp.gr/6 http://camel.apache.org/7 The implemented LP layer is bundled as a web applicationand can be deployed in a standard java-based web container.98Figure 3: Describing/uploading user-owned datasetsOtherwise, META-SHARE/QT21 sends theuser request to the LP layer.
When the LP getsthe request, it starts to process the specified re-source by invoking the appropriate tools; when itfinishes it notifies the META-SHARE/QT21 ap-plication so that the result of the processing isadded to the META-SHARE/QT21 repositoryalong with appropriate metadata.
Finally, theMETA-SHARE/QT21 application sends the useran email with the link to the newly created re-source.
LP?s workflows are implemented basedon a variety of natural language processing ser-vices.
These services run either within the LPapplication environment (loc), or they are ac-cessed via services (rmt).
Currently, OpenNLP8services (loc) are deployed for English, Germanand Portuguese, Panacea-DCU9 services (rmt)for English, LX-Center/University of Lisbon10services (rmt) for Portuguese, Heart of Gold(HoG) services11 (rmt) for German, ILSP NLP12services (loc) for Greek, and HunAlign (Varga etal., 2005) text alignment services for aligningparallel corpora at sentence level (loc).Each set of workflows forms an acyclic di-rected graph (tree) where each node correspondsto a processing service/tool (e.g.
Figure 4).
The8 https://opennlp.apache.org/9 http://www.panacea-lr.eu10 http://lxcenter.di.fc.ul.pt/tools/en/11 http://heartofgold.dfki.de/12 http://nlp.ilsp.grprocessing of a data chunk is performed by fol-lowing a path in such a workflow tree.
For ex-ample, in case the input is raw text the startingpoint is the root of the tree.
However, LP is alsocapable of processing already annotated re-sources thus saving processing time and re-sources; i.e., if the user requests to process adataset at a level L (e.g.
OpenNLP chunking),and the resource has already been processed at alevel A that is a prerequisite for L (e.g.
OpenNLP Tokenization), then the process will startfrom the already existing level A annotated re-source.
Also, the system is aware of what annota-tion levels make sense and therefore are availablefor an already processed resource and presentsthe corresponding choices (e.g.
a POS-taggedcorpus can be parsed or chunked, but not to-kenised) to the user via the web interface (as inFigure 1).Currently, LP implements services and work-flows that can process a) monolingual resourcesin raw text as well as XCES format and b) bilin-gual resources in TMX, MOSES, and XCESformats.
Bilingual resources, essentially parallelcorpora, are split into their language specificparts and monolingual processing services areinvoked for each language side.The resources are stored in the META-SHARE/QT21 repository in a compressed format(e.g.
.zip, tar.gz, .gz).
Before processing starts,META-SHARE/QT21 decompresses the speci-99fied resource file and then uses an appropriatereader that splits the content of the extracted filesin smaller text (data) chunks, so that any file sizeconstraints that a service might have can be met.These chunks are then forwarded to the appropri-ate processing service/workflow.
As soon as theMETA-SHARE/QT21 has completed the dataprocessing a symmetric procedure collects theresulting (annotated) data chunks and mergesthem in a single compressed resource.Additional features of the implemented infra-structure include: a) mechanisms for automatical-ly creating the metadata records of the newlygenerated datasets, as a result of processing usingan annotation service or workflow, b) discovera-bility of processing services for a particular lan-guage and annotation level by simple or facetedsearch, c) describing and uploading of user-owned datasets up to a size limit (in compressedformat) depending on the user?s status (Figure 3),d) temporarily storing user-owned processed da-tasets for 48 hours and deleting them afterwards,unless the user decides to publicly share them, e)checking processed resources for potential errors(e.g.
number of files processed as expected), f)monitoring progress of all processing requestsand using mechanisms to prevent the applicationfrom hanging when waiting for a service re-sponse, g) automatically cancelling processingrequests that either hang for a long period (e.g.due to network connectivity problems) or are notexecuted correctly (e.g.
when  the encoding orthe format is not compatible with a service/tool)h) concurrently executing several workflows orparts of a workflow.3.1 META-SHARE/QT21 user evalua-tion and scalability tests.Initially, we conducted a set of user tests whichaimed at spotting bugs; then we assessed the sta-bility and usability of META-SHARE/QT21 byasking 15 users to complete a list of 8 annotationtasks for resources of various formats and lan-guages.
All testers were researchers and theymanaged to locate or create the needed resources,submit their requests and receive the annotationresults within a few hours without problems.Completion times varied depending on the re-quested task.In addition, we assessed the performance andscalability of the LP application by testing it withresources of various lengths depending on theworkflow.Figure 4: Workflow tree for the EnglishOpenNLP tools.Locally running services (tools that run withinour application) were tested with resources of1MB, 10MB and 50MB.
Remote services weretested with smaller resources of 500KB, 5MBand 10MB.
First, each tool/service was testedseparately (not concurrently) so as to assess itsprocessing efficiency.
Then, we initiated concur-rent workflows.
All performed tests, concurrentor not, were completed successfully generatingthe expected output, with the processing times ofall growing linearly with resource size; (Figure5).
The tests have also shown that LP applicationcan handle in parallel at least 4 workflows thatprocess ~200MB of data.
We plan to handle theprocessing overload that can be generated bymultiple user request for large datasets by usingmultiple instances of the Camel-based LP in adistributed environment (e.g.
Hadoop) in whichprocessing will be carried out in parallel.4 Assumptions and limitationsCurrently, each META-SHARE/QT21 workflowchains together components or services of thesame suite of tools, e.g.
OpenNLP or the Pana-cea/DCU services.
To accommodate cases wherethe services deployed belong to different suites,we have developed the appropriate converters.For example, in a UIMA-based tree, where aGATE-based Named Entity Recogniser (NER) isintegrated in the respective NER workflow, theUIMA output of the processing services preced-ing named entity recognition is converted to theGATE format and is fed to the GATE-compatible NER (e.g.
Tokenizer ?
Splitter ?POS-Tagger ?
UIMA-GATE Converter ?NER).100Figure 5: Plot of processing times over resourcesize for all local English servicesEnabling the user to define and deploy customworkflows, cross-suite or not, is on our agendafor the immediate future.
The implementation ofcross-suite workflows requires the developmentof several data format converters for each pair ofdifferent technologies (e.g.
UIMA-GATE,OpenNLP-Panacea/DCU).
There are several per-formance, compatibility and interoperability is-sues that arise in such cases and have to beinvestigated and addressed, especially in the lightof Language Grid and LAPPS Grid develop-ments (Ide et al., 2014).Last, but not least, considering the experi-mental META-SHARE/QT21 repository opera-tions from the legal framework point of view, wehave adopted a rather simple operational modelby which only openly licensed, with no no-derivatives restriction,  datasets can be processedby openly licensed services and workflows.
Infuture versions, in collaboration with other infra-structure providers, we intend to elaborate on abusiness logic that will allow processing of oth-erwise licensed datasets and services supportingthe appropriate business models.5 Conclusions and Future WorkThe demonstration presented META-SHARE/QT21, a data sharing and annotationservice infrastructure.
META-SHARE/QT21 isbased on META-SHARE, an open-source datainfrastructure platform and a language processinglayer.
The latter is implemented using a widelyused integration framework which enables easycreation of data workflows by providing appro-priate mechanisms and components for gluingdifferent technologies, services and data sources(XML, txt, TMX).
This capability is very usefulin a data processing platform, since there is a) anabundance of NLP and machine learning toolsimplemented (or offered) using different tech-nologies and libraries (e.g.
UIMA, GATE, SOAPservices, etc.)
and b) a variety of data formats(e.g.
XCES, TMX).
The user evaluation that weconducted has shown that META-SHARE/QT21can be easily used by NLP researchers for ob-taining annotations on a set of resources of vari-ous formats.
Also a set of stress tests that weconducted revealed that the LP layer can processconcurrently a significant amount of data.
We arenow investigating how data annotation can runon multiple machines in a distributed environ-ment (e.g.
Hadoop clusters), thus enabling theprocessing of large volumes of data.AcknowledgmentsThis paper presents work done in the frameworkof the projects T4ME (GA no.
249119),QTLaunchPad project (GA no.
296347), fundedby DG INFSO of the European Commissionthrough the FP7 and ICT-PSP Programmes, andmaintained as well as further extended in theframework of the Greek CLARIN Attiki project(MIS 441451), Support for  ESFRI/2006 Re-search Infrastructures, of the Greek Government.We are grateful to the NLX-Natural Languageand Speech Group of the University of Lisbonand its head, Antonio Branco, for kindly provid-ing access to the LX-Center services.ReferencesSoria, C., Bel, N., Choukri, K., Mariani, J., Mona-chini, M., Odijk, J., Piperidis, S., Quochi, V., Cal-zolari, N. (2012).
The FLaReNet StrategicLanguage Resource Agenda.
Proceedings of the8th Language Resources and Evaluation Confer-ence (LREC?12), ELRA.Gavrilidou, M.; Labropoulou, P.; Desypri, E.; Pipe-ridis, S.;  Papageorgiou, H.; Monachini, M.; Fron-tini, F.; Declerck, T.; Francopoulo, G.; Arranz, V.and Mapelli, V. (2012).
The META-SHAREMetadata Schema for the Description of LanguageResources.
In Nicoletta Calzolari, Khalid Choukri,Thierry Declerck, Mehmet U?ur Do?an, BenteMaegaard, Joseph Mariani, Jan Odijk, Stelios Pi-peridis (Eds), Proceedings of the Eighth Interna-tional Conference on Language Resources andEvaluation (LREC?12), 23-25 May, Istanbul, Tur-key.
European Language Resources Association(ELRA).101Wittenburg, P., Bel, N., Borin, L., Budin, G., Calzola-ri, N. Hajicova, E. Koskenniemi, K., Lemnitzer,L., Maegaard B., Piasecki, M., Pierrel, J.M., Piper-idis, S., Skadina, I., Tufis, D., Veenendaal, R.v .,V?radi, T., Wynne, M. (2010).
Resource and Ser-vice Centres as the Backbone for a SustainableService Infrastructure.
Proceedings of the 7thLanguage Resources and Evaluation Conference(LREC?10), ELRA.Ishida, T. (Ed) (2011).
The Language Grid.
Service-Oriented Collective Intelligence for Language Re-source Interoperability, SpringerPoch, M., Bel, N. (2011) Interoperability and tech-nology for a language resources factory Workshopon Language Resources, Technology and Servicesin the Sharing Paradigm ?
IJCNLP 2011.Piperidis, S. (2012).
The META-SHARE languageresources sharing infrastructure: Principles, chal-lenges, solutions.
In Proceedings of LREC-2012,pages 36?42, Istanbul, Turkey.Ide, N., Pustejovsky, J., Cieri, C., Nyberg, E., Wang,D., Suderman, K., Verhagen, M., and Wright, J.
(2014) The Language Application Grid.
Proceed-ings of the 9th Language Resources and EvaluationConference (LREC?14), ELRABroeder, D., Kemps-Snijders, M., Van Uytvanck, D.,Windhouwer, M., Withers, P., Wittenburg, P. andZinn, C. (2010).
A Data Category Registry- andComponent-based Metadata Framework.
Proceed-ings of the 7th Language Resources and EvaluationConference (LREC?10), ELRA.Varga, D., N?meth, L., Hal?csy, A., Kornai,, P., Tr?n,V., Nagy, V. (2005).
Parallel corpora for mediumdensity languages.
In Proceedings of the RANLP2005, pages 590-596.102
