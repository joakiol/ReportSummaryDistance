A Probability Model to Improve Word AlignmentColin Cherry and Dekang LinDepartment of Computing ScienceUniversity of AlbertaEdmonton, Alberta, Canada, T6G 2E8{colinc,lindek}@cs.ualberta.caAbstractWord alignment plays a crucial role in sta-tistical machine translation.
Word-alignedcorpora have been found to be an excellentsource of translation-related knowledge.We present a statistical model for comput-ing the probability of an alignment given asentence pair.
This model allows easy in-tegration of context-specific features.
Ourexperiments show that this model can bean effective tool for improving an existingword alignment.1 IntroductionWord alignments were first introduced as an in-termediate result of statistical machine translationsystems (Brown et al, 1993).
Since their intro-duction, many researchers have become interestedin word alignments as a knowledge source.
Forexample, alignments can be used to learn transla-tion lexicons (Melamed, 1996), transfer rules (Car-bonell et al, 2002; Menezes and Richardson, 2001),and classifiers to find safe sentence segmentationpoints (Berger et al, 1996).In addition to the IBM models, researchers haveproposed a number of alternative alignment meth-ods.
These methods often involve using a statisticsuch as ?2 (Gale and Church, 1991) or the log likeli-hood ratio (Dunning, 1993) to create a score to mea-sure the strength of correlation between source andtarget words.
Such measures can then be used toguide a constrained search to produce word align-ments (Melamed, 2000).It has been shown that once a baseline alignmenthas been created, one can improve results by usinga refined scoring metric that is based on the align-ment.
For example Melamed uses competitive link-ing along with an explicit noise model in (Melamed,2000) to produce a new scoring metric, which in turncreates better alignments.In this paper, we present a simple, flexible, sta-tistical model that is designed to capture the infor-mation present in a baseline alignment.
This modelallows us to compute the probability of an align-ment for a given sentence pair.
It also allows forthe easy incorporation of context-specific knowl-edge into alignment probabilities.A critical reader may pose the question, ?Why in-vent a new statistical model for this purpose, whenexisting, proven models are available to train on agiven word alignment??
We will demonstrate exper-imentally that, for the purposes of refinement, ourmodel achieves better results than a comparable ex-isting alternative.We will first present this model in its most generalform.
Next, we describe an alignment algorithm thatintegrates this model with linguistic constraints inorder to produce high quality word alignments.
Wewill follow with our experimental results and dis-cussion.
We will close with a look at how our workrelates to other similar systems and a discussion ofpossible future directions.2 Probability ModelIn this section we describe our probability model.To do so, we will first introduce some necessary no-tation.
Let E be an English sentence e1, e2, .
.
.
, emand let F be a French sentence f1, f2, .
.
.
, fn.
Wedefine a link l(ei, fj) to exist if ei and fj are a trans-lation (or part of a translation) of one another.
Wedefine the null link l(ei, f0) to exist if ei does notcorrespond to a translation for any French word inF .
The null link l(e0, fj) is defined similarly.
Analignment A for two sentences E and F is a set oflinks such that every word in E and F participates inat least one link, and a word linked to e0 or f0 partic-ipates in no other links.
If e occurs in E x times andf occurs in F y times, we say that e and f co-occurxy times in this sentence pair.We define the alignment problem as finding thealignment A that maximizes P (A|E,F ).
This cor-responds to finding the Viterbi alignment in theIBM translation systems.
Those systems modelP (F,A|E), which when maximized is equivalent tomaximizing P (A|E,F ).
We propose here a systemwhich models P (A|E,F ) directly, using a differentdecomposition of terms.In the IBM models of translation, alignments existas artifacts of which English words generated whichFrench words.
Our model does not state that onesentence generates the other.
Instead it takes bothsentences as given, and uses the sentences to deter-mine an alignment.
An alignment A consists of tlinks {l1, l2, .
.
.
, lt}, where each lk = l(eik , fjk) forsome ik and jk.
We will refer to consecutive subsetsof A as lji = {li, li+1, .
.
.
, lj}.
Given this notation,P (A|E,F ) can be decomposed as follows:P (A|E,F ) = P (lt1|E,F ) =t?k=1P (lk|E,F, lk?11 )At this point, we must factor P (lk|E,F, lk?11 ) tomake computation feasible.
Let Ck = {E,F, lk?11 }represent the context of lk.
Note that both the con-text Ck and the link lk imply the occurrence of eikand fjk .
We can rewrite P (lk|Ck) as:P (lk|Ck) =P (lk, Ck)P (Ck)=P (Ck|lk)P (lk)P (Ck, eik , fjk)=P (Ck|lk)P (Ck|eik , fjk)?P (lk, eik , fjk)P (eik , fjk)= P (lk|eik , fjk)?P (Ck|lk)P (Ck|eik , fjk)Here P (lk|eik , fjk) is link probability given a co-occurrence of the two words, which is similar inspirit to Melamed?s explicit noise model (Melamed,2000).
This term depends only on the words in-volved directly in the link.
The ratio P (Ck|lk)P (Ck|eik ,fjk )modifies the link probability, providing context-sensitive information.Up until this point, we have made no simplify-ing assumptions in our derivation.
Unfortunately,Ck = {E,F, lk?11 } is too complex to estimate con-text probabilities directly.
Suppose FTk is a setof context-related features such that P (lk|Ck) canbe approximated by P (lk|eik , fjk , FTk).
Let C ?k ={eik , fjk}?FTk.
P (lk|C?k) can then be decomposedusing the same derivation as above.P (lk|C?k) = P (lk|eik , fjk)?P (C ?k|lk)P (C ?k|eik , fjk)= P (lk|eik , fjk)?P (FTk|lk)P (FTk|eik , fjk)In the second line of this derivation, we can dropeik and fjk from C ?k, leaving only FTk, because theyare implied by the events which the probabilities areconditionalized on.
Now, we are left with the taskof approximating P (FTk|lk) and P (FTk|eik , fjk).To do so, we will assume that for all ft ?
FTk,ft is conditionally independent given either lk or(eik , fjk).
This allows us to approximate alignmentprobability P (A|E,F ) as follows:t?k=1?
?P (lk|eik , fjk)?
?ft?FTkP (ft|lk)P (ft|eik , fjk)?
?In any context, only a few features will be ac-tive.
The inner product is understood to be only overthose features ft that are present in the current con-text.
This approximation will cause P (A|E,F ) tono longer be a well-behaved probability distribution,though as in Naive Bayes, it can be an excellent es-timator for the purpose of ranking alignments.If we have an aligned training corpus, the prob-abilities needed for the above equation are quiteeasy to obtain.
Link probabilities can be deter-mined directly from |lk| (link counts) and |eik , fj,k|(co-occurrence counts).
For any co-occurring pairof words (eik , fjk), we check whether it has thefeature ft.
If it does, we increment the count of|ft, eik , fjk |.
If this pair is also linked, then we in-crement the count of |ft, lk|.
Note that our definitionof FTk allows for features that depend on previouslinks.
For this reason, when determining whether ornot a feature is present in a given context, one mustimpose an ordering on the links.
This ordering canbe arbitrary as long as the same ordering is used intraining1 and probability evaluation.
A simple solu-tion would be to order links according their Frenchwords.
We choose to order links according to thelink probability P (lk|eik , fjk) as it has an intuitiveappeal of allowing more certain links to provide con-text for others.We store probabilities in two tables.
The first ta-ble stores link probabilities P (lk|eik , fjk).
It has anentry for every word pair that was linked at leastonce in the training corpus.
Its size is the same asthe translation table in the IBM models.
The sec-ond table stores feature probabilities, P (ft|lk) andP (ft|eik , fjk).
For every linked word pair, this tablehas two entries for each active feature.
In the worstcase this table will be of size 2?|FT |?|E|?|F |.
Inpractice, it is much smaller as most contexts activateonly a small number of features.In the next subsection we will walk through a sim-ple example of this probability model in action.
Wewill describe the features used in our implementa-tion of this model in Section 3.2.2.1 An Illustrative ExampleFigure 1 shows an aligned corpus consisting ofone sentence pair.
Suppose that we are concernedwith only one feature ft that is active2 for eikand fjk if an adjacent pair is an alignment, i.e.,l(eik?1, fjk?1) ?
lk?11 or l(eik+1, fjk+1) ?
lk?11 .This example would produce the probability tablesshown in Table 1.Note how ft is active for the (a, v) link, and isnot active for the (b, u) link.
This is due to our se-lected ordering.
Table 1 allows us to calculate theprobability of this alignment as:1In our experiments, the ordering is not necessary duringtraining to achieve good performance.2Throughout this paper we will assume that null alignmentsare special cases, and do not activate or participate in featuresunless otherwise stated in the feature description.abauvvef00Figure 1: An Example Aligned CorpusTable 1: Example Probability Tables(a) Link Counts and Probabilitieseik fjk |lk| |eik , fjk | P (lk|eik , fjk)b u 1 1 1a f0 1 2 12e0 v 1 2 12a v 1 4 14(b) Feature Countseik fjk |ft, lk| |ft, eik , fjk |a v 1 1(c) Feature Probabilitieseik fjk P (ft|lk) P (ft|eik , fjk)a v 1 14P (A|E,F ) = P (l(b, u)|b, u)?P (l(a, f0)|a, f0)?P (l(e0, v)|e0, v)?P (l(a, v)|a, v)P (ft|l(a,v))P (ft|a,v)= 1?
12 ?12 ?14 ?114= 143 Word-Alignment AlgorithmIn this section, we describe a world-alignment al-gorithm guided by the alignment probability modelderived above.
In designing this algorithm we haveselected constraints, features and a search methodin order to achieve high performance.
The model,however, is general, and could be used with any in-stantiation of the above three factors.
This sectionwill describe and motivate the selection of our con-straints, features and search method.The input to our word-alignment algorithm con-sists of a pair of sentences E and F , and the depen-dency tree TE for E. TE allows us to make use offeatures and constraints that are based on linguisticintuitions.3.1 ConstraintsThe reader will note that our alignment model as de-scribed above has very few factors to prevent unde-sirable alignments, such as having all French wordsalign to the same English word.
To guide the modelto correct alignments, we employ two constraints tolimit our search for the most probable alignment.The first constraint is the one-to-one constraint(Melamed, 2000): every word (except the null wordse0 and f0) participates in exactly one link.The second constraint, known as the cohesionconstraint (Fox, 2002), uses the dependency tree(Mel?c?uk, 1987) of the English sentence to restrictpossible link combinations.
Given the dependencytree TE , the alignment can induce a dependency treefor F (Hwa et al, 2002).
The cohesion constraintrequires that this induced dependency tree does nothave any crossing dependencies.
The details abouthow the cohesion constraint is implemented are out-side the scope of this paper.3 Here we will use a sim-ple example to illustrate the effect of the constraint.Consider the partial alignment in Figure 2.
Whenthe system attempts to link of and de, the new linkwill induce the dotted dependency, which crosses apreviously induced dependency between service anddonne?es.
Therefore, of and de will not be linked.the status of the data servicel' ?tat du service de donn?esnndetpcompmoddetFigure 2: An Example of Cohesion Constraint3.2 FeaturesIn this section we introduce two types of featuresthat we use in our implementation of the probabil-ity model described in Section 2.
The first feature3The algorithm for checking the cohesion constraint is pre-sented in a separate paper which is currently under review.thehostdiscoversallthedevicesdetsubjpredetobjl'  h?terep?retouslesp?riph?riques123451234566thehostlocatealltheperipheralsFigure 3: Feature Extraction Exampletype fta concerns surrounding links.
It has been ob-served that words close to each other in the sourcelanguage tend to remain close to each other in thetranslation (Vogel et al, 1996; Ker and Change,1997).
To capture this notion, for any word pair(ei, fj), if a link l(ei?
, fj?)
exists where i?
2 ?
i?
?i + 2 and j ?
2 ?
j?
?
j + 2, then we say that thefeature fta(i?i?, j?j?, ei?)
is active for this context.We refer to these as adjacency features.The second feature type ftd uses the Englishparse tree to capture regularities among grammati-cal relations between languages.
For example, whendealing with French and English, the location ofthe determiner with respect to its governor4 is neverswapped during translation, while the location of ad-jectives is swapped frequently.
For any word pair(ei, fj), let ei?
be the governor of ei, and let rel bethe relationship between them.
If a link l(ei?
, fj?
)exists, then we say that the feature ftd(j?j?, rel) isactive for this context.
We refer to these as depen-dency features.Take for example Figure 3 which shows a par-tial alignment with all links completed except forthose involving ?the?.
Given this sentence pair andEnglish parse tree, we can extract features of bothtypes to assist in the alignment of the1.
The wordpair (the1, l?)
will have an active adjacency featurefta(+1,+1, host) as well as a dependency featureftd(?1, det).
These two features will work togetherto increase the probability of this correct link.
Incontrast, the incorrect link (the1, les) will have onlyftd(+3, det), which will work to lower the linkprobability, since most determiners are located be-4The parent node in the dependency tree.fore their governors.3.3 SearchDue to our use of constraints, when seeking thehighest probability alignment, we cannot rely on amethod such as dynamic programming to (implic-itly) search the entire alignment space.
Instead, weuse a best-first search algorithm (with constant beamand agenda size) to search our constrained space ofpossible alignments.
A state in this space is a par-tial alignment.
A transition is defined as the addi-tion of a single link to the current state.
Any linkwhich would create a state that does not violate anyconstraint is considered to be a valid transition.
Ourstart state is the empty alignment, where all words inE and F are linked to null.
A terminal state is a statein which no more links can be added without violat-ing a constraint.
Our goal is to find the terminal statewith highest probability.For the purposes of our best-first search, non-terminal states are evaluated according to a greedycompletion of the partial alignment.
We build thiscompletion by adding valid links in the order oftheir unmodified link probabilities P (l|e, f) until nomore links can be added.
The score the state receivesis the probability of its greedy completion.
Thesecompletions are saved for later use (see Section 4.2).4 TrainingAs was stated in Section 2, our probability modelneeds an initial alignment in order to create its prob-ability tables.
Furthermore, to avoid having ourmodel learn mistakes and noise, it helps to train on aset of possible alignments for each sentence, ratherthan one Viterbi alignment.
In the following sub-sections we describe the creation of the initial align-ments used for our experiments, as well as our sam-pling method used in training.4.1 Initial AlignmentWe produce an initial alignment using the same al-gorithm described in Section 3, except we maximizesummed ?2 link scores (Gale and Church, 1991),rather than alignment probability.
This produces areasonable one-to-one word alignment that we canrefine using our probability model.4.2 Alignment SamplingOur use of the one-to-one constraint and the cohe-sion constraint precludes sampling directly from allpossible alignments.
These constraints tie words insuch a way that the space of alignments cannot beenumerated as in IBM models 1 and 2 (Brown etal., 1993).
Taking our lead from IBM models 3, 4and 5, we will sample from the space of those high-probability alignments that do not violate our con-straints, and then redistribute our probability massamong our sample.At each search state in our alignment algorithm,we consider a number of potential links, and selectbetween them using a heuristic completion of the re-sulting state.
Our sample S of possible alignmentswill be the most probable alignment, plus the greedycompletions of the states visited during search.
Itis important to note that any sampling method thatconcentrates on complete, valid and high probabil-ity alignments will accomplish the same task.When collecting the statistics needed to calcu-late P (A|E,F ) from our initial ?2 alignment, wegive each s ?
S a uniform weight.
This is rea-sonable, as we have no probability estimates at thispoint.
When training from the alignments pro-duced by our model, we normalize P (s|E,F ) sothat?s?S P (s|E,F ) = 1.
We then count links andfeatures in S according to these normalized proba-bilities.5 Experimental ResultsWe adopted the same evaluation methodology as in(Och and Ney, 2000), which compared alignmentoutputs with manually aligned sentences.
Och andNey classify manual alignments into two categories:Sure (S) and Possible (P ) (S?P ).
They defined thefollowing metrics to evaluate an alignment A:recall = |A?S||S| precision =|A?P ||P |alignment error rate (AER) = |A?S|+|A?P ||S|+|P |We trained our alignment program with the same50K pairs of sentences as (Och and Ney, 2000) andtested it on the same 500 manually aligned sen-tences.
Both the training and testing sentences arefrom the Hansard corpus.
We parsed the trainingTable 2: Comparison with (Och and Ney, 2000)Method Prec Rec AEROurs 95.7 86.4 8.7IBM-4 F?E 80.5 91.2 15.6IBM-4 E?F 80.0 90.8 16.0IBM-4 Intersect 95.7 85.6 9.0IBM-4 Refined 85.9 92.3 11.7and testing corpora with Minipar.5 We then ran thetraining procedure in Section 4 for three iterations.We conducted three experiments using thismethodology.
The goal of the first experiment is tocompare the algorithm in Section 3 to a state-of-the-art alignment system.
The second will determinethe contributions of the features.
The third experi-ment aims to keep all factors constant except for themodel, in an attempt to determine its performancewhen compared to an obvious alternative.5.1 Comparison to state-of-the-artTable 2 compares the results of our algorithm withthe results in (Och and Ney, 2000), where an HMMmodel is used to bootstrap IBM Model 4.
The rowsIBM-4 F?E and IBM-4 E?F are the results ob-tained by IBM Model 4 when treating French as thesource and English as the target or vice versa.
Therow IBM-4 Intersect shows the results obtained bytaking the intersection of the alignments producedby IBM-4 E?F and IBM-4 F?E.
The row IBM-4Refined shows results obtained by refining the inter-section of alignments in order to increase recall.Our algorithm achieved over 44% relative errorreduction when compared with IBM-4 used in ei-ther direction and a 25% relative error rate reduc-tion when compared with IBM-4 Refined.
It alsoachieved a slight relative error reduction when com-pared with IBM-4 Intersect.
This demonstrates thatwe are competitive with the methods described in(Och and Ney, 2000).
In Table 2, one can see thatour algorithm is high precision, low recall.
This wasexpected as our algorithm uses the one-to-one con-straint, which rules out many of the possible align-ments present in the evaluation data.5available at http://www.cs.ualberta.ca/?
lindek/minipar.htmTable 3: Evaluation of FeaturesAlgorithm Prec Rec AERinitial (?2) 88.9 84.6 13.1without features 93.7 84.8 10.5with ftd only 95.6 85.4 9.3with fta only 95.9 85.8 9.0with fta and ftd 95.7 86.4 8.75.2 Contributions of FeaturesTable 3 shows the contributions of features to our al-gorithm?s performance.
The initial (?2) row is thescore for the algorithm (described in Section 4.1)that generates our initial alignment.
The without fea-tures row shows the score after 3 iterations of refine-ment with an empty feature set.
Here we can see thatour model in its simplest form is capable of produc-ing a significant improvement in alignment quality.The rows with ftd only and with fta only describethe scores after 3 iterations of training using only de-pendency and adjacency features respectively.
Thetwo features provide significant contributions, withthe adjacency feature being slightly more important.The final row shows that both features can work to-gether to create a greater improvement, despite theindependence assumptions made in Section 2.5.3 Model EvaluationEven though we have compared our algorithm toalignments created using IBM statistical models, itis not clear if our model is essential to our perfor-mance.
This experiment aims to determine if wecould have achieved similar results using the sameinitial alignment and search algorithm with an alter-native model.Without using any features, our model is similarto IBM?s Model 1, in that they both take into accountonly the word types that participate in a given link.IBM Model 1 uses P (f |e), the probability of f be-ing generated by e, while our model uses P (l|e, f),the probability of a link existing between e and f .In this experiment, we set Model 1 translation prob-abilities according to our initial ?2 alignment, sam-pling as we described in Section 4.2.
We then use the?nj=1 P (fj |eaj ) to evaluate candidate alignments ina search that is otherwise identical to our algorithm.We ran Model 1 refinement for three iterations andTable 4: P (l|e, f) vs. P (f |e)Algorithm Prec Rec AERinitial (?2) 88.9 84.6 13.1P (l|e, f) model 93.7 84.8 10.5P (f |e) model 89.2 83.0 13.7recorded the best results that it achieved.It is clear from Table 4 that refining our initial ?2alignment using IBM?s Model 1 is less effective thanusing our model in the same manner.
In fact, theModel 1 refinement receives a lower score than ourinitial alignment.6 Related Work6.1 Probability modelsWhen viewed with no features, our proba-bility model is most similar to the explicitnoise model defined in (Melamed, 2000).
Infact, Melamed defines a probability distributionP (links(u, v)|cooc(u, v), ?+, ??)
which appears tomake our work redundant.
However, this distribu-tion refers to the probability that two word types uand v are linked links(u, v) times in the entire cor-pus.
Our distribution P (l|e, f) refers to the proba-bility of linking a specific co-occurrence of the wordtokens e and f .
In Melamed?s work, these probabil-ities are used to compute a score based on a prob-ability ratio.
In our work, we use the probabilitiesdirectly.By far the most prominent probability models inmachine translation are the IBM models and theirextensions.
When trying to determine whether twowords are aligned, the IBM models ask, ?What isthe probability that this English word generated thisFrench word??
Our model asks instead, ?If we aregiven this English word and this French word, whatis the probability that they are linked??
The dis-tinction is subtle, yet important, introducing manydifferences.
For example, in our model, E and Fare symmetrical.
Furthermore, we model P (l|e, f ?
)and P (l|e, f ??)
as unrelated values, whereas the IBMmodel would associate them in the translation prob-abilities t(f ?|e) and t(f ?
?|e) through the constraint?f t(f |e) = 1.
Unfortunately, by conditionalizingon both words, we eliminate a large inductive bias.This prevents us from starting with uniform proba-bilities and estimating parameters with EM.
This iswhy we must supply the model with a noisy initialalignment, while IBM can start from an unalignedcorpus.In the IBM framework, when one needs the modelto take new information into account, one must cre-ate an extended model which can base its parame-ters on the previous model.
In our model, new in-formation can be incorporated modularly by addingfeatures.
This makes our work similar to maximumentropy-based machine translation methods, whichalso employ modular features.
Maximum entropycan be used to improve IBM-style translation prob-abilities by using features, such as improvements toP (f |e) in (Berger et al, 1996).
By the same tokenwe can use maximum entropy to improve our esti-mates of P (lk|eik , fjk , Ck).
We are currently inves-tigating maximum entropy as an alternative to ourcurrent feature model which assumes conditional in-dependence among features.6.2 Grammatical ConstraintsThere have been many recent proposals to leveragesyntactic data in word alignment.
Methods such as(Wu, 1997), (Alshawi et al, 2000) and (Lopez et al,2002) employ a synchronous parsing procedure toconstrain a statistical alignment.
The work done in(Yamada and Knight, 2001) measures statistics onoperations that transform a parse tree from one lan-guage into another.7 Future WorkThe alignment algorithm described here is incapableof creating alignments that are not one-to-one.
Themodel we describe, however is not limited in thesame manner.
The model is currently capable ofcreating many-to-one alignments so long as the nullprobabilities of the words added on the ?many?
sideare less than the probabilities of the links that wouldbe created.
Under the current implementation, thetraining corpus is one-to-one, which gives our modelno opportunity to learn many-to-one alignments.We are pursuing methods to create an extendedalgorithm that can handle many-to-one alignments.This would involve training from an initial align-ment that allows for many-to-one links, such as oneof the IBM models.
Features that are related tomultiple links should be added to our set of featuretypes, to guide intelligent placement of such links.8 ConclusionWe have presented a simple, flexible, statisticalmodel for computing the probability of an alignmentgiven a sentence pair.
This model allows easy in-tegration of context-specific features.
Our experi-ments show that this model can be an effective toolfor improving an existing word alignment.ReferencesHiyan Alshawi, Srinivas Bangalore, and Shona Douglas.2000.
Learning dependency translation models as col-lections of finite state head transducers.
Computa-tional Linguistics, 26(1):45?60.Adam L. Berger, Stephen A. Della Pietra, and Vincent J.Della Pietra.
1996.
A maximum entropy approach tonatural language processing.
Computational Linguis-tics, 22(1):39?71.P.
F. Brown, V. S. A. Della Pietra, V. J. Della Pietra, andR.
L. Mercer.
1993.
The mathematics of statisticalmachine translation: Parameter estimation.
Computa-tional Linguistics, 19(2):263?312.Jaime Carbonell, Katharina Probst, Erik Peterson, Chris-tian Monson, Alon Lavie, Ralf Brown, and Lori Levin.2002.
Automatic rule learning for resource-limited mt.In Proceedings of AMTA-02, pages 1?10.Ted Dunning.
1993.
Accurate methods for the statisticsof surprise and coincidence.
Computational Linguis-tics, 19(1):61?74, March.Heidi J.
Fox.
2002.
Phrasal cohesion and statisticalmachine translation.
In Proceedings of EMNLP-02,pages 304?311.W.A.
Gale and K.W.
Church.
1991.
Identifying wordcorrespondences in parallel texts.
In Proceedingsof the 4th Speech and Natural Language Workshop,pages 152?157.
DARPA, Morgan Kaufmann.Rebecca Hwa, Philip Resnik, Amy Weinberg, and OkanKolak.
2002.
Evaluating translational correspondenceusing annotation projection.
In Proceeding of ACL-02,pages 392?399.Sue J. Ker and Jason S. Change.
1997.
Aligning morewords with high precision for small bilingual cor-pora.
Computational Linguistics and Chinese Lan-guage Processing, 2(2):63?96, August.Adam Lopez, Michael Nossal, Rebecca Hwa, and PhilipResnik.
2002.
Word-level alignment for multilingualresource acquisition.
In Proceedings of the Workshopon Linguistic Knowledge Acquisition and Representa-tion: Bootstrapping Annotated Language Data.I.
Dan Melamed.
1996.
Automatic construction of cleanbroad-coverage translation lexicons.
In Proceedingsof the 2nd Conference of the Association for MachineTranslation in the Americas, pages 125?134, Mon-treal.I.
Dan Melamed.
2000.
Models of translational equiv-alence among words.
Computational Linguistics,26(2):221?249, June.Igor A. Mel?c?uk.
1987.
Dependency syntax: theory andpractice.
State University of New York Press, Albany.Arul Menezes and Stephen D. Richardson.
2001.
A best-first alignment algorithm for automatic extraction oftransfer mappings from bilingual corpora.
In Proceed-ings of the Workshop on Data-Driven Machine Trans-lation.Franz J. Och and Hermann Ney.
2000.
Improved sta-tistical alignment models.
In Proceedings of the 38thAnnual Meeting of the Association for ComputationalLinguistics, pages 440?447, Hong Kong, China, Octo-ber.S.
Vogel, H. Ney, and C. Tillmann.
1996.
Hmm-basedword alignment in statistical translation.
In Proceed-ings of COLING-96, pages 836?841, Copenhagen,Denmark, August.Dekai Wu.
1997.
Stochastic inversion transductiongrammars and bilingual parsing of parallel corpora.Computational Linguistics, 23(3):374?403.Kenji Yamada and Kevin Knight.
2001.
A syntax-basedstatistical translation model.
In Meeting of the Associ-ation for Computational Linguistics, pages 523?530.
