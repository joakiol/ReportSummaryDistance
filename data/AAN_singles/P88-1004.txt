THE INTERPRETATION OF RELATIONAL NOUNSJoe de Bruin" and Remko SchaBBN Laboratories10 Mouiton StreetCambridge, MA 02238, USAABSTRACTThis paper 1 decdbes a computational treatment ofthe semantics of relational nouns.
It covers relationalnouns such as "sister.and "commander; and focusesespecially on a particular subcategory of them, calledfunction nouns ('speed; "distance', "rating').
Rela-tional nouns are usually viewed as either requiringnon-compositional semantic interpretation, or causingan undesirable proliferation of syntactic rules.
In con-trast to this, we present a treatment which is bothsyntactically uniform and semantically compositional.The core ideas of this treatment are: (1) The recog-nition of different levels of semantic analysis; in par-ticular, the distinction between an English-orientedand a domain-oriented level of meaning represen-tation.
(2) The analysis of relational nouns as denotingrelation-extensions.The paper shows how this approach handles avariety of linguistic constructions involving relationalnouns.
The treatment presented here has been im-plemented in BBN's Spoken Language System, anexperimental spoken language interface to adatabase/graphics ystem.1 RELATIONAL NOUNS AND THEIRDENOTATIONSWhen Jean Piaget faced his nine year old subjectHal with the question ~/Vhat's a brother?
; the answerwas: "When there's a boy and another boy, whenthere are two of them."
And, with a greater degree offormal precision, ten year old Bern replied to the samequestion: ",4 brother is a relation, one brother toanother.
"\[2\] [8\] What these children are beginning tobe able to articulate is that there is something wrongwith the experimenter's question as it is posed: it talksabout "brothers" as if they constituted a natural kin d,as if there is a way of looking at an individual to findout whether he is a brother.
But "brother" is normallynot used that way - a property which it shares withwords like "co-author; "commander', "speed',"distance', and "rating'.Nouns of this sort are called relational nouns.
As1This research was supported by the Advanced Research ProjectsAgency of the Depmlment of Defense under Contract No,NO0014-87-C-0(~5.
"Current address: Cartesian Products BV, WG Plem 316, 1054 SGAmsterdam, The Nathedands.we shall see in a moment, their semantic propertiesdiffer significantly from those of other nouns, so thatthe standard treatments of nominal semantics don'tapply to them.
The problem of the semantic inter-pretation of relational nouns constitutes the topic ofthis paper.
We shall argue that this problem is indeeda semantic one, and should preferably not be treatedin the syntax.
The semantic treatment hat we presentuses a multilevel semantics framework, and is basedon the idea of assigning relation extensions asdenotations to relational nouns.Relational nouns are semantically unsaturated.They are normally used in combination with an implicitor explicit argument: "John's brother..
The argumentof a relational noun, if overtly realized in the sentence,is connected to the noun by means of a relation-denoting lexical element: the verb "have" or one of itssemantic equivalents (the geni~ve and the preposi-tions "of" and "with): "John has a sister', "John'ssister; "a sister of John's; "a boy with a sister" It hasbeen noted that these lexical items interact differentlywith relational nouns than they do with other nouns.\[7\] Compare, for instance, the noun "car" in(1)/(labcd) with the relational noun "brother" in theparallel sentences (2)/(2abcd): (1) entails (labcd),but the corresponding (2) does not entail (2abcd).2(1) "John's cars are wrecks.
"(la) "Some wrecks of John's are cars.
"( l b) "Some wrecks are John's.
"(1 c) "Some ca~ are John "S. "( l d) "John has wrecks.
"(2) "John's brothers are punks.
"#(2a) "Some punks of John's are brothers.
"#(2b) "Some punks are John's.
"#(2c) "Some brothers are John's.
"#(2d) "John has punks.
"A particular subcategory of the relational nouns,that we shall consider in some detail, is constituted bythe function nouns; they are semantically distinct inthat for every argument they refer to exactly one en-tity, which is an element of a linear ordering: a hum-ZWe refrain from saying that (2abod) are ungrammatical.
Becauseof the semantic open-endedness of "have" and the genitivQ, thesesentences can certainly be wellformod and meaningful, if uttored inan appropriate context.
The issue at stake is that the inteqDreta~onwhic~ is the saJient one for the genitive in (2) is not avaUable for the?ommponciing elements in (2abcd).
Sentences displaying thisproperty have been marked with the #-sign (rathor than theungrammoticality-aotorisk) in this paper.25bet, an amount, or a grade.
Examples are "length","speed', "distance", "rating".
Function nouns can beused in constructions which exclude other nouns,relational as well as non-relational.
Compare, for in-stance:(3) "The USS Frederick has a speed of 15 knots.
"#(3a) "John has a car of ~is wreck.
"#(3b) "John has a brolher of Peter.
"The examples above show that there are sig-nificant semantic differences between phrases con-necting relational nouns to their functions/values, andthe corresponding, similarly structured phrases builtaround other nouns.
This suggests that the standardtreatment of ordinary nouns cannot be applied directlyto relational nouns and yield correct results.
To con-clude this introductory section, we investigate this is-sue in a little more detail.Assume a semantic framework with the following,not very unusual, features.
Nouns are analyzed asset-denoting constants; concomitantly, adjectives areanalyzed as one-place predicates, prepositions astwo-place predicates, verbs as n-place predicates.Plural noun phrases with "the" or a possessive denotesets which have the same semantic type as the nounaround which they are built: "John's cars" denotes aparticular set of cars.
In this approach, the represen-tation of the noun phrase "Peter's s/stern'would be:{x ?
SISTERS / POSSESS(PETER, x)},where SISTERS denotes the set of persons who are asister, and POSSESS represents the possessive rela-tion indicated by the genitive construction.Now this expression does not have the rightproperties.
It lacks necessary information: the predi-cate ~ x: POSSESS(PETER, x)) applies to elementsof the extension of SISTERS; it cannot take into ac-count how this extension was defined.
For instance, ifin a pa~cular world the set of sisters is co-extensionalwith the set of coauthors, the approach just outlinedwould incorrectly assign to "Peter's sisters" the samedenotation as to "Peter's co-aulhors".It is clear what the source of the problem is: thesemantic representations for relational nouns con-sidered above denote simple sets of individuals, anddo not contain any information about the relation in-volved.
To salvage a uniform compositional treatment,a richer representation is needed.
One might think ofinvoking Montague's individual concepts \[3\] \[6\], or en-riching one's ontology with qua-individuals(distinguishing between Mary qua sister and Mary quaaunt) \[4\].
In section 4 we will present our solution tothis problem.
First, we discuss why we didn't choosefor a more syntactically oriented approach.2 AGAINST SYNTACTIC TREATMENTSOften, the complexities mentioned above aretaken to require a distinction between intransitivecommon nouns and transitive common nouns in thesyntax, with a concommittant proliferation of syntacticrules.
Instead, we have chosen to extend a treatmentof "ordinary" nouns only at the semantic processingstage.
We shall now indicate some of the reasons forthis choice.Relational nouns are semantically dependent onan argument.
In this respect, they are more reminis-cent of verbs than ot standard nouns like "boy" or"chair'.
Most verbs of English have one or more ar-gument places that must be filled for the verb to beused in a syntactically/semantically felicitous way; thisproperty of verbs is probably an important reason forthe persisting tendency to analyze them as n-placepredicates rather than sets of situations.
The semanticsimilarity between relational nouns and verbs hasgiven rise to treatments which model the syntactictreatment of nouns on the treatment of verbs: oneintroduces lexical subcategories for nouns which in-dicate how many arguments they take and how thesearguments are marked; the syntactic rules combineN-bara or noun-phrases with genitive phrases andpreposition-phrases, taking these subcategorizationsinto account.
\[15\] We will now argue, however, thatfrom a syntactic point of view such a move is unattrac-five.Syntactically, relational nouns do not behave verydifferentJy from "ordinary" nouns.
They combine withadjectives, determiners, preposition phrases and rela-five clauses to form noun phrases with a standardX-bar structure; and the noun phrases thus con-stituted can pa~cipate in all sentence-level structuresthat other noun phrases partake in.Also, no nouns have syntactic properties thatwould be analogous to the sentenco-leveiphenomenon of a verb obligatorily taking one or morearguments.
The overt realization of the arguments ofa "transitive noun" is always optional.Finally, we may note that relational nouns can beconnected to their arguments/values by a variety ofverbs and prepositions, which constitute a semanticcomplex that is also used, with exactly the samestructure but with a different meaning, to operate onnon-relational nouns.
Compare, for instance:"The Chevrolet of Dr. Johnson"/ "The speed of Frederick""Dr. Johnson's Chevrolet"/ "Frederick's speed ~"The Chevrolet hat Dr. Johnson has"/ "The speed that Frederick has""Dr. Johnson acquired a rusty Chevrolet"/ "Frederick acquired a formidable speed""A philosopher with a rusty Chevrolet"/ ",4 ship wi~ a formidable speed"The same set of terms is used in English for the26ownership relation, for the part-whole relation, and forthe relation between a function and its argument.These terms (like "of', "have" and "with" ) are highlypolysemous, and any language processing systemmust encompass mechanisms for disambiguatingtheir intended meaning in any particular utterance.To summarize: relational nouns do not distinguishthemselves syntactically from other nouns, and theymark their function-argument s ructures by means ofpolysemous descriptive terms.
We therefore concludethat it would be theoretically elegant as well as com-putationaily effective to treat relational and non-relational nouns identically at the syntactic level, andto account for the semantics of relational noun con-structions by exploiting independently motivated dis-ambiguation mechanisms.
The remainder of thispaper describes such a treatment.First, Section 3 discusses the multilevel semanticsarchitecture which constitutes the framework for ourapproach.
Section 4 presents our answer to a basicquestion about relational nouns: what should theirdenotations be?
This section then goes on todescribe the semantic transformations which derivethe desired analyses of constructions involving rela-tional nouns.
Section 5 briefly discusses the interfacewith a Discourse Model, which is necessary to recoverarguments of a relation that are left implicit in an ut-terance.
Section 6 shows that our treatment is usefulfor the purpose of response-formulation i question-answering.3 MULT ILEVEL  SEMANTICS .Our approach to the problem of relation~d nouns isbased on the idea of multilevel semantics, the distinc-tion between different levels of semantic analysis.\[1\] [10\] In this approach, interpreting a natural lan-guage sentence is a multi-stage process, which startsout with a high-level meaning representation whichreflects the semantic structure of the English sentencerather directly, and then applies translation ruleswhich specify how the English-oriented semanticprimitives relate to the ones that are used at deeperlevels of analysis.At every level of analysis, the meaning of an inpututterance is represented as an expression of a logicallanguage.
3 The languages used at the various levelsof analysis differ in that at every level the descriptiveconstants are chosen so as to correspond to thesemantic primitives which are assumed at that level.At the highest semantic level, the meaning of aninput utterance is represented as an expression of theEng/ish-oriented Formal Language (EFL).
The con-stants of EFL correspond to the descriptive terms of3BBN's Siren Language System uses a higher-o~er intensienellogic hased on Church's iaffC.3~Pcak:ulus, comDining fe~oJre6 fromPHLIQA's logical language \[5\] with Montague'$ Intensionel Logic \[6\].English.
A feature of EFL which is both unusual andimportant, is the fact that descriptive constants areallowed to be ambiguous.
Within each syntactic cats-gory, every word is represented in EFL by a singledescriptive constant, no matter how many senses theword may have.
An EFL expression can thus be seenas an expression schema, where every constant canbe expanded out in a possibly large number of dif-ferent ways.
(See \[5\] for details on the model theoryof such a logic.
)The ambiguity of EFL follows from its domain-independence.
All descriptive words of a language arepolysernous, and only when used in the context of aparticular subject domain do they acquire a singleprecise meaning - a meaning which cannot be articu-lated independently of that subject domain.
Evenwithin one subject domain, many words have a rangeof different meanings.
Joint representations for suchsets of possible expansions are computationaJly ad-vantageous; and when the range of possibilities isdefined in an open-ended way, they are even neces-sary.
Such cases occur when we attempt to accountfor the interpretation of metonymy, metaphor andnominal compounds \[12\], or the interpretation of mul-tilevel plural noun phrases \[11\].The logical language used at the domain-dependent level of representation is called the WorldMode/Language (WML).
This is an unambiguous lan-guage, with an ordinary model-theoretic nterpretation.Its constants are chosen to correspond to the con-cepts which cons~tute the domain of discourse.
4We can illustrate the distinction between EFL andWML by means of an example involving relationalnoiJns.
Compare (4) and (5) below.
Sentence (4) willusually be translated into something like (4a): s(4) "John has a house in Hawaii.
"(4a) 3 he {he HOUSES/IN(h,HAWAII)}:HA VE(JOHN, h)Now consider (5) instead; a single-level architecturewould have to analyse this sentence as (5b) ratherthan (Sa), since (5b) is the representation one wouldprefer to end up with.
(5) "Frederick has a speed of 15 knots.
"(Sa) "~ c ~ {c e SPEEDS/ OF(c, amount(15, KNOTS))}:HA VE(FREDERICK, c)4To provide a smooth interface with underlying application sys-tems, there is a third level of semantic interpretation.
The languageused at this level is called the Data Base Language (DBL).
Itsconstants tand for the fites and attributes of the _,~tP _t'.,~e_ \[o beaccessed, and the avaiiable graphics ystem opemUons and theirparameters.SAccommoda~ng discourse anaphore may motivate a differenttreatment ofthe indefinite noun phrase, repre~mting itssemantics bya Skelem-constant ora similer device, rather than by the traditionalexistential quantifier.
For the present discussion we may ignore thisissue.2?
(Sb) F-SPEED(FREDERICK).
amount(15, KNOTS)In a multilevel semantics architecture, however,one would prefer to maintain a completely uniform firststage in the semantic interpretation process, where(5) would be treated exactly as (4), and therefore beanalyzed as (5a).
By applying appropriate EFL-to-WML translation rules, the EFL expression (5a) wouldthen be transformed into the WML expression (5b).Taking natural language at semantic face value thussimplifies the process of creating an initial meaningrepresentation.
The remaining question then is,whether one can in fact write EFL-to-WML translationrules which yield the desired results.
This is the ques-tion we will come back to in section 4.
In theremainder of the present section, we first give somemore detail on the general properties of the translationrules and the logical languages.The interpretive rules which map syntactic struc-tures onto EFL expressions are compositional, i.e.,they correspond in a direct way to the syntactic ruleswhich define the legal input strings.
There is amethodological reason for this emphasis on com-positionality: it makes it possible to guarantee that allpossible combinations between syntactic rules are infact covered by the interpretive rules, and to minimizesurprises about the way the rules interact.
Similarconsiderations apply when we think about the defini-tion of the EFL-to-WML translation: we wish toguarantee that the WML translations of every EFLexpression are defined in an effectively computableway, and that the different rules which togetherspecify the translation interact in a predictable lash-ion.
This is achieved by specifying the EFL-to-WMLtranslation using strictly Ioca/rules: rules operatingonly on constants, which specify for every EFt.
con-slant the WML expressions that it translates into.Translation by means of local rules, which expandconstants into complex expressions, tends to createfairly large and complicated formulas.
The result ofthe EFL-to-WML translation is therefore processed bya logical simplification module; this keeps formulasfrom becoming too unwieldy to handle and impossibleto evaluate.Local rules by themselves do not specify whatcombinations between them will lead to legitimateresults.
Since the rules can be applied independentlyof each other, we need a separate mechanism forchecking the meaningfulness of their combined opera-lion.
This mechanism is the semantic type system.EFL, WML and DBL are typed languages.
Thismeans that for every expression of these languages,a semantic type is defined.
The denotation of an ex-pression is guaranteed to be a member of the setdenoted by its type.
In WML, for instance,FREDERICK has the type SHIPS which denotes theset of all ships; GUAM and INDIAN-OCEAN have thetype LOCATIONS which denotes the set of all loca-tions; CARRIERS and SHIPS both have the typeSETS(SHIPS) which denotes the powerset of the setof all ships; F-SPEED has the typeFUNC TIONS(U(SHIPS, PLANES, LAND-VEHICLES),AMOUNTS(SPEED.UNITS)),which denotes the set of functions whose domain isthe union of the sets of ships, of planes and of landvehicles, and whose range is the set of amount-expressions whose units are members of the set ofspeed-units.Given the types of the constants occurring in it,the type of a complex expression is determined byformal rules.
For instance, the expressionF-SPEED(FREDERICK) would have the typeAMOUNTS(SPEED-UNITS).
The rules which definethe types of complex expressions also define when anexpression does not have a legitimate type, and istherefore not considered to be a bona fide member ofthe language.
For instance, F-SPEED(GUAM) doesnot have a legitimate type, because the type-computation rule for function-application expressionsrequires that the type of the argument not be disjointwith the domain of the function.The semantic type constraints make it possible toexpress the possible interpretations of ambiguousEFL constants by means of local translation rules,without running the danger of creadng spurious non-sensical combinations.
For instance, if "Guam" werethe name of a ship as well as the name of a location,there could be one EFL constant GUAM.EFL withtwo WML-expansions: GUAM-LOC with typeLOCATIONS and GUAM-SHIP with type SHIPS.
Ap-plying the EFL-to-WML rules toF-SPEED(GUAM-EFL) would nevertheless yield onlyone result, since the other combination would bedeemed illegitimate.In the next section we show how relational noundenotations and EFL-to-WML translations may bechosen in such a way that sentences involving rela-tional nouns after an initially uniform treatment end upwith plausible truth conditions - so that, for instance,(5) above can be initially analyzed as (5a) and thentranslated into (5b) in a principled way.4 MULT ILEVEL  SEMANTICS  FORRELAT IONAL NOUNSThe treatment we propose is based on a simple,yet powerful idea: analyse a relational noun as denot-ing the extension of the corresponding relation R (i.e.,the set of pairs <x,y> such that R(x,y)), and allowpredicates to apply not only to individuals but also tosuch pairs.
6As an example, consider again the phrase"Peter's sisters."
that we discussed in section 1above, in the treatment we propose, this phrasewould get the EFL analysis (6a).eTerminoiogy: We assume directed relation~ If <x.y> isa pair in arelation-extension, wecall x the argument and y the value.28(6) "Peter's sisters"(6a) {x ~ R-SISTER / POSSESS(PETER,x)},where R-SISTER, with the type 7U(MALES, FEMALES) X FEMALES,denotes the extension of the sister-relation, andwhere POSSESS has as one of its types:FUNCTIONS ((U(MALES, FEMALES) X FEMALES),TRUTHVALUES).
(6a) can be transformed into a plausible expressionfor (6) by applying the translation rule:POSSESS ,,> ('A.
u,v: u =v\[l\])where u has type THINGS and v has type THINGS XTHINGS.
Applying this rule to (6a) yields after~reduction:(6b) {x e R-SISTER / PETER ,, x\[l\]},which is equivalent o:(6c) {u,v / u = PETER & R-SISTER(u,v)}Thus, we see that by allowing the semantic trans-lation of "Peter's'to select over pairs consisting of aperson and the sister of that person, we can end upwith a representation of "Peter's sisters" which comesclose to having the right denotation: it denotes thecorrect set of persons, but they are still paired up withPeter.
This "extra information" is of course a problem.For instance, "Peter's sisters are Mary's aunts."
as-serts the equality of two sets of persons, not two setsof pairs of parsons.it turns out that we have two distinct cases to dealwith: to account for the interaction between a rela-tional noun and the phrases which indicate its ar-guments and values, we would like to treat it asdenoting a relation-extension; but to account for itsinteraction with everything else, we would like to treatit as denoting a set of individuals.
In order to make therelational treatment yield the right results, we mustassume that part of the meaning of ordinary descrip-tive predicates is an implicit projection-operator, whichprojects tuples onto their value-elements.
This is thesolution we adopt.
We formalize it by means of ameaning-postulate schema which applies to averyfunction F which is not among a small number of ex-plicitly noted exceptions: V x,y: F(x) =, F(<y,x>)The copula "be" is not an excep~on to this mean-ing postulate schema: it operates on values ratherthan relation-elements.
This is the reason why "John"is not available as an argument for "brother" in (2ac)above ('Some punks of John's are brothers."
"Somebrothers are John's')We shall now consider the actual EFL-to-WML7Notation: A X B denotes the set of pairs <x.y> such that x is inthe denotation of A and y is in the denotation of B.translation rules which handle the relational nouns ina little more detail.
The EFL relations have manydifferent translations into WML; which ones arerelevant in a given case, is decided by considering thesemantic types of the arguments to which they areapplied.
Consider again, for example, the part of theEFL-to-WML translation rules that deals with the inter-pretation of the possessive relation as specifying arelational argument, as in "Peter's sister', "Frederick'sspeed':.POSSESS -> ~.
u,v: u ,, v\[l\])where u has type THINGS and v has type THINGS XTHINGS.
Being a local translation rule, this rule couldbe applied to any occurrence of POSSESS in an EFLformula.
However, many such applications would giverise to semantically anomalous WML formulas (withnecessarily denotationless sub-expressions) whichare filtered out if there are any other non-anomalousinterpretations.
For instance, the above rule forPOSSESS would yield an anomalous expression ifapplied to the representation of "Peter's cars', be-cause the EFL constant CARS does not denote a setof pairs but a set of individual entities.
It would alsoyield an anomalous expression if applied to "The USSFrsderick's sisters', because the type of the EFL con-stant FREDERICK, which is SHIPS, is disjoint with theargument type of R-SISTER, which isU(MALES, FEMALES).To avoid spurious generation of anomalous ex-pressions, the semantic types of the arguments of anEFL function or EFL relation are checked before theEFL-to-WML rule for that function or relation is ap-plied.
For instance, the above rule for POSSESS willonly be applied to an expression-of the formPOSSESS(A,B), if A and B have types ??
and ~ suchthat3P, Q: f J , , PXQ & NON-EMPTY(atoP).As noted above, the interdefinability which existsbetween "have; "of', the genitive, and "wi/h', whenthey are used, for instance, in reference to ownership,carries over to their use for indicating the relation be-tween a relational noun and its argument.
Thus, theEFL representations of "of', "have; and "w/th" haveWML translations which, modulo the order of their ar-guments, are all identical to the rule for POSSESSdiscussed above.Function nouns, like "speed" and "length', inducea special interpretation on preposition phrases with"of'.
Such phrases can be used to connect the func-tion noun with its va/ue.
The treatment of relationalnouns sketched in the previous section can also ac-commodate this phenomenon, as we shall show now.Consider example (7) below, which is identical to(5) above.
It gets, in the treatment we propose, theEFL analysis (5a); this analysis is exactly analogousto the one that a syntactically similar sentence involv-ing a non-relational noun would get.
(Cf.
(4) and (4a).
)29(7) "Frederick has a speed of 15 knots.
"(7a) 3 s ?
{s e F-SPEED/ OF(s, amount(15, KNOTS))}:HA VE(FREDERICK, s)It is the task of the EFL-to-WML translafion rules todefine a transformation on EFL expressions whichwould turn (5a) into (5b) or a logically equivalent for-mula.
(7b) F-SPEED(FREDERICK).amount(15, KNOTS)To achieve the desired result, we need a rule forHAVE which is precisely analogous to the rule forPOSSESS above; and we need a rule for OFwhich isnot analogous to the rule for POSSESS above: "aspeed of 15 knots" is unlike "the speed of the USSFrederick" in that in the former case we must connectthe relation with its value rather than its argument.The rule for OFthat we need here is as follows:OF => ~.
u, v: u\[2\] =v)Note that different rules for one EFL constant cancoexist without conflict, because of the assumption oflexical ambiguity in EFL.
(In the general case, an EFLexpression will have several WML expansions for thisreason; often, many rule-applications will be blockedby semantic type-checking.
)This basic approach makes it possible to trans-form the EFL representation of any of the construc-tions shown in the examples in section 1 into reason-able World Model Language and Data Base Lan-guago formulations of the intended query.
We shallillustrate the process of applying the EFL-to-WMLtranslations and logical simplifications in a little moredetail while showing how to extend this treatment ofunction nouns which can take more than one ar-gument.
Such nouns interact with specific kinds ofpreposition phrases to pick up their arguments.
Forinstance: "Frederick's distance to Hawaii; "the dis.tance from Hawaii to Guam".
As an example, we willnow discuss the noun "readiness" as used in the U.S.Navy, which designates a two-argument function.
"Readiness; as used in the Navy baffle manage-merit domain, refers to the degree to which a vessel -to be more precise, a unit - is prepared for combat orfor a specific mission.
This degree is indicated on afive-point scale, using either c-codes (C1 to C5), ifreferring to combat readiness, or m-codes (M1 to M5),if referring to mission readiness.
The readiness forcombat can furthermore be the overall readiness (thedefault case) or the readiness with respect to one ofthe four resource readiness areas: personnel, train-ing, equipment or supplies.
Therefore,READINESS-OF is a function which maps two ar-guments, an element of SHIPS and an element ofREADINESS-AREAS, into READINESS-VALUES.Consider as an example the noun phrase "/hereadiness of Frederick: If we ignore for the momentthe effect of the "singular the" operator (see section5), its initial translation is:{x ?
READINESS-OF I OF(x, FREDERICK)}The parts of this expression are translated as follows.A logical transformation translates the function-constant READINESS-OF into the following equiv-alent expression, which will be convenient for sub-sequent processing:{x ?
domain (READINESS-OF)X range(READINESS-OF)/ READINESS-OF(x\[1\]), x\[2\]}which in its turn is equivalent to{x ~ (SHIPS X READINESS-AREAS)X READINESS.VALUES/ READINESS-OF(x\[ 1\]) = x\[2\]}The relation OF is eliminated in the EFL-to-WMLtransformation by a variant ~ of the translation rulementioned above.
It transformsOF(x, FREDERICK) into x\[1\]\[1\], FREDERICKThe net result of these logical and descriptive trans-formations is the following expression:{x ~ {z ?
(SHIPS X READINESS-AREAS)X READINESS-VALUES/ READINESS-OF(# 1\]) ,, z\[2\]}/ #1\]\[1\] ,, FREDERICK}This expression is then simplified to:{z G ({FREDERICK~ X READINESS-AREAS)X READINESS-VALUES/ READINESS-OF(z\[1\]), z\[2\]}which in its turn can be transformed into a logicallyequivalent but more optimally evaluable expressions:(for: {FREDERICK} X READINESF-AREAS,apply: ~ x: <x, READINESS-OF(x)>))(The actual system may apply further transformations(from WML into DBL), if it has to account for dis-crepancles between the database structure and thecanonical domain model, possibly followed by furtheroptJmizations at the DBL leveL)Other restrictions on "readiness; as in "the readi-ness o.n.n personnel', "the personnel readiness, or "ac l readiness', are handled in an analogous manner:ON -> ~u,v:  u\[l\]\[2\],,v)PREMOD ,,> (~ u,v: u\[l\]\[2\] ,, v)PREMOD ,,> ~ u,v: u\[2\] - v)where PREMOD is the EFL translation of the elidedrelation in a noun-noun compound.
(Note that if thesame preposition is used with different nouns to markdifferent argument places, we need a more elaboratenotation which identifies the arguments of a functionby labels rather than by position.
)*MuIti-an:jument func~ns are viewed as functions on n-tuplas.
OFspecifies, in this case, the first element of the argument-n-tuple.
?Notation: (for: A. Iplldy: F) denotas the beg contmning the resultsof all applications ofthe function F to elements of the set A.30Because of the essentially local character of thedescriptive transformations on HAVE, OF, ON,PREMOD, etc., and the completely general characterof the simplifications dealing with intersections of setsand tuples, a small number of transformations (a fewfor each EFL relation) covers a wide variety of expres-sions.5 IMPLICIT ARGUMENTS.One or more of the arguments of a relation maybe unspecified in the input sentence, while the intentof the utterance is nevertheless that a particular ar-gument should be filled in.
The present section dis-cusses briefly how this issue can be dealt with duringa phase of semantic processing which follows theEFL-to-WML translation.The most important case arises from the usa ofdefinite descriptions in the English input sentence.The phrase *the readiness of Frederick", for instance,leads to an expression which has the operator "the"wrapped around the expression which represents"readiness(as) of Frederick'.
"the" is a pragmaticoperator, which selects the single most salient ele-ment out of the set that it operates on.Where the expression representing "readiness ofFrederick on personnel" would denote a set contain-ing exactly one tuple, the expression representing"readiness of Frederick" denotes a set containing anumber of different tuples: ones with EQUIPMENT,PERSONNEL, OVERALL, etc., filled in as the secondargument, l=timinating the "the" operator consists inaccessing a Discourse Model to find out which of thefillers of the second argument place is contextuallymost accessible.
(We assume that available discoursereferents are stored at every level of embedding in arecursive model of discourse surface structure, suchas \[9\]).
If none of the readiness areas were mentionedin an accessible discourse constituent, the systemdefaults to the "unmarked" readiness area, i.e.,OVERALLPlural definite noun phrases are treated in asimilar fashion.
For instance, "the readineesas ofFrederick" leads to an expression in which a prag-matic operator selects the contextually salient multipleelement subset of the tuples in the extension ofREADINESS-OF which have FREDERICK as a firstargument.
In this case, if no particular subset of thereadiness areas can be construed as a discoursereferent, the system defaults to the assumption thathere the overall readiness plus the four resourcereadinesses are intended.
(Another possibility beingthe reference to the ship's readiness history:, a se-quence of past, current and projected futurereadinesses.
)6 RELATION EXTENSIONS ASANSWERS.The decision to treat relational nouns as denotingrelation extensions has an immediate consequence,of some practical importance for question-answeringsystems, concerning the way in which wh-questionsinvolving relational nouns are answered.
For ex-ample, the request "List the speeds of the ships inthe Indian Ocean."
could be answered in three ways,of ascending informativeness: 1) with a set of speedvalues (possibly of smaller cardinality then the set ofships in the Indian Ocean) 2) with a bag of speedvalues (of the same cardinality as the set of ships)and 3) with a set of <ship, speed> ordered pairs, suchthat each ship is paired off with its speed.Clearly, 3) is most likely to be the desiredresponse (although it is possible to envision situationswhere reponses 1) and 2) are desired).
One cannotobtain this response, however, if the semantic trans-lation of the noun phrase "the speeds of the ships inthe Indian Ocean" does not retain the information ofwhich speed goes with which ship.
An important ad-vantage of our approach to the relational nounproblem is that it preserves this information, making 3)the normal reponse and 1 ) and 2) derivable from it.This may be compared to the "proceduralsemantics" approach to this same problem, as foundin the work on LUNAR \[14\].
In this work, meaning isregarded as procedural in nature, and quantificationsare represented in terms of nested iterations.
Therequest "List the speeds of the ships in the In.anOcean'would be represented as:(FOIt ~ .L  X / slrrps: (n l  X ZNDT.3UI-OCLIkIB); (~RZa'Jr (s~mm x) ) )where the action of this representation would be toiterate over the class SHIPS, for each memberchecking to see if it is IN the INDIAN.OCEAN, and ifso, printing its speed.
The PRINT operator is made"smart" enough to detect the occurrence of the freevadable in its argument and to add in a printout thevalue of this variable for each iteration.Note that while this representation provides for thetuple response (3), and perhaps, if the "smartness" ismade optional, for the bag response (2), the setresponse (1) would seem out of reach.
In contrast,the approach this paper presents allows for all three,by generating as a default response the tuple set, andthen optionally "projecting" on its second column.7 CONCLUSIONRelational nouns are of primary importance fornatural language interfaces to databases and expertsystems, since they are commonly used to refer todatabase relations and to arithmetical functions.
Thispaper has presented a treatment of relational nounswhich manages to maintain uniformity and generality31at the level of syntactic analysis and initial semanticinterpretation.
This treatment has been incorporatedinto the semantic framework of BBN's Spoken Lan-guage System without writing additional LISP code.The semantic transformations necessary for the treat-ment are all carried out by general algorithms whichwere part of the pre-existing semantic framework.
Im-plementing the treatment consisted in writing descrip-tive (EFL to WML) translation specifications for theEFL relations involved with function nouns, and a fewdozen logical transformations to supplement he exist-ing set of simplifications.Further work on this topic should investigate howour perspective on relational nouns carries over to anaccount of the temporal and spatial modifiers that canbe used with any noun.
This will then make it possibleto explore its connections with the work on thesemantics of time-dependent nouns that has beendone in the Montague-tradition.
\[:3\] \[13\]ACKNOWLEDGMENTSWe thank David Stallard for important contribu-tions to the ideas presented here; Jan Landsbergenfor his share in the development of the conceptualframework that inspired this research; Damaris Ayusoand Scan Boisen for their assistance in applying ourresults to BBN's Spoken Language System.\[1\]\[2\]\[3\]\[4\]REFERENCESBronnenberg, W.J.H.J., H.C. Bunt, S.P.J.Landsbergen, R.J.H.
Scha, W.J.
Schoen-makers.
E.P.C.
van Uttsren.The Question Answering System PHLIQAI.In L. Bolc (editor), Natural Language QuestionAnswering Systems, pages 217-305.
Lon-don: MacMillan, 1980.Clark, Eve V.What's in a word?
On the Child's Acquisitionof Semantics in his First Language.In Cognitive Development and the Acquisitionof Language.
Academic Press, New York,1973.Janssen, Theo.Individual Concepts are Useful.In Fred Landman and Frank Veitman (editors),Varieties of Formal Semantics, pages171-192.
Foris Publications, Dordrecht,1984.Landman, Fred.Groups.Technical Report, Un.
of Massachusetts, Am-herst, MA, 1987.\[3\]\[6\]\[B\]\[lO\]\[11\]\[12\]\[13\]\[14\]\[is\]Landsbergen, S.P.J.
and R.J.H.
Scha.Formal Languages for Semantic Represen-tation.In S. Allen and J. Petofi (editors), Aspects ofAutomatized Text Processing.
Buske,Hamburg, 1979.Montague, Richard.The Proper Treatment of Quantification in Or-dinary English.In J. Hintikka, J. Moravcsik and P. Suppes(editors).
Approaches to NaturalLanguage.
Reidel, Dordrecht, 1973.Partee, Barbara H.CompositJonality.In Fred Landman and Frank Veltman (editors),Varieties of Formal Semantics.
ForisPublications, Dordrecht, 1984.Piaget, Jean.Judgment and Reasoning in the Child.Humanities Press, New York, 1928.Polanyi, Livia and Remko Scha.A Syntactic Approach to Discourse Semantics.In Proceedings of Coling 84, pages 413-419.Stanford University, Stanford, CA, July,1984.Scha, Remko J.H.Logical Foundations for Question Answering.Technical Report, Philips Research Labs,Eindhoven, M.S.
12.331, 1983.Scha, Remko and David Stallard.Multi-Level Plurals and Distributivity.In Proceedings of the 26th Annual Meeting ofthe ACL.
Buffalo, NY, 1988.Stallard, David.The Logical Analysis of LexicaI Ambiguity.In Proceedings of the 25th Annual Meeting ofthe ACL, Stanford University, Stanford,CA, July, 1 987.Thomason, Richmond H.Home is where the hearth is.In Contemporary Perspectives in thePhilosophy of Language.
Un.
of MinnesotaPress, Minneapolis, 1979.Woods, William A.Semantics and Quantification in Natural Lan-guage Question Answering.In M. Yovits (editor), Advances in Computers,pages 1-87.
Academic Press, 1978.Zoeppritz, Magdalena.The meaning of 'of' and 'have' in the USL sys-tem.AJCL 7(2):109-119, 1981.32
