A niche at the nexus: situating an NLP curriculum interdisciplinarilyDeryle LonsdaleDepartment of LinguisticsBrigham Young UniversityProvo, UT, USA, 84602lonz@byu.eduAbstractThis paper discusses the establishment andimplementation of a curriculum for teach-ing NLP.
At the core are two classes whichinvolve some theoretical background, ex-tensive hands-on experience with state-of-the-art technologies, and practical applica-tion in the form of an intensive program-ming project.
Issues involving interdis-ciplinary coordination, curriculum design,and challenges in teaching this disciplineare discussed.1 Institutional contextOur university initiated teaching of an NLP curricu-lum in 1998.
At the core are two classes whichboth include some theoretical background, extensivehands-on experience with state-of-the-art technolo-gies, and practical application in the form of an in-tensive programming project.
They are meant to becomparable in quality and scope to the best NLPcourses taught elsewhere.
Each semester that theseclasses were taught, the university administered ananonymous survey to students to gauge their sat-isfaction with the course and its contents.
Issuesinvolving interdisciplinary coordination, curriculumdesign, student satisfaction, and challenges unique toteaching this discipline are presented in this paper.First, though, necessary relevant background on thecampus and student demographics is presented.The university is one of the largest private univer-sities in the U.S. with an enrollment of about 30,000(with 2,000 graduate students).
Uncharacteristically,almost three-fourths of the student body speaks anon-English language.The College of Humanities houses Linguistics,Philosophy, and several language and literature de-partments.
Over 60 languages are taught within thecollege to students from all disciplines.
The Linguis-tics Department offers undergraduate and master de-grees (but no Ph.D.); over 150 undergraduate majorsare currently enrolled.
The richness of the linguisticenvironment in this college has a great bearing on theresults discussed in this paper.
The College of Physi-cal and Mathematical Sciences houses the ComputerScience (CS) Department (and several others teach-ing the ?hard?
sciences).
CS faculty strive to meetthe demands of flourishing undergrad and graduateprograms, and by necessity offer courses primarilyin the core areas of CS.Until 1998 there was almost no interactionbetween the CS and Linguistics departments, nocourses were taught in NLP or CL, and no researchbrought together students across college boundaries.Recently, however, the situation has improved.
Forseveral reasons, NLP classes were initiated at theuniversity in 1998: faculty hires into Linguisticsheld such interests, campus research projects neededstudents with this type of experience, an NLPinfrastructure was necessary for internal work of theuniversity and its sponsor, and the improvement ofjob prospects for Linguistics students was targeted.Creating learning opportunities in NLP would helpon all of these accounts.
This paper discusses thetwo new NLP classes that have been developed andtaught during the last four years in response to theseJuly 2002, pp.
46-53.
Association for Computational Linguistics.Natural Language Processing and Computational Linguistics, Philadelphia,Proceedings of the Workshop on Effective Tools and Methodologies for Teachingneeds.Both courses are referred to as NLP classes ratherthan as CL classes.
One commonly expressed dis-tinction between the two areas is that CL is more the-oretical and cognitive in orientation, whereas NLPhas a more engineering and applied focus1.
By thiscriterion the two classes discussed in this paper areclearly NLP-oriented.2 NLP for the humanitiesFor several years a program called Computers andthe Humanities (CHum) in the College of Human-ities has provided a computer background for hu-manities undergrads; this is necessary because CScourses have traditionally been unavailable to non-CS majors.
The CHum track can lead to a minorspecialization for any humanities degree and attractsstudents from all corners of the college.
The CHumofferings include a dozen classes meant to take stu-dents from the most basic contexts (computer end-user) through computer research tools use, basic pro-gramming, and programming projects.
More re-cently the programming language taught has beenVisual Basic (though see below).
In the last ten yearsenrollment in this popular program has increasedtenfold.Computer support for humanities students is laud-able.
Several labs are available, supplied with goodcomputational resources and adequate supervisionby student consultants.
Many students also chooseto use their own computers at home or at work tofulfill assignments.
Occasionally off-campus com-puter use for homework is not possible when propri-etary software or corpora acquired by the universityfor classroom use cannot be distributed off-campus.2.1 A parsing classIn recent years CHum course content has involvedincreasingly more language processing.
Twicenow, an intermediate-level class has been taught innatural-language parsing and grammar engineering.The class was taught the Unix and Emacs environ-ments, basic LISP programming, and lexicon andphrase-structure grammar development techniques;all of these were new areas of focus for a CHum1See, for example, Hans Uszkoreit?s website atwww.coli.uni-sb.de/~hansu/what is cl.html.class.
One text was used for this class (Allen,1995), and the associated parsers available from itsauthor were actively used by the students in theircoursework.
The textbook was followed ratherclosely and was quite accessible even to humanitiesstudents at this level.
Instruction involved two80-minute lecture classes per week and was given ina technologically enhanced (TELE) classroom fea-turing an ethernet-connected instructional computer,overhead LCD projection, multimedia devices, anda touch-sensitive projection wall (smart-screen).Lectures were delivered primarily via PowerPoint,running parsing engines, and accessing commercialand research project websites for materials anddiscussion.CHum parsing course evaluations were very goodto excellent (around 5.5-6.0 on a 7-point scale), ex-ceeding college and department means across-the-board in 30 categories.
Lowest (i.e.
average satis-faction) ratings went to the text book used.
The onlycritical comments mentioned a desire for more in-class lab time (a carry-over from prerequisite classeswhich are held in computer lab classrooms witha computer for every student).
Whereas in lowerclasses the focus was on learning particular program-ming constructs, the parsing class content was moreabstract and required less classroom-time program-ming demonstrations.2.2 A speech programming classThough the parsing class was popular and success-ful, it has not been taught in the last year and ahalf.
Instead, the intermediate-level CHum class hasfocused on teaching speech applications program-ming, again to meet infrastructure and pedagogicalneeds.
In this class2 the first third of the semester in-cludes intensive instruction in phonetics, phonology,and speech phenomena (using (J.M.Pickett, 1999)),as well as in TCL programming.
The balance ofthe semester involves instruction on manipulatinga speech toolkit, developing and leveraging associ-ated data resources (lexicons and corpora, phrase-structure grammars, discourse moves), and under-standing applications implementation (file formats,speaker adaptation, interaction, agents, v-commerce,speech translation).2See humanities.byu.edu/classes/chum387dl/homepage.html.Sample homework assignments include: running,writing, and debugging simple TCL programs; de-veloping and extending speech corpora and lexicons;manipulating speech data with toolkits (e.g.
PRAAT(Boersma and Weenink, 1996) and SFS3); extendinga simple recognizer; and creating new speech-baseddialogue scenarios.
For the latter tasks the OGItoolkit (Cole, 1999) has proven particularly helpful,and the students find the environment stimulating,interesting, and versatile enough for a wide array ofexperimentation from both the linguistics and toolkitprogramming sides.A final programming project is required; its de-liverables include a proposal, interim report onprogress, final presentation and class demonstration,and a final write-up including commented sourcecode and a paper discussing related work, the ap-proach taken, and results.
Sample final projects in-clude speech interfaces for ubiquitous task-specificaccess (e.g.
intelligent kitchen appliances, automo-bile navigation, and large XML-marked documentaccess), a call-center application for a dentist?s of-fice, and a spoken-language identifier.2.3 Future CHum prospectsComputers and the Humanities course offerings aredynamic and flexible, and more NLP-related contentis being offered beyond the parsing and speech tech-nologies classes already mentioned.
For example,currently an advanced seminar class is (for the firsttime) teaching XML and the annotation of linguisticdata.It should be noted that recent CHum efforts havebeen attracting CS students as well, who don?t cur-rently have an outlet for NLP-related coursework intheir home department.
This introduces a slight chal-lenge for the instructor since an asymmetry existsbetween humanities and CS students?
programmingabilities.
To date, though, this has not proved veryproblematic since the CS students were willing torely on their own initiative to apply classroom con-cepts to more complex programming projects thantheir humanities peers could attempt.
Presumably inthe future if this becomes a problem a speech classmight be offered in the CS department, or a in highersection in CHum.3See www.phon.ucl.ac.uk/resource/sfs/.An important and very recent development willensure further strengthening of NLP-related courseswithin the College of Humanities.
With the intro-duction of a new campus-wide interdisciplinary un-dergraduate minor in Computing and Information(CpIn), the CS department has secured several newtenure-track slots to be hosted externally by depart-ments across campus.
The College of Humani-ties has been allocated one of these slots, and thenew faculty member will be housed within the Lin-guistics Department.
More course offerings at theCS/Linguistics nexus will be possible in the near fu-ture as a result.
In turn, these classes will serve aselectives for CpIn students.3 An advanced NLP courseThe linchpin of the NLP curriculum is the advancedNLP course4.
Hosted in the Linguistics department,it also has been cross-listed as a CS course.
Itis intended primarily for graduate students, thoughit is open to advanced undergrads with requisitebackground.
Proficiency is assumed in at least oneprogramming language; in addition, a backgroundin algorithms, data structures, and some basic dis-crete math is also required.
Linguistics students andCHum students with a solid background in linguis-tics and good programming skills are accepted withthe instructor?s approval.3.1 Course goals and student demographicsThe course?s goals are: to teach how computationaltechniques are used successfully in various areas ofNLP; to demonstrate by hands-on experience how touse NLP tools in the performance of linguistically in-teresting tasks; to demonstrate the application of anovel, nontrivial approach to solving some aspect ofNLP-related computation; and to read, understand,and assess current research literature and trends inthe relevant areas.
The class is by design very broadin scope, trying to address as many areas of NLPas possible in a semester.
The breadth of coverageentails that the depth in any one area cannot be ad-dressed fully; still, each topic is addressed at somenontrivial level of detail.
The topics are sequencedin such a way as to build upon previously introducedtopics.
For example, units on part-of-speech tagging4See humanities.byu.edu/classes/ling581dl/homepage.html.and lexicons precede those on parsing, which in turnprecede those on speech understanding.The class has been taught four times so far, withan average of ten students per semester (plus inter-ested faculty who sat in on classes without regis-tering).
Each class had an equal three-way balanceof students from CS, Linguistics, and other areas ofcampus (physics, engineering, and even modern lan-guages).
Half of the students are undergrads andhalf are graduates.
Without exception, every studenthad knowledge of at least one non-English language.One of the challenges, but also unique opportunities,of this class is to bring their disparate backgroundstogether in class discussions.
For example class dis-cussion, homework assignments, and final projectsoften center around the students?
linguistic knowl-edge and their application of principles learned to theprocessing of non-English languages.3.2 Course contentMaterials: Class lectures, discussions, and demon-strations are based primarily on the content of twoNLP texts (Manning and Schu?tze, 1999; Cole et al,1997) and several supplementary readings from theWeb5.
The class is held thrice weekly in one-hoursessions; it too is held in a TELE room.
Each studentis required to ?adopt?
a lecture topic from the cur-riculum: researching intensively this particular field,preparing a lecture in consultation with the instruc-tor, and teaching the class.
Often students choose anarea that reflects the strengths of their background,and as a result their lectures, materials and discus-sions are of high quality.Coursework: Students are generally free to dotheir homework in any of the labs on campus oron their own machines elsewhere.
In some cases,however, this is not possible due to licensing con-straints on software needed for work in the course:several resources require that the data or programsonly be used on an on-campus computer licensed tothe CS and/or Linguistics departments.
For this rea-son a Unix server has been acquired by the Linguis-tics department and set up with the requisite softwareto act as a classwork project server.
Students canalso access the machine remotely to do their work5Particularly useful are researchers?
personal and projectpages worldwide, the ACL NLP/CL Universe, and the arXivComputation and Language archive.within these constraints.
Students from the CS de-partment have access to CS and Linguistics serverswhere class-related resources can be used.
Studentsalso have access to the campus supercomputer whennecessary for NLP projects, under the instructor?ssupervision.Sample non-trivialhands-on and programming as-signments are given weekly.
They include suchtopics as: work with various corpus manipulationand annotation tools, use of various POS taggersand their comparison (Brill, 1992; Tufis and Mason,1998), development of morphophonological rulesin PC-Kimmo (Antworth, 1990), understanding andmanipulating content from WordNet databases (Fell-baum, 1998), aligning bitext, using and evaluatinga machine translation system, developing a phrase-structure grammar for syntactic and then semanticchart parsing, experimenting with information re-trieval, working with a speech toolkit to develop asimple application, or developing knowledge for atext generation engine (Tomita and Nyberg, 1988).Tutorials are provided for for any necessary remedialwork that the student might need or desire in suchtopics as using the Emacs editor, using Unix shellscripts, or writing Perl or Tcl scripts.Final project: A final programming project isrequired, similar in scope to that described abovefor the humanities course: close coordination withthe instructor, meeting milestones, documenting anddemonstrating the final product, and producing awrite-up of the significance and contributions of theresult.
Of course, a much higher standard is requiredof these advanced students.
The student is free tochoose any relevant project, the programming lan-guage(s) to be used, and the theoretical approach tobe taken.
Sample final projects cover almost as widea range of topics as those covered in the curriculum6.Linguisticsstudentsoften focus on the programmaticdevelopment of knowledge sources whereas CS stu-dents tend to engineer large-scale integrations of sev-eral components in novel ways to address multi-faceted issues.
The most common tendency with allstudents is to scope their work a little too ambitiouslyat first; close consultation with the instructor is cru-cial throughout the process.
Teamwork is permitted,and often a Linguistics student will pair up with a CS6See humanities.byu.edu/classes/ling581dl/egnlpprojs.htm.one; this usually results in good knowledge and skilltransfer for both parties.Evaluations: A three-hour (non-programming)final exam is given which tests a knowledge of con-cepts, algorithms, tools, procedures, and approacheslearned throught the semester.
Class evaluation rat-ings by students have improved over time, fromvery good (5.1/7.0, first time offered) to exceptional(6.7/7.0, last semester).
The most frequent com-plaints concerned amount of background that thetextbook assumes, and the lack of a midterm exami-nation to help students gauge their progress.74 Other coursesThe infrastructure developed for teaching the twocourses mentioned above has also been successfullyapplied in other classes as well.
This section explainshow other classes have benefited from the NLP in-frastructure being put in place.A linguistics major undergrad survey course cov-ers all of the core areas of linguistics (phonet-ics, phonology, morphology, syntax, semantics, andpragmatics) as well as several application areas.Interestingly, one chapter of the textbook used inthis class even contains a very cursory overview ofcomputational linguistics (Klavans, 2001).
Severalalready-mentioned tools supporting the NLP classeshave also been used in the undergrad survey class: aspeech toolkit for sound wave manipulation, Word-Net for lexical semantics, and a morphology enginefor English.The Linguistics department offers a translationtheory and practice class, which traditionally attractsup to 40 students with advanced capabilities in asmany as 25 languages per class section.
With theNLP infrastructure recently developed, more techno-logical exercises have been added to the curriculuminvolving WordNet, bitext alignment, corpus andlexicography tools, software localization (l10n) andinternationalization (i18n), machine-assisted trans-lation, and machine translation systems (standaloneand web-based).Other Linguistics classes also have recently lever-aged the NLP infrastructure: a graduate seman-tics class uses WordNet, a grad phonology class7The instructor as a general rule does not give graduateclasses midterms; this is being rethought for the NLP class be-cause of student comment.works with a speech toolkit, a grad morphology classuses a morphology engine, and a language modelingseminar uses machine learning and other exemplar-based methods.
In the CS department, a series oftwo 90-minute lectures in l10n and i18n has beendeveloped and is regularly presented to the gradclass in human-computer interation.
Finally, sev-eral foreign-language classes outside of the Linguis-tics/CS area have used recently-assembled tools suchas corpora, part-of-speech taggers, and WordNets intheir own instruction and student assignments.5 Extracurricular opportunitiesAs with any field of endeavor, chances to apply NLPprinciples acquired in the classroom enrich greatly astudent?s learning experience and solidify the con-cepts taught.
Various outlets are provided on ourcampus for experiencing the field.5.1 Research opportunitiesSeveral research projects in both the Linguistics andCS departments welcome undergrad and graduatestudents.
Weekly meetings involve keeping abreastof current research literature, discussing project de-liverables, and practicing conference paper presen-tations.
Groups where NLP-related work is done fo-cus on: a data-driven, exemplar-based approach tolanguage modeling, integrating speech tools and dis-course engines for task-oriented language learning,extraction and integration of web-based documentcontent, technologies in human and machine trans-lation, and cognitive modeling of natural-languageprocessing.
Attendance is voluntary and no coursecredit is given, but generally participation in projectwork is enthusiastic and consistent, especially sincethe NLP class was initiated.One relevant change in the NLP offerings is wor-thy of note: at first, the advanced NLP class was of-fered in Winter semester, with many students treat-ing it like a capstone class in their last semester.They would then leave the school for further grad-uate work or employment.
Consequently the classwas recently moved from Winter to Fall, keeping thestudents?
experience on campus for at least anothersemester?s worth of project participation.The university sponsors a mechanism for fundingundergraduate research projects.
Proposals are re-viewed by faculty, and the very competitive programoffers cash awards to the winners, who are requiredto submit a written report synthesizing results ob-tained.
NLP students have had phenomenal successin winning these awards and have gained valuableexperience with such projects as: morphological en-gines for Cebuano and Farsi, cognitive modeling ofword-sense disambiguation, modeling task-orienteddiscourse structure, and developing exemplar-basedmachine translation.
One advantage for NLP stu-dents in this competition is that interdisciplinary re-search is more likely to win funding.5.2 Beyond the campusIn its short time, the NLP environment has also pro-vided several students with the requisite skills to beplaced in summer internships, most of them compet-itive and paid.
Students have been placed in an Euro-pean MT project, a U.S. industrial NLP research lab,another university?s language acquisition researchproject, and a defense-funded research institute.
Par-ticularly appealing to their sponsors was the combi-nation of proven foreign-language aptitudes with acomputational background and an understanding ofNLP techniques and tools.Students whose project work is promising areencouraged to present their work at conferences,and several have presented their work at local, na-tional, and international venues.
Particularly note-worthy projects have also served as the founda-tion for peer-reviewed conference papers, under-grad honors theses, and master?s theses.
Success-fully defended or ongoing theses in six departments(Linguistics, Spanish/Portuguese, Asian Languages,Language Acquisition, CS, and Physics) were initi-ated in the NLP class.6 Reflections on issuesNaturally, communication and cooperation acrossdepartment and college lines offers continual chal-lenges for an interdisciplinary NLP curriculum.Still, both sides recognize the unique linguistic skillspresent in our students and the need to developan environment fostering wider NLP expertise on-campus.
Students, for their part, are attracted to suchofferings and seem satisfied.6.1 NLP and CLOne as-yet unrealized goal is to develop and offera class in computational linguistics.
Since Linguis-tics doesn?t offer a Ph.D. degree, advanced grads arenot available to the program; current students typ-ically do not have, in this teacher?s estimation, ap-propriate background in computational complexity,algorithmic analysis, AI techniques, formal logic,math/stats, and formal linguistics to be adequatelyprepared for an intensive CL class.
To be sure, manystudents have a background in some of these areas,but not across a wide enough base to prove necessaryfor theoretical CL work.
This may change over time,if a Ph.D. program is adopted; in the meantime, theNLP courses do fill a necessary niche.Another promising recent development mighthelp stimulate progress in this area: a newly hiredCS faculty member with a computational linguisticsbackground will begin teaching in that departmentnext year.
Initially, it has been decided to offer twosomewhat complementary NLP classes.
The CSDepartment will offer one class, which will resem-ble the advanced class discussed above, includingusing that textbook.
The other class, hosted byLinguistics, will use a different text (Jurafsky andMartin, 2000) with its content focused more onthe lexicon, morphology, speech, semantics, anddeep parsing.
Overlap between the two courseswill be minimized as much as possible, with thegoal of broadening NLP content offerings.
Whetherstudents will be attracted to a two-course sequenceof NLP remains an open question.6.2 Resource issuesA few obstacles and difficulties have been experi-enced in spite of the overall positive aspects of im-plementing an NLP curriculum mentioned in this pa-per.
A few of these are sketched in this section.Texts: A frequent complaint from Linguistics (butnot CS) students enrolled in the advanced NLP classis that textbook discussions almost invariably focuson English.
Since these students have all studied lin-guistics intensively, including exposure to a large va-riety of language typologies and nontrivial issues oflanguage analysis and complexity, these discussionsseem overly narrow and simplistic in many cases.As mentioned earlier, classroom discussion can tosome extent elicit the wider-scope issues that interestthem.
Certainly the vast array of Web-published re-search findings also helps to fill this void.
Still, sev-eral students have voiced the desire for a comprehen-sive NLP textbook that would address typologicallydiverse issues.Support: One clear disadvantage to hosting anNLP class in the College of Humanities?
Linguis-tics Department is one of comparatively limited re-sources.
CS resources for coursework computers,research facilities, and student labs are noticeablysuperior.
Software acquisition and licensing proce-dures, resolution of networking issues, and computersupport are more problematic in a non-CS context onour campus.
This is primarily a problem for CS stu-dents, who occasionally chafe at the need to use non-CS computers for coursework.Tools: Tools accessibility is the greatest difficultyperceived by this author in trying to develop co-hesive and coherent course content.
With its ad-mittedly fast-paced progress, the field of NLP hasseen the development of a plethora of systems, tools,modules, and development environments for a widearray of tasks.
Keeping track of these products,and assessing their availability and appropriatenessfor student use, is a daunting task.
Several help-ful resources assist this teacher besides those alreadymentioned.
Listservs like LinguistList8, Corpora9,and LN10 notify subscribers of new NLP software.There are even a few hierarchically-structured meta-indexes for NLP tools: among others, the ACL Uni-verse (mentioned above), Colibri11, and especiallythe Natural Language Software Registry12.
Theserepositories, while helpful and greatly appreciated,tend to be spotty and idiosyncratic at best in theirconsideration of resources.
Certainly a more system-atic and comprehensive clearinghouse of NLP toolswould be a boon to educators and researchers, partic-ularly if its contents could be individually annotatedfor pedagogical applicability.8See www.linguistlist.org.9See www.hit.uib.no/corpora/.10See www.biomath.jussieu.fr/LN/.11See colibri.let.uu.nl/.12See registry.dfki.de.6.3 Teacher backgroundIn a recent analysis of several years?
worth of linguis-tics job announcements, Richard Sproat offered in-teresting conclusions relevant to employment in lin-guistics13.
He notes ?a prejudice that linguists arenot typically well trained in computational skills?,and the fact that ?relatively few linguistics programshave got serious about providing their students withextensive computational training.?
In most currentCL courses, he claims, ?there is little emphasis onpractical applications?.
If these observations hold,the NLP offerings discussed in this paper serve avaluable purpose in providing Linguistics (and CS)students much-needed practical experience in lan-guage computation technologies.Sproat also detects a trend in linguistics showing?little effort to hire faculty members who have hadextensive industrial experience?, whereas in CS suchexperience is often desired, valued, and sought.
Heconcludes that: ?Departments thinking of buildingup [CL] programs would be well advised to considerpeople with industrial experience.?
The present au-thor?s 11-year experience in the NLP industry be-fore pursuing graduate CL studies has proven invalu-able in administering an NLP curriculum, facilitat-ing such tasks as: advising students in their pro-gramming projects; directing them in job searchesand internship opportunities; helping them proposeand establish research agendas; collaborating withcommercial and governmental sponsors; and deal-ing with issues of software licensing and technologytransfer.7 ConclusionOur experience has shown that a small core of NLPclasses housed in a Linguistics department and serv-ing well-prepared students from other fields cangreatly enhance the research and pedagogical infras-tructure across many disciplines on-campus, whilealso preparing students for further grad studies orcareers in the industrial NLP sector.
Though chal-lenges and issues remain, NLP courses are enjoyinggood enrollment, high satisfaction ratings, and ap-preciable learning outcomes.13See www.research.att.com/~rws/lingjobs.ReferencesJames Allen.
1995.
Natural Language Understanding.Benjamin/Cummings Publishing.Evan Antworth.
1990.
PC-KIMMO: a two-level proec-ssor for morphological analysis.
Number 16 in Oc-casional Publications in Academic Computing.
Sum-mer Institute of Linguistics, Dallas, TX.
See alsowww.sil.org/pckimmo/.P.
Boersma and D. J. M. Weenink.
1996.
Praat, a systemfor doing phonetics by computer, version 3.4.
Techni-cal Report 132, Institute of Phonetic Sciences, Amster-dam.
See also fonsg3.let.uva.nl/praat/.Eric Brill.
1992.
A simple rule-based part of speech tag-ger.
In Proceedings of the DARPA speech and naturallanguage workshop.R.
Cole, J. Mariani, H. Uszkoreit, A. Zaenen, and V. Zue,editors.
1997.
Survey of the State of the Art in HumanLanguage Technology.
Cambridge University Press.Ron Cole.
1999.
Tools for research and education inspeech science.
In Proceedings of the InternationalConference of Phonetic Sciences, San Francisco, CA,August.
See also cslu.cse.ogi.edu/toolkit/index.html.Christiane Fellbaum.
1998.
WordNet: An electronic lex-ical database.
MIT Press, Cambridge, MA.
See alsowww.cogsci.princeton.edu/~wn/.J.M.Pickett.
1999.
The Acoustics of Speech Communica-tion.
Allyn & Bacon.Daniel Jurafsky and James H. Martin.
2000.
Speechand Language Processing: An Introduction to NaturalLanguage Processing, Computational Linguistics, andSpeech Recognition.
Prentice-Hall.Judith Klavans.
2001.
Computational linguistics.
InWilliam O?Grady, John Archibald, Mark Aronoff, andJanie Rees-Miller, editors, Contemporary Linguistics:an Introduction.
Bedford/St.
Martin?s.Christopher D. Manning and Hinrich Schu?tze.
1999.Foundations of Statistical Natural Language Process-ing.
The MIT Press.Masaru Tomita and Eric H. Nyberg, 3rd.
1988.
Gener-ation Kit and Transformation Kit: Version 3.2 user?smanual.
Technical Report CMU-CMT-88-MEMO,Carnegie Mellon Center for Machine Translation, Oc-tober.Dan Tufis and Oliver Mason.
1998.
Tagging Romaniantexts: a case study for QTAG, a language-independentprobabilistic tagger.
In Proceedings of the First Inter-national Conference on Language Resources and Eval-uation (LREC), Grenada, Spain, May.
