INTRODUCTIONFor severa l  years  we have been invo lved  a t  MITRE in  the  deve lop-ment o f  an on- l ine  text -p rocess ing  sys tem in tended fo r  use  by in fo r -mat ion  ana lys ts  in  the  es tab l i shment  and man ipu la t ion  o f  the i r  ownpersona l  f i l es .
Our p r imary  mot ivat ion  in  th i s  program as in  i t sp redecessor  has  been to incorporate  l ingu is t i ca l l y  based techn iques  forana lyz ing  the  in fo rmat ion  content  of  langusge  in  what we hope w i l l  bepract i ca l ,  use fu l  sys tems.The prev ious  program, the  "Eng l i sh  P reprocessor  P ro jec t , "  wasd i rec ted  toward deve lop ing  a capab i l i ty  that  would a l low fo rmat ted  dataf i l es  to  be accessed  by natura l  language quer ies  (Walker,  1965).
Atthe  t ime we began i t  in  1961, complex data  re t r ieva l  requests  cou ld  befo~la ted  on ly  by programmers who were in t imate ly  fami l ia r  w i th  thes t ruc ture  Of the  data  base  in  quest ion .
Bo ls te red  by the  conv ic t ionthat  computer -based  sys tems shou ld  be respons ive  d i rec t ly  to  the  peoplewho were us ing  the i r  p roducts ,  we des igned  such  a sys tem,  concent ra t ingour  e f fo r ts  in  par t i cu la r  on i t s  " f ront  end .
"Our in i t ia l  goa l  was the  development o f  a syntact i c  ana lys i sp rocedure  that  would process  both  the  query  sentences  and dec la ra t ivesentences  which cou ld  be used to update  the  data  base  i t se l f .
(Wehoped a l so  to  be ab le  to  generate  we l l - fo rmed sentences  as  responses  toa query . )
S ince  our l ingu is t i c  insp i ra t ion  was (and s t i l l  i s )  Chomsky'st rans for~t iona l  approach (Chomsky, 1957, 1965~ etc . )
,  our product  was asyntact i c  ana lys i s  p rocedure  fo r  t rans format iona l  gran~nars (Zwicky,e t  a l .
,  1965; Walker ,  e t  a l .
,  1966).-2-During the time it took to develop the MITRE Analysis Procedure,other groups had established English-llke query languages for dataretrieval systems that did provide reasonable access for unso-phisticated users.
However, during this period there was not a corre-sponding increase in complexity of the techniques for file manipulationwhich would have Jus t i f ied  fu r ther  work on natura l  language ana lyzersfor  input  p rocess ing .
Consequent ly,  we sh i f ted  the emphasis of ourprogram to work w i th  text  f i l es .
( I t  i s  appropr ia te  to remark here ,  parenthet ica l ly ,  that  some newapproaches to f i l e  access  and data base manipu lat ion  hold cons lderab lepromise for  sus ta in ing  the use of natura l  language input  in  datare t r leva l .
I f ind par t l cu la r ly  in teres t ing  in re la t lon  to our o r lg lna lapproach the recent  work of Woods (1968), Green and Raphael (196g), andBecket (1969), but for  more genera l  re ference ,  see the survey by glmmons(1969) on "Natura l  Language Quest ion Answering Systems : 1969.
")Our work in  text -process ing  began as an at tempt  to  see how the NITREAna lys l s  Procedure could be used pract i ca l ly  fo r  ana lyz ing  textua l  data.We recognized then (and s t i l l  do) that  no grammar has been wr i t ten  w i th inany l ingu ls t l c  theory ,  t rans format iona l  or o therwise ,  which i s  adequatefor  p rocess ing  random text  passages automat ica l ly .
Of course ,  onlyrecently have these theories begun to inspire semantic research that isat all encouraging (e.g., for transformational theory: Fillmore, 1968;McCawley, 1968; Bierwisch, 1967).
Consequently, our interest has beenin designing an on-line system where the user could control the materialto be analyzed, simplifying it where necessary, could supplement the-3-too ls  where that  was poss ib le ,  and, perhaps most impor tant ,  cou ldin terpret  the resu l t s  in  the context  of h i s  own problems even thoughthe characterizations of these results might not be wholly justifiedtheoretically.Our focus on personal files is a result of these considerations.We want to provide for a person working with textual data (who will bereferred to hereafter as an "analyst") a set of techniques that willallow him to construct and manipulate his own files.
Our intent is todesign these techniques so that they have as much theoretical integrityas possible and so that eventually they will satisfy many analystsworking on different kinds of problems.
We hope that our text-processingsystem will provide a test-bed within which theoretical hypotheses canbe tested and that through studies of the experience of a number ofanalysts we can arrive at procedures which have general value andvalidity.-4-THE TEXT-PROCESSING SYSTEMOVERVIEWThe text-processing system is being implemented on an IBM 360/50computer with IBM 2260 display consoles.
It is programmed in TREET(Haines, 1969), a list processing language and system which operatesunder OS.
In its present form there are three major components.
Thefirst, chronologically as well as in sophistication, is a ling~isticallybased procedure called SAFARI.
It allows surmnary statements abouttextual information content to be stored and retrieved in sentence formso that the syntactic relations among the lexical items are representeddirectly in the data base.The second component of the text-processing system is a set ofprocedures for editing textual materials.
In addition to inserting anddeleting data, the analyst can select or annotate lines, paragraphs,?
or whole selections to create files and subfiles for temporary orlong-term storage or for report generation.The third component of the text-processing system is a set ofprocedures for text-searching.
Two methods have been provided to findsimple patterns of characters, strings, words, or phrases.
In thefirst, intended for smaller corpuses, the text is scanned directly.The other makes use of an index of the words in a text and is much moreefficient for larger files.
In both methods, synonym sets, which canbe set up or modif ied on-line, allow for more complex search specifica-tions.These three kinds of text-processing capabilities wil l  be availableto the analyst as he sits in front of his display console.
They-5-constitute alternatives responsive to certain of his needs.
We areinterested in introducing additional options to provide a broader rangeof capabilities, but the present components are still being modifiedand refined to increase their efficiency and to provide for moreeffective interfaces between them.
The brief descriptions that followare intended only to indicate in somewhat more detail the operation ofeach component.SAFARI--A LINGUISTICALLY BASED PROCEDUREThe first component of the text-processing system, SAFARI, was adirect outgrowth of our work with the MITRE Analysis Procedure.
Weadapted the Procedure so an analyst could use it to code statementsabout information from his text files or to process queries forsearching in files consisting of analyzed statements.
For input ananalyst can scan through a text on a display scope and can select orprepare sentences which sun~arize items of interest.
These sentencesare analyzed syntactically and stored in the data base as tree structures.Questions about the data base, analyzed similarly, are matched againstthe stored structures.
Relevant statements are retrieved and presentedto the analyst, who also may recover the original text passages fromwhich they were derived.The SAFARI procedure was progranlned initially for the I\]~M7030(Stretch) computer; that version has been described elsewhere (Walker,1967).
SAFARI is now implemented on the IBM 3#0/50 computer with IBM2260 displays.
A detailed discussion of the programs in this newversion (except for the on-line interface) can be found in Norton (1968);portions of the present and subsequent descriptions are adapted fromthat report and from other project reports.-6-The procedure itself consists of four stages: (i) lexical cate-gorization together with morphological analysis of each word of theinput sentence; (2) context-free parsing of the resulting string oflexical categorizations; (3) application of transformational (reversal)rules to the set of surface structures produced, which, in addition torejecting inappropriate parsings and deriving the proper base structures,also standardizes the resulting tree in a canonical format; (4) (a) fordeclarative sentences, storage of the canonical representations in thedata base; (b) for interrogative sentences, searching in the data basefor structures matching their own canonical representations.The lexicon provides for a word or stem a list of its categoriza-tions, each of which contains a category label and a feature-value pair.Words not found in the lexicon are processed by a morphological analysisprocedure into stems and affixes.
Analysis rules determine possiblestem-affix structures.
A structure is acceptable if the stem is in thelexicon and its combination with that affix is in accord with a set ofmorpheme-combinatorial rules.
Redundancy rules are applied to thestructures to assign by default feature-value pairs for certain other-wise unmarked structures (e.g., nouns not marked plural are singular,nouns marked '%uman plus" are also "animate plus").
(Additionalinformation about the morphological analysis procedure and about itslinguistic basis can be found in Chapin and Norton (1968) and in Chapin(1967).
)The parser is a bottom-to-top algorithm which produces for thestring of (lists of) lexical categories (excluding the featureinformation) all  of the possible surface structures according to a-7-.
.
.
.
:~cu lar  se t  of  context - f ree  phrase  s t ructure  ru les .
I t  i s  essent la l l y~ho one in  the  MITRE Ana lys i s  P rocedure ,  a l though the  imp lementat ion  i smore e f f i c ient .Be fore  the  t rans format iona l  ru les  a re  app l ied  to  the  set  o f  sur facet rees  fo r  the  sentence ,  the  feature -va lue  pa i rs  p rov ided  by the  lex ica lana lys i s  a re  at tached to  the  appropr ia te  te rmina l  nodes .
The t rans for -mat ions  operate  substant ia l l y  as  in  the  MITRE Ana lys i s  P rocedure  toproduce  base  t rees ,  except  that  here  feature  anomal ies  a l so  prov idegrounds  fo r  re jec t ion ,  thus  reduc ing  the  number o f  spur ious  ambigu i t ies .In add i t ion~ spec la l  t rans format ions  have  been added to  conver t  the  bases t ructure  in to  a canon ica l  form in  o rder  to  fac i l l ta te  search ing .Dec larat ive  sentences~ processed  in  the  manner descr ibed ,  a re  s toredin the data base as trees.
Each tree is cataloged under those words(stems) that appear as terminal nodes under certain grarmmatlcal categorylabels, the choice of which can be specified (and easily changed) by theanalyst.
Subordinate clauses are stored so that they can be searchedseparately, but with a pointer to the full tree in which they appear.Questions, after processing, are matched against trees in the data base.The search is restricted to those trees which contain words appearing asterminal nodes under particular grammatical categories in the querysentence.
Each node of the query is compared with the correspondingnode of each tree in the recovered set.
A comparison is successful ifthe two nodes are identical, if the node in the query is a question word,or if both nodes belong to the same equlvalence class (class membershipcan be defined by the analyst).
Feature agreement also can be requiredfor nodes whose values are on a special list (also under the analyst'scontrol).-8 -Conjo ined phrases  are  handled so that  the  order  o f  occur rence  w i th in  a sen-tence  i s  immater ia l .
The quest ion  matches  a s tored  s ta tement  i f  a l l  o fthe  nodes  in  the  query  compare  appropr ia te ly  w i th  those  in  the  t ree  fo rthat  s ta tement .
Consequent ly ,  i t  i s  poss ib le  fo r  the  t rees  in  the  database  to  have  add i t iona l  s t ructure  not  in  the  quest ion .
S ince  thepar t i cu la r  match ing  a lgor i thm app l ies  recnrs ive ly  f rom le f t  to  r ight ,nodes  in  the  s tored  t rees  might  have  add i t iona l  daughters  o r  r ights i s te rs .
Some o f  the  fo rmat t ing  t rans format ions  ment ioned above  i n t ro -duce  opt iona l  nodes  w i th  nu l l  va lues  to  guarantee  that  a l l  poss lb lele f t  s i s te rs  w i l l  be  present  in  a t ree .The grammat ica l  ru les  inc luded in  the  cur rent  vers ion  o f  SAFARIa re  not  o f  par t i cu la r  l ingu is t i c  in teres t .
Fur thermore ,  a l though theywere  der ived  on the  bas is  o f  a par t i cu la r  text ' corpus ,  they  have  notbeen used enough to establish their utility even for that data base.The granmmr was written primarily for checking out the system, althoughit is worth investigating further to determine its practical value.It was written as a recognition graummr directly, rather than firstdefining a subset of sentences explicitly by generative rules and thenestablishing the corresponding set for the syntactic analysis procedure.The granunar allows statements and questions to be written, using simplerelative clauses, adverbial and adjectival prepositional phrases, anda variety of conjoined constructions.
The inclusion of a small numberof syntactic features (inherent features on nouns, strict subcategoriza-tion and selectional features on verbs) has enabled us to assess theirusefulness in the analysis procedure.
By postponing the testing ofcontext restrictions until the transformational rules have applied, alarge amount of structural ambiguity is eliminated from the surface parsing.-9-The programs within the linguistically motivated parts of SAFARI(that is, the morphological analysis, context-free parsing, and trans-formational application) are designed so that the rules can be changedeasily, allowing the procedure to be used for testing grammars (cf.Gross, 1967, 1968, and Gross and Walker, 1969 for related work ongrarmmar testers using similar progranm~ing strategies).
The trans-formational rules for establishing canonical trees for storage andretrieval can be changed as easily, allowing different formats to betried.THE EDITING OPERATIONSIn contrast to SAFARI, the editing procedures are more traditional.The major l imitation on their flexibility results from the displayhardware we are using.
The techniques available with the SAFARIimplementation on the IBM 7030 computer, which used DD-13 graphicdisplays under lightgun control, were much more elegant (cf.
Gross,1967).
However, the actual editing operations were not substantiallydifferent.The analyst can modify text by typing over material displayed, byspecifying a segment on a line and its replacement, by inserting ordeleting lines, and by moving lines from one file to another.
In theseways he can make additions to a file, correct it, format the data, makeannotations, insert index terms.
Or he can create a new file directly,or out of pieces from other files.
A file, modif ied or new, can herearranged or reformatted so that it is suitable for report generation.It also is possible to create a file that records actions taken by theanalyst and to which he can refer on-line.-lO-TEXT-SEARCHING PROCEDURESSAFARI allows an analyst to recover complex relations among infor-mation elements relating to texts he has previously processed.
However~it is desirable to be able to identify new texts that might be worthanalyzing in depth.
In addition, often it is not necessary to providesuch a deep analysis to discriminate relevant information for a giventask; the occurrence of certain words or phrases may be a sufficientclue.
Two procedures for searching text have been developed for thesesituations: one performing a direct character-by-character scan, theother using an index to locate potentially relevant sentences whichthen are scanned directly.
Both procedures allow relatively complexpatterns to be identified.For the direct scan, the text is considered to be separated, by theoccurrence of blanks, into pseudowords, which may include punctuationor such coding as capitalization indicators.
The search request canconsist of sequences of constituents occurring within specifiable dis-tances of each other with or without the use of synonyms.
In thestandard search (without synonyms) a constituent can be a word--whichwil l  match the letter portions of pseuodwords, a string--which wil lmatch any specified sequence of characters, or a disjunction of con-stituents--one or none of which may be required to match.
Exclusionlists can be established in this standard search, but, because of theirinefficiency, their use is not encouraged.
Note that the string con-stituent wil l  allow capitalization codes, punctuation, and other non-alphanumeric elements to be included in a search request.-ll-The synonym search adds to the standard direct scan two extrafeatures.
First, phrases can be used as single constituents.
Second,and more important~ synonym sets can be established so that for eachconstituent in a search request, all relevant synonyms are automaticallyincluded as disjunctions.
These sets typically would be set up inadvance, but they can be modif ied on-line.In both types of direct scan, pointers to the locations of match-ing'portions of text are accumulated.
Upon completion the number ofmatches is presented to the analyst~ and he can view them successivelyin context on the page (i.e., ten-line segment of text) in which theyappear.
If the data base has been set up so that different categoriesof text are identified explicitly (e.g., title, author, source, body),searches can be restricted to specified categories.The index search retains most of the features of the direct scansearches but makes use of an index of the text to restrict the scopeof the search to just those sentences which have the words contained inthe search request.
These sentences are then scanned directly for therequested pattern using the procedures described above.
Since an indexmust be prepared, this kind of search is most appropriate for stablefiles.
It is particularly appropriate for larger amounts of text or wherea large number of synonyms are used.
Words~ phrases, and arbitrarystrings can figure in the search request, but the index will  be of valueonly for those strings whose left-most character corresponds to thebeginning of a word (e.g., a stem without a pre~fix).
Both standard andsynonym searches can be made, substantially as in the direct scanapproach, except that phrases can be used in the standard search as well.-12-In the index search, the actual sentences satisfying the searchrequest are accumulated in a separate file together with informationidentifying the text in which they occur and the line number on whichthey begin.
This answer file may be viewed, printed, or edited, andthe text pages in which the answers appear may be retrieved.-13-DISCUSSIONThe three components of the text-processing system described in thepreceding section are intended to provide a range of capabilities foran analyst working on-line with textual data.
However, it should benoted that none of the components is in production status at this time,although the editor is being used for routine correction of input materialsand exploratory work using other editing features and the text-searchingprograms is about to begin.
Therefore, we cannot say anything informativeabout user satisfaction, nor is it meaningful to give program parametersor t iming s ta t i s t i cs ,  s ince  they are cer ta in  to change (hopefu l ly  fo r  thebet ter ,  par t i cu la r ly  as regards  t iming for  SAFARI).
Cons ider ing thefocus of th i s  Conference ,  what does seem appropr ia te  i s  some d iscuss ionof the re levance  of th i s  system to computat ional  l ingu is t i cs .I t  i s  obvious that  the SAFARI procedure fa l l s  under the scope ofcomputat iona l  l ingu is t i cs ,  no mat ter  how narrowly def ined.
And i t  i sposs ib le  to l i s t  the morpholog ica l  and syntact i ca l  ana lyses  of SAFARIseparately so that the plural reference in the title of this paper("Computational Linguistic Techniques...") is satisfied.
However,although the necessity to be practical and sensitive to what analystsactually can use and need to use in processing text prompted our intro-duction and elaboration of text-editing and text-searching techniques,computational linguistic relevance is not wholly lacking.
While somemight argue that editing and searching are computational linguistic oper-ations, we do take the word "l inguistic"in that phrase quite seriously.Accordingly, we are trying to incorporate within these operations-14 -s t ra teg ies  mot ivated  by l ingu is t i c  cons lderat io~s .
So fa r ,  th i sin f luence  can be seen on ly  in  our work in  text  search ing .The text -search lng  procedures  we have deve loped emphasize theident i f i ca t ion  of pat terns .
Whi le we cer ta in ly  want to  be ab le  toidentify words and word co-occurrence groupings, we also want torecognize stems and affixes, on the one hand, and clause and phrasestructures on the other.
Thus, by specifying in the search request"computer" as a word with its synonyms, "center" as a stem to allowfor  p lu ra l s ,  a d i s tance  de l imi te r  to  a l low three  or four  in terven ingwords,  a d i s junct ion  of  " in"  and "a t " ,  and a cap i ta l i za t lon  symbol wehoped to  ident i fy  some (but cer ta in ly  not  a11) of the  computer centers~ent loned  in  our date  base that  were ident i f ied  w i th  cer ta in  Ins t l tu -t lons  or locat ions .
The c reat ion  of synonym sets  can be the productof a s tudy  of syntact i c  end semant ic  re la t ions ;  i t  need not  be ad hocand arb i t ra ry .
In  t ry ing  to  unders tand  the l im i ta t ions  on synonym sub-s t i tu t ion  in  search  requests  we found we were a ided  s ign i f i cant ly  by aneva luat ion  of the  l ingu is t i cs  of  cer ta in  const ruct ion  types .
S imi la r ly ,we be l ieve  that  l ingu is t i c  ins ights  may he lp  to  o rgan ize  indexes  so thatthey are  most use fu l .
We hope that  i t  may prove poss ib le  to  in t roduceincreas ing  amounts of l ingu is t i c  soph is t i ca t ion  in to  search  proceduresin  these  ways.The po in t  be ing  made here  i s  that  i t  i s  not  necessary  to  reso lvethe  quest ion  of  whether  text -search ing  procedures  a re  computat iona ll ingu is t i c  techn iques .
Rather ,  we are  in teres ted  in  determin ing  whetherl ingu is t i c  cons iderat ions  can he ighten  the e f fec t iveness  of these  lesssoph is t i ca ted  hut  cur rent ly  much more pract i ca l  ways of hand l ing-15-textual data.
We hope that further work with our text-processing systemwill enable us to make this evaluation.AcknowledgmentsThe work described in this paper is a product of the followingpeople whose ideas, implementations, and descriptions have significantlyinfluenced its form and content: Carter Browne, Stanley Cohen, JeanneFleming, Richard Glantz, Louis Gross, Ted Haines, and Lewis Norton.REFERENCESBecker, J. D. The modeling of simple analogic and inductive processesin a semantic memory system.
In D. E. Walker and L. M.
Norton(Eds.
), Proceedings of the International Joint Conference onArtificial Intelligence, 1969.
In press.Bierwisch, M. Some semantic universals of German adjectivals.Foundations of Language, 1967, 3, 1-36.Chapin, P. G. On the syntax of word-derivation in English.
MTP-68,The MITRE Corporation, September 1967.Chapin, P. G., and Norton, L. M. A procedure for morphological analysis.MTP-101, The MITRE Corporation, July 1968.Chomsky, N. Syntactic structures.
Mouton, The Hague, 1957.Chomsky, N. Aspects of the theory of syntax.
M.I.T.
Press, Cambridge,Mass., 1965.Fillmore, C. J.
The case for case.
In ~ Bach and R. T. Harms (Eds.
),Universals in lin~uis tic theory.
Holt, Rinehart and Winston, N. Y.,1968.Green, C. C., and Raphael, B.
The use of theorem-proving techniques inquestion-answering systems.
Proceedings of 23rd ACId NationalConference, 1968, 169-181.Gross, L. N. On-line programming system: user's manual.
MTP-59,The MITRE Corporation, 1967.Gross, L. N. A computer program for testing grammars on-line.
MTP-102,The MITRE Corporat ion ,  1968.Gross, L. N., and Walker, D. E. On-line computer aids for research inlinguistics.
In A. J. H. Morrell (Ed.
), Information Processin~ 68.North-Holland, Amsterdam, 1969.Haines, E. C. TREET, a list processing language and system.
MTP-I04,The MITRE Corporation, March 1969.McCawley, J. D. The role of semantics in a grammar.
In E. Bach andR.
T. Harms, (Eds.
), Universals in linguistic theory.
Holt,Rinehart and Winston, N. Y., 1968.Norton, L .M.
The SAFARI text-processing system: IBM 360 programs.MTP-103, The MITRE Corporation, September 1968.Simmons, R. F. Natural language question answering systems: 1969.TNN-87, University of Texas Computation Center, January 1969.Walker, D. E.
(Ed.)
English preprocessor manual.
SR-132, The MITRECorporation, May 1965.Walker, D. E. SAFARIj an on-line text-processing system, proceedingsof the American Documentation Institute, 1967, 4, 144-147.Walker, D. E., Chapin, P, G., Gels, M. L., and Gross, L. N. Recentdevelopments in the MITRE syntactic analysis procedure.
MTP-11,The MITRE Corporation, June 1966.Woods, W. A.
Procedural semantics for a question-answering machine.AFIPS Conference Proceedings: Fall Joint Computer Conference,1968, 33, 457-471.Zwicky, A. M., Friedman, J., Hall, B. C., and Walker, D. E. The MITREsyntactic analysis procedure for transformational grammars.AFIPS Conference Proceedings: Fall Joint Computer ConFerence,1965, 27, 317-326.
