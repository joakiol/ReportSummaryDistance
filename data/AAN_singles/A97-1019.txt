The NLP  Role  in An imated  Conversat ion  for  CALLMichael Schoelles and Henry HamburgerDept.
o f  Computer  ScienceGeorge Mason Univers i tyFairfax, VA  22030 USAmike js@cs .gmu.edu & henryh@cs .gmu.eduAbstractLanguage learning is a relatively new appli-cation for natural language processing (NLP)and for intelligent tutoring and learningenvironments (ITLEs).
NLP has a crucial roleto play in foreign language ITLEs, whether theyare designed for explicit or implicit learning ofthe vocabulary and grammar.
FLUENT is animplicit approach, in which NLP and shared-control animation support a two-mediumconversation, designed to foster implicitlearning of language.
This report highlightsspecific ways that FLUENT already uses NLP,suggests potential benefits from additional useof NLP and grounds the method in widely usedlanguage learning pedagogy.
It concludes bydescribing and evaluating the system's use inthe classroom, with a particularly challengingkind of learner.1 IntroductionLanguage learning is a relatively new application fornatural language processing (NLP), compared totranslation and database interfaces.
The 1988 Triesteconference on foreign language intelligent tutoringsystems did not manage a proceedings, o few were thefunctioning systems using NLP and other techniques ofartificial intelligence (AI).
Indeed the field ofComputer-Assisted Language Learning (CALL) hasbeen dominated by the work of language teachers who,tired of waiting for us, have proceeded to learn someprogramming orhire computer science students to maketheir own systems, most of them just for fairlyinflexible drill-and-practice.
The 1990s have witnessedincreasing interest in bringing AI to language learningsystems, reflected in Chanier's (1994) special issue,Holland's anthology (1995) and Zock's (1996) panel.The AI is principally of two kinds: NLP and what wewill call ITLE, the overlapping categories of intelligenttutoring systems and interactive l arning environments.In this paper, we report on a foreign language ITLE thathas moved from the lab into the classroom.
Afternoting alternative strategies for using NLP in CALL(section 2), we describe our system and its NLP require-ments (section 3), as well as its pedagogical foundations(section 4).
Finally, we describe its graduation i to theclassroom, for use with a particularly challenging kindof learner: the highly motivated but computer-unfamiliar immigrant.2 A Crucial Role for NLP in CALLDevelopers of foreign language ITLEs have onlyrecently begun to expand the use of NLP in languagelearning systems beyond relatively simple uses ofsyntax.
More sophisticated and widespread use hasawaited greater robustness and ease of use of NLPsoftware as well as better speed and memory of thehardware.Recent improvements along these lines are playingkey roles in meeting the special NLP requirements offoreign language ITLEs.
Since the language is thesubject matter to be learned, ITLEs must expect theinput to be in error, and therefore require very robustNLP systems with error detection capabilities.
Inaddition, conversational ITLEs must respond to studentinput in a time frame that parallels natural dialog.Advances in parsing technology and faster machineswith more memory are making NLP attractive to thedevelopers of ITLEs.
The flexibility, increased coverageand other advantages of NLP are finding their way intothe design of language learning systems.
The issue isno longer whether language learning systems hould useNLP, but how NLP can best be applied to languagelearning.One possible strategy for creating a language ITLEcan be called the direct approach.
A tenet for ITLEs ingeneral is that they represent he knowledge to belearned in a domain expertise module.
In the case oflanguage learning, the knowledge to be learned alreadyexists in computational form as the lexicon andgrammar of a NLP system, so the idea would be toincorporate these NLP knowledge bases as the ITLEdomain expertise.
However, successful language use, incontrast to other ITLE domains, is not just a matter ofovert stepwise reasoning.
The goal of language127learning is not (only) to conjugate verbs or passivizesentences, but to understand and produce meaningfullanguage in context.
Even for the limited role ofteaching grammar explicitly, a direct approachencounters two obstacles.
First, a performance-orientedrepresentation f domain knowledge is typically notstructured in a way that is cognitively suitable forlearners (Clancey, 1987).
Moreover, NLP knowledgebases cannot be used directly in explanation since theirrepresentation language is incomprehensible to students(Chanier et al, 1992).To avoid these pedagogical problems, we turn to analternative strategy that deploys NLP principally in theITLE's learning environment, rather than as explicitexpertise.
This approach is more concerned with theperformance of the NLP rather than its competence,ITLEs applying NLP in this manner immerse thestudent in the language by situating the student in alife-like conversational setting.Pedagogical motivation for this kind of foreignlanguage learning environment comes from classroommethods like Total Physical Response or TPR (Asher,1977) and the Natural Approach (Krashen and Terrell,1983).
These techniques require only comprehension atfirst, as students act out appropriate responses to theteacher's commands.
As student actions indicatesufficient progress, constituents of the utterances arerecombined toincrease the skill at understanding.
Thereare also questions, which TPR students answer bypointing.
In the natural approach, production isincluded, beginning with questions that take very shortanswers.
There is a gradual progression from yes-noquestions to other single-word-answer questions andeither-or questions, and then on to phrases andultimately sentences.The flexibility, efficiency and error handling of NLPis crucial to implementing the above pedagogy in anITLE.
A system that puts NLP to crucial use insupport of these pedagogical considerations is FLUENT,to which we now turn.3 FLUENT and NLPFLUENT uses NLP to converse with the student in thecontext of a realistic microworld situation.
Actionsperformed by both the student and the system tutorappear as context-dependent animation and causeupdates in the underlying representation.
Thegenerativity of both the NLP and the animation iscrucial to the flexibility of this conversation, allowingit to be steered in pedagogically useful directions, yetalso permitting student exploration.
The NLP modulegenerates descriptions, commands and questions thatmay be related to actions that the student carries outgraphically with the mouse or may be related to thestates of objects in the current situation.
The generatedlanguage appears as both text and speech.
Figure 1shows FLUENT's Kitchen Microworld.~.~ Quit Style Variety Act ivity Who Controls Tools I 1 :54 :10 \ [~ I~I (~Conversat iona l  Styll?.
: Qu izmaster  Cont ro l :  Tutor  Act iv i ty :  COOK POTATOESTutor:Student:K i tchen  Wor ldWhat  d id  I tu rn  on?Pause 1i iFigure 1.
A FLUENT Microworld128/ ........   ects/ Grammars ~ ~agguage ~ n e ~  Acti?ns\V iew ~ ~ Pedagogical~ w s ~ V i ~  Processor / i ~  nsSchemasTutorial Schema Tool YFigure 2.
FLUENT ArchitectureThis section describes first the overall architecture ofFLUENT and then turns to the specific NLPcomponents, noting their roles and requirements in thecontext of FLUENT'S pedagogical goals.
Flexibility,extendibility and teacher involvement are achieved inFLUENT through its layered architecture, shown inFigure 2.
In this framework, independent processeswork on declarative structures that have been acquired bythe system through tools that do not demand aknowledge of programming or linguistic theory(Schoelles and Hamburger, 1996).
This work shares theinterface orientation of Caldwell and Korelsky (1994),but is more abstract and flexible in that user-specifications are independent of, and combinable with,domain plans.
On the other hand we do not followwork like Traum and Allen (1994), in pushing towardcomputation about more and more discourse phenomenaThe outer ring of Figure 2 depicts the knowledgeacquisition level.
It identifies existing tools forbuilding tutorial schemas, language usage structures andthe graphics of objects.
The tutorial schema tool lets ateacher express pedagogical expertise in the form oflessons.
The view tool allows the teacher some degreeof control over the language generated by the system.The teacher inputs the language specifications for alesson by manipulating a graphical user interface.
Thetools process these specifications toproduce instantiatedobjects for the declarative l vel.The knowledge base, in the second ring, consists of:?
Tutorial Schemas - structures, created by a teacherusing tools, that coordinate the activities,conversational style and conversational variety ofFLUENT when the system is in tutoring mode.?
Views - structured objects that provide languagespecifications and constraints to achieveconversational variety, control over the difficulty ofinput presented to the student, and situationalflexibility.?
Lexicon - currently 550 words entered in base form,with information for finding inflected forms andwith irregular forms are subentries.
Contains bothsubcategorizafion and theta grids.?
Grammar- context-free productions plus reductionfunctions that restrict the structure, performagreement and other checks, build the parse tree andreference the case frame interpreter.
See Felshin(1995) for more on the lexicon and grammar.?
Plans and actions - rules, expressed in terms ofclasses of objects, that specify how the tutororganizes activity in the microworld, how thestudent initiates actions and how the microworldstate is altered.?
Microworld - a hierarchy of objects with theirsituational and graphical properties, as well as theassociated plans and actions1 29The procedural level in the third ring shows theprocesses that operate on the knowledge base to providelanguage tutoring or a learning environment.
The mainprocesses that achieve these functions are:?
Pedagogical Processing - to decide what the tutorwill do and say next, by selecting a tutorial schemafrom the knowledge base and executing it.?
NLP Processing - a generative system whichinterprets language specifications in declarativeform.
These specifications are derived from thetutorial schema (incorporating views andmicroworld information) to construct an abstractsyntactic structure, which in turn undergoesgrammatical and morphological processing toproduce asentence.?
Situation Reasoning - a plan executor thatinstantiates the plan and action rules based on thecurrent situation.?
Microworld Processing maintains objectinformation and performs the graphical actions inthe microwodd.The innermost ring represents the system executivewhich controls the interaction between the student andthe system and coordinates the main processes based onthis interaction.
The student's interaction with thesystem takes two forms, learning and control.
In alearning interaction, the student causes linguistic andgraphical events in the microworld.
In a controlinteraction the student can take control of choices aboutthe plans and actions, the conversational style and thedegree of linguistic variety.
Further details on theoperation of FLUENT can be found in Hamburger (1995)and in Schoelles and Hamburger (1996).The remainder of this section describes the functionsof NLP within the FLUENT architecture.
We point outtheir importance in this framework to FLUENT'Spedagogical goals.
As seen in Figure 2, NLP isinvolved in three levels of the architecture: theknowledge acquisition level, the declarative l vel and theprocedural level.FLUENT, like many other natural anguage generationsystems distinguishes between an early or deep phasethat determines content and organization (what to say)and a later or surface phase for lexical content,morphology, and syntactic structure (how to say it).The deep phase is driven by the current utorial schema,which, as noted earlier, coordinates the activities,conversational style and conversational variety.A tutorial schema is a list of triples, each consistingof a plan or action, an interaction type and a list ofviews, as in the example in Figure 3.
The resultingconversation depends in part on student responses andsome randomized choices, but would be something like:I am picking up a cup.
\[Tutor puts cup on table.\]The cup is on the table.
There is another cup on thesink.
What is on the table?
\[Student: The cup.\]Good!
Pick up a cup.
\[Student turns on the water(!
)\]You did not pick up a cup, but you turned on the faucet.Turn off the faucet.
\[Student does so.\] Great!
Youturned off the faucet.
Pick up a cup...Plan/Action InteractionPick-up TourguidePut-down TourguideNone QuizmasterPick-up CommanderViewPresent-Progresv(LocationLocation-other)Wh-on-top(Command-indefPresent-actionCommand-fail)Figure 3.
Part of a Tutorial Schema (Lesson)A plan groups together subplans and individualactions to achieve a goal.
The plans and actions areflexible in that their arguments are variables which canbe bound when the schema is created, or at the time ofexecution.
The sequence of plans and actionsdetermines what to talk about by specifying predicatesand arguments.Another component of a tutorial schema is theinteraction type.
There are three interaction types thatcan be specified in a tutorial schema.
In Tourguidemode, the system performs the actions as well asgenerating language about the action or state.Commander mode is similar to Tourguide mode, exceptthat for each action in the plan the system tells thestudent what to do (i.e.
gives the student a command),the student hen uses the mouse to perform the actioncommand.
The system will respond based on whetherthe student successfully or unsuccessfully carried out thecommand.
In Quizmaster mode, the system performsan action and then asks a question about the actionperformed.
The student responds by typing in ananswer (i.e.
a noun phrase) which is checked by thesystem.How to talk about the predicates and arguments orwhat type of question to ask is specified in the view.This data structure, whether selected or created using theview tool, becomes part of the tutorial schema andserves as the input to the surface generator.
As anexample, a portion of the Command-fail view used inFigure 3 is spelled out in Figure 4.
It gives rise to thefinal portion of the conversation example accompanyingFigure 3.130View-Type: ComplexRelation: ContrastSubview-I : View-Type:Polarity:Subtype:Tense:Subview-2: View-Type:Polarity:SimpleNegativeActionPastSimplePositiveFigure 4 - A Specific ViewThe view is the interface to the syntactic/semanticcomponent.
In a tutorial schema, an interaction typeand view can by specified for entire plans, actionswithin a plan, or individual actions.
Thus, at each stepin the schema, how to talk about thepredicate/argument structure can be specified.
Views arealso specified to handle error conditions.
Some of theparameters specified in a view are the tense, aspect,modality, type of question (Wh or Yes/No), minimumor maximum number of arguments, and definiteness ofa noun phrase.
Views also specify whether to talkabout he action itself or the state of the world before orafter the action.Views mediate between the language teachingfunctions of the system and the NLP component thatperforms the actual text generation.
This component isthe NLG system developed for the Athena Project atM.I.T.
by Sue Felshin.
It is responsible formorphology, syntax, and some semantic functions.
Itwas chosen because it does provide some semantics anda well-defined language independent interface called anInterlingua Structure (ILS).
The ILS is a specificationof data structures containing syntactic and semanticinformation.
These structures are built by theknowledge module and passed to the NLG.
The specificsemantic features that this framework provides is anextensive hierarchical system of theta roles.Generation of linguistic responses by the systemtranslates from the interlingua structure to CaseFrame(CF)-structure to D-structure and to S-structure inseparate steps.
First, focusing chooses how to refer toobjects.
CF-structure is then built.
Next, D-structure isbuilt by applying the parameters of the English toprinciples of universal grammar.
S-structure isproduced by applying code transformation to D-structure.
Finally, the S-structure is flattened toproduce printable text (Felshin 1995).A limitation of the Athena framework is the lack ofan interface tool to the lexicon.
Lexical entries canonly be added or changed by editing the source files andrecompiling the lexicon.
A task that can not be easilyperformed by a language teacher or exercise designer.Another limitation is that in some instances whenvariation in surface structure is possible the choice ismade randomly thereby diminishing the application'scontrol over the language generated.4 FLUENT Pedagogy and NLPEven a flexible, extendible and teacher-accessible systemmay be of little value unless it is also engaging andbeneficial to students.
Our initial results, presented inthe next section, suggest that it is engaging to thestudents who have used it.
Here we argue that oneshould expect it to be beneficial as well, in view of itsrelationship to several pedagogical issues.Language learning pedagogy is made complex by thegreat complexity and variety of both languages andlearners.
It is therefore out of the question to make auniversally useful pedagogy-based requirementsstatement and proceed to the ultimate, correct systemdesign.
Our aim in designing FLUENT has thus neverbeen to create a panacea, but we do claim to bedeveloping an important form of language learninginteraction.
Besides supporting this claim, we alsopoint out the crucial role of NLP in enabling ourambitious approach.We consider five pedagogical issues.
The first isspecific to the domain of language: the explicit teachingof language facts versus implicit learning from ordinaryconversation about non-language topics.
The next twoissues - situatedness and error-handling - are of generalconcern but play out in unique ways in the domain oflanguage.
Finally, active learning and the choice ofdifficulty level are issues that relate to general cognitiveconsiderations and so are relevant for the learning ofother domains as well as for language.The explicitness issue arises from a curiousobservation: all children succeed at implicit learning oftheir first language, while many adults fail in attemptsto learn a second one.
Is it that children spend all day atit, or, lacking a language, are more motivated?
Doadults know too much, including another language, orhave they lost some language capacity in maturation?Or are they just not properly taught?
If it's theteaching, can we adapt he child's immersion experienceto adults, taking care to make the situation simple andclear at all times as we do with toddlers?Success with immersion is not confined to first-language learning.
Many an adult who has experienced131second-language immersion will testify to its benefits,and Krashen reports classroom benefits with hismethod.
FLUENT provides a conversational settingwhere a linguistic fact is not presented explicitly butrather can be indirectly acquired by the student hroughexposure to it in a meaningful context.
To learn tocommunicate, one must sooner or later practice doingso, and FLUENT permits practice in an ongoing andcompletely understandable situation.NLP plays the crucial role of providing the variabilityrequired by the conversation.
Even fairly simplemicroworlds lead to a combinatorial explosion ofpossible events and situations, along with acombinatorial explosion of sentences that must occur inappropriate circumstances.Next, consider the pedagogical proposal that situatinga realistic activity in an authentic environment canpromote learning both cognitively and motivationally.Without pursuing this issue in general, we note that ithas a special significance for language, because thechoice of a linguistic construct often hinges on aspectsof the current situation, including the conversationitself.
These pragmatic and discourse phenomena can bemade to arise in FLUENT, since it conducts conversationin an ongoing situation.
The resulting practice onthese aspects of language can lead to the kind ofimplicit learning described above.An example of a situation-based aspect of languagethat FLUENT presents to students is that the choice of adefinite article may depend on there being only oneobject of some type.
Another is that different verbforms are used in descriptions that occur during versusafter the action described.
An example that relates tothe conversation itself, as opposed to the situation, isthat the discourse center is a prime contender forpronominal referent.
Another is the correlation ofimperative, interrogative and declarative forms with thetype of conversational interaction.Pragmatics and discourse are very difficult for NLP.Although FLUENT does not engage in sophisticatedNLP-style discourse reasoning, its tutorial schema tooland view tool make it easy for us or a teacher toprescribe the right discourse results without losingcomputational flexibility at the semantic and syntacticlevels.A third pedagogical issue is the handling of syntacticand semantic errors made by the student.
This issue isalso related to the explicitness issue.
For people andsystems that teach linguistic form explicitly, errorexplanations are paramount.
In the communicativeapproach, errors are tolerated in order to achieve theprimary goal of communication.
It is argued thatexplanations are often not well understood and in anycase disrupt communication.132A fully communicative system needs robust NLP onthe language input side to make some sense of what thestudent is trying to communicate even in the presenceof errors.
We have had very positive response fromteachers to a different use of NLP, on the generationside.
In FLUENT, a misconception on the student's partis often indicated by an incorrect action performed bythe student in relation to a command given by thesystem.
In such a case, the system can (if the teacherhas so specified) comment on the contrast between theinstruction and the actual student action.
To do sorequires a two-clause sentence, of the form "I asked youto <do\[present\] action-x>, but you <do\[past\] action-y>."
Generating such responses is clearly a job forNLP.
Before getting back to a repeat of the originalcommand, the NLP module generates an instruction toperform an action to undo the original erroneous action.A fourth pedagogical issue is active versus passivelearning.
Active involvement by the student has provensuccessful in many domains.
For language learning inparticular, TPR and the natural approach (see section 2)let students respond to a human teacher both vialanguage, in the case of questions, and with actions, forcommands.
In the computational realm, ITLEs useproblem-solving environments to afford students theopportunity to act.
In its tutorial mode, FLUENT is an1TLE for TPR.
Beyond that, in its student mode (andstudent-driven aspects of tutorial mode too) the studentcan actively participate by initiating and controllingactions though the mouse.The NLP component can express these studentactions as verbs.
The benefit of a NLP approach over adirect mapping between mouse actions and stored text,or even templates with fillers, is that a wider coverageof language can be achieved in an efficient manner.
Forexample, a click on a graphical object could representthe action of picking up that object.
To express this inpast tense versus present tense only requires a change ofa single parameter to the NLP module, whereas with adirect mapping two separate sentences must be stored.Clicking on a different object for a NLP based systemagain requires only the changing of a single parameter.Moreover, the same object can be described in terms ofdifferent properties at various times, according to thesituation and discourse.
The combinatorial nature ofthis design clearly permits the system to expose thestudent o a greater variety of language than would bepractical for a non-NLP system.Finally, a NLP component provides the flexibility togive the student material at the right level of difficulty.In FLUENT, simply by varying a parameter the systemcan generate a command, a declarative statement or aquestion.
Commands require understanding, butquestions are more demanding, in that they requirelanguage output from the student as well.
Another wayto vary difficulty involves verbs with optionalarguments.
Use of NLP lets us choose whether asentence is to contain all the arguments that a verb cansubcategorize for or only the required ones.
Again thisis done by changing a single parameter input to theNLP module.5 FLUENT in the ESL ClassroomFLUENT is currently being evaluated in an English as aSecond Language (ESL) environment.
The ArlingtonEducation and Employment Program is using FLUENTin its language laboratory.
The students in thisprogram are non-English speaking adults.
Theevaluation results reported in this paper are from twogroups of students at level 2 of the program, withlimited English and little or no exposure to computer-based systems.
What exposure they have had has beenwith text-based systems mainly for vocabulary.FLUENT is their first exposure to an interactiveconversational language learning system.
The firstgroup of 14 students generally worked in groups of twoor three in a cooperative effort.
In the second group,students worked individually.
This time, students wereso engrossed that they were allowed to work longer, sothere was time for only six of them.
The mostdifficult aspect of the interface for the students to masterwas the use of the mouse.
However, the students whoused the system asecond or third time showed increasedproficiency with the mouse.The evaluation procedure required each student tocomplete three lessons that had been prepared using thetutorial schema tool, with the advice of their teacher.This was followed by approximately 5 minutes inMovecaster mode to explore other facets of themicroworld.
All three lessons used the same plan, butprogressively harder interaction types: first Tourguide,then Commander, and finally Quizmaster.
InCommander mode, a student who did y when told to dox was told, in effect, "You did not do x.
Undo y."
InQuizmaster, each WH-question required a noun phrase.If the student's answer was not correct, the systemdisplayed a dialog box with a list of possible answers.The student was then to click on the correct choice.
Ifthe student made another error at this point - somethingthat happened only once - the system displayed thecorrect answer.The students were asked to complete the questionnaireshown in Figure 5.
The results are shown in Figure 6.Ten of the 14 students in the first group and all of thesecond group responded.1.
How well did you like it?
It wasVERY GOOD GOOD __POOR2.
How good was it for learning?
It was__VERY GOOD GOOD POOR3.
Was it too hard?
Was it too easy?__TO0 HARD GOOD TO0 EASY4.
Was the voice OK?
YES  NO5.
Do you want to say more?Figure 5.
The questionnaireI l l  ooo  2.
5 VERY GOOD 1 TOO HARD 8 YES 1 NO 5 GOOD 0 POOR 5 GOOD 0 POOR 9 GOOD 0 TOO EASY 1 <no response>Figure 6a.
Questionnaire Results - Group 1lill 6 VERY GOOD5 VERY GOOD1 TOO HARD6 YES 0 NO0 GOOD 0 POOR1 GOOD 0 POOR4 GOOD 1 TOO EASY0 <no response>Figure 6b.
Questionnaire Results - Group 2Observations made during the sessions point to somestrong points.
The verbal protocol shows that thestudents liked the positive responses in Commandermode.
When the student successfully completes theaction, the system responds with a positive commentsuch as "Great, you picked up the cup."
or "Good, youturned on the faucet."
The students also liked beingable to pick the correct answer in Quizmaster mode.They often knew the answer but didn't know how tospell it.
When they were able to choose the answerthey often carefully noted the spelling and were able tospell the word correctly the next time.Observations made during the first session indicatedsome weak points.
These led us to make changeswhich apparently led to an even better esponse in thesecond session.
Several students were frustrated in thefirst session when the system was doing the action andgenerating language, because the sequence of actionswas occurring too rapidly for them to understand theutterances.
They would be concentrating on what wassaid and their train of thought would be broken whenthe sentence was overwritten with the text of the nextaction.
This was corrected for the second group byproviding a button that allowed the student o advancethe system to the next action.Another annoyance for the student was when aresponse was given that was correct but not exactly133what the lesson required.
For example, one action is to"turn on the faucet".
When asked "What did I turn on?
",several students responded "the water".
Although notwhat the system was expecting (i.e.
"the faucet") thisresponse should be accepted.
For the second session thesystem was able to accept various correct answers.The speech generated is a female voice using the text-to-speech capabilities of the Macintosh.
A point ofconcern to us was how the students would react o thissomewhat automated sounding voice.
This decision touse text-to-speech was made after consulting withteachers of ESL They feel the quality is good enoughfor the level of students we are targeting.
The studentresponses show that in general they were not distractedby the quality of the voice.
They seem to beconcentrating onthe syntax and meaning of the sentencemore than the pronunciation.6 ConclusionsNLP has an important role to play in foreign languageintelligent utoring and learning environments.
Thegenerativity and variability that NLP brings to *,heconversational tutor FLUENT are crucial to its meetingits pedagogical goals.
In particular, the layered designof the NLP, from teacher specification to actual text iskey to allowing teacher control over the language inputto the student, while at the same time producinglanguage that is meaningful to the student in theevolving situation.7 AcknowledgementsOur thanks to the Arlington Education and EmploymentProgram, and especially to Daniel Norton for hissupport and suggestions.ReferencesAsher, A.
1977.
Learning Another LanguageThrough Actions: The Complete Teacher'sGuidebook.
Sky Oaks Productions, Los Gatos,California.Caldwell, D. and Korelsky, T. 1994 BilingualGeneration of Job Descriptions from Quasi-Conceptual Forms.
4th Conference on AppliedNatural Language Processing, Stuttgart, Germany.Chanier, T. 1994.
Special Issue on Language Learning:Editor's Introduction Journal of ArtificialIntelligence in Education.
Association for theAdvancement of Computing in Education,Charlottesville, Virginia.Chanier, T., Pengelly, M., Twidale, M. and Self, J.1992 Conceptual Modelling in Error Analysis inComputer-Assisted Language Learning Systems.
InM.
L. Swartz and M. Yazdani, editors, IntelligentTutoring Systems for Foreign Language Learning.Springer-Verlag, Berlin, Germany.Clancey, W. J.
1987.
Knowledge-Based TutoringThe GUIDON Program.
The MIT Press, Cambridge,Massachusetts.Felshin, S. 1995.
The Athena Language LearningProject NLP System: A Multilingual System forConversation-Based Language Learning.
In V. M.Holland, J. D. Kaplan, M. R. Sams, editors,Intelligent Language Tutors: Theory ShapingTechnology.
Lawrence Erlbaum Associates,Mahwah, New Jersey.Hamburger, H. 1995.
Tutorial Tools for LanguageLearning by Two-Medium Dialogue.
In V. M.Holland, J. D. Kaplan, M. R. Sams, editors,Intelligent Language Tutors: Theory ShapingTechnology.
Lawrence Erlbaum ?
Associates,Mahwah, New Jersey.Holland, V .M.
1995.
In~oduction: The Case forIntelligent CALL.
In V. M. Holland, J. D. Kaplan,M.
R. Sams, editors, Intelligent Language Tutors:Theory Shaping Technology.
Lawrence ErlbaumAssociates, Mahwah, New Jersey.Krashen, S. and Terrell, T. 1983.
The NaturalApproach: Language Acquisition in the Classroom.Pergamon, Oxford, England.Schoelles, M. and Hamburger, H. 1996 Teacher-Usable Exercise Design Tools.
In C. Frasson, G.Gauthier and A. Lesgold, editors, Intelligent TutoringSystems: Proceedings of Third InternationalConference, Springer-Verlag, Berlin, Germany.Traum, D. R. and Allen, J.
1994 DiscourseObligations in Dialogue Processing.
Proceedings ofthe 32nd Annual Meeting of the Association forComputational Linguistics, Las Cruces, NewMexico.Zock, M. 1996.
Computational Linguistics and itsUse in Real World: the Case of Computer Assisted-Language Learning.
In COLING-96 Proceedings.Center for Sprogteknologi, Copenhagen, Denmark.134
