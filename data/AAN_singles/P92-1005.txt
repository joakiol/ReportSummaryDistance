MONOTONIC  SEMANTIC  INTERPRETAT ION*Hiyan Alshawi and Richard CrouchSRI InternationalCambridge Computer Science Research Centre23 Millers YardCambridge CB2 1RQ, U.K.hiyan~cam, sri.
corn rc~cam, sri.
cornABSTRACTAspects of semantic interpretation, such as quan-tifier scoping and reference resolution, are oftenrealised computationally b non-monotonic opera-tions involving loss of information and destructivemanipulation of semantic representations.
Thepaper describes how monotonic reference resolu-tion and scoping can be carried out using a re-vised Quasi Logical Form (QLF) representation.Semantics for QLF are presented in which the de-notations of formulas are extended monotonicallyas QLF expressions are resolved.1.
INTRODUCTIONThe monotonicity property of unification basedgrammar formalisms is perhaps the most impor-tant factor in their widespread use for grammaticaldescription and parsing.
Monotonicity guaranteesthat the grammatical nalysis of a sentence canproceed incrementally by combining informationfrom rules and lexical entries in a nondestructiveway.
By contrast, aspects of semantic interpreta-tion, such as reference and quantifier scope reso-lution, are often realised by non-monotonic opera-tions involving loss of information and destructivemanipulation ofsemantic representations.
A 'two-level' approach to semantic interpretation tends toresult (Bronneberg el al.
1980), where an initial,underspecified representation is transformed intoa separate, specified, representation.The goal of the work described here is to pro-vide a model for semantic interpretation that isfully monotonic in both linguistic and contextualaspects of interpretation, and which employs justone level of semantic representation - -  Quasi Log-ical Form (QLF).
Contextual resolution of under-*This work on the Core Language Engine was carriedout under CLARE, a collaborative project involving BPResearch, British Aerospace, British Telecom, CambridgeUniversity, SRI International nd the UK Defence ResearchAgency.
The project is funded in part by the UK Depart-ment of Trade and Industry.specified QLF expressions involves the instantia-tion of QLF meta-variables.
The semantics for theQLF formalism makes the denotation of a QLFformula a partial function to truth-values, withresolution leading to a monotonic extension of thedenotation function.
We believe that there areseveral advantages to the approach taken, includ-ing:?
Order independence of resolution operations?
Production of partial interpretations?
Simpler interactions between phenomena?
Reversibility for synthesis/generationThe QLF formalism is a development of Alshawi1990.
As before, underspecified QLFs are pro-duced on the basis of a unification grammar.
Pre-viously, QLF resolution was only partially mono-tonic; full monotonicity required changes to theoriginal QLF formalism and the resolution andscoping processes.
These changes have been im-plemented in a further development of the CoreLanguage Engine (Alshawi 1992), although we willignore most implementation issues in the presentpaper.The paper is organized as follows.
Section 2provides the syntax of the QLF language and Sec-tion 3 gives some illustrative xamples of mono-tonic QLF resolution.
Sections 4and 5 present thesemantics of the QLF formalism.
Section 6 dis-cusses the relationship between monotonic inter-pretation, Pereira's categorial semantics (Pereira1990), and context change approaches to seman-tics.
Section 7 mentions ome benefits of usingQLF-like representations i  implementing naturallanguage systems.2.
SYNTAX OF  MONOTONIC  QLFWe give here a syntactic description of the QLFconstructs for terms and formulas 1.1The notation we use in implementations is lightly dif-ferent but equivalent to that presented here.32A QLF term must be one of the following?
a term variable: X, Y, .
.
.?
a term index: +i, +j, .
.
.?
a constant erm: 7, maryl,  .
.
.?
an expressions of the form:term ( Idx, Cat, Re str, Quant, Reft )The term index, Idx, uniquely identifies the termexpression.
Cat is a list of feature-value equations,for example <type=pro ,num=sing , .
.
.
>.
Rest r  isa first-order, one-place predicate.
For a resolvedterm, Quant will be a generalized quantifier (a car-dinality predicate holding of two properties) andReft ,  the term's 'referent', will be a constant orterm index.
For an 'unresolved' term, Quant andReft  may be meta-variables (_x,_y,.
.
. )
.
(QLFterms may also be functional applications, thoughwe will ignore these here).A QLF formula must be one of the following?
the application of a predicate to arguments:P red icate  (Argument 1 , .
.
.
,  A r~mentn)?
an expression of the form:fo rm(Category ,  Rest r i c t ion ,  l~es o lu t  ion)?
a formula with scoping constraints:Scope :FormulaP red icate  is a first or higher-order predicate, in-cluding the usual logical operators and, not,  etc.An argument may be a term, a formula or alambda abstract.
Lambda abstracts take the formVar'Body where Body is a formula or an abstractand Vat is a variable ranging over individuals orrelations.
Rest r i c t ion  is a higher-order predi-cate.
Reso lut  ion is a formula (the 'referent' of theform expression), or is a meta-variable if the formexpression is unresolved.
Scope is either a meta-variable when scoping information is underspeci-fled or a (possibly empty) list of term indices e.g.\ [+ i ,+ j \ ]  if term +i outscopes +j.
The terms iden-tified by the indices must occur within Formula.The degree to which a QLF is unresolved cor-responds approximately to the extent to whichmeta-variables (appearing above as Quant, ReSt ,Scope, and Resolution) are  instantiated tothe appropriate kind of object level expressions(though see Section 5 for an explicit characteri-zation of unresolved QLFs and partial interpreta-tions.)3.
EXAMPLE QLF  RESOLUTIONSResolution of QLFs through the instantiation ofrecta-variables has been applied to a wide rangeof phenomena.
These include pronouns, definitedescriptions, implicit or vague relations, ellipsisand temporal relations (see Alshawi 1990 for anaccount of some kinds of reference resolution inan earlier QLF formalism).
For concreteness, wepresent a few illustrative examples of monotonicQLF resolution 2.
We do not at tempt o describethe mechanism by which the resolutions are cho-sen.It will become vident hat the notation is closerto (the syntactic structure of) natural languagethan is the case for traditional ogical formalisms.For example, terms usually correspond to nounphrases, with information about whether e.g.
theyare pronominal, quantified or proper names in-cluded in the term's category.
This makes theQLF representation easier to read than it mightseem at first, once its initial unfamiliarity is over-come.Quant i f i ca t ion :  Every boy met a tall girl illus-trates the representation of quantification.
Thebasic QLF analysis might be (ignoring tense):_s:meet(term(+b,<type=q,lex=every>,boy,_q,x),term(+g,<type=q,lex=a>,Y'and(girl(Y),tall(Y)),_r,_y)).A resolved structure could be obtained by instan-tinting the quantifier meta-variables _q and _rto fo ra l l  and ex is ts  3, and the scoping meta-variable s to \[+b,+g\] for the 'Y3' reading:\[+b,+g\]:meet(term(+b,<type=q,lex=every>,boy,forall,+b),term(+g,<type=q,lex=a>,Y'and(girl(Y),tall(Y)),exists,+g)).In a restriction-body notation for generalizedquantifiers, the truth conditional content of thisresolved expression corresponds toforall(B,boy(B),exists(G,and(girl(G),tall(G)),meet(B,G))).Anaphora :  Every boy claims he met her illus-trates the treatment of anaphora (in a context2Al though the QLF  f ramework can support  a varietyof a l ternat ive semant ic  analyses for specific phenomena,  toprovide concrete i l lustrat ions one or other  analysis needs tobe chosen.
In the following examples,  it should be possibleto separate part icu lar  analyses from the general po ints  wewish to make about  monoton ic  interpretat ion.3The benefits of being able to resolve determiners  toquanti f iers are discussed in Alshawi  1990.
For example,determiners  like some (plural) could be resolved to collec-tive or d istr ibut ive quantif iers,  three could be interpreted asmean ing  either 'exact ly three'  or 'at least three' ,  and  if needbe, bare plurals like dogs could be variously interpreted asmean ing  'some dogs',  'all dogs'  or 'most  dogs'.33where Mary is assumed to be salient) 4Unresolved:_sl:claim(term(+b,<type=q,lexfevery>,boy,_ql,_x),_s2:meet(term(+hl,<type=pro,lex=he>,male,_q2,_y),term(+h2,<type--pro,lex=her>,female,_q3,_z))).Resolved:\[+b\]:claim(term(+b,<type=q,lex=every>,boy,forall,+b),\[+hl\]:meet(term(+hl,<type=pro,lex=he>,male,exists,+b),term(+h2,<type=pro,lex=her>,female,exists,mary))).The pronominal term for her is resolved so that itexistentially quantifies over female objects ident~cal to mary.
The 'bound variable' pronoun he hasa referent coindexed with its antecedent, +b.
Thescope of +h2 is leK unspecified, since exactly thesame truth conditions arise if it is given wide ornarrow scope with respect o every boy or he.Vague Re lat ions :  An unresolved QLF expres-sion representing the noun phrase a woman on abus might be a term containing a form that arisesfrom the the prepositional phrase modification:term(+w,<lexsa,..>,X'and(woman(X),form(<type=prep,lex=on>,R'R(+w,term(+b,<lex=a,..>,bus ,_q2,_b) ) ,_f)),_ql ,_w).Informally, the form is resolved by applying its re-striction, R 'R( .
.
.  )
to an appropriate salient pred-icate, and instantiating the form's meta~variable,f ,  with the result.
In this case, the appropriatepredicate might be inside, so that _f is instant~ated toinside(+w,term(+b,<lex=a,..>,bus,_q2,_b)).Tense: One way of treating tense is by means ofa temporal relation form in the restriction of anevent term.
For John slept we might have:_s :s leep( term(+e,<type=event>,E - form(<type=tre l , tense=past>,R 'and(event(E) ,R(E) ) ,_t) ,_ql ,_e) ,term(+j,<type=name>,J 'name( J , ' John ' ) , _q2,_ j ) ) .4 Here we simplify the issues arising out of tile semanticsof intensional, sentential complement verbs like claim.Since the tense on the temporal relation categoryis past, the resolution says that the event occurredbefore a particular speech time, t7:\[+el :sleep(term(+e, <type=event>,E~f orm (<type=trel, t enseffipast >,R'and(event (E) ,R(E) ),and (event (E), precede (E, t7) ) ),exists ,+e),t erm(+j, <typefname>,J'name (J, ' John ' ), exists, j ohnl ) ).The resolution and(event (E)  ,p recede(E , tT ) )is the result of applying the form's restrictionK 'and(event  (E),  R(E)) to a contextually derivedpredicate, in this case E l 'p recede(E l , tT ) .QLF is not committed to an event based treat-ment of tense.
An alternative that has also beenimplemented is to treat the verbal predications leep( .
.
. )
as a temporal form, whose categoryspecifies tense and aspect information.Ell ipsis: A more complex example, involving el-lipsis and quantification, is provided byEach boy claimed he was clever, and sodid John.A partially resolved QLF, but one in which theellipsis is still unresolved, might be as follows (ig-noring tense and event variables):and(claim (term (+b, <lex=every>,boy ,ex i s ts  ,+b),clever (term (+h, <lexfhe>,male, exists ,+b) ) ),f orm (<type=vpellipsis>,P'P (term (+j ,<typefname>, J 'name(J ,  ' John' ) ,ex i s ts ,  john) ) ,_e) ) .This is a conjunction of the QLF for the an-tecedent clause (Each boy claimed he was cleverunder a bound pronoun reading) with a form ex-pression for the verb phrase ellipsis.
Solutions forinstantiating the meta~variable _ for the ellipsisare the result of applying a property Pl, derivedfrom the antecedent clause, to the term with in-dex +j.
The sentence has two readings: a sloppyreading where John claims that he is clever, and astrict one where John claims that each of the boysis clever.
The choice between a strict or sloppyreading depends on how the term he is reinter-preted in the ellipsis resolution.
Intuitively, strictidentity involves referring to the same object asbefore, whereas sloppy identity involves referringto a relevantly similar object.In QLF, a strict reading results from re-interpreting the ellipsis pronoun as co-indexedwith the original, i.e.
taking Pl to be:84X'ciair .
(X, c lever  (+h)).Constraints on legitimate scoping (Section 5) force+b and +h to take wide scope over both the an-tecedent and ellipsis.
The sloppy reading resultsfrom re-indexing the ellipsis pronoun so that it hasthe same restriction and category as the original,but is resolved to +j and has a new index +hl.This corresponds to taking P1 to be:X~claim (X, c lever  (t erm (+hl, <lex=he>male, exists,+j))).More generally, in Crouch and Alshawi 1992 weexplore the claim that solutions to verb phrase el-lipsis have the general form:P1 = X l ' .
.X i 'S \ [X l / s l  .
.
.
.
X i / s i  .
.
.
.
tn /sn \ ] .That  is, P1 is formed out of an antecedent clauseQLF S by abstracting over the 'parallel elements's l .
.
s i ,  perhaps with some additional substitu-tions for terms s i+ l .
.
sn  in S (E\[a/b\]  is the ex-pression E with a substituted for b).
This seemsto be sufficient to cover the range of examplestreated by Dalrymple, Shieber and Pereira (1991),but that is a specific linguistic claim about verbphrase ellipsis in English and not central to thepresent paper.4.
SEMANTICS  FOR QLFIn this section we outline the semantics of the QLFlanguage in a way that is as close as possible toclassical approaches that provide the semantics interms of a function from models to truth values.The main difference is that denotation functionswill be partial functions for some unresolved QLFformulas, reflecting the intuition that these are'partial interpretations'.
The denotation of a QLFexpression will be extended monotonically as it isfurther resolved, a fully resolved formula receivinga total function as its denotation.
The semanticsis not intended to describe the resolution process.Before giving evaluation rules for the QLF lan-guage, we first present a simplified version of thesemantics for fully instantiated QLF expressions.This is for expository purposes only; the full QLFsemantics does not depend on the simplified ver-sion.4.1 S IMPL IF IED SEMANTICSWe will use the notation \[\[~.\]\]m for the truth valueof an expression ~.
with respect o a model m (butwill leave m implicit), m includes an interpretationfunction I for mapping constants and predicatesinto domain individuals and relations.
Also leftimplicit is a function assigning values to variables,which is required for the evaluation of lambda ab-stracts as characteristic functions.Constructs in the 'standard'  predicate logic sub-set of QLF receive their semantics with the usualevaluation rules, for example:?
\[\[P(al .
.
.
.
.
an)\]\] = 1 iff I (a l )  .
.
.
I(an) are inthe relation I(P), and 0 otherwise.?
\[\[and(F1,F2)\]\] = 1 iff \[\[F1\]\]=I and \[\[F2\]\]=l,and 0 otherwise.The evaluation rule for a formula F with a scop-ing variable instantiated to \ [ I , J  .
.
.
.
\] and con-taining a term T----term(I,C,R,Q,A) is as follows:?
\ [ \ [ \ [ I , J  .
.
.
.
\] :F\]\]=I iff \[\[Q(R' , F ' ) \ ] \ ]= I ,  and 0otherwise, whereR' is X'(and(R(X),X=A))\[X/ I \ ] ,  andF '  is X ' ( \ [ J  .
.
.
.
\] :and(F,X=A))\[X/T, X/I\]This evaluation rule states that a formula with ascoping constraint list may be evaluated by 'dis-charging' the term for the first index on the listwith respect to a formula with a reduced scop-ing constraint.
The rule discharges the term byabstracting over occurrences of the term and itsindex, and applying the generalized quantifier Qto the term's restriction and the abstract derivedfrom the formula.
In Section 5 we will say moreabout the ramifications of adopting this type ofquantifier evaluation rule.
Note that this rule isalso applicable to resolved terms such as pronounsfor which q has been resolved to ex is ts  and T isa constant or a scoped variable.The denotation assigned to a resolved formulaform(C, R, F '  ) in which the resolution variable hasbeen instantiated to a formula F '  is simply:?
\ [ \ [ form(C,R,F ' ) \ ] \ ]=l  iff \[\[F'\]\]=I, and 0 other-wise.4.2 QLF  SEMANTICSAs mentioned earlier, the denotation of a formulaF in the QLF language will be a possibly par-tial function (\[\[... \]\]) from models to truth values.Again we use the notation \[\[F\]\]m for the truthvalue of a formula F with respect to a model m(explicit reference to a variable assignment func-tion is again suppressed).
For interpretation to bemonotonic, we want \[\[G\]\] to be an extension of \[\[F\]\]whenever G is a more resolved version of F, and inparticular for \[\[G\]\] to be total if G is fully resolved.We will define \[\[...\]\] for QLFs in terms of a re-lation W between formulas, models and truth val-ues.
Evaluation rules will be given for W(F,m,v),but since more than one rule may apply (or a rulemay apply in more than one way), W will in gen-eral be a relation.
The relationship between \[\[... \]\]and W for a formula F is as follows:35?
\[\[F\]\]m=l iff W(F,m,1) but not W(F,m,0);?
\[\[F\]\]m:0 iff W(F,m,0) but not W(F,m,1);?
\[\[F\]\]m undefined iff W(F,m,1) and W(F,m,0).Henceforth we will leave the model argument mimplicit.
The evaluation rules for W will generallytake the formW(F,v) if W(F',v)where F'  contains one fewer unresolved expressionthan F (so that it is possible for the process of ruleapplication to terminate).
The use of if ratherthan iffin these rules means that it is possible forrules producing more than one value v to applyand hence for \[IF\]\] to be partial.The model provides an interpretation functionI mapping constants and predicates to individualand relations.
We will also need to assume a rela-tion S(C,H) (for 'salient') between QLF categoriesC and QLF expressions H standing for individuals,quantifiers, or predicates, but the precise nature ofthe salience relation and the way it changes duringa discourse are not important for the evaluationrules for QLF given here.
The intuitive motiva-tion for S is that the category in an unresolvedQLF expression restricts the set of possible refer-ents for that expression.
S is discussed further inSection 5.
We are now in position to present heevaluation rules, which we number Q1, Q2, etc.For standard connectives we have the obviousevaluation rules, for example,Q1 W(and(F,G),I) if W(F,1) and W(G,1).Q2 W(and(F,G),0) if W(F,0) or W(G,0).Q3 W(not (F) ,l) if W(F,0).Q4 W(not(F),0) if W(F,1).Two rules applicable to a formula F containing aterm with uninstantiated referent and quantifiermeta-variables:Q5 W(F ,v ) i f  W(F\[existsl_q,h/_z\],v)W(RCA) ,1),where:F is a formula containing the termT=term( I  ,C ,R ,_q ,_ r ) ,  andh is term such that S(C,A).andQ6 W(F,v) if W(F\[Q/_q, I /_r\] ,v) ,where:F is a formula containing the termT=term(l,C,R,_q,_r), andQ is a quantifier such that S(C,Q).
(The substitutions for the meta-variables _r and_q are to be read as part of the evaluation rule.
)A rule applicable to a formula F in which a (pos-sibly unscoped) quantified term occurs:Q7 W(F,v) if W(Q (R ' ,F ' )  ,v),where:F is a formula containing the termT=term( I ,C ,R,Q,A) ,R' is X" (and(R(X), X=A) ) IX/I\], andF' is X'(a_nd(F,X=A))\[X/T, X/I\].A rule applicable to a formula with an instantiatedseoping constraintQ8 W(EI, J  .
.
.
.
\] :F,v) if W(Q(R' ,F ' ) ,v) ,where:F is a formula containing the termT=term(I,C,R,Q,h),R' is X'(and(R(X),X=A))\[X/I\], andF' is X ' ( \ [ J  .
.
.
.
\] :and(F,X=A))\[X/T, X/I\].We also need a trivial rule for a formula with anuninstantiated scoping constraint so that it re-duces to application of other rules:Q9 W(_s:F,v) if W(F,v).Two rules are applicable to form expressions, cor-responding to the cases of an uninstantiated orinstantiated resolution meta-variable:Q10 W(F,v) if W(F\[R(P)/_r\],v)where:F is a formula form(C,R,_r )P is a predicate such that S(C,P).Q l l  W( for ra(C,R,F ' ) ,v ) i f  W(F',v)where F' is a QLF formula.In a more complete description of the semanticswe would also have to state that the evaluationrules provided give the only way of determiningmembership of the relation W.5.
NOTES ON THE SEMANTICSMonoton lc l ty :  In this paper we are usingmonotonicity in two senses which (by design) turnout to be consistent.
The first is a syntactic no-tion for QLF representations (instantiation ratherthan destructive manipulation), while the secondis semantic:1.2.F1 is a more resolved version of F2 if F1 can beobtained by instantiating zero or more meta-variables in F2.F1 is a less partial interpretation than F2 if\[IF1\]\] is an extension of \[\[F2\]\].The claim of monotonicity for QLF is that for for-mulas F1 and F2, if F1 is a more resolved versionof F2 then F1 is a less partial interpretation thanF2.36Scoping Const ra in ts :  The quantificationrules, (Q7) and (Q8), (i) select a term from a for-mula, (ii) discharge all occurrences of the term andits index in the formula and the term's restriction,replacing them by a variable, and (iii) apply theterm's quantifier to the discharged restriction andformula.
The difference between (QT) and (Q8) issimply that the latter also discharges the head ofthe scoping list, in this case by removing it ratherthan by replacing it.
(Keep in mind that the dis-charge and replacement operations take place atthe level of the evaluation rules for QLF; they arenot applied to the QLF expressions representingnatural language meanings themselves).As with Lewin's scoping algorithm, (Lewin1990), there are no constraints built explicitly intothe QLF semantics on where a quantification rulefor a term may be applied, or indeed on the num-ber of times it may be applied.
However, severalconstraints arise out of (a) the absence of any se-mantic rules for evaluating isolated terms, termindices or scope lists, and (b) the requirement thata term be selected from a formula so that its quan-tifier is known.The emergent conditions on legitimate scopingare1.
No term may be quantified-in more than once:The first application of the quantifier rule dis-charges the term.
Subsequent applications ofthe rule lower down in the evaluation wouldfail to select an undischarged term.2.
When a term's index occurs in a scope list, thequantifier ule for the term must be appliedat that point: It must be applied to dischargethe head of the scope list, and by (1) abovecannot additionally be applied anywhere lse.3.
All occurrences of a term's index must oc-cur within the scope of the application of theterm's quantifier ule: The quantification rulewill only discharge indices within the formulato which it is applied.
Any occurrences ofthe index outside the formula will be undis-charged, and hence unevaluable.4.
If a term R occurs within the restriction ofa term H, and R is to be given wide scopeover the restriction, then R must also be givenwide scope over H: Otherwise, suppose H isgiven wide scope over R. Term H will first bedischarged, replacing the term, and with it itsrestriction, in the formula to which the ruleis applied.
Then the quantification rule for Rneeds to be applied to the discharged formula,but the formula will not contain an occurrenceof the term R, making the rule inapplicable.The last two constraints have often been at-tributed to restrictions on free variables and vacu-ous quantification.
The attribution is problematicsince open formulas and vacuously quantified for-mulas are both logically well defined, and withoutsuspect appeal to the syntax of the logical formal-ism they cannot be ruled out as linguistically ill-formed.
By contrast, QLF makes these violationssemantically unevaluable.Unscoped Terms:  When a term's index is notmentioned in any scope list, the term may bequantified in at any point within the formula.
Foranaphoric terms whose referent has been resolvedto some individual constant, it does matter wherethe quantification rule is applied; since the termexistentially quantifies over things identical to asingle object, the scope of the quantification is im-material.
It is thus convenient to leave anaphoricterms like this unscoped in QLF.
Although thismakes the QLF look (syntactically) as though it isnot fully resolved, semantically it is.
For other un-scoped terms, alternative applications of the quan-tifier rule may well lead to distinct truth condi-tions, and in these cases the QLF is genuinely un-resolved.Context  Dependence:  Fully resolved QLFsare context-independent i  the same sense thatholds for closed formulas in traditional predicatelogic (i.e.
if the interpretation of the constantsymbols in the language is fixed).
UnresolvedQLFs behave more like open formulas, and there isan analogy between assignments o unbound vari-ables in predicate logic and possible resolutions ofmeta-variables admitted by the salience relationS.
S(C,H) should be thought of as providing QLFexpressions whose denotations are possible refer-ents for unresolved expressions with category C.(It would have been possible to define S as a directrelation between categories and referents, but thiscomplicates the statement of its role in resolutionand in the semantic definitions.)
We used S abovein the definition of QLF semantics, but it is alsocentral to NL processing: being able to compute Scan clearly play an important role in the process ofreference resolution during NL interpretation andin the process of building descriptions during NLsynthesis.
(The computational nalogue of S wasimplemented as a collection of 'resolution rules' inAlshawi 1990.
)An important question is what to allow as possi-ble expressions in the range of S. One observationis that as the range is widened, more NL resolu-tion phenomena are covered.
A rough summary isas follows:?
constants: intersentential pronouns?
predicate constants: compound nouns, prepo-sitions37?
quantifiers: vague determiners?
indices: bound variable, intrasentential pro-nouns?
predicates built from NP restrictions: one-anaphora?
predicates built from previous QLFs: inter-sentential ellipsis?
predicates built from current QLF: intrasen-tential ellipsis6.
RELATED APPROACHESViewed from a slightly different perspective,monotonic interpretation has a number of pointsof contact with Pereira's categorial semantics(Pereira 1990).
Put briefly, in categorial seman-tics, semantic evaluation is represented as deduc-tion in a functional calculus that derives the mean-ings of sentences from the meanings of their parts.Considerable mphasis is placed on the nature ofthese semantic derivations, as well as on the fi-nal results of the derivations (the 'logical forms'of sentences).One significant advantage of this approach isthat constraints on legitimate scoping emerge nat-urally from a consideration of permissible deriva-tions of sentence meaning, rather than arising arti-ficially from syntactic onstraints imposed on log-ical forms.
Derivations involving quantified termsfirst introduce an assumption that allows one toderive a simple term from a quantified term.
Thisassumption is later discharged by the applicationof a quantifier.
Conditions on the appropriate in-troduction and discharge of assumptions in natu-ral deduction systems impose restrictions on theway that quantifiers may legitimately be applied.For example, a quantifier assumption may not bedischarged if it depends on further assumptionsthat have not themselves been discharged.
Thisprevents the occurrence of free variables in logicalform, but without appeal to the syntax of logicalform.The discharge of terms and term indices whenevaluating QLF closely parallels the discharge ofquantifier assumptions in categorial semantics.
In-deed, the terms and the indices are precisely theassumptions introduced by quantified expressions,and which need to be discharged.
Furthermore,the different orders in which quantifier assump-tions may be discharged in categorial derivationcorrespond to the choices that the quantifier ulespermit for discharging quantified terms.Where monotonic interpretation and categorialsemantics part company is on the degree of ex-plicitness with which semantic derivations are rep-resented.
In categorial semantics, derivation is abackground process that builds up logical forms,but is not explicitly represented in the semanticformalism.
By contrast, the annotation of QLFswith scope lists provides an extra level of informa-tion about how the derivations proceed.
In partic-ular, they indicate which evaluation rules shouldbe applied where.QLF thus provides a (usually partial) specifica-tion of a semantic derivation, showing (a) what theinitial 'premises' are (roughly, lexical meanings, al-though these too may only be partially specified),and (b) the rules by which the 'premises' are com-bined.
QLF resolution amounts to further instan-tiating this specification.
This view of QLF can becontrasted with Logical Form as it is normally un-derstood, which represents the results of carryingout a semantic derivation.The difference between specifying a derivationand carrying it out is what makes resolution orderindependent in monotonic interpretation.
Makinga resolution to QLF only specifies when and howan expression should be evaluated uring seman-tic derivation; it does not carry out that part ofthe derivation.
Where no distinction is drawn be-tween making a resolution and carrying out thecorresponding step of the derivation, the order ofresolution can be important.
Thus, for Dalrymple,Shieber and Pereira (1991), where this distinctionis not drawn, the precise interleaving of scope andellipsis resolution determines the interpretation ofthe sentence.
In QLF, resolutions dictate the orderin which various steps of the derivation are carriedout, but the resolution order does not reflect thederivation order.Distinguishing between specifying and perform-ing a derivation also means that a monotonictreatment of ellipsis resolution does not need toresort to higher-order unification.
Dalrymple,Shieber and Pereira use higher-order unificationto 'unpick' the composition of constituent mean-ings obtained in the semantic derivation from theellipsis antecedent.
Some of these meanings arethen put back together to produce a predicate thatcan be applied to the ellipsis arguments.
Sincemonotonic resolution does not carry out the finalcomposition of meanings, but merely sets out con-ditions on how it is to take place, there is no needto unpick composed meanings and put them backtogether again.It is worth pointing out that monotonic inter-pretation is compatible with approaches to mean-ing as a transition between contexts or informationstates, and where the order in which transitionsare made is significant (e.g.
Veltman 1991).
Insuch a framework, monotonic interpretation wouldamount to making decisions about which transi-tions to take when, but would not involve puttingthose decisions into action.
The monotonicity in38monotonic interpretation thus refers to the way inwhich alternative derivations of sentence meaningsmay be chosen, but not to the semantic effects ofthose sentence meanings.7.
IMPLEMENTATION BENEF ITSA description of the language processing mecha-nisms to which we have applied the monotonicsemantics model is beyond the scope of this pa-per.
However, we believe that the QLP represen-tation presented here brings significant advantagesto implementing mechanisms for reference resolu-tion, scoping, preference and generation.Re ference  and  Scoping: The order indepen-dence of resolution operations allows for a varietyof control structures in implementing a resolutionmechanism.
We find it convenient to make a bot-tom up pass through QLFs making reference res-olutions, followed by a stage of scoping resolution,and to iterate over this should any of the resolu-tions introduce further unresolved expressions.The salience relation S can be implemented asprocedures that search for properties, objects orindices in context.
Scoping proceeds imply bythe non-deterministic instantiation ofscoping con-straints, subject to the restrictions imposed onevaluable QLFs (Section 5), plus techniques forignoring logically equivalent scopings, as for ex-ample described by Moran (1988).P re ference  and  D isambiguat ion :  A resolvedQLF preserves all the information in the originalunresolved QLF, and also records the correspon-dence between resolved and unresolved expres-sions.
This makes it possible to define preferencemetrics that can be used for ranking alternativeinterpretations independently of the search strate-gies used to derive them.
For example, in the caseof scoping, these metrics can combine informationabout how far a quantifier was 'raised' with infor-mation about the surface form of its determiner.Preference ranking over alternative resolutions fa-cilitates automatic disambiguation of input.
Inter-active disambiguation can make use of generationfrom resolved QLFs for confirmation by a user.Generat ion :  There is a strong connection be-tween monotonicity and reversibility in languageprocessing systems.
Monotonicity of unificationmeans that algorithms uch as head-driven gener-ation (Shieber et al1990) can be applied to gram-mars developed for analysis.
We use a variantof this algorithm for generating from QLFs, andthe monotonicity of semantic interpretation meansthat the grammar used for generating from un-resolved QLFs (the normal 'output'  of the gram-mar) can also be used for generation from resolvedQLFs.In parallel to the distinction between grammat-ical analysis (of NL into unresolved QLFs) andinterpretation, we make the distinction betweengrammatical synthesis (of NL from QLFs) and de-scription.
Description is the process of derivinga QLF from which synthesis proceeds by takinga fact (e.g.
a database assertion) as input.
Wehope to report on our approach to description else-where.
However, one of the principles of QLF-based description is that while interpretation i -stantiates referent fields in underspecified QLFs,description involves instantiating category and re-striction fields for QLFs in which referent fieldsare already instantiated.
The preference metricsapplied to rank alternative interpretations can beapplied equally well to ranking resolved QLFs pro-duced by a nondeterministic description process,so there is a sense in which the preference mecha-nism can also be made reversible.REFERENCESAlshawi, H. 1990.
"Resolving Quasi Logical Forms".Computational Linguistics 16:133-144.Alshawi, H., ed.
1992 (in press).
The Core LanguageEngine.
Cambridge, Massachusetts: The MITPress.Bronneberg, W.J.H.J., H.C. Bunt, S.P.J.
Landsber-gen, R.J.H.
Scha, W.J.
Schoenmakers and E.P.C.van Utteren.
1980.
"The Question AnsweringSystem PHLIQAI".
In L. Bole (ed.
), NaturalLanguage Question Answering Systems.
Macmil-lan.Crouch, R. and H. Alshawi.
1992.
"Ellipsis and Dis-tributivity in Monotonic Interpretation", Techni-cal Report, SRI International, Cambridge, UK.Dalrymple, M., S. M. Shieber, and F. C. N. Pereira.1991.
"Ellipsis and Higher-Order Unification".Linguistics and Philosophy, 14:399-452.Lewin, I.
1990.
"A Quantifier Scoping Algorithm with-out a Free Variable Constraint", Proceedings ofCOLING 1990.Moran, D. B.
1988.
"Quantifier Scoping in the SRICore Language Engine".
Proceedings of the 26thAnnual Meeting of the Association for Computa-tional Linguistics, 33-40.Pereira, F. C. N. 1990.
"Categorial Semantics andScoping", Computational Linguistics 16:1 1-10.Shieber, S. M., G. van Noord, F. C. N. Pereira, andR.
C. Moore.
1990.
"Semantic-Head-Driven Gen-eration".
Computational Linguistics 16:30-43.Veltman, F. 1990.
"Defaults in Update Semantics", inH.
Kamp (ed), Conditionals, Defaults and BeliefRevision, DYANA deliverable R2.5.A.39
