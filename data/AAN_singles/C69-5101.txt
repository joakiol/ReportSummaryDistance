A SEARCH ALGORITHM AND DATA STRUCTURE FOR AN EFFICIENT INFORMATION SYSTEMbyShou-ehuan YangData and Computation CenterUniversity of WisconsinMadison, WisconsinAbstractThis paper describes a system for information storage, retrieval,and updating, with special attention to the search algorithm and datastructure demanded for maximum program efficiency.
The programefficiency is especially warrantedwhen a natural language or a symboliclanguage is involved in the searching process.The system is a basic framework for an efficient information system.It can be implemented for text processing and document retrieval;numerical data retrieval; and for handling of  large files such asdictionaries, catalogs, and personnel records, as well as graphic ~informations.
Currently, eight cor~nands are implementedand oper-ational in batch mode on a CDC 3600: STORE, RETRIEVE, ADD, DELETE,REPLACE, PRINT, C(R4PP, ESS and LIST.
Further development will be on theuse of teletype console, CRT terminal, and plotter under a time-sharing environment for producing innnediate responses.The maximum program efficiency is obtained through a uniquesearch algorithm and data structure, instead of examining the recallratio and the precision ratio at a higher level, this efficiency ismeasured in the most basic term of "average number of searches"required for looking ~p an item.
In order to identify an item,at least one search is necessary even if it is found the first time.Hc~ever, through the use of the hash-address of a key or keyword,in conjunction with an indirect-chaining list-structured table, anda large available space list, the average number of searches re-quired for retrieving a certain item is 1.25 regardless of the size ofthe file in question.
This is to be compared with 15.6 searches for thebinary search technique in a 50,O00-item file, and 5.8 searches forthe letter-table method with no regard to file size.
*This study was supported in part by the National Science Foundationand the University of Wisconsin.Best of all, since the program can use the same technique forstoring and updating informations, the maximum efficiency is alsoapplicable to them wlth the same ease.
Thus, it eliminates all theproblems of inefficiency caused in establishing a file, and in up-dating a file.I .
MOTIVATIONI n  our  da i ly  l i fe ,  there  are  too  many ins tances  o f  look ing  fo rsome type  o f  in fo rmat ion  such  as  check ing  a new vocabu lary  in  ad ic t ionary ,  f ind ing  a te lephone number and/or  an  address  in  ad i rec tory ,  search ing  a book o f  a cer ta in  author ,  t i t le ,  o r  sub jectin  a l ib rary  cata log  card  f i l e ,  e tc ,  Be fore  the  des i red  in format ioni s  found,  one has  to  go  through a number o f  i tems or  ent r ies  fo rc lose  examinat ion .
The quant i ta t ive  measurement  i s  usua l ly  te rmedas  the  "number  o f  searches" ,  "number  o f  lookups" ,  o r  "number o f  f i l eaccesses"  in  mechan ized  in format ion  sys tems.HoWever, as  K ing po in ted  out  in  h i s  a r t i c le  in  the  Annua l  Reviewo f  In fo rmat ion  Sc ience  and  Techno logy ,  volmne 3,  (pp .74-75)  that  themost  cOmmon measures  o f  accuracy  o f  an  in format ion  sys tem are  thereca l l  ra t io  and prec is ion  ra t io .
These two measures  have  come undercons iderab le  c r i t i c i sm for  the i r  ind i f fe rence  in  re t r ieva l  character -i s t i cs ,  be ing  mis lead ing  and  produc ing  vary ing  resu l ts .
They probab lyshou ld  be used  pr imar i ly  to  h igh l ight  a sys tem's  unsat i s fac toryper f~nce .
From the  fa i lu re  ana lys i s  o f  Hooper ,  K ing ,  Lancasterand  o thers ,  the  reasons  are :  incor rect  query  fo rmulat ion ,  index ingerrors, mechanical errors, incorrect screening, etc.In the same volume (p. 139), Shoffner cc~nented on the evaluationof system, s that "it is important to be able to determine the extentto which file structures and search techniques influence the recall,precision, and other measures of syste~ performance".
Not until veryrecently, file structure and search techniques were apparentlyiunpopular topics among information scientists except Salton and afew others.
Nevertheless, these topics have been attacked constantlyby system scientists for a much smaller size of file but the maximt~efficiency is a vital factor for the total system.
They are fre-quently discussed under the title of "symbol table techniques", or"scatter storage techniques" as used by Morris as the title of hisarticle.
In addition to the "number of searches" and the "number oflookups" other terminologies used by the syste~ scientist forreferencing the most basic measure are the "number of probes"~ the"number of attempts", and the "search length".Ever since 1964 the author stepping into the cemputer professionnoticed that the efficiency of a file handling system is alwayscrippled by its file searching technique no matter how sophisticatedthe system.
This was especially the case during 1965 and 1966 whenthe author was employed at the Itek Corporation on an Air Force projectof a Chinese to English machine translation experiment.
The bestsearch technique used for dictionary lookups was the binary searchwhich is still considered one of the best techniques available today.For a large file with a huge number of records, entries or items,the binary search technique will still yield a substantial numberof searches which is a function of the file size.
The typical filesare: dictionaries of any sort, telephone directories, librarycatalog cards, personnel records, merchandise catalogs, doct~mentcollections, etc.
For example, in a 50,000-entry file system theaverage number of searches for finding an entry is 15.6 calculated aslog2N.
This figure will not be very satisfactory if frequentsearch inquiries to a file are the case.
As a result to findingbetter search techniques, at least three kinds of search techniquesor algorithms are found to be more satisfactory than the binary search.Namely they are: lamb and Jacobson's "Letter Table Method", Peterson's"Open-Addressing Technique", and Johnson's "Indirect Chaining Method".They have a rather interesting c~on feature that the file size isno longer a factor in the search efficiency.-3-IIo EFFICIENCY OF VARIOUS SEARCH AIEORITHMSIn order to have a gross understanding of various searchalgorithms, six of them are examined and compared in respect totheir search effieieneies.i.
Linear SearchThis is also called sequential search or sequential scan.The linear search of an unordered list or file is the simplestone, but is inefficient because the average number of searchesfor a given entry in a N-entry file will be N/2.
For example,if N = 50,000, the average number of searches for a given entryis an enormous 25,000.
It is assumed that the probability offinding a given entry in the file is one.
The average numberof searches in a linear search is calculated as:S N + 1 or S = _~N2 2if N is a large number?The linear search has to be performed in a consecutivestorage area and this sOmetimes causes certain inconvenience ifthe required storage area is very large.
The inconveniencecan be avoided by using the last cOmputer word (or some bitsof it) to index the location of the next section of sto~agearea used and thus form a single chain for searching.
Thisvariation of the linear search method is called the singlechain method.
It differs from the linear search in storageflexibility but is otherwise the same in the efficiency.2.
Directory SearchThis is also called block search.
With the aid of adirectory which contains the addresses of every Bth entry ofthe ordered file, a better result can be achieved because theaverage number of searches is greatly reduced.
For the bestresult, choosing the blocking factor B = 220 in the exampleabove, the answer is 223.6 searches whihh is calculated as:-4-N+B 2N B s= 2"--'F- or S=-3~- -  + --?-3.
Binary SearchUsing the binary search method will yield a more satis-factory result.
The search starts with the midpoint of the file,and goes to the midpoint of the associated remaining half ifa match fails.
The comparison of their values Will decide whichhalf of the file should be tried next time.
This process willbe repeated until a n~tch is found.
The average number ofsearches in the example is calculated through the following formulaas 15.6 searches:N+I  S = ~ log2(N+l ) - i or ~ = log2Nif N is a large number.The Hibbard's Double Chain Method and Sussenguth's Dis-tributed Key Method are compatible to the binary search insearch efficiency but have a much better update efficiencybecause of the list-structured address-chaining mechanism.The respective calculations of the example are:Hibbard: S = 1.4 log2N = 21.9 andSussenguth: S = 1.24 Iog2N = 19.44.
Letter Table MethodThis attractive method as suggested by Lamb and Jacobsenin 1961 for the dictionary lookup in a machine translationsystem did not receive good attention for its possible appli-cations in general information systems.
The reasons could bethe immediate response to the numerous letter tables after thesecond level which indicated its inefficiency in storage, andthat no clear search efficiency and update efficiency wereexpressed.Suppose only the twenty-six English letters are involved,in theory there are twenty-six tables at the firs?
level, 262-5-tables at the second level, 263 tables at ~he third level~etc.
The number of letter tables will in practice be reduceddrastically after the second level because of the actual limi-tation in letter combination in for~Kng a vocabulary.
However,no studies of this sort are available for the calculation ofstorage requirement to disprove its storage inefficiency.The average number of searches or the expected search lengthof this method can not be calculated as a function of the file ordictionary size.
It is simply the average number of letters orcharacters of a certain language plus one space character orany other delimiter.
For the English language, it is a favor-able 5.8 searches (S = 4.8 + I), with no concern of the filesize.
Its update efficiency is compatible with its searchefficiency and may be estimated at less than twice the averagenmnber of searches.In order to achieve the above efficiency, the letter tablesat each level should be structured in alphabetic order, andevery letter should be converted into a numeric value suchas A = I, B = 2, C = 3, ... , Z = 26 and the space delimiter = 0or 27 through a simple table-lookup procedure.
Those convertedvalues would then be used as the direct-access address withineach subset of alphabetic letters at each letter-table level.This discards the need for binary search within each subset of"brothers" as in the cases of Hibbardls and Sussenguth'ssearches.5.
Open Addressing MethodAs early as 1957, Peterson introduced this method forrandom access storage addressing.
This method is also calledlinear probing.
It assumes the existence of a certain hashfunction to transform the key or keyword of an entry into anumerical value within the range of thq table size which ispredetermined as 2 M for any integer value of M. The tablesize should be large enough to accomodate all the entries-6-of the file.
As in other methods, this method also assumes theprobability of finding an entry in the file is equal to one.Under these two assumptions, and if a good hash functionis selected for a balanced distribution of hash values, theopen addressing method will resolve the situation if more thanone key is mapped into a particular slot in the table, andyields a very attractive average number of searches in most ofthe cases.
The algorithm is best described in Morris' phrases:'The first method of generating successivecalculated addresses to be suggested in theliterature was simply to place colliding en-tries as near as possible to their nominallyallocated position, in the following sense.Upon collision, search forward from thenominal position (the initial calculatedaddress), until either the desired entry isfound or an empty space is encountered--searching circularly past the end of thetable to the beginning, if necessary.
Ifan empty space is encountered, that space be-comes the home for the new entry.
"Peterson did some simulations of open addressing by generatingrandom numbers and storing them into a 500-entry table, and theresult of the average number of searches from nine different runsis compared with the calculation obtained through Morris' formulaor Salton's formula (L is the loading factor or the percentageof table fullness at the time of search):L2Morris: S = ~lbLL Sa l ton :  S = ~ + 1-7-Table I.
Average number of searches in open addressingLoading factor Peterson Morris/SaltonO.
1 1.053 1.0560.2  1.137 1.
1250.3 1.23 1.2140 .4  1.366 1.3330.5  1.541 1.50.6 1.
823 1.750 .7  2.26 2.1670.8  3.223 3 .00 .9  5.526 5.51.0 16.914It is thus clear that unless the table is nearly full, theaverage number of searches will be surprisingly small.
For example,if the loading factor is equal or less than 0.9 the average numberof searches will be an amazing 1.965.
This can be achieved byallowing an extra ten percent of the table size.
In this case,its storage efficiency will become less attractive.
However, itssearch efficiency and update efficiency are excellent due to itsextremely low average number of searches.6.
Indirect Chaining MethodSince this method makes the same two assumptions as openaddressing method and is heavily dependent upon the hashaddressing, a more descriptive name for this method is suggestedas Hash-Addressed Indirect-Chaining Search (HAICS).
Other namesfound in the literature are scatter index tables~ direct chaining(a variation in chaining structure), closed addressing (directand indirect chaining), and virtual scatter tables (matchingadditional hashed bits).The HAICS method uses a structured four-field table, anadditional non-addressable overflow area of the table or a separate-8-overflow table, and a free storage area called the availablespace list.
It is aimed to fully utilize all spaces reserved forthe table before using the overflow area and the free storagearea.
This method treats the addressable table area as end-rounded,i.e., the first address of the table is considered following thelast address.
When overflow occurs, the nonaddressable overflowarea is made available as an extended table area.
This is soarranged to achieve better storage efficiency since in most casesthere is no need for the additional overflow area and thus it canbe ~nitted at the beginning or added on when the need arises.The HAICS chaining table has fou= fields: keyword (key ordata), index, link and pointer.
The ke>~ord field is usually onecomputer word in size for accomodating symbols which identifiesthe entry.
The index field should have enough bits in size tospecify the largest relative address in the available space list,so that the variable length entry stored in the available spacelist could be indexed from this table.
The link field is used toindicate the linkage to the next table address where information ofentries of the same hashed value can be found.
The pointer fieldis designated to contain the address of the first entry of entrieswith the same hashed value.
Both the link field and the pointerfield should have a field length in bits large enough to storethe largest relative address of the addressable table area, i.e.,the size of the addressable table.Entries are entered at their hashed addresses first, and thenupon collision allotted to the next (or surrounded) empty addresses.Their pointers and links are set up for the proper chaining.
Whenan entry is being looked up, the first step is to check the pointerof the entry at hashed address, then go to the pointed address andstart searching from this beginning entry.
If it is not found,the entry pointed by the link of current entry is searched until-9-it is found or there is no further link.
The latter case indicatesthat there is no match for this search.
When the entry is foundthrough keyword identification, the address stored in the i~dexfield will direct the actual entry storage in the available spacelist.
The index field and the available space list are needed onlyif the entries are of variable length so that storage space can beconserved.
In the case of fixed length entries, the availablespace llst is no longer needed and the index field in the tableshould be changed into an entry field with the desired fixed length.A great advantage of the hash addressing is that to updateentries in a file requires no sorting or resorting of any kind.
Inthe HAICS method, to delete an entry is to follow the algorithmuntil the entry is retrieved, and then to hoo~ up the next entryin the chain to the previous entry.
All the storage previouslyoccupied by this entry is freed for later use.
To add an entry willuse the same algorithm to retrieve the last entry in a particularchain and then to set up the linkage to the next empty space inthe table and have the information of the added entry stored there.The added entry itself is stored in some free storage a~ea in theavailable space list being indexed in the chaining table.This method was first introduced in 1961 by Johnson and itsaverage number of searches is calculated simply as:S=I+- -  L2More interesting yet, this foz~ula is still valid when the loadingfactor L is greater than one which means the number of entriesexceeds the allotted table size and the information of overflOWentries are kept in the overflow area while entries themselvesare again placed in the available space list.
The cost of ower-flo~ is increased linearly at merely 0.9 searches per I00%-I0-increase of overflow.
This provision virtually eliminates the fearof overflcw which frequently causes almost unmanageable difficultiesand at very high expense.Before the table is full as in the usual case, the averagenumber of searches of the indirect chaining method is a hard-to-believe 1.25 with a meximum of 1.5 when the table is about full.It is at these two figures and the above-mentioned update efficiencyand overflow advantage that the author believes some storage ineffi-ciency and programming complexity should be tolerated painlessly.Table 2.
Average number of searches in indirect chainingLoading fac tor  JohnsonO.
1 !.050.2 1.10.3 1.150.4 1.20.5 1.250.6 1.30.7 1.350.8 1.40.9 1.451.0 1.51.5 1.752.0 2.03.0 2.54.0 3.0-ii-An overview of various search algorithms discussed above isgiven in the foll~ing table:Table 3.
Comparison of various search algorithms?AverageSearch method number of Sample S Search Update Storagesearches (N=50,000) efficiency efficiency efficiencyl.Linear search ~ 25,000 Poor Good Excellent2Single chain N 25,000 Poor Good Excellent22.Directory N+__B_B 223.6 Average Average Excellentsearch 2B 2 (B = 220)3.Binary searchDouble chain(H?bbard)Distributedkey(Sussenguth)4.Letter tablemethod(Lamb and3acobson)5.0pen address-ing(Peterson)6.1ndirectaddressing(Johnson)log2N 15.6 Good Poor Good1.4 logaN 21.9 Good Good Average(opti~a~)1.24 log^N 19.4 Good Good AverageAverage 5.8 Excellent Good poornumber of (English)letters perword plusone spaceL 1.965 Excellent Excellent Good2(1-L'-"~" + 1 (L S 0.9)L + I 1.25 Exce l lent  Exce l lent  Average2 (L < 1.0)-12-For most search algorithms not included in the above table, theyare variations and combinations of the linear search," single chain,directory search, binary search, double chain and distributed .keyaimed at  the  improvement of a certain efficiency.
For example, thedouble chain method itself is a combination of binary search, avariation of single chain, and the linear search, and it is aimed toimprove the update efficiency of the binary search.I I L  KEYWGRD CONSTRUCTION AND HASE FUNCTIONIt is understood from the previous comparison of various searchalgorithms that the turning point for the excellent performance insearch and update efficiencies is at the hash addressing which isessentially a simple ~rocedure applying a certain hash functionupon a search key or keywrod.
Since the same keyword will alwaysbe hashed into the same hash value for table addressing, thecriteria for a keyword selection or construction to identify anentry is the characteristic of uniqueness.
And, in order to mini-mize the undesired collision upon hashed addresses, a good hashfunction should be selected such that it would yield a balanceddistribution of hashed values within the range of the table size.I.
Keyword ConstructionUnder the consideration of the programming and computingefficiency and of the storage efficiency, usually a keyword ofone computer word size is more desirable, e.g., eight-characterkeyword in a 48-bit word machine.In machine files such as dictionaries, thesauruses, keywordindices, and merchandise catalogs, the keyword is almost readilyavailable for hashing.
If the keyword is longer than theallowable number of characters, a simple word truncation at theright end or some word compression schemes can be used toreduce the word size to a desired amount of number of characters.-13-For example, the standard word abbreviatiOn, and a simpleprocedure to eliminate all the vowels and One of the twosame consecutive cOnsonants in a word will all be acceptablefor th i s  purpose.In cases of author indices and catalogs, membershiprosters, alphabetical telephone directories, taxatiOn records,census, personnel records, student files, and any file usinga person's name as the primary source of indexing will have theconvenience in using the last name plus one space character andthe initials as the keyword.
The word compression scheme iscer ta in ly  appl icab le  i f  i t  is  necessary.When t i t le  indices and cata logs,  subject  indices and cata logs,bus iness telephone d i rec tor ies ,  sc ient i f i c  and technica l  d ic t ionar ies ,lexicons and idiom-and-phrase d ic t ionar ies ,  and other descr ipt ivemulti-word information are desired, the first character of each non-trivil word may be selected in the original word sequence toform a key~cord.
For example~ the rather lengthy title of thispaper may have a keyword as SADSIRS.
Several known informationsystems are named exactly in this manner such as SIR (Raphael'sSemantic Info~at ion Retrieval), SADSAM (Lindsay's SentenceAppraiser and Diagrammer and Semantic Analyzing Machine),BIRS (Vinsonhaler's Basic Indexing and Retrieval System), andCGC (Klein and Simmons' Computational Grammar Coder).An alternative to meet the need of the multi-word situationbut with a possible improvement in the uniqueness of the re-sulting hashed value is to perform some arithmetic or logicalmanipulation on the binary representation of the multi-werd.When the multi-word is stored in consecutive computer words,each binary representation of a computer word is treated asan individual constant.
Then either an arithmetic operatiOn(e.g., ADD, SUB~RA~E~ MULTIPLY, and DI rgE)  or a logicaloperatiOn (e.g., AND, OR) is to be performed on these computerwords to collapse them into one single computer word as the-14-keyword.
The resulting keyword from this kind of manipulationis not human readable but will serve its purpose for hashaddressing.In some cases where a unique number is assigned to anentry~ there is no need to hash this number provided thatnumber is inside the range of the allotted table size.This is mostly seen when a record or document is arranged inits accession number or location index.
Otherwise the numbercan be treated as letters and be constructed in one of themethods described above.2.
Hash FunctionThe different functions used for random number generationscan also serve as the hash function if a likely one-to-onerelation can be established between the keyword and the resultingrandom number.
This is also subject to the restriction thatonly nmnbers inside the range of table size ace aceeptable.
Fre-quently this method will not give a balanced distribution oftable addresses and thus affect the search and update efficiencies.The arithmetic or logical manipulation described above forhandling multi-word items can also be used as a hash function.One method called division hash code is suggested by Maurerthat the binary representation of a keyword is treated as aninteger and divided by the table size.
The remainder of thisdivision is thus inside the range of the table size and isused as the hash value.
As Maurer noticed this method has thedisadvantage that sometimes it does not produce indices wh ichare equally distributed.Three methods of computing hash addresses with provensatisfactory results were described very neatly by Morris:-15-"If the keys are names or other objects thatfit into a single machine word, a popular methodof generating a hash address from the key is tochoose some bits from the middle of the squareof the key--enough bits to be used as an indexto address any item in the table.
Since the valueof the middle bits of the square depends on all ofbits of the key, we can expect that different keyswill give rise to different hash addresses withhigh probability, more or less independently ofwhether the keys share some coe~on feature, say allbeginning with the same bit pattern.
"If the keys are multiword items, then some bitsfrom the product of the words making up the key maybe satisfactory as long as care is taken that thecalculated address does not turn out to be zero mostof the time.
The most dangerous situation in thisrespect is when blanks are coded internally as zerosor when partial word items are padded to full wordlength with zeros.
'~ third method of computing a hash address isto cut the key up into N-bit sections, where N isthe number of bits needed for the hash address, andthen to form the sum of all of these sections.
Thelow order N bits of the sum is used as the hashaddress.
This method can be used for single-wordkeys as well as for multiword keys .
.
.
.
"All these three method assume one slight restriction thatthe size of the table has to be a power of two because of thebinary bit selection.
Personally the author prefers the firstmethod of these three due to the extremely simple programminginvolved.
Depending on different machines, the main operationrequires about five machine language instructions: load Aregister with the keyword, integer multiply with the keyword,left shift A and Q registers X bits so that the desired bitsis at the left end of the Q register~ clear A register, leftshift A & Q registers again Y bits so that the desired bitsare resided at the right end of the A register (CDC 3600 COMPASS).-16-If the second method described by Morris is used, thekeyword construction for multi-word itom can be eliminatedif there is no risk of the kind described.
The thlrd methodis more interesting because it has the generality of acceptingboth single-word and multi-word itoms but at a slight cost ofsome more programming which is to be offset by the cost ofmulti-word construction.IV.
HAICS DATA STRUCTUREIn response to the needs of search and update efficiencies,the data structure for the HAICS technique has to be organized ina much more sophisticated way with some additional storage require-ment over the entries themselves.
As previously described underthe Indirect Chaining Method, it requires a fixed-size four-fieldaddressable chaining table for bockkeeping the keywordand all theinfornmtion for the chaining mechanism, a reserved free storagearea called the available space list for storing the variable-length entries themselves, and an added-on non-addressable overflowtable area for overflow chainings.The overall HAICS data structure is quite list oriented butit is packed into the form of arrays for a more efficient indexingand searching procedure.
A test program has been written in CDC3600 Fortran (a variation of Fortran IV) for the convenience ofadapting to other computers.
The discussions following will fre-quently refer to the Fortran language and the list structure fora better clarification.I.
The Chaining TableThe four-field table can be easily set up as four single-dimensional arrays or as a four-dimensional array at the costof several wasted bits in the computer word for storing theindex to the available space list, the link to the next tableaddress, or the pointer to indicate the beginning of a chained-17-sub-list.
The savings are less computer word-packing andunpacking operations.The positions of each four-field table item in relationto the first item, i.e., the hash addresses, can be viewedas the main list of the table.
The linked entries of the samehashed address are treated as a sub-list.
Since the relativeposition of each table item is identified with its hashedaddress, there is no need to set up an address index for eachitem.
Besides, since each entry can be hash-addressed withan average number of searches at 1.25 and that most chainsare not much longer than one or two entries, it is not necessaryto have a backward link within a chain.The layout of the chaining table is shown in Table 4wi thsome sample linkages indicated in hand-drawn circles andarrows.-18-Table 4.
The chaining tableTHE CHAINING TAHLE - -V~LiW KFYWD~n lN-~v~'1  EARPHONE ~96ABSOCOO 233 L~ERS R 377LMERS H~ 3~9_~-~.._~____'i+ _ .
u~s~ .
.
.
.
.
.
.
.
.
~I T M K  DNI~TCB _ .
.
.
.
.
.
.
+ .
.170o ~ILAM-DATACIRC} :l1~ ~AeKNOIS,..,~------~i3 CAelNET14 EMEeS MS~ .15 EMERY OF16 ~ACI11 MAOIS AM"1~ EMSl q  MASE~~n ~MERS l21 ~MERS HE__.
~3 J.
)TADPI~AUSORflTN~6 BAFFL~F72~ EMEHS AT30 BABBLE3\ ]  ~MERS G32 EMERS HC~) 0 00 ............. 0 ....2.91 0 B27~ 0 ...... 9 .................0 U 099\ [51  o .
.
.
.
.
16  .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
;s35 0 - o401 0 1.6 .
.
.
.
.
.
.
.
.
.
.
.
.415 u 04;)4 0,,'I0~ o IH43:~ 0 0 ............364 21 ~r.3T~,~ ,,, i~  ~ .
.
.
.
.
.
.
.
.
.
.
.
.
.3r  o .
32 .
.
.
.
.
.
.
.
.
.119 0 2~n u .3L .
.
.
.
.
.
.
.31.~ 0 0J,P I II3b~q 0367 0 o-19-The four-field table items can also be viewed as four-field notes or cells in a list structured presentation:I keywordAn example of the list structured presentation of the HAICSsystem can be illustrated as follows:Figure i.
List presentation of the HAICS data structure116KENT LB241 ~- -  ~ 857 MASS.
AVE.251261~22Z2 SUNSET BULD.~ LOS ANGELS I CALIF.-20-MASS.2.
The Available Space List1~is can be a single one-dlmensional array for the bests torage  e f f i c iency  in  accomodat ing  var iab le  length  ent r ies .The beg inn ing  o f  an  ent ry  i s  indexed in  the  index  f ie ld  o fthe  cha in ing  tab le  the  re la t ive  pos i t ion  o f  the  beg inn ingcomputer  word  in  the  ava i lab le  space  l l s t .
Th is  i s  a l soshown in  the  examples  o f  F igure  I .
The end ing  o f  an  ent rycan  e i ther  be ind icated  by a spec ia l  symbol  such  as  twoconsecut ive  b lanks  or  EOE as  the  abbrev ia t ion  o f  end-o f -ent ry ,or  ca lcu la ted  as  the  ent ry  length  and  p laced  a t  the  beg inn ingo f  an  ent ry .Mu l t i -d imens iona l  a r rays  are  usua l ly  waste fu l  fo r  s to r ingvar iab le  length  ent r ies .
I f  the  ent r ies  a re  o f  f i xed  lengththen ,  as  descr ibed  before ,  there  i s  no  need to  have  a separateavailable space list.
These fixed length entries can be putdirectly in the enlarged index field of the chaining tablefor a more efficient processing.3.
The Overflow TableThe overflow table is structured the same way as theChaining table except that it is not accessable throughthe hash function.
It serves as an emergency device onlyafter the chaining table is fully utilized and additionalstorage area is available at that time.
When the overflowtable is established to meet the emergency, its array namesand the size are made available to the ~CS procedure as anextended area for the chaining table.V.
HAICS AIEORITIR~S FUR STORING~ RETRIEVING, UPDATING~ AND UTILITYFUNUTIONSThe logical procedure of the HAICS technique is described inalgorithms for easy adaption to procedure-oriented languages suchas Fortran and Algol.
Currently, eight comnands have been imple-mented and operational on the CDC 3600 test program: STORE, RETRIEVE~ADD, DELETR~ REPLACE, PEINT~ CCHPRESS, and L~ST.
They can beftmctionally classified into three groups: the main algorithms forSTORE and RETRIEVE; the updating algorithms for ADD, DELETE, andREPLACE; and the utility algorithms for ~ 3  CGMITRESS~ and LIST.-21-The two main algorithms are frequently util ized by other algorithmsexcept PRINT.These algorithms are presented in detail in the following:I.
A lgor i thm STORE (S)This algorithm is to be used for establishing a HAICSfile at the very beginning.
It is assumed that the arraysfor the chaining table and the available space list havebeen set up properly, and that keywords and the hashfunction have been constructed or selected appropriatelythrough out the subsequent uses of this file.SI Clear the arrays for the Chaining Table andthe Available Space list, and set up properindices for these tables$2 Compute the hash value of the given keyword,I = HASH(KEY)$3 If POINTER (I) = 0 and KEYWORD (I) = 0, thenKEYWORD (I) ~ KEY$4 The first available address in the AvailableSpace List, J, for storing the entry is placedas INDEX (I) = J$5 The entry is stored in the Available Space List(ASL) sequentially starting at ASL(J) and witha special symbol EOE placed at the end of theentry in ASL, and exit on success.$6 If POINTER (I) = 0 and KEYWORD (I) 4 0, then$7 Search the keyword array downward and end-rounduntil a KEYWORD (I) = 0 is found$8 Set I = POINTER (I), KEYWORD (I) = KEY, and goto Step $4S9 If a KEYWORD (I) = 0 can not be gound in thekeyword array, a message is given to indicatethe overflow of the Chaining Table and thenexit on failure.SI0 If POINTER (I) ~ 0, then I = POINTER (I)SII If LINK (1) = 0, then go to Step $7 for aKEYWORD (I) ~ O, upon failure, go to Step S9;upon success, go to Step SI2-22-S12 Set LINK (I) = I, KEYWORD (I) m KEY, and go toStep S4S13 If LINK (I) ~ O, then set I = LINK (I), go toStep  S l lS14 Repeat for additional entries starting at Step $2.Examples in  Tab les  5 and 6 show the  resu l t  o f  severa ls to red  ent r ies  under  th i s  a lgor i thm.-23-Table 5.
The chaining table after a STORE conmmndTHE CHaI,~II,qG TABLE - -v/~ L i l ( :4b-ilq!
?
?1KEY wORO !
{qqE X _LzNKk.ARP ,.4 (~ r~IC.
C .
_~ , .~A~F;OCOO ~3I" f~ERS R 377Li'4E &!
~ HL 34oI}ATA @.4Z~LA'I 29 (!
)ATACIRC P74u ~o c~Q .,.6 ~ ._u leo 7u ~u qF~E~Y OJ  3 '-) ~., ....C~HINE IE f4ER ~ HS .,r.MER Y I)F ~.h I 0 ,n0 n.I (.J ~ ........iNS 3~,~ V I~: 0 n~- MI'IR S I 31b,~ ~1 ?_n~MERS NI- 37"  U QP2 ~ UZ3 UTAL)PD 2b;4  A~f )AODIR;-:, ~H SOt-~ R T q__ .. ~ AFI~ LF="~ P ,4 EMER$ AT ~gJ~.
/  290-24-Table 6, The available space list after a STORE commandT-E AVAILA,-.ILE $1..'~CF LIST - -__  _ _  a~.}.
~_9.EF_S5 .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
li'~F__ oR_MAI/_O~.
-~ .
bATA ANt} DATA PROCESSING DICTIONARY, BY JAMES F. WO TR ANSN~" }' ()~.Jw LN, ES ~OF~::'(w~",~/--'~'ll'(AHSOLt.
;TE ADDRESS)THE IDENTIF ICAT IO~ OF A SPECIF17 IC REGISTER OR LOCATIPN I,~ STORAGE.
FOE (ABSOLUTE CODIN(~2-~ )~OUING IN .,~HICH ALL Ar~i)RESSES REFER TO SPECIFIC MACHI'.IE REGISTEQ'I N THE IRANSMISSIuI~i OF w~VES OVE~ RADIO OR wIRE PAT~S OUE TO COK.?
",.q VI:'RSI().,~ INTO HEAT OR OTHER FORe'AS OF ENERGY, IN WIRF' TRANSMISSIo57 ~J, I~..IE i"I~RM I~ USUALLY APPLIEO ONLY TO LO.~S OF ENERGY INEXTRANEOh50S ;AEUI,".. EUE ( I ) ?
AC~GRE~ATE cROSsTALK FROM A LAR@E NU7~4 M:..IEw UF JISTURHIi",Ib CHANNELS.
(2) .
UNwA,qTED 'r~ISTURMING SOUND.
.
.
.
.
.
.
.
.
~!
_~_I!,L A CARRIER_O~ OTHER MUL-TIPJ_.E-.C~LAJ~I~IEL- SY~SIEM.-'Eu~4;.J~I-J:'E-~S-UL-T--F-P.Q .
.
.
.
.
.~,...) vl THE A~;,~wE~/~,~E CROSSTALK_ L)R MUTUAL INTERFENENCE FRnM DTHER CHA',.r~l r.~EL~;, iUE.
(~:~j~I--II~(HAC,~(.~RUUN|~ NOISE)THE TOTAL SYSTEM ~'iOl.~E INDEPE~1,~h L)EHT 0(" THE"P~"~ESt.r~CF OR AHSENCE OF A SIGNAL.
THF SITGN~L IS  NOT|13 TO ~E I'~CLL~I)I'U AS PART uF IHE NOISE.
Eu~ A SHIELOIN~ STRuI " \ ]  CTURE OR PARTITION ELSE() TO INCREASE THE EFFECTIVE LFNI3THOF THE .FI~q  XTE.R.
',IAL ITRANSMISS..{(.
)N PATH ~ETWEEI~ .TwO___p~_N~.S_._A$.~EO~_.TR.~S~I~.~S.IOJ~.___137 PAIH HETWEE".~ I,wO POINTS AS FOR EXAMPLE, HETvJ, I~N THE FRONT AND T~'Iw~ F HACk oF A~,~ ELECrROACnUSTIC TRANSDUGER,EOE C.L.?.j|--3~'E,.
;)UTPMENT--CASE|5.~ F~FSI{:;~,~E,} Tu HOUSE RELAYS A,',i\[) OT".IER APP'ARATU.'.~.
KFy--CASE IN~T|,~!
AILEO (}'~ A CUSIO~ER-~':; PREMISES,,, TO PERMIT DIFFERENT LI.~ES TO.THF'I~) cr;NTRAL OF~-IL:E I(') HE C(~NN~CTEO TO VARIOUS TELEPHONF STATIONS.11" -- I-~5 TF.
ST--~OX COr~IAI,~IIN~..~ F'PARATUS FOR TROUBLE LOCATIO,J AND ROUTII~E1w3 *~AT,'JTE.JMNCE.
EuE AN ASSEMBLY oF ONE OR MORE cONL)UCTORSt U20\] SIJALLY '.
'ITPIIN hN EI'.IVt-L(")PIN(~, PROTECTIVE SHEATHE I~'.l SttcH STRUcIuI=A2l}9 L ARRA(h~E,.AE".~T OF THF I~ )IvII.
)uAL CONI)uCTORS AS wILL PERMIT OF THE2\]7 IP ~IS~.
SLPARATEI_Y OF;' IN GROUPS.
EUE THRF~E UNIT LENGTHS OF _e.,U2~5 ST,',I..,IF\[) SIG.
",IAL, ,,q'IE;,.l TRANSMITTFO, A DASH WILL A U\[qMATI..C__ALLY_.BE F .
.
.
.
.
.
.. .
.
.
.
.
.
~33 Ol-tiO.,,,E,) 8Y ONE U,.,iJ.T L.E~',L~TPI OF SILENCE.
TER~-.I USE,') Ir.l RADIOTELEC~2~,.l ApHY.
LOE ( i ) .
PLURAL TERM COLLECTIVELY USED TO DESIGNAT=~,w,9 MAI'fRIAI_ SERVING AS A ~.,~ASIS FOR UISCUSSION,,, MATERIAL ~IAY DR MAY,~b7 e.IuT ~F TECdNICAL IN ~'.IAIURE.
THE SINL~ULAR oF DATA I'S OATUM.
(;~2t,5 ) ,  I',JFI)RMATIOt~, PARTICULARLY THAI" USED AS A BASIS FnR ,~EC-ANICAI.
; I  !
nR  Et_I-_cTRO,.~IC C,},'.'tPUTERS.
FOE.
(IPAIA C}._~UI.T|.COJ~cDJJ~II.LAI.
;'~\] ION FaCILI IY PFR~IITTING TRAN?.
;HISSION OF" INF(.
}RMATIf)N~.~ pI@ITAL ~"2M'-) Oq~'4.
EUk ELECTRICAL ACCOL|NI'ING M~CrlI;.,IE.
EoF-{,i=,.,af-'I~A ,'J ELECT2")7 ROACO,JSIJ.C TRA~JSUUCFR INTENDE() i:0 ,.~E CLOSELY COUPLEP~"'ACOUSTICALL3('.
r-., Y To T-F I :a~.
, .EUE (EMERGENCY MEUICAL ~ERVICE)p5 w NrAIN~,EBB31"~ -,.~Sh~'o E{)~.I,..,I~,,a"'I~(L~'IFTRSON A T)IO08 RUTLEOGE,258-~'SBI.
EOE.
.
.
.
.
.
.
.
.
3.~'1 (E'AER'~L~'., CHE'S d )b314 MAIHE '~5 R~_M__ I t )DLETOhIt2~B~_SZ~v6 .
.
.
.
.
.
.
.
.
FOE3~'9 (EMERSO,I GAi'L),..?2;'~ I.AKE lA~ PL,I, 25?-6916.EOE (EMERSON MARLANr'~337 S)534- ,~ILI.TtH J l)R,233-Ob32.
EOE (EMFRSON I..,ApRY H JR}~626":I~.% FSCH LA,249-3~.Q.,~.
EOE,,,,%.,~ (E,~IERSON HARRY L MRS)231~, CHALET":Ib3 r~ARI)E~IS RU*2.'}~-bO6T.
EO~.._~I"rJ---,III"(EMFRSON HUGH C}InO4.
TC)~PM~INS Dq3r~I ,;~2,?.-I~H.
EOE (E,'FE"RSON IDA MRS)~,\].9 JEAN*2.~6"~I@~.I(",9 E r ie  ~.t:.~IL'RSUN RICHAPU E)161f) CAMERON DR~2.3B-_I~.~6~,.. EO~ .
.
.
.
.
.
.3.-,5 (EMERY AiR FREIGHT CORR)5300 S HO~'.~ELL AV MILw--MI~SN NO.,255-831P.393 .
r~OE" (EMFRY OAN.~EL J)5P'2.
STATE,2sb-33GS, EOEQ.U\] (F~ERY r,..~i'~A F)2.SUb MCDIVITT RL),25b-12(')4.EOE4,?.5~33-25-I IT ,~,~ s|br~Al..~ I.J I:-J{)ICATE ORI@INA!.ING CALLS ANIJ_J~US~_J-I~tE.S.- .
.
.
.
.
.
.
.
.
.
.
.2.
Algorithm RETRIEVE (R)With a given keyword, this algorithm will retrieve theentry which is associated with keyword under the sameassumptions made in Algorithm STORE.R1R2R3R4R5R6R7Compute I = HASH(KEY)If POINTER(1) = 0, exit on failure.If POINTER(1) ~ 0, then I = POINTER(l)If KEYWORD(1) = KEY, then J = I~EX(1),move the  ent ry  in  ASL s tar t ing  from ASL(J)to  a work ing  area  unt l l  an EOE i s  encountered ,and exit on success.If KEYWORD(1) ~ KEY, and if LINK(X) = 0, thenexit on failure.If KEYWORD(1) ~ KEy, and if LINK(1) ~ 0, thenI = LINK(X), go to step R4.Repeat for additional entries starting atStep R I .Examples in Tables 5 and 6 will also illustrate thisalgorlthm in actual applications, The execution of theRETRIEVE command will not change the contents of theChaining Table and the Available Space List in any event.3.
A lgor l thm ADD (A)Th is  a lgor i thm i s  used when an add i t lona l  or  new ent ryi s  put in to  the  a l ready  es tab l i shed  HAICS f i l e .
I t  i s  anoperat ion  of  "add ing"  an ent ry  to  the  end of  a cha in  of  i t shashed address ,  ra ther  than  break ing  up the  cha in  and " inser t ing"the  ent ry  accord ing  to  some order  or  h ie rarchy .
Th is  i s  sobecause  each cha in  in  the  HAICS f i l e  i s  most ly  very  shor t  w i thonly one or two entries and the "inserting" will gain verylittle in search and update efficiencies.0-26 -This algorithm is different from Algoritl~n STORE in thatno clear-up operations are performed on the arrays of theChaining Table and the Available Space List.
In addition,a relative address in the Available Space List is acceptedas the first available address to stere the added entriesthemselves.A1 Set J = the given first available addressA2 If J ~ size of ASL, go to Step S2 in AlgorithmSTORE and return to Step A4 upon exit fromAlgorithm STOREA3 If J>  size of ASL, exit on failure.A4 Repeat for additional entries starting atStep A2Tables 7 and 8 exhibit the results of the ADD command ofsome new entries upon Tables 5 and 6.-27-_ ,  _ - .
_- " Tabie 7.
The ~'i.i~g tab le  a f te r  an ADD co~mdTHE CHAIN ING TABLE ' - -.
.
.
.
.
.~ALU~-  KEYWORD TNUEv LTNK POTMTFQA~SOC~O Z3 ~-~\[ "3 EMER$ R 377 O 0 .
.
.
.
.
.
.EMERS HL 349 O &UASH ~2P bOA-TA 243 0 \ ]nl EHERS HH 34~ O T .
.
.
.
.
.
.
.
.EAH 291 u 8UATAC|RC 27R 0 9 _11 E .ERY oJ  ~9~ .
.
.
.
o n. .
.
.
.
.
~ ~ - ~  9~ 13 ~2\ ]3  .
.
CABINET 151 0 141~ EHERS H5 33515 ~ O F  ~ 0 n "~ ~ ~  o , '~ '~ ~.
,  l~ ~ ~.
__ -  ~-----'"TT -'r''~-- ' - '~ ' l  EMERS I 36A ~I .
.
,~ /S f_.Z3 ...... n 25---- ~3P~ ABSOAODR 11 28 P4?5 AHSO~BTN 37 U 3226 BAFFLE 11q 0 ~27 CABLE 190 31 27~8 ~MERS AT 315 ~9 1|P9 ~MERS GB 3~\ ]  n 339 BABBLE b~ 0 3031 EMERS G 329 o 15 .3~ EMERS HC 357 0 0I-28 -.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
T- - -  - Cable 8.
Che sva?1abZe space 11star ter -an  ADD colm~and .
.
.
.
.
.
.- THEAVAILABLE sPACE LIST - -ADDRESS INFORMATION1 DATA TRANSMISSION AND DATA pRB.CESSINGI.DICTIONARY~BY JA.MES F ~ H O. .
.
.
.
9 LMES - -  FOE (ABSOLUTE ADDRESS)THE IDENTIFICATIOH OF A SPECIF17 IC REGISTER OR LOCATIPN IN STORAGEo EOE (ABSOLUTE CODING.
.
.
.
2.~F~ODI~G IN wHICH ALL ADDRESSES--REFER TO-SPEcIFIC MACH~NE--REGISTE33 RS AND MEMORY LOCATIONS?EOE (ABSORPTION)THE LOSS OF ENERGY 141N THE TRANSMISSION OF wAVES OVER RADIO OR wIRE PATHS DUE TO CONAo VERSION INTO HEAT OR OTHER FORMS OF ENERGy~_ !N~RLTRANSM~O - -57 N, THE TERM IS USUAt.LY APPLIED ONLY TO LOSS OF ENERGY INEXTRANEO6~ U~ HEDIA, EOE (1 ) ,  AGGREGATE cROSsTALK FROM A_LA~G\[~___73 MRER OF DISTURBING CHANNELS, (Z ) ,  UNWANTED DISTURBING SOUND81S IN A CARRIER OR OTHER MULTIPLE CHANNFL SYSTEM WHICH RFSULT FPn~9 M THE AGOREGATE CROSSTALK OR MUTUAL INTERFERENCE FRoM OTHER CHAN97 NFLS.
FOE (BACKGROUNU NOISE)THE TOTAL _SYSTEM.NQIS~ \ [ .~PEN105 DENT OF THE PRESENCE OR ABSENCE OF A SIGNAL, THE SIGNAL IS NOT113 TO BE INCLUOED AS PART OF THE NOISE.
FOE.
_ A SHIELDI~_S%RUIZ1CTUnE O~ PARTITION USED TO INCREASE THE EFFECTIVE LENGTHOF THE E129 XTERNAL TRANSMISSION P j~H BETWEEN TwO POINTS AS FOR TRANSMISSTn~1.37 PATH BETWEEN TWO POINTS AS FOR EXAMPLED BETWEEN THE FRONT AND TH1~5 E BACK ()k A~ ELECTROACDUSTIC TRANSDUCER.EOE .
.
.
.
EQUIP.M~NT.-CASE __153 DFSIGNED TO HOUSE RELAYS AND oTHER APPARATUS.
KEy--CASE INSTlb t  ALLEU ON A CUSTOMER,S PREMISES, TO PERMIT DIFFERENT L INF .S~ THF __I~q  cENTRAl.
OFFICE TO BE cONNECTED TO VARIOUS TELEPMONF STATIONS,177 IT HAS SIGNALS TO INDICATE ORIGINATING CALLS AND BUsy LINES.IRS TEST--~UX CONTAINING APPARATUS FOR TROUBLE LOCATION AND ROUTINE193 ~AINTE~ANCE.
EOE AN ASSEMBLY OF ONE OR MORE_CONDUCTQ~Sp U2D1 SUALLY WITHIN AN ENVELOPING PROTECTIVE SHLATH, IN SUC H STRUcTURA209 L ARRANGEMENT OF THE INOIVIDuAL CONDUCTORS ~S WILL P \ [RHI~_~_~- - - -717 IR.US~ SEPARATELY OR IN GRUUPS, EOE THREE UNIT LENGTHS OF SU~25 STAIrWEll SIGNAL~ *HEN TRA_N~TTEDo A DASH WILL AUTOMATICALLY RF F~33 OLLO~EU ~Y ~NE U~IT LENGTH OF SILENCE.
TERM USE~ IN RADIOTELEGD~41ApHy,  EUE (1 ) .
PLURAL TERM COLLECTIVELY USED TO DESIGNATE~49 MATERIAL SERVING AS A BASIS FOR OZSCUSSIONt* MATERIAL MAY OR MAy~57 ~tOT BE TECHNLCAL IN NATURE, THE SINGULAR oF DATA IS DATU~.,.._X~_Z65 ) ,  INFO~MATIONo PARTICULARLY THAT USED AS A BASIS F~R MECHANICAL~73 ~R ELECTRONIC COMPUTERS, EOE .~A C I~T)COMMUNICAT2R\] Imq FACILITY PERMITTING TRANSMISSION OF INFORMATION IN DIGITAL F~90RM.
EOE ELECTRICAL ACCO~!NTING MACHINE, EOE AN .ELECI __~97 HOACOUSTIC TRANSDUCER INTENDED TO BE CLOSELY COUPLE~ ACOUSTICALL33~ Y TO THE EAR.
tOE (EMERGENCY MEDICAL sERVICE)?5 W MAIN.o~313 -q567,  EOE (EMERSON A T)IOOB RUTLEDGEo2BO-25~7, EOE3~\] fFMERSO~\] CMAS B~531~ MATHF~ ~D M/nOLFTnN~3A-~7?~.
EOE329 (EMERSON @AIL)~2'} CAKE LAWN PL,257"691@.EUE (EMERSON HARLAND337 .S)53A HILLTOP DR~233-0632?
FOE (EMERSON.
HARRY H JR i iG~6~#5 ESCH LA~2~9-3~#8~ FOE (EMERSON HARRy L MRS)~31A CHALET_.3b~.
GARDENS RD~3H-b067,  FOE .
(EMERSON HUC~d_C.
)3~OA.~Ot4P~KZ~Dg.-361 ,222- IA3~,  FOE (EMERSON IDA MRS)419 JEAN,256-~I~,3fi9 E~E (EMERSON RICHARD E)16\]0 CAMFRON DR.~3H.I~6 FOF377 (EMERSON ROONEY)O2b6 ELMWOOD AV MIODLETON~3B-B7b9,  EOE3~5 (EMERY AIR FREIGHT CORp)_5300 S HOWELL AV.
MILW--MDSN _N0.~5~-~12393 .
EUE (EMERy DANIEL J )52Z STATEo25~>z.,~3305, EOE4,.I (EMERY bONA F)~B,)6 MCDIVITT RD,~Sb-128#~EOE ~{MAoISo~ ADJUSTM~0~ ENT-SYSTEM)303 PRICE RL, 23B-2616,  EOFI~--)~(MAI~JL~O ~ ACCEPTA?
17 NCE CORP INC)I201 W BELTLINE HY.
257..~1n91.
~~F~/C J "~ ' tMADI~ a4~5 LMA MRS)3256 MILW, 2~4-7831.
EOE~IMADISON AI~}~SE~RVICE)330~33~=NRRTM STOUGHTON RD~ ~9-~78,  EUE--29-4.
A lgor i thm DELETE (D)Th is  i s  used  to  de le te  an  ent ry  f rom the  HAICS f i l e .Th is  a lgor l thm i s  heav i ly  dependent  upOn the  A lgor i thmRETRIEVE but  ins tead  o f  jus t  re t r iev ing  the  ent ry  i t  t raceshack  and  de le tes  the  ent ry  I t se l f  f rom the  Ava i lab le  SpaceL i s t  and  a l l  the  per t inate  in fo rmat ion  in  the  Cha in ing  Tab le .DI Go to  S tep  RI in  A lgor i thm RETRIEVE, re turnto  S tep  D2 upon ex i t  on fa i lu re  f rom A lgor i thmRETRIEVE, o r  re turn  to  S tep  D3 upon ex i t  onsuccess  f rom A lgor i thm RETRIEVED2 Ex i t  on fa i lu re .D3 C lear  up the  occup ied  sect ion  o f  the  ent ry  in  ASLinc lud ing  the  spec ia l  symbol  EOE at  the  end o fthe  ent ryD4 INDEX(1) = 0 and KEYWORD(1) = 0D5 If POINTER(1) = I and LINK(1) - 0, thenPOINTER(I) = O, exit on success.D6 If POINTER(1) - I and LINK(1) ~ O, thenPOINTER(1) = LINK(1), LINK(1) = 0, exiton success .D7 If POINTER(1) ~ I and LINK(I) = O, thentrace back the previous link which containsI and set  i t  to  zero  when i t  i s  found,  o ther -w ise  t race  back  the  or ig lna l  po in ter  and seti t  to  zero ,  ex i t  on success .D8 If POINTER(1) ~ I and LINK(1) ~ O, then traceback the previous link which contains I andreplace it with LINK(1), exlt on success.D9 Repeat  fo r  add i t iona l  ent r ies  s tar t ing  a tStep DI.Sample results of the DELETE command executed upon Tables7 and 8 are  shown in Tables 9 and 10.-30 -+ : .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.Tab le  9.
The cha in ing  tab le  a?ter  a DELETE conmmnd@THE CHAININOVALIJ~13TAHLE - -KEYWORD tNDE~EARP+4ONE ~9~AHSOCOU ~3EMERS R ,.
JT7L ,N~ ~n!~TFo.
.
.
.
.
.
.
(; EMERS HL 349 q\] I + CAHINET 151 ,'l 1 6 EMERS HS 335 '._11 1 5  EMERY DF ~oI u1 l~ '4ACl ~15 , ,.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
t .
.
.
.
.
.
.
.
~ z .
.
.
.
.
_+mmi-~_am .
.
.
.
.
.
.
.
.
.
.
~ .
.
.
.
.
.
.
.
.
.
.
~.+ ,+ FMS} 9 MASER 43 ~ 0~, CMERS I 364 ~l21 LMERS RE 37 , E ;a~ HAS 41.n7  0. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
2_3_  .
.
.
.
.
_ _~__TA D P_~L~ .
.
.
.
.
.
.
_t .
.
.
.
.
.
.
.
~5 .
.
.
.
.
.
.
.
.
.
.~4 AHS~ADO~~'~.~ ABSOR~TN- -dAFFLE~- '~7 ~Z~Z~?- .
I I~28 ~ME~S AT~9 EMERS CH31 EMERS G3~ EMERS HC" +-++Pc.+,,+,,,:,,.++ ;,.+,+ .
.
.
.
++9..+'I~ + o?1I11I + , .
.
.
.
.
.
.
.
.
.
.
.
.h16  .
.
.
.
.
.
.
.
.
.t~I+JO~ 0 I +3r+~3i t ,+3~9 0 .
15 ++357 0-31 -Tab le  I0 .
The ava i lab le  space  l i s t  a f te r  a DE I~ commandTHE AVAILABLE SPACE L IST  - -AOORESS INFORMATIONl DAI'A TRANSMISSION AND O~TA PROCESSING OICTIONARyt By JAMES F, HOq LMES EOE (ABSOLUTE AOORESStTHE IDENTIFICATION OF A SPECIF .
.
.
.
.17 I c  REGISTER OR LOCATIPN IN STORAGE, EOE (ABSOLUTE COOINGZ5 )cO01,~G IN wHICH ALL ADDRESSES REFER TO SPECI~C MACHINE REGISTE33 R.,:; AND PEMORY LOCATIONSoEOE (ABSORPTION)THE LOS?
; OF ENERGy I~l N THr_ rRANSHISSIUN OF WAVES OVER RADIO OR wIRE PATHS DUE TO CON~9 VER:~ION INTO MEAl" OR OTHER FORMS OF ENERGy.
IN ~IRE TRANSHIS$10 _ _57 h,  THE rER~ IS USUALLY APPLIED ONLY TO LOSS OF ENERGY INEXTRANEO65.U S HEa)I4, EOE ( I t .
AGRREGATE CROSsTALK FROM A LARGE NIt7} ~qEP OF OISTtIRHING CHANNELS, (2) .
UNWANTED OISTURBIN G SOUND8} S IN A CARRIER OR OTHER MULTIPLE CHANNEL SYc;TEM WHICH RFSULT FRI3~9 ~ THE A~RE(~AIE CROSSTALK OR MUTUAL INTERFERENCE FRnM OTHER CHAN97 ~JFI..~.
P_DE (UACKBROUNU NOISEtTHE TOTAL SYSTEM NOISE INDEPENlu50FT_NI OF THE PRESENCE OR ABSENCE OF A SIGNAL.
THE SIGNAL IS NOT}I~ T q HE" IVCLLr)EO AS PART oF THE NOISE.
EUE A sHIEt.DING STR UIE\]  CT=JR~.~ OW PARTITION USFr) TO INCREASE THE EFFECTIVE LFNGTHOF THE E ?1,37 PATH HEIWEEN Tie POINTF; AS FOR EXAMPLEI HET~EEN THE FRONT AND TNI~  E HaCk, OF A~I ELECTROACOUSTIc TRANSDUCER,EOE E(~UIPMENT--CASEtS"~ D~'SI,.3NEO TO MOUSE RELAYS AND OTHER APPARATUs, KFy--CASE INST16) ALLE.)
(}.i A CUSIOHER#S PREMISES, TO PERMIT DIFFEREMT LI~vES TO THEIb'~ CE~I'R~I OFFICE ro HE CONNECTEO TO VARIOUS TELEPqqNr STATIONS,l@5 TE~T--~OX COIqFAJ, NING ~PPARATUS FOR TROUBLE LOCATIO,; AND ROUTINFp l7  ITHREE UNTr LENGTHS OF SU?33 OLI_,);~F_O r~Y (\]ME U,~IT I.EN(~TH OF SILENCE.
TER~; USER IN R~D~OTELEG~( .-~ r :Z)A TA~73 ItL)A~A C~CUI.TLCILM 4 , J~T  -  , ~ M~I  In,~ F~CILIrY PERMITTING TRAN.~MI$SION OF INFORMATION IN OIGITAL~, ,  OHM.
EOE LLECTRICAL ACCOUNTING M~CHI,,IL, EOE AfW ELECT2w7 NnAC.OflSIIC IRANSDUCER INTENuEL} TO ~F CLOSELY COUPlE~ ACOUSTICALL3~,5 Y "fO THE EAR, t'?
)E (EMERGENCY MEUICAL ~;ERVICEtp5 i MAINo?S5-~\]3 -~5h7.
EOF"  (EMERSON A T I IO08 RIJTLEOGE,2~6-~S~7, EDE)2Q (FMERSUN GAIL )~ LAKE LAWN PL~E.~?-6916,EU K (EMFRSON HARLANp337 ~)53#.
HILl  T(JP 1)w,233-0632, .
EOE I ( ' )  ~dE=Cff' /~lr// '?
,*,5 ~(EMERSON HARRy L MRS):a3\]4 CHALET353 " r .aRDE~ Rt\]~23~-b:=67, E0E (EMERSON HUGH Ct t00A TOMPKINS 13R30\] ,P22-1,~3~w.
EUE (EMERSON IUA MRS)~I9 JEAN,P56-H|~ ,._~_~.FnE .
.
.
.
.
.
( E M ~ ~ R D  E} 1610 CAMFRON OR.p3H.I ~ p~ FOE~77 ,(,F'EQSO~, pOL)NEYIh~(~ El MwOOn A y MIDD'LETON,?3H-57691 ~ EOE~.t}1 (EME-RY hO~,~A F)ESOb ~CDTVITT RD,25b-|EB~.EOE (k~ADISON _ADJUSq,;~O E~'IT SYSTEM)303 PRICE PL~ 23B-261b, EOE (MAoISON ACCEPT/~~1~7~)R_~'_  NI~C)1201 W ~F/TL |NF  HY, ~7-1ng l .
EnE tM~-;JIS A?
~5 L-,IA MRS)325h MILw~ 24~-7831, EOE (MADISON AIR SERVICE)330~,J.~ ?
NORTH "~TI}I~GHTON RD~ ~9- (}~78.
EOE-32-" \5.
Algorithm REPLACE (RP)This is for the replacement of an entry itself in theAvailable Space List with the same keyword and linkages inthe Chaining Table unchanged.
Replacement entries longer thanthe original entries can be treated in a few different ways.The current algorithm will truncate the excessive end and givea message to indicate the situation.
A remedy if desired thencan be made through the deletion of the incomplete entry andthe addition of the complete entry as a new entry.
Thisalgorithm will make use of the Algorithms RETRIEVE and STOREto find the desired entry and then replace the old contentswith the new contents in the Available Space List.RPI Compute I = HASH(EEY)RP2 If POINTER(I) = O, exit on failure.RP3 If POINTER(I) ~ 0, then I = POINTER(l)RP4 If KEYWORD(1) = KEY, then J = INDEX(I), clearthe old entry in ASL starting from ASL(J) andincluding an EOERP5 The new entry is stored in ASL starting fromASL(J)RP6 If the new entry plus an EOE can be accomodatedin the old space, exit on success.RP7 If the new entry plus an EOE can not beaccommodated in the old space, then storethe new entry up to the same length of theold entry and put an EOE at the end, exiton partial success.RP8 If KEYWORD(1) ~ KEY and LINK(1) = 0, then exiton failure.RP9 If KEYWORD(1) ~ KEY and LINK(1) ~ 0, thenI = LINK(1), go to Step RP4.RPI0 Repeat for additional entries starting atStep RPITable ii will display the changes rode through the use ofthis algorithm upon Table i0.-33-?
!Tab le  I I .
The ava i lab le  space  l i s t  a f te r  a REPLACE command .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.TWE AvAILAHLE SPACE LIST - -A r)o_Rt" SS XNFORMAT tONI D~TA TRANSMISSION ANU DATA PROCESSING DICTIONAR_y~ BY JAMES F o NO _.g L,~ES EOE (ABSOLUTE AODRESS)THE IDENTIFICATION OF A SPECIF17 IC REGISTER O~ LOCATIPN IN STORAGE~ EOE (ABSOLUTE ?001NG25 )(~OOING IN wHICH ALL ADDRESSES REFER TO SPEcIF-I~C MACHINE REGISTE33 P~ AND '4EHORY LOCAT O~N ,EQ~_~ (ABSORPTIUN)THE LOS~; OF ENER@Y !HIm N THE TRANSHISSION OF wAVES OVER RADIO OR wIRE PATHS DIIE TO CONw~ VERSIO~i \]NT(J HEAr OR OTHER FORMS OF ENERGy, IN WIRE TRANSMISSIo57 N, THE TERM IS USUALLY APPLIEO ONLY TO LOSS OF ENERGY INEXTRANEOh5 tJS ~}IL~, I-OE ( I ) ,  AGGREGATE cROSsTALK FROM A LARGE NU7.3 MR~R OF I)ISTURBING CHANNELS, (;~), UNWANTED r)ISTURBING SOUNr~~I ~ IN A CARRIE~ OR OTHER MULTIPLE CHANNEL SYSTEM wHIcH RESULT FRflHQM THE AGGREOAIE CROSSTALK OR MUTUAL INTERFERENCE FRnM OTHER CHANg7 NCLS, EUE (dACKGROUNU NOISE)THE TOTAL SYSTFM NOISE INnEPENI;:'., DF'NT UF: THE PRESENCE OR ABSENCE OF A SIGNAL, TH~ SIGNAL IS NOT1J3 in BE Ir-~CLL()ED AS PART OF 1HE NOISE, EOE a S~IELOINO STRIJIPI CTURE O~ PARTITIUN USEI) TO INCREASE THE EFFECTIVE LFNGTHOF THE E =I~9 XTE~:~aL TRANSMISSION PATH__~ETWEEN TwO~.AELE~RaNSHISSXO M~37 P~TH HETwEE'J TWO POINTS AS FOR ~XAMPLEo BETWEEN THE FRONT AND TwI~ E HE~CK ()F AN ELECTROACOUSTIC TR~NSOUCERoEOE EQUIPMENT--CaSEIS.)
I.
)ESI~Ee~ "\[(\] HOUSE RELAYS AND OTHER APRARAFUS, KEy-.CASE IN.~Ttb!
ALLLu ,_h,~ A CUSTOHER=S PREMISES~ TO PERMIT DIFFERENT LINES TO THElb.;.
C, ENFH,~L OFFICE TO BE CONNECTED TO VARIOUS TELEPHONF STATIONS,.
.
.
.
.
.
.
L/7 IT _~A.~__.SIbI'~LS_LU IN OIC_ATE .
(LR.LGLNAUL_NG GA~L3_AND HUCy LIbeL,_\]~.~ TESI--,~OX CONTAINING APPARATUS FOR TROUBLE LUCATIO.
'~ AND ROUTINF\]~.~ uA I N rE'lANCE, EOE~ 1~17 THRFE UNIT LF.
NGTHS UF S~i2~% STAINEh SIGNAL, WHEN TRA NSM_I\]"\[E~ A H _  W\]J_~jEU.\]'(JMJLT~C_ALL_Y__~_____.
)33 01LO.#Eh oY ONE LINIT LF.
NGTH OF SILENCE, TER~ USeD IN R'OIOTELEGR241 APMY, EOE~57;65~HI lf)N FACIL ITY PERMITTING TRANSMISSION OF INFORMATION IN OIGIT~,L;~q OPH, ~OE ELECTRICAL ACCOUNTING MACHINE, EOE AN ELECT~97 ~nACO=ISTIC TRANSI)UCER INTENDED TO HE CLOSELY COUPLEn ACOUSTICALL"4~2~ Y Ti) T~.
:  EA~c,W EUE (EMERGENCY ~EIIICAL 5ERVIF.E)}~ W...M~IN~>.~( '~  3\].:.
;I -~5h7.
~OE(,B/'-=.~I',ITEMERSO~ A T) 1~34 R~/TLEoGE, \]....2~3-~'5#,7~ , EOE |~ \ ] .
tFHI-RSU~ CHAS I~tS~l& MATHEWS I~;1 MIIlf)I F'T(|N.
;~'aR.r~77/,, EOE~P~'~EHERSO.
'., ,GA~L)22~ LAKE LAWN RL~2a-Z~22,EOE ~MERSON HARLAN~337 S)333 r~ILLTOP DR,333-3333,  EOE } ~.
.
- - - -  '"~,~.~ --(EMERSON HARRy L HRS)'~3\]4 CHALET35:,1 AAROENC; Rt),~'3,1")-bqb7, EOE (EMERSON HUGH C)100*, TOMPKINS Og3~I ,722-I#.
}~, CUE (EMERSON IOA MRS)#19 JEANt~56-wI2~;,.
.
.
.
.
.
3 h ,4 F 'nE  IFMF-R~LQN HI(~HARI) F ' ) l k l l l  CAM~ROIu DN=PIH.
I I~K., EOE~'(7.
(FMERSO~; ROI)NEY)b~b~ ELMWOO\[)-Av MIoDLETON,23~'5769," EOE~l:1 (EMERY ,_~ONA F)~50b MCDIVITT RD~56-I264,EOE _(MAJ)_ISON.AOJUST_~.
.
~~'~9 @~.~T SYSTEM)303 PRICE PL~ 23B-E61b, EOE (MAr)ISON ACCEPTA_~.
}'f NrE cO w}~I~cJl~Ol w RFI TLTNE HY, ~S7-1091.
r~ /Manic&~S LMA HRS)3?.Sb MILW, 2~4-783 I ,  EOE (MADISON-AIR SERVICE)33OSTOUGHTON .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~33 ~ NORTH ROt 2~9-b~78, EOE-34-6.
Algorithm PRINT (P)This is a simple algorithm for a utility function ofarranging information in table form and printing out of thechaining Table and the Available Space List as those ofTable 4 to Table 14 in this paper.P1TableP2 PrintP3 I = ItableP4 Set JSpaceP5 PrintP6Set I = I and print titles for the ChainingI, KEYWORD(1), INDEX(1), and POINTER(1)+ i, repeat Step P2 until the end of theis reached= I and print the titles for the AvailableListJ, and ASL(J)J = J + i, repeat Step P5 until the end of theAvailable Space List is reached, exit on success.7.
Algorithm COMPRESS (C)This is an algorithm designed to serve as a "GarbageCollector" in the list processing languages for betterstorage efficiency.
In practical applications, theAvailable Space List is a huge free storage area whichcan be on a secondary bulk storage device Such as a drumor disk for random access.
After several updating functionsperformed on the HAICS file, there will inevitably be somespace groups residing in the middle of the used portion of theAvailable Space List.
And eventually it will reach a situationthat the end of the Available Space List is reached but withmany space groups scattered in the middle.To remedy this situation, a periodical operation of theC(R4PRESS command is desirable to repack the Available SpaceList for a better storage utilization.
Many strategies orhierarchies can be used to achieve this purpose with somevariations in computing efficiency.
The current algorithmstarts with the last entry in the Available Space List andmoves it to the first accomodatable space group found from-35-the beginning of the List.
The process is repeated untilall the aceomodatable space groups found are f i l ledand thusa largespace group is accumulated at the end of the Avail-able Space List for subsequent additions of n~ entries.CI Search for the largest INDEX(1) in the ChainingTable, then set J = INDEX(1)C2 Count the length of this last entry in ASLstarting at ASL(J) until an E0~ is foundC3 Check an internal table of space groups in ASLto find an accomodatable space group such thatthe number of spaces in a space group is greaterthan the length of the last entry, go to Step C6if it is not found, go to Step C4 if it is foundC4 Move the last entry to the space group found,go to Step C5 if some spaces are l e f t  unused,otherwise exit on success.C5 Store information of the space group to theinternal table, exit on success.C6 Search ASL from its beginning for a spacegroup, go to Step CI0 if it is not found,go to Step C7 if it is foundC7 If the space group found is accomodatable,then go to Step C4, otherwise go to Step C8C8 Store information of the space group foundto the internal tableC9 Search ASL continuously for a space group,go to Step CI0 if it is not found before thesearch reached the original location of thelast entry, go to Step C7 if it is foundCIO Exit on table not compressable.CII Repeat for additional compression upc~ exiton success by entering at Step CI.A sample resu l t  of the COMPRESS a lgor i t l rm upon Tables 9and i i  i s  shown in  the fo l lowing Tables 12 and 13:i-36-Tab le  12.
The c lm?n ing  tabie a f ter  a C01~R~P~E~c--o~nandTHE CHAINING TABLE - -V A_L.UE .
.
.
.
.
.
~ F.~Y_~ 0HOIB2e?.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
J?.3P41 EARPHONEABSOCOU3 LMERS REMERS HLINDEx I vNKze~ .
o~77..(Z~:~  17 o# 3~9 05 .
.
.
.
.
)_ I2ASL_ 2?2 - -  0b 0 0FAM ~919 UATACIHC dT~ .
.I 0 n 0U ~ Qi ~ dACKNnIS 99 l J13 CABINET 15115  LMERY DF16 MACI17 .
.
.
.
_MAD~t5 AM ~ t"~nA--~'~,.~,,'A~ _n_EHS : 30~ ~L~ERS I 21EI~.ERS HE ~78 ~ ~ '2~__ .
O TADPF!
.I.
.
.
.
.
.~___2._b_ABSOAUOH \] I 2GAHSORHTN 37P6 BAFFLE 119  OP7 028.
EMERS AT 31530 I:JAHt3LE 6R31 EMERS G 32932 EMERS HC 3#2PQTNTrDP0 P0 .
.
.
.
.
.
.
.
.
.
.
~ .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.012U .
.
.
.
.
~ .
.
.
.
.
.
.
.
.
.
.
.
.
.o........ 16~J--  19b_... P3P#u _3~ .
.
.
.P60 - .-~i .
.
.
.
.0 nn 30 .
.
.
.
.
.~ S .......0-37 -Table 13.
The ava i lab le  space l l s t  a f te r  a COHPRESS cccmuandTHE A~AILASLE SPACE LIST - -___A_0\])~ESS INFORMATION\] DATA TRA~wSHISSION AND DATA PROCESSING 01CT!oNARy, By JAMES F~HO ......LME$ LOE (ABSOLUTE ADDRESS)THE IDENTIFICATI0~ OF A SPECIFIT IC REGISTER OH LOCATIPN IN STORAGE, E~E____~ABsOLUTE_C~J~.I~_.~5 )CODINb IN wHICH ALL ADDRESSES REFER TO SPEcIFiC MACHINE REGISTE3~ P~ AND MEMORY LOCATION$~EOE (ABSORPTIONtTHE IDS?
OF ?NERRY~I N THE IRANSMISSION OF wAVES oVER RADIO OR WIRE PATHS DUE TO CON4@ VFRSION INTO HEAT OR OTHER FORMS OF ENERGY, IN WIRE TRANSNi$~IO _b7 N, THE TERM IS USUALLY APPLIED ONLY TO LOSS OF ENERGY INEXTRANEo6~ U~ MEt)IAo EOE (1 ) .
AGGREGATE cROSsTALK FRoM A LARGE NU73 M~ER OF u|STURHING CHANNELS.
(~) ,  UNWANTED DISTURBING SOUND~?| S I,~ A CARRIER OR OTHER MULTIPLE CHANNEL SYSTEM WHICH RESULT FPOuq~TIt)\ ]d lI $3169THE AG(~HE(JATE CROSSTALK OR MUTUAL INTERFERENCE FRf)M OTHER CHARNFLS, Ef)E (UACKGROUNU NOISE)THE TOTAL SYSTEm r~OISE INOEPEflDF'qlOF IHE-PRE'SENCE OR ABSENCE OF A SI(JNAL, THE SIGNAL iS NOTT() HE I,,;CLuI)ED AS PART OF THE NOISE, EOE ~ SHIELDING STRuCTURE OR PARTJTION USED TO INCREASE THE EFFECTIVE LENGTHOF THE EXTERNAL ZRANSM_!~I~LPJLT_H_I~ETWEEN TWO POINT~ AS ~-oR TRaNsMItting!PAlfl HElwEEI'J TwO POINTS AS FOR EAAMPLE~ BETWEEN THE FRONT AND THHaCK .
nE ,~: ELECTPOACOUSTIC TRANS_DUCER,EOE EQUIPM~NT.-_-.CZ~SE.IJFSIG.".
!EI) TO HOUSE RELAYS AND OTHER APPARATUs, KFY--CASE IN~TALLEO ?
)~, A cUSTUHER#S PREMISES~ TO PERMIT DIFFERENT J.It~ES.
_T.O THE.cE,~TRi~I.
OFFICE TO BE cONNECTED TO VARIOUS TELEPwONr STATIONS,l t7  lT H...___~ ~f~L~.T(~ IJ~ID_ILCATE ORIGINATING CALL~ AJ~D MUcy I IRESIF5 TEST--Hu.X CUNTAINI~ ApPARaTUS FOR TR(~UHLE LD~ATIO~.~ ANI) ROUTINF,'~3 ~A{NTE~NCE.
EOE(/~J--j~IFMADISON AIR SERVICE)330~ NORTH STOUGHTO(;~u) ~'N RI~ ~9.6~7B,  EUE/\]~),~(MADI$ ALMA MRs)3ZSB NIL,,., ~ .~-T83!
,  I~qolEf)~,- .
I J~ (MADISON AC~"PTANCE CORE iNC) IZL ' J  W UELTLIN~_HyL 2S7-\]C.~J; l T~ l .  "
"  ~ O E .
, _ , ,, |THREE UNIT LENGTHS OF SII_ ~ STAINED 5~w~H~A_N~I_T~ED;  A DASH WILL ALLT_DM~TICaLLY RF F .
.
.
.
?33 Ol LU~FU ~Y (~ UNIT LENGTH OF SILENCE, TER=4 USEr) IN N.nlOTELEGQ__-~?t ~PHY.
EoEt .~ I (MAD~SnN ADJUSTMENT SYsTEH)3o3 P~ICE PLt ZZB-;~II~ .  '
-  EOE'/~--.~(EMFRY I)ONA F),~S06 NCUIVITT RU,~5~-I284,EOE |~(F*AERSO, ,  R(+)P~I~IKY)b~.66 ELMWUUD AV MIDDLETON~3B-ST~9= ~-~ EOE |,/,~p- (EMER-qU'~ RICHARD E)16I , ,  CAMERON UH,23B ' I IZ6 ,  EOEICr~*"JI'(EMERSnN|__~?_73 ~ IDA MR~}4|Q JEAN,256-(~I2H, EOE ~T~L~T~L~cUIT)COMMUNI~L.
.......~1 inn FACILITY PERMITTING TRANSMISSION OF INFORMATION IN DIGITAL F."(~ 7I)3'12!3.s72)53. .
.
.
.
.
"J~,~r)nM.
LOE ELECTRICAL ACCOUNTING MACHINE, E0E aN ELECTR~ACUIISTIC 1RANSUUCER INTENDED TO HE CLOSELY COUPLER ACOUSTICALLY TO TH~ EAR, RUE (EMERGENCY MEDICAL s~RVICE)~S ~ HAINe~5~-~'5~70 ROE (EMERSON A T) IZ34 RUTLEOGEgIZ3-4567.
EOE(FHFRSUr~ CHAS H1~31~ MaTHFW~ nn M!g0LFTnN:2~@-?TTG.
EOE(FMFRSO'~ GAIL )~ L~KE LAWN PLo22~-P_~.~.2.~0E (EHERSON HARLAN~~)33~ (;TIITQP nH,333-333~.
_ EOE~(EMFRSON HU~:~) I00A TOMhFINS 0R72~-143~ m ROE_ |(EMERSON'~I~APR~ L ~Rs)2314 CHALET--GARgEHS R~238-~6T.
.
EOE3r7) ~ ':,3'w J6 L~4J--Z--433-38-8.
Algorithm LIST (L)In contrast to the Algorithm PRINT, LIST will initiatean alphabetical sort on the keywords stored in the ChainingTable, and output an alphabetical list of all entries in theIIAICS file.
The final output of this algorithm performed onTables 12 and 13 is illustrated in Table 14.LIL213L4Sort array KEYWORD(1) alphabetically and carryalong the original sequence in the array, I,during the sort processTake the first original sequence number in thesorted keyword order, ISet J = INDEX(l), print the hash value, thekeyword, the entry starting address in ASL,and the entry itself, exit on success.Repeat for the next keyword and its originalsequence number in the sorted array untilthis array is exhausted.-39-L I~TTab le  14.
The a lphabet ica l  l i s t  a f te r  a LIST cow,handt~il-- .~LPHA~ETJCAL L ISt  ---HAsH VALUE = ~'  ENTRY ADDRESS IN ASL = I IA,iS(.,A,)I'JP (AdSOLUTI:.
AOORESS}THE IDENTIFICATION OF A SPEC..I~:IC REGISTER OR LOCATIPN IN STORAGE.
E0EA'!~(~C~L) (A'4'T',ULUTE CO(;ING)CODING IN ~'HICH ALL ADDRESSES REFER TOSPECIFIC MACHINE REGISTERS AN\[.)
MEMORY LOCATIr)NS.EOEHA'=;H VALUE ; ~5 E'~ITRY ADDRESS IN  ASL ; 37,~-~.Sl)~:4Tr, (A~'~oRPTION) tHE LOSS OF E_NE~GY._ I_N T~E_" T~_ANSMI~_SI_0,J..DF ~ .
.
.
.
.
.YES OVER R,11)IU r)R WIRE PATHS DUE TO ~o~VERSION INT0 HET (\]~.
OTHER FORMS OF ENERGY, IN WIRI~ TR~NSMISSInNt THE TFP,"t IS  ttSUALLY APPLIF...O ONLY TO LOSS OF ENERGY IP'EXTR,~,',JEOIJS "q ' l~  I ,' , EC}EH~;Fi  vALuE  = .~n ENTRY .AD_L)p~S~.
L N _ A~L = '\]e .~_Hz~!
?%I \[" ( I ) ,  AL;GRE(~ATE CROC:;STALK FROM A LARGE NUMBER nF DISTURRI~,IG CHAN;~ELS, (? )
.
UNW.~',,ITED DISTURBING SOUNI)S IN ~ C~R~IER r)R o.r~-iER ~ULTIPLE CH~.NNEL SYSTEM wHIC~'W R~'SULT FROM Ii'~E ~(~RE01~TE CROSSTALK OP MUTUAL INTERFEREhCE FROM 0THFR cHANNF LSo ~.OF.
.
.
.
HA-,H vALtit- =-  ' |2  ENTRYAUI~ES~ I N ASL = - 99i~,~CK'I,)T'~ (~,C~(',R()Uf,.
'II} ~',IUISE)THE T()T.~L SYSTEM NOISF INDEPE"tDE~'~T OFTHF PRESENCE UR hHS~INCr- OF zt SIGNAL.
THE SIG~.AI IS NOTrn -r..
Ir,~CLUl.)r-~.)
AS PART OF }'HE NOISE, EWEHAS"I vAL,IE = ~'~ ENTRY ADL)RF.S~ IN ASL : __Jig;t S,'ILELUI;wL'; t';TRUCTIIHE U~ PARTITION USED TO I'.|CR~-A~E T'~iEEFF~-CTIVF LEI'~OTFIhF THE EXTERNAL TRANSMISSION PATH qET'"EEN T,.-,U P{)II'~IS AS FOR TR~NSMISSIOI,;PATH ~EFWEEN Twn Pr)INTS,*S fUR F..X~MPLI:.~ FJET#EEN THE FRONT A,'.ID TH I" PJACK nF AN l:.LLCTR.~(;,').I.iS I IC IP~,NSr}uCER,EOE~A3h ~,~L~IE" = J3 ENTRy ADDRESS IN ASL 1SIC,',~-;I'~EI E,,~uIPMI='.zT--CA~,E UESIGNLI) TO HOUSE RELAYS AND OT~EN APPARATU~,, KEY--CASE INSTALLED ON A CUSIoMER"* PREmISEStT,) ~-r..R~IT I)II'FERENI LINES TO rHE CENTRAL OFFICE TO FIE CO',~,,,F('TEI~ TO VARIOUS TELr..PHONE STATIONS.
IT HAS c;I(J,',~ALS r{)w (.uHTAINING APPAP,ITUS.FOR TROUBLE LOC4tION ANn ROUTINEr.
', ;~ I N TE NA,,~CE ?
EaEr l~  vALJk = 5 ENTRY ADDRESS IN ASL = ,~;.
?ZI)~,S~< TH.~EE tl, l l l  LI".,~I(.
;TMS OF SUSTAINED SIGNALt WHEN TR'~NSMITTED.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
t~A.
UA~,  _~_ / J J .
_AUIDtg l I~-ALLY~-~-E-  EDJ .LD J#_~LL J~X~LL J .E J~ .
.
.
.
.TH i~F SI\[.F..~'ICF..
TERM USED IN RADIOTELI:.GRAPHY,, FOEr~a~;H vALuE = 9 ENTRY ADDRESS IN ASL = ~78.
t ,T~r l r :C  (~Z=rA C IRCUI \ [ )COMMUNICAT ION F 'AGIL ITY  PERMITT ING TR.~NSMISSIDe', OF INFORMATION IN DIGITAL FORM.
FOE.
.
.
.
.
~,~;t1 vALUE = 23  ENTRY ADDRESS IN ASL = lt;T'~,.)P.)
,.~Ar~, IRANSMISSION AND DATA PROCESSING DICTIONARY~ BY JANFS ~',, HOLMES EVE~ASH VALUE = ~ ENTRY ADDRESS IN ASL = ;"w)l-4-0-EA~ ELECTRIGAL ACCOUNTIN6 MACHINE.
EOE--HA~H v~LUE = 1 ENTRY ADDRESS IN ASL = ~6EA~PH~NF AN ELECTRgACg_USTI?_\[RANS~g?R_E_R__ITbITE_ELDED TO BE CLnSELY COUPLEI) ACOUSTICALLy TO THE EAR.
EUEHASH VALUEE~EH% AT (EMERbONE~ERS CR (E~ERSONEO~.HASH VALUeEMFRS G (E~IHSOiqHA%H vALuE= 2R ENTRY ADDRESS IN  ASL = 3 \ ]5A T ) IZ3~ RUTLEDOEt l~3-ASb7+ .
.
.
.
?~E.
.
_CHAS H)~31+ MATHEWS RD MIDDLEToN,Z38-577b.= 31 ENTRy ADDRESS IN ASL = , 3~9(+AIL I ?~?
LAKE LAwN PL ,222-2222,EUE= 37  - -  ENTRy ADDRESS IN  AsL = 3~2H|J~)I C ) |~P~ TOMPKINS DRt~-163.8+ EOF\ ]% H~SH VAL.IJEE (.
;~"tiA~H vat  ll~E HI&" ~ ~ ht~ ( I-.~4E RSI')N= ~ ENTRY ADDRESS IN ASL = 3~9HARRY I MRS}2+~|~ CHA_~,_T_G~RO NF~.~,~__~IP~R-f,,O/~7.
._ = .
.
.
.
.
.
.
.
.
.
.
.
.
.
_-- 1~ ENTRY ADI)RFSS IN  ASL --, 335HARLAND S)3}3 HILLTOP {)R+333-3333,  EOE .
.
.
.
.rl~ b,~ vALUEE.+,r HS I (Ei-~E RSL) ~~ A %'+'!
V~LUPE '-~E I-" % I~ ( F~ ~;I- R S 0,,i.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
F_!_Jr.+H (3 %,.++ v +', L I J I~E"+F R ~; PF (E "+F.HSOPJ-- ,~0 ENTRY ADDRES~ IN ASL.
=II}A MR$),',I".)
JEAN*~6-BI2H.
l;.OE~7~'= .~ ENTRy ADURE'SS IN ASI.
= ~' ,7ROl'~hh~y)6;)6,~ ELHwO01) AV MIDOLETON,~-3m-S?69.
: ;"I ENTRY ADDRFSS IN ASL = "65RICHARD EI I61~J CAMERON DR+L~3~-1126.
EVEHASH VwLIJE = 15 E NT+RY ADQRE5_S IN AS I .
.
-+__~2 .
.
.
.
.
.r"~'Fi"v I)F (E~'+~RY |'~ONA F)~5(+6 ~CDIVITT RL).PSb-\]+~B4.F..OEHA~}H VALtJF = 113 ENTRy ADDRESS IN ASI.. = 3 8IEF'kR(JENCY HLUICAL SERVIcE)~5 W MAIN,~55"BSbT.
EOE.HASH vAt,JE = 16 ENTRY ADDRESS rN ASI = 210~bCI (~lJiSOJq ACCEPTANCE CORP INC}I2hI  W ~ELTLINE Hf.
~57-IC9I .
.tOEHAbH vALUE = 17 ENTRY ADDRESS IN ASL = ~.AH~SH VALUE = ~ ENTRY ADORESS IN ASL = ~43~ (~AI) ISON ADJUSTMENT SYSTEM)303 PRICE PLt  238-2616.HASH V_A UJ.~L _-- .
.
.
.
19 .
.
.
.
.
.
.
.
.
.
.
.
.
~ I E Y _ ~ 5  ._/N__ASL _ - - __19_~__  .
.
.
.
(MA;JISON AIR 5ERVl'CE)33,92 NORTH STOUGidTt)~ RD~, ;='49-6478+?
EuE:No OF I~RU RU+~ -41 -VI.
DISCUSSIONi.
Sample Statistics of the  Main and Update HAICS AlgorithmsFor the purpose of demonstrating the actual performance ofthe HAICS main and update algorithms, the statistics gatheredfrom the test run (which also produced Tables 5-11) are listedbelow in Tables 15 and 16 and are the basis for a prelim?marydiscussion.Table 15.
Sample statistics of the main HAICS algorithmsSTORE RETRIEVESample Number of Accumulativeentry searches averagesequence of current number of_ _  entry searchesI 0 02 0 03 0 04 1 0.255 0 0.26 0 0.
1677 0 0.1438 i 0.259 0 0.22210 0 0.2ii I 0.27312 0 0.2513 0 0.23114 0 0.21415 0 0.216 i 0.2517 2 0.35918 1 O.
38919 0 0.3682O 0 O.
3521 0 0.33322 0 0.31823 0 0.
30424 I 0.33325 0 0.3226 0 0.
30827 0 0.29628 0 0.286Ntunber of Accumulativesearches averageof current number ofentry searchesI 1.01 1.01 1.0i 1.0I 1.0I 1.01 1.02 I.
1251 I. iiii i.I1 1.091i 1.083I 1.0772 i.
1431 i.
1331 1.
125i I .
1183 1.2222 1.263I-42-Table 16.
Sample statistics of the update P~ICS algorithmsADD DELETE REPIACENember Accumu- Number Acc~u-  Number Accumu-Sample of lative of lative of lativeentry searches average searches average searches averagesequence of number of number of numbercurrent of current of current ofentry searches entry searches entry searchesi 2 2.0 I 1.0 i 1.02 0 1.0 1 1.0 2 1.53 i 1.0 I 1.0 i 1.3~334 0 0.75 i 1.05 2 1.2The STORE efficiency, i.e., the acc~mlat ive average number ofsearches for the STORE algorithm, as shown in Table 15 reveals thatstarting with an empty chaining table, it is a low 0.286 at 87.5%fullness of the table.
Most entries are entered into this tablewith no search at all which implies a good balanced distribution ofkeyword hash values.The ADD efficiency is a function of the STORE efficiency.
Andin this sample's statistics the ADD efficiency obtained throughthe addition of four entries to make a full chaining table, is infact the same as if these four entries are placed at the end of theSTORE command.
Thus the ADD efficiency of 0.75 for four entriescan be combined with the STORE efficiency for tWenty-eight entriesand the result is a 0.344 of STORE efficiency for a full 32-entrychaining table.
It is noted that the ADD efficiency is alwaysgreater than (or equal to) the STORE efficiency due to the non-emptiness of the chaining table.The RETRIEVE efficiency is always identical with the searchefficiency as indicated in Table 3 which is an average of 1.25 forthe indirect chaining method.
The accumulative average number ofsearches does fall into the range between the minimum of 1.0 andthe maximum of 1.5 which is a 1.263 at 59.4% table fullness.-43-Both the DELETE and REPLACE efficiencies are functionsof the RETRIEVE efficiency or the search efficiency.
Thesample statistics of accumulative average number of searches of1.2 for deleting five entries and of 1.333 for replacing threeentries gives some indication that the DEleTE and REPLACEefficiencies are cOmpatible with the RETRIEVE efficiency.As mentioned before, the above discussion is preliminaryand even premature.
The statistics in Tables 15 and 16 donot cover some unusual circumstances although it is a typicalexample of several regular test runs.
To support, or oppose,the above discussion will demand several further extensivetests of each of these five efficiencies under a controlledand isolated environment.2.
A Framework for Information SystemsThe HAICS method is a basic framework aimed to improvethe  total efficiency of an information system.
It can beprogran~ned in a number of languages from the fundamental machinelanguage or assembly language of a particular family of computers,to the high-level procedure-oriented languages such as Fortranand Algol which are acceptable to most of the computers.With an amazing 1.25 average number of searches per entry,this method will  certainly make natural language processingnot much worse than the n,-nerical computation.
It is readyto be implemented for text processing and document retrieval;numerical data retrieval; and for handling of large files suchas dictionaries, catalogs, and personnel records, as well asgraphic informations.
In the test program coded in Fortranand a machine language COMPASS, eight commands as describedbefore are currently implemented and operational in batch modeon a CDC 3600.
Further development wil  t be on the use of tele-type console, CRT terminal, and plotter under a time-sharing-44-environment for producing ~ed ia te  responses.
This is underthe ideal of placing the most complete encyclopedia or a tailoredindex-reference work under one's fingertip.Specifically, the dictionary lookup operation as theprincipal operation of an information system, is no longer alengthy and painful procedure and thus a barrier in naturallanguage processing.
Linguistic analysis may be providedwith a complete freedom in referring back and forth any entryin the dictionary and the grammar, and the information gainedat any stage of analysis can be stored and retrieved in thesame way.
Document retrieval may go deeper in content analysisand providing a synonym dictionary for some better querydescriptor transforw~tions and matching functions.
As Shoffnernoted, "it is important to be able to determine the extentto which file structure and search techniques influence recall,precision, and other measures of system performance."
Thispaper tends to support Shoffner's statement by presenting ananalysis of current search techniques and a detailed descriptionof the HAICS method which is a possible framework for mostinformation systems.-45 -REFERENCESBecket, Joseph, and Hayes, Robert M. Information ,Storage andRetrieval: tool% elements~ theories.
Wiley, New York,1963.Bobrow, D. G. "Syntactic Theory in Computer Implementations,"Automated Language Processing, edited by Harold Borko.Wiley, New York, 1967, pp.217-251.Borko, Harold.
"Indexing and Classification," Automated LanguageProcessing, edited by Harold Borko.
Wiley, New York, 1967,pp.99-125.Bourne, Charles P. Methods of Information Handling.
Wiley, NewYork, 1963.Hayes, David G. Introduction to Computational Linguistics.American Elsevier, New York, 1967.Johnson, L.R.
"Indirect Chaining Method for Addressing onSecondary Keys," Conmmnications of th e ACId, 4(May,1961),pp.218-222.King~ Donald W. "Design and Evaluation of Information Systems,"Annual Review of Information Science and Technolo~y~ Volume3, edited by Carlos A. Cnadra.
Encyclopedia Britannica,Chicago, 1968, pp.61-i03.Knuth, Donald E. The Art of Computer Programming, Volome i/Fundamental AisorltbmSo Addison-Wesley, Reading, Massachusetts,1968.Lamb, Sydney M. and Jacobsen, William H., Jr. "A High-Speed Large-Capacity Dictionary Systes%" Readings in Automatic LanguageProeess in~, edited by David G. Hays.
American Elsevier, NewYork, 1966, pp.51-72.
Also in Mechanical Translation, 6(November, 1961), pp.
76-107.Lee, T. C.; Wang, H. T.; and Yang, S, C. "An Experimental Modelfor Chinese to English Machine Translation."
Paper presentedat the Annual Meeting of the Association for Machine Translationand Computational Linguistics, San Franqisco, 1966.-46-Lee, T.C.
; Wang, H. T.; Yang, S. C.; and Farmer, E. LinguisticStudies for Chinese to English Machine Translation.
ItekCorporation, Lexington, Massachusetts, 1965.
Also availablefrom ERIC Document Reproduction Service as ED 010 872.Maurer, W. D. Pro~rmmning: an introduction to computer languagesand techniques.
Holden-Day, San Francisco, 1968.Meadow, Charles T. The Analysis of Information Systems: A Programmer's!n.troduction to Information Retrieval.
Wiley, New York, 1967.Morris, Robert.
"Scatter Storage Techniques," Communications of the?
ACH, l l ( January,  1968), pp.38-44.Pendergraft, E.D.
'~ranslatlng Languages," Auto, hated LanguageProcessing, edited by Harold Borko.
Wiley, New York, 1967,pp.291-323.Peters@n, W.W.  '~ddressing for Random-Access Storage," IBM J.Res.
De%.
l(April, 1957), pp.130-146.Salton, Gerard.
Automatic Information Organization and Retrieval.McGrew-llill, New York, 1968.Sedeloe, Salley Yeates, and Sedelow, Walter A., Jr. "StylisticAnalysis," Automatic Language Processing, edited by HaroldBorko.
Wiley, New York, 1967, pp.181-213.See, Richard.
'~chine-Aided Translation and Information Retrieval,"Electronic Handlin~ of Information: Testin~ & Evaluation,edited by Allen Kent; Orrin E. Taulbee; Jack Belzer; andGordon D. Goldstein.
Thompson, Washington, D.C?,and Academic Press, London, 1967, pp.89-I08.Shoffner, Ralph M. "Organization, Maintenance and Search of MachineFiles," Annual Review of Information Science and Technology,Vob-,e 31 edited by Carlos A. Cuadra.
Encyclopedia Britannica,Chicago, 1968, pp.137-167.Simmons, R.F.
"Answering English Questions by Computer," Automatedlenguage Processing, edited by Harold Borko.
Wiley, New York,1967, pp.253-289.Travis, Larry E. "Analytic Information Retrieval," Natural Languageand the Computer, edited by Paul L. Garvin.
McGraw-Hill, NewYork, 1963, pp.310-353.Venezky, Richard L. "Storage, Retrieval, and Editing of Informationfor a Dictionary," American Documentation, 19 (January, 1968),pp.71-79.-47-Wegner, Peter.
ProgTamming Languages, Info~matlon Structures~ andMachine, OrKanization.
McGraw-Hill, New York, 1968.Wyllys, Ronald E. '~xtracting and Abstracting by Computer," AutomatedLanguage Processing, edited by Harold Borko.
Wiley, New York,i967, pp.127-179.Yang, S. C, '~utom~tic Segmentation and Phrase-Structure Parsing:a Simple Chinese Parser," Thought and Word, 6 (January, 1969),pp.324-331.-48-
