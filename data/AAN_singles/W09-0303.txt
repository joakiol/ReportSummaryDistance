Proceedings of the EACL 2009 Workshop on Language Technology and Resources for Cultural Heritage,Social Sciences, Humanities, and Education ?LaTeCH ?
SHELT&R 2009, pages 18?25,Athens, Greece, 30 March 2009. c?2009 Association for Computational LinguisticsMultiple sequence alignments in linguisticsJelena Prokic?University of GroningenThe Netherlandsj.prokic@rug.nlMartijn WielingUniversity of GroningenThe Netherlandsm.b.wieling@rug.nlJohn NerbonneUniversity of GroningenThe Netherlandsj.nerbonne@rug.nlAbstractIn this study we apply and evaluate aniterative pairwise alignment program forproducing multiple sequence alignments,ALPHAMALIG (Alonso et al, 2004), us-ing as material the phonetic transcriptionsof words used in Bulgarian dialectologicalresearch.
To evaluate the quality of themultiple alignment, we propose two newmethods based on comparing each columnin the obtained alignments with the cor-responding column in a set of gold stan-dard alignments.
Our results show that thealignments produced by ALPHAMALIGcorrespond well with the gold standardalignments, making this algorithm suitablefor the automatic generation of multiplestring alignments.
Multiple string align-ment is particularly interesting for histor-ical reconstruction based on sound corre-spondences.1 IntroductionOur cultural heritage is studied today not only inmuseums, libraries, archives and their digital por-tals, but also through the genetic and cultural lin-eaments of living populations.
Linguists, popula-tion geneticists, archaeologists, and physical andcultural anthropologists are all active in research-ing cultural heritage on the basis of material thatmay or may not be part of official cultural heritagearchives.
The common task is that of understand-ing the histories of the peoples of the world, espe-cially their migrations and contacts.
To researchand understand linguistic cultural heritage we re-quire instruments which are sensitive to its signals,and, in particular sensitive to signals of commonprovenance.
The present paper focuses on pronun-ciation habits which have been recognized to bearsignals of common provenance for over two hun-dred years (since the work of Sir William Jones).We present work in a research line which seeks tosubmit pronunciation data to phylogenetic analy-sis (Gray and Atkinson, 2003) and which requiresan alignment of the (phonological) segments ofcognate words.
We focus in this paper on evalu-ating the quality of multi-aligned pronunciations.In bioinformatics, sequence alignment is a wayof arranging DNA, RNA or protein sequences inorder to identify regions of similarity and deter-mine evolutionary, functional or structural simi-larity between the sequences.
There are two maintypes of string alignment: pairwise and multiplestring alignment.
Pairwise string alignment meth-ods compare two strings at a time and cannot di-rectly be used to obtain multiple string alignmentmethods (Gusfield, 1997, 343-344).
In multiplestring alignment all strings are aligned and com-pared at the same time, making it a good techniquefor discovering patterns, especially those that areweakly preserved and cannot be detected easilyfrom sets of pairwise alignments.
Multiple stringcomparison is considered to be the holy grail ofmolecular biology (Gusfield, 1997, 332):It is the most critical cutting-edge tool for ex-tracting and representing biologically important,yet faint or widely dispersed, commonalitiesfrom a set of strings.Multiple string comparison is not new in lin-guistic research.
In the late 19th century theNeogrammarians proposed the hypothesis of theregularity of sound change.
According to THENEOGRAMMARIAN HYPOTHESIS sound changeoccurs regularly and uniformly whenever the ap-propriate phonetic environment is encountered(Campbell, 2004).
Ever since, the understand-ing of sound change has played a major role inthe comparative method that is itself based on thesimultaneous comparison of different languages,i.e.
lists of cognate terms from the related lan-guages.
The correct analysis of sound changes18requires the simultaneous examination of corre-sponding sounds in order to compare hypothesesabout their evolution.
Alignment identifies whichsounds correspond.
Historical linguists align thesequences manually, while we seek to automatethis process.In recent years there has been a strong fo-cus in historical linguistics on the introductionof quantitative methods in order to develop toolsfor the comparison and classification of lan-guages.
For example, in his PhD thesis, Kondrak(2002) presents algorithms for the reconstructionof proto-languages from cognates.
Warnow et al(2006) applied methods taken from phylogenet-ics on Indo-European phonetic data in order tomodel language evolution.
Heeringa and Joseph(2007) applied the Levensthein algorithm to theDutch pronunciation data taken from Reeks Ned-erlandse Dialectatlassen and tried to reconstruct a?proto-language?
of Dutch dialects using the pair-wise alignments.Studies in historical linguistics and dialectome-try where string comparison is used as a basis forcalculating the distances between language vari-eties will profit from tools to multi-align stringsautomatically and to calculate the distances be-tween them.
Good multiple alignment is of ben-efit to all those methods in diachronic linguisticssuch as the comparative reconstruction methodor the so-called CHARACTER-BASED METHODStaken from phylogenetics, which have also beensuccessfully applied in linguistics (Gray and Jor-dan, 2000; Gray and Atkinson, 2003; Atkinsonet al, 2005; Warnow et al, 2006).
The multi-alignment systems can help historical linguisticsby reducing the human labor needed to detect theregular sound correspondences and cognate pairsof words.
They also systematize the linguisticknowledge in intuitive alignments, and provide abasis for the application of the quantitative meth-ods that lead to a better understanding of languagevariation and language change.In this study we apply an iterative pairwisealignment program for linguistics, ALPHAMA-LIG, on phonetic transcriptions of words used indialectological research.
We automatically multi-align all transcriptions and compare these gener-ated alignments with manually aligned gold stan-dard alignments.
At the same time we proposetwo methods for the evaluation of the multiple se-quence alignments (MSA).The structure of this paper is as follows.
Anexample of a multiple alignment and a discus-sion of the advantages over pairwise alignmentis given in the next section, after which we dis-cuss our data set in section 3.
Section 4 explainsthe iterative pairwise alignment algorithm and theprogram ALPHAMALIG.
Section 5 discusses thegold standard and two baselines, while section 6discusses the novel evaluation procedures.
The re-sults are given in section 7 and we end this paperwith a discussion in section 8.2 Example of Multiple SequenceAlignmentIn this section we will give an example of the au-tomatically multi-aligned strings from our data setand point out some important features of the si-multaneous comparison of more than two strings.village1 j "A - - - -village2 j "A z e - -village3 - "A s - - -village4 j "A s - - -village5 j "A z e k avillage6 j "E - - - -village7 - "6 s - - -Figure 1: Example of multiple string alignmentIn Figure 1 we have multi-aligned pronuncia-tions of the word az ?I?
automatically generatedby ALPHAMALIG.
The advantages of this kindof alignment over pairwise alignment are twofold:?
First, it is easier to detect and process corre-sponding phones in words and their alterna-tions (like ["A] and ["E] and ["6] in the secondcolumn in Figure 1).?
Second, the distances/similarities betweenstrings can be different in pairwise compari-son as opposed to multiple comparison.
Thisis so because multi-aligned strings, unlikepairwise aligned strings, contain informationon the positions where phones were insertedor deleted in both strings.
For example,in Figure 1 the pairwise alignment of thepronunciations from village 1 and village 3would be:village1 j "A -village3 - "A s19These two alignments have one matching el-ement out of three in total, which meansthat the similarity between them is 1/3 =0.33.
At the same time the similarity be-tween these two strings calculated based onthe multi-aligned strings in Figure 1 wouldbe 4/6 = 0.66.
The measurement based onmulti-alignment takes the common missingmaterial into account as well.3 Data setThe data set used in this paper consists of pho-netic transcriptions of 152 words collected from197 sites evenly distributed all over Bulgaria.
Itis part of the project Buldialect?Measuring lin-guistic unity and diversity in Europe.1 Pronun-ciations of almost all words were collected fromall the sites and for some words there are mul-tiple pronunciations per site.
Phonetic transcrip-tions include various diacritics and suprasegmen-tals, making the total number of unique characters(types) in the data set 98.24 Iterative pairwise alignmentMultiple alignment algorithms iteratively mergetwo multiple alignments of two subsets of stringsinto a single multiple alignment that is union ofthose subsets (Gusfield, 1997).
The simplest ap-proach is to align the two strings that have theminimum distance over all pairs of strings and it-eratively align strings having the smallest distanceto the already aligned strings in order to generatea new multiple alignment.
Other algorithms usedifferent initializations and different criteria in se-lecting the new alignments to merge.
Some beginwith the longest (low cost) alignment instead ofthe least cost absolutely.
A string with the smallestedit distance to any of the already merged stringsis chosen to be added to the strings in the multiplealignment.
In choosing the pair with the minimaldistance, all algorithms are greedy, and risk miss-ing optimal alignments.ALPHAMALIG is an iterative pairwise align-ment program for bilingual text alignment.
It usesthe strategy of merging multiple alignments ofsubsets of strings, instead of adding just one string1The project is sponsored by Volkswagen Stiftung.More information can be found at http://sfs.uni-tuebingen.de/dialectometry.2The data is publicly available and can be found athttp://www.bultreebank.org/BulDialects/index.html.at the time to the already aligned strings.3 It wasoriginally developed to align corresponding wordsin bilingual texts, i.e.
with textual data, but it func-tions with any data that can be represented as asequence of symbols of a finite alphabet.
In addi-tion to the input sequences, the program needs toknow the alphabet and the distances between eachtoken pair and each pair consisting of a token anda gap.In order to perform multiple sequence align-ments of X-SAMPA word transcriptions we modi-fied ALPHAMALIG slightly so it could work withthe tokens that consist of more than one symbol,such as ["e], ["e:] and [t_S].
The distances be-tween the tokens were specified in such a way thatvowels can be aligned only with vowels and con-sonants only with consonants.
The same tokensare treated as identical and the distance betweenthem is set to 0.
The distance between any tokenin the data set to a gap symbol has the same costas replacing a vowel with a vowel or a consonantwith a consonant.
Except for this very general lin-guistic knowledge, no other data-specific informa-tion was given to the program.
In this research wedo not use any phonetic features in order to definethe segments more precisely and to calculate thedistances between them in a more sensitive waythan just making a binary ?match/does-not-match-distinction?, since we want to keep the system lan-guage independent and robust to the highest pos-sible degree.5 Gold standard and baselineIn order to evaluate the performance of AL-PHAMALIG, we compared the alignments ob-tained using this program to the manually alignedstrings, our gold standard, and to the alignmentsobtained using two very simple techniques thatare described next: simple baseline and advancedbaseline.5.1 Simple baselineThe simplest way of aligning two strings would beto align the first element from one string with thefirst element from the other string, the second el-ement with the second and so on.
If two stringsare not of equal length, the remaining unalignedtokens are aligned with the gap symbol which rep-3More information on ALPHAMALIG can be foundat http://alggen.lsi.upc.es/recerca/align/alphamalig/intro-alphamalig.html.20resents an insertion or a deletion.
This is the align-ment implicit in Hamming distance, which ignoresinsertions and deletions.By applying this simple method, we obtainedmultiple sequence alignments for all words in ourdata set.
An example of such a multiple sequencealignment is shown in Figure 2.
These align-ments were used to check how difficult the mul-tiple sequence alignment task is for our data andhow much improvement is obtained using moreadvanced techniques to multi-align strings.j "A - -j "A z e"A S - -Figure 2: Simple baseline5.2 Advanced baselineOur second baseline is more advanced than thefirst and was created using the following proce-dure:1. for each word the longest string among allpronunciations is located2.
all strings are pairwise aligned against thelongest string using the Levensthein algo-rithm (Heeringa, 2004).
We refer to both se-quences in a pairwise alignment as ALIGN-MENT LINES.
Note that alignment lines in-clude hyphens indicating the places of inser-tions and deletions.3.
the alignment lines?all of equal length?areextracted4.
all extracted alignment lines are placed beloweach other to form the multiple alignmentAn example of combining pairwise alignmentsagainst the longest string (in this case [j"aze]) isshown in Figure 3.5.3 Gold standardOur gold standard was created by manually cor-recting the advanced baseline alignments de-scribed in the previous section.
The gold stan-dard results and both baseline results consist of152 files with multi-aligned strings, one for eachword.
The pronunciations are ordered alphabeti-cally according to the village they come from.
Ifthere are more pronunciations per site, they are allpresent, one under the other.j "A z ej "A - -j "A z e- "A S -j "A - -j "A z e- "A S -Figure 3: Advanced baseline.
The top two align-ments each contain two alignment lines, and thebottom one contains three.6 EvaluationAlthough multiple sequence alignments arebroadly used in molecular biology, there is still nowidely accepted objective function for evaluatingthe goodness of the multiple aligned strings(Gusfield, 1997).
The quality of the existingmethods used to produce multiple sequencealignments is judged by the ?biological meaningof the alignments they produce?.
Since stringsin linguistics cannot be judged by the biologicalcriteria used in string evaluation in biology, wewere forced to propose evaluation methods thatwould be suitable for the strings in question.
Oneof the advantages we had was the existence ofthe gold standard alignments, which made ourtask easier and more straightforward?in order todetermine the quality of the multi-aligned strings,we compare outputs of the different algorithms tothe gold standard.
Since there is no off-the-shelfmethod that can be used for comparison of multi-aligned strings to a gold standard, we proposetwo novel methods?one sensitive to the order ofcolumns in two alignments and another that takesinto account only the content of each column.6.1 Column dependent methodThe first method we developed compares the con-tents of the columns and also takes the column se-quence into account.
The column dependent eval-uation (CDE) procedure is as follows:?
Each gold standard column is compared tothe most similar column out of two neigh-boring columns of a candidate multiple align-ment.
The two neighboring columns dependon the previous matched column j and haveindices j +1 and j +2 (at the start j = 0).
Itis possible that there are columns in the can-didate multiple alignment which remain un-matched, as well as columns at the end of thegold standard which remain unmatched.21?
The similarity of a candidate column with agold standard column is calculated by divid-ing the number of correctly placed elementsin every candidate column by the total num-ber of elements in the column.
A score of1 indicates perfect overlap, while a score of0 indicates the columns have no elements incommon.?
The similarity score of the whole multiplealignment (for a single word) is calculated bysumming the similarity score of each candi-date column and dividing it by the total num-ber of matched columns plus the total num-ber of unmatched columns in both multiplealignments.?
The final similarity score between the set ofgold standard alignments with the set of can-didate multiple alignments is calculated byaveraging the multiple alignment similarityscores for all strings.As an example consider the multiple alignmentsin Figure 4, with the gold standard alignment (GS)on the left and the generated alignment (GA) onthe right.w rj "E m ev r "e m iu rj "e m iv rj "e m iw - rj "E m ev - r "e m i- u rj "e m iv - rj "e m iFigure 4: GS and ALPHAMALIG multiple stringalignments, the gold standard alignment left, theALPHAMALIG output right.The evaluation starts by comparing the first col-umn of the GS with the first and second columnof the GA.
The first column of the GA is the bestmatch, since the similarity score between the firstcolumns is 0.75 (3 out of 4 elements match).
Insimilar fashion, the second column of the GS iscompared with the second and the third column ofthe GA and matched with the third column of GAwith a similarity score of 1 (all elements match).The third GS column is matched with the fourthGA column, the fourth GS column with the fifthGA column and the fifth GS column with the sixthGA column (all three having a similarity score of1).
As a consequence, the second column of theGA remains unmatched.
In total, five columns arematched and one column remains unmatched.
Thetotal score of the GA equals:(0.75 + 1 + 1 + 1 + 1)(5 + 1)= 0.792It is clear that this method punishes unmatchedcolumns by increasing the value of the denomina-tor in the similarity score calculation.
As a conse-quence, swapped columns are punished severely,which is illustrated in Figure 5.
"o rj @ j -"o rj @ - u"o rj @ f -"o rj @ - j"o rj @ u -"o rj @ - fFigure 5: Two alignments with swapped columnsIn the alignments in Figure 5, the first threecolumns of GS would be matched with the firstthree columns of GA with a score of 1, the fourthwould be matched with the fifth, and two columnswould be left unmatched: the fifth GS column andthe fourth GA column yielding a total similarityscore of 4/6 = 0.66.
Especially in this case this isundesirable, as both sequences of these columnsrepresent equally reasonable multiple alignmentand should have a total similarity score of 1.We therefore need a less strict evaluation methodwhich does not insist on the exact ordering.
Analternative method is introduced and discussed inthe following section.6.2 Modified Rand IndexIn developing an alternative evaluation we pro-ceeded from the insight that the columns of a mul-tiple alignment are a sort of PARTITION of the el-ements of the alignment strings, i.e., they consti-tute a set of disjoint multi-sets whose union is theentire multi-set of segments in the multiple align-ment.
Each column effectively assigns its seg-ments to a partition, which clearly cannot overlapwith the elements of another column (partition).Since every segment must fall within some col-umn, the assignment is also exhaustive.Our second evaluation method is thereforebased on the modified Rand index (Hubert andArabie, 1985).
The modified Rand index is usedin classification for comparing two different parti-tions of a finite set of objects.
It is based on theRand index (Rand, 1971), one of the most popularmeasures for comparing the degree to which parti-tions agree (in classification).Given a set of n elements S = o1, ...on and twopartitions of S, U and V , the Rand index R is de-fined as:22R =a + ba + b + c + dwhere:?
a: the number of pairs of elements in S thatare in the same set (column) in U and in thesame set in V?
b: the number of pairs of elements in S thatare in different sets (columns) inU and in dif-ferent sets in V?
c: the number of pairs of elements in S thatare in the same set in U and in different setsin V?
d: the number of pairs of elements in S thatare in different sets in U and in the same setin VConsequently, a and b are the number of pairs ofelements on which two classifications agree, whilec and d are the number of pairs of elements onwhich they disagree.
In our case classificationsagree about concrete segment tokens only in thecases where they appear in the same columns inthe alignments.The value of Rand index ranges between 0 and1, with 0 indicating that the two partitions (multi-alignments) do not agree on any pair of points and1 indicating that the data partitions are exactly thesame.4 A problem with the Rand index is that itdoes not return a constant value (zero) if two par-titions are picked at random.
Hubert and Arabie(1985) suggested a modification of the Rand in-dex (MRI) that corrects this property.
It can beexpressed in the general form as:MRI =Rand index?
Expected indexMaximum index?
Expected indexThe expected index is the expected number ofpairs which would be placed in the same set in Uand in the same set in V by chance.
The maximumindex represents the maximum number of objectsthat can be put in the same set in U and in thesame set in V .
The MRI value ranges between ?1and 1, with perfect overlap being indicated by 1and values ?
0 indicating no overlap.
For a moredetailed explanation of the modified Rand index,please refer to Hubert and Arabie (1985).4In dialectometry, this index was used by Heeringa et al(2002) to validate dialect clustering methods.We would like to emphasize that it is clear thatthe set of columns of a multi-alignment have morestructure than a partition sec, in particular becausethe columns (subpartitions) are ordered, unlike thesubpartitions in a partition.
But we shall compen-sate for this difference by explicitly marking order.
"o [1] rj [2] @ [3] j [4] -"o [5] rj [6] @ [7] - u [8]"o [9] rj [10] @ [11] f [12] -Figure 6: Annotated alignmentIn our study, each segment token in each tran-scription was treated as a different object (see Fig-ure 6), and every column was taken to be a sub-partition to which segment tokens are assigned.Both alignments in Figure 5 have 12 phones thatare put into 5 groups.
We ?tag?
each token sequen-tially in order to distinguish the different tokens ofa single segment from each other, but note that theway we do this also introduces an order sensitivityin the measure.
The two partitions obtained are:GS1 = {1,5,9}GS2 = {2,6,10}GS3 = {3,7,11}GS4 = {4,12}GS5 = {8}GA1 = {1,5,9}GA2 = {2,6,10}GA3 = {3,7,11}GA4 = {8}GA5 = {4,12}Using the modified Rand index the quality ofeach column is checked, regardless of whether thecolumns are in order.
The MRI for the alignmentsin Figure 5 will be 1, because both alignmentsgroup segment tokens in the same way.
Eventhough columns four and five are swapped, in bothclassifications phones [j] and [f] are grouped to-gether, while sound [u] forms a separate group.The MRI itself only takes into account thequality of each column separately since it sim-ply checks whether the same elements are togetherin the candidate alignment as in the gold-standardalignment.
It is therefore insensitive to the order-ing of columns.
While it may have seemed coun-terintuitive linguistically to proceed from an order-insensitive measure, the comparison of ?tagged to-kens?
described above effectively reintroduces or-der sensitivity.In the next section we describe the results of ap-plying both evaluation methods on the automati-cally generated multiple alignments.237 ResultsAfter comparing all files of the baseline algo-rithms and ALPHAMALIG against the gold stan-dard files according to the column dependent eval-uation method and the modified Rand index, theaverage score is calculated by summing up allscores and dividing them by the number of wordfiles (152).The results are given in Table 1 and also in-clude the number of words with perfect multi-alignments (i.e.
identical to the gold standard).Using CDE, ALPHAMALIG scored 0.932 out of1.0 with 103 perfectly aligned files.
The resultfor the simple baseline was 0.710 with 44 per-fectly aligned files.
As expected, the result forthe advanced baseline was in between these tworesults?0.869 with 72 files that were completelyidentical to the GS files.
Using MRI to eval-uate the alignments generated we obtained gen-erally higher scores for all three algorithms, butwith the same ordering.
ALPHAMALIG scored0.982, with 104 perfectly aligned files.
The ad-vanced baseline had a lower score of 0.937 and74 perfect alignments.
The simple baseline per-formed worse, scoring 0.848 and having 44 per-fectly aligned files.The scores of the CDE evaluation method arelower than the MRI scores, which is due to the firstmethod?s problematic sensitivity to column order-ing in the alignments.
It is clear that in both evalu-ation methods ALPHAMALIG outperforms bothbaseline alignments by a wide margin.It is important to notice that the scores for thesimple baseline are reasonably high, which canbe explained by the structure of our data set.The variation of word pronunciations is relativelysmall, making string alignment easier.
However,ALPHAMALIG obtained much higher scores us-ing both evaluation methods.Additional qualitative error analysis reveals thatthe errors of ALPHAMALIG are mostly caused bythe vowel-vowel consonant-consonant alignmentrestriction.
In the data set there are 21 files thatcontain metathesis.
Since vowel-consonant align-ments were not allowed in ALPHAMALIG, align-ments produced by this algorithm were differentfrom the gold standard, as illustrated in Figure 7.The vowel-consonant restriction is also respon-sible for wrong alignments in some words wheremetathesis is not present, but where the vowel-consonant alignment is still preferred over align-v l "7 kv "7 l kv l "7 - kv - "7 l kFigure 7: Two alignments with metathesising vowels and/or consonants with a gap (see forexample Figure 4).The other type of error present in the AL-PHAMALIG alignments is caused by the factthat all vowel-vowel and consonant-consonant dis-tances receive the same weight.
In Figure 8the alignment of word bjahme ?were?
producedby ALPHAMALIG is wrong because instead ofaligning [mj] with [m] and [m] it is wronglyaligned with [x] and [x], while [x] is aligned with[S] instead of aligning it with [x] and [x].b "E S u x - m e -bj "A - - x - m i -b "e x - mj - - 7 -Figure 8: Alignment error produced by AL-PHAMALIG8 Discussion and future workIn this study we presented a first attempt to auto-matically multi-align phonetic transcriptions.
Thealgorithmwe used to generate alignments has beenshown to be very reliable, produce alignments ofgood quality, with less than 2% error at the seg-ment level.
In this study we used only very sim-ple linguistic knowledge in order to align strings.The only restriction we imposed was that a vowelshould only be aligned with a vowel and a con-sonant only with a consonant.
The system hasshown to be very robust and to produce good qual-ity alignments with a very limited information onthe distances between the tokens.
However, in thefuture we would like to apply this algorithm usingmore detailed segment distances, so that we canwork without vowel-consonant restrictions.
Usingmore detailed language specific feature system foreach phone, we believe we may be able to improvethe produced alignments further.
This especiallyholds for the type of errors illustrated in Figure 8where it is clear that [mj] is phonetically closer to[m] than to [x] sound.As our data set was relatively simple (indicatedby the reasonable performance of our simple base-line algorithm), we would very much like to eval-uate ALPHAMALIG against a more complex data24CDE CDE perfect columns MRI MRI perfect columnsSimple baseline 0.710 44 0.848 44Advanced baseline 0.869 72 0.937 74ALPHAMALIG 0.932 103 0.982 104Table 1: Results of evaluating outputs of the different algorithms against the GSset and try to replicate the good results we ob-tained here.
On one hand, high performance ofboth baseline algorithms show that our task wasrelatively easy.
On the other hand, achieving per-fect alignments will be very difficult, if possible atall.Additionally, we proposed two methods to eval-uate multiple aligned strings in linguistic research.Although these systems could be improved, bothof them are giving a good estimation of the qual-ity of the generated alignments.
For the examineddata, we find MRI to be better evaluation tech-nique since it overcomes the problem of swappedcolumns.In this research we tested and evaluated AL-PHAMALIG on the dialect phonetic data.
How-ever, multiple sequence alignments can be alsoapplied on the sequences of sentences and para-graphs.
This makes multiple sequence alignmentalgorithm a powerful tool for mining text data insocial sciences, humanities and education.AcknowledgementsWe are thankful to Xavier Messeguer of the Tech-nical University of Catalonia who kindly sup-plied us with the source code of ALPHAMALIG.We also thank Therese Leinonen and SebastianK?rschner of the University of Groningen and Es-teve Valls i Alecha of the University of Barcelonafor their useful feedback on our ideas.ReferencesLaura Alonso, Irene Castellon, Jordi Escribano, XavierMesseguer, and Lluis Padro.
2004.
MultipleSequence Alignment for characterizing the linearstructure of revision.
In Proceedings of the 4th In-ternational Conference on Language Resources andEvaluation.Quentin Atkinson, Geoff Nicholls, David Welch, andRussell Gray.
2005.
From words to dates: waterinto wine, mathemagic or phylogenetic inference.Transcriptions of the Philological Society, 103:193?219.Lyle Campbell.
2004.
Historical Linguistics: An In-troduction.
Edinburgh University Press, second edi-tion.Russel D. Gray and Quentin D. Atkinson.
2003.Language-tree divergence times support the Ana-tolian theory of Indo-European origin.
Nature,426:435?339.Russel D. Gray and Fiona M. Jordan.
2000.
Lan-guage trees support the express-train sequence ofAustronesian expansion.
Nature, 405:1052?1055.Dan Gusfield.
1997.
Algorithms on Strings, Trees andSequences: Computer Science and ComputationalBiology.
Cambridge University Press.Wilbert Heeringa and Brian Joseph.
2007.
The rela-tive divergence of Dutch dialect pronunciations fromtheir common source: An exploratory study.
In JohnNerbonne, T. Mark Ellison, and Grzegorz Kondrak,editors, Proceedings of the Ninth Meeting of the ACLSpecial Interest Group in Computational Morphol-ogy and Phonology.Wilbert Heeringa, John Nerbonne, and Peter Kleiweg.2002.
Validating dialect comparison methods.
InWolfgang Gaul and Gunter Ritter, editors, Classifi-cation, Automation, and New Media.
Proceedings ofthe 24th Annual Conference of the Gesellschaft f?rKlassifikation e. V., University of Passau, March 15-17, 2000, pages 445?452.
Springer, Berlin, Heidel-berg and New York.Wilbert Heeringa.
2004.
Measuring Dialect Pronunci-ation Differences using Levenshtein Distance.
Ph.D.thesis, Rijksuniversiteit Groningen.Lawrence Hubert and Phipps Arabie.
1985.
Compar-ing partitions.
Journal of Classification, 2:193?218.Grzegorz Kondrak.
2002.
Algorithms for LanguageReconstruction.
PhD Thesis, University of Toronto.William M. Rand.
1971.
Objective criteria for theevaluation of clustering methods.
Journal of Amer-ican Statistical Association, 66(336):846?850, De-cember.Tandy Warnow, Steven N. Evans, Donald Ringe, andLuay Nakhleh.
2006.
A stochastic model of lan-guage evolution that incorporates homoplasy andborrowing.
In Peter Forster and Colin Renfrew, ed-itors, Phylogenetic Methods and the Prehistory ofLanguages.
MacDonald Institute for ArchaeologicalResearch, Cambridge.25
