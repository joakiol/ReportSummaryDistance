PATH-BASED AND NODE-BASED INFERENCE IN SEMANTIC NETWORKSStuart C. ShapiroDepartment of Computer ScienceState University of New York at BuffaloAmherst, New York 14226AbstractTwo styles of performing inference insemantic networks are presented and com-pared.
Path-based inference allows an arcor a path of arcs between two given nodesto be inferred from the existence of an-other specified path between the same twonodes.
Path-based inference rules may bewritten using a binary relational calculusnotation.
Node-based inference allows astructure of nodes to be inferred from theexistence of an instance of a pattern ofnode structures.
Node-based inferencerules can be constructed in a semanticnetwork using a variant of a predicatecalculus notation.
Path-based inferenceis more efficient, while node-based infer-ence is more general.
A method is de-scribed of combining the two styles in asingle system in order to take advantageof the strengths of each.
Applications ofpath-based inference rules to the repre-sentation of the extensional equivalenceof intensional concepts, and to the expli-cation of inheritance in hierarchies aresketched.I.
IntroductionSemantic networks have developedsince the mid sixties \[10;11\] as a formal-ism for the representation of knowledge.Methods have also been developing for per-forming deductive inference on the knowl-edge represented in the network.
In thispaper, we will compare two styles of in-ference that are used in semantic networks,path-based inference and node-based infer-ence.
In sections 2 and 3, these termswill be explained and references to sys-tems that use them will be provided.
Insections 4 and 5, the advantages and dis-advantages of each will be discussed.Sections 6, 7 and 8 will show how they canbe used to complement each other in a sin-gle semantic network system, how path-based inference can help represent the ex-tensional equivalence of intensional con-cepts, and :low a formalism for writ ingpath-based inference rules can be used toexplicate the notion of "inheritance = in asemantic network.2.
Path-Based InferenceLet us refer to a relation (perforcebinary) that is represented by an arc in anetwork as an arc-relation.
If R is anarc-relation, an arc la~elled R from nodea to node b represents that the relation-ship aRb holds.
It may be that this arcis not present in the network, but aRb maybe inferred from other information presentin the network and one or more inferencerules.
If the other information in thenetwork is a specified path of arcs from ato b, we will refer to the inference aspath-based.
The ways in which such pathsmay be specified will be developed as thispaper proceeds.The two clearest examples of the gen-eral use of path-based inference are inSAMENLAQ II \[18\] and Protosynthex III \[13\].Both these systems use what might be call-ed "relational" networks rather than=semantic = networks since arc-relationsinclude conceptual relations as well asstructural relations (see \[14\] for a dis-cussion of the difference).
For example,in Protosynthex III there is an arc label-led COMMANDED from the node representingNapoleon to the node representing theFrench army, and in SAMENLAQ II an arc la-belled EAST.OF goes from the node forAlbany to the node for Buffalo.
Both sys-tems use relational calculus expressionsto form path-based inference rules.
Thefollowing relational operators are employ-ed (we here use a variant of the earliernotations):I. Relational Converse -- If R is arelation, R C is its converse.SO, ~x,~(xRC~ <--> ~Rz).2.
Relational Composit ion -- If Ra--n-d~ a -~ relations; R/S is Rcomposed with S. So,Vz,y(zR/Sy <--> ~n(zRn ~ ~S?)).3.
Domain Restriction -- If R and S(S z)R is the re-lation R with its domain re-stricted to those objects thatbear the relation S to 8.
So,Vz,~,n(z(S z)R~ <--> (zSn & zR~)).4.
Range Restriction -- If R and S219are relations, R(S ~) is the re-lation R with its range restrict-to those objects that bear therelation S to ~.
So,V=,y,z(zR(S ~)y <--> (zRy 6 ySz)).5.
Relational Intersection -- If Rand S are relations, R&S is theintersection of R and S. So,%Zz,y(xR&Sy <--> (zRy & zSy)).Notice that VQ,R,S,z,y,~(zR(Q ~)/Sy <-->?R/(Q z)Sy) so we can use the notationR(Q z)S unambiguously.In SAMENLAQ II, path-based inferencerules are entered by using the relationaloperators to give alternate definitions ofsimple arc labels.
For example (again ina variant notation):EAST.OF + EAST.OF/EAST.OFdeclares that EAST.OF is transitiveSOUTH.OF ?
NORTH.OF cdeclares thatVx,y(yNORTH.OF= ?
zSOUTH.OFy)FATHER.OF + (GENDER MALE)PARENT.OFdeclares that a father is a maleparent.SIR \[11\] is another relational net-work system that uses path-based inference.Although the original expressed inferencerules in the form of general LISP func-tions, the reproduction in \[16, Chap.
7\]uses the notion of path grammars.
The re-lation operators listed above are augment-ed with R*, meaning zero or more occur-rences of R composed with itself, R +,meaning one or more occurrences of R com-posed with itself, and RvS, meaning theunion of R and S. The following relationsare used:z EQUIV y means x and y arethe same individualz SUBSET y means z is a subsetof y= MEMBER y means z is a memberof the set yPOSSESS y means  z owns  a mem-ber of the set yPOSSESS-BY-EACH y means every memberof the set z owns amember of the set ~.To determine if z POSSESS y, the networkis searched using the following rule:POSSESS ?
EQUIV*/(POSSESSV(MEMBER/SUBSET*/POSSESS-BY-EACH))/SUBSET*The widest use of path-based infer-ence is in \]SA hierarchies.
Fig.
I isbased on probably the most famous \]SAhierarchy, that of Coll ins and Quil l ian\[2\].
The two important rules here areISA ?
ISA*and PROP + ISAe/PROPAs McDermott \[8) points out, ISA hierar-chies have been abused as well as used.In Section 8, we will propose a methodauthors can use to describe their hier-chies precisely.PROP @ISAFIGURE I: ISA hierarchy based on that of Col l insand Qui l l ian3.
Node-Based InferenceSeveral semantic network systems in-corporate methods of representing generalrules in a semantic network version ofpredicate calculus.
Among these systemsare those of Shapiro \[14;15;17\], Kay \[7\],Hendrix \[6\], Schubert \[12\], and Fikes andHendrix \[3\].
Figure 2 shows such a net-work deduction rule representingV=\[z~MAN ?
~y (ycWOMAN 6 ~LOVESy) \] ?Figure 3 shows a rule for~r \[~cTRANSITIVE ?~z,y,~(z~y ~ yrz ?
xrz)\].
?MAX f ~',~ ~ .
.
.
.
.
> -~ 3FIGURE 2: A semantic network deduction rule forVz\[xEMAH ?
~y(y~NOMAN & zLOVESy)\]The network formalism employed is that ofShapiro \[15;17\].
These deduction rulesemploy pattern nodes (P1, P2, PS, P4, P5,P6, PY), each one of which represents apattern of nodes that might occur in thenetwork.
We will therefore call this kindof inference rule a node-based inferencerule.
Pattern nodes are related to eachother by rule nodes, each of which repre-sent a proposit ional operator, or, equiva-lently, an inference mechanism.
For exam-ple, R2 represents the rule that if an in-stance of P1 occurs in the network, an in-stance of R1 with the same substitution2.20for z may be deduced.
Quantif ication isrepresented in this notation by an arc-re-lation between a rule node and the vari-able nodes bound in the rule.
For example,z is bound by a universal quantif ier in R2and y is bound by an existential quanti-fier in R1.FIGURE 3: A semantic network deduction rule forVr~-~TRANSITIVE ?
Vx,y,z(xry & yrz ?
xrz)\]To see how a node-based inferenceproceeds, consider the network of Figure 4in conjunction with the rule of Figure 3,and say that we wish to decide ifA SUPPORTS C. The network that would rep-resent that A SUPPORTS C matches P7 withthe variable binding \ [ z /A ,  r/SUPPORTS,a/C\].
P4 in the binding Jr/SUPPORTS\] ismatched against the network and is foundto successfully match M1.
P5 \[z/A,r/SUPPORTS, y/y\]  and P6\[y/y, r/SUPPORTS,z/C\] are  then  both  matched aga ins t  thenetwork and each succeeds with a consis-tent binding of y to B.
The rule thussucceeds and A SUPPORTS C is deduced.
(Details of the bindings and the matchroutine are given in \[15\].
)FIGURE 4: A network data base asserting thatA SUPPORTS B; B SUPPORTS C andSUFPORIS ?
TRANSITIVE~It should be noted that set inclusionwas represented by an arc (\[SA) in Section2, but set membership is being representedby a node (with a MEMBER, CLASS "caseframe") in this section.
The nodal repre-sentation is required by node-based infer-ence rules and is consistent with the no-tion that everything that the network"knows", and every concept to which thenetwork can refer is represented by anode.4.
Advantages of Node-Based InferenceThe advantages of node-based infer-ence stem from the generality of the syn-tax of node-based inference rules.
Path-based rules are limited to binary rela-tions, have a restricted quantif icationstructure and require that an arc betweentwo nodes be implied by a path between thesame two nodes.
Rule R2 of Figure 2 couldnot be written as a path-based rule, and,although the transitivity of SUPPORTScould be expressed by a ~ath-based rule(SUPPORTS ?
SUPPORTS+).
the "second order"rule R4 of Figure 3 could not.Let us b~iefly consider how rule R4is constructed, whether it really is or isnot a second order rule, and why it couldnot be expressed as a path-based rule.Rule R4 supplies a rule for use withtransitive relations.
In order to assertthat a relation is transitive (e.g.
asser-tion node M1 of Figure 4), the relationmust be represented as a node, rather thanas an arc.
This also allows quantif ica-tion over such relations, since in allnode-based inference rule formalisms vari-ables may only be substituted for nodes,not for arcs.
Since the relation is anode, another node must be used to showthe relationship of the relation to itsarguments (e.g.
nodes M2 and M3 in Figureq).
Thus, Rq is really a first order rulederived from the second order rulevr \ [ rETRANSIT IVE  ?
Vx,y ,z (z ry  & yrz  ?
zrz ) \ ]by reducing r tO an individual variableand introducing a higher order relation,AVO, whose second argument is a conceptualrelation and whose other arguments areconceptual individuals.
So R4 is moreaccurately seen as the first order rulevr  \ [ rcTRANSIT IVE  ?Vx ,y ,z (AVO(z , r ,y )  ~ AVO(y , r ,~)  ?AVO ( z , r ,~) )  \] .In this view, the predicates of semanticnetworks are not the nodes representingconceptual relations, but the differentcase frames.
Rule Rq cannot be represent-ed as a path-based rule because it is arule about the relation AVO, and AVO is atrinary, rather than a binary relation.Although some node-based inferencerules cannot be expressed by path-basedinference rules, it is easy to see thatany path-based inference rule can be ex-pressed by a node-based inference rule, aslong as we are wil l ing to replace somearc-relations by nodes and higher orderpredicates.5.
Advantages of Path-Based InferenceThe major advantage of path-based in-ference is efficiency.
Carrying out apath-based inference involves merelychecking that a specified path exists inthe network between twog iven  nodes (plus,221perhaps, some side paths to specifiednodes required by domain and range restric-tions).
This is a well understood and re-latively efficient operation, especiallycompared to the backtracking, intersection,or unif ication operations required tocheck the consistency of variable substi-tutions in node-based inference rules.Moreover, path following seems tomany people to be what semantic networkswere originally designed for.
The majorsearch algorithm of Quil l ian's semanticMemory is a hi-directional search for apath connecting two nodes \[10, p. 249\].Also, the ability to do path tracing is amotivation underlying ISAhierarch ies ,  andis why the Collins and Quil l ian results\[2\] gained such attention.
These effi-ciencies are lost by replacing path-basedinference rules by node-based inferencerules.6.
Comb inin~ Path-Based andNode-Based InferenceWe begin the task of unifying path-based and node-based inferences by notingthe formal equivalence between an arc-re-lation and a two case case frame.
Figure5 i l lustrates this using ISA vs. SUB-SUP.Figure 5a shows the use of the \[SA arc-re-lation to represent that canaries arebirds.
Figure 5b represents the same re-lationship by a SUB-SUP case frame, andhas the advantage that the relationship isrepresented by a node, M4.
Figure 5c is aredrawing of 5b, using the arc label SUB-to represent the relation SUB C. (It isgenerally understood in semantic networkformalisms that whenever an arc represent-ing a relation R goes from some node n tosome node m, there is also an arc repre-senting R c going from m to -).
Figure 5cclarif ies the notion that we may think ofan instance of a two case case frame (suchas M4) as both an arc and a node if we arewil l ing to recalibrate the measurement oftime it takes to follow one arc-relationto be the time it takes to follow twoarcs.
We can replace all instances of \[SAin the path-based inference rules ofSection 2 by the composition SUB-/SUP andstill have valid rules except that we nowhave paths on the left of the "?"
symbol.
(a\]\[SA i, SUPSUB-(b) (c\]FIGURE 5: An illustration of the equi-valence of an arc-relation to a two casecase frame, a) I~presenting set member-ship as the \[SA arc-relation, b) Repre-senting set membership as a SUB-SUP caseframe, c) Redrawing (b) so it looks like(a}.Let us, therefore, extend our syntaxof path-based inference rules to allow apath of arc compositions on the left ofthe "?"
symbol.
The rule ISA ?
ISA~states that whenever there is a path ofISA arcs from node , to mode m, we can in-fer a "virtual" ISA arc directly from , tom which we may, if we wish, actually addto the network.
Similarly, let the ruleSUB-/SUP ?
(SUB-/SUP) ~ state that whenevera path of alternating SUB- and SUP arcsgoes from node n to node m, we can infer a"virtual" node with SUB to n and SUP to mwhich we may, if we wish, actually add tothe network.We now have a formalism for specify-ing path-based inference rules in a net-work formalism that represents binary con-ceptual relations by two case case frames.This would allow, for example, for a moreunified representation in the SNIFFERsystem \[3\], in which node-based inferencerules are implemented and built- in pathbased inference rules are used for setmembership and set inclusion, both ofwhich are represented only by arc-rela-tions.
The formalism presented herewould al low set membership and set inclu-sion assertions to be represented bynodes, permitting other assertions toreference them, without giving up theefficiency of built- in routines to imple-ment the set inclusion hierarchies.We desire, however, a more generalunif ication of path-based and node-basedinferences.
There are two basic routinesused to implement node-based inferences(although specific implementations maydiffer).
One is the match routine that isgiven a pattern node and finds instancesof it in the network, and the other is theroutine that interprets the quantif iersand connectives to carry out the actualdeduction.
The match routine can be en-hanced to make use of path-based inferencerules.
Consider a typical match routineused in the deduction in Section 3 ofA SUPPORTS C from the network of Figure 4and the rule of Figure 3, and let us in-troduce the notation that if P is a pathof arcs and n is a node, P\[,\] representsthe set of nodes found by following thepath P from the node n. In the example,the match routine was given the patternP4 to match in the binding It/SUPPORTS\].It was able to find MI by intersectingCLASSC\[TRAN~ITIVE\] with MEMBERC\[SuPPORTS\].Now, let us suppose that the path-basedinference rule CLASS ?
CLASS/ (SUB-/SUP) ~has been declared in such a way that thematch routine could use it.
T~e matchroutine would intersect MEMBER~\[SUPPORTS\]wi~h ~LASS/(SUB-/SUP)*)C\[TRANSITIVE\]  andbe able to find a virtual node assertingthat SUPPORTS is TRANSITIVE even if a longchain of set inclusions separated them.The proposal, therefore, is this: anyarc-relation in a semantic network may bedefined in terms of a path-based inferencerule which the match routine is capable ofusing when finding instances of pattern222nodes.
This completes the general unifica-tion of path-based and node-based infer-ence we desired.
Since path-based infer-ence is embedded in the match routine,while node-based inference requires thequantif ier and connective interpreter, thedifference is reminiscent of the differ-ence between subconscious inference andconscious reasoning.7.
Application to ExtensionalEquivalence ofIntensional ConceptsA basic assumption of semantic net-works is that each concept is representedby a single node and that all informationabout a concept is reachable from its node.Yet, since Woods' discussion \[20\], mostsemantic network authors have agreed thata node represents an intensional, ratherthan an extensional concept.
How shouldwe handle the information that two differ-ent intensional concepts are extensionallyequivalent?Let us il lustrate this by a story(entirely fictional).
For the last yearwe have heard of a renowned surgeon intown, Dr. Smith, known for his bri l l ianceand dexterity, who saved the life of thefamous actress Maureen Gelt by a diff icultheart transplant operation.
Meanwhile, atseveral social gatherings, we have metsomeone by the name of John Smith, aboutfive feet, six inches tall, black hair andbeard, generally disheveled and clumsy.We now discover, much to our amazementthat John Smith and Dr. Smith are one andthe same!
In our semantic network, wehave one node for Dr. Smith connected tohis attributes, and another for John Smithconnected to his attributes.
What are weto do?
Although we now know that JohnSmith saved the life of Maureen Gelt andthat Dr. Smith has black hair, surely wecannot retrieve that information as fastas that Dr. Smith is a surgeon and thatJohn Smith is 5'6" tall.
If we were tocombine the two nodes by taking all thearcs from one node, tying them to theother and throwing away the first, wewould lose this distinction.
We must in-troduce an assertion, say an EQUIV-EQUIVcase frame, that represents the fact thatDr.
Smith and John Smith, different inten-sional concepts, are extensionally thesame.
I How are we to use this assertion?Ignoring for the moment referential lyopaque contexts ("We didn't know that JohnSmith was Dr.
Smith.
"), how can we expressthe rule that if n EQUIV-/EQUIV m, thananything true of n is true of m?
Our nodebased inference rules cannot express thisrule because expressing "anything true ofn" requires quantifying over those higherorder case frame predicates such as AVOIThe psychological plausibi l ity of thisdiscussion is supported by the experimentsof Anderson and Hastie \[I\] and of McNabb\ [9 \ ] .and MEMBER-CLASS- One possibi l i ty is touse lambda abstraction as Schubert does\[12\].
Each n-ary higher order predicateinvolving some node becomes a unary predi-cate by replacing that node by a lambdavariable.
Thus, "Dr. Smith saved MaureenGelt's life" becomes an instance of theunary predicate A(x)\[x saved MaureenGelt's life\] applied to Dr. Smith.
Usinga PRED-ARG case frame, it is easy to rep-resent the ruleVx,y,Z\[EQUIV-EQUIV(X,y) 6 PRED-ARG(X,z)+ PRED-ARG(?,~)\]-The trouble with this solution is, how arewe to retrieve this information as a factabout Maureen Gelt?
Must we also storel(x) \[Dr. Smith saved x's life\](Maureen Gelt)?This duplication is unsatisfying.
An al-ternative is to include in the path-basedinference rule defining each arc-relationthe path (EQUIV-/EQUIV) ~.
For example,AGENT ?
AGENT/(EQUIV-/EQUIV) ~, and CLASS+ CLASS/( (EQUIV- /EQUIV)* / (SUB- /SUP)*)* .Although this solution requires more rulesthan the lambda abstraction solution, andthe rules look complicated, it avoids theduplication of the same assertion in dif-ferent forms and the postulation of con-ceptual predicates such as l(x)\[x savedMaureen Gelt's life\].Hays' cognitive networks \[4;5\] in-clude a scheme similar to the one proposedhere.
Each assertion about Dr. Smithwould refer to a different node, each withan MST (manifestation) arc to a commonnode.
This node would represent the intension of Dr. Smith, while the othersrepresent Dr. Smith as surgeon, Dr. Smithas saviour of Maureen Gelt, etc.
Presum-ably, when Hays' network learns of theidentity of Dr. Smith with John Smith, anew node is introduced with MS~ arcs fromboth Dr. Smith and John Smith.
L Dr. Smithand John Smith are then seen as two mani-festations of the newly integrated Dr.John Smith.
Hays presumably uses anMST*/(MSTC)* path where we propose an(EQUIV-/EQUIV)* path .Blocking referential ly opaque con-texts seems to require introducing rela-tiona~ oomplement.
For any path P andnodes x and y, let z~y hold just in casea path P from = to ~ does not exist in thenetwork.
We might block referential lyopaque contexts by includin~ the domain orrange restriction (OBJ-/VERB/MEMBER-/CLASSOPAQUE) in the arc definitions.8.
Application to the  Explicationof InheritanceAs was mentioned in Section 2, many2Actually, Hays' networks have not yetbeen implemented, and I have been warned\[R. Fritzson, personal communication\] thatthe implementation may differ from what Ihave supposed.223semantic networks include inheritance(ISA) hierarchies.
Often these are atbest vague and at worst inconsistent.
Wepropose that the inheritance properties ofthese hierarchies be clearly defined bypath-based inference rules using the syn-tax we are presenting here or some otherwell defined syntax.
We do not say thatall systems should be able to input andinterpret such rules, but only that auth-ors use such rules to explain clearly totheir readers how their hierarchies work.Before this proposal is feasible, wemust be able to handle two more situations.The first is the exception principle,first expressed by Raphael \[11, p.85\] andsuccinctly stated by Winograd as, "Anyproperty true of a concept in the hier-archy is implicitly true of anything link-ed below it, unless explicit ly contradict-ed at the lower level" \[19, p.197\].
Toal low for this, let us introduce an ezoep-Lion ope~a~o2..
If P and Q are paths andx and y are nodes, let zP\Qy hold just incase there is a path described by P from zto y and no path of equal or shorterlength described by Q from x to y.
To seethat this suffices to handle the exceptionprinciple, consider the hierarchy ofFigure 6, where, to make things more in-teresting, we have postulated a variety offlying penguins.
We have also taken theliberty of explicit ly representing that~AN-FLY and CAN-NOT-FLY are negations ofeach other.
The rule for inheritancein this hierarchy isPROP ~ (ISA*/PROP)\(ISA*/PROP/NOT)-, PROPl ISAI~LE-FLY I  NG-PENGU I NS~FIGURE 6: An 18A hierarchy illustrating the exceptionprinciple.The other situation we must discussis "almost transitive" relations such asSIBLING- SIBLING is certainly symmetric,but it cannot be transitive since it isirreflexive.
Yet your sibling's siblingis your sibling as long as he/she is notyourself.
This is what we mean by "almosttransitive."
Note that for any relation,R, R*~(R+) is the identity relation.
Letus call it I.
Then for any relation P,let pR be P&T.
pR is the ~rrefZexiuemestri~%io, of P We can use this to de-fine SIBLING asSIBLING + (SIBLINGvSIBLINGC) *R-We suggest that the syntax for path-based inference rules is now completeenough to explicate the inheritance rulesof various hierarchies.
The complete syn-tax will be summarized in the next section9.
SummaryWe have presented and compared twostyles of inference in semantic networks,path-based inference and node-based infer-ence.
The former is more efficient, whilethe latter is more general.
We showed theequivalence of an arc-relation to a twocase case frame, and described how path-based inference could be incorporated intothe match routine of a node-based infer-ence mechanism, thereby combining thestrengths of the two inference styles.
Wediscussed the use of equivalence paths torepresent the extensional equivalence ofintensional concepts.
Finally, we urgedauthors of inheritance hierarchies to ex-pl icate their hierarchies by displayingthe path-based inference rules that governinheritance in them.We also presented a syntax for path-based inference rules which can be summar-ized as follows:I.
A a~ is either an arc-relation or apath as described in part 2 enclosedin parentheses.
Parentheses may beomitted whenever an ambiguity does notresult.2.
If P and Q are paths and z, ~, and zare nodes, paths may be formed asfollows:a. Converse: if P is a path from xto y, ~ is a path from y to z.b.
Composition: if P is a path fromz to z and Q is a path from z to~, P/Q is a path from z to y.c.
qomposit ion .zero or more times:IX P composed with itself zeroormore times describes a path from zto y, P* is a path from z to y.d.
Composit ion one or more times: IfP composed with itself one or moretimes is a path from z to y, P+ isa path from z to y.e.
Union: If P is a path from z to yor Q is a path from z to ~, pvQ isa path from z to y.f.
Intersection: If P is a path fromz to ~ and ~ is a path from x toy, P&Q is a path from x to y.g.
Cgmplement: If there is no path Pfrom z to ~, ~ is a path from x toY.h.
Irreflexive restriction: If P isa path from z to y and z#y, pR isa path from z to y.i.
Exception: If P is a path from zto ~ and there is no path Q oflength equal to or less than thelength of P, P\Q is a path from ztO y.j.
Domain restriction: If P is a224path from z to y and Q is a pathfrom z to z, (Q z)P is a path fromxtoy .k.
Range restriction: If P is a pathfrom z to y and Q is a path from yto z?
P(Q z) is a path from x toy.3.
A path-based inference rule is of theform <defined path> ?
<defining path>where <defining path> is any path de-scribed by parts I or 2 above?
and<defined path> is either a) a singlearc-relation, or b) a composition of narc relations for some fixed n, i.e.using only "/", not "$" or "+".
Therule is interpreted to mean that ifthe <defining path> goes from somenode x to some node y then: a) the arcthat is the <defined path> is inferredto exist from z to y; b) the n arcsthat are the <defined path> and n-1new intermediate nodes are inferred toexist from z to y.ReferencesI.
Anderson, J. and Hastie, R. Individu-ation and reference in memory: propernames and definite descriptions, cogCo -nitive Psychology 6, 4 (October, I~J'Y~)?49~-514.2.
Collins?
A.M. and Quillian, R. Re-trieval time from semantic memory.
J.of Verbal Learning and Verbal Behavio-r8_, (1969) , 240-247.'3.
Fikes, R. and Hendrix, G. A network-based knowledge representation and itsnatural deduction system.
Proc.
FifthInt.
Jt.
Conf.
on Art i f ic ial  Intelli-gence?
Dept.
of Computer Science,Carnegie-Mellon University, P i t tsburg~1977, 235-246.4.
Hays, D.G.
Cognitive Structures.
un-published ms. Dept.
of Linguistics?SUNY at Buffalo?
Amherst, NY.5.
Hays?
D.G.
Types of processes on cog-nitive networks.
In L.S.
Olschki, ed.Mathematical Linguistics, Frienze,P~s'a, 1977, 523-532.6.
Hendrix, G.G.
Expanding the util ityof semantic networks through partit ioning.
Advance Papers of the FourthInt.
Jt.
Conf.
on Artif icial Intelli-~,~ , MIT AI T.'aboratory, Cambridge, 975, 115-121.7.
Kay, M. The MIND system.
In R.Rustin, ed.
Natural Language Process-~;  Algorithmics Press, New York,?
155-188.8.
McDermott, D. Artif icial intell igencemeets natural stupidity.
SIGARTNewsletter, 57 (April, 197~-~-9 .9.
McNabb, S.D.
The effects of encodingstrategies and age on the memory re-presentation for sentences containingproper names and definite descriptions.Report No.
77-3?
Indiana MathematicalPsychology Program, Department of Psy-chology, Indiana University?Bloomington?
IN.
August?
1977.10.
Quillian, M.R.
Semantic memory.
InM.
Minksy, ed.
Semantic InformationProcessing, MIT Press?
Cambridge, MA,1968, 227-270.11.
Raphael?
B.
SIR: semantic informa-tion retrieval.
In M. Minsky, ed.Semantic Information Processing, MITPress?
Cambridge, MA., 1968, 33-Iq5.12.
Schubert, L.K.
Extending the expres-sive power of semantic networks.Artif icial Intell i~ence 7, 2 (Summer,1976), 163-198.13.
Schwartz, R.M., Burger, J.F., andSimmons, R.F.
A deductive question-answerer for natural language infer-ence.
CACM 13, 3 (March?
1970), 167-183.lq .
Shapiro?
S.C. A net structure forsemantic information storage?
deduc-tion and retrieval.
Proc.
Second Int.Jt.
Conf.
on Artif icial Intelligence,The British Computer Society?
London?1971?
512-523.15.
Shapiro?
S.C.
Representing and locat-ing deduction rules in a semanticnetwork.
Proc.
Workshop on Pattern-Directed Inference Systems.
In SIGARTNewsletter, 63 (June?
1977), lq - .~16.
Shapiro?
S.C. Techniques of Artifi-cial Intelligenc'e.
D. Van Nostrand?New York, 1979.17.
Shapiro?
S.C.
The SNePS semantic net-work processing system.
In N. Findler,ed.
Associative Networks -- TheRepresentation and Use of Knowledge inComputers, Academic Press?
New York,in press.18.
Shapiro?
S.C. and Woodmansee, G.H.
Anet structure based relational ques-tion answerer: description and exam-ples.
Proc.
Int.
Jt.
Conf.
onArtif icial Intelligence, The MITRECorp.?
Bedford?
MA., 1969, 325-3q6.19.
Winograd, T. Frame representationsand the declarative/procedural contro-versy.
In D.G.
Bobrow and A. Collins?eds.
Representation and Understandin~Academic Press?
Inc., New York, 1975,185-210.20.
Woods?
W.A.
What's in a link: Foun-dations for semantic networks.
In D.G.
Bobrow and A. Collins, eds.
R e ~sentation and Understanding, AcademicPress?
Inc., New York, 1975, 35-82.225
