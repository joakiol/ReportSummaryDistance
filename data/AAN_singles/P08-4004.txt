Proceedings of the ACL-08: HLT Demo Session (Companion Volume), pages 13?16,Columbus, June 2008. c?2008 Association for Computational LinguisticsDemonstration of the UAM CorpusTool for text and image annotationMick O?DonnellEscuela Polit?cnica SuperiorUniversidad Aut?noma de Madrid28049, Cantoblanco, Madrid, Spainmichael.odonnell@uam.esAbstractThis paper introduced the main features of theUAM CorpusTool, software for human andsemi-automatic annotation of text and images.The demonstration will show how to set up anannotation project, how to annotate text filesat multiple annotation levels, how to auto-matically assign tags to segments matchinglexical patterns, and how to perform cross-layer searches of the corpus.1 IntroductionIn the last 20 years, a number of tools have beendeveloped to facilitate the human annotation oftext.
These have been necessary where software forautomatic annotation has not been available, e.g.,for linguistic patterns which are not easily identi-fied by machine, or for languages without suffi-cient linguistic resources.The vast majority of these annotation tools havebeen developed for particular projects, and havethus not been readily adaptable to different annota-tion problems.
Often, the annotation scheme hasbeen built into the software, or the software hasbeen limited in that they allow only certain typesof annotation to take place.A small number of systems have however beendeveloped to be general purpose text annotationsystems, e.g., MMAX-2 (M?ller and Strube 2006),GATE (Cunningham et al2002), WordFreak(Morton and LaCivita 2003) and Knowtator(Ogren 2006).With the exception of the last of these however,these systems are generally aimed at technicallyadvanced users.
WordFreak, for instance, requireswriting of Java code to adapt to a different annota-tion scheme.
Users of MMAX-2 need to edit XMLby hand to provide annotation schemes.
Gate al-lows editing of annotation schemes within the tool,but it is a very complex system, and lacks cleardocumentation to help the novice user becomecompetent.The UAM CorpusTool is a text annotation toolprimarily aimed at the linguist or computationallinguist who does not program, and would ratherspend their time annotating text than learning howto use the system.
The software is thus designedfrom the ground up to support typical user work-flow, and everything the user needs to perform an-notation tasks is included within the software.2 The Project WindowIn the majority of cases, the annotator is interestedin annotating a range of texts, not just single texts.Additionally, in most cases annotation at multiplelinguistic levels is desired (e.g., classifying the textas a whole, tagging sections of text by function(e.g., abstract, introduction, etc.
), tagging sen-tences/clauses, and tagging participants in clauses.To overcome the complexity of dealing with mul-tiple source files annotated at multiple levels, themain window of the CorpusTool is thus a windowfor project management (see Figure 1).13Figure 1: The Project Window of UAM CorpusToolFigure 3: An annotation window for ?Participant?
layer.<?xml version='1.0' encoding='utf-8'?><document><segments><segment id='1' start='158' end='176'features='participant;human' state='active'/><segment id='2' start='207' end='214'features='participant;organisation;company'state='active'/>...</segments></document>Figure 4: Annotation Storage Example14This window allows the user to add new annota-tion layers to the project, and edit/extend the anno-tation scheme for each layer (by clicking on the?edit?
button shown with each layer panel).
It alsoallows the user to add or delete source files to theproject, and to open a specific file for annotation ata specific layer (each file has a button for eachlayer).3 Tag Hierarchy EditingMost of the current text annotation tools lack built-in facilities for creating and editing the codingscheme (the tag set).
UAM CorpusTool uses a hie-rarchally organised tag scheme, allowing cross-classification and multiple inheritance (both dis-junctive and conjunctive).
The scheme is editedgraphically, adding, renaming, moving or deletingfeatures, adding new sub-distinctions, etc.
See Fig-ure 3.An important feature of the tool is that anychange to the coding scheme is automaticallypropagated throughout all files annotated at thislayer.
For instance, if a feature is renamed in thescheme editor, it is also renamed in all annotationfiles.The user can also associate a gloss with eachtag, and during annotation, the gloss associatedwith each feature can be viewed to help the coderdetermine which tag to assign.participantPARTICIPANTS-TYPEpersoncountryorganisation ORGANISATION-TYPEcompanygovernmentunionother-organisationpolitical-partyFORMpropercommonpronominalFigure 2: Graphical Editing of the Tag Hierarchy4 Annotation WindowsWhen the user clicks on the button for a given textfile/layer, an annotation window opens (see Figure3).
This window shows the text in the top panel(with previously identified text segments indicatedwith underlining).
When the user creates a newsegment (by swiping text) or selects an existingsegment, the space below the text window showscontrols to select the tags to assign to this segment.Tags are drawn from the tag scheme for the currentlayer.
Since the tag hierarchy allows cross-classification, multiple tags are assigned to thesegment.
CorpusTool allows for partially overlap-ping segments, and embedding of segments.Annotated texts are stored using stand-off XML,one file per source text and layer.
See Figure 4 fora sample.
The software does not currently inputfrom or export to any of the various text encodingstandards, but will be extended to do so as it be-comes clear which standards users want supported.Currently the tool only supports assigning tagsto text.
Annotating structural relations between textsegments (e.g., co-reference, constituency or rhe-torical relations) is not currently supported, but isplanned for later releases.5 Corpus SearchA button on the main window opens a CorpusSearch interface, which allows users to retrievelists of segments matching a query.
Queries caninvolve multiple layers, for instance, subjectin passive-clause in english wouldretrieve all NPs tagged as subject in clauses taggedas passive-clause in texts tagged as ?english?
(thisis thus a search over 3 annotation layers).
Searchescan also retrieve segments ?containing?
segments.One can also search for segments containing astring.Where a lexicon is provided (currently onlyEnglish), users can search for segments containinglexical patterns, for instance, clause con-taining ?be% @participle?
would returnall clause segments containing any inflection of?be?
immediately followed by any participle verb(i.e.
most of the passive clauses).
Since dictionariesare used, the text does not need to be pre-taggedwith a POS tagger, which may be unreliable ontexts of a different nature to those on which thetagger was trained.
Results are displayed in aKWIK table format.6 Automating AnnotationCurrently, automatic segmentation into sentencesis provided.
I am currently working on automaticNP segmentation.The search facility outlined above can also beused for semi-automatic tagging of text.
To auto-code segments as ?passive-clause?, one specifies asearch pattern (i.e., clause containing15?be% @participle?).
The user is presentedwith all matches, with a check-box next to each.The user can then uncheck the hits which are falsematches, and then click on the ?Store?
button totag all checked segments with the ?passive-clause?feature.
A reasonable number of syntactic featurescan be identified in this way.7 Statistical processingThe tool comes with a statistical analysis interfacewhich allows for specified sub-sections of the cor-pora (e.g., ?finite-clause in english?
vs. ?finite-clause in spanish?)
to be described or contrasted.Statistics can be of the text itself (e.g., lexical den-sity, pronominal usage,  word and segment length,etc.
), or relate to the frequency of annotations.These statistics can also be exported in tab-delimited form for processing in more general sta-tistical packages.8 Intercoder Reliability TestingWhere several users have annotated files at thesame layers, a separate tool is provided to compareeach annotation document, showing only the dif-ferences between coders, and also indicating totalcoder agreement.
The software can also produce a?consensus?
version of the annotations, taking themost popular coding where 3 or more coders havecoded the document.
In this way, each coder canbe compared to the consensus (n comparisons),rather than comparing the n!
pairs of documents.9 Annotating ImagesThe tool can also be used to annotate images in-stead of text files.
In this context, one can swiperegions of the image to create a selection, and as-sign features to the selection.
Since stand-off anno-tation is used for both text and image, much of thecode-base is common between the two applica-tions.
The major differences are: i) a different an-notation widget is used for text selection than forimage selection; ii) segments in text are defined bya tuple: (startchar, endchar), while image segmentsare defined by a tuple of points ( (startx,starty),(endx,endy)), and iii) search in images is restrictedto tag searching, while text can be searched forstrings and lexical patterns.10 ConclusionsUAM CorpusTool is perhaps the most user-friendly of the annotation tools available, offeringeasy installation, an intuitive interface, yet power-ful facilities for management of multiple docu-ments annotated at multiple levels.The main limitation of the tool is that it cur-rently deals only with feature tagging.
Future workwill add structural tagging, including co-referencelinking, rhetorical structuring and syntactic struc-turing.The use of the tool is rapidly spreading: in thefirst 15 months of availability, the tool has beendownloaded 1700 times, to 1100 distinct CPUs(with only minimal advertisement).
It is being usedfor various text annotation projects throughout theworld, but mostly by individual linguists perform-ing linguistic studies.UAM CorpusTool is free, available currently forMacintosh and Windows machines.
It is not opensource at present, delivered as a standalone execu-table.
It is implemented in Python, using TKinter .AcknowledgmentsThe development of UAM CorpusTool was par-tially funded by the Spanish Ministry of Educationand Science (MEC) under grant numberHUM2005-01728/FILO (the WOSLAC project).ReferencesC.
M?ller, and M. Strube.
2006.
Multi-Level Annotationof Linguistic Data with MMAX2.
In S. Braun, K.Kohn, J. Mukherjee (eds.)
Corpus Technologyand Language Pedagogy.
New Resources, NewTools, New Methods (English Corpus Linguis-tics, Vol.3).
Frankfurt: Peter Lang.
197-214.H.
Cunningham, D. Maynard, K. Bontcheva and V.Tablan.
2002.
GATE: A Framework and Graphi-cal Development Environment for Robust NLPTools and Applications.
Proceedings of the 40thMeeting of the Association for ComputationalLinguistics (ACL'02).
Philadelphia, July 2002.T.S.
Morton and J. LaCivita.
2003.
WordFreak: AnOpen Tool for Linguistic Annotation.
Proceed-ings of HLT-NAACL.
17-18.P.V.
Ogren 2006.
Knowtator: a plug-in for creatingtraining and evaluation data sets for biomedicalnatural language systems.
Proceedings of the 9thInternational Prot?g?
Conference.
73?76.16
