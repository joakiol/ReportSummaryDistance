A linguistic and navigational knowledge approach to text navigationJavier CoutoFacultad de Ingenier?a - UdelaRJulio Herrera y Reissig 56511300 ?
Montevideo ?
Uruguayjcouto@fing.edu.uyJean-Luc MinelMoDyCO, UMR 7114 CNRS ?
Univ.
Paris X200, avenue de la R?publique92 001 ?
Nanterre ?
Francejminel@u-paris10.frAbstractWe present an approach to text navigationconceived as a cognitive process exploitinglinguistic information present in texts.
Weclaim that the navigational knowledge in-volved in this process can be modeled in adeclarative way with the Sextant language.Since Sextant refers exhaustively to specificlinguistic phenomena, we have defined acustomized text representation.
These dif-ferent components are implemented in thetext navigation system NaviTexte.
Two ap-plications of NaviTexte are described.1 IntroductionText navigation has several interpretations.
Usu-ally, this term refers to hypertext systems, whichoffer the possibility to activate hyperlinks, movingthe reading point from a text unit (source) to an-other one (target), this change being intra or inter-textual.
From our point of view, this conceptionpresents some limitations.
First, the hyperlink acti-vation is not assisted.
In other words, imprecise,poor or no information is provided to the readerbefore s/he activates the link.
Second, the readerdoes not know where the movement will be carriedout in the text (before or after the reading point oroutside the text), which generates the ?lost inhyperspace?
problem (Edwards and Hardman1989).
Finally, hyperlinks are embedded in the hy-pertext.
Therefore, there is no clearly distinctionbetween text constituents and navigation knowl-edge.
In addition, by not explicitly modeling thisknowledge, it is not reusable.Different solutions have been proposed to ad-dress the problems mentioned.
Some researchers(Danielson, 2002) have tried to mitigate the lost inhyperspace problem offering global maps wherethe reading point is clearly identified.
Adaptivehypertext (Mathe and Chen, 1994; Brusilovsky,1996) relying on user model, proposes to modifythe way the text is shown on the screen.
Dynamichypertext (Bodner and Chignell, 1999) computesthe value of hyperlinks using several criteria suchas text similarity or predefined relations.
In thisapproach, a hyperlink is defined as a query return-ing a text node.In some way, our conception of text navigationis related to the notion of computed query, butrather than taking into account criteria dependingon the reader, the target is computed by exploitinglinguistic information in texts.
Moreover, the que-ries are not placed in texts but they are encapsu-lated as knowledge by a specific language (Sex-tant), which allows isolating the navigationalknowledge to create knowledge bases.
Both textsand queries (navigational knowledge) are inter-preted by NaviTexte, which manages the interac-tions with a reader.The remainder of this paper is organized as fol-lows.
In the next section, we discuss our approachto text navigation.
The third section describes anavigational knowledge modeling language calledSextant.
The fourth section details the text naviga-tion system NaviTexte.
The fifth section describestwo applications of NaviTexte.
Then we addressthe evaluation aspects of our approach.
At last,conclusions are presented.2 Defining text navigationOur conception of text navigation lies in thehypothesis that navigating through texts is theexpression of a cognitive process related to specificknowledge (Minel, 2003; Couto and Minel, 2006).More precisely: we claim that a reader movesthrough texts applying some knowledge to exploitlinguistic information present in texts (e.g.discursive markers).
Moreover, we claim that this667knowledge may be articulated in a declarative way(cf.
Sec.
3) relying on information in texts coded,on the one hand, by its structure, and, on the otherhand, by specific annotations.The main difference between classic hypertextand our conception of navigation lies on the statusof texts and on the definition of navigationalknowledge.
In the case of hypertext, the visualiza-tion of a text is unique and navigational knowledgeis encoded (embedded) in the text.
In our approach,there are several ways to visualize a text (Couto,2006), each way called text view, and for eachview, different navigational knowledge may bedefined.
As a consequence, the navigation is notguided by the author, compared to hypertext navi-gation where s/he determines the links, but it is theresult of an interpretation process made by thereader, relying on text structure and annotations.Figure 1.
Elements of text navigation.Our conception of navigation (cf.
Fig.1) relies onfour elements: i) a text representation allowing lin-guistic specific phenomena and annotations (seeCouto, 2006); ii) a language to model navigationalknowledge (cf.
Sec.
3); iii) an agent (an individualor a software) able to encode such knowledge; iv) asystem, called NaviTexte, to interpret and applyknowledge to a specific text (cf.
Sec.
4).3 Modeling navigational knowledge: theSextant languageTo allow the unambiguous isolation of navigationalknowledge we need a formal modeling language.We want to model the knowledge applied by areader to move through texts, claiming that thisknowledge exploits linguistic information presentin texts.
We do not say that this is the only way areader may move through texts (e.g.
strollingcourses proposed by G?ry (2002) is a counterex-ample), but we say that this is the kind of way thanwe are going to model.
Different views of a textand the fact that each view contains specific indica-tions of the possible reading courses constitute theheart of the language.3.1 Knowledge modules ant text viewsA text view may be a full view or a partial viewfocused in some specific phenomena present in thetext (for example a view of all discourse referents).The constituent elements of a view are formalizedin a view description, which contains the type ofview, its parameters, the creation constraints (i.e.conditions to verify by the TU of the view) and thenavigation operations (see next section).
At pre-sent, four types of view have been defined: plain-text, tree, graph and temporality.
The three firststypes are described in (Couto, 2006).
The last onegraphically represents temporality in texts and acomplete description is in (Battistelli et al, 2006).Several view descriptions may be gathered bythe encoder in an entity called navigational knowl-edge module.
The creation of a view may be con-ceptualized as the application of a view descriptionto a specific text.
Thus, the application of a moduleimplies the creation of a set of text views.3.2 The navigation operationThe notion of computed query mentioned in sec-tion 1 is formalized in Sextant as a navigation op-eration, which links a source TU to a target TU.
Inclassic hypertext systems one must explicitly con-nect the specific source to the specific target.
Forexample, if a reader wants, for all definitions in ascientific paper, to move from one to the followingone, several hyperlinks must be defined.
In our ap-proach we specify the source and the target usingconditions.
As a result, we can abstract, for exam-ple, the navigational knowledge that states ?gofrom one definition to the following one?, being?definition?
one of the TU annotations.We can specify several conditions for the sourceand the target.
We say that a navigation operationis available for a TU if this TU verifies the sourceconditions.
A text navigation system should findthe TU that verifies the target conditions.
As sev-eral TU in the text may verify them, we need a wayof disambiguation.
This is done by the orientationparameter, which specifies the direction of the tar-get search by using one of these options: first, last,forward(i), backward(i).
First and last indicate thatthe search of the target is absolute: the TU to select668will be the first (respectively the last) TU that ver-ify the conditions.
Forward(i) and backward(i) in-dicate that the search is carried out relatively to thesource (before or after) and indexed by the integer i.For example, ?forward(3)?
is interpreted as thethird TU, after the source, of all the TU verifyingthe target conditions.3.3 The conditions languageThe conditions language is an important compo-nent of Sextant ant it is composed by basic condi-tions, TU elements existence conditions, hierarchi-cal conditions and non-hierarchical conditions.Basic conditions concern TU?s attributes andannotations.
For this kind of condition we use anotation close to the pattern notion.
We define anoperator called TU, having five operands that cor-respond to the following properties: type, number,level, annotations and string.
With the three firstoperands and the fifth one, we denote constraints ofequality, inequality, order, prefix, suffix and sub-string occurrence.
The fourth operand is used toindicate the existence or non-existence of annota-tions, whether it is an annotation name, a value or aname-value pair.For TU elements existence conditions, we defineoperators without operands to verify if a TU hasannotations, string, title, parent and children.For conditions dealing with hierarchical rela-tionship between different TU, a set of unary op-erators have been defined, taking a basic conditionas an argument.
For example, the isAscendant op-erator verifies if a TU is the ascendant of anotherTU specified by a basic condition.
The other opera-tors are: isParent, isChild, isSibling, isDescendant,hasInTitle, isInTitle.
We would like to draw atten-tion to the fact that these operators allow to movethrough the hierarchy of TU from a starting TU(Couto, 2006).Non-hierarchical conditions concern constructedunits?
attributes and annotations as well as TU con-stitution.All conditions may be combined using the clas-sic logic operators OR, AND and NOT.
Figure 2presents an example of a language expression thatformulates the following condition: TU of type?NP?, having an annotation of name ?discoursereferent?, for which it exists, among its descen-dants, a TU of type ?paragraph?
not having an an-notation of name ?semantic label?
whose value is?conclusion?.TU(type = NP, *,*,{(discourse referent, *)},*) ANDisDescendant(TU(type = paragraphe,*,*, {???
(semanticlabel, conclusion)},*))Figure 2.
Conditions language example.This condition means: noun phrases being a dis-course referent that does not occur in a concludingparagraph.4 NaviTexte: a text navigation systemSeveral adaptive navigation systems have beenproposed (Benyon and Murray, 1993; Kaplan et al,1993; Boyle and Encarnacion, 1994; Brusilovskyand Pesin, 1994; Brusilovsky et al, 1996).
Whilethey are goal specific (learning, tutoring, reading,etc.
), NaviTexte (Couto, 2006) is a generic textnavigation system implementing our approach.This means that, depending on texts and knowledgemodules, NaviTexte may be used, for example, as alearning, tutoring or reading system.
Another im-portant difference is that NaviTexte gives the userthe liberty to navigate through the text following itsown interests (the system propose - the readerchooses), while the mentioned systems try to main-tain a user stuck to a given route (the user chooses -the system propose) (H?
?k and Svensson, 1999).NaviTexte consists of sub-systems dealing with:text representation, navigational knowledge, visualrepresentation and user interaction.
The first onebuilds a text representation in memory from a textannotated manually or by dedicated software (Cun-ningham et al, 2002; Bilhaut et al, 2003).
Thesecond sub-system loads and compiles the knowl-edge modules.
The result of this compilation is agraph of potential navigation courses that in prac-tice is calculated as needed and stored in optimiza-tion data structures.
The third sub-system calcu-lates and displays different text views and thefourth one manages the user interaction.The reader has the possibility to load and unloadseveral texts and knowledge modules in the samework session.
A complete description of NaviTextemay be found in (Couto, 2006).5 Applications of NaviTexteBuilding an application with NaviTexte requires aset of texts and navigational knowledge modules.Both text representation and Sextant language haveXML implementations with dedicated editors to669use in case of a manual text annotation and a hu-man knowledge encoder, respectively (cf.
Fig.1).So far four applications have been developed: al-ternative automatic summarization (Couto andMinel, 2006), the NaviLire project (Couto et al,2005; Lunquist et al, 2006), re-reading MadameBovary (Couto and Minel, 2006) and temporality intexts (Battistelli et al, 2006).
We present two ofthem to illustrate NaviTexte?s potential.5.1 NaviLire: a text linguistics applicationFor the past thirty years, text linguistic researchershave worked on describing linguistic markers oftextual coherence in order to bring out principles oftext structuring (Lundquist, 1980).
A set of con-cepts and models of textual interpretation has beenworked out, including for example, anaphora, con-nectors, mental spaces, etc.
In particular, thesestudies have shown that even for languages appar-ently close like French and Danish, texts are notorganized in the same way (Lundquist, 2005).
Con-sequently, text linguistics has important implica-tions in foreign language teaching, especially froma contrastive point of view, when language pairsare analyzed through texts used in authentic com-munication situations.
It seems that the teaching oftext linguistics contributes to sharpen the attentionof students towards the building of well-formedtexts and to stimulate their own text production.Therefore, a tool that allows the student to perceivetext units that contribute to and maintain text co-herence and to navigate between them, can be sup-posed to be an important didactic tool for teachingreading of foreign language texts, as well as pro-ducing written texts in the foreign language.In the reading process, the student has to dealwith two basic types of cognitive problems.
First,s/he has to identify discourse referents in a text andchoose the correct relations between the nounphrases that refer to them.
Second, s/he has to iden-tify the function and orientation intended by thesender.
In the NaviLire project, navigation opera-tions assisting the student are defined used Sextantand the texts are manually annotated by a text lin-guistics expert.5.2 Navigation as an alternative to automaticsummarizationMany automatic summarization systems have beenproposed (Mani, 2001; Minel, 2003).
All these sys-tems, based on the principle of phrase, propositionor group extraction, have been confronted to twoproblems intrinsic to the extraction procedure: i)the rupture of text cohesion, like in cases of anaph-ora where the corresponding discourse referent ismissing; ii) the adaptation of the summary to readerspecific needs.
Actually, there are no completelysatisfying solutions to these problems.
An alterna-tive approach is to consider the summarizing proc-ess as a reading course belonging to the reader(Crispino and Couto, 2004).
Thereby, instead ofextracting text fragments, we propose specificreading courses, whose specifications are based onpropositions of (Endres-Niggermeyer et al, 1995)and on practice observations made in the frame ofthe automatic summarization system SERAPHINevaluation (Minel et al, 1997) and the Filtextframework (Minel et al, 2001).These works showed that professional summar-izers are interested by discourse categories thatthey retrieve by exploiting text organization andlexical markers.
They also showed that these pro-fessionals navigate through texts using heuristicsacquired by experience.
For example, they beginby reading the conclusion, and then they continueby looking, in the introduction, for nominal groupsthat occurred in the conclusion.
This is the knowl-edge we have modeled with Sextant.A specific reading course specifies, on the onehand, the kind of discursive category searched by areader (e.g.
a conclusion, a definition, an argument,a hypothesis, etc.
1 ) and on the other hand, thecourse in which the segments that linguisticallyenunciate these categories (typically phrases) mustbe presented to the reader.To carry out these reading courses, it is neces-sary to locate the discursive categories involvedand mark them in the text.
For this purpose, weused ContextO (Minel et al, 2001).
A readingcourse example is presented in Fig.
3.
The readingpoint is positioned over the first TU, a phrase inthis case, annotated ?Thematic Announcement?.When the user clicks over the TU, NaviTexte rec-ommends her/him four navigation operations.
Thefirst one suggests bringing her/him to the following?Thematic Announcement?.
The others ones sug-gest going to the first ?Conclusion?, the first ?Re-capitulation?
and the first ?Argument?.
For a givenTU, each navigation operation available has three1For more details on different categories or on what empiricalbasis were these types derived, see (Minel et al, 2001).670possible states (and there is a visual semantic asso-ciated to states), depending if it has been executed(bold font and ?*?
prefix) or not (normal font andno prefix), and if it exists a TU target (clickablemenu option) or not (non-clickable menu option).Figure 3.
Automatic summarization courses.These kinds of suggestions (i.e.
showing avail-able navigation operations for a TU) are made allover the reading process.
Consequently, alongher/his reading continuum, the reader is assisted bythe display of a specific set of signs, and there is norupture of cohesion because s/he is able to continu-ally see all the text (Battistelli and Minel, 2006).6 EvaluationsThere are few studies of adaptive navigation in hy-permedia systems and most of them are focused inmeasures such as the number of visited nodes orthe task completion time (H?
?k and Svensson,1999).
Are we interested in this kind of measures?Being NaviTexte a generic text navigation system,we think that what it has to be evaluated are thedifferent applications.
Each application requirespertinent measures.
For example, in NaviLire, thenumber of nodes or the time factor seems less use-ful that the comprehension of the text analyzed.So far, NaviLire has been put into practice on asmall scale only, viz.
in the teaching of Frenchtexts and text linguistics to Danish language stu-dents in the 4th year of Language and Communica-tion studies at the Copenhagen Business School.
Apilot experiment was carried out in order to evalu-ate the effects of using the program.The first results are based on forty answers, ofwhich 35 concern questions about the content ofthe text.
These results show that the navilistes(people using NaviLire) have a better comprehen-sion performance than the papiristes (people usingpaper and pencil) for 14 questions, an identical per-formance for 16 other questions, and a poorer per-formance for 5 questions (cf.
Table 1).#questions %Navilistes better than Papiristes 14 40Navilistes the same as Papiristes 16 45,7Navilistes worse than Papiristes 5 14,3Total 35 100Table 1.
Comparison of navilistes and papiristes(Lundquist et al, 2006)Evaluations of the alternative automatic summa-rization approach are ongoing.
Our main problemis that automatic summarization evaluations, wellknown as difficult to carry out, typically compareto summaries made by professional summarizers(Mani, 2001; Minel, 2003).
On the one hand, sincewe do not create a summary, we do not have anobject to compare.
On the other hand, since wehave modeled the professional heuristics, we can-not compare the behavior of our system to theirsbecause it is exactly what it has been modeled.7 Conclusions and future workWe have presented our approach to text navigationconceived as a cognitive process that exploits lin-guistic information present in texts.
We have de-fined it and explained the main differences with thehypertext navigation approach.
The four elementsneeded to implement our approach are described: atext representation, the navigation knowledge mod-eling language Sextant, the knowledge encodingagents (via applications) and the NaviTexte system.Two distinct applications of NaviTexte havebeen presented, showing the versatility of our ap-proach.
The quantitative results of our experimen-tation with Danish students learning French con-firm the improvement obtained by using text navi-gation.A long term consequence of modeling naviga-tional knowledge is the creation of knowledgebases exchangeable and reusable.
Actual collabora-tions are reusing the knowledge coming from theNaviLire project into others e-learning projects.We think that our approach may have a signifi-cant impact on the way text is being read when itsamount or nature does not allow sequential reading(e.g.
the Web).
Related to last works in Web Wise,we plan to couple our approach to Semantic Webapproaches to exploit existing annotations.671AcknowledgmentsNaviTexte is supported by a grant (U05H01) fromEcos-Sud Program.ReferencesBattistelli D. and Minel J.-L. 2006.
Les syst?mes der?sum?
automatique: comment assurer une continuit?r?f?rentielle dans la lecture des textes, in Sabah (Ed.
),Compr?hension des langues et interaction, 295-330.Battistelli D., Minel J-L and Schwer S. 2006, Repr?sen-tation des expressions calendaires dans les textes:vers une application ?
la lecture assist?e de biogra-phies.
Revue TAL, 47(3): 1-26.Benyon D. and Murray D. 1993.
Developing AdaptiveSystems to Fit Individual Aptitudes, In W.D.Gray,W.E., Helfley and D.Murray (eds.
), Proceedings ofthe 1993 International Workshop on IUI, 115-122.Orlando, FL., New York, ACM Press.Bilhaut F., Ho-Dac M., Borillo A., Charnois T., Enjal-bert P., Le Draoulec A., Mathet Y., Miguet H., Pery-Woodley M.P.
and Sarda L. 2003.
Indexation discur-sive pour la navigation.
intradocumentaire: cadrestemporels et spatiaux dans l?information g?ographi-que.
Actes de TALN 2003, 315-320.Bodner R. and Chignell M. 1999.
Dynamic hypertext:querying and linking, ACM Computing Surveys,31(4): 120-132.Boyle C. and Encarnacion A.
1994.
MetaDoc: An Adap-tive Hypertext Reading System, UMUAI, 4: 1-19.Brusilovsky P. 1996.
Methods and techniques of adap-tive hypermedia .
UMUAI, 6(2-3): 87-129.Brusilovsky P. and Pesin L. 1994.
ISIS-Tutor: An adap-tive hypertext learning environment.
In H.Ueono &V.Stefanuk (eds.
), Proceedings of JCKBSE?94.Brusilovsky P., Schwartz E. and Weber G. 1996.
ELM-ART: An Intelligent Tutoring System on World WideWeb, ITS?96, Berlin, Springer, 261-269.Couto J.
2006.
Mod?lisation des connaissances pour unenavigation textuelle assist?e.
La plate-forme logicielleNaviTexte.
PhD, Universit?
Paris-Sorbonne.Couto J., Lundquist L., Minel J.-L. 2005.
Naviguer pourapprendre.
EIAH 2005, Montpellier, 45-56.Couto J. and Minel J-L. 2006.
Navigation textuelle: Re-pr?sentation des textes et des connaissances, RevueTAL, 47(2): 1-24, Herm?s, Paris.Crispino G. and Couto J.
2004.
Construction automati-que de r?sum?s.
Une approche dynamique.
RevueTAL, 45(1): 95-120, Herm?s, Paris.Cunningham, H., Maynard, D., Bontcheva, K. and Tab-lan, V. 2002.
GATE: A Framework and GraphicalDevelopment Environment for Robust NLP Toolsand Applications, ACL?02, ACM Press, 168-175.Danielson D.R.
2002.
Web navigation and the be-havorial effects of constantly visible maps, Interact-ing with Computers, 14: 601-618.Edwards D.M.
and Hardman L. 1989.
Lost in hyper-space: cognitive mapping and navigation in a hyper-text environment, in Hypertext: Theory and Practice.Oxford, Intellect Books, 105-125.Endres-Niggemeyer B., Maier E. and Sigel A.
1995.How to implement a naturalistic model of abstracting:four core working steps of an expert abstractor, In-formation Processing et Management, 31(5): 631-674G?ry M. 2002.
Un mod?le d?hyperdocument en contextepour la recherche d?information structur?e sur leWeb.
Revue des Sciences et Technologies del?Information, 7/2002, Herm?s, Paris, 11-44.H?
?k K. and Svensson M. 1999.
Evaluating AdaptiveNavigation Support.
In: Social Navigation of Infor-mation Space.
Springer Verlag, 240-251.Kaplan C., Fenwick J. and Chen J.
1993.
Adaptive Hy-pertext Navigation Based On User Goals and Con-text, UMUAI, 3, 193-220.Lundquist L. 1980.
La coh?rence textuelle, syntaxe, s?-mantique, pragmatique, Copenhagen, Nordisk Forlag.Lundquist L. 2005.
Noms, verbes et anaphores(in)fid?les.
Pourquoi les Danois sont plus fid?les queles Fran?ais.
Langue fran?aise.
Vol 145: 73-92.Lundquist L., Minel J.L.
and Couto J.
2006.
NaviLire,Teaching French by Navigating in Texts,IPMU?2006, Paris.Mani I.
2001.
Automatic Summarization, Amsterdam,John Benjamins Publishing Company.Mathe N. and Chen J.
1994.
A User-Centered Approachto Adaptive Hypertext based on an Information Rele-vance Model, UM'94, Hyannis, MA, 107-114.Minel J.-L, Cartier E., Crispino G., Descl?s J.P., BenHazez S. and Jackiewicz A.
2001.
R?sum?
automati-que par filtrage s?mantique d?informations dans destextes, Pr?sentation de la plate-forme FilText.
Tech-nique et Science Informatiques, n?3: 369-396.Minel J-L. 2003.
Filtrage s?mantique.
Du r?sum?
?
lafouille de textes.
Paris, Herm?s.Minel, J-L., Nugier, S. and Piat, G. 1997.
How to appre-ciate the Quality of Automatic Text Summarization.EACL 97, Madrid, 25-30.672
