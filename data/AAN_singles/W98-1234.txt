IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIMethods and tricks used in an attempt o pass the Turing TestV.Bastin,  D .Cord ie rDepartment of Computer ScienceThe Flinders University of South AustraliaFacultes Universitaires Notre Dame de la Paix (Namur - Belgium){vbastin,dcordier}@info.fundp.ac.beAbstractThis paper describes differents methods and tricks inconnection with our program which has been entered inthe Loebner Prize competition that will happen onSunday 11 January 1998, at the PowerHouse Museumin Sydney.
Of course, this isn't exhaustive, there areother possible techniques but we aim to give the mainideas.
We'll speak about the main modules of ourprogram : Spelling correction, Different uses ofWordNet, and Generation of comments.
Our moduleused for spelling correction was developed on the basisof works by Brill \[1\], Brill and Marcus \[2\], Golding\[3\], Golding and Schabes \[4\], and Powers \[5\].1.
IntroductionAlan Turing was a brilliant British mathematician whoplayed an important role in the development ofcomputers and developed a test that would serve as anindicator of intelligence for machines.
A lot ofresearchers posed the Loebner Prize as the first formalinstantiation of the Turing Test.
To participate in thiscompetition, we conceived a program that attempts tosimulate the responses of a human being.We'l l  begin to describe WordNet, which includes aclassification of English words.
Afterwards, we'llpresent he architecture of our system which we areprogramming at the moment.
In this section, we'llbriefly explain every module.
Next, we'll give anexample of interaction between our program and onehuman.
In the same section, we'll show differentprocesses of generating a response from the input ofthe user.
Finally, we'll conclude by indicating our ownposition on this test, using knowledge that we haveacquired uring only two months of work in this area.2.
WordNetWordNet is an on-line lexical reference system whosedesign is inspired by current psycholinguistics theoriesof  human lexical memory.
Actually, WordNet containsabout 170,000 words, classified according to theirpart-of-speech (verbs, nouns, adjectives, adverbs).These sets are divided into semanticals categories (e.g.synonymous for nouns...).
WordNet is completelydescribed in the URLhtlp://www.speech.cs.emu.edu/comp.speech/Seetion 1Lexical/wordnet.html.3.
ArchitectureTo mimic some parts of human thought, we Createddifferent principal modules : Spelling Correction,Disambiguation between words, Generation ofcomments, Simulating human typing... T=?
l,, /3.1.
Spel l ing Correct ionFor spelling correction, we initially chose to create aprolog database, holding all words present inWordNet, indexed on every character, and reduce thesets of possible words at the time of typing.
I f  weobtain an empty set, we can use a parallel process tosearch for every possible word, and await the end oftyping to choose the most likely word using tri-grams.Another way is to build a database taking every wordand the most common typing errors of this word.
Todeterminate the most common errors, we can readtraining data from news, where many errors occur.
Ourlast idea is to try to build a database containing everyword from Wordnet.
For every word, we modifyBastin and Cordier 275 Methods and tricks for the Turing TestVeronique Bastin and Denis Cordier (1998) Methods and tricks used in an attempt o pass the Turing Test.
In D.M.W.Powers (ed.)
NeMLaP 3/Co NLL 98 Workshop on Human Computer Conversation, ACL, pp 275-277.
(change, delete, insert, transpose) one letter, and thenew strings are added to the database.
At the time oftyping, if a word is not recognized then programwould be able to find the most likely word in thecontext.3.2.
Disambiguation between wordsSome words can occur in place of others, for manyreasons.
Powers \[5\] distinguishes six different types ofreasons for substituted word errors.
A good programwould contain one module for every type of error.Wehaven't implemented the module of Disambiguationbetween words yet, but we'll try to do it for theLoebner Prize in January.33.
Generation of commentsTo try to generate comments in connection withcurrent conversation, we analyse sentences typed byuser, and try to find keywords.
We use these keywordsto determine an appropriate r sponse.
If we don't findkeywords, we try to find hyponyms of the words of thesentence using WordNet.
The best way would be todetermine the part-of-speech and search for hyponymsof the principal parts.
More over we would calculatedistances between different hyponyms using Resnik'smethod\[6\] and choose the closest one, selecting a newkeyword.
To try to keep a line of conversation, werandomly ask the speaker some questions, aboutsubjects present in our system.
If after all processes,we don't find keywords, we just redisplay the inputsentence, after having changed each pronom to itsopposite (e.g.
I went to town / You went to town?).3.4.
Simulating human typingNow, we stop the process which displays the commentfor a random number of milliseconds.
It would bebetter to use a parallel process to display a firstcomment (e.g.
I think...).
At the same time, a separateprocess manages access to databases needed(WordNet, TriGram...) to display the main commentsin a current conversation.
This system allows us tosimulate the human's peed of typing, but moreoverwe simulate human typing errors by using backspaceand delete keys.4.
Demonstration4.1.
Flow charti"ihput' : r'" II SKee~r~C'hords \[/founGeneCt ion~ c?mments I I\not foundWordNet, \]Trigrarn .... jI \found not found!I Generalcomment.
.
.
.
.
.
.
.
.
.
.
.
.
.
a4.2.
Example of interactionHello, I'm Elizabeth.
How are you?Fine thank you.Good, I'm happy about hat.Does your family live in Australia?Mmmm .
.
.
.I have a small family.
My family is in Europe.Why are you in Australia?I don't feel like speaking about hat.Have you a lot of friends?Yes, I have friends.Ok.What's your religion?I'm a Christian, but I don't like to speak aboutreligion.Are you going on holidays this year?M m J \ [ n .
?
.This year I 'm not going on holidays, because I 'mworking in Australia.
Generally, when I'm onholidays, I do nothing because I like sleep.Where did you go on holidays last year?Nowhere, 1had no time.No problem.Would you like to come on holidays with me?I'm so flattered.Do you know Spanish?Bastin and Cordier 276 Methods and tricks for the Turing Test11IIIIIlIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII just know French but in this test, we must speakEnglish.Bye.Bye.Nice to meet you.5.
ConclusionTo indicate our position in relation to the LoebnerPrize, we think that this competition only answers apart of Turing's initial question, which is "Canmachines think like a human?"
and not "Can machinesthink?"
(Turing).We object to the fact that each judge has only alimited time to converse With each subject.
This maynot allow the judge to decide without hesitation if it'sa machine or not.
On the other hand for thiscompetition, a cross-section of the community will bepresent.
Our program needs luck to be able to conversewith a speaker in a satisfying way.
If  a judge uses thepre-defined subjects in our system, the conversationwill be coherent.
However, we need to include a largenumber of pre-defined subjects.
We also need toinclude systems of spelling correction which performwell, to try to retrieve keywords from words withspelling errors for instance.
In fact we have only beenworking in this area for two months, we don't thinkthat anyone could develop an intelligent machine soquickly.
The future will tell.
We can only wait andsee .
.
.6.
ReferencesBrill, E. A simple ruled-based part of speech tagger.BriU, E, & Marcus, M..
Automatically acquiringphrase structure using distributional nalysis.Gelding, A.R.
(1995) A baysian hybride method forcontext-sensitive spelling correction MitsubishiElectric lnforrnation Technology Center America.Gelding, A.R.
& Schabes, Y.
(1996).
Combiningtrigram-based and feature-based methods forcontext-sensitive spelling correction.Powers, D.M.W.
(1997) Learning and application ofdifferential grammars.Resnik, P. (1995) Disambiguating nouns groupingswith respect to WordNet senses.Bastin and Cordier 277 Methods and tricks for the Turing Test/IIIImIIB|III|IImmIIIImIIIIIIm
