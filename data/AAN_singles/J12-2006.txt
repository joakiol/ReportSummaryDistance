Use of Modality and Negation inSemantically-Informed Syntactic MTKathryn Baker?U.S.
Department of DefenseMichael Bloodgood?
?University of MarylandBonnie J. Dorr?University of MarylandChris Callison-Burch?Johns Hopkins UniversityNathaniel W. Filardo?Johns Hopkins UniversityChristine Piatko?Johns Hopkins UniversityLori Levin||Carnegie Mellon UniversityScott Miller#BBN Technologies?
U.S. Department of Defense, 9800 Savage Rd., Suite 6811, Fort Meade, MD 20755.E-mail: kathrynlb@gmail.com.??
Center for Advanced Study of Language, University of Maryland, 7005 52nd Avenue, College Park, MD20742.
E-mail: meb@umd.edu.?
Department of Computer Science and UMIACS, University of Maryland, AV Williams Building 3153,College Park, MD 20742.
E-mail: bonnie@umiacs.umd.edu.?
Center for Language and Speech Processing, Johns Hopkins University, 3400 N. Charles Street,Hackerman Hall 320, Baltimore MD 21218.
E-mail: {ccb,nwf}@cs.jhu.edu.?
Applied Physics Laboratory, Johns Hopkins University, 11000 Johns Hopkins Rd., Laurel, MD 20723.E-mail: christine.piatko@jhuapl.edu.|| Carnegie Technologies Institute, Carnegie Mellon University, Pittsburgh, PA 15213.E-mail: lsl@cs.cmu.edu.# BNN Technologies, 10 Moulton Street, Cambridge, MA 02138.
E-mail: smiller@bbn.com.Submission received: 27 March 2011; revised submission received: 28 September 2011; accepted forpublication: 30 November 2011.?
2012 Association for Computational LinguisticsComputational Linguistics Volume 38, Number 2This article describes the resource- and system-building efforts of an 8-week Johns HopkinsUniversity Human Language Technology Center of Excellence Summer Camp for Applied Lan-guage Exploration (SCALE-2009) on Semantically Informed Machine Translation (SIMT).
Wedescribe a new modality/negation (MN) annotation scheme, the creation of a (publicly available)MN lexicon, and two automated MN taggers that we built using the annotation scheme andlexicon.
Our annotation scheme isolates three components of modality and negation: a trigger(a word that conveys modality or negation), a target (an action associated with modality ornegation), and a holder (an experiencer of modality).
We describe how our MN lexicon wassemi-automatically produced and we demonstrate that a structure-based MN tagger results inprecision around 86% (depending on genre) for tagging of a standard LDC data set.We apply our MN annotation scheme to statistical machine translation using a syntacticframework that supports the inclusion of semantic annotations.
Syntactic tags enriched withsemantic annotations are assigned to parse trees in the target-language training texts througha process of tree grafting.
Although the focus of our work is modality and negation, the treegrafting procedure is general and supports other types of semantic information.
We exploit thiscapability by including named entities, produced by a pre-existing tagger, in addition to the MNelements produced by the taggers described here.
The resulting system significantly outperformeda linguistically naive baseline model (Hiero), and reached the highest scores yet reported on theNIST 2009 Urdu?English test set.
This finding supports the hypothesis that both syntactic andsemantic information can improve translation quality.1.
IntroductionThis article describes the resource- and system-building efforts of an 8-week JohnsHopkins Human Language Technology Center of Excellence Summer Camp for Ap-plied Language Exploration (SCALE-2009) on Semantically InformedMachine Translation(SIMT) (Baker et al 2010a, 2010b, 2010c, 2010d).
Specifically, we describe our modal-ity/negation (MN) annotation scheme, a (publicly available) MN lexicon, and twoautomated MN taggers that were built using the lexicon and annotation scheme.Our annotation scheme isolates three components of modality and negation: atrigger (a word that conveys modality or negation), a target (an action associated withmodality or negation), and a holder (an experiencer of modality).
Two examples of MNtagging are shown in Figure 1.Note that modality and negation are unified into single MN tags (e.g., the ?Able?modality tag is combined with ?NOT?
to form the ?NOTAble?
tag) and also thatFigure 1Modality/negation tagging examples.412Baker et al Modality and Negation in SIMTMN tags occur in pairs of triggers (e.g., TrigAble and TrigNegation) and targets (e.g.,TargNOTAble).We apply our modality and negation mechanism to the problem of Urdu?Englishmachine translation using a technique that we call tree grafting.
This technique incorpo-rates syntactic labels and semantic annotations in a unified and coherent framework forimplementing semantically informed machine translation.
Our framework is not lim-ited to the semantic annotations produced by the MN taggers that are the subject of thisarticle and we exploit this capability to additionally include named-entity annotationsproduced by a pre-existing tagger.
By augmenting hierarchical phrase-based translationrules with syntactic labels that were extracted from a parsed parallel corpus, and furtheraugmenting the parse trees with markers for modality, negation, and entities (throughthe tree grafting process), we produced a better model for translating Urdu and English.The resulting system significantly outperformed the linguistically naive baseline Hieromodel, and reached the highest scores yet reported on the NIST 2009 Urdu?Englishtranslation task.We note that although our largest gains were from syntactic enrichments to themodel, smaller (but significant) gains were achieved by injecting semantic knowledgeinto the syntactic paradigm.
Verbal semantics (modality and negation) contributedslightly more gains than nominal semantics (named entities) and their combined gainswere the sum of their individual contributions.Of course, the limited semantic types we explored (modality, negation, and en-tities) are only a small piece of the much larger semantic space, but demonstratingsuccess on these semantic aspects of language, the combination of which has beenunexplored by the statistical machine translation community, bodes well for (larger)improvements based on the incorporation of other semantic aspects (e.g., relations andtemporal knowledge).
Moreover, we believe this syntactic framework to be well suitedfor further exploration of the impact of many different types of semantics on the qualityof machine-translation (MT) output.
Indeed, it would not have been possible to initiatethe current study without the foundational work that gave rise to a syntactic paradigmthat could support these semantic enrichments.In the SIMT paradigm, semantic elements (e.g., modality/negation) are identifiedin the English portion of a parallel training corpus and projected to the source language(in our case, Urdu) during a process of syntactic alignment.
These semantic elements aresubsequently used in the translation rules that are extracted from the parallel corpus.The goal of adding them to the translation rules is to constrain the space of possibletranslations to more grammatical and more semantically coherent output.
We exploredwhether including such semantic elements could improve translation output in the faceof sparse training data and few source language annotations.
Results were encouraging.Translation quality, as measured by the Bleu metric (Papineni et al 2002), improvedwhen the training process for the Joshua machine translation system (Li et al 2009)used in the SCALE workshop included MN annotation.We were particularly interested in identifying modalities and negation becausethey can be used to characterize events in a variety of automated analytic processes.Modalities and negation can distinguish realized events from unrealized events, beliefsfrom certainties, and can distinguish positive and negative instances of entities andevents.
For example, the correct identification and retention of negation in a particularlanguage?such as a single instance of the word ?not?
?is very important for a correctrepresentation of events and likewise for translation.The next two sections examine related work and the motivation behind the SIMTapproach.
Section 4 defines the theoretical framework for ourMN lexicon and automatic413Computational Linguistics Volume 38, Number 2MN taggers.
Section 5 presents the MN annotation scheme used by our human annota-tors and describes the creation of a MN lexicon based on this scheme.
Section 6 presentstwo types of MN taggers?one that is string-based and one that is structure-based?and evaluates the effectiveness of the structure-based tagger.
Section 7 then presentsimplementation details of the semantically informed syntactic system and describesthe results of its application.
Finally, Section 8 presents conclusions and future work.2.
Related WorkThe development of annotation schemes has become an area of computational lin-guistics development in its own right, often separate from machine learning applica-tions.
Many projects began as strictly linguistic projects that were later adapted forcomputational linguistics.
When an annotation scheme is consistent and well devel-oped, its subsequent application to NLP systems is most effective.
For example, thesyntactic annotation of parse trees in the Penn Treebank (Marcus, Marcinkiewicz, andSantorini 1993) had a tremendous effect on parsing and onNatural Language Processingin general.In the case of semantic annotations, each tends to have its unique area of focus.Although the labeling conventions may differ, a layer of modality annotation oververb role annotation, for example, can have a complementary effect of providing moreinformation, rather than being viewed as a competing scheme.
We review some of themajor semantic annotation efforts here.Propbank (Palmer, Gildea, and Kingsbury 2005) is a set of annotations of predicate?argument structure over parse trees.
First annotated as an overlay to the PennTreebank, Propbank annotation now exists for other corpora.
Propbank annotation aimsto answer the question Who did what to whom?
for individual predicates.
It is tightlycoupled with the behavior of individual verbs.
FrameNet (Baker, Fillmore, and Lowe1998), a frame-based lexical database that associates each word in the database witha semantic frame and semantic roles, is also associated with annotations at the lexicallevel.WordNet (Fellbaum 1998) is a verywidely used online lexical taxonomywhich hasbeen developed in numerous languages.WordNet nouns, verbs, adjectives, and adverbsare organized into synonym sets.
PropBank, FrameNet, and WordNet cover the wordsenses and argument-taking properties of many modal predicates.The Prague Dependency Treebank (Hajic?
et al 2001; Bo?hmova?, Cinkova?, andHajic?ova?
2005) (PDT) is a multi-level system of annotation for texts in Czech and otherlanguages, with its roots in the Prague school of linguistics.
Besides a morphologicallayer and an analytical layer, there is a Tectogrammatical layer.
The Tectogrammaticallayer includes functional relationships, dependency relations, and co-reference.
ThePDT also integrates propositional and extra-propositional meanings in a single anno-tation framework.The Penn Discourse Treebank (PDTB) (Webber et al 2003; Prasad et al 2008)annotates discourse connectives and their arguments over a portion of the PennTreebank.
Within this framework, senses are annotated for the discourse connectivesin a hierarchical scheme.
Relevant to the current work, one type of tag in the scheme isthe Conditional tag, which includes hypothetical, general, unreal present, unreal past,factual present, and factual past arguments.The PDTB work is related to that of Wiebe, Wilson, and Cardie (2005) for estab-lishing the importance of attributing a belief or assertion expressed in text to its agent(equivalent to the notion of holder in our scheme).
The annotation scheme is designed tocapture the expression of opinions and emotions.
In the PDTB, each discourse relation414Baker et al Modality and Negation in SIMTand its two arguments are annotated for attribution.
The attribute features are theSource or agent, the Type (assertion propositions, belief propositions, facts, and eventu-alities), scopal polarity, and determinacy.
Scopal polarity is annotated on relations andtheir arguments to identify cases when verbs of attribution are negated on the surfacebut the negation takes scope over the embedded clause.
An example is the sentence?Having the dividend increases is a supportive element in the market outlook but I don?tthink it?s a main consideration.?
Here, the second argument (the clause following but) isannotated with a ?Neg?
marker, meaning ?I think it?s not a main consideration.
?Wilson, Wiebe, and Hoffman (2009) describe the importance of correctly inter-preting polarity in the context of sentiment analysis, which is the task of identifyingpositive and negative opinions, emotions, and evaluations.
The authors have estab-lished a set of features to distinguish between positive and negative polarity and discussthe importance of correctly analyzing the scope of the negation and the modality (e.g.,whether the proposition is asserted to be real or not real).A major annotation effort for temporal and event expressions is the TimeML spec-ification language, which has been developed in the context of reasoning for questionanswering (Saur?
?, Verhagen, and Pustejovsky 2006).
TimeML, which includes modalityannotation on events, is the basis for creating the TimeBank and FactBank corpora(Pustejovsky et al 2006; Saur??
and Pustejovsky 2009).
In FactBank, event mentions aremarked with their degree of factuality.Recent work incorporating modality annotation includes work on detecting cer-tainty and uncertainty.
Rubin (2007) describes a scheme for five levels of certainty,referred to as Epistemic modality, in news texts.
Annotators identify explicit certaintymarkers and also take into account Perspective, Focus, and Time.
Focus separatescertainty into facts and opinions, to include attitudes.
In our scheme, Focus would becovered by want and belief modality.
Also, separating focus and uncertainty can allowthe annotation of both on one trigger word.
Prabhakaran, Rambow, and Diab (2010)describe a scheme for automatic committed belief tagging.
Committed belief indicatesthe writer believes the proposition.
The authors use a previously annotated corpus ofcommitted belief, non-committed belief, and not applicable (Diab et al 2009), and derivefeatures for machine learning from parse trees.
The authors desire to combine theirwork with FactBank annotation.The CoNLL-2010 shared task (Farkas et al 2010) was about the detection of cuesfor uncertainty and their scope.
The task was described as ?hedge detection,?
that is,finding statements which do not or cannot be backed up with facts.
Auxiliary verbssuch as may, might, can, and so forth, are one type of hedge cue.
The training data forthe shared task included the BioScope corpus (Szarvas et al 2008), which is manuallyannotated with negation and speculation cues and their scope, and paragraphs fromWikipedia possibly containing hedge information.
Our scheme also identifies cues inthe form of triggers, but our desired outcome is to cover the full range of modalitiesand not just certainty and uncertainty.
To identify scope, we use syntactic parse trees,as was allowed in the CoNLL task.The textual entailment literature includes modality annotation schemes.
Identifyingmodalities is important to determine whether a text entails a hypothesis.
Bar-Haim et al(2007) include polarity based rules and negation and modality annotation rules.
Thepolarity rules are based on an independent polarity lexicon (Nairn, Condorovdi, andKarttunen 2006).
The annotation rules for negation andmodality of predicates are basedon identifying modal verbs, as well as conditional sentences and modal adverbials.The authors read the modality off parse trees directly using simple structural rules formodifiers.415Computational Linguistics Volume 38, Number 2Earlier work describing the difficulty of correctly translating modality using ma-chine translation includes Sigurd and Gawro?nska (1994) andMurata et al (2005).
Sigurdand Gawro?nska (1994) write about rule based frameworks and how using alternategrammatical constructions such as the passive can improve the rendering of the modalin the target language.
Murata et al (2005) analyze the translation of Japanese intoEnglish by several systems, showing they often render the present incorrectly as theprogressive.
The authors trained a support vector machine to specifically handle modalconstructions, whereas our modal annotation approach is a part of a full translationsystem.We now consider other literature, relating to tree-grafting and machine translation.Our tree-grafting approach builds on a technique used for tree augmentation in Milleret al (2000), where parse-tree nodes are augmented with semantic categories.
In thatearlier work, tree nodes were augmented with relations, whereas we augmented treenodes with modality and negation.
The parser is subsequently retrained for bothsemantic and syntactic processing.
The semantic annotations were done manually bystudents who were provided a set of guidelines and then merged with the syntactictrees automatically.
In our work we tagged our corpus with entities, modality, andnegation automatically and then grafted them onto the syntactic trees automatically,for the purpose of training a statistical machine translation system.
An added benefit ofthe extracted translation rules is that they are capable of producing semantically taggedUrdu parses, despite the fact that the training data were processed by only an Englishparser and tagger.Related work in syntax-based MT includes that of Huang and Knight (2006), wherea series of syntax rules are applied to a source language string to produce a targetlanguage phrase structure tree.
The Penn English Treebank (Marcus, Marcinkiewicz,and Santorini 1993) is used as the source for the syntactic labels and syntax trees arerelabeled to improve translation quality.
In this work, node-internal and node-externalinformation is used to relabel nodes, similar to earlier work where structural contextwas used to relabel nodes in the parsing domain (Klein and Manning 2003).
Kleinand Manning?s methods include lexicalizing determiners and percent markers, makingmore fine-grained verb phrase (VP) categories, and marking the properties of sisternodes on nodes.
All of these labels are derivable from the trees themselves and notfrom an auxiliary source.
Wang et al (2010) use this type of node splitting in machinetranslation and report a small increase in BLEU score.We use the methods described in Zollmann and Venugopal (2006) and Venugopal,Zollmann, and Vogel (2007) to induce synchronous grammar rules, a process whichrequires phrase alignments and syntactic parse trees.
Venugopal, Zollmann, and Vogel(2007) use generic non-terminal category symbols, as in Chiang (2005), as well as gram-matical categories from the Stanford parser (Klein and Manning 2003).
Their methodfor rule induction generalizes to any set of non-terminals.
We further refine this processby adding semantic notations onto the syntactic non-terminals produced by a PennTreebank trained parser, thus making the categories more informative.In the parsing domain, the work of Petrov and Klein (2007) is related to the currentwork.
In their work, rule splitting and rule merging are applied to refine parse treesduring machine learning.
Hierarchical splitting leads to the creation of learned cate-gories that have linguistic relevance, such as a breakdown of a determiner category intotwo subcategories of determiners by number, that is, this and that group together as dosome and these.
We augment parse trees by category insertion in cases where a semanticcategory is inserted as a node in a parse tree, after the English side of the corpus hasbeen parsed by a statistical parser.416Baker et al Modality and Negation in SIMT3.
SIMTMotivationAs in many of the frameworks described herein, the aim of the SIMT effort was toprovide a generalized framework for representing structured semantic information,such as modality and negation.
Unlike many of the previous semantic annotation efforts(where the emphasis tends to be on English), however, our approach is designed tobe directly integrated into a translation engine, with the goal of translating highlydivergent language pairs, such as Urdu and English.
As such, our choice of annotationscheme?illustrated in the trigger-target example shown in Figure 1?was based on asimplified structural representation that is general enough to accommodate divergentmodality/negation phenomena, easy for language experts to follow, and straightfor-ward to integrate into a tree-grafting mechanism for MT.
Our objective is to investigatewhether incorporating this sort of information into machine translation systems couldproduce better translations, particularly in settings where only small parallel corporaare available.It is informative to look at an example translation to understand the challenges oftranslating important semantic elements when working with a low-resource languagepair.
Figure 2 shows an example taken from the 2008 NIST Urdu?English translationtask, and illustrates the translation quality of a state-of-the-art Urdu?English system(prior to the SIMT effort).
The small amount of training data for this language pair (seeFigure 2An example of Urdu?English translation.
Shown are an Urdu source document, a referencetranslation produced by a professional human translator, and MT output from a phrase-basedmodel (Moses) without linguistic information, which is representative of state-of-the-art MTquality before the SIMT effort.417Computational Linguistics Volume 38, Number 2Table 1The size of the various data sets used for the experiments in this article including the training,development (dev), incremental test set (devtest), and blind test set (test).
The dev/devtest was asplit of the NIST08 Urdu?English test set, and the blind test set was NIST09.Urdu Englishset lines tokens types tokens typestraining 202k 1.7M 56k 1.7M 51kdev 981 21k 4k 19k 4kdevtest 883 22k 4k 19?20k 4ktest 1,792 42k 6k 38?41k 5kTable 1) results in significantly degraded translation quality compared, for example, toan Arabic?English system that has more than 100 times the amount of training data.The output in Figure 2 was produced using Moses (Koehn et al 2007), a state-of-the-art phrase-based MT system that by default does not incorporate any linguisticinformation (e.g., syntax or morphology or transliteration knowledge).
As a result,words that were not directly observed in the bilingual training data were untranslatable.Names, in particular, are problematic.
For example, the lack of translation for Nagalandand Nagas induces multiple omissions throughout the translated text, thus producingseveral instances where the holder of a claim (or belief ) is missing.
This is because out-of-vocabulary words are deleted from the Moses output.We use syntactic and semantic tags as higher-order symbols inside the translationrules used by the translation models.
Generic symbols in translation rules (i.e., thenon-terminal symbol ?X?)
were replaced with structured information at multiple levelsof abstraction, using a tree-grafting approach that we describe subsequently.
Figure 3Figure 3The evolution of a semantically informed approach to our synchronous context-free grammars.At the start of the 8 weeks the decoder used translation rules with a single generic non-terminalsymbol.
Later syntactic categories were used, and by the end of the workshop the translationrules included semantic elements such as modalities and negation, as well as named entities.418Baker et al Modality and Negation in SIMTillustrates the evolution of the translation rules that we used, first replacing ?X?
withgrammatical categories and then with categories corresponding to semantic units.The semantic units that we examined in this effort weremodalities and negation (in-dications that a statement represents something that has/hasn?t taken place or is/isn?ta belief or an intention) and named entities (such as people or organizations).
Othersemantic units, such as relations between entities and events, were not part of this effortbut we believe they could be similarly incorporated into the framework.
We chose toexamine semantic units that canonically exhibit two different syntactic types: verbal, inthe case of modality and negation, and nominal, in the case of named entities.Although used in this effort, named entities were not the focus of our researchefforts in SIMT.
Rather, we focused on the development of an annotation schemefor modality and negation and its use in MT, while relying on a pre-existing hiddenMarkov model (HMM)-based tagger derived from Identifinder (Bikel, Schwartz, andWeischedel 1999) to produce entity tags.
Thus, the remainder of this article will focuson our MN annotation scheme, two MN taggers produced by the effort, and on theintegration of semantics in the SIMT paradigm.4.
Modality and NegationModality is an extra-propositional component of meaning.
In John may go to NY, thebasic proposition is John go to NY and the word may indicates modality and is called thetrigger in our work.
van der Auwera and Amman (2005) define core cases of modality:John must go to NY (epistemic necessity), John might go to NY (epistemic possibility),John has to leave NY now (deontic necessity), and John may leave NY now (deontic pos-sibility).
Larreya (2009) defines the core cases slightly differently as root and epistemic.Root modality in Larreya?s taxonomy includes physical modality (He had to stop.
Theroad was blocked) and deontic modality (You have to stop).
Epistemic modality includesproblematic modality (You must be tired) and implicative modality (You have to be mad todo that).
Many semanticists (Kratzer 1991, von Fintel and Iatridou 2006) define modalityas quantification over possible worlds.
John might leave NY means that there exist somepossible worlds in which John leaves NY.
Another view of modality relates more to aspeaker?s attitude toward a proposition (McShane, Nirenburg, and Zacharski).We incorporate negation as an inextricably intertwined component of modality,using the term ?modality/negation (MN)?
to refer to our resources (lexicons) andprocesses (taggers).
We adopt the view that modality includes several types of attitudesthat a speaker might have (or not have) toward an event or state.
From the point ofview of the reader or listener, modality might indicate factivity, evidentiality, or senti-ment.
Factivity is related to whether an event, state, or proposition happened or didn?thappen.
It distinguishes things that happened from things that are desired, planned,or probable.
Evidentiality deals with the source of information and may provide cluesto the reliability of the information.
Did the speaker have first-hand knowledge ofwhat he or she is reporting, or was it hearsay or inferred from indirect evidence?Sentiment deals with a speaker?s positive or negative feelings toward an event, state,or proposition.Our project was limited to modal words and phrases?and their negations?thatare related to factivity.
Beyond the core cases of modality, however, we include someaspects of speaker attitude such as intent and desire.
We included these because theyare often not separable from the core cases of modality.
For example, He had to go mayinclude the ideas that someone wanted him to go, that he might not have wanted to go,419Computational Linguistics Volume 38, Number 2that at some point after coercion he intended to go, and that at some point he was ableto go (Larreya 2009).Our focus was on the eight modalities in Figure 4, where P is a proposition (thetarget of the triggering modality) and H is the holder (experiencer or cognizer of themodality).
Some of the eight factivity-related modalities may overlap with sentimentor evidentiality.
For example, want indicates that the proposition it scopes over maynot be a fact (it may just be desired), but it also expresses positive sentiment towardthe proposition it scopes over.
We assume that sentiment and evidentiality are coveredunder separate coding schemes, and that words like want would have two tags, one forsentiment and one for factivity.5.
The Modality/Negation Annotation SchemeThe challenge of creating an MN annotation scheme was to deal with the complexscoping ofmodalities with each other andwith negation, while at the same time creatinga simplified operational procedure that could be followed by language experts withoutspecial training.
Here we describe our MN annotation framework, including a setof linguistic simplifications, and then we present our methodology for creation of apublicly available MN lexicon.
The modality annotation scheme is fully documented ina set of guidelines that were written with English example sentences (Baker et al 2010c).The guidelines can be used to derive hand-tagged evaluation data for English and theyalso include a section that contains a set of Urdu trigger-word examples.During the SCALE workshop, some Urdu speakers used the guidelines to annotatea small corpus of Urdu by hand, which we reserved for future work.
The Urdu corpuscould be useful as an evaluation corpus for automatically tagged Urdu, such as onederived from rule projection in the Urdu?English MT system, a method we describefurther in Section 7.
Also, although we did not annotate a very large Urdu corpus, moredata could be manually annotated to train an automatic Urdu tagger in the future.5.1 Anatomy of Modality/Negation in SentencesIn sentences that express modality, we identify three components: a trigger, a target, anda holder.
The trigger is the word or string of words that expresses modality or negation.The target is the event, state, or relation over which the modality scopes.
The holder isFigure 4Eight modalities used for tagging.
H = the holder of the modality; P = the proposition overwhich the modality has scope.420Baker et al Modality and Negation in SIMTthe experiencer or cognizer of themodality.
The trigger can be a word such as should, try,able, likely, or want.
It can also be a negative element such as not or n?t.
Often, modalityor negation is expressed without a lexical trigger.
For a typical declarative sentence(e.g., John went to NY), the default modality is strong belief when no lexical trigger ispresent.
Modality can also be expressed constructionally.
For example, Requirement canbe expressed in Urdu with a dative subject and infinitive verb followed by a verb thatmeans to happen or befall.5.2 Linguistic Simplifications for Efficient OperationalizationSix linguistic simplifications were made for the sake of efficient operationalization ofthe annotation task.
The first linguistic simplification deals with the scope of modalityand negation.
The first given sentence indicates scope of modality over negation.
Thesecond sentence indicates scope of negation over modality: He tried not to criticize the president. He didn?t try to criticize the president.The interaction of modality with negation is complex, but was operationalized eas-ily in the menu of 13 choices shown in Figure 5.
First consider the case where negationscopes over modality.
Four of the 13 choices are composites of negation scoping overmodality.
For example, the annotators can choose try or not try as two separate modali-ties.
Five modalities (Require, Permit, Want, Firmly Believe, and Believe) do not have anegated form.
For three of these modalities (Want, Firmly Believe, and Believe), this isbecause they are often transparent to negation.
For example, I do not believe that he left NYsometimes means the same as I believe he didn?t leave NY.
Merging the two is obviouslya simplification, but it saves the annotators from having to make a difficult decision.Figure 5Thirteen menu choices for Modality/Negation annotation.
H = the holder of the modality;P = the proposition over which the modality has scope.421Computational Linguistics Volume 38, Number 2The second linguistic simplification is related to a duality in meaning betweenrequire and permit.
Not requiring P to be true is similar in meaning to permitting P tobe false.
Thus, annotators were instructed to label not require P to be true as Permit P to befalse.
Conversely, not Permit P to be truewas labeled as Require P to be false.After the annotator chooses the modality, the scoping of modality over negationtakes place as a second decision.
For example, for the sentence John tried not to go to NY,the annotator first identifies go as the target of a modality and then chooses try as themodality.
Finally, the annotator chooses false as the polarity of the target.The third simplification relates to entailments between modalities.
Many wordshave complex meanings that include components of more than one modality.
For ex-ample, if one managed to do something, one tried to do it and one probably wanted todo it.
Thus, annotators were provided a specificity-ordered modality list as in Figure 5,andwere asked to choose the first applicable modality.
We note that this list correspondsto two independent ?entailment groupings,?
ordered by specificity: {requires ?
permits} {succeeds ?
tries ?
intends ?
is able ?
wants}Inside the entailment groupings, the ordering corresponds to an entailment relation:For example, succeeds can only occur if tries has occurred.
Also, the {requires ?
.
.
.
}entailment grouping is taken to be more specific than (ordered before) the {succeeds ?.
.
. }
entailment grouping.
Moreover, both entailment groupings are taken to be morespecific than believes, which is not in an entailment relation with any of the othermodalities.The fourth simplification, already mentioned, is that sentences without an overttrigger word are tagged as firmly believes.
This heuristic works reasonably well for thetypes of documents we were working with, although one could imagine genres suchas fiction in which many sentences take place in an alternate possible world (imagined,conditional, or counterfactual) without explicit marking.The fifth linguistic simplification is that we did not require annotators to marknested modalities.
For a sentence like He might be able to go to NY the target word gois marked as ability, but might is not annotated for Belief modality.
This decision wasbased on time limits on the annotation task; there was not enough time for annotatorsto deal with syntactic scoping of modalities over other modalities.Finally, we did not mark the holder H because of the short time frame for workshoppreparation.
We felt that identifying the triggers and targets would be most beneficialin the context of machine translation.5.3 The English Modality/Negation LexiconUsing the given framework, we created an MN lexicon that was incorporated into anMN tagging scheme to be described in Section 6.
Entries in the MN lexicon consist of:(1) A string of one or more words: for example, should or have need of .
(2) A part ofspeech for each word: The part of speech helps us avoid irrelevant homophones such asthe noun can.
(3) An MN designator: one of the 13 modality/negation cases describedpreviously.
(4) A head word (or trigger): the primary phrasal constituent to covercases where an entry is a multi-word unit (e.g., the word hope in hope for).
(5) One ormore subcategorization codes derived from the Longman Dictionary of ContemporaryEnglish (LDOCE).422Baker et al Modality and Negation in SIMTWe produced the full English MN lexicon semi-automatically.
First, we gathered asmall seed list of MN trigger words and phrases from our modality annotation manual(Baker et al 2010c).
Then, we expanded this small list of MN trigger words by runningan on-line search for each of the words, specifically targeting free on-line thesauri (e.g.,thesaurus.com), to find both synonymous and antonymous words.
From these wemanually selected the words we thought triggered modality (or their correspondingnegative variants) and filtered out words that we thought didn?t trigger modality.
Theresulting list of MN trigger words and phrases contained about 150 lemmas.We note that most intransitive (LDOCE) codes were not applicable to modality/negation constructions.
For example, hunger (in the Want modality class) has a modalreading of ?desire?
when combined with the preposition for (as in she hungered for apromotion), but we do not consider it to be modal when it is used in the somewhatarchaic sentence He hungered, meaning that he did not have enough to eat.
Thus theLDOCE code I associated with the verb hungerwas hand-changed to I-FOR.
There were43 such cases.
Once the LDOCE codes were hand-verified (and modified accordingly),the mapping to subcategorization codes was applied.The MN lexicon is publicly available at http://www.umiacs.umd.edu/?bonnie/ModalityLexicon.txt.
An example of an entry is given in Figure 6, for the verb need.6.
Automatic Modality/Negation AnnotationAn MN tagger produces text or structured text in which modality or negation triggersand/or targets are identified.
Automatic identification of the holders of modalities wasbeyond the scope of our project because the holder is often not explicitly stated in thesentence in which the trigger and target occur.
This section describes two types of MNtaggers?one that is string-based and one that is structure-based.6.1 The String-Based English Modality/Negation TaggerThe string-based tagger operates on text that has been tagged with parts of speechby a Collins-style statistical parser (Miller et al 1998).
The tagger marks spans ofwords/phrases that exactly match MN trigger words in the MN lexicon describedpreviously, and that exactly match the same parts of speech.
This tagger identifies thetarget of each modality/negation using the heuristic of tagging the next non-auxiliaryverb to the right of the trigger.
Spans of words can be tagged multiple times withdifferent types of triggers and targets.Figure 6Modality lexicon entry for need.423Computational Linguistics Volume 38, Number 2We found the string-based MN tagger to produce output that matched about 80%of the sentence-level tags produced by our structure-based tagger, the results of whichare described next.
Although string-based tagging is fast and reasonably accurate inpractice, we opted to focus on the indepth analysis of modality/negation of our SIMTresults using the more accurate structure-based tagger.6.2 The Structure-Based English Modality/Negation TaggerThe structure-based MN tagger operates on text that has been parsed (Miller et al1998).
We used a version of the parser that produces flattened trees.
In particular, theflattener deletes VP nodes that are immediately dominated by VP or S and noun phrase(NP) nodes that are immediately dominated by PP or NP.
The parsed sentences areprocessed by TSurgeon rules.
Each TSurgeon rule consists of a pattern and an action.The pattern matches part of a parse tree and the action alters the parse tree.
Morespecifically, the pattern finds an MN trigger word and its target and the action insertstags such as TrigRequire and TargRequire for triggers and targets for the modalityRequire.
Figure 7 shows output from the structure-based MN tagger.
(Note that thesentence is disfluent: Pakistan which could not reach semi-final, in a match against SouthAfrican team for the fifth position Pakistan defeated South Africa by 41 runs.)
The exampleshows that could is a trigger for the Ability modality and not is a trigger for negation.Reach is a target for both Ability and Negation, which means that it is in the category of?H is not able [to make P true/false]?
in our coding scheme.
Reach is also a trigger forthe Succeed modality and semi-final is its target.The TSurgeon patterns are automatically generated from the verb class codes inthe MN lexicon along with a set of 15 templates.
Each template covers one situationsuch as the following: the target is the subject of the trigger; the target is the directobject of the trigger; the target heads an infinitival complement of the trigger; the targetis a noun modified by an adjectival trigger, and so on.
The verb class codes indicateFigure 7Sample output from the structure-based MN tagger.424Baker et al Modality and Negation in SIMTwhich templates are applicable for each trigger word.
For example, a trigger verb in thetransitive class may use two target templates, one in which the trigger is in active voiceand the target is a direct object (need tents) and one in which the trigger is in passivevoice and the target is a subject (tents are needed).In developing the TSurgeon rules, we first conducted a corpus analysis for 40 of themost common trigger words in order to identify and debug the most broadly applicabletemplates.
We then used LDOCE to assign verb classes to the remaining verbal triggersin the MN lexicon, and we associated one or more debugged templates with each verbclass.
In this way, the initial corpus work on a limited number of trigger words wasgeneralized to a longer list of trigger words.
Because the TSurgeon patterns are tailoredto the flattened structures produced by our parser, it is not easily ported to new parseroutputs.
The MN lexicon itself is portable, however.
Switching parsers would entailwriting new TSurgeon templates, but the trigger words in the MN lexicon would stillbe automatically assigned to templates based on their verb classes.The following example shows an example of a TSurgeon pattern?action pair for asentence like They were required to provide tents.
The pattern?action pair is intended tobe used after a pre-processing stage in which labels such as ?VoicePassive?
and ?AUX?have been assigned.
?VoicePassive?
is inserted by a pre-processing TSurgeon patternbecause, in some cases, the target of a passive modality trigger word is in a differentlocation from the target of the corresponding active modality trigger word.
?AUX?
isinserted during pre-processing to distinguish auxiliary uses of have and be from theiruses as main verbs.
The pattern portion of the pattern?action pair matches a node withlabel VB that is not already tagged as a trigger and that is passive and dominates thestring ?required?.
The VB node is also a sister to an S node, and the S node dominates aVB that is not an auxiliary (provide in this case).
The action portion of the pattern?actionpair inserts the string ?TargReq?
as the second daughter of the second VB and insertsthe string ?TrigReq?
as the second daughter of the first VB.VB=trigger !< /^Trig/ < VoicePassive < required $..(S < (VB=target !< AUX))insert (TargReq) >2 targetinsert (TrigReq) >2 triggerVerb-specific patterns such as this one were generalized in order to gain coverage ofthe whole modality lexicon.
The specific lexical item, required, was replaced with a vari-able, as were the labels ?TrigReq?
and ?TargReq.?
The pattern was then given a name,V3-passive-basic, where V3 is a verb class tag from LDOCE (described in Section 5.3)for verbs that take infinitive complements.
We then looked up the LDOCE verb classlabels for all of the verbs in the modality lexicon.
Using this information, we could thengenerate a set of new, verb-specific patterns for each V3 verb in the modality lexicon.6.3 Evaluating the Effectiveness of Structure-Based MN TaggingWe performed amanual inspection of the structure-based tagging output.
We calculatedprecision by examining 229 instances of modality triggers that were tagged by ourtagger from the English side of the NIST 09 MTEval training sentences.
We analyzedprecision in two steps, first checking for the correct syntactic position of the target andthen checking the semantic correctness of the trigger and target.
For 192 of the 229triggers (around 84%), the targets were tagged in the correct syntactic location.For example, for the sentence A solution must be found to this problem shown inFigure 8, the word must is a modality trigger word, and the correct target is the first425Computational Linguistics Volume 38, Number 2Figure 8Example of embedded target head found inside VP must be found.non-auxiliary verb heading a verb phrase that is contained in the syntactic complementof must.
The syntactic complement of must is the verb phrase be found to this problem.The syntactic head of that verb phrase, be, is skipped because it is an auxiliary verb.
Thecorrect (embedded) target found is the head of the syntactic complement of be.The 192 modality instances with structurally correct targets do not all have seman-tically correct tags.
In this example, must is tagged as TrigBelief, where the correct tagwould be TrigRequire.
Also, because theMN lexiconwas usedwithout respect to wordsense, words were sometimes erroneously identified as triggers.
This includes non-modal uses of work (work with refugees), reach (reach a destination), and attack (attacka physical object), in constrast to modal uses of these words: work for peace (effort), reacha goal (succeed), and attack a problem (effort).
Fully correct tagging of modality wouldneed to include word sense disambiguation.For 37 of the 229 triggers we examined, a target was not tagged in the correct syn-tactic position.
In 12 of 37 incorrectly tagged instances the targets are inside compoundnouns or coordinate structures (NP or VP), which are not yet handled by the modalitytagger.
The remaining 25 of the 37 incorrectly tagged instances had targets that were lostbecause the tagger does not yet handle all cases of nested modalities.
Nested modalitiesoccur in sentences like They did not want to succeed in winning where the target wordswant and succeed are also modality trigger words.
Proper treatment of nested modalitiesrequires consideration of scope and compositional semantics.Nesting was treated in two steps.
First, the modality tagger marked each word as atrigger and/or target.
In They did not want to succeed in winning, not is marked as a triggerfor negation, want is marked as a target of negation and a trigger of wanting, succeed ismarked as a trigger of succeeding and a target of wanting, and win is marked as a targetof succeeding.
The second step in the treatment of nested modalities occurs during treegrafting, where the meanings of the nested modalities are composed.
The tree graftingprogram correctly composes some cases of nested modalities.
For example, the tagTrigAble composed with TrigNegation results in the target tag TargNOTAble, as shownin Figure 9.
In other cases, where compositional semantics are not yet accommodated,the tree grafting program removed target labels from the trees, and those cases werecounted as incorrect for the purpose of this evaluation.Figure 9Example of modality composed with negation: TrigAble and TrigNegation combine to formNOTAble.426Baker et al Modality and Negation in SIMTIn the 229 instances that we examined, there were 14 in which a light verb or nounwas the correct syntactic target, but not the correct semantic target.
Decision would bea better target than taken in The decision should be taken on delayed cases on the basis ofmerit.We counted sentences with semantically light targets as correct in our evaluationbecause our goal was to identify the syntactic head of the target.
The semantics of thetarget is a general issue, and we often find lexico-syntactic fluff between the trigger andthe most semantically salient target in sentences likeWe succeeded in our goal of winningthe war where ?success in war?
is the salient meaning.With respect to recall, the tagger primarily missed special forms of negation innoun phrases and prepositional phrases: There was no place to seek shelter; The buildingsshould be reconstructed, not with RCC, but with the wood and steel sheets.
More complexconstructional and phrasal triggers were also missed: President Pervaiz Musharraf has saidthat he will not rest unless the process of rehabilitation is completed.
Finally, we discoveredsome omissions from our MN lexicon: It is not possible in the middle of winter to re-openthe roads.
Further annotation experiments are planned, which will be analyzed to closesuch gaps and update the lexicon as appropriate.Providing a quantitative measure of recall was beyond the scope of this project.At best we could count instances of sentences containing trigger words that were nottagged.
We are also aware of many cases of modality that were not covered such asthe modal uses of the future tense auxiliary will as in That?ll be John (conjecture), I?ll dothe dishes (volition), He won?t do it (non-volition), and It will accommodate five (ability)(Larreya 2009).
Because of the complexity and subtlety of modality and negation, how-ever, it would be impractical to count every clause (such as the not rest unless clauseabove) that had a nuance of non-factivity.7.
Semantically Informed Syntactic MTThis section describes the incorporation of our structured-based MN tagging into anUrdu?English machine-translation system using tree grafting for combining syntacticsymbols with semantic categories (e.g., modality/negation).
We note that a de factoUrdu MN tagger resulted from identifying the English MN trigger and target words ina parallel English?Urdu corpus, and then projecting the trigger and target labels to thecorresponding words in Urdu syntax trees.7.1 Refinement of Translation Grammars with Semantic CategoriesWe used synchronous context-free grammars (SCFGs) as the underlying formalismfor our statistical models of translation.
SCFGs provide a convenient and theoreticallygrounded way of incorporating linguistic information into statistical models of transla-tion, by specifying grammar rules with syntactic non-terminals in the source and targetlanguages.
We refine the set of non-terminal symbols so that they not only includesyntactic categories, but also semantic categories.Chiang (2005) re-popularized the use of SCFGs for machine translation, with theintroduction of his hierarchical phrase-based machine translation system, Hiero.
Hierouses grammars with a single non-terminal symbol ?X?
rather than using linguisticallyinformed non-terminal symbols.
When moving to linguistic grammars, we use SyntaxAugmented Machine Translation (SAMT) developed by Venugopal, Zollmann, andVogel (2007).
In SAMT the ?X?
symbols in translation grammars are replaced withnonterminal categories derived from parse trees that label the English side of the427Computational Linguistics Volume 38, Number 2Figure 10A sentence on the English side of the bilingual parallel training corpus is parsed with asyntactic parser, and also tagged with our modality tagger.
The tags are then grafted ontothe syntactic parse tree to form new categories like VP-TargNOTAble and VP-TargRequire.Grafting happens prior to extracting translation rules, which happens normally except forthe use of the augmented trees.Urdu?English parallel corpus.1 We refine the syntactic categories by combining themwith semantic categories.
Recall that this progression was illustrated in Figure 3.We extracted SCFG grammar rules containing modality, negation, and named enti-ties using an extraction procedure that requires parse trees for one side of the parallelcorpus.
Although it is assumed that these trees are labeled and bracketed in a syntac-tically motivated fashion, the framework places no specific requirement on the labelinventory.
We take advantage of this characteristic by providing the rule extractionalgorithm with augmented parse trees containing syntactic labels that have semanticannotations grafted onto them so that they additionally express semantic information.Our strategy for producing semantically grafted parse trees involves three steps:1.
The English sentences in the parallel training data are parsed with asyntactic parser.
In our work, we used the lexicalized probabilistic contextfree grammar parser provided by Basis Technology Corporation.2.
The English sentences are MN-tagged by the system described herein andnamed-entity-tagged by the Phoenix tagger (Richman and Schone 2008).3.
The modality/negation and entity markers are grafted onto the syntacticparse trees using a tree-grafting procedure.
The grafting procedure wasimplemented as part of the SIMT effort.
Details are further spelled out inSection 7.2.Figure 10 illustrates how modality tags are grafted onto a parse tree.
Note thatalthough we focus the discussion here on the modality and negation, our frameworkis general and we were able to incorporate other semantic elements (specifically, namedentities) into the SIMT effort.Once the semantically grafted trees have been produced for the parallel corpus, thetrees are presented, along with word alignments (produced by the Berkeley aligner),to the rule extraction software to extract synchronous grammar rules that are both1 For non-constituent phrases, composite CCG-style categories are used (Steedman 1999).428Baker et al Modality and Negation in SIMTsyntactically and semantically informed.
These grammar rules are used by the decoderto produce translations.
In our experiments, we used the Joshua decoder (Li et al 2009),the SAMT grammar extraction software (Venugopal and Zollmann 2009), and specialpurpose-built tree-grafting software.Figure 11 shows example semantic rules that are used by the decoder.
The verbphrase rules are augmented with modality and negation, taken from the semanticcategories listed in Table 2.
Because these get marked on the Urdu source as well asthe English translation, semantically enriched grammars also act as very simple namedentity or MN taggers for Urdu.
Only entities, modality, and negation that occurred inthe parallel training corpus are marked in the output, however.7.2 Tree-Grafting AlgorithmThe overall scheme of our tree-grafting algorithm is to match semantic tags to syntacticcategories.
There are two inputs to the process.
Each is derived from a common textfile of sentences.
The first input is a list of standoff annotations for the semanticallytagged word sequences in the input sentences, indexed by sentence number.
The secondis a list of parse trees for the sentences in Penn Treebank format, indexed by sentencenumber.Table 2 lists the modality/negation types that were produced by the MN tagger.
Forexample, the sentence The students are able to swim is tagged as The students are ?TrigAble?to ?TargAble swim?.
The distinction between ?Negation?
and ?NOT?
corresponds to thedifference between negation that is inherently expressed in the triggering lexical itemand negation that is expressed explicitly as a separate lexical item.
Thus, I achievedmy goal is tagged ?Succeed?
and I did not achieve my goal is tagged as ?NOTSucceed,?Figure 11Example translation rules with tags for modality, negation, and entities combined withsyntactic categories.429Computational Linguistics Volume 38, Number 2Table 2Modality tags with their negated versions.
Note that Require and Permit are in a dual relation,and thus RequireNegation is represented as NOTPermit and PermitNegation is representedas NOTRequire.Require NOTRequirePermit NOTPermitSucceed NOTSucceedSucceedNegation NOTSucceedNegationEffort NOTEffortEffortNegation NOTEffortNegationIntend NOTIntendIntendNegation NOTIntendNegationAble NOTAbleAbleNegation NOTAbleNegationWant NOTWantWantNegation NOTWantNegationBelief NOTBeliefBeliefNegation NOTBeliefNegationFirm Belief NOTFirm BeliefFirm BeliefNegation NOTFirm BeliefNegationNegationbut I failed to win is tagged as ?SucceedNegation,?
and I did not fail to win is tagged as?NOTSucceedNegation.
?The tree-grafting algorithm proceeds as follows.
For each tagged sentence, weiterate over the list of semantic tags.
For each semantic tag, there is an associated wordor sequence of words.
For example, the modality tag TargAble may tag the word swim.For each semantically tagged word, we find the parent node in the correspond-ing syntactic parse tree that dominates that word.
For a word sequence, we find andcompare the parent nodes for all of the words.
Each node in the syntax tree has acategory label.
The following tests are then made and tree grafts applied: If there is a single node in the parse tree that dominates all and only thewords with the semantic tag, graft the name of the semantic tag ontothe highest corresponding syntactic constituent in the tree.
For example,in Figure 10, which shows the grafting process for modality tagging,the semantic tag TargNOTAble that ?hand over?
receives is grafted ontothe VB node that dominates all and only the words ?hand over.?
Then thesemantic tag TargNOTAble is passed up the tree to the VP node, which isthe highest corresponding syntactic constituent. If the semantic tag corresponds to words that are adjacent daughters ina syntactic constituent, but less than the full constituent, insert a nodedominating those words into the parse tree, as a daughter of the originalsyntactic constituent.
The name of the semantic tag is grafted onto the newnode and becomes its category label.
This is a case of tree augmentation bynode insertion. If a syntactic constituent selected for grafting has already been labeledwith a semantic tag, overlay the previous tag with the current tag.
Wechose to tag in this manner simply because our system was not set up tohandle the grafting of multiple tags onto a single constituent.
An example430Baker et al Modality and Negation in SIMTof this occurs in the sentence ?The Muslims had obtained Pakistan.?
If theNP node dominating Pakistan is grafted with a named entity tag such asNP-GPE, we overlay this with the NP-TargSucceed tag in a modalitytagging scheme. In the case of a word sequence, if the words covered by the semantic tagfall across two different syntactic constituents, do nothing.
This is a case ofcrossing brackets.Our tree-grafting procedure was simplified to accept a single semantic tag persyntactic tree node as the final result.
The algorithm keeps the last tag seen as the tag ofprecedence.
In practice, we established a precedence ordering for modality/negationtags over named entity tags by grafting named entity tags first and modality/negationsecond.
Our intuition was that, in case of a tie, finer-grained verbal categories would bemore helpful to parsing than finer-grained nominal categories.2 In cases where a wordwas tagged both as a MN target and a MN trigger, we gave precedence to the target tag.This is because, although MN targets vary, MN triggers are generally identifiable withlexical items.
Finally, we used the simplified specificity ordering of MN tags describedin Section 5.2 to ensure precedence of more specific tags over more general ones.
Table 2lists the modality/negation types from highest (Require modality) to lowest (Negation)precedence.37.3 SIMT ResultsWe evaluated our tree grafting approach by performing a series of translation experi-ments.
Each version of our translation systemwas trained on the same bilingual trainingdata.
The bilingual parallel corpus that we used was distributed as part of the 2008NIST Open Machine Translation Evaluation Workshop.4 The training set contained88,108 Urdu?English sentence pairs, and a bilingual dictionary with 113,911 entries.For our development and test sets, we split the NIST MT-08 test set into two portions(with each document going into either test or dev, and preserving the genre split).Our test set contained 883 Urdu sentences, each with four translations into English,and our dev set contained 981 Urdu sentences, each with four reference translations.To extract a syntactically informed translation model, we parsed the English side ofthe training corpus using a Penn Treebank?trained parser (Miller et al 1998).
For theexperiments that involved grafting named entities onto the parse trees, we taggedthe English side of the training corpus with the Phoenix tagger (Richman and Schone2008).
We word-aligned the parallel corpus with the Berkeley aligner.
All models used a5-gram language model trained on the English Gigaword corpus (v5) using the SRILMtoolkit with modified KN smoothing.
The Hiero translation grammar was extractedusing the Joshua toolkit (Li et al 2009).
The other translation grammars were extractedusing the SAMT toolkit (Venugopal and Zollmann 2009).2 In testing we found that grafting named entities first and MN last yielded a slightly higher BLEU scorethan the reverse order.3 Future work could include exploring additional methods of resolving tag conflicts or combining tagtypes on single nodes, for example, by inserting multiple intermediate nodes (effectively using unaryrewrite rules) or by stringing tag names together.4 http://www.itl.nist.gov/iad/mig/tests/mt/2008/doc/.431Computational Linguistics Volume 38, Number 2Figure 12Results for a range of experiments conducted during the SIMT effort show the score for ourtop-performing baseline systems derived from a hierarchical phrase-based model (Hiero).Substantial improvements obtained when syntax was introduced along with feature functions(FFs) and further improvements resulted from the addition of semantic elements.
The scoresare lowercased BLEU calculated on the held-out devtest set.
NE = named entities.Figure 12 gives the results for a number of experiments conducted during the SIMTeffort.5 The experiments are broken into three groups: baselines, syntax, and semantics.To contextualize our results we experimented with a number of different baselinesthat were composed from two different approaches to statistical machine translation?phrase-based and hierarchical phrase-based SMT?along with different combinationsof language model sizes and word aligners.
Our best-performing baseline was a Hieromodel.
The Bleu score for this baseline on the development set was 22.9 Bleu points.After experimenting with syntactically motivated grammar rules, we conductedexperiments on the effects of incorporating semantic elements (e.g., named entities andmodality/negation) into the translation grammars.
In our devtest set our taggers taggedon average 3.5 named entities per sentence and 0.35 MN markers per sentence.
Thesewere included by grafting modality, negation, and named-entity markers onto the parsetrees.
Individually, each of these made modest improvements over the syntacticallyinformed system alone.
Grafting named entities onto the parse trees improved the Bleuscore by 0.2 points.
Modality/negation improved it by 0.3 points.
Doing both simulta-neously had an additive effect and resulted in a 0.5 Bleu score improvement over syntaxalone.
This improvement was the largest improvement that we got from anything otherthan the move from linguistically naive models to syntactically informed models.We used bootstrap resampling to test whether the differences in Bleu scores werestatistically significant (Koehn 2004).
All of the results were a significant improvementover Hiero (at p ?
0.01).
The difference between the syntactic system and the syntacticsystem with named entities is not significant (p = 0.38).
The differences between the5 These experiments were conducted on the devtest set, containing 883 Urdu sentences (21,623 Urduwords) and four reference translations per sentence.
The BLEU score for these experiments is measuredon uncased output.432Baker et al Modality and Negation in SIMTsyntactic system and the syntactic system with MN, and between the syntactic systemand the syntactic system with both MN and named entities were both significant at(p ?
0.05).Figure 13 shows example output from the final SIMT system in comparison tothe pre-SIMT results and the translation produced by a human (reference).
An erroranalysis of this example output illustrates that SIMT enhancements have resulted in theelimination of misleading translation output in several cases:1. pre-SIMT: China had the experience of Pakistan?s first nuclear bomb.SIMT: China has the first nuclear bomb test.reference: China has conducted the experiment of Pakistan?s first nuclear bomb.2.
pre-SIMT: the nuclear bomb in 1998 that Pakistan may experienceSIMT: the experience of the atom bomb Pakistan in May 1998reference: the atom bomb, whose experiment was done in 1998by Pakistan3.
pre-SIMT: He said that it is also present proof of that Dr. Abdul QadeerKhan after the Chinese designSIMT: He said that there is evidence that Dr. Abdul Qadeer Khan hasalso used the Chinese designreference: He said that the proof to this also exists in that Dr. AbdulQadeer Khan used the Chinese designThe article in question pertains to claims by Thomas Reid that China allowed Pakistanto detonate a nuclear weapon at its test site.
In the first example, however, the reader ispotentially misled by the pre-SIMT output to believe that Pakistan launched a nuclearbomb on China.
The SIMT output leaves out the mention of Pakistan, but correctly con-veys the firm belief that the bomb event is a test (closely resembling the term experimentin the human reference), not a true bombing event.
This is clearly an improvement overthe misleading pre-SIMT output.In the second example, the pre-SIMT output misleads the reader to believe thatPakistan is (or will be) attacked, through the use of the phrase may experience, wheremay is poorly placed.
(We note here that this is a date translation error, i.e., the monthof May should be next to the year 1998, further adding to the potential for confusion.
)Unfortunately, the SIMT output also uses the term experience (rather than experiment,which is in the human reference), but in this case the month is correctly positioned inthe output, thus eliminating the potential for confusionwith respect to themodality.
Thelack of a modal appropriately neutralizes the statement so that it refers to an abstractevent associated with the atom bomb, rather than an attack on the country.In the third example, where the Chinese design used by Dr. Abdul Qandeer Khan isargued to be proof of the nuclear testing relationship between Pakistan and China, thefirst pre-SIMT output potentially leads the reader to believe that Dr. Abdul Qadeer isafter the Chinese design (not that he actually used it), whereas the SIMT output conveysthe firm belief that the Chinese design has been used by Dr. Abdul Qadeer.
This outputvery closely matches the human reference.Note that even in the title of the article, the SIMT system produces much morecoherent English output than that of the linguistically naive system.
The figure alsoshows improvements due to transliteration, which are described in Irvine et al (2010).The scores reported in Figure 12 do not include transliteration improvements.433Computational Linguistics Volume 38, Number 2Figure 13An example of the improvements to Urdu?English translation before and after the SIMT effort.Output is from the baseline Hiero model, which does not use linguistic information, and fromthe final model, which incorporates syntactic and semantic information.434Baker et al Modality and Negation in SIMT8.
Conclusions and Future WorkWe developed a modality/negation lexicon and a set of automatic MN taggers, one ofwhich?the structure-based tagger?results in 86% precision for tagging of a standardLDC data set.
The MN tagger has been used to improve machine translation outputby imposing semantic constraints on possible translations in the face of sparse trainingdata.
The tagger is also an important component of a language-understanding modulefor a related project.We have described a technique for translation that shows particular promisefor low-resource languages.
We have integrated linguistic knowledge into statisticalmachine translation in a unified and coherent framework.
We demonstrated thataugmenting hierarchical phrase-based translation rules with semantic labels (through?grafting?)
resulted in a 0.5 Bleu score improvement over syntax alone.Although our largest gains were from syntactic enrichments to the Hiero model,demonstrating success on the integration of semantic aspects of language bodes wellfor additional improvements based on the incorporation of other semantic aspects.
Forexample, we hypothesize that incorporating relations and temporal knowledge intothe translation rules would further improve translation quality.
The syntactic graftingframework is well-suited to support the exploration of the impact of many differenttypes of semantics on MT quality, though in this article we focused on exploring theimpact of modality and negation.An important future study is one that focuses on demonstrating whether furtherimprovements in modality/negation identification are likely to lead to further gains intranslation performance.
Such a study would benefit from the inclusion of a more de-tailed manual evaluation to determine if modality and negation is adequately conveyedin the downstream translations.
This work would be additionally enhanced throughexperimentation on other language pair(s) and larger corpora.The work presented here represents the first small steps toward a full integrationof MT and semantics.
Efforts underway in DARPA?s GALE program demonstrated thepotential for combining MT and semantics (termed distillation) to answer the informa-tion needs of monolingual speakers using multilingual sources.
Proper recognition ofmodalities and negation is crucial for handling those information needs effectively.In previous work, however, semantic processing proceeded largely independently ofthe MT system, operating only on the translated output.
Our approach is significantlydifferent in that it combines syntax, semantics, and MT into a single model, offeringthe potential advantages of joint modeling and joint decision-making.
It would beinteresting to explore whether the integration of MT with syntax and semantics can beextended to provide a single-model solution for tasks such as cross-language informa-tion extraction and question answering, and to evaluate our integrated approach (e.g.,using GALE distillation metrics).AcknowledgmentsWe thank Aaron Phillips for help withconversion of the output of the entity taggerfor ingest by the tree-grafting program.
Wethank Anni Irvine and David Zajic for theirhelp with experiments on an alternativeUrdu modality/negation tagger based onprojection and training an HMM-basedtagger derived from Identifinder (Bikel,Schwartz, and Weischedel 1999).
For theirhelpful ideas and suggestions during thedevelopment of the modality framework,we are indebted to Mona Diab, EduardHovy, Marge McShane, Teruko Mitamura,Sergei Nirenburg, Boyan Onyshkevych,and Owen Rambow.
We also thank BasisTechnology Corporation for their generouscontribution of software components to thiswork.
This work was supported, in part,by the Johns Hopkins Human Language435Computational Linguistics Volume 38, Number 2Technology Center of Excellence (HLTCOE),by the National Science Foundation undergrant IIS-0713448, and by BBN Technologiesunder GALE DARPA/IPTO contract no.HR0011-06-C-0022.
Any opinions, findings,and conclusions or recommendationsexpressed in this material are those of theauthors and do not necessarily reflect theviews of the sponsor.ReferencesBaker, Collin F., Charles J. Fillmore, andJohn B. Lowe.
1998.
The BerkeleyFrameNet project.
In Proceedings of the36th Annual Meeting of the Associationfor Computational Linguistics and17th International Conference onComputational Linguistics - Volume 1,ACL ?98, pages 86?90, Stroudsburg, PA.Baker, Kathryn, Steven Bethard, MichaelBloodgood, Ralf Brown, Chris Callison-Burch, Glen Coppersmith, Bonnie J. Dorr,Nathaniel W. Filardo, Kendall Giles, AnnIrvine, Michael Kayser, Lori Levin, JustinMartineau, James Mayfield, Scott Miller,Aaron Phillips, Andrew Philpot, ChristinePiatko, Lane Schwartz, and David Zajic.2010a.
Semantically informed machinetranslation.
Technical Report 002,Human Language Technology Center ofExcellence, Johns Hopkins University,Baltimore, MD.Baker, Kathryn, Michael Bloodgood,Chris Callison-Burch, Bonnie J. Dorr,Nathaniel W. Filardo, Lori Levin, ScottMiller, and Christine Piatko.
2010b.Semantically-informed machinetranslation: A tree-grafting approach.In Proceedings of The Ninth BiennialConference of the Association for MachineTranslation in the Americas, Denver, CO.Baker, Kathryn, Michael Bloodgood, MonaDiab, Bonnie J. Dorr, Ed Hovy, Lori Levin,Marjorie McShane, Teruko Mitamura,Sergei Nirenburg, Christine Piatko, OwenRambow, and Gramm Richardson.
2010c.SIMT SCALE 2009?Modality annotationguidelines.
Technical Report 004, HumanLanguage Technology Center ofExcellence, Johns Hopkins University,Baltimore, MD.Baker, Kathryn, Michael Bloodgood,Bonnie J. Dorr, Nathanial W. Filardo,Lori Levin, and Christine Piatko.2010d.
A modality lexicon and its usein automatic tagging.
In Proceedings ofthe Seventh International Conference onLanguage Resources and Evaluation(LREC), pages 1402?1407, MediterraneanConference Center, Valletta.Bar-Haim, Roy, Ido Dagan, Iddo Greental,and Eyal Shnarch.
2007.
Semanticinference at the lexical-syntactic level.In Proceedings of the 22nd NationalConference on Artificial intelligence -Volume 1, pages 871?876, Vancouver,British Columbia.Bikel, Daniel M., Richard Schwartz, andRalph M. Weischedel.
1999.
An algorithmthat learns what?s in a name.MachineLearning, 34(1?3):211?231.Bo?hmova?, Alena, Silvie Cinkova?, andEva Hajic?ova?.
2005.
A manual fortectogrammatical layer annotation of thePrague Dependency Treebank [Englishtranslation].
Technical Report #30, U?FALMFF UK, Prague, Czech Republic.Chiang, David.
2005.
A hierarchicalphrase-based model for statistical machinetranslation.
In Proceedings of the 43rdAnnual Meeting of the Association forComputational Linguistics (ACL-2005),pages 263?270, Ann Arbor, MI.Diab, Mona T., Lori Levin, Teruko Mitamura,Owen Rambow, VinodkumarPrabhakaran, and Weiwei Guo.
2009.Committed belief annotation and tagging.In Proceedings of the Third LinguisticAnnotation Workshop, ACL-IJCNLP ?09,pages 68?73, Stroudsburg, PA.Farkas, Richa?rd, Veronika Vincze, Gyo?rgyMo?ra, Ja?nos Csirik, and Gyo?rgy Szarvas.2010.
The CoNLL-2010 shared task:Learning to detect hedges and their scopein natural language text.
In Proceedings ofthe Fourteenth Conference on ComputationalNatural Language Learning?Shared Task,CoNLL ?10: Shared Task, pages 1?12,Stroudsburg, PA.Fellbaum, Christiane, editor.
1998.WordNet:An Electronic Lexical Database.
MIT Press,Cambridge, MA.Hajic?, Jan, Eva Hajic?ova?, Petr Pajas, JarmilaPanevova?, Petr Sgall, and Barbora Vidova?Hladka?.
2001.
Prague DependencyTreebank 1.0 (Final Production Label),UFAL MFF UK, Prague, Czech Republic.Huang, Bryant and Kevin Knight.
2006.Relabeling syntax trees to improvesyntax-based machine translationquality.
In HLT-NAACL, New York.Irvine, Ann, Mike Kayser, Zhifei Li, WrenThornton, and Chris Callison-Burch.2010.
Integrating output from specializedmodules in machine translation:Transliteration in Joshua.
Proceedingsof the Human Language Technology436Baker et al Modality and Negation in SIMTand North American Chapter of theAssociation for Computational Linguistics,pages 240?247.
The Prague Bulletin ofMathematical Linguistics, 93:107?116.Klein, Dan and Christopher D. Manning.2003.
Accurate unlexicalized parsing.
InProceedings of the 41st Annual Meeting of theAssociation for Computational Linguistics,pages 423?430, Sapporo, Japan.Koehn, Philipp.
2004.
Statistical significancetests for machine translation evaluation.
InProceedings of EMNLP 2004, pages 388?395,Barcelona.Koehn, Philipp, Hieu Hoang, AlexandraBirch, Chris Callison-Burch, MarcelloFederico, Nicola Bertoldi, Brooke Cowan,Wade Shen, Christine Moran, RichardZens, Chris Dyer, Ondrej Bojar, AlexandraConstantin, and Evan Herbst.
2007.
Moses:Open source toolkit for statistical machinetranslation.
In Proceedings of the ACL-2007Demo and Poster Sessions, Prague, CzechRepublic, pages 177?180.Kratzer, Angelika.
1991.
Modality.
InArnim von Stechow and Dieter, editors,Semantics: An International Handbook ofContemporary Research.
De Gruyter,Berlin, pages 639?650.Larreya, Paul.
2009.
Towards a typology ofmodality in language.
In Raphael Salkie,Pierre Busuttil, and Johan van der Auwera,editors,Modality in English: Theory andDescription.
Mouton de Gruyter, Paris,pages 9?30.Li, Zhifei, Chris Callison-Burch, Chris Dyer,Sanjeev Khudanpur, Lane Schwartz, WrenThornton, Jonathan Weese, and OmarZaidan.
2009.
Joshua: An open sourcetoolkit for parsing-based machinetranslation.
In Proceedings of the FourthWorkshop on Statistical Machine Translation,pages 135?139, Athens.Marcus, Mitchell P., Mary AnnMarcinkiewicz, and Beatrice Santorini.1993.
Building a large annotated corpus ofEnglish: The Penn Treebank.
ComputationalLinguistics, 19(2):313?330.McShane, Marjorie, Sergei Nirenburg, andRon Zacharski.
2004.
Mood and modality:Out of the theory and into the fray.
NaturalLanguage Engineering, 19(1):57?89.Miller, Scott, Heidi Fox, Lance Ramshaw,and Ralph Weischedel.
1998.
SIFT:Statistically-derived information fromtext.
In Seventh Message UnderstandingConference (MUC-7), Washington, DC,Miller, Scott, Heidi J.
Fox, Lance A.Ramshaw, and Ralph M. Weischedel.
2000.A novel use of statistical parsing to extractinformation from text.
In Proceedings ofApplied Natural Language Processingand the North American Association forComputational Linguistics, pages 226?233,Seattle, Washington.Murata, Masaki, Kiyotaka Uchimoto, QingMa, Toshiyuki Kanamaru, and HitoshiIsahara.
2005.
Analysis of machinetranslation systems?
errors in tense,aspect, and modality.
In Proceedings of the19th Asia-Pacific Conference on Language,Information and Computing (PACLIC 2005),Taipei, Taiwan.Nairn, Rowan, Cleo Condorovdi, andLauri Karttunen.
2006.
Computingrelative polarity for textual inference.In Proceedings of the International Workshopon Inference in Computational Semantics(ICoS-5), pages 66?76, Buxton, England.Palmer, Martha, Daniel Gildea, andPaul Kingsbury.
2005.
The PropositionBank: An annotated corpus of semanticroles.
Computational Linguistics,31:71?106.Papineni, Kishore, Salim Roukos, ToddWard, and Wei-Jing Zhu.
2002.
Bleu:A method for automatic evaluation ofmachine translation.
In Proceedings of the40th Annual Meeting of the Association forComputational Linguistics (ACL-2002),pages 311?318, Philadelphia, PA.Petrov, Slav and Dan Klein.
2007.
Learningand inference for hierarchically splitPCFGs.
In Proceedings of the 22nd AmericanAssociation for Artificial Intelligence,pages 1663?1666, Vancouver, BritishColumbia, Canada.Prabhakaran, Vinodkumar, Owen Rambow,and Mona Diab.
2010.
Automaticcommitted belief tagging.
In Proceedingsof the 23rd International Conference onComputational Linguistics: Posters, COLING?10, pages 1014?1022, Beijing, China.Prasad, Rashmi, Nikhil Dinesh, Alan Lee,Eleni Miltsakaki, Livio Robaldo, AravindJoshi, and Bonnie Webber.
2008.
The PennDiscourse TreeBank 2.0.
In Proceedings ofthe Sixth International Language Resourcesand Evaluation (LREC?08), pages 28?30,Marrakech.Pustejovsky, James, Marc Verhagen, RoserSaur?
?, Jessica Littman, Robert Gaizauskas,Graham Katz, Inderjeet Mani, RobertKnippen, and Andrea Setzer.
2006.TimeBank 1.2.
Linguistic Data Consortium,Philadelphia, PA.Richman, Alexander and Patrick Schone.2008.
Mining wiki resources formultilingual named entity recognition.437Computational Linguistics Volume 38, Number 2In Proceedings of ACL-08: HLT, pages 1?9,Columbus, OH.Rubin, Victoria L. 2007.
Stating withcertainty or stating with doubt:Intercoder reliability results for manualannotation of epistemically modalizedstatements.
In Proceedings of the HumanLanguage Technology and North AmericanChapter of the Association for ComputationalLinguistics (Short Papers), pages 141?144,Rochester, NY.Saur?
?, Roser and James Pustejovsky.
2009.FactBank: A corpus annotated withevent factuality.
Language Resources andEvaluation, 43(3):227?268.Saur?
?, Roser, Marc Verhagen, and JamesPustejovsky.
2006.
Annotating andrecognizing event modality in text.In Proceedings of the 19th InternationalFlorida Artificial Intelligence ResearchSociety Conference, pages 333?339,Melbourne Beach, FL.Sigurd, Bengt and Barbara Gawro?nska.1994.
Modals as a problem for MT.
InProceedings of the 15th InternationalConference on Computational Linguistics(COLING) - Volume 1, pages 120?124,Kyoto, Japan.Steedman, Mark.
1999.
Alternatingquantifier scope in CCG.
In Proceedings ofthe 37th Annual Meeting of the Associationfor Computational Linguistics (ACL),College Park, MD.Szarvas, Gyo?rgy, Veronika Vincze, Richa?rdFarkas, and Ja?nos Csirik.
2008.
TheBioScope corpus: Annotation for negation,uncertainty and their scope in biomedicaltexts.
In Proceedings of the Workshop onCurrent Trends in Biomedical NaturalLanguage Processing, pages 38?45,Stroudsburg, PA.van der Auwera, Johan and AndreasAmmann.
2005.
Overlap betweensituational and epistemic modal marking.In Martin Haspelmath, Matthew S. Dryer,David Gil, and Bernard Comrie, editors,World Atlas of Language Structures.
OxfordUniversity Press, New York, chapter 76,pages 310?313.Venugopal, Ashish and Andreas Zollmann.2009.
Grammar based statistical MT onHadoop: An end-to-end toolkit for largescale PSCFG based MT.
Prague Bulletin ofMathematical Linguistics, 91:67?78.Venugopal, Ashish, Andreas Zollmann, andStephan Vogel.
2007.
An efficient two-passapproach to synchronous-CFG drivenstatistical MT.
In Proceedings of theHuman Language Technology Conferenceof the North American Chapter of theAssociation for Computational Linguistics(HLT/NAACL-2007), pages 500?507,Rochester, NY.von Fintel, Kai and Sabine Iatridou.2006.
How to say ought in foreign: Thecomposition of weak necessity modals.In Proceedings of the 6th Workshop onFormal Linguistics, Florianopolis, Brazil,August 2006.Wang, Wei, Jonathan May, Kevin Knight,and Daniel Marcu.
2010.
Re-structuring,re-labeling, and re-aligning forsyntax-based machine translation.Computational Linguistics, 36(2):247?277.Webber, Bonnie, Aravid Joshi, MatthewStone, and Alistair Knott.
2003.
Anaphoraand discourse structure.
ComputationalLinguistics, 29:545?587.Wiebe, Janyce, Theresa Wilson, and ClaireCardie.
2005.
Annotating expressionsof opinions and emotions in language.Language Resources and Evaluation,39(2?3):165?210.Wilson, Theresa, Janyce Wiebe, and PaulHoffman.
2009.
Recognizing contextualpolarity: An exploration of featuresfor phrase-level sentiment analysis.Computational Linguistics, 35:399?433.Zollmann, Andreas and Ashish Venugopal.2006.
Syntax augmented machinetranslation via chart parsing.
InProceedings on the Workshop on StatisticalMachine Translation, pages 138?141,New York City.438
