Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 33?36,Sydney, July 2006. c?2006 Association for Computational LinguisticsAn Intermediate Representation forthe Interpretation of Temporal ExpressionsPawe?
Mazur and Robert DaleCentre for Language TechnologyMacquarie UniversityNSW 2109 Sydney Australia{mpawel,rdale}@ics.mq.edu.auAbstractThe interpretation of temporal expressionsin text is an important constituent task formany practical natural language process-ing tasks, including question-answering,information extraction and text summari-sation.
Although temporal expressionshave long been studied in the researchliterature, it is only more recently, withthe impetus provided by exercises likethe ACE Program, that attention has beendirected to broad-coverage, implementedsystems.
In this paper, we describe ourapproach to intermediate semantic repre-sentations in the interpretation of temporalexpressions.1 IntroductionIn this paper, we are concerned with the interpreta-tion of temporal expressions in text: that is, givenan occurrence in a text of an expression like thatmarked in italics in the following example, wewant to determine what point in time is referredto by that expression.
(1) We agreed that we would meet at 3pm onthe first Tuesday in November.In this particular case, we need to make use of thecontext of utterance to determine which Novemberis being referred to; this might be derived on thebasis of the date stamp of the document contain-ing this sentence.
Then we need to compute thefull time and date the expression corresponds to.If the utterance in (1) was produced, say, in July2006, then we might expect the interpretation to beequivalent to the ISO-format expression 2006-11-07T15:00.1 The derivation of such interpretationwas the focus of the TERN evaluations held underthe ACE program.
Several teams have developedsystems which attempt to interpret both simple andmuch more complex temporal expressions; how-ever, there is very little literature that describes inany detail the approaches taken.
This may be dueto a perception that such expressions are relativelyeasy to identify and interpret using simple pat-terns, but a detailed analysis of the range of tem-poral expressions that are covered by the TIDESannotation guidelines demonstrates that this is notthe case.
In fact, the proper treatment of some tem-poral expressions requires semantic and pragmaticprocessing that is considerably beyond the state ofthe art.Our view is that it is important to keep in minda clear distinction between, on the one hand, theconceptual model of temporal entities that a partic-ular approach adopts; and, on the other hand, thespecific implementation of that model that mightbe developed for a particular purpose.
In this pa-per, we describe both our underlying framework,and an implementation of that framework.
We be-lieve the framework provides a basis for furtherdevelopment, being independent of any particularimplementation, and able to underpin many dif-ferent implementations.
By clearly separating theunderlying model and its implementation, this alsoopens the door to clearer comparisons betweendifferent approaches.We begin by summarising existing work in thearea in Section 2; then, in Section 3, we describeour underlying model; in Section 4, we describehow this model is implemented in the DANTE1Clearly, other aspects of the document context mightsuggest a different year is intended; and we might also addthe time zone to this value.33system.22 Relation to Existing WorkThe most detailed system description in the pub-lished literature is that of the Chronos system fromITC-IRST (Negri and Marseglia, 2005).
This sys-tem uses a large set of hand-crafted rules, andseparates the recognition of temporal expressionsfrom their interpretation.
The ATEL system de-veloped by the Center for Spoken Language Re-search (CSLR) at University of Colorado (see (Ha-cioglu et al, 2005)) uses SVM classifiers to detecttemporal expressions.
Alias-i?s LingPipe also re-ported results for extraction, but not interpretation,of temporal expressions at TERN 2004.In contrast to this collection of work, whichcomes at the problem from a now-traditional in-formation extraction perspective, there is also ofcourse an extensive prior literature on the semanticof temporal expressions.
Some more recent workattempts to bridge the gap between these two re-lated enterprises; see, for example, Hobbs and Pan(2004).3 The Underlying ModelWe describe briefly here our underlying concep-tual model; a more detailed description is providedin (Dale and Mazur, 2006).3.1 ProcessesWe take the ultimate goal of the interpretation oftemporal expressions to be that of computing, foreach temporal expression in a text, the point intime or duration that is referred to by that expres-sion.
We distinguish two stages of processing:Recognition: the process of identifying a tempo-ral expression in text, and determining its ex-tent.Interpretation: given a recognised temporal ex-pression, the process of computing the valueof the point in time or duration referred to bythat expression.In practice, the processes involved in determiningthe extent of a temporal expression are likely tomake use of lexical and phrasal knowledge thatmean that some of the semantics of the expres-sion can already be computed.
For example, in2DANTE stands for Detection and Normalisation of Tem-poral Expressions.order to identify that an expression refers to a dayof the week, we will in many circumstances needto recognize whether one of the specific expres-sions {Monday, Tuesday, ... Sunday} has beenused; but once we have recognised that a specificform has been used, we have effectively computedthe semantics of that part of the expression.To maintain a strong separation between recog-nition and interpretation, one could simply recom-pute this partial information in the interpretationphase; this would, of course, involve redundancy.However, we take the view that the computationof partial semantics in the first step should not beseen as violating the strong separation; rather, wedistinguish the two steps of the process in terms ofthe extent to which they make use of contextual in-formation in computing values.
Then, recognitionis that phase which makes use only of expression-internal information and preposition which pre-cedes the expression in question; and interpreta-tion is that phase which makes use of arbitrarilymore complex knowledge sources and wider doc-ument context.
In this way, we motivate an in-termediate form of representation that represents a?context-free?
semantics of the expression.The role of the recognition process is then tocompute as much of the semantic content of a tem-poral expression as can be determined on the basisof the expression itself, producing an intermediatepartial representation of the semantics.
The role ofthe interpretation process is to ?fill in?
any gaps inthis representation by making use of informationderived from the context.3.2 Data TypesWe view the temporal world as consisting of twobasic types of entities, these being points in timeand durations; each of these has an internal hi-erarchical structure.
It is convenient to representthese as feature structures like the following:3(2) ???????????pointDATE?
?DAY 11MONTH 6YEAR 2005??TIME?
?HOUR 3MINUTE 00AMPM pm????????????
?3For reasons of limitations of space, we will ignore dura-tions in the present discussion; their representation is similarin spirit to the examples provided here.34Our choice of attribute?value matrices is not ac-cidental; in particular, some of the operations wewant to carry out on the interpretations of bothpartial and complete temporal expressions can beconveniently expressed via unification, and thisrepresentation is a very natural one for such op-erations.This same representation can be used to indi-cate the interpretation of a temporal expression atvarious stages of processing, as outlined below.
Inparticular, note that temporal expressions differ intheir explicitness, i.e.
the extent to which the in-terpretation of the expression is explicitly encodedin the temporal expression; they also differ in theirgranularity, i.e.
the smallest temporal unit usedin defining that point in time or duration.
So, forexample, in a temporal reference like November11th, interpretation requires us to make explicitsome information that is not present (that is, theyear); but it does not require us to provide a time,since this is not required for the granularity of theexpression.In our attribute?value matrix representation, weuse a special NULL value to indicate granularitiesthat are not required in providing a full interpre-tation; information that is not explicitly provided,on the other hand, is simply absent from the rep-resentation, but may be added to the structure dur-ing later stages of interpretation.
So, in the caseof an expression like November 11th, the recogni-tion process may construct a partial interpretationof the following form:(3) ???
?pointDATE[DAY 11MONTH 6]TIME NULL???
?The interpretation process may then monotoni-cally augment this structure with information fromthe context that allows the interpretation to bemade fully explicit:(4) ??????pointDATE?
?DAY 11MONTH 6YEAR 2006?
?TIME NULL?????
?The representation thus very easily accommodatesrelative underspecification, and the potential forfurther specification by means of unification, al-though our implementation also makes use ofother operations applied to these structures.4 Implementation4.1 Data StructuresWe could implement the model above directly interms of recursive attribute?value structures; how-ever, for our present purposes, it turns out tobe simpler to implement these structures using astring-based notation that is deliberately consis-tent with the representations for values used in theTIMEX2 standard (Ferro et al, 2005).
In that no-tation, a time and date value is expressed using theISO standard; uppercase Xs are used to indicateparts of the expression for which interpretation isnot available, and elements that should not receivea value are left null (in the same sense as our NULLvalue above).
So, for example, in a context wherewe have no way of ascertaining the century be-ing referred to, the TIMEX2 representation of thevalue of the underlined temporal expression in thesentence We all had a great time in the ?60s is sim-ply VAL="XX6".We augment this representation in a numberof ways to allow us to represent intermediatevalues generated during the recognition process;these extensions to the representation then serveas means of indicating to the interpretation processwhat operations need to be carried out.4.1.1 Representing Partial SpecificationWe use lowercase xs to indicate values that theinterpretation process is required to seek a valuefor; and by analogy, we use a lowercase t ratherthan an uppercase T as the date?time delimiter inthe structure to indicate when the recogniser is notable to determine whether the time is am or pm.This is demonstrated in the following examples;T-VAL is the attribute we use for intermediateTIMEX values produced by the recognition pro-cess.
(5) a.
We?ll see you in November.b.
T-VAL="xxxx-11"(6) a. I expect to see you at half past eight.b.
T-VAL="xxxx-xx-xxt08:59"(7) a. I saw him back in ?69.b.
T-VAL="xx69"(8) a. I saw him back in the ?60s.b.
TVAL="xx6"4.1.2 Representing Relative SpecificationTo handle the partial interpretation of relative dateand time expressions at the recognition stage, we35use two extensions to the notation.
The first pro-vides for simple arithmetic over interpretations,when combined with a reference date determinedfrom the context:(9) a.
We?ll see you tomorrow.b.
T-VAL="+0000-00-01"(10) a.
We saw him last year.b.
T-VAL="-0001"The second provides for expressions where a morecomplex computation is required in order to deter-mine the specific date or time in question:(11) a.
We?ll see him next Thursday.b.
T-VAL=">D4"(12) a.
We saw him last November.b.
T-VAL="<M11"4.2 ProcessesFor the recognition process, we use a large collec-tion of rules written in the JAPE pattern-matchinglanguage provided within GATE (see (Cunning-ham et al, 2002)).
These return intermediate val-ues of the forms described in the previous section.Obviously other approaches to recognizing tem-poral expressions and producing their intermedi-ate values could be used; in DANTE, there is alsoa subsequent check carried out by a dependencyparser to ensure that we have captured the full ex-tent of the temporal expression.DANTE?s interpretation process then does thefollowing.
First it determines if the candidate tem-poral expression identified by the recogniser is in-deed a temporal expression; this is to deal withcases where a particular word or phrase annotatedby the recognizer (such as time) can have bothtemporal or non-temporal interpretations.
Then,for each candidate that really is a temporal expres-sion, it computes the interpretation of that tempo-ral expression.This second step involves different operationsdepending on the type of the intermediate value:?
Underspecified values like xxxx-11 arecombined with the reference date derivedfrom the document context, with temporal di-rectionality (i.e., is this date in the future orin the past?)
being determined using tenseinformation from the host clause.?
Relative values like +0001 are combinedwith the reference date in the obvious man-ner.?
Relative values like >D4 and <M11 makeuse of special purpose routines that knowabout arithmetic for days and months, so thatthe correct behaviour is observed.5 ConclusionsWe have sketched an underlying conceptual modelfor temporal expression interpretation, and pre-sented an intermediate semantic representationthat is consistent with the TIMEX2 standard.
Weare making available a corpus of examples taggedwith these intermediate representations; this cor-pus is derived from the nearly 250 examples inthe TIMEX2 specification, thus demonstrating thewide coverage of the representation.
Our hope isthat this will encourage collaborative developmentof tools based on this framework, and further de-velopment of the conceptual framework itself.6 AcknowledgementsWe acknowledge the support of DSTO, the Aus-tralian Defence Science and Technology Organi-sation, in carrying out the work described here.ReferencesH.
Cunningham, D. Maynard, K. Bontcheva, andV.
Tablan.
2002.
GATE: A framework and graphicaldevelopment environment for robust NLP tools andapplications.
In Proceedings of the 40th Anniver-sary Meeting of the ACL.R.
Dale and P. Mazur.
2006.
Local semantics in theinterpretation of temporal expressions.
In Proceed-ings of the Coling/ACL2006 Workshop on Annotat-ing and Reasoning about Time and Events.L.
Ferro, L. Gerber, I. Mani, B. Sundheim, and G. Wil-son.
2005.
TIDES 2005 Standard for the Anno-tation of Temporal Expressions.
Technical report,MITRE, September.K.
Hacioglu, Y. Chen, and B. Douglas.
2005.
Au-tomatic Time Expression Labeling for English andChinese Text.
In Alexander F. Gelbukh, editor,Computational Linguistics and Intelligent Text Pro-cessing, 6th International Conference, CICLing?05,LNCS, pages 548?559.
Springer.Jerry R. Hobbs and Feng Pan.
2004.
An ontologyof time for the semantic web.
ACM Transactionson Asian Language Information Processing, 3(1),March.M.
Negri and L. Marseglia.
2005.
Recognition andNormalization of Time Expressions: ITC-irst atTERN 2004.
Technical Report WP3.7, InformationSociety Technologies, February.36
