Knowledge in tegrat ion  in a robust  and  efficientmorpho-syntact i c  ana lyzer  for  F renchtLouisette EmirkanianD6p.
de linguistiqueABSTRACTLorne H. BouchardD6p.
de math6matiques et d'infonnatiqueUniversit6 du Qu6bec h MontrEalC.P.
8888, Succursale "A"Montr6al, QCCanada H3C 3P8R15320 @ UQAM.
BITNETWe present a morpho-syntactic analyzer for French which iscapable of automatically detecting and of correcting (automaticallyor with user help) spelling mistakes, agreement errors and certainfrequently encountered syntactic errors.
Emphasizing the specificlanguage knowledge that is used, we describe the major sub-tasks of this analyzer: word categorization bydictionary look-upand spelling correction, construction of a parse tree or of a forestof parse trees, correction of syntactic and morphological errors byprocessing the parse tree.
The spelling corrector module isdesigned to help correct he spelling mistakes of a French novice,as opposed to those of an experienced typist.
The syntax analysismodule is driven by an empirical grammar for French and isbased on the work of Tomita.
The presentation is based on thedesign and implementation f a prototype of the system which iswritten in Lisp for the Macintosh computer.1.
INTRODUCTIONOur goal is to construct a morpho-syntactic analyzer for Frenchwhich is capable of automatically detecting and of correcting(automatically or with help from the user) spelling mistakes,agreement errors and the most important syntax errors.
Thissystem could be used to analyze word processor output, forexample.Since our main goal is to implement a robust and efficientanalyzer for French, we have designed a system which can detecterrors as opposed to one which can only process well-formedinput.A number of systems for English text analysis have beendeveloped.
The Writer's Workbench/Frase 1983/is a collectionof tools developed at AT&T's Bell Laboratories: the two mostimportant ones address proof reading and style analysis.
TheEPISTLE project /Miller, Heidorn & Jensen 1981/is a vastproject undertaken at IBM's Thomas J. Watson researchlaboratory, the long term goal of which is to develop a systemwhich not only supports writing, but also text understanding.WANDAH/Friedman 1984/, a system that was developed atUCLA, comprises three sub-systems: a word processor designedto support interactive composition, tools to assist composition andtools to help in the editing and the revising phases.These systems are difficult o adapt o French since they are basedon knowledgg which is specific to English.
Furthermore, in thesesystems the gnowledge is rarely represented xplicitly: indeed, theknowledge/has most often been "compiled" for reasons ofefficiencyj Thus, these systems cannot easily reason about theknowledge they have.
/ -The ~ovel feature of our system is that it is based on anintegration at different levels of the knowledge of French.
Thisknowledge is represented xplicitly in the system and the systemkeeps track of the decisions it has made, which will allow it notonly to justify its decisions but also to reason about its reasoning.The main problem is in the integration of knowledge of thelanguage, knowledge which is at different levels: knowledge oforthography/Catach 1980/, of traditional grammar/Le nouveauBescherelle 1980//Grevisse 1969/, of syntax/Grevisse 1969//Gross 1975//Boons, Guillet & Lecl~re 1976/and also of themost frequently encountered errors/Catach, Duprez & Legris1980//Class & Hor~,uelin 1979//Lafontaine, Dubuisson &"~ Research ftlnded by the Social Sciences Research Council of .....Canada (SSRCC grant no.
410-85-1360).Emirkanian 1982/.
In order to be able to use such ka,owledge, itmust on the one hand be made operational nd it must on the otherhand be orchestrated.In our system, these sources of knowledge are used as follows.Each sentence of the text is split up into words.
Each word i.~categorized by dictionary look-up; knowledge of Frenchorthography is represented asa collection of correction rules.
Anefficient parser, driven by a context-free grammar, builds a parsetree oi" a forest of parse trees in the case of ambiguity.
This parseris deterministic in the sense that it blocks as soon as an error i.~detected.
The parser can recall the spelling corrector, if need be,.Then, knowledge of the sub-categorization f French verbsallows the system to eliminate automatically certain ambiguitiesand to detect and correct many errors.
Finally, the user isconsulted whenever the system cannot intervene.Before presenting the system in depth, we must emphasize thatthe system we have designed is intended to assist at theknowledge level and not at the competence l vel.
It is notdesigned as a tool to improve written communication skills.The main sub-tasks of the system are as foUows:word categorization by dictionary look-up and spellingcol~rection,construction of a parse tree or of a forest of parse trees incases of ambiguity,correction of syntax errors, detection and co~xection ofmorphological errors by processing the parse u'ee.We shall now examine these three phases.2.
WORD CATEGORIZATION AND SPELLINGCORRECTION2.1 Classification of spelling mistakesWe have adopted Catach's classification /Catach, Duprez &Legris 1980/from where we also borrow the examples.
Shedistinguishes phonetic errors (*puplier instead ofpublier ), fromphonogrammic errors (the user knows the sound withoutknowing the transcription) some of which can modify the phonicvalue of a word (*gdrir instead of gudrir, *oisis instead of oasis )whilst others do not change the phonic value (*pharmatie insteadof pharmacie ).
In addition to these two types of errors, sheidentifies morphogrammic errors (caused by faulty knowledge ofnon-phonetic orthography) in grammatical elements (numberagreement, for example) or in lexical elements (*enterremantinstead of enterrement, *abrit instead of abri, for example),confusion of lexieal homophones (vain / vin ) or grammaticalhomophones (on / ont ), problems with ideograms (punctuation,for example) and finally problems with non-functional letterswhich are derived, for example, from the Greek origin of a word(*tdatre instead of theatre).We have excluded from our area of investigation ,all phoneticerrors, that is errors which can be caused by faulty prommciation.On the other hand, our system can handle all the phonograrmnicerrors.
Morphogrammic errors in grammatical elements aredetected uring the later morphological nalysis phase.
Errors inlexical morphemes are conected uring this phase, as well aserrors which are due to the existence of non-functional letters.
Asfor problems with homophones, grammatical homophones aredetected uring the parsing or the syntax analysis phases, butonly some lexical homophones are detected during these phases:we can correct vain / vin but not chant / champ, since theseelements, in addition to being homophones, belong to the samelexical categot?.
The sem,3nfic knowledge available in ore" systemis not sufficient to resolve this ambiguity.Regarding spelling mistakes, phonogrammic errors (i.e., thosedue to the transcription of sounds) are the most frequent inFrench, mainly because of the problems caused by thephonic/graphic con'espondence.
Forexample, the sound \[o\] canbe wxitten in many ways: au, aud (at the end of a word), eau, etc.This is not the ease in English/Peterson 1980/, where the mainspelling mistakes eem to be due to random insertions or.~uppressions of letters, substitution of a letter for another o1"transposition f two letters.
We call these rrors "typographical"e~rors: we will not discuss them fresher in this paper.2.2 The E~ietionaryOur system is based on two dictionaries, a dictionary of stemsand a dictional y of endings.
Associated with a stem, in the stemdictionary, is .~;tored a pointer to a list of one or more endingswhich are stored in the endings dictionary.
In this way, oursystem can handle all inflected forms efficiently, as well as thenumerous exceptions.
Based on a suggestion by Knuth/Knuth1973/, a trie is used to index the stem dictionary.
Diacritical signsare removed from the letters when the trie is constructed and alsowhen a word is looked up in the trie.
Indeed, the letters modifiedby the diacritical signs are only stored in the leaves of the trie.This allows our system to handle accent errors, a commonspelling mistake, very efficiently.Instead of storing "chameau", "chameaux", ehamelle" and"ch,'unelles" in the dictionary, we only store the common form"chino-" in the stem dictionary together with its lexical category.We also store there, as pointers to the endings dictionary, thecorresponding rules for constructing the number and genderendings and any additional syntactic or semantic nformation, asrequited.2.3 The look-up algorithmThe word to be looked up is scanned from left to right: eachletter, strippe~l of its diacritical sign if need be, controls thewalking of the stem trie until a leaf is reached.
Associated withthe leaf, we find the lexical category and the ending rules for thestem.
Remafifing letters of the word are looked up in the list ofendings associated with the stem: the entry corresponding to anending records, for example, the number and gender of nounsand adjectives o1' the person, time and mood of the verbs whichhave this ending (the endings lists contain all possible ndings ofthe verhs/Le nouveau Beseherelle 1980/).
The most importantending errors are also recorded in the endings lists.
Using thisinformation, the system can detect and correct at this level endingerrors: for exa!nple, *chevals instead of chevaux, *eloux insteadof clous.A block during trie traversal signals the detection of a spellingmistake:.
The context of the letter esponsible for the block is usedm index a large set of rewrite rules, called correction mh',s, whichare derived mainly from the phonic/graphic transcription rules ofFreuch/Catach, Duprez & I_egris 1980/.
These rules characterizethe knowledge of French orthography which is used to comect hespelling error.2?4 The correction algorithmAlthough the set of eorrection rules is mostly based on thephonic/graphic transcription rules of French, certain rules are notbased on such a strict correspondence at all since the programscan also, for example, conect *enui to ennui and *gdrir to gudrir.Wl,en a leaf is finally reached, the rule or rules which wereapplied to unblock the walk in the trie are used to correct hemisspelt word.In addition to substitution rules, we have a set of roles which areused only on the ending of a word.
These rules are applied beforethe substitution rules.
For example, for the word *blan thesystem proposes blanc, and for the word *tros it proposes trots,trop and trot, as can be seen in Fig.
1.Flchlor Edltloo F~li~tros Loxique i:i~glri ~.S~Jnt.
Cari'ect|an ItI }J'oi 3 roots ~ rioo$ proposer ...> trot ... ~i /, t ro t?
'~ '~ i  Iho j rophe~-s~--!Fig.
1If the user is not satisfied with a correction, the system can, uponrequest, propose another in some cases.
For example, inresponse to the word *vi the system proposes vie (the noun) andif the user requests another correction, it then proposes the twoverbs voir and vivre as can be seen in Fig.
2, since the stem, orone of the stems, of these verbs matches the word *vi.
The usermay conjugate these verbs using our Conjugueur tool, as can beseen in Fig.
3.li~ Flchler Edition F~r~t i '~ Loriiqoe li~gio It.Si~.t.
Corroclloo ~lI I F_-N?
~-  I R. .
.
.
.Correction ... .
.
.
.
.
.
.
.
.
.
.> Oi ...< S'aglt--ll du verbe  ~vlvre>> ?
~"(~ Che,'( her e,,cm'(~ ~ ~Fig.
2?
~ Flch|er Edition Feri~tros Lexlquo R~gle fl.Sgot.
Correctlo..u "~vlvre \] \ [ \ ]  pronomionl ~ onoir~ Ir.parfalt P. zlnlplo ~mplo~ct i r  to ul, ~ Po.~ ~a_ /~t~ n e l  II nit I !
re fnrroo 2e fo rme \]~ t  .o., olno., eal~gJ~UOUS vlncdZ ~-~ \[ E Ills \[,;;h~i.
i - P\[~.!
~_ \[ BESCIIERELLEFig.
3167In many cases however, when the error is located before theblock point, the correction algolithm must move the block pointback and thus performs a systematic search of the dictionary,backtracking upon failure.
Indeed, for the word entente spelt*antente, the first block point is just after the second n sinceantenais and antenne 'are in our dictionary/Robert 1967/.The size of the dictionary and of the set of correction rules islarge.
The system uses simple metrics as heuristics/Romanycia &Pelletier 1985/in order to filter the set of correction rules andreduce the search space.
The selected rules are analyzed and thosethat do not increase trie penetration depth or those that do notallow the system to move forward in a word (simple metrics ofprogress towards the goal of accounting for all the letters in aword) are rejected.
Note that the expectations of the dictionary,represented asa trie, also effectively constrain the search space.2.5 Word categorizationAt this point, a word can have been assigned a single lexicalcategory, as for example cahier : N IF-, etc.\].
The word can alsobe assigned a wrong category, as for example in il *pin : N \[F-,etc.\] which was written instead of il peint.
Finally, a word canbe assigned many categories (case of lexical ambiguity), as forexample il vente : N \[F+,etc.\] / V \[present 3 rd person ofindicative / subjunctive\].3.
CONSTRUCTION OF A PARSE TREE OR OF AFORESTWe have compiled an emph-ical grammar of written French whichis described by a context-free grammar.
Our parser is based onthe work of Tomita/Tomita 1986//Tomita 1987/.
In a Tomitaparser, a general purpose parsing procedure is driven by aparsing table which is generated mechanically from the context-free grammar of the language to be parsed.
Tomita's maincontribution has been to propose the use of a graph-structuredstack which allows the parser to handle multiple structuralambiguities efficiently.
We use YACC /Johnson 1983/, aLALR(1) parsing table generator available in UNIX toautomatically generate the parsing table which drives the generalparsing procedure.
When generating the parsing tables, YACCdetects and sign',ds cases of sn~uctural ambiguity.Many cases can arise in parsing French.Consider first the case when a word has been assigned multiplecategories.
Some of the ambiguities can be  resolved byconsidering the expectations of the grammar.
Consider the wordcourt which can be an adjective, an adverb, a noun or a verb.
Ifcourt is found in the context il : \[ProC1\] court : Adj / Adv / N / V\[3 rd person singular, etc.\], the grammar accepts only the verb atthis point.
Similarly the word une which can be a determinant, anoun or a pronoun can automatically be reduced to noun in thecontext il a lu la une du journal.Consider now the case when the parser cannot derive a parse tree:based on the hypothesis that there may be a spelling error whichcaused an erroneous category to be assigned, the parser calls thespelling correetor to revise the spelling of a word and hence thecategory assigned to it.
In the case of the previous example il*pin, of the spelling alternatives for pin,  only peint, the verb, isretained since pain is no more possible in this context han pin.Indeed, in our grammar of the sentence only a verb or anotherclitic pronoun may appear after a clitic pronoun.
Similarly, in thesentence ils *on apportd le livre, *on will be corrected to ont .The parser efficiently constructs a parse tree or a forest of parsetrees which account for the sentence.
In a Tomita parser, theforest of parse trees is represented by a data structure analogousto a chart/Winograd 1983/, which allows for "local ambiguitypacking".4.
ANALYSIS OF THE PARSE TREE OR FORESTA forest of parse trees can be produced in classical cases ofstructural mbiguity such as in Pierre expddie des porcelaines deChine.
The two parse trees generated for this sentence can beseen in Fig.
4 and 5.
The bracketed Lisp representation f thesetrees can be found in Fig.
6 and 7.SCsn  SucIn UC SnI IP ier re  uconj det n spI I Iexp~die des porcelaines prep snI Ide nIChineFig.
4S:CsnInIP i e r resvcuc  $nueon j  det  nI I Iexpgdie des poreelainexspprep snI Ide nIChine(scFig.
5(sn (n "Pierre"))(svc (vc (vconj "expEdie"))(sn (det "des")(n "porcelaines")(sp (prep "de")(sn (n "Chine"))))))Fig.
6(so (sn (n "Pierre"))(svc (vc (vconj "exptdie"))(sn (det "des")(n "porcelaines"))(sp (prep "de")(sn (n "Chine")))))Fig.
716~A forest of parse trees can also be caused by cases of lexicalambiguity such as il veut le boucher.
In many cases, only someof the trees in the forest need be retained, since the system canautomatically clear the forest.
For example, although two parsetrees are constructed for the sentence Jean n'a pas ?ffectud elancer (lancer could be an infinitive verb or a noun), ordy the treewith lancer categorized as a noun is retained, as shown in Fig.
8.
(So (sn (n "Jean"))(svc (sadv (adv "n"))(auxc "a")(sadv (adv "pas"))(vc (vpp "effectu6"))(sn (det "de")(n "lancer"))))Fig.
8At this level, the sub-categorization of the verb is of great help:this information is also stored in the dictionary of course.
Forexample, effectuer does not allow an infinitive phrase as acomplement.
Simih'trly, in the sentence il a remarqud Mariearriwmt d tottte allure, Marie arrivant d toute allure could be anadverbial plwase, Marie could be the object of remarquer andarriwmt d torte allure could be ml adverbial phrase, finally Mariearrivant d tot,.te allure could be the object of remarquer.
The firsthypothesis (uee) is rejected since remarquer is sub-categorized asrequiring adi:,:cct complement.Sub-categori:;ation s used to clear the forest of trees, Fig.
9-12,resulting from the analysis of the sentence il pense d l'envie dePaul de s'eurichir.
(so (spro (l?ro-qu "il"))(sve (vc (vconj "pense"))(sp (prep "/t")(sn (det "1")(n "envie")(sp (prep "de")(sn (n "Paul")(si (prep "de")(svinf (procl "s")(vinf "enriehir")))))))))Fig.
9(sc (spro (pro-qu "il"))(svc (vc (vconj "pense"))(sp (,prep "~")(sn (det 'T')(n "envie")(sp (prep "de")(sn (n "Paul")))(si (prep "de")(svinf (procl "s")(vinf "enrichir")))))))Fig.
10(se (spro (pro-qu "il"))(svc (ve (vconj "pense"))(sp (prep "h.")(sn (det 'T')(n "envie")(sp (prep "de")(sn (n "Paul")))))(si (prep "de")(svinf (procl "s")(vinf "enrichir")))))Fig.
11(spro (pro-qu "il"))(svc (vc (vconj "pense"))(sp (prep ",?
')(sn (dot 'T')(n "envie")))(sp (prep "de")(sn (n "Paul")(si (prep "de")(svinf (procl "s")(vinf "enrichir")))))))(seFig.
12The sub-categorization nformation for the verb penser allows usto eliminate the lrees of Fig.
11 and 12.
Since Paul cannot be sub-categorized by an infinitive sentence, as peur can be (la peur des'enrichir), the tree in Fig.
9 can also be eliminated.
The onlyremaining analysis is the tree in Fig.
10.Verb sub-categorization also allows the system to COXTeCt somespelling mistakes at this stage.
For example, the sentence *ilpanse que Marie viendra will be corrected to il pense que Mcwieviendra since panser does not accept acompletivc.Similarly, in il va *ou il veut, *ou is corrected to ot~.
At thislevel we also correct, using information stored in the dictionary,an error of the type *quoique tu discs, je partirai to qu/)i qtte tudiscs, je part irai ,  since the sub-categorization f dire is notsatisfied in the first case.
It is also verb sub-categorizationinformation which allows us to conect certain trees and improveothers.Consider the case of con'ecting a u'ee.
For the sentence, il punitqui ment, i~fitially qui ment is labelled as a sentence connected tothe verb punir .
Then, the sentence qui rnent is relabelled as anoun phrase.Consider now the case where the sub-categorization allows us toimprove atree.
In the sentence Pierre lira un livre cette nuit , cettenuit initially labelled noun phrase, will be relabeIled adverbialphrase since lire cannot be sub-categorized by two noun phrases,as nommer can be, for example.5.
CORRECTING SYNTAX ERRORS ANDAGREEMENT ERRORSExperience has shown that syntactic errors are relativelyinfrequent.
For example, in a study of the syntax of primaryschool students/Dubuisson & Emirkanian 1982a//Dubuisson &Emirkanian 1982b/, out of 6580 communication u its, only 79(1.2%) were found to be ungrammatical.
The unit ofcommunication is equivalent towhat the traditional gratmnar callsthe sentence, that is the root sentence and any embeddedsentences/Loban 1976/.
We observed/Lafontaine, Dubuisson169and Emirkanian 1982/that the most frequent problem is in the useof subordination (53% of the errors), the use of complex relativeclauses in particular (24 cases out of 42).
Children also haveproblems with multiple embeddings: in general when theyconnect an embedded sentence to another, the resulting sentenceis ungrammatical, the main sentence being absent or incomplete.The other problems are related to coordination, to constituentmobility and to the use of clitic pronouns where we observed astrong influence from the oral.As for relative clauses, we counted non-standard clauses asungrammatical, though they follow rules as do the standardrelative clauses.
La fille que je te parle et la fille que je parle avecare examples of non-staudard elative clauses whilst the sentence*la fiUe dont que je te parle is ungrammaticalWe have chosen for now to focus our attention on two of theseproblems: complex relative clauses and sequences of clitics.
Aspart of a previous research project, we developed algorithms forhandling complex relative clauses/Emirkanian & Bouchard 1987/and sequences of elitics/Emirkanian & Bouchard 1985/.
For thesentence la fille que je parle, the syntax correction algorithmproposes la fille de qui/dont/de laquelle/avec quilavec laquelle/dqui/c~ laquelle je parle.
On the other hand, in response to thesentence la fille que je te parle, the algorithm proposes dont, dequi and de laquelle as possible choices.
Again it is the sub-categorization of the verb which gives us a handle on theproblems with sequences of clitic pronouns.
The programcon'ects *je lui aide toje l'aide, for example.
However, in mostcases, only an error is reported, the system is unable to correctthe error since it cannot identify precisely tile referent of the clitic.
*J'y donne and *je lui donne are examples of ungrammaticalsentences; the system cannot propose with certainty the missingclitics: it will propose la lui, le lui, etc.., in the first case and lelui , la lui , lui en , etc.., in the second case.During morphological nalysis, based on the information gleanedfi'om the dictionary, the information collected in the parse tree andthe agreement rules of French, the system isolates the nounphrases and checks to see if the agreement rules for number andgender have been appIied.
It then checks for agreement betweenthe subject and the verb.
Note that, for example, in the case of*les belles chameaux , the system proposes both les beauxchameaux and les belles chamelles .
In response to the sentence*le professeur explique la lemon aux ~ldve de la classes, thesystem proposes le professeur explique la leqon aux dldves de laclasse , aux dldves des classes, ~ l'~ldve de la classe and also dl'#ldve des classes , even if, based on our knowledge of theworld, we know that the last answer is less probable.The agreement rules which we have formalized, some of whichare recorded in the dictionary, allow our system to correct heerrors most frequently found in written text /Lebrun 1980//Pelchat 1980/.
These errors are due, in particular for numberagreement, tosemantic interferences orto the proximity of otherelements: for example, * il veut ~tre trds riches instead of U veutdtre trds riche , *je les voient instead of je les vois and * Michelnous donnent des bonbons instead of Michel nous donne desbonbons .Finally, note that certain lexieal ambiguities (there are relativelyfew remaining at this stage) could be resolved here: for example,this is the case for le chouette anglais , but la chouette anglaisestill remains ambiguous.6.
CONCLUSIONThe automatic orrection of French text is a major project.Knowledge at many different levels must be integrated andcoordinated in the system.
Only the construction of a prototypecan attest to the success of such an integration.
We havedeveloped a prototype of the correction program in LISP on aMacintosh Plus.
The behavior of the final system will be refinedby weighting the rules according to their utility.
Statisticsgathered from many different users will help us tune the generalbehavior of the system whilst statistics gathered for a given userwill allow us to tune the behavior of the system to the problemsspecific to that user.REFERENCESBoons, J.P., A. Guillet & Ch.
Lecl~re (1976) La structure desphrases imples en franqais, Gen~ve, Droz, 377p.Catach, N. (1980) L'orthographe fi'anqaise, Paris, Nathan, 334p.Catach, N., D. Duprez & M. Legris (1980) L'enseignement del'orthographe, Paris, Nathan, 96p.Clas, A.
& J.P. Horguelin (1979) Le franqais, langue desaffaires, 2 e Edition, MontrEal, McGraw-Hill, 391p.Dubuisson C. & L. Emirkanian (1982a), 'Complexifieationsyntaxique de l'Ecrit au primaire', Revue de l'AssociationQuEbEcoise de Linguistique, vol.
1, nOl-2, pp.
61-73.Dubuisson, C. & L. Emirkanian (1982b) 'Acquisition desrelatives et implications pEdagogiques', In: Lefebvre, C1.
(ed.
):La syntaxe comparEe du fran~ais standard et populaire:approches formelle t fonctionnelle, Gouvernement duQuEbec,Office de la langue fran~aise, pp.
367-397.Emirkanian, L. & L.H.
Bouchard (1985) 'Conception etrEalisation d'un didacticiel sur les pronoms personnels',Bulletin de I'APOP, vol.III, nO3, pp.
10-13.Emirkanian L. & L.H.
Bouchard (1987) 'Conception etrEalisation de logiciels: vers une plus grande integration desconnaissances de la langue', Revue QuEbEeoise deLinguistique, vol.
16, nO2, pp.189-221.Frase, L.T.
(1983) The Unix Writer's Workbench Software:Rationale and Design', Bell System Technical Journal, pp.1891-1908.Fried~nan, M. (1984) 'WANDAH: Writing-aid and Author'sHelper', Prospectus, University of California Los Angeles,26p.Grevisse, M. (1969) Le bon usage, 9 e Edition, Gembloux,Duculot, 1228p.Gross, M. (1975) MEthodes en syntaxe, Paris, Hermann, 414p.Johnson, S.C. (1983)'YACC: Yet Another Compiler-Compiler',Unix Programmer's Manual, vol.2, New-York, Holt Rinehartand Winston, pp.
353-387.Kauth, D.E.
(1973) The Art of Computer Programming: Volume3 / Sorting and Searching, Reading MA, Addison-Wesley,722pLafontaine, L., C. Dubuisson & L. Emirkanian (1982) '"Fots'avoir Eerire": les phrases mal construites dans les textesd'enfants du primaire', Revue de l'Assoeiation QuEbEeoise deLinguistique, vol.2, nO2,, pp.
81-90.Le nouveau BeschereUe (1980) I-L'art de conjuguer.
Dictionnairede 12000 verbes, MontrEal, Hurtubise HMH, 158p.Lebrun, M. (1980) 'Le phEnom~ne d'accord et les interferencessEmantiques', Recherches sur l'acquisition de l'orthographe,Gouveruement duQuEbec, pp.
31-81.Loban, W. (1976) 'Language development: kindergarten throughgrade twelve', NCTE Research report nOl 8.170Miller, L.A., G.E.
Heidorn and K. Jensen (1981) 'Text-Critiquing with the EPISTLE System: an author's aid to bettersyntax', AFJPS Conference Proceedings, pp.
649-655.Pelchat, R. 0980) 'Un cas particulier d'accord par proximit6',Recherches ur racquisition de rorthographe, Gouvernementdu Qu6bec, pp.
99-114.Peterson, J.L.
(1980) 'Computer Programs for Detecting andCorrecting Spelling Errors', Comm.
of the ACM, pp.
676-687.Robert, P. (1967) Dictionnaire, Paris, Le Robert, 1970p.Romanycia, M.H.
& F.J. Pelletier (1985) 'What is a heuristic?
',Computational Intelligence, vol.
1, pp.
47-58.Tomita, M. (1986) Efficient Parsing for Natural Language,Boston, Kluwer, 201p.Tomita, M. (1987) 'An Efficient Augmented-Context-FreeParsing Algorithm', Computational Linguistics, vol.
13, n?l-2,pp.
31-46.Winograd, T. (1983) Language as a Cognitive Process, VolumeI: Syntax, Reading MA, Addison-Wesley, 640p.171
