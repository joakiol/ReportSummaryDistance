Sentence disambiguation by documentpreference setsorientedHirohito INAGAKI, Sueharu MIYAHARA, Tohru NAKAGAWA,NTT Human Interface Laboratories1-2356, Take , Yokosuka-Shi,Kanagawa,238-03, JAPANE-maih inagaki%ntthlt.NTT.JP@relay.cs.netand Fumihiko OBASHINTT Intelligent Technology Co.,Ltd.223-1,Yamashita-Cho, Naka-Ku,Yokohama231, JAPANAbstract :This paper proposes document orientedpreference sets(DoPS) for the disambiguationof the dependency structure of sentences.
TheI)oPS system extracts preference knowledgefrom a target document or other documentsautomatically.
Sentence ambiguities can beresolved by using domain targeted preferenceknowledge without using complicated largeknowledgebases.
Implementation andempirical results are described for thecmalysis of dependency structures of Japanesepatent claim sentences.To solve this problem, we introduceDocument oriented Preference Sets(DoPS).
Theconcept of DoPS is that to determine the mostappropriate preference knowledge, preferenceknowledge be segregated into several domains,for example, language domain, field domain,and sentence domain, each of which has adifferent execution priority.
By using thesegregated preference knowledge in the fixedorder, the most plausible interpretation can beobtained more rapidly and more accurately.2.
The concept of DoPS1.
I n t roduct ionAmbiguity in sentence interpretation isa major problem in natural languageprocessing(NLP).
Conventional NLt' systemsoften use ad hoc or extremely largeknowledgebases (pragmatic / semantic /commonsense) to eliminate ambiguities.
Suchsyslems are too slow and sometimes provideiacomplete analyses.
They have the furtherhandicap lhat very large knowledgebases aret~eeded.
Asking the user for confirmation\[Nishida 1982\] is a practical solution to getcorrect parse-trees, but this confirmation is~ot useful l'or further computations.
Apractical NLP system should produce accurateresults automatically while using a simplemethod and simple knowledge.Preference models \[Petitpierre 1987,Fass 1983, Schubert 1984\], such as preferencesemantics, scoring, and syntactic preferenceare good candidates for a practical NLP system,because these models utilize simple ready-made knowledge like semantic markers or caseframe dictionaries.
The most difficult problemwith preference models is the selection of themost appropriate preference knowledge thatwill induce a correct interpretation.
However,preference knowledge extracted from a largecorpus or an on-line dictionary \[Jensen 1987\]induces preference knowledge conflicts whichblock complete disambiguation.Syntactic rules are capable ofproducing many sentence parse -trees.
Theseparse-trees are syntactically correct, but mostare incorrect from the view points of semanticmeaning, contextual meaning, common-sense,specific field knowledge.
It is necessary to useappropriate knowledge (semantic / contextual/ commonsense / specific field) to eliminatethe incorrect interpretations.
For example,consider passage 1 of Figure 1.
There are twopossible interpretations for the gerund-phraseattachment.
(1) The power supply(~u-it,b forcharging ~ t t~ravine a volta~e-temr~erature coefficient ....... (Passage 1;begining of target sentence)the voltage-temperatm'e coefficient ofbeing charged ....
!..
~1'(Passage 2;part of target sentence)k._ jFigure 1.
ExamplePeople with electrical-engineeringknowledge know that batteries have voltage-I 183temperature coefficients, not circuits.
Howeverif specific field knowledge is lacking, it isdifficult to determine which is correct.The notion of the DoPS is to utilizepreference knowledge which can be extractedfrom other sentences of the target document orother documents.
Documents sometimes containparaphrases and the same or similarexpressions.
These expressions can containseveral kinds of knowledge (semantic /contextual / commonsense / specific field).Sentence disambiguation can be based on suchknowledge.
For example, from passage 2(which was written in another part of the targetsentence(l)), it is clear that the coefficient ofvoltage-temperature is a property of thebattery, thus the beginning of sentence (1) canbe disambiguated.This notion will be useful for any NLPstage, but it will be especially useful fordependency structure analysis.
A DoPS is acollection of plausible combinations of phrasesor words.
To eliminate conflicts of preferenceknowledge, a hierarchical structure ofpreference knowledge is adopted in the DoPS.Figure 2 shows a hierarchical structure of aDoPS.
The domains are, in order of increasingpriority, language, application, field, author,document, paragraph, and sentence.A prioritysentence domain Highfrom the target ~ .
.
.
.
.
.
.
.
.
.
.
.
~.
/ tdocument p.m2.al~rap, h " domain ?/~ /~document domain X 1 V / author domain k from other / .
.
.
.
.
.
field" ~t;main" .
.
.
.
.
.
.
.
X documents /- .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
"k / .
.
.
.
.
.
application domain .
.
.
.
.
.
.
.
.
k .i .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.  '
t  ?wseveral documents in the same field.
Weconsider that the knowledge associations heldin the document, paragraph, sentence domainsare more reliable than those in other domains.DoPS entries of document, paragraph,sentence domains are acquired from the targetdocument during the analysis, others can beprepared before analysis.
For example, inFigure 3, if the author of document B is thesame as document A, same DoPS entries ofauthor, field, application, language domainsare used in the analysis.
Other domains, thatis, sentence, paragraph, document domain areacquired during the analysis.Document C Doeumnent A Document BAst~tence do~hin.
.
.
.
.
.
.
.
.
.
.
J%'",~?~ .
.
.
.
!
.
.
.
.
.
t. .
.
.
.
.
.
.
- :d?mai-n ~ c u e n  t -~' author domain ""application domainlanguage domainFigure 3.
Different structures ofDoPSBy using such domain structuredpreference knowledge, the system can extractthe most plausible interpretation.Figure 4 shows DoPS system flowdiagram.
First, the system starts analyzing thedependency structure of the target sentencewith conventional syntactic rules.
From eachconfirmed dependency relation, DoPS systemdevelops a knowledge association or entry.Figure 2.
A hierarchical structure of DoPSThe language domain in a DoPS containsgeneral language preference extracted from alarge database, such as a word corpus or on-line dictionary.
In the application domain (e.g.patent claim sentences, news papers,editorials, manuals), there exists applicationdependent phrases or word relations.
In thefield domain (e.g.
electrical engineering,chemistry, agriculture), there exists fieldspecific phrases or word relations.
The authordomain include author's characteristics asshown in his writing.
A author often write on"De;ndency analysisusing syntactic rules \]_ t .
.
.
.
.
.
.Acquisition of entriesi from a target document \ [ " ' - " ~ .
~jI~0PS ~rom NDisambiguationurnentsby DoPS , ..Figure 4.
DoPS system flow diagram1842}In Figure 1 , since passage 2 isdisambiguous, the DoPS system extracts twoentries (Entry 3 and Entry 4) listed below,Passage 3:the voltage-temperature coefficient of a batteryEntry 3:(voltage-temperature coefficient)\[of, verb(passive)}(battery){ sere: 85 NUMB ER } { sere: 160 POWER }Passage 4:a battery being chargedEntry 4:(battery) \[nil,BE(passive)} (charge){sem:160 POWER} {sem:54 STORAGE\]sere: thesaurus category number(e.g.
Roget's thesaurus)0 : independent word , \[1 : intermediaryThe DoPS entries are similar to thedependency re lat ionships in dependencygrammar, but two expansions have been made:-semantic expansion-coordination expansionSemantic expansion ensures that foref f ic ient use of DoPS, the dependencyrelationships will be expanded into semanticdependency relationships.
Ill passage 3, theentry 3 is extracted as a dependency relationbetween instances.
These will be semanticallyexpanded by using an ordinary thesaurusd ic t ionary(e .g .
Roget 's  thesaurus) .
Forexample, the thesaurus category number of"battery" is 160 and the broader-word is"POWER".
This means the word "battery" is amember of a word group named "POWER".
Thisword group contains "power pack", "charger","condenser", and so on.
It is assumed that thesame dependency relation will be valid forother members of the same word group.Passage 5 can be validate by entry 3 frompassage 3.passage 5:This ~O de.tk4.g!tLg~,r is harf~.hg.r.ggdd automatically.
{sem:160 POWER} {sem:54 STORAGE};"condenser" is the same word group as;"battery"'Fhe other expansion is to exchange thein termed iary  express ions  (usual ly  pre-positional words or verb).
The transformationrules of intermediary expressions will bewri t ten in the DoPS system like\[nil,BE(passive)} = \[BE(passive)}<--> \[nil}.Passage 6:I ~ this new haIlgx.Z yesterday.Entry 6:(charge) \[nil} (battery)Coordination expansion means that aDoPS like preference sets can be constructedusing coordinated relationships between thecoordinated sentence constituents.
Using thecoordinated constituents of preference sets,ambiguous const ituents can be uniquelyresolved, if the same type of coordinatedsentence exists somewhere else in the targetdocument or other documents.In passage 7, it is clear that "records"and "f i les" is coord inated constituents.Preference sets for coordinated constituents isextracted as Entry 7.
Using entry 7, thecoordination in passage 8 is disambiguated.Passage 7:Were records and files dumped?Entry 7:(record) \[and\] (file)Passage 8:Old records and files were dumped.Coordination:*(Old records) \[and\] (files) were dumped.Old (records) \[and\] (files) were dumped.Even when semantically expanding thed i sambiguous  dependency  re la t ions ,ambiguities sometime persist.
If ambiguousparts remain, the system adds ambiguousentries to the DoPS.
In any domain, theexecution priority of disambiguous entries is,of course, higher than that of ambiguousentries.
Thus tile target candidate is analyzedwith disambiguous entries first.
After that, ifambiguit ies still persists, the ambiguousentries are used.Finally deterministic rules, such asright association or minimal attachment, mustbe used to eliminate any remaining ambiguity.3.
The DoPS system for Japanesedependency analysisIn this section, we describe theimplementation of the DoPS system of Japanesedependency analysis.185;tQ,~,, OUTPUT .
.~Figure 5.
DoPS system for Japanesedependency analysis.A DoPS system was implemented forJapanese dependency analysis and, becausepatent claim sentences have a tendency to usemany similar expressions, the targetdocuments were Japanese patent claimsentences.
The implemented system restrictedthe application domain to patent claimsentences and activated only the applicationand higher domains.
Figure 5 shows theimplemented system.
If dependency analysisusing syntactic rules can resolved all sentenceambiguities, execution was stopped and DoPSentries were not created.The syntactic rules used here were thegeneral dependency rules and affiliated-wordrules.
The general dependency rules are (1)dependency relationships must not cross and(2)each verb doesn't have same case.
Theaffiliated-word rules are given in table 1which represents the connection between thegovernor and the dependant.
In Japanese, thegovernor is the word units, BUNSETSU, whichmodifies another BUNSETSU, called thedependant.
The properties of governor can bedetermined from the last post-positional wordand are dependant on the last independentword in the BUNSETSU.1864Table 1.
Example of affiliated-word ulespost-positional"lga"r"ni","de".
'post-positional.... "wo" , "he"post-positional"no"NOUN VERB ADJ(ADV)NO YES YESNO YES NOYES NO NO"YES","NO" :connectivity ofgoverner anddependantThe acquisition of DoPS entries beginsafter syntactic analysis is completed.
Thesystem analyzes the sentence structure withina document and chooses the disambiguatedparts as entries as well as converting alldependency relationship candidate~ intoambiguous entries.
For example, if the systemexecutes syntactic analysis and finds passage9 disambiguous, then the acquisition processcreates entry 9.Passage 9:Japanese: Kana-kanji henkan wo okonan.
(English: Performs kana-to-kanji conversion.
)Entry 9:(Japanese):(kana-kanji) + \[nil, no\] +(henkan)(kana-kanji henkan) + \[wo\] + (okonau)(English):(kana-to-kanji) + \[/of\] + (conversion)(perform) + (kana-to-kanji conversion)"/" indicates that this can be used in reversedrelationships.After all entries are extracted from the targetdocument, the system executes coordinationanalysis.
The constituents are picked up usingthe similarity of constituent and conjunction"to", "ya", and "mataha" as a clue.
If thecoordination analysis fails to elimiuate allambiguity, constituents are determined fromcoordinated constituents of preference sets.After coordinat ion analysis iscompleted, punctuation BUNSETSU analysisstarts.
In patent claim sentence, punctuationmarks are used mainly for a restriction of thenearest dependency relation not for emphasis.Final ly,  d isambiguat ion of thedependency structure is commenced.
In thedisambiguation process, first the disambiguousentries are compared against the ambiguousparts of the sentence.
The most similardependency relation is selected as the correctrelation.
During the disambiguation process,disambiguated knowledge associations areadded to the DoPS.
If there are many candidatesof similar relations, the highest scoringcandidate is selected.
In one domain, firstdisambiguous then ambiguous entries areapplied.
The Japanese deterministic rule to isto choose the nearest dependency relation.Using this rule, all ambiguous relations will bedisambiguated.4.
System empirical resultsTo test the effectiveness of theimplemented DoPS system, we analyzed 10 realJapanese patent claim sentences; a total ofnearly 7,000 words.
These sentences wererandomly selected from the computer andcontrol systems region (the Internationalpatent classification G06F).Only half of tile dependency relationswill determined before the disambiguation byDoPS.
After the disambiguation by DoPSperformed, we obtained an averaged accuracy of93%(accuracy is defined as the number of rightdependency relationships / the number ofdependency relationships).
Finally by usingthe deterministic rule, we obtained an averagedaccuracy of 97 %.
A simple system, using onlydeterministic rule, can obtain the averageaccuracy only 84%.
Compared to this simplesystem, the sentence dependency analysis ofour DoPS system can disambiguate with a highdegree of accuracy, without needing a largeknowledgebase.In this experiment, most errorsoccurred during coordination analysis anddisambiguation.
Therefore, it is necessary toresolve coordination problems and to achievemore accurate disambiguation with DoPS.
Amore accurate DoPS system requires theelimination of useless and wrong entries.
Inthe DoF'S disambiguation process, utilization ofdependency relations from case framedictionaries is also needed.Using a DoPS system for Japanesedependency analysis, we obtained an averageaccuracy of 97%.
Compared to the 84%accuracy of simple analysis, it is clear thatDoPS is more accurate.
Furthermore, theconcept of DoPS can also be applied to otherNLPs such as MT \[Tanaka 1990\].5.
ReferencesFass,D.
and Wilks,Y.
"Preference Semantics,Ill-formedness, and Metaphor", Am.
J. ofcomputational Linguistics, Vol.9, No.3-4,pp.178-187,1983.Jensen,K.
and Binot,J.
"Disambiguating prepo-sitional phrase attachments by using on-linedictionary definitions" Computational Lin-guistics, Vol 13, No.3-4, pp.251-259, 1987.Nishida,F.
and Takamatsu,S.
"Structured-information extraction from patent-claimsentences" Information Processing & Man-agement, Vol.18, No.I, pp.
1-13,1982.Petitpierre,D.
,Krauwer,S.
, Arnold,D.
,andVarile,G.B.
"A model of preference" ,Thirdconference of the European chapter of theAssociation for Computational Lin-guistics,pp.134-139, 1987.Schubert, L. K. "On parsing preferences",Proceeding of COLING'84,pp.247-250,1984.Tanaka,K, Nogami,H., Hirakawa,H., Amano,S.,"Machine translation system usinginformation retrieved from the wholedocument" 40th-Johoshorigakkai,pp.405 ~406,1990.5.
ConclusionWe have described a new dependencystructure analysis method using documentoriented preference sets.
The DoPS systemextracts plausible preference knowledge fromthe target document or other documents.187
