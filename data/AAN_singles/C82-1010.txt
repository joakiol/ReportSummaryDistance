COLING 82, J. HoreckS, (ed.\]North-Holland Publishing Company?
Academia.
1982A FORMALISM FOR THE STRUCTURAL ANALYSIS OF DIALOGUESHelder CoelhoCentro de InformaticaLaboratorio Nacional de Engenharia C iv i lI01, Av.
do Bras i l ,  1799 Lisboa Codex, PortugalThis paper outl ines a formalism for  conversational analysis thatcaptures mult ip le interact ional  patterns of mixed- in i t ia t ive  andf i x  the h is tor ica l  skeleton of a dialogue.
The formalism, composedby a grammar of dialogues (syntax and semantic component) and aco l lect ion of attached scenarios (pragmatic component), is wr i t tenin Prolog and implemented in a program which converses in Portuguese to provide a l ib rary  service.INTRODUCTIONIn try ing to solve the problem of bui lding programs that interact  in natural lan-guage no great attent ion has been paid to formalisms for  the structural  analysisof dialogues.
However, such formalisms may support a clear descr ipt ion of the ni Ltory of the whole conversation, and convey reasoning power when associated toother tools such as de f in i te  clause grammars DCG's \[2\]  , an extension of con-text - f ree  grammars.
And, on the other hand, they promote the elaboration of theories of systematic comprehension of conversations and, in fact ,  a better  understan-ding of conversations between ind iv idua ls ,  because they allow the i r  simulation.Dialogue taking place, for  example, in a l ib rary  world has structural  propert ies,and rules are derived to form a grammar of dialogues \[4\] .
This grammar, expres-sed by a DCG, generates a l l  possible exchange forms and is responsible for the o~ganization of the possible interact ions in such context, because i t  contains adescript ion of the various ways in which the dialogue units may be strung togetherto form dialogues.
In fact ,  the major i ty  of those rules are general and may applyto other task domains.
Rules are defined in terms of.semantic concepts, l ike  re-quests or answers, which are supported by sentences of natural language.
And, thesesentences are analysed, ie ,  translated into logical  structures,  by a DCGfor Portuguese \[ I~ .
Both DCG's are expressed by Prolog's grammar rules \ [3 \ ]The research behind this paper is guided by the object ive of design and implementat ion of computer programs capable to display in te l l igent  behaviour according to t~standards of human perfomance.
An associated object ive,  the comprenhension of humanperfomance with the help of computer models leading to theories about in te l l igenthuman behaviour, is kept in mind but not discussed along the paper.A FORMALISM FOR THE ANALYSIS OF DIALOGUEThe organization of taking turns to ta lk is fundamental to dialogue, as well as toa program able to converse.
A formalism for the analysis of dialogue is proposed,and we exa~ne i t s  compat ib i l i ty ,  with the representation of the h istory of d ia logues between a program and i ts  users.Let P be a set of part ic ipants  and C a set of contr ibut ions.
By a contr ibut ion actwe mean a member of the set PKC of par t i c ipant -cont r ibut ion  pairs.
For exemple,<p l , c l l>  is a contr ibut ion act,  where pl and c l l  are the f i r s t  members of ~ andC, respect ively.6162 H. COELHOLet S be a set of conversational states or configurations.
A conversational states is a sequence of at least two related contribution acts.
For exemple, cll standsfor the f i r s t  contribution regarding the f i r s t  conversational state.By a dialogue of length n we mean a member of the set (P x C) of sequences ofn contribution acts; an~by a dialogue we mean a member of the setT = nl~ (PxC)n (n E N)of dialogues of any length.
Each member of a dialogue is of the formKS, <p,c)) (s ~S,p ~ P,c ~ C)wich we identify with the tr ip le <p,s,c>.For example, T = {<pl , l ,c l l> , <p2,l,c21> ,~p1,2,c32> , (p2,2,c42> }is a dialogue of length 4, with 2 participants, pl and p2, 2 conversational statesand 4 contributions.Wecall E = PxSxC the set of events, and any tr ip le <p,s,c) an event.
A dialogueis a sequence of events, grouped into units, and governed by rules.
The conversa-tional units are the invariant structures of dialogue: sub-dialogues, exchanges,monologues and contributions.
A sub-dialdgue (dialogue course or segment) is anysequential subset of a dialogue,Course = ~ x : (3 t?T)  (xht=O and xUt&T)}An exchange is a set of two consecutive events, concerning the same conversationalstate and two different participants.
A pre-defined exchange, conducted by theprogram, is called an exchange pattern.
A monologue is a sequence of at least twoconsecutive events, concerning the same conversational state and the same partici-pant.Mon ~U((p}xc) nA contribution of a participant o a dialogue is a sequence of his contributions.The semantics of contributions covers the following types: requests (statements,questions, and commands), answers and remarks (eg.
agreement).The underlying structures of the situations occurring in a certain problem worlddetermine the organization of dialogue and its systems.
A grammar of dialogue is aset of rules of dialogue.
Rules of dialogue state how participants understandcoherent dialogues, and specify the membership of the set of legal dialogues K,such that K ~ T, where T is the set of dialogues of any length.
Rules of dial9-gue define the class of coherent dialogue and their attached models.
They containthe way contributions are put together.
A model is a system of dialogue defined asthe tr iple <P,C,K> .
The core of any model is the set R of rules defining K.ANALYSIS OF DIALOGUEWe consider the dialogue occuring between the program TUGA I l l  and its users inthe library world.
Such dialogues are evolving dual processes, goal-and-rule-orie_nted for sharing information between the participants.
They are dual because thereare only two participantes at a given time.
They are goal oriented because theyare carried on to satisfy, for example, the following objectives:i) to satisfy users straightforward request concerning the document co~lection and the classification system,i i )  to ask users about the library world (eg.
the author of a paper), forconversational.guidance purpose, andi i i )  to present the user with proposed data (eg, the document classifica-t ion), enabling him to choose from or modify i t .They are rule-oriented because the conversational units are governed by a grammarof dialogueswhich determines the roles played by the program--the librarian andthe l ibrary's secretary, and by the user.
The grammar also allows the inclusion ofseveral courses inside a dialogue, such as topic shifts for simple question-A FORMALISM FOR THE STRUCTURAL ANALYSIS OF DIALOGUES 63-answering purposes.Consider a dialogue between the program and one of i t s  users, defined as a sequent ia l  organization of single exchanges.
The conversational description is represen-ted in the diagram of the fol lowing figure.u.userp -programq .quesOona .answ~Fig.
IConversational descriptionThe diagram shows the history of that dialogue.
The interaction proceeds in separate discrete steps from one to another of a finite number of configurations.
The~are three sucessive conversational states through time, each one corresponding toa single exchange, question (q) - answer (a) pair, conducted under user initiative.This history is described as follows.T =~< u, l ,q l l> ,<p, l ,aY l> ,<u,2,q32>,<p,2,a42>,<u,3q53),<p,3,a63>lis a dialogue of length 6, with 2 part ic ipants,  the user (u) and the program (p),with 3 conversational states and 6 contributions (questions and answers).
Note that'q32', for example, means that the third contribution is a question, referring tothe second conversational state.Consider now the following segment of a nested dialogue, concerning the classi f ication of a document:( I )  u-Classifique "Explorations inCognition"~(2) p-~explorations in cognitibn"e desconhecido~(3) Quer ainda c lass i f ica- lo?
(4) u-Esta bem.
(5) p-Vamos classif ica-lo~(6) Por favor, de-me o t i tu lo  deuma referencia do documentoem quest~o.
(7) u-Qual ~ o tTtulo do Nilsson?
(8) p - "ar t i f i ca l  intel l igence"(9) Vamos c lass i f ica- lo .
(I0) Por favor, de-me o t i tu lo  deoutra referencia do documentoem quest~o.
( I I )  u-Nao tenho nenhuma.
(12) p-Esta bem~(13) Ja que nao consegui obternenhuma referencia, n~o seidar-lhe qualquer sugestao~Quer ainda c lassi f ica- lo?
(14) u-Nao quero.
(15) p-Esta bem~ E que mais?
(Classify "Explorations in Cognition"~)("explorations in cognition is unknown:Do you s t i l l  want to classify i t?
)(All r ight .
)(Let us classify itS)Please give me the t i t le  of a referencefrom the document in question.
)(What is the t i t le  of Nilsson?
)( "a r t i f i c ia l  intel l igence".Let us classify it~Please, give me the t i t le  of anotherreference from the document in question.
)(I have none.
)(All right~As I could not get any reference, I don'tknown to give you any suggestion:Do you s t i l l  want to classify i t?
)(No, I don't .
)(All right~ And what else?
)The conversational description, represented in the figure 2, shows the organizationand levels of the dialogue.
Numbers, placed on the le f t  of contributions, are usedfor referencing them to the segment considered.64 H. COELHOr .
.
.
.
.
.
.
.
.
.
.
.
.
.
\]O--L .
.
.
.
.
.
.
.
.
.
.
U J  i i, ,- ' t s .d .
J  !, ,  I. .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
J L  .
.
.
.
.
.
.
.
.
.
.
~ f~ lu - u ~  ~-ques~on L .
.
.
.
.
.
.
.
.
J- i rogrorn  o -~.~, i ,  e rr - remorkFig.
2Conversational descriptionThe histo~ of this dialogue is described as follows,T=((u, 1 ,ql l )  ,<p ,2 ,a22>,Kp ,2 ,q32> ,4~ 2 ,a4~ ,KP ,3,r53~ ,<p ,3 ,q63 >,~ ,4 ,q74>,X p ,~,.qB4~,5,r95),Kp,5,qlO5),Ru ,5,ql15),<p,6,r126>,~ p,6,a136} ,(u ,6,a146>,4p,l ,al51~is, a dialogue of length 15, with 2 participants, the user (u )  and the program(p), 6 conversational states and 15 contributions (questions (q), answers(a.)
andremarks ( r ) .GRAM~R OF DIALOGUESThe grammar of dialogues of program TUGA is a complete and precise description ofthe properties of a certain class of dialogues.
The properties concern the struc-tures of the _dialogues, occurring in a l ibra~ world, and organized as models.This grammar machine~ is able to parse situations, and i t  is-ve~ much like theone able to parse a natural language sentence: the objects recognized, dialogueunits, are characterized as structured objects asse~led out of recognizable partsaccording to know rules of assembly.A dialogue carried out ~ TUGA has ~o participants, the program (p) and its users(u), and therefore ~o mutually exclusive states, the "agent" and the "passive participante".
Both participants may take the init iat ive during the encounter, ie.
theprogram may be an "agent" or a "passive participant".
The "agent" claims the turnto speak at any given moment, and plays an active role.
The "passive participant"does not claim the turn to speak at any given moment.Considering ~o states for each participant, there are four possible conversationalstates.
However, we only consider ~o states: "agent"-- "passive participant" and"passive part ic ipant"--  "agent".
(The other ~o states represent in some sense afailure of dialogue.
)The BNF specification of the grammar syntax above the discourse level, presentedbelow, characterizes only th~ class of dialogues considered.< converse ) --~ (openingl) , (converse~(converse > --~ (opening2> , <conversel>(conversel) --~ (converse2), (continue)(converse2) --~ <dialogue}< converse2> --~ <~nologue),A FORMALISM FOR THE sTRUCTURAL ANALYSIS OF DIALOGUES 65<converse3) --~ <dialoguel>(converse4) ._~ ( decide>, <dialogue>< converse5> --~ (dialogue2 > , <course>< converse6> --~ (ask-author>,(ask-publisher>,< ask-date-of-publ ication > ,< ask-document-type)(converse7> --) <converse2> , <dialogue>,< converse2>(continue) --~ <conversel>( continue> --> <suspend >, <converse~< continue> --, (close)< dialogue> --> <user >, <program>(dialoguel> --> <p-questionl> , <dialogue>?
(dialogue2> --> <p-question2> , <dialpgue><dialogue3> ---> <p-question3> , <dialogue><course> --~ <converse4>( course> --~ (refusal> , (converse4>(course> --~ (change>course> -~ (dialogue3> , <refusal><course> -~ <return> , <converse3>user~ --~ <question>< user> ---) <fact~(user> --* <comma~d( user~ -- , ,  (answer>< program~ ~ ( response><program> --~ <response> , <converse3>~program> --~ <response> , < converse5 >~program> --~ ~response> , <converse6>< program> --* <response> , <converse7>Let us consider only the f i r s t  few rules in order to make expl ic i t  their meaii~g.Ageneral dialogue, 'converse', is defined as an opening following by a sub-dialoguewhich may be followed by a sub-dialogue or closed by user in i t ia t ive .
The user mayalso suspend t~llporarily the dialogue without affecting i t .
This feature just i f iesthe existence of two kinds of opening: one for the dialogue start and the otherfor the re-start.
A dialogue is simply a sequence of exchanges or monologue, or isfollowed by several models of dialogue.
For example, dialogue on the classificatimof a document is handled by dialogue model 'converse5', which is defined by rules'course'.
These rules define several kinds of possible courses during the interac-tion.
Dialogue on adding new documents is handled by dialogue model 'converse6',which is served by a set of exchange patterns : -  a sequence of pre-defined programquestions whose order may be altered by user.
Some feature of a sentence, togetherwith the current context, can trigger a hypothesis that an instance of some parti-cular model or pattern is being conveyed.
All this means that the program can copewith user changes of mind, single or multiple data, provided in any order, and canavoid asking questions whose answerswere provided either impl ic i t ly or expl ic i t lyat some earl ier time.We use rules of interpretation, below the discourse level.
The rules of interpretation deal with what the user does, eg, requests (statements, questions and commands)and answers.
Other rules deal with what the program does, eg, answers, questions,and remarks (comments and agreements).
Here are, for example, thne'e of these r~1~s:Rule-- I f  the user makes a statement, the program interprets i t  as a request forconfirmation.Rule-- I f  the user asks a closed question (form Q-S, where S means the statementcorresponding to the question) and the program responds with an existential E(yes//no), then the program is understood as answering the user with the tratement E-S.Ru le - - I f  the user issues a command, then the program interprets i t  as a valid re-quest for an action A only i f  the following conditions hold:66 H. COELHOthe request is ended with an exclamation mark, and action A is classifying a do-cument, generating a category, adding data items and, deleting data items.The f i rst  two actions also cover the general purpose of gathering informationthrough a referent: the referenced document or the classification.DIALOGUE ORGANIZATIONSTRUCTURES AND LEVELSAny original natural language sentence is parsed by a cascade of two DCG's.
Thef i rst  DCG, above the discourse level, represents the syntactic information aboutdialogue form (exchange patterns and dialogue models) and is closely coupled to aset of scenarios which represent the pragmatic information about the task domain(a collection of situation descriptions).
The second DCG, on the sentence level,represents the syntatic information about sentence form and the general semanticinformation.Let us observe in more detail the main dialogue forms, engineered and manipulatedby the f i rs t  DCG in order to build up the overall skeleton of the dialogue hJstor~An exchange pattern (eg.
'dialogue') is a pre-defined exchange between the programand the user.
I t  is defined by a name and a number, and provided by a message andthe number of the following contribution.
I t  consists of a question of an expectedform, followed by a simple dialogue.
The question is constructed with the value ofthe message (eg.
a proper noun).
The simple dialogue is the standard way to interpret user contributions: the question-answer pair.
As regards exchange patterns,the user contribution expected is not always an answer: the user also question theprogram, and by doing so a new dialogue is nested in the previous ..ne.
Programquestions are motivated by the content of user request.
For exemple, interrogating'the name of a new category' and 'under what categories may i t  be placed' are ge-nerated when the user wants to create a new category in thec~ssification system.The exchange pattern is called by the grammar of dialogues through its name andnumber.
In case of non acceptance of the program question by the user, the init iative for restarting the dialogue belongs to the user.
But the new dialogue may b'enested in the previous dialogue, as often occurs in the process of classifying newdocuments.A dialogue model (eg.
'converse') is a suite of unconstrained exchanges betweenthe program and the user.
I t  generates detailed expectations about the next contribution, by having an ordering for calling exchange patterns which may be al tered-by user.
The user may give several answe~which need not be ordered.
Also, he maymodify his previous answers.
The program uses the success or failure of is predictions to determine what role the user contribution plays in the dialogue.
Whene~ra dialogue model is activated, an appropriate exchange pattern is invoked,and theprogram poses a question to the user and interprets the user response.
I f  a failureoccurs, the program is able to come back to the same topic.
For example, duringthe classification of a documents the user may oppose the program and request in-formation about the location of a category in the classification system.
And, theprogram only accepts three t i t les of documents,~nowD to its data base, and accor-ding to its classification method.
Therefore, i t  goes on asking the user t i l l  i tattains that l imit, and skips any unknown t i t le .
But i f  the user gives up, theprogram restarts a new dialogue.
These features are implemented either by usingrecursion or backtracking.
R~cursion is the abi l i ty of a procedure to contain aprocedure call to another copy of itself .
The declaration of the procedure, for thedialogue model in charge of the classification process, contains a procedure callwhich matches the name of another copy of the same procedure declaration.
Counterscontrol the process of recursion during the program asking for references in theclassification process.
And, an handling device deals with contradictions arisingwhen a new document is archived.
Numbers (l and O) are assigned according toexisting contradiction or otherwise, and summed over the facts.
I f  the result isA FORMALISM FOR THE STRUCTURAL ANALYSIS OF DIALOGUES 67non-zero, a failure aries forcing backtracking and the restarting of the process.In the course of conversing, the program remembers the events, by storing conver-sational states containing the name of the participant, the number of the contri-bution, and the active information, such as questions or answers.
This knowledgeabout the current dialogue history and skeleton is maintained in order to be servedin any specific situation or instance to which i t  applies.
In fact, i t  is the sup-port for the organizational abi l i ty  of the grammar of dialogues .The example belowi l lustrate this abi l i ty.
Consider the segment of a nested dialogue, presented infigure 2, concerning the classification of a document.This dialogue presents a sub--dialogue and an interruption due to the user.
The sub-dialogue corresponds to adialogue model, which organizes interactions concerning the implementation of thedocument classification method.
The interruption is presented as an exchange,nestedin the sub-dialogue.
This conversational description shows the organization, thedepth of nesting, the change of in i t ia t ive ,  and the levels of the dialogue (one forthe ordinary tdalogue; the other for the particular dialogue model; and, the lastone for the interruption).Consider another example of a dialogue (numbers appended to the natural languagecontributions correspond to the conversational states).
(I) u-Crie Prolog~ p-Prolog e conhecido~(2) u-Quero criar uma categoria~(3) p-Por favor, qual o home da novacategoria?u-"Pattern recognition".p-"Pattern recognition" e desonhecida~(4) Pot favor, debaixo de que categoriaa pretende inserir?u-"Machine vision".p-"Machine vision" ~ conhecida~(5) A nova categoria ficou inserida nosistema de classifica9ao e recebeuo numero 2141.E que mais?The history of this dialogue is:(Create Prolog~)(Prolog is known~)(I want to generate a category,)Please, what is the name of the newcategory?
)"Pattern recognition" is unknown~Please, under what category do youwant to insert it?
)"Machine vision" is known~The new category has been inserted inthe classification system and received2141 as a number.And what else?
)T=I <u, 1 ,cl I> ,<p,2 ,a21'~,<u ,2 ,c32~ ,< p,3,q43>,< u ,3,a532, < p,4,r64> ,<p,4,q74>,< u ,4,  a84) ,t, p, 2 ,a92>}sce~orio Cp .
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
\]?
,,c~Io53 1l i: .
.
.
.
.
.
.
.
.
.
.
.
.
~, .
.
.
.
.
.
.
.
.
.
.
.
\ ] i  ~-~ '~I r - remark.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
~ c-comrnar~Dialcx3ue~ ~ & 2 are excr~r~ge i:~t~-cnsol scc.,l~no C:que~t~o~-~s~r  pars  I( q43 ,  053  ),(r(~4 ~q74,0B4)}Fig.
3Conversat iona l  descr ip t ionThe program knows that  the  f i r s t  user  cont r ibut ion ,  a command,Ku , l , c l l>  , opens adialogue composed of a simple question-answer pair (conversational state I).
Thed ia logue  goes on w i th  another  user  command,<u,2 ,c32>,  which invokes  a d ia logue68 H. COELHOmodel for creating new categories.
This dialogue ~ode\] calls two exchange patterns,and the dialogue is closed with the program answer<p,2,a92>.
Note that this lastevent has the same conversational state number (2) as the event invoking the dia-logue model.
This information, shared by the program and one of i ts users, helpsthe program to decide on what to do and how to proceed.
I t  chooses its course ofaction by inspecting previous user decisions, through the remembering mechanism.The dialogue model, responsible for gathering information about new documents,exemplifies the use of backtracking.
I f  the user changes his mind at any stage ofthe dialogue, the program backtracks to follow up the consequences of the new in-formation.
Supplied facts contradicting those already known are detected in theimmediate interpretation of the user's input, and when this interpretation iscomplete, a failure leading to the restart of interpretation at a previous leveloccurs i f  a contradiction has been found.
This mechanism overrides the repetitionof unanswered questions, and skips questions by recognizing the content and formof the user's answers.SCENARIOSScenarios are sets of expectations and presumptions regarding a certain type ofsituation, They are of the form " i f  <situation description> then expect <situationdescr ipt ion)" ,  or " i f  <situation description~ is a satisfied then do <actiondescription>".
Situation and action descriptions are triggered by verbs.
Scenariosare used in TUGA \ [ l~ as recognition devices for classifying and identifying situa-tions in a dialogue, and they call the exchange patterns and organize their invo-cation.
All the embedded knowledge mbedded in the scenarios covers the abi l i ty.- to derive questions from relevant information or from the logical consequencesof the information that is known about the questioned topic combined with generalknowledge of the l ibrary world, and- to handle the user's answersTUGA is a program able to play two roles in the l ibrary world.I t  acts as a l ibrarian and as a l ibrary's secretary.Possible events in the l ibrary world are grouped into the following scenarios:Scenario A - information transactionSubscenario Al - data output controlSubscenario A2 - dictionary extensionsScenario B - addition and/or deletion of data itemsSubscenario Bl - addition of new documentsSubscenario B2 - addition of news categoriesSubscenario B3 - deletion of existing documentsSubscenario B4 - deletion of classification categoriesScenario C - classification category generationScenario D - document classificationScenarios A, B and C may occur inside scenario D. Scenarios B2 and B4 may occurinside scenario C.Exchange patterns are classified according to their use in these scenarios, asshown in the following figure.
The classification is made possible thnpugh twoof their arguments: name and number.This taxonomy for situation recognition is made available during a dialogue.
I tcontains the pragmatic knowledge of the task domain, and supports the p, ogramab i l i ty  to converse with users in a more clever way, when put aside the gi-..~marof dialogues.A FORMALISM FOR THE STRUCTURAL ANALYSIS OF DIALOGUES 69A nand l~A~ unoccep~ os~nq ~ ~e unke~wn ~d is o pr0p~ .~n, ~mences~w, n9 ~bout ~ u ,*n~ ~ra  don~,nask,rig o~n~ ~ or~ p~bt,~eradd , t~mB2 systemo~er~ ~n~ me ~ ca~go~ no~eCa~,r~ me r~e~ UUerne?tx~ asking tDe ~ to ?or~ ~s  c ~~ user~ chO.ce ~or ~oc~t  co~or~sFig.
4Classification of exchange patternsCONCLUSIONSAn intell igent automated conversationalist may attempt to construct a process ofparticipation by analysing the other's process, ie, use conversational procedures,develop multiple conversations, f ix the skeleton of the dialogue history, build upa conversational context space and appeal to i t  as a guider for the calculation ofresponses and disambiguation tactics.
We are approaching the complexity of thesephenomena by-developing an evolving framework for conversational sequencing struc-ture analysis, allowing users to insert sequences and abruptly shift to other topiGand the program to recognize user turns at conversing.
However, our framework isnot completed and some more work is needed to cover, for example, the implicit conversational mode or internal dialogue.
This mode constitutes the background of th'~explicit flow of what is declared, tackled by the present work.
Each participant,before uttering a sentence, discusses with himself to find the best appropriate utterance to match the opponent one.
By doing this, the participant executes severaTmental constructions, like deductions, presupositions, analogies or associations,and compares the result to his beliefs in order to discover the intention of theother.
A part of this extension, i t  would also be required to augment the comple-xity of the conversational context space by structuring i t ,  because context playsthe role of a model directing the reasoning of participants in what concerns theunderstanding of a sentence.
Such improvement of embedding the function and the useof context into a program would also increase its interactional power.
Finally,thepragmatic omponent needs further improvement in order to allow communication (pas-sing messages) among scenarios.References~\]  Coelho, H. "A program conversing in Portuguese providing a library service",PhD Thesis, Univ.
of Edinburgh, 1979~2\] Pereira, F.C.N.
;Warren, D.H.D.
"Definite clause grammars with augmented tran-sition networks", Dept.
of AI Research report n958, Univ.
of Edinburgh, 1978.\[3\] Pereira, L.M.
; Pereira, F.C.N.
; Warren, D.H.D.
"User's guide to DECsystem-lOProlog", LNEC, 1978.~4\] Sacks,H.
; Schegloff, E.; Jefferson, G. "A simple systematics for the organi-zation of turn-taking for conversation", Language Vol.
50 n9 4, 1974.
