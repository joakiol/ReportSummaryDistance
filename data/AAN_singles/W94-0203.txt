Constraints, Exceptions and RepresentationsT.
Mark  E l l i sonCentre  for Cognit ive Science, Univers i ty of Ed inburgh2 Buccleuch Pl., Ed inburgh EH8 9LW, U.K.raarke@cogsc?, ed.
ac .
ukAbst ractThis paper shows that default-based phonologies havethe potential to capture morphophonological generali-sations which cannot be captured by non-default theo-ries.
In achieving this result, I offer a characterisationof Underspecification Theory and Optimality Theoryin terms of their methods for ordering defaults.
Theresult means that machine learning techniques for bull-(ling declm'ative analyses may not provide an adequateb~is for morphol)honological analysis.In t roduct ionIn other work, I have shown (EUison 1992, forthcoming)that interesting phonological constraints can be learneddespite the presence of exceptions.
Each of these con-straints imposes a limit the set of possible words at acommon level of repre~sentation.
In this paper, I consi-der possible limits to the usefulness of these constraintsin representing morphemes and finding concise repre-sentations of lexical entries.In order to compare a strictly declarative formalismwith other constraint formalisms, a common formal en-vironment must be established.
Using model theoryto establish the relationship between description andobject, and then a modal formalism to define the struc-tures to which constraints apply, we can compare thedifferent effects of strict constraints and defaults.
Inparticular, a strict declarative approach can be com-pared with other constraint frameworks uch as Un-derspecification Theory (UT) (Archangeli, 1984) and()ptimality Theory (OT) (Prince & Smolensky, 1993).This discussion is followed in tim latter part of the pa-l)or by consideration of the possibility of using machinelearning to constraint systems that use defaults.Morphophono logyTo structure the disct~ssion, I offer four desiderata formorphophonology.
The first is that the morphophono-logy must allow concise lexical representations.
Whereinformation is predictable, it should not have to be spe-cified in the lexicon.
This desideratum is not a matterof empirical accuracy, rather one of scientific aesthetics.For example, English contains no front rounded vowels,so a vowel which is marked as front in the lexicon neednot be marked as unrounded.The second desideratum is that the morphophono-logy should allow generalisations to be made over pho-nologically conditioned aUomorphs.
For example, a re-presentation f the Turkish plural affixes -lar, -ler, thatuses the feature \[:t:front\] is superior to a segmental re-presentation because a single representation forthe twoallomorphs can be achieved by not specifying the valuefor this feature in the representation f the morph.The third desideratum requires ttlat the specific allo-morphs be recoverable from the generalisations.
I f - larand -ler are generalised in a single representation, suchas -IAr, then the morphophonology should make therecovery of the allomorphs in the correct environmentspossible.The final desideratum is, like the first, a matter ofscientific aesthetics: a priori abstractions should not beused in an analysis any more than is necessary.
Forexample, the feature \[:t:front\] should not be used in theanalysis of a language unless it is motivated by structu-res in the language itself.
This desideratum ay con-flict with the first: a priori features may result in a moreconcise representation.These four desiderata provide aframework for evalua-ting the relative merits of monostratal systems of pho-nological constraints with other current theories uchas Underspecification Theory and Optimality Theory.Mode l  Theory  and  Moda l  Log icA fundamental distinction in any formal account is thedistinction between description and object.
Failure tomake the distinction (:an lead, at best, to confusion,and, at worst, to paradoxes, uch as Russell's Paradox.Because this theory is talking about theories, it mustmake the distinction explicitly by formalising the relati-onship between description and object.
This distinctionis pursued in below and developed into a formalism forcomplex structures in the following section.Mode l  theoryIn model theory, the meaning of a statement in a formall~mguage is provided by means of an INTERPRETATION25FUNCTION which maps the statement onto the set of(Jbje(:ts for which the statement is true.
If L is a lan-guage and W is a set of .t)jects, and P(W) is the setof all snl)sets of W, then the interpretation function Ima.ps L onto P(W):I : L ~ ~(W).As an example, suppose & is a horse, ~ is a ferretand q) is a large stone, and that these are the objects inour world.
We might define a language L0 containingthe terms big, animate, slow and human, and assignthese terms the interpretations in (1).
(1) Term T Interpretation I0(T)big {a, V}animate {$, ~ }slow { ~ , V}human {}This language can be expanded to include the logi-cal operations of conjunction, disjunction and negation.These are provided a semantics by combining the se-mantics of the terms they apply to.
(2) Term Interpretationl ?
io Io(l)X A Y I (X)  N I(Y)X VY  I (X) UI (Y)-~x w \ i (x)With this interpretation function, we can determinethat big A animate A slow is a CONTRADICTION havinga null interpretation i  W, while big V slow is a TAUTO-LOGY as I(big V slow) is the same as I(big) U I(slow)which equals W.The term PREDICATE will be used to describe a sta-tement in a language which has a well-defined interpre-tation.Moda l  logicsModel theory as defined in section applies only to do-mains with atomic, unstructured objects.
More com-plex structures can be captured by extending the theoryof models to refer to different worlds and the relati-onships between them.
Such a complex of worlds andrelations is called a MODAL logic.A modal theory consists of a universe U is a set ofworlds Wj,jew, called TYPES, together with a set of re-lations Rk,kET?
: Wdom( j )  ~ Wcod(k ) from one worldto another.
Types may contain other types, and whe-never a type is so contained, it defines a characteristicrelation which selects elements of that subtype from thelarger type.
A language for this universe is more com-plex as well, needing a function w : L ---+ I to indicatethe type W~( 0 in which any given expression l is to beinterpreted.
A MODAL OPERATOR rk is a special sym-I)ol in tile language which is interpreted as the relationRk.Mo(hfl operators can combine with predicates to con-struct new predi(:atcs.
If ?
is a predicate, rk is amodal operator and w(?)
= cod(k) then we can de-fine am interpretation, I(rk?)
C Wdom(k) , for rk?,nanmly R~ I\[I(?)\].
l~lrthcrmore, we define the typeof the expression to be the (lomain of the fimctor:w(rk?)
= dom(k).
The interpretation of any well-formed sentence in this language is a sul)set of the cor-responding world I(?)
C_ W~(?
).From here on, we will assume that tile Rk,ken arefunctions, and call the corresponding operators of thelanguage FUNCTORS.
Functors implify the interpreta-tion of predicates: inverses of functions preserve inters-ection, so functors distribute over conjunction as wellas disjunction.A path equation defines a predicate which selects ent-ities that have the same result when passed throughtwo different sequences of functions.
Suppose that pand q are two sequences of functors with the same firstdomain and last codomain, and that the compositionof the corresponding sequences of functions are P andQ respectively.
Then the interpretation of p = q isthe set of entities x in the common domain such thatP(x) = Q(x).Suppose the universe U consists of seven worlds, a,b, c, alphabet, nullstring, nannullstring and string.Some of these worlds are built from others: alphabet isthe disjoint union of a, b and c, while string is the dis-joint union of nullstring and nannuUstring.
Linkingthese types are the three functors hown in (3).
(3) right : nonnullstring ~ stringleft : nonnullstring ~ stringhead : nonnullstring ~ alphabetWe subject hese definitions to the path equation thatright left x and left  right x equal x for all non-nullstrings x .A predicate in the corresponding modal language,using only the characteristic predicates of the typesand the functors, might be: head a meaning the setof non-null strings whose first letter is a, left  head a Aright head c to specify the context a__c, or head c Aright(head a A right(head bA right null)).By the use of functors, we can move from one typeto another, or from one item in a type to another itemin the same type.
Metaphorically, we will call the ty-pes joined by fimctors LOCATIONS, particularly whenthe type instances are only distinguished by flmctorialrelationships with other types.In a complex structure, like a string, the functors pro-vide a method for interrogating nearby parts of the thestructure within a predicate applying at a given posi-tion.
By an appropriate choice of types and functors,complex feature structures and/or non-linear epresen-tations can be defined.
For the sake of simplicity, thediscussion in the remainder of this paper will be restric-ted to strings constructed using the types and functorsdefined above.26IConst ra in ts  in a moda l  theoryIn model-theoretic terms, a constraint is any well-formed expression in the language to which an inter-pretation is attached.
Phonologists also use the term,usually intending universal application.
It will be usedhere for a single predicate applying at a particular lo-cation in structure.As an exmnple of a constraint, consider front vowelharmony in Turkish t. Informally, we can write this con-straint as if the last vowel was front, so is the currentone.
In the format of a phonological rule, this mightbe written as \[+front\]C*J~ ~ \[+front\], where C* standsfor zero or more consonants.
F is used to represent thedisjunction of all of the front vowels.
(4) Left  = ~ (left head C h left Left)Vleft  head FConstraint = head F V --,LeftIn (4) the left context is abstracted into a named pre-dicate called Left.
This is because the left contextiterates over consonants.
This iteration appears in thedefinition of Lef t  as the recursive call: if the imme-diate left segment is a consonant, move left and checkagain.
Left  succeeds immediately if the immediate leftsegment is a front vowel.Note the the predicate defined here imposes no re-strictions at all on where it applies except hat it be anon-null string.
On the other hand, it only applies atthe current location in structure.
The relationship bet-wecn constraints and locations is the topic of the nextsection; first in the discussion of features, and then inthe prioritisation of default feature assignment.Features, Underspeeifieation andDefaultsThe question ariscs as" to what basic predicates shouldbe used in defining the lexical specification of phono-logical items.
Lexical specifications in phonology aretraditionally built from binary features.
While the thefeature values usually correspond to a priori predica-tes, there is no reason why a feature cannot be defi-ned for an arbitrary predicate: ?
defining the feature\[+?\] everywhere that ?
is true and \[-?\] everywherethat ?
is false.
This section includes discussion of twokinds of feature system here: A PRIORI and EXCEPTION-MARKING.A pr io r i  featuresTraditionally, the choice of features is made a priori(an A Priori Feature System - -  APFS).
This does notmean that phonologists do not select their feature setsto suit their problems, rather that they do not approveof doing so.
Instead, acoustic or articulatory groundst "l~lrkish Ires eight vowels, a, e, i the back version of i, oand its front correlate 6, and u and the corresponding frontvowel /i.are sought for a universal set of features which will servefor all analyses.Furthermore, features in traditional systems are con-text free.
The predicates defining the features do notmake reference to neighbouring structures, such as thesegment o the right or the left, in order to determinethe feature polarity in a given position.
Feature va-lues depend only on the segment at that position in thestring.Continuing to draw our examples from Turkish vo-wels, front can be thought of as the predicate head (eVi V 6 V fi).
This predicate is context-free: there are nouses of the functors left  and right in the definition.We can define the feature values \[+front\] and \[-front\]as holding at each non-null position in the string wherefront is true and false respectively.Except ion -mark ing  featuresA more adventurous feature system brings context o-gether with the local segmental value to define its fea-tures.
The question arises as to which predicates fromthis wider range should be chosen.
The principle ofEpicurus (Asmis, 1984) suggests that no choice shouldbe made until direct evidence is adduced.
In this do-main the evidence comes in the form of a constraint onphonological structure.
So, if it appears that ?
is aninteresting constraint on phonological structure, then\[=t=?\] should be used as a feature.
This choice is less adhoc than introducing new predicates a priori.As an example of this kind of feature assignment, con-sider the constraint (4) applied to the word seviyorurnI like (cts), which has the structure shown in (5).mdl  nut!T T .
.
.
.n- ,  n n ~ i~n n-n ~ n-u n.n 6 - - - r  , .
,  n .
,  ,*n(5) .
.
.
.
.
, .
.
.
.
.
.
.
.The features assigned by the constraint are shown in(6).
For clarity, the segments and head functors are notshown.
To make the clearer, the positive and negativefeature marks are shown as ticks and crosses respec-tively.nl.dl mdlT'* T"I?N jZ .
j  t rj-pZ i i - f /  zl.n ~ r l - i f  k'fs IonIn only one case does this feature assign a negative va-lue, ie.
there is only one exception to the constraint inthis word.
This exception is the occurrence of the backvowel o after the front vowel i.The segments themselves provide non-arbitrarycontext-free predicates which can be used as features.For example, we could define a feature \[:t:a\] which istrue if and only if head a is true.These kind of feature systems are called EXCEPTION-MARKING FEATURE SYSTEMS (EMFSs) becm~se it is ex-ceptions to identified constraints which define all butthe most basic features.27Underspec i f i ca t ionIn EMFSs the number of features is likely to be muchb~rger than in traditional systems.
On the other hand,each of the features correspond to either a segment ora phonological constraint or a segment, so the systemas a whole is ontologically simpler than a APFS.
Ne-vertheless, unless some method of compression is used,EMFSs will demand verbose lexical forms.
Two typesof compression are familiar to, though seldom distin-guished by, phonologists: redundancy and defaults 2.
Interms of model theory the distinction is clear.
Redun-dancy rules have no effect on the interpretation functionI, while defaults modify it.
This section discusses un-derspecification that eliminates redundancy.
The nextsection discusses defaults.A predicate ?
is FULLY SPECIFIED FOR another pre-dicate ?
if either ?
is more specific than ?, that is,I(?)
= I (?
)N I (? )
,  or ?
contradicts ?, I (?
)f ' l I (?)
= 0.A FULLY SPECIFIED predicate is one which is fully spe-cified for all other predicates.Intuitively, a fully specified predicate is one which isindivisible.
There is no extra restriction which can beimposed which will make it more specific; it can onlybe contradicted.
If ?
is a fully specified predicate, thenthere is no point in adding further information to it.If the interpretation function I is computable, theneach feature value at each position in a fully-specifiedstructure can be calculated.
If the conjunction of thefeature predicate with the structure has a null inter-pretation, then the feature is false, otherwise it is true.Consequently, so long as a predicate remains fully speci-fied, any feature specifications which are removed fromit can be recovered.In APFSs, the constraints associated with featureswill not be very interesting.
When the features are con-textual constraints, however, regaining the full specifi-cation amounts to a process of phonological derivationalbeit one of simultaneous application of constraints.Let us utilise the Turkish vowel set for another exam-pie.
Suppose each vowel is assigned a feature, and sois the vowel harmony constraint, (4).
For each vowel,x\[ marks the presence of the vowel, ?
its absence.
Thesame symbols mean the satisfaction of a constraint orits failure.
Table (7) shows redundant feature specifi-cations with a box around them.
The example wordis severira I like.
Features for the consonants are notshown for the sake of brevity.
(7)2Calder & Bird (1991) make this distinction using the(',l'SG-like terms feature-cooccurrence restrictions (FCi~s);tlld ti~ature-specification defaults (FSDs).s e v e r i mConstraint(4) ~/ y/ ~/ ~/  ~ ~/ .
~/a X X X ~ X ~ Xe X ~ X X X X!
X X X X IX I Xi Z X X X X ~ X0 X X X ~ X Xix x x x x x xx x x \ [x l  x Ix l  x UX X X X X X XNote that this is not the only possible selection of redun-dant specifications.
If the vowel feature specificationsare regarded as primary and non-redundant, then theconstraint feature values can all be regarded as redun-dant.At this point we can define the declarative phonolo-gical formalism we are evaluating.
It is an EMFS withredundant features removed, called Exception Theory(ET).DefaultsIdentifying fully specified predicates allows us to com-press representations by removing predictable specifi-cations from predicates.
This compression method canbe enhanced by modifying the interpretation fimctionso that more predicates are fully specified.A DEFAULT is defined in terms of a special predicatewhich will not need to be specified in individual repre-sentations.
A representation will be conjoined with thedefault predicate unless it is already fully specified forit.There may be a number of default predicates in adefault system.
For this reason the formal definition ofthe effect of defaults on the interpretation function hasthe recursive structure shown in (8):(s)x~,~(?)
= I~(?
)if ?
is fully specified for 6 wrt Ia ,or I~(?)
n Ia(6) otherwise.Each default predicate specifies its action at only oneposition in the structure.
If the default is to apply atmany positions in a structure, more default predicatesmust be added to cover each position in the structure.For example, take the default predicate ~ to be thefeature \[-front\] equivalent o the predicate head (a Vl V o V u).
Let ?
be the partial specification for klzlam(her) girls in which each vowel is underspecified for thefeature front.
Then the interpretation I\[-front\](?)
of?
subject to the default 5 applied at the location acontains only the four forms klzlam, kizlarl, k~zlariand kizlari.
Forms such as kizlem are ruled out bythe default at the a position.To make the same default restriction at the othervowels in the word, we would need to other defaultssuch as left left 5 and right right 6.28Defau l t  o rder ingApplying defaults is not necessarily commutative.
Onedefault may preclude ithe action of another.
Considerthe case where two feature values \[-front\] and \[+front\]are imposed as defaults to the completely unspecifiedpredicate true.
Because true is not fully specified foreither \[-front\] or \[+front\], these defaults add specificati-ons to the predicate: /\[-front\] (true) is I(\[-frontl) whileI\[+front\](true ) is/(\[+front\]).
But \[-front\] is fully speci-fied for \[+front\] (and vice-versa), so adding \[-front\] (or\[-front\]) asa default will have no effect on the interpre-tation.
Thus the two orderings of the defaults produceconflicting interpretations.
(9) I\[+frontll_front\] (irue)= /\[_front\] ( [+frontl)= /(\[+front\])# /({-front\])= I\[+front\] (\[-front!
)= I\[_front\]\[+front\](true)Since the two orderings produce different results, a de-cision about the ordering of defaults must be made.Defau l t  Order ing  SchemesOrder ingDefimlts need to be ordered.
There are a number ofways that the ordering of groups of defaults can be spe-cified.
Three of these are presented here.Order ing  by  featureOne method for ordering defaults is to order the fea-tures they instantiate.
We begin with an ordering onthe features, so that, for example, feature \[+F\] has hig-her priority than feature \[+G\], in symbols \[+F\]~\[+G\].This ordering on features, can then be extended to anordering on defaults pecified with those features.Suppose p and q are paths in string structure, com-posed of sequences of !eft and right functors.
Thenfor any defaults filling in predicates 6 = p\[+F\] ande = q\[+G\], 5 is ordered before e if and only if \[+F\]has higher priority tha n \[+G\].Suppose a language is analysed as imposing a hig-her priority default that front vowels cannot occur af-ter round vowels.
Assume that the defaults insert thefeatures \[+front,\] and \[+round\] in all positions.
Given afi)rm kVtV where V represents the completely unin-stantiated vowel, there are two different instantiationsdepending on the ordering of the two features.
If the\[+fi'ontl default applies first, then the resulting form willbe k\[+front\]t round .
If, on the other hand, the\[+round\] efault applies first, the derived form will bek\[+round\]t [++ front round \] "Order ing  by  fa i lu re  countAnother approach orders defaults instantiating thesame feature in different positions.
The preferred e-fault minimises the number of contradictions to the de-fault feature value.Suppose the default feature value to be ordered is\[+F\].
The failure count default ordering mechanismuses a default predicate for each possible number ofexceptions.
The predicates, 6i, are defined in (10).
(10) 6, = V' right 6j^6k 3+k=i3o = left (nullV6oA\[+F\])$~ = left (nuUV3,^\[+F\]VL_x^\[-F\])go = right (nullV$oA\[+F\])$i = right (nullV6iA\[+F\]V6i-lA\[-F\])If 5i is compatible with a predicate ?, then there is afully-specified restriction on ?
which has no more thani occurrences of \[-F\].
The ordering on the defaults isimposed by requiring that for any feature \[+Fi\], withthe corresponding predicate 6i, 5i has priority over 5jiffi < j.Suppose we already have a number of higher prio-rity constraints on stress: that it can only be assignedonce and in only one position within a syllable, andthat consecutive syllables cannot be stressed.
Collap-sing the representation f syllables into a single symbola for convenience, table (11) gives the assignment ofstress to a number of partially specified representati-ons.
The default feature is \[+Stress\], and this is appliedto minimise the number of failures.
(I1) ?
\[~Strrees\]Af ter  de fau l tsorLocat ion?
\ [ : i :Stress\ ]A f te r  defaultsLocat ion?
\ [~St ress \ ]A f te r  de fau l tsLocation+ + - + + -+ - + - + + -+ + - + + ++- + - + + + -Order ing  by  pos i t ionAnother possibility is to order defaults by how far awayfrom the starting position they specify their features.There are two simple ways of relating distance to prio-rity: closer means higher priority, or further away me-ans higher priority.The formal definitions for this kind of default orde-ring are straightforward.
Suppose, once again, that \[+F\]is the feature value to be filled in by the defaults.
Now,6i will denote the specification of a default value at adistance of i functors to the left, or i to the right of thestarting position.
(12) 5i =6o =~i+ l(~ i+1 =right~iA6i\[+F\] = ~0left 5i V nullright ~i V nullTo prefer near defaults, prefer Ji over 5j when i < j.For far defaults, do the reverse.29Directional default preferences minfic the applicationof phonological rules in a left-to-right or right-to-left di-rection.
Using this ordering, directional defaults (:an re-strict some structures which the counting defaults can-not.
Consider once again the stress assignments by de-faults in table (11).
Instead of simply trying to maxi-mise the number of stresses, assume that the startingposition is the left end of the word, and that near stres-ses are given priority.
Under this system of defaults,the first of the three underspecified representations isrendered more specific, while the other two make thesame restriction.
These results are shown in table (13).
(13) 4 \[:LStre~s\]Af ter  de fau l t sLocat ion?
\[....=Stress\]A f te r  de fau l t sLocat ion,ib \ [~St ress \ ]A f te r  de fau l t sLocat ion?
?
-b - .4-f f  ~r f f  q q q ~ q?
?
-.~ - 4- ?ff q ff ~ q ~?
q ff q?- + + - ?
?Three  Theor iesUnderspec i f i ca t ion  TheoryWithin the framework given above, it is possible todefine a form of Underspecification Theory.
What isdescribed here is not precisely the UnderspecificationTheory of Archangeli (1984), differing in that the struc-tures described are linear and segmental.
This is, ho-wever, not a necessary limitation of the framework, andthe definition of of underspecification theory presentedhere could be applied to autosegmental representationsif suitable types and functors were defined for them.In UT, lexical specifications are made in terms of ana priori fixed set of features.
For example, Archangeli &Pulleyblank (1989) use the four features \[?high\], [?low\],\[?back\] and \[?ATR\] to describe seven Yoruba vowels.All lexical specifications ofvowel quality are assumed toinvolve specifications for some subset of these features.In the lexical specifications, redundant information isleft unmarked.
The Yoruba vowel a does not need tobe marked for any feature other than \[+low\], becausethere is only one vowel which is \[+low\].
Consequently,the feature values \[+back\], [-high\] and \[-ATt~\] are allredundant.In UT, redundant features are are filled by rule.
Spe-cial constraints, such as the Redundancy Rule Orde-ring Constraint (Archangeli, 1984:85) ensure that re-dundancy rules apply before the features they instan-tiate are referred to.
Furthermore, these constraintsapply as often as necessary (Archangeli & Pulleyblank,1989:209-210).
This has the same effect as the auto-matic specification of redundant feature values in the(:urrent framework.Only one type of feature value is ever lexically spe-cified in UT.
Opposite feature values are filled in bydefault rules.
This allows the feature specifications forsome segments to be subspecifications of those for otherse~lne l l tS .Apart from the context-free features used ill lexi-cal specifications, there are also context-sensitive con-straints which are regarded in UT as fiflly-fledged pho-nological rules.
For example, the Yoruba vowel har-mony rule can be summarised as a vowel on the le~tof a \[-ATR\] vowel will also be \[-ATR\].
Regularity tothis constraint in one position may conflict with regula-rity in another position.
In UT, the defaults associatedwith such constraints are ordered by position: Yorubavowel harmony applies right-to-left in the sense thatconstraint applications further from the beginning ofthe word have higher priority.This directionality is not the only ordering of de-faults.
As it happens, there are no \[+high\] vowels inYoruba which are also \[-ATR\].
Consequently, the de-fault rule marking vowels as \[+high\] can conflict withthe default that spreads \[-ATR\].
In tim analysis ofArchangeli & Pulleyblank the \[+high\] default is orderedfirst.
All defaults constructed from the one feature havepriority over all defaults built on the other.The general structure of UT, therefore, is to have an apriori limited set of features for lexical specification anda set of defaults for these features and for constraints.The defaults associated with each feature or constraintare ordered by position.Opt ima l i ty  TheoryOptimality Theory (Prince & Smolensky, 1993) is ap-parently a very different heory, but, when classified interms of its use of defaults, is actually quite similar.In contrast o UT, OT is deliberately vague aboutunderlying representations.
Instead of discussing themanipulation of representations directly, OT refers totheir interpretations, terming them CANDIDATE SETS.Constraints in OT apply exactly like defaults.
If theycan be imposed without resulting in a contradiction(empty candidate set), then they are.
Each constraintimposes a set of defaults, and these are primarily orde-red by an extrinsic ordering placed on the constraints.
Ifany two defaults pertaining to two constraints conflict,the default of the higher order constraint is preferred.As with UT, there is the possibility that tile impo-sition of the the santo constraint at different locationswill conflict.
Rather than ordering these defaults by po-sition, they are ordered by the number of exceptions tothe constraint that they allow.
If there is a candidateform with a certain number of exceptions, all candi-dates with more exceptions will be eliminated by thedefault.
This ordering on defaults is the ORDERING BYFAILURE COUNT described earlier.Except ion  TheoryIn contrast o the other two, more standard, phonolo-gical theories, Exception Theory does not use defaults.In ET, each lexicai form is fully specified, and any fea-ture in it may be removed so long as this property ispreserved.The set of features includes a feature for each seg-nmnt type, and a feature for each constraint.
Whilethis results in a large set of features, underspecificationof redundant features means that many feature specifi-cations may be eliminated.
Nevertheless, there will bemore feature specifications needed in ET than in, forexample, UT, because of the absence of default values.On the other hand, because ET uses no defaults,there is no need for any form of constraint or rule or-dering.
All features have an immediate interpretationthrough the interpretation function, and so a minimumof computation is needed to identify the denotation ofa representation.SummaryTable (14) smnmarises the attributes of the three theo-rivs.
UT and OT are primarily distinguished by the useof different methods to order defaults built from con-straints.
ET differs in that it does not use defaults atall.
(14)UT OT ETA priori features ~ x xDefanlts : y/ ~ xBy Feature primary primary xBy Failure Count x secondary xBy Position secondary x xDiscuss ionEarly in this paper, four desiderata for morphophono-logical theories were introduced.
This section considerswhether using defaults is advantageous with respect othese desiderata.Conc isenessThe first desideratum sought concise lexical representa-tions for morphemes.
Since default-based theories canalso exploit underspecification f redundant feature va-lues, they are at least as concise as non-default theories.If there are ever contrastive feature specifications, thenthey are more concise, allowing one side of the contrastto be left, as a default value to be instantiated.Note that the concept of conciseness which is beingused here is feature.counting, not an information-theoretic measure.
In a direct application of informa-tion theory, contrasting a \[+F\] feature value with whi-tespace carries as much information as contrasting itwith l-F\] 3.Abst rac t ing  and  recover ing  morphemesDefanlts also provide advantages in abstracting mor-pheme representations from which allomorphs can beaIt may be possible, nevertheless, to provide an infor-mation theoretic basis for the feature-counting otion bycouching the feature specifications in a suitable descriptivelanguage.recovered.
As well as making representations moreconcise, using defaults allows more allomorphs to bebrought ogether within a single phonological represen-tation.
As there are no feature changing rules in tileframework, all feature values in the abstract represen-tation must survive to the surface in ca.oh allom,~rl~h.Conversely, the abstract representation can only con-tain feature specifications common to all of the allo-morphs.
So the upper bound on feature specificationsfor the abstract morpheme is the is the intersection ofthe featural specifications for all of the allomorphs ofthe morpheme.As an example, consider four allomorphs of the Tur-kish second person plural possessive suffix!
-mxz, -iniz,-unuz and -ilniiz.
If the vowels are specified with thethree features \[=Lfront\], \[:t:round\] and \[?high\], then theiatersection of the specificati(ms of the four alh)m(~rl~hsis the sequence \[+high\]n\[+high\]z.While it is always possible to form abstract represen-tations by intersecting feature values (the second de-sideratum), there is no guarantee that the allomorphswill be readily recoverable (third desideratum).
If theyare not recoverable, then there is no single featural ge-neralisation which captures the phonological structureof the morphemes.One important question is whether defaults allowrecoverable generalisations about a greater range ofmorphemes than non-default representations.
The an-swer is yes.
If the morphological alternations i  one-dimensional, then there is no difference between havingdefaults and not.
Suppose 5 is a default predicate, and,equally, an exception feature.
If all allomorphs are spe-cified \[+~\] then the abstraction will share this feature,and so the default does not need to apply.
Similarlyif all allomorphs are specified \[-6\], so will the abstractforms be, and the default cannot apply.
If the allomor-phs vary in their specification for \[?5\], then the abstrac-tion will not have include a specification for this feature.Consequently, the default will specify \[+J\] when the cor-rect value is l-J\], and so not fail to produce the correctresult.
In the non-default interpretation, the represen-tation is never fully specified.On the other hand, if the morphological lternationsform a two-dimensional paradigm, then it is possiblethat the paradigm might be decomposable into mor-phemes only with the use of defaults.
Suppose, onceagain, that J is a default predicate and exception fea-ture.
The default feature value is \[+5\].
Suppose further,that there is a paradigm with the feature specificationfor \[:t=5\] shown in (15).
(15) \[-~\] \[0~\]\[-~\] \[-~\] \[-~\]\[0~1 \[-~\] \[+~1The margins how the 'morphemes' extracted by inters-ecting the feature values.
The conjunction of the two\[05\] specifications i not fully specified for 5, and so itsdirect interpretation does not recover the corresponding31component of the paradigm.
If, however, the default\[+6\] is applied, the full specification of the paradigm isrecovered.So it is possible to have paradigms where the morpho-logical components cannot be assigned common phono-logical representations without the use of defaults 4.A pr ior i  spec i f i ca t ionsThe final desideratum is the avoidance of a priori in-formation in a model.
UT makes use of an a priori setof features for lexical specification.
As other generali-sations in the formalism are only visible insofar as theyaffect the values of these features, this limits the pos-sible constraints which can be identified.
This is thereason why vowel harmonies uch as that of Nez Perceare so problematic for phonologistsS: the sets of vowelsused in the harmony do not have a neat definition interms of traditional features.Greater claims about a priori features are made inOT.
Prince & Smolensky (1993:3) state that constraintsare essentially universal and of very general formulation... interlinguistic differences arise from the permutationof constraint-Tunking.
In other words, all of the predica-tes which define features in OT are prior to the analysisof an individual anguage.In ET, very little is assumed a priori.
Any constraintwhich captures interesting phonological generalisationsabout he phonology defines a feature which can be usedto specify structure.
Because ET does not use defaults,it need not be concerned with ordering constraints, onlywith finding them.
Consequently, interlinguistic diffe-rences can only result from distinct sets of constraints.ConclusionIn this paper I have presented a rigorous framework forcharacterising theories that use defaults with phonolo-gical structure.
The framework provides a straightfor-ward characterisation f Underspecification Theory andOptimality Theory in terms of the action of defaults.Using this framework, I have shown that non-defanlttheories cannot be sure of capturing all of the generali-sations which are available to default heories.
For thisreason, the non-default constraints learnt by programssuctl as ttmse described by Ellison (1992, forthconfing),are not as powerful for morphophonological analysis asdefault-based theories.
Furthermore, defaults lead tomore concise, and consequently preferable, lexical re-presentations.4If general predicates are permitted for specifying mor-phemes, rather than just featural specifications, the distin-ction between default and non-default systems disappears.If the entries in the l)aradigm are  ~ij, define o~i to be Vj ~ija.ml fl.j I.o be Ai((ij V "~,~i).
Then, s(, long as |,ll~ t~i are di-si,im:t (wiiich will l)e tim case if the (i.i are all distinct), thenthe i)~tradigm will be fully recoverable without defaults.5Anderson & Durand (1988) discuss some of thisliterature.The question, therefore, is how to enhance the lear-ning algorithms to involve the use of defaults.
The in-troduction of defaults means that constraints must beordered; so learning must not only discover the rightconstraint, it must assign it a priority relative to otherconstraints.
This makes the learning task consideral)lemore complicated.
However difficult a solution for thisproblem is to find, it will be necessary before m~u:hinc-generated analyses can be sure of competing succes-sfully with man-made analyses.AcknowledgementsThis research was funded by the U.K. Science and En-gineering Research Council, under grant GR/G-22084Computational Phonology: A Constraint-Based Ap-proach.
I am grateful to Richard Sproat and MichaelGasser for their comments on an earlier version of thispaper.Re ferencesAnderson, J.
& Durand, J.
(1988).
Vowel harmony andnon-specification i Nez Perce.
In tI.
van der Hulst& N. Smith (Eds.
), Features, Segmental Struclure andHarmony Process (Part II) (pp.
1- 17).
Foris.Archangeli, D. (1984).
Underspecifieation i  YawelmaniPhonology and Morphology.
PhD thesis, MassachusettsInstitute of Technology.Archangeli, D. & Pulleyblank, D. (1989).
Yoruba vowelharmony.
Linguistic Inquiry, 20, 173-217.Asmis, E. (1984).
Epicurus'Scientific Method.
Ithaca, NY:Cornell University Press.Calder, J.
& Bird, S. (1991).
Defaults in underspecificationphonology.
In S. Bird (Ed.
), Declarative Perspectiveson Phonology (pp.
107-125).
University of Edinburgh.Ellison, T. M. (1992).
The Machine Learning of Phono-logical Structure.
PhD thesis, University of WesternAustralia, Perth.Ellison, T. M. (1994).
The iterative learning of phonolo-gical rules.
Technical report (forthcoming), CognitiveScience, University of Edinburgh.Prince, A. S. & Smolensky, P. (1993).
Optimality Theory:Constraint Interaction i  Generative Grammar.
Tech-nical Report 2, Center for Cognitive Science, RutgersUniversity.32
