Name Searching and Information RetrievalPaul Thompson and Christopher C. DozierWest  Group610 Opperman DriveEagan, MN 55123, USAthompson@research.west law.com cdoz ier@westpub.comAbstr~tThe main application of name searching hasbe~ name matching in a database of names.This paper discusses a different application:improving information retrieval through namerecognition.
It investigates name recognitionaccuracy, and the effect on retrievalperformance of indexing and searchingpersonal names differently from non-nameterms in the context of ranked retrieval.
Themain conclusions are: that name recognitionin text can be effective;, that names occurfrequently enough in a variety of domains,including those of legal documents and newsdatabases, to make recognition worthwhile;and that retrieval performance can beimproved using name searching.1 IntroductionName searching, matching, and recognition have beenactive areas of research for a number of years \[Hickey1981, Carroll 1985, Rau 1991, Borgman and Siegfried1992, Paik et al 1993, Hayes 1994, Proceedings 1995,Pfeiffer et al 1996\], but relatively little evaluation ofeither the effectiveness of name searching tools or of theeffect of name recognition on relrieval performance hasbeen published.
In many retrieval contexts being able toretrieve on names, whether personal, institutional,geographic, or other names, is an important capability.Some applications \[ring and Croft 1994\] use namesearching to extend the traditional information retrievalparadigm.
To date, however, the main application ofname searching has been in determining whether a nameof interest in a query matches a name in a database ofnames \[Hickey 1981, Hermansen, 1985\].
Two examplesof companies that develop customized name matchingsystems of this sort for business and government clientsare Language Analysis Systems, Inc. and Search SoftwareAmerica.In this paper a different application of name searching isconsidered: using name recognition and matching tosupport ranked retrieval of flee text documents.
Althoughthis application uses name matching techniques muchlike those used m conventional relational database namesearching, and nalne recognition, or tagging, techniquesmuch like those of information extraction applications;text retrieval is sufficiently different from thoseapplications, as to present different problems and issues,calling for different name searching techniques.
Thispaper describes a series of experiments exploring theretrieval application and draws some tentative conclusionsabout it and how it differs from database name matchingand information extraction name recognition applications.This study reviews the accuracy of personal namerecognition as shown in the Named Entity Task of theSixth Message Understanding Conference (MUC-6)\[Proceedings 1995\]; investigates the frequency of personaland other names in case law and in news databasequeries; and finally explores the effect on retrievalperformance of searching for, personal names differentlyfrom other words, through a simulation of namesearching based on proximity searching.
The mainconclusions of this study are: 1) that name recognition itext can be done effectively; 2) that names occurfrequently enough in both texts and queries of legal andnews databases tomake their recognition worthwhile; and3) that name searching can lead to improved retrieval forqueries with personal names.2 Definitions, Problems, and IssuesName searching is a term that has been used in a varietyof ways.
It is useful to define for purposes of this paperwhat is meant by name searching and related terminologyand to describe the application areas for which namesearching systems have been developed.
In theircomprehensive r view article of personal name-matchingapplications Borgman and Siegflied \[1992\] categorizeapplications as being: 1) name atithority control, 2)information retrieval, and 3) duplicate detection.Name-matching in a database context is the process ofcomparing two character strings and determining whetheror not the two strings designate the same entity; in theapplications Borgman and Siegfried considered, the sameperson, but more generally the same institutional,geographical, or other proper-named entities as well.134This determination might be made solely on the basis of adirect comparison of the two strings, or more knowledgemight be used, e.g., models of a) variant spelling orrepresentation f names, b) keying errors, c) phoneticmodels, or d) record-linkage.
That is, if the names to becompared are part of records containing additional fieldedinformation, e.g., age or social security number, thisinformation can be used as additional evidence in thename-matching process.Name-matching assumes that wo character strings havebeen identified which are names and the question is onlywhether they are instances of the same name.
Typicallyit is also important to determine if the names refer to thesame entity.
Another important class of algorithms ineeded for name recognition in applications where thenames are not already manually identified.
Namerecognition is the precess of identifying that a givencharacter string is in fact a name.
Such techniques can beused to extract names from text in the case of aninformation extraction system \[Proceedings 1992, 1995\],or as part of the indexing process for an informationrellieval system.
The same, or similar, techniques can beused at retrieval time when parsing a user's query.Commercial products, such as Carnegie Group'sNameFinder and IsoQuest's NameTag are available tosupport these sorts of applications.Name matching in the context of information retrievaldiffers from name matching in either database or naturallang~ge understanding contexts.
In all three types ofapplications what is ultimately of interest is not that twonames match, whether exactly or approximately, ascharacter strings, but that the entities to which they referare identical.
Such reference resolution is not generallypossible without some additional context.
In the case ofdatabase retrieval additional context is provided by thestructured nature of the data.
A name typically is onefield of a record corresponding to the named entity.
Theother fields, e.g., age, or social security number, can beused to infer that he two names being matched o refer tothe same individual.
In the case of natural anguageunderstanding systems there is linguistic context, as well,perhaps, as domain knowledge representation which canbe used to help infer that the two naraes being matchedrefer to the same individual.
Information retrieval differsfrom both of these types of applications, because it hasneither the structure provided by a database record, northe linguistic depth or domain knowledge representationof the natural language understanding system.
Practicallyname matching becomes a matter of determining whetherthe surface forms of the two names being matched areclose enough as to indicate that it is plausible that theyrefer to the same individual.Name searching can be defined as the process of using aname as part of a query in order to retrieve informationassociated with that name in a database.
Name searching,in the general case, includes both name recognition andname-matching.
If names are not already identified assuch in the database's text records, e.g., when they appearas part of a free text field and have not been previouslytagged as being names, then name recognition is required.Similarly in parsing the query, if the name has not beenidentified as a name by the syntax of the query, then itwill be necessmy to recognize it.
Once names arerecognized in query and database record, thenname-matching algorithms are needed to determinewhether the names are the same, or that they in factdesignate the same individual, e.g., two instances of thelexical entity Judge Smith are the same name, but may notdesignate he same individual.3 The StadyThis study consists of three parts.
The first is a review ofthe literature on the accuracy of name recognition, inparticular the results from the MUC-6 Named Entity Task\[Proceedings 1995\].
The second part of the studymeasures retrieval performance with name searchingsimulated by probabilistic searching with a proximityoperator against a standard test collection with associatedrelevance judgments.
The third part of the study analyzesthe frequency of occurrence of personal and companynames in legal and newspaper text collections andqueries.3.1 Name Recognition AccuracyThe Message Understanding Conferences (MUC) haveevaluated the information extraction performance of theleading extraction systems for several years \[Proceedings1992, 1995\].
Extracting names has always been part ofthe extraction task for MUC, but with MUC-6\[Proceedings 1995\], a specific Named Entity sub-task wasdeveloped to focus exclusively on name extraction fromnews text.
Participating systems were evaluated onpersonal, organiTational, and other name recognition, aswell as on related tasks, such as recognizing time andnumeric expressions.
The leading systems achieved veryhigh accuracy for personal name recognition.1353.2 Evaluation of Name Recognition andRetrieval PerformanceTo measure the gain in retrieval performance that mightbe achieved using name searching, a set of 38 queriesconlaining personal names was developed by a domainexpert and run against West's FED test collection.
TheFED collection consists of 410,883 federal case lawdocuments.
The expert also identified the set of relevantdocuments from the FED collection associated with eachquery.There are several ways that name searching could beimplemented in a document retrieval context.
One waywould be to use name recognition software to tag allpersonal names in the document collection and also inqueries.
Alternatively, the collection could be tagged, butthe user might be required to specify names in the query.Either way, strings designated as being names in thequery would be matched against strings lagged as namesin the text.
Strings tagged as names in the collectionmight also be indexed ifferently than other strings.
Inparticular they might not be stemmed, since presumablythe similarity in meaning assumed to obtain amongstrings stemming to a common stem for general terms,would not apply to names.A different approach to name searching would be toleave the collection unchanged, but to handle namequeries differently from other queries.
A combination ofthese two approaches would also be possible, i. e., taggingnames in text and queries, as well as handling namequeries differently.
The strong personal name recognitionresults from MUC-6 \[Proceedings 1995\] suggest hatapproaches using name lagging are likely to work well.In this study, however, names were not tagged.
Rather,name searching was simulated by probabilistic searchingwith a proximity operator for multiple word names.The 38 queries (shown in the appendix) were runagainst he FED.
Retrieval performance using proximity-based name searching on this test collection, as describedin section 4.2, was compared against a baseline providedby the WIN retrieval algorithm.
WIN is West'sprobabilistic retrieval engine based on the inferencenetwork model (Turtle and Croft 1991).The baseline searches treated each term in the queryas a separate concept.
The relevance score for eachdocument was computed as the sum of the loggedproducts of each term's term frequency(if) and inversedocument frequency (id0.The proximity searches treated non-name terms insame way the baseline searches did.
However, forname terms, the proximity searches used the tf and idfof the proximally ordered name terms.
The proximitysearches computed relevance for names using the tfand idf of occurrences in which the first nameoccurred 2 or fewer word positions before the lastname.
In this way advantage was taken of the fact thatname terms are ordered and resist interruption by non-name terms.For example, in the query Cases involvingjailhouselawyer Joe Woods, the baseline search treated Joe andWoods as independent concepts.
Joe occurred in7,669 documents within the 410,883 document estcollection and had a normalized idf of 0.31.
Woodsoccurred in 18,064 documents and had an idf of 0.24.The ordered proximity search treated Joe Woods as asingle concept in which the terms comprising theconcept were proximally ordered.
Joe +2 Woodsoccurred in 17 documents and had an idf of 0.78.
Bytreating Joe Woods in this manner, the proximitysearch boosted the scores of documents containingreferences to the person Joe Woods and therebyimproved search performance.Our search engine computes the normalized idf,nidf, in the following way:l n_  Nnidf = nInN 'where N = collection size and n = the number ofdocuments containing the term.Table 1 shows the frequency counts and normalized i ffor the concepts in the quely Cases involving jailhouselawyer Joe Woods.Concept Frequency Nidf+2(joe woods) 17 0.78joe 7669 0.31woods 18064 0.24jailhouse 316 0.55lawyer 21251 0.23involving 136201 O.
09cases 241108 0.04Table I.
Term frequencies and normalized inver~document frequency values for a given query1363.3 Name Recognition Case Law CollectionA manually marked up case law name recognition testcollection of 724 test documents was created forevaluating name recognition and name t~equencyanalysis.
Guidelines and example marked up pages fromcase law text were prepared for use by the manualmarkers.
Personal and institutional, or company, nameswere tagged in an SGML-like manner.
Other names,acronyms, and abbreviations were also lagged including:geographic; product; facility; and (court) case names.4 RemitsThe MUC-6 Named Entity Task \[Proceedings 1995\]results show the effectiveness of name recognition fornews text, if not directly for case law text.
Support for thehypothesis that name searching can lead to retrievalperformance improvement was provided by simulatingname searching using a proximity operator, whichrequired that queiy multiple word name terms occurwithin two non-stopwords of each other in the text of adocument The name frequency analyses show that namesoccur frequently enough in case law to merit specialhandling.
In news text and queries names occur withmuch greater f equency (see table 4).4.1 Name Recognition AccuracyThe leading systems on the personal name recognitionportion of the MUC-6 Named Entity Task, e.g., thosedeveloped by SR.A and BBN, each had recall andprecision scores of 980/0, or higher \[Proceedings 1995\].While this performance was achieved on news text, andmay not necessarily generalize toother types of text, it is avery strong result.
It suggests that comparable l vels ofperformance may be achievable for other text types, aswell.
NameTag \[NarneTag 1996\], for example, was ableto obtain this high accuracy using two major knowledgesources: a representation of name structure, e.g., firstname last name; and contextual knowledge about nameoccurrences, e.g., that a corporate xecutive's name oftenco-occurs with a rifle.
These knowledge sources areimplementedin a) name recognition rules consisting of apattern and an action and in b) lexical resources, e.g., partof speech information.4.2 Effect on Retrieval PerformanceFor the 38 queries with personal names (see section3.2) run against he FED collection, proximity-basedname searching led to significant improvement over thebaseline WIN searching.
Table 2 compares results forproximity-based to the baseline.
The first column of table2 shows eleven levels of recall, while the second and thirdcolumns show the precision scores for baseline andproximity-based name searching, respectively, for thecorresponding level of recall.
The final row shows theeleven point averages, and the numbers in parentheses arethe percentage improvement of the proximity-basedapproach over the baseline.
This method ofrecall/precision evaluation is widely used in informationretrieval research, and in particular has been used in theText REtrieval Conferences OREC) \[Harman 1996\].The proximity operator equired that the narue termsoccur within two non-stopwords ofeach other in the textof a documentRecall Precision (38 queries)baseline proximity0 85.2 91.0(+6.9)10 81.9 89.5 (+9.3)20 81.2 88.9 (+9.6)30 80.8 88.1 (+9.0)40 78.5 86.9(+10.6)50 77.1 85.2(+10.5)60 74.8 84.2(+12.6)70 72.1 83.1(+15.3)80 67.5 80.5 (+19.3)90 62.8 74.4 (+18.5)100 61.4 70.9 (+15.5).
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.avg 74.8 83.9 (+12.1)Table 2.
Name Recognition and Retrieval for 38Queries Containing Personal Names4.3 Name Frequencies in the Case LawCollectionThere were 58,585 personal name word tokens in themanually marked set of 720 cases constituting the CaseLaw Collection.
This represents 2.05% of all wordtokens in the collection (not counling stopwords).
Table 3shows counts and percentages for the various types ofnames manually marked in this set of documents.
Table 4shows that percentage of user natural anguage queriescontaining person, company, and other names to severalnews databases over periods of several days in 1995.137Name Tokens Count PercentageInstitution 73,654 2.58Personal 58,585 2.05GeographicProduct12,8001,1132,257 Facility0.450.040.09All Names 148,709 5.20All Tokens 2,858,460 100.00Table 3.
Names and Abbreviations in 720 DocumentCase Law CollectionDatabase Company Person AllWall St. Journal 36.2318 Los Angeles TimesWashinston PostAllnews1534.6513.57 67.8338.2 83.417.3 38.829.3 91.6Table 4.
Percentage ofQueries with Names5 DiscussionThis study suggests that he name recognition accuracy ofname searching software is reasonably good and it seemssafe to assume that that accuracy can be improved usingdomain-specific heuristics and tuning.
For queriescontaining names there was retrieval performanceimprovement using name searching, as simulated byproximity operators.
This study further shows that thefrequency of occurrence of personal, and other names incases is sufficient o warrant heir separate treatment indocument retrieval.The performance improvement obtained by proximitysearching against a collection which had not had namespre-tagged suggests that better retrieval performanceimprovement gains may be possible using simple namematching heuristics if the query name term is known,rather than relying on pre-processed name tagging.Whether pre-tagging the collection with name recognitionsoftware could give even better retrieval performance is anopen research question.
The MUC-6 results imply thatrecognition accuracy is very high, at least for news text,but whether this would help retrieval much, given that hename to be searched is already known, i.e., specified inthe query, is uncertain.This study supports the view that name recognition andmatching in the context of information retrieval is asignificantly different problem from either namesearching, or matching, in relational databases, or namerecognition, or extraction, i.e., tagging names m free text.Most rese~arch and development has focussed on theselatter two applications, rather than information retrieval.The prospect of adaptation for information retrieval of thename recognition and matching techniques developed forthese applications, seems promising, however.
ForBoolean retrieval systems one approach would be to putthe burden of query name recognition on the user byrequiring that the user tag a query term as being apersonal, company, or other name.
Then namerecognition techniques, much like those of informationextraction, could be used to find candidate matchingnames in free text and name matching techniques, muchlike those of database applications, could be used todetermine whether names identified in query and textmatched.For systems uch as WIN, Freestyle, or TargeL of WestPublishing, Lexis-Nexis, and DIALOG, respectively,which take natural language queries as input, theapproach to take is less clear.
Although it would bepossible to have the user, as in the Boolean situation, tagquery terms as names, this would seem to violate theunderlying philosophy of natural anguage input searchsystems, i.e., that the user communicate with the searchengine in ordinary natural language.
If the user does notprovide query name recognition, then the system must doso automatically.
It might be thought that he same queryrecognition software used to recognize names in textcould do the same in queries.
This is possible, but thenature of document and query text is quite different.Much less rich syntactic ontent is usually present inqueries, which also tend to be quite short in commercialonline systems \[Lu and Keefer 1995\].
This greatlychanges the recognition problem, especially for softwarewhich finds patterns in text as the basis of its namerecognition \[Krupka 1995\].
Software which relied muchmore on an exhaustive l xicon of names and variantsmight do better, but could not deal with names whichwere not contained in its lexicon.6 ConclusionsThis paper has discussed name searching in the context ofranked information retrieval.
It has been argued thatwhile the techniques of name recognition and matchingused in database searching and in information extractioncan be adapted to the text retrieval problem, that theretrieval application is sufficiently different from beth ofthe other two applications as to require very differentapproaches.
Existing research or commercial software138can be used as parts of an overall approach to namesearching, but there are major adaptations that need to bemade and gaps in the architecture tobe filled, such as howto recognize names effectively in user queries.
Once aneffective approach for name searching has beendeveloped, there should be large benefits, especially forbusiness areas, such as newspaper databases, where alarge proportion of queries contain personal, company,product, or other names.ReferencesBorgman, Christine L. and Susan L Siegfried.
1992.Getty's Synon~e and its cousins: A survey ofapplications of personal name-matching algorithmsJournal of the American Society of lnjbrrnationScience, 43: 459-476.Carroll, John M. 1985.
What's m a name?
An essay inthe psychology of reJbrence New York: W.H.Freeman.Fuhr, Norbert.
1996.
Object-oriented and databaseconcepts for the design of networked informationretrieval systems In Barker, Ken and Ozsu, M.
Tamar(eds.)
Proceedings of the Fbqh InternationalConJbrence on Information and KnowledgeManagement 96, 12-16 November, Rockville,Maryland, 1996, pages 164-172.Harman, Donna K.
(ed.)
1996.
The Fourth TextREtrieval ConJbrence (TREC-4) NIST SpecialPublication 500-236.Hermansen, John C. 1985 Automatic name searching inlarge data bases of international names Ph.D. thesisGeorgetown UniversityHickey, Thomas B.
1981.
Development ofa probabilisticauthor search and matching technique for retrieval andcreation of bibliographic records OCLC Office ofPlanning and Research.Hayes, Phil 1994.
NameFinder: software that findsnames in text Proceedings RIAO 94, vol.
1, 11-13October, New York, pages 762-774Jing, Ynfeng and W. Bruce Croft.
1994.
An associationthesaurus for information retrieval Proceedings RMO94, vol.
1, 11-13 October, New York, pages 146-160.Krupka, George 1995.
SRA: Description of the SRAsystem as used for MUC-6 Proceedings: Sixth MessageUnderstanding ConJbrence (MUC-6) 6--8 November,Columbia, MD, 1995, Morgan Kaufmann, pages 221-235.Lu, X. Allan and Robert B. Keefer.
1995.
Queffexpansion/reduction a d its impact on retrievaleffectiveness Overview of the Third Text REtrievalConference (TREC-3) In Harman, Donna FL, (ed.
)NIST Special Publication 500-225, pages 231-239.NameTag TM Technical Overview 1996.
IsoQuesttechnical report.Paik, Woojin; Elizabeth Liddy, Edmund Yu, and MaryMcKenna.
1993.
Categorizing and standardizingproper nouns for efficient information retrievalProceedings of the Workshop SIGLEX (The Lexicon)held at the Association for Computational Linguisticsannual conference.Pfeiffer, Ulrich; Thomas Poersch, and Norbert Fuhr.1996.
Retrieval effectiveness of proper name searchmethods lnJbrmation Processing & Management,32:667--679.Proceedings: Fourth Message Understanding CohErence(MUC-4) 16-18 June, McLean, VA, 1992, MorganKaufinamtProceedings."
Sixth Message Understanding ConJbrence(MUC-6) 6-8 Novembex, Columbia, MD, 1995,Morgan Kaufmann.Rau, Lisa F. 1991.
Extracting company names from textProceedings of the Seventh Conjbrence on ArtificialIntelligence Applications.Turtle, Howard R. and W. Bruce Croft.
1991.
Evaluationof an inference network-based retrieval model ACMTransactions on Information Systems, 9:187-222.139AppendixThe 38 queries with names italicized:1.
Cases discussing Dennis Banks and theoccupation at Wounded Knee.2.
Cases mentioning John Ehrlichman.3.
Cases involving the business activities ofFerris Alexander.4.
Cases with Roy Rogers Creasey.5.
Cases mentioning a biography of HowardHughes.6.
Cases involving the jailhouse lawyer, JoeWoods.7.
Testimony by Kenneth Boudreaux.8.
Litigation surrounding Theodore Bundy.9.
Cases from judge Diana Murphyaddressing issues relating to attorney's fees.10.
Cases involving the estate of Elvis Presley.11.
Cases brought by Rudolph Lucien as aprisoner.12.
Cases involving Donald Trump.13.
Cases involving Andrea Dworkin.14.
Cases discussing national security councilstaff member Oliver North's dealings withthe contra rebels.15.
Cases involving PTL founder Jim Bakker.16.
Cases involving Larry Flynt that deal withdefamation.17.
Cases mention Weldon Carmichael as anexpert witness.18.
Cases which refer to the expertise of Dr.lrving Selikoff19.
Holocaust expert Raul Hilberg.20.
Cases referencing the teachings oflrvingYounger.21.
Cases quoting the opinions of JudgeLearned Hand.22.
References to AlJ~ed Hitchcock..23.
Cases involving attorney Bruce Cutler.24.
References to Laurence Tribe.25.
Referencing tothe famous Alger Hisscase.26.
Marvin Mitchelson cases.27.
Cases refemng to general WilliamWestmoreland.28.
Cases mentioning the author StephenKing.29.
References to Oliver Wendell Holmes.30.
Jerry Giesler cases.31.
Bribery cases involving Richard LeFevour.32.
Securities advisor Raymond Dirks.33.
References to King Solomon.34.
Abscam cases involving CongressmanRichard Kelly.35.
References to Julius Rosenberg.36.
Lawsuits involving Vanessa Redgrave.37.
References to the trial of Aaron Burr.38.
Cases mentioning the trial of Sir WalterRaleigh.140
