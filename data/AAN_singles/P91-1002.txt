INCLUSION,  D IS JO INTNESS AND CHOICE:THE LOGIC  OF L INGUIST IC  CLASS IF ICAT IONBob CarpenterComputat iona l  L inguist ics P rogramPh i losophy  Depar tmentCarnegie  Mel lon Un ivers i tyP i t t sburgh ,  PA 15213carp~caesar .
l c l .
cmu.eduCarl PollardLinguist ics  Depar tmentOhio  Sate Un ivers i tyCo lumbus ,  OH 43210po l la rd~hpuxa.
i rcc .oh io -s t  a te .eduAbstractWe investigate the logical structure of conceptsgenerated by conjunction and disjunction overa monotonic multiple inheritance network whereconcept nodes represent linguistic categories andlinks indicate basic inclusion (ISA) and disjoint-hess (ISNOTA) relations.
We model the distinctionbetween primitive and defined concepts as well asbetween closed- and open-world reasoning.
We ap-ply our logical analysis to the sort inheritance andunification system of HPSG and also to classifica-tion in systemic hoice systems.IntroductionOur focus in this paper is a stripped-down mono-tonic inheritance-based knowledge representationsystem which can be applied directly to providea clean declarative semantics for Halliday's sys-temic choice systems (see Winograd 1983, Mel-lish 1988, Kress 1976) and the inheritance moduleof head-driven phrase-structure grammar (HPSG)(Pollard and Sag 1987, Pollard in press).
Our in-heritance networks are constructed from only themost rudimentary primitives: basic concepts andISA and ISNOTA links.
By applying general al-gebraic techniques, we show how to generate ameet semilattice whose nodes correspond to con-sistent conjunctions of basic concepts and wheremeet corresponds to conjunction.
We also showhow to embed this result in a distributive latticewhere the elements correspond to arbitrary con-junctions and disjunctions of basic concepts andwhere meet and join correspond to conjunctionand disjunction, respectively.
While we do notconsider either role- or attribute-based reasoningin this paper, our constructions are directly appli-cable as a front-end for the combined attribute-and concept-based formalisms of Ait-Kaci (1986),Nebel and Smolka (1989), Carpenter (1990), Car-penter, Pollard and Franz (1991) and Pollard (inpress).The fact that terms in distributive lattices havedisjunctive normal forms allows us to factor ourconstruction into two stages: we begin with theconsistent conjunctive concepts generated fromour primitive concepts and then form arbitrarydisjunctions of these conjunctions.
The conjunc-tive construction is useful on its own as its result isa semilattice where meet corresponds to conjunc-tion.
In particular, the conjunctive semilattice isideally suited to conjunctive logics such as thoseemployed for unification, as in HPSG.We will consider the distinction between prim-itive and defined concepts, a well-known distinc-tion expressible in terminological reasoning sys-tems such as KL-ONE (Brachman 1979, Brach-man and Schmolze 1985), and its descendants(such as LOOM (MacGregor" 1988) or CLASSIC(Borgida et al 1989)).
We also tackle the va-riety of closed-world reasoning that is necessaryfor modeling constraint-based grammars uch asHPSG.
A similar form of closed-world reasoningis supported by LOOM with the disjoint-coveringconstruction.One of the benefits of our notion of inheritanceis that it allows us to express the natural seman-tics of both systemic hoice systems and HPSG in-heritance hierarchies using basic concepts and ISAand ISNOTA links.
In particular, we will see howchoice systems correspond to ISNOTA reasoning,multiple choices can be captured in our conjunc-tive construction and how dependent choices canbe represented by inheritance.
One result of ourconstruction will be a demonstration that the sys-temic classification and ttPSG systems are variantgraphical representations of the same kind of un-derlying information regarding inclusion, disjoint-ness and choice.Inheritance NetworksOur inheritance networks are particularly simple,being constructed from basic concepts and twokinds of "inheritance" links.Definit ion 1 ( Inher i tance Network)  Aninheritance net is a tuple (BasConc, ISA,ISNOTA)lohere:?
BasConc: a finite set of basic concepts?
ISA C BasConc x BasConc: the basic inclu-sion relation?
ISNOTA C_ BasConc ?
BasConc: the basic dis-jointness relationThe interpretation of a net is straightforward:each basic concept is thought of as representinga set of empirical objects, where P ISA Q meansthat all P's are Q's and P ISNOTA Q means thatno P's are Q's.
Our primary interest is in thelogical relationships between concepts rather thanin the actual extensions of the concepts them-selves.
This is in accord with standard linguis-tic practice, where the focus is on types of utter-ances rather than utterance tokens.
An exampleof an inheritance network is given in Figure 1.
Wehave followed the standard convention of placingthe more specific elements toward the bottom ofthe network, with arrows indicating the direction-ality of the ISA links (for instance, d ISA f andb ISNOTA C).Y / \d e/ \ / \a b I cFigure 1: Inheritance HierarchyWe can automatically deduce all of the inclusionand disjointness relations that follow from the ba-sic ones (Carpenter and Thomason 1990).Definit ion 2 ( Inclusion/Dis jo intness)  Theinclusion relation mA* C BasConc ?
BasConc isthe smallest such that:?
P ISA* P?
/f P ISA Q and Q ISA* Rthen P ISA* R(Reflexive)(Transitive)The disjointness relation ISNOTA* C BasConc ?BasConc is the smallest such that:?
/f P ISNOTA Q or Q ISNOTA Pthen P ISNOTA* Q?
i f  P ISA* Q and Q ISNOTA* Rthen P ISNOTA* R(Symmetry)(Chaining)These derived inclusion and disjointness relationsexpress all of the information that follows from thebasic relations.
In particular, ISA* is the smallestpre-order extending ISA.
For convenience, we al-low concepts P such that P ISNOTA* P; any suchinconsistent concepts are automatically filteredout by the conjunctive construction.
Similarly,we allow concepts P and Q such that P ISA* Qand Q ISh* P. In this case, P and Q are mergedduring the conjunctive construction so that theybehave identically.ConjunctionsA conjunctive concept is modeled as a set P CBasConc of basic concepts.
A conjunctive conceptP corresponds to the conjunction of the conceptsP E P; an object is a P if and only if it is a P forevery P E P. But arbitrary sets of basic conceptsare not good models for conjunctive concepts; weneed to identify conjunctive concepts which con-vey identical information and also remove thoseconjunctive concepts which are inconsistent.
Weaddress the first issue by requiring conjunctiveconcepts to be closed under inheritance and thesecond by removing any concepts which contain apair of disjoint basic concepts.Definit ion 3 (Conjunct ive  Concept)  A setP C _ BasConc is a conjunctive concept if:?
i f P  E P and P ISA* P' then P'  E P?
no P, P~ E P are such that P ISNOTA* P~Let ConjConc be the set of conjunctive concepts.10There is a natural inclusion or specificity order-ing on our conjunctive concepts; if P C Q thenevery object which can be classified as a Q canalso be classified as a P. The conjunctive conceptsderived from the inheritance net in Figure 1 aredisplayed in Figure 2, where we have P C Q forevery derived "ISA" arc Q ---* P.{}f {Y}{d, f} {e, f} / \ / \{a,d,f} {d,e,f} {c,e,f}{a,d,e,f} {b,d,e,f} {c,d,e,f}T:><f{a,b,d,e,f} {a,c,d,e,f}Figure 2: Conjunctive Concept OrderingDef ined  ConceptsSo far, we have considered only primitive basicconcepts.
A defined basic concept is taken to befully determined by its set of superconcepts (in thegeneral terminological case with roles, restrictionson role values can also contribute to the definitionof a concept (Brachman and Schmolze 1985)).
Inparticular, a defined basic concept P is assumedto carry the same information as the conjunctionof all of the concepts P '  such that P ISA P~.
Forexample, consider the basic concept b in Figure 1.The conjunctive concept {b, d, e, f} is strictly moreinformative than {d, e, f}; the primitiveness of ballows for the possibility that there is informationto be gained from knowing that an object is a bthat can not be gained from knowing that it isboth a d and an e. On the other hand, if weassume that b is defined, then the presence of dand e in a conjunctive concept should ensure thepresence of b, thus eliminating the sets {d,e,f},{c, d, e, f} and {a, d, e, f} from consideration, asthey are equivalent o the conjunctive concepts11{b,d,e,f}, {b,c,d,e,f} and {a,b,d,e,f} respec-tively.
In the primitive case, being a d and an e isa necessary condition for being a b; in the definedcase, being a d and e is also a sufficient conditionfor being a b.In general, suppose that DefConc C_ BasConc isthe subset of defined concepts.
To account for thisnew information, we add the following additionalclause to the conditions that P must satisfy to bea conjunctive concept:(1) If P e DefConc and{P~ \[ P~P~andP IsA*  P '}CPthen P E P.With the example in Figure 1 and the assumptionthat DefConc = {b, f}, we generate the conjunc-tive concepts in Figure 3.
We have adopted thecondition of only displaying the maximally specificprimitive concepts of a conjunctive concept, asthe other basic concepts can be determined fromthese.
Note that the assumption that f ,  the most(}{d} {e}{.}
{d,e} {c}{.,e} {.,c}Figure 3: Conjunctive Construction with DefinedConceptsgeneral basic concept, is defined means that ev-ery conjunctive concept must contain f ,  becausethe set {P \[ f ~ P and f ISA P} is empty andthus a subset of every conjunctive concept.
Thus{} is equivalent to {f} in terms of conjunctive in-formation so that every object is classified as an/.The set of conjunctive concepts ordered by re-verse set inclusion has the pleasant property of be-ing closed under consistent meets, where the meetoperation represents conjunction ("unification").More precisely, a set 79 C ConjConc of conjunc-tive concepts is consistent if there is a conjunctiveconcept P which contains all of the concepts con-tained in the conjunctive concepts in 7 9 so thatU 79 C P. The following theorem states that forevery consistent set 79 of concepts, there is a leastP such that P __D U 7~- This least P is written II 7 9agr/n~lmper\p lusng3rd1st\/genrosefemneuFigure 4: Systemic Choice Networkand called the meet of 7 ) .Theorem 4 The meet in (ConjConc, :D) for a con-sistent set 7 9 C_ ConjConc of conjunctive conceptsis given by:n79-- N{P '  ?
ConjConc I P '  -~ P for each P ?
7 ~}= N{P' ?
Co.jCor,?
I P '  U79}= {P ?
BasConc I for every P '  ?
ConjConc, }pi ~ Up  implies P ?
piProof: This is an immediate consequence of thefact that ConjConc is closed under arbitrary in-tersections.Another way to generate the meet of a collection ofconjunctive concepts is to close their union underinheritance and concept definition.
It should beobserved that joins (intersections), while alwaysexisting, in general represent only informationalgeneralizations, not necessarily disjunctions.Systemic Choice SystemsMellish (1988) showed how the concepts express-ible using a systemic hoice network such as thatfound in Figure 4 can be embedded into the lat-tice of first-order terms with conjunction repre-sented by unification.
Our characterization f theconcepts expressible in a systemic net instead re-lies on the translation of systemic notation intoan inheritance network with IsAand ISNOTA links.The resulting conjunctive concepts correspond tothe concepts that can be expressed in the systemicnet.
An example of a systemic hoice network inthe notation of Mellish (1988), is Figure 4.
Theconnective I, of which there are three in the di-agram, signals disjoint alternatives; for instance,the connective for gender is taken to indicate thata gender must be exactly one of masculine, femi-nine or neuter.
The connective }, of which thereis one before gender, indicates necessary precon-ditions for a choice; in this case, a gender is onlychosen if the number is singular and the personis third.
Finally, the connective {, of which thereis one labeled agr, indicates that a choice for anagreement value requires a choice for both numberand person.We construct an inheritance hierarchy from asystemic network by taking a basic primitive con-cept for every choice in the network.
The choicesin Figure 4 are those items in bold face; the itali-cized items simply label connectives and are onlyfor convenience (alternatively, we could take theitalicized elements to be defined basic concepts).The ISNOTA relation between basic concepts is de-fined so that P ISNOTA Q if P and Q are connectedby the choice connective I.
For example, we have3rd  ISNOTA 1st and msc  ISNOTA neu.
Finally,the ISA relation is defined so that if P is one of thechoices for a connective which has a preconditionP~ attached to it, then we include P ISA P~.
For"instance, we have msc ISA sng and msc ISA 3rd.In Figure 5, we disply the conjunctive concepts12{}{lst} {3rd} {sng} {plu}(lst,sng} {3rd,sng} {lst,plu} {3rd,plu}(3rd,sng,msc} (3rd,sng,fem} {3rd,sng, neu}Figure 5: Systemic Choicesgenerated by the inheritance net stemming fromthe choice system in Figure 4.
A fully determinedchoice in a choice system corresponds to a maxi-mally specific conjunctive concept, of which thereare six in Figure 5.Sort Inheritance in HPSGAn example of an HPSG sort inheritance hierarchywhich represents he same information as the sys-temic choice system in Figure 4, in the notation ofPollard and Sag (1987), is given in Figure 6.
Thebasic principle behind the HPSG notation is thatthe bold elements correspond to basic concepts,while the boxed elements correspond to partitions,s~called because the concepts in a partition areboth pairwise disjoint and exhaustive.
In terms ofan inheritance network, the elements of a partition(those concepts directly below the partition in thediagram) are related by basic ISNOTA links.
Forinstance, we would have plu ISNOTA sing.
Eachpartition may also have dependencies which mustbe fulfilled for the choice to be made; in our case,before an element of the gender partition is chosen,singular must be chosen for number and third forperson.
These dependencies generate our basic IsArelation.
For instance, we must have plu ISA agrand fern ISA sng.
Carrying out this translationof the HPSG notation into an inheritance net pro-duces to the same result as the translation of thesystemic hoice system in Figure 4, thus generat-ing the conjunctive concept hierarchy in Figure 5.In HPSG, it is useful to allow sorts to be de-fined by conjunction.
An example is main Abase A str ict-trans, which classifies the inputsto the passivization lexical rule (Pollard and Sag1987:211).
Translating the example to our sys-tem produces a defined conjunctive concept cor-responding to the conjunction of those three ba-sic concepts.
On the other hand, a primitive sortsuch as aux cannot be defined as the conjunctionof the sorts from which it inherits, namely verband intrans-raising, because auxiliaries are notthe only intransitive raising verbs.
In the hierar-chy in Figure 6, it is most natural to consider thebasic concept agr to be defined rather than prim-itive; it could simply be eliminated with the sameeffect.
However, in the context of a grammar, agrwould be one of many possible basic sorts (othersbeing boolean, verb-form, etc.)
and would thusnot be eliminable.Disjunctive ConceptsWhile meets in the conjunctive concept order-ing represent conjunction, joins (intersections) donot represent disjunction.
For instance, {msc} U{fern} = {msc} U {neu} = {3rd, sng}, but theinformation that an object is masculine or fem-inine is different han the information that it ismasculine or neuter, and more specific than theinformation that it is simply third-singular.
Thegranularity of the original network dramaticallyaffects the disjunctive concepts which can be rep-13agrp lu sng  3rd 1strose fern neuFigure 6: HPSG Inheritance Network Notationresented (see Borgida and Etherington 1989).
Forexample, we could have partitioned gender intoan imate  and neu concepts and then partitionedthe an imate  concept into msc and fern.
Thismove would distinguish the join of msc and fernfrom the join of msc and neu.To complete our study of the logic of sim-ple inheritance, we employ a well-known lattice-theoretic technique for embedding a partial orderinto a distributive lattice; when applied to con-junctive concept hierarchies, the result is a dis-tributive lattice where concepts correspond to ar-bitrary conjunctions and disjunctions of basic con-cepts with joins and meets representing disjunc-tion and conjunction.We model a disjunctive concept as a set 79 CConjConc of conjunctive concepts interpreted is-junctively; an object is classified as a 79 just in caseit can be classified as a P for some P E 79.
As withthe conjunctive concepts, we identify disjunctiveconcepts which convey the same information.
Inthis case, we can add more specific concepts to adisjunctive concept 79 without affecting its infor-mation content.Definit ion 5 (Disjunctive Concepts) A sub-set 7 9 C ConjConc of conjunctive concepts is saidto be a disjunctive concept if whenever P ,Q  EConjConc are such that Q D P and P E 7 9 thenqe79.Let DisjConc be the collection of disjunctive con-cepts.The inclusion ordering between disjunctive con-cepts represents specificity, but this time if 79 C_ Qthen 7 ~ is at least as specific as Q, as Q admitsas many possibilities as 79.
Note that the upper-closed sets of a partial ordering form a distributivelattice when ordered by inclusion, since it is a sub-lattice of a powerset lattice.Proposi t ion 6 The structure (DisjConc, C) is adistributive lattice.Unions (joins) represent disjunctions in inDisjConc.
Likewise, intersections (meets) repre-sent conjunctions.
Furthermore, the function ?that maps a conjunctive concept P to the dis-junctive concept ?
(P) = {P' I P' _D P} is anembedding of ConjConc into DisjConc that pre-serves existing meets, so that ?
(P n P') = ?
(P) n?(P').
Note that this embedding coincides withthe standard embedding of a domain into its up-per (Smyth) powerdomain (Gunter and Scott inpress), with the only difference being that we havereversed the orders of both domains (with the in-formationally more specific elements toward thebottom), as is conventional in inheritance net-works.More than 30 disjunctive concepts result fromthe conjunctive concepts in Figure 3, so we willnot provide a graphic display of the results of thedisjunctive construction applied to a realistic ex-ample (for examples of the general construction,see Davey and Priestley 1990).Closed World ReasoningIn HPSG, Pollard and Sag (1987) partition theconcept sign into two sub-concepts, phrase and14word.
This arrangement generates the conjunc-tive concepts {sign}, {phrase} and {word}.Applying the disjunctive construction to thisresult, though, gives us a disjunctive concept{{word}, {phrase}} which is strictly more infor-mative than {{sign}}.
This distinction demon-strates the open-world nature of our construction;it allows for the possibility of signs which areneither words nor phrases.
This form of open-world reasoning is the standard in terminologi-cal reasoning systems uch as KL-ONE or CLAS-SIC, though LOOM provides a notion of disjoint-covering which provides the kind of closed-worldreasoning we require.In dealing with linguistic grammars, on theother hand, we clearly wish to exclude any expres-sion from signhood that is neither a phrase nor aword; these choices are meant o be exhaustive inagrammar.
The fact that signs can be either wordsor phrases is explicit; what we need is a way tosay that nothing else can be a sign.In general, we require a set ClosConc C BasConcof closed concepts to be specified.
When con-structing the disjunctive concepts, we identify aclosed concept with the disjunction of its imme-diate subconcepts.
In particular, we can replaceevery occurence of a closed concept with the dis-junction of its immediate subconcepts, sothat {P}and {P' \[ P'  IsA P} are identified.
Closed con-cepts are treated ually to defined concepts; a de-fined concept is taken to be the conjunction of itsimmediate superconcepts, while a closed conceptis identified with the disjunction of its immediatesubconcepts.
The simplest way to achieve this ef-fect is to generate the disjunctive concepts fromthe subset of conjunctive concepts which containat least one subconcept of every closed conceptwhich they contain.
This leads to the followingrestriction:(2) 79 E OisjConc only if for every P E 79 andP E P f3 ClosConc there is some P~ E Psuch that P~ ISA PThus if sign E ClosConc, we would only considerthe conjunctive concepts {phrase} and {word};the concept {sign} contains aclosed concept sign,but none of its subconcepts.
Consequently, the set{{sign}} is no longer a disjunctive concept, while{{phrase}, {word}} would be allowed (assumingfor this example that phrase and word are notthemselves closed).In grammar development, i  will often be thecase that all but the maximally specific conceptsare closed.
In this case, the disjunctive construc-tion will produce the boolean algebra with maxi-mally specific onjunctive concepts as atoms.
Suchmaximally specific conjunctive concepts were sim-ply taken as primitive by King (1989), who gener-ated a boolean algebra of types corresponding todisjunctions of maximal concepts.AcknowledgementsWe would like to thank Bob Kasper for invaluablesuggestions.ReferencesA'/t-Kaci, Bassan (1986).
An algebraic seman-tics approach to the effective resolution oftype equations.
Theoretical Computer Sci-ence, 45:293-351.Borgida, Alexander; Brachman, Ronald J.;McGuinness, Deborah L. and Resnick, LoriA.
(1989).
CLASSIC: A structural datamodel for objects.
In Proceedings ofthe SIGMOD International Conference onManagement of Data, Portland, Oregon.Borgida, Alex and Etherington, David W.(1989).
Disjunction in inheritance hierar-chies.
In Proceedings of the First Interna-tional Conference on Principles of Knowl-edge Representation and Reasoning, pages33--43.
Morgan Kanfmann.Brachman, Ronald J.
(1979).
On the episte-mological status of semantic networks.
InFindler, N., editor, Associative Networks:Representation and Use of Knowledge byComputers, pages 3-50.
Academic Press.Brachman, Ronald J. and Schmolze, James G.(1985).
An overview of the KL-ONE knowl-edge representation system.
Cognitive Sci-ence, 9:171-216.Carpenter, Bob (1990).
Typed feature struc-tures: Inheritance, (in)equations and exten-sionality.
In Proceedings of the First Inter-national Workshop on Inheritance in Nat-ural Language Processing, 9-13, Tilburg,The Netherlands.15Carpenter, Bob; Pollard, Carl and Franz, Alex(1991).
The specification and implementa-tion of constraint-based unification gram-mars.
In Proceedings of the Second Inter-national Workshop on Parsing Technology,Cancun, Mexico.Carpenter, Bob and Thomason, Richmond(1990).
Inheritance theory and path-basedreasoning: An introduction.
In Kyburg,Jr., Henry E.; Loui, Ronald P. and Carl-son, Greg N., (ed.
), Defeasible Reasoningand Knowledge Representation, volume 5of Studies in Cognitive Systems, 309-344.Kluwer.Davey, B.A.
and Priestley, H.A.
(1990).
Intro-duction to Lattices and Order.
CambridgeUniversity Press.Flickinger, Daniel; Pollard, Carl J. and Wa-sow, Thomas (1985).
Structure-sharing inlexical representation.
I  Proceedings of the~3rd Annual Conference of the Associationfor Computational Linguistics.Gunter, Carl and Scott, Dana S. (in press).
Se-mantic domains.
In Theoretical ComputerScience.
North-Holland.Kasper, Robert T. (1989).
Unificationand classification: An experiment ininformation-based parsing.
In First Inter-national Workshop on Parsing Technolo-gies, 1-7.
Pittsburgh.King, Paul (1989).
A Logical Formalism forHead-Driven Phrase Structure Grammar.PhD thesis, University of Manchester.Kress, Gunther (ed.)
(1976) Halliday: Systemand Function in Language.
University ofOxford Press.MacGregor, Robert (1988).
A deductive pat-tern matcher.
In Proceedings of the 1988National Conference on Artificial Intelli-gence, pages 403-408, St. Paul, Minnesota.Mellish, Christopher S. (1988).
Implement-ing systemic lassification via unification.Computational Linguistics, 14:40-51.Nebel, Bernhard and Smolka, Gert (1989).Representationa dn reasoning with attribu-tive descriptions.
IWBS Report 81, IBM -Deutschland GmbH, Stuttgart.Pollard, Carl J.
(in press).
Sorts in unification-based grammar and what they mean.
InPinkal, M. and Gregor, B., editors, Unifi-cation in Natural Language Analysis.
MITPress.Pollard, Carl J. and Sag, Ivan A.
(1987).Information-Based Syntax and Semantics:Volume I - Fundamentals, volume 13 ofCSLI Lecture Notes.
Chicago UniversityPress.Winograd, Terry (1983).
Language as a Cogni-tive Process: Volume I - Syntax.
Addison-Wesley.18
