DICTIONARY ORGANIZATION FOR MACHINE TRANSLATION:THE EXPERIENCE AND IMPLICATIONS OFTHEUMIST  JAPANESE PROJECTMary McGee Wood, Elaine Pollard, Heather Horsfall,Natsuko Holden, Brian Chandler.
and Jeremy CarrollCentre for Computational LinguisticsUMIST, P.0.
Box 88Manchester M60 IQD U.K.ABSTRACT ~The organization of a dictionary systemraises significant questions for all naturallanguage processing applications.
We concentratehere on three with specific reference to machinetranslation: the optimum grain-size for lexicalentries, the division of information aboutseparate languages, and the level of abstractionappropriate to the task of translation.
These arediscussed, and the solutions implemented in theUMIST English-Japanese translation project aredescribed and illustrated in detail.The importance of the dictionaries in a machinetranslation systemIn any machine translation system, thedictionaries are of critical importance, from (atleast) two distinct aspects, their content andtheir organization.
The content of thedictionaries must be adequate in both quantity andquality: that is, the vocabulary coverage must beextensive and appropriately selected (cf.
Ritchie1985), and the translation equivalents carefullychosen (cf.
Knowles 1982), if target languageoutput is to be satisfactory or indeed evenpossible.The organization of a dictionary system alsoraises significant questions in translation systemdesign.
The information held about lexical itemsmust be stored efficiently, accessed easily in aperspicuous form by the system and by the user,and readily extendable as and when required by theaddition either of new lexical entries to adictionary or of new information to existingentries.
In this paper we discuss the way in whichthese issues have been addressed in the design andimplementation of our English-Japanese translationsystem.The UMIST Japanese pro jec tAt the Centre for Computational Linguistics,we are designing and implementing an English-to-Japanese machine translation system with mono-lingual English interaction.
The project is fundedjointly by the Alvey Directorate and InternationalComputers Limited (ICL).
The prototype system runson the ICL PERQ.
although much of the developmentwork has been done on a VAX 11/750, a MicroVAX II,and a variety of Sun equipment.
It is implementedin Prolog,ln the interests of rapid prototyping,but intended for later optimization.
Fordevelopment purposes we are using an existingcorpus of i0,000 words of continuous prose fromthe PERQ's graphics documentation; in the longterm,the system will be extended for use bytechnical writers in fields other than software,and possibly to other languages.At the time of writing, we have well-developed system development software, userinterface, grammar and dictionary handlingfacilities, including dictionary entry in kanji,and a range of formats for output of linguisticrepresentations and Japanese text.
The Englishanalysis grammar handles almost all the syntacticstructures of the corpus.
The transfer componentand Japanese generation grammar currently handle asignificant subset of their intended finalcoverage, and are under rapid development.
Afacility for interactive resolution of structuralambiguity has been implemented, and the form ofits surface presentation is also being refined.Foundations in linguistic theoryWe are committed to active recognition of themutual benefit of machine translation andlinguistic theory, and our system has beendesigned as an implementation of independentlymotivated linguistic-theoretic descriptions.
Theinforming principles are those of modern'lexicalist' unification-based linguistictheories: the English analysis grammar is based onLexical-Functional Grammar (Bresnan, ed.
1982) andGeneralized Phrase Structure Grammar (Gazdar et al1985), the Japanese generation grammar onCategorial Grammar (Ades & Steedman 1982, Steedman1985, Whitelock 1986).
These models share ageneral principle of holding as much informationas possible as properties of individual lexicalitems or as regularities within the lexicon,rather than in a separate component of syntacticgrammar rules; our system concurs in this, as willbe detailed below.94The demm~ds of translationMany of the important questions in dictionarydesign for machine translation are common to allnlp applications.
Before describing our actualimplementation, we will briefly discuss threeissues with specific reference to translation: theoptimum grain-size for lexical entries, thedivision of information about separate languages,and the level of abstraction appropriate to thetask of translation.Firstly, what units should the entries in amachine translation dictionary system describe?
Inthe interests of efficient and accuratetranslation, one should try to bring together alland only that information which is most likely tobe used together.
A grouping based on lexicalstems of specified category appears to be optimal.Change of verb voice or valency across translationequivalents will not be uncommon.
For example, anaction with unexpressed agent will normally bedescribed in English with the passive, in Frenchby an active verb with impersonal subject, and inJapanese by an active verb with no expressedsubject.
Change of lexical category is more oftennot necessary; when it is, wider structural changeis likely to be involved, and is better handled bysyntactic than lexical relations.Secondly, the optimum organization of multi-lingual information we take to be the clearseparation of source from target languages.
Ouranalysis and generation dictionaries are purelymonolingual, with each entry including, not adirect translation equivalent, but a pointer intothe transfer dictionary where such correspondencesare mapped.
For mnemonic reasons these pointersnormally take the form of the lexical stem of thetranslation equivalent or gloss, but this ispurely a convenience for the user, and should notobscure their formal nature, or the fact thatcontrastive information is held only in thetransfer dictionaries.Thirdly, one must consider the level ofabstraction appropriate to the task of translationand thus to the components of a machinetranslation system.
Conventionally, in a bilingualtransfer system, the transfer dictionaries willwhenever possible specify correspondences betweenactual words of the source and target languages,as is done in our system.
(This will be discussedand illustrated below.)
However some interestingpoints of principle are raised when a systemeither handles more than two languages or isinterlingual in design (the two criteria are ofcourse orthogonal).It is sometimes suggested, or assumed, thatthe appropriate base for a machine translationsystem, perhaps especially an interlingual system,should be language-independent not just in thesense of 'independent of any particularlanguage(s)' but also 'independent of language ingeneral', and 'knowledge-based' translationsystems using Schank's 'conceptual dependency'framework (eg Schank & Abelson 1977) are presentedin, for example, Nirenberg (1986).
We believe thisapproach to be misguided.
The task of translationis specifically linguistic: the objects which arerepresented and compared, analysed and generatedare texts, linguistic objects.
The formalrepresentations built and manipulated informalized translation should therefore, to beappropriate to the task, also be specificallylinguistic (cf Johnson 1985).As well as this issue of principle, there arepurely practical arguments against the use even ofnon-language-specific, let alne non-linguisticrepresentations in machine translation.
Aninterllngual system must (aim to) hold in its'dictionaries', and/or in the knowledgerepresentation component which supplements orsupplants them, any and all information whichcould in principle ever be needed for translationto or from any language, while the information ina transfer system will be decided on a need-to-know basis given the specific languages involved.Thus for a transfer system the amount ofdictionary information needed will be smaller, andthe problem of selecting what to include will bemore easily and objectively decidable, than for aninterlingual system.
On this interpretation, it ispossible in principle, although complex inpractice, to construct a single unified lexicon ofmappings among three or more languages which wouldstill properly be classed as a transferdictionary; and this task would still be simplerthan the construction of a satisfactoryinterlingual 'lexicon'.Should one take.the further step to a fullynon-linguistic inter-'lingua', the complicationswill ramify yet further.
It will be necessary toconstruct not only a fully adequate and genuinelyneutral knowledge-base, but also lexically drivenaccess to it, presumably through a more-or-lessconventional lexicon, for each language inquestion, in a way which enables this language-neutral core accurately to map specific lexicalequivalents across particular languages.This is not to deny that a complex andsophisticated semantics is necessary, and somerecourse to world-knowledge would be helpful, forthe resolution of ambiguities and thedetermination of correct translation equivalents.We reject only the claim that an appropriate orrealistic level of underlying representation formachine translation can be either non-linguisticor language-universal, let alne both at once.The dictionaries and the  userGiven these three underlying designprinciples - dictionary entries for lexical stemsof specified category, strictly monolingualanalysis and generation dictionaries, and transferdictionaries based on language-pair-specificinformation - we have tried to organize ourdictionary system to offer efficient andperspicuous access to both the end-user and the95system itself.
We have implemented on-linedictionary creation routines for our intendedmonolingual end user, which elicit and encode thevalues for a range of features for an open classEnglish "word (noun, verb, or adjective - seeWhitelock et al1986 for details), but which donot ask for translation equivalents in Japanese.This information is sufficient for a parse tocontinue, with the word in question retained inEnglish or transcribed in katakana in the output(as happens also for proper nouns).The English entries thus created are storedwithin the dictionary system in separate '.supp'files, where they are accessible to the parser,(thus allowing translation to continue) butclearly isolated for later full update.
This willbe carried out by the bilingual linguist, who willadd an index to the transfer dictionary and createcorresponding full entries in the transfer andJapanese dictionaries.
At present, during systemdevelopment, these stages are often run together.In the final version of the system, formonollngual use, the bilingual updates will besupplied by specialist support personnel.Although this might appear restrictive, it isless so than the alternatives.
Given our objectiveof offering reliable Japanese output to amonolingual English user, we cannot expect thatuser to carry out full bilingual dictionaryupdate.
Equally, we do not wish to constrain theuser to operate within the necessarily limitedvocabulary of the dictionaries supplied with thesystem.
This organization of information goes someway towards overcoming this dilemma, by enablingthe user to extend the available workingvocabulary without bilingual knowledge.The dictionaries, the  user, and the  systemThe dictionary creation routines, whether inmonolingual mode for the end user or in bilingualmode for the linguist, build 'neutral form'dictionary entries consisting of a simple list offeatures and values.
Regular inflected forms aresupplied dynamically during dictionary creationand lookup, by running the morphological analyserin reverse.
All atomic feature values are listedexplicitly.
This ensures that all the informationheld about each word is clearly available to theuser.
The compilation process for these neutralforms is so designed that values for a new featurecan be added throughout without totally rebuildingthe dictionary file in question./.NTRIES FROM\[DICTIONARY CREATIONnf(\[word=trees,stem=tree.stemtypmnoun.=ntype--count,plural--\[\]\]).nf(\[word=live,stem=live,stemtyp=verb,thirdsing=\[\],pres..part=\[\],past=\[\],past_part=I l l ) .n f ( \ [ s tem=dl f f i cu l t , s temtyp=ad j ,adverb=\ [ \ ] ,forms_comp=no\]).The neutral form dictionaries areautomatically compiled into 'program form' entriesin the format expected by the parser.
These arekept as small as possible, firstly by storing onlyirregular inflected forms, as in the neutral formentries described above.
Secondly, we factor outpredictable atomic feature values into feature co-occurrence restrictions.
These derive largely fromthe fcrs of Generalized Phrase Structure Grammar(Gazdar et al1984), which are in fact classicalredundancy rules as in Chomsky (1965), Chomsky &Halle (1968).~ATO-~ESfeatset(daughters.\[subj.obJ,obJ2,pcomp,vcomp,ecomp,scomp,  .
.
.
.
\ ] ) .~eatset ( ro les , \ [arg l ,a rg0 ,arg2,ad junct ,=0mpound, ..... \]).FEATURE CO-OCCURRENCE RESTRICTIONSf=r( inf=_, \ [ f in=nonf in\ ] ) .fc r ( tense=_, \ [ f ln=f in i te ,s temtyp=verb\ ] ) .f=r(?
in=_, \ [?at=verb\ ] ) .J f c r (noun=yes , \ [verb=no,adnom=no,?
tensed=no\]).j f=r(adJ=yes,\[adverb=no,adnom=no,tensed=no\]).This is one possible implementation of the'virtual lexicon' strategy proposed by Church1980, and widely used since.
A similar techniqueis used in the LRC Metal system (Slocum & Bennett1982).
The use of defaults in dictionary designfor machine translation, or natural languageprocessing in general, is a complex issue whichlles beyond the scope of the present paper.Thus the maximum load is given to generalizedlexical redundancy patterns rather than toindividual lexical entries.
However this is not'procedural' as opposed to 'declarative'.
It issimply a declarative statement in which themaximum number of regularities are statedexplicitly as such.This two-layered dictionary structure andautomatic compilation ensures that any change inthe parser which implicates its dictionary formatrequires at most a recompilation from the neutralform rather than labour-intensive rewriting.
Italso makes dictionary information available bothin a form perspicuous to the human user and,independently, in a form optimally adapted to thedesign of the parser.The dictionaries and the sys temThe program form dictionaries factor outdifferent types of information to be invoked atdifferent stages in parsing and interpretation ofEnglish input.
In the first stage, grammaticalcategory and morphological and semantic-featureinformation is looked up in 'edict' dictionaries.96EXAMPLES FROM ENGLISI~ DICTIO~IARIE.SNOUNedict(file,\[pred=file,cntype==ount\]).edict(informatlon,\[pred=information,cntype=mass\]).edict(manual~\[pred=manual_book,cntype=count\]) ?ediGt(storage,\[pred=storage,cntype=mass\]).VERBedict(conslst,\[pred=consist,stemtyp=verb\]}.edict(correspond,\[pred=correspond,stemtyp=verb\]edict(provlde,\[pred=provide,stemtyp=verb\]).edlct(put,\[pred=put,stemtyp=verb\]}.irreg(put,\[pred=put,tense=past\]).irreg(put,\[pred=put,nfform=en\]}.edlct(be,\[pred=be,block=\[l,1,1,0,1,1,11__\]\]).irreg(are,\[pred=be,tense=pres,sub~/agrpl=yes\]}.irreg(been,\[pred=be,nfform=en\])..irreg(is,\[pred=be,tense=pres,subj/agrpl=no\]\].irreg(was,\[pred=be,tense=past,subJ/agrpl=no\]).irreg.
(Were,\[pred=be,tense=past,sub~/agrpl=yes\])edict(become,\[pred=become,stemtyp=verb\]).irreg(became,\[pred=become,tense=past\]).Irreg(becaune,\[pred=become,nfform=en\]}.~d~ediict(graphical,\[pred=graphical,stemtyp=adj\])edict(manual,\[pred=manual_hand,stemtyp=adJ\]).DETstop(the,det,\[spec=def\]\].Stop(a,det,\[spec=indef,agrpl=no,artpl=no\]).stop(many,det,\[quan=many,agrpl=yes\]}.stop(much,det,\[quan=much,agrpl=no\]).stop(some,det,\[spec=indef,artpl=yes\]).subcat(put,\[trans,locgoal\]).~oblig(put,\[arg0,arg2\]).subcat(be,\[predadj,aux\],predadj).subcat(be,\[pass,aux\],passive).subcat(be,\[prog,au~\],prog).subcat(be,\[exist,objess\],be_exist)-sub=at~be,\[ intrans,objess\]).subcat(become,\[intrans,objess,loc\]).Using this additional information, thefunctional structures can go through function-argument  mapping to produce semantic stzn/cturesfor those which are valid.
The transfer componentconsists solely of a dictionary of mappingsbetween source and target language lexical items,or, where necessary (eg for idioms), more complexquasi-syntactic configurations.~XAMPLESFROM TRANSFER DICTIONARYNOUNSxdict(file,fairu).xdlct(informatlon,zyouhou).
"xdlct(manual_book,manyuaru).xdict(storage,kiokusouti).VERBSxdict(be_exist,a,\[vmorph=aru\]).xdict(become,na,\[gloss=become\]).xdict(consist,na,\[gloss=consist\]).xdict(provide,sonae).ADJECTIVESxdict(graphical,gurafikku).xdict(manual_hand,syudou).This information is used in parsing toproduce LFG-ish functional structures.
Optionaland obligatory subcategorization features are thenlooked up in separate 'subcat' dictionaries.Japanese generation proceedsinverse sequence.through an,,~XA~LES FROM SUBCAT--.PROVIDING A SUBCATEGORIZATION FP~MEsubcat(consist,\[intranseo?arg,loc\]).ohlig(consist,\[arg|\]}.subcat(correspond,\[intrans,toarg,loc\]).subcat(provide,\[trans,forben,loc\]).EXAMPLES FROM JAPANESE DICTIONARIESNOUNJdict(fairu,\[pred=fairu,kform=kata,g loss=file ,stemtyp=not%n\]).j ~ict  ( jouhou, \[ p=ed=jouhou,  k~o=m=' I~ ~ ',~loss=informat ion, stemtyp=noun\] ) .97jdict(kiokusouti,\[pred=kiokusoutl,k fo rm='~ ',gloss=storage,stemtyp=noun\]JdiGt(manyuar~,\[pred=manyuaru,kform=kata,gloss=manual,stemtyp=noun\]).~d ic t (syudou, \ [p red=syudou,k form='~' ,gloss----manual,stemtyp=noun\]).jdict(gurafikku,\[pred=gura?ikku,k?orm=kata,gloss=graphical,stemtyp=noun\]).U-V~R~Jdict(i,\[pred=i,~norph=1--i,kform=hira,gloss=be,stemtyp=uverb\]).jd ic t ( i re , \ [p red=i re ,vmorph=1-e ,k form='~ ',gloss=put,stemtyp=uverb\]).jd lct(na,\[pred=na,vmorph=5-r,kform='~',gloss=become,stemtyp=uverb\]).~di=t(na,\[pred=na,vmorph=5--r,k?orm='~',gloss=consist,stemtyp=uverb\]).~dict(sonae,\[pred=sonae,%~norph=1-e,kform='~',gloss=provlde,stemtyp=uverb,tensem=ptunct\]).ConclusionsThe organization of the dictionaries in amachine translation system raises a number ofsignificant issues, some general to naturallanguage processing and others specific totranslation.
In the course of implementing ourEnglish-Japanese system, we have arrived at onepossible set of answers to these questions, whichwe hope to have shown are both computationallypracticable and of wider theoretical interest.ACKNOWLEDGEMENTSThe work on which this paper is based issupported by International Computers Limited (ICL)and by the UK Science and Engineering ResearchCouncil under the Alvey programme for research inIntelligent Knowledge Based Systems.
We areindebted to our present and former colleagues fortheir tolerance and support, especially to PeteWhitelock and Rod Johnson.Rein ~ENCESAdes, Antony, & Mark Steedman.
1982.
On theOrder of Words.
L in~st ics  and Philosophy.Bresnan, Joan, ed.
1982.
The MentalRepresentation of Grammatical Relations.
MITPress, Cambridge, Mass.Chomsky, Noam.
1965.
Aspects of the TheoryofSyntax.
MIT Press, Cambridge, Mass.Chomsky, Noam, & Morris Halle.
1968.
TheSound Pattern of English.
Harper & Row, New York.Church, Kenneth.
1980.
On Memory L~-~tationsin Natumal Language Processing.
MIT ReportMITILCS/TR-245.Gazdar, Gerald, Ewan Klein, Geoff Pullum, &Ivan Sag.
1984.
Generalized Phrase StructureGr-mm~r.
Blackwells, Oxford.Johnson, R. L. 1985.
Translation.
InWhitelock et al eds.Knowles, Francis.
1982.
The Pivotal Role ofthe Dictionaries in a Machine Translation System.In Lawson, Veronica, ed.
Practical Experience ofMachine Translation.
North-Holland.Nirenberg, Sergei.
1986.
Machine Translation.Tutorial Introduction, ACL 1986, New York.Ritchie, Graeme.
1985.
The Lexicon.
InWhitelock et 8_1, eds.Schank, Roger, & Robert Abelson.
1977.Scripts, Plans, Goals and Understanding.
Erlbaum.Slocum, Jonathan, and W. S. Bennett.
1982.The LRC Machine Translation System.
Working PaperLRC-82-1, LRC, University of Texas, Austin.Steedman, Mark.
1985.
Dependency andCoordination in the Grammar of Dutch and English.Language.Whitelock, Peter.
1986.
A Categorial-likeMorpho-syntax for Japanese.Whitelock, Peter, Mary McGee Wood, BrianChandler, Natsuko Holden, & Heather Horsfall.1986.
Strategies for Interactive MachineTranslation.
Proceedings of Coling86.Whitelock, Peter, Mary McGee Wood, HaroldSomers, R. L. Johnson, & Paul Bennett, eds.Forthcoming.
Linguistic Theory and ComputerApplications.
Academic Press, London.98
