Formal Syntax and Semantics of Case Stacking LanguagesChr is t ian Eber tLehrstuhl fiir Computer l inguist ikUniversitSt HeidelbergKarlstr.
2D-69117 HeidelbergMarcus  KrachtII.
Matheinat isches Inst i tutFreie Universitgt BerlinArnimal lee 3D-14195 BerlinAbst ractIn this l)aper the t)henomenom of case stack-ing is investigated from a formM t)oint of view.We will define a formal language with ide~dizedcase marking behaviour and prove that stackedcases have the ability to encode structural in-tbrmation on the word thereby allowing tbr un-restricted word order.
Furthermore, the casestacks help to comimte this structure with a lowcomplexity bound.
As a second part we proposea compositional semantics for languages withstacked cases and show how this proposal maywork for our tbrmal language as well as tbr anexample from Warlpiri.1 In t roduct ionCase stacking is a phenomenom that occurs inmany Australian languages (such as Warlt)iriand Kayardild) and e.g.
Old Georgian.
Casestacking is known to pose t)roblems for thetreatment of case in many fi)rmal ti'ameworkstoday 1.
In (Nordlinger, 1997) the problem wasattacked by extending the fl'amework of LFG.Nordlinger claims that case morphology canconstruct grammatical reb~tions and larger syn-tactic contexts.In Section 2 we will introduce an ideal lan-guge, which exhibits perfect marking.
This lan-guage captures Nordlinger's idea of case as con-structors of grammatical relations, but is inde-pendent of any syntactic framework.
We willprove of this language that the case stacks pro-vide all the intbrmation eeded tbr reconstruct-ing the flsnctor-argument relations and tim syn-tactic context a word appears in.
Additionally,since structure lies encoded in these case stacksthere is no need to assume any phrase structurelsee (Nordlinger, 1997) and (Malouf, 1999) for a dis-cussion on LFG and HPSG respectively.or restriction on word order.
At the end of thissection we consider tile computational complex-ity of our language and draw some conclusionsabout grammar formalisms that are able to gen-erate it.In Section 3 we propose a compositional se-mantics tbr our case stacking languages.
Un-like Montague semantics, where the manage-ment of variables is not made explicit, we willuse rethrent systems to kee t) track of variablesand to make semantic composition eflicentlycomputable 2.
Tile proposal will be applied toour tbrmal language and to an example t'romWarlpiri.2 SyntaxIn this section a perfectly case marked tbrmallanguage will be defined and investigated.
Thedefinition of this language is based on terms con-sisting of functors and argmnents and tiros caseswill be taken to mark arguments.In the tbllowing we let N denote the set; ofnon-negative integers and ~ the concatenationof strings, which is often onfitted.
We shall usetypewriter font to denote true characters inprint tbr a tbrmal language.2.1 Basic Definit ionsAn abstract definition of terms runs as tbllows.Let F be a set of symbols and ~: F ~ N aflmction.
The pair {F, ~2} is called a signature.We shall ofl;en write ~ in place of {F, f~}.
Anelement .f E F is called a functor and It(f)  thearity of f .
We let w := max{a(.f) I f E F}denote the maximal arity.
'l~rms are denotedhere by strings in Polish Notation, tbr simplicity.Definit ion 1.
Let ~ be a signature.
A te rmover ~ is inductively dc~fined as .follows.2see (Venneulen, 1995) and (Kracht, 1999) on theseissues.250/ .
{1' ~(.1)  = o, tl,.c,.
S i.,.
a t('.,",,..2.
tl' ~(.1") > 0 a,.~ t~, i ~ ',: ~ ~(.1"), a,'~;terms, so 'i.
'~ f l .
\]  .
.
.
/ .~(j.)
..l.h(.
set C of case mart,;ers wil l  be the sel;{ l , .
.
.
, co}, which we assume t() 1)e disjoint fronlF .
(-liven a term, each t'uncl;or wil l  1)e casemm'kext a(:(:or(ling to l;h(: ;~rgum(ml, t)osilJon itoccul)ie, s. This is achieved throug\]~ tim notionof :~ unit, which consists of n fun(:tor ;rod ~ se-quence of case m:u'kers (:;dled case stack.Def in i t ion  2.
Let t be, a term over a siflnat'arcfL .77to cor respond ing  bag, A(t.), is ind'ac-tively dc/inc, d as ./b/lows.1.
t l t  = .f, ~.l,.,,,.
a(-~.
):= {t}.2. s.f t - -  .
l t , .
.
.
t , , .
,  hl,.<..,t A(t)  ::: {.I'} UU'/- ,  {s" , ;  I ~ ~ A( td} .A'n oh:my.hi .
f7 ~ A(t) is calh'.d a un i t  and q'C* its case stack.For exmnl)h:, if .l',g~ im(l x a.re flint:tots ofarity 2, 1 mtd 0, rcs\])e(:l;ively, l;he hag A(f:l:g:c)is {:f, x l ,  g2, x l2}.
The lllGtllillg ()t: :1. unit Xi2(:ould t)e (les(:rib(:(l t)y ':c is the fllllCt;Or of (;hetirsl: ~rgmnelll; t,J' the se(:on(l ;u:gmn(mI; of tim|;e t.lil ~ .Def in i t ion  3.
Let t be a tcr'm ov.r  a siflnat'ur,~.. A ( t )  t/,., ~:o,",',..Wo',,,li',,..,Z ,a:t a,t(t ~X(t): : {~1i < 'n} (tn avbitraT'y c.nv, memlio.n of its 'a',,its.77tcn the st'rinfl dl ~'d2"~... ~-'5._.1 "-'5.
is s..id tobe a A(t)-string.Some of the A(.fxgx)-str ings are (:.g.fx ig2x l2  and g2xl : fx i2.
We, m:e now l)rel)aredto d(:fine n tbrmM bmgm~ge over the alt)habetF U C t)y collecting all A(t)-si;rings for n givensignature:Definit ion 4.
Let ~ be a signat'm'e.
The idealease mark ing  language ZUAd?
~ over  th iss ignature  consists of all A(t)-str ings s'ach k/taRt is a term o've'r ~.2.2 Trees  and  Un ique  Readabi l i tyThere is a strong corresl)ondence between bagsand lat)elled trees sin(:e (:ase stncks can t)e iden-tiffed with tree addrc.sscs:Def in i t ion  5.
A nonempty .linite set I) C N~_'is a tree domain  ~f the .lbllowing h, ohh1.
cc -D .2. i f  dl d2 c- D then dl c- D.2.
lJ'di ~ D, i c- N then dj c D for all j < i.Th, e. eh:me.nts qf a t're(: domain arc called treeaddresses .
A ~- labe l led  tree is a pai'r (1), 7)s'uch, that 1) is a tree domain and r: D -+ l"a labelling ./?re.orion s'ach, th.at th.c n'ambc.r of'l"',:t/',t",".~' 4 d C J) i.~ ,',:t:acth/ ~(~(d) .To formalize the corresl)ondence we define afunction 77' that assigns every b~g A(t)  a ~-hd)(:lh:d tre(::" l ' ({ f ,7 , , .
.
.
,  f , , ,7, ,}):= ({'Tff I 1 < ,: < n},~-: 7/~ ~ .h (1 < ,,: < ,t))The funct ion  7'  reverses  l ;he c;l.se sl;a(;ks o f  ~tllunits to get a set of tree addresses.
Then theflmctor of the mill; is assigned to the (;rec a.d-dress.
E.g.
if the b:tg cont~dns i~ refit g32J_ the.resull;ing tree dolna.in will contain :L tree address2123 and the bflmlling f lmction will ~msign 9 toiLSimilarly one can define an inverse flmctionassig\]dng a 1)ag |:o each ~Mal)ellexl tree.
Thusl;h(:re is a l)ije(:l;ion t)etween ~-lat)(:lled trees andbngs.
'l'\]mrelbre difthrent 1):~gs (:orr(:spond to(titfer(:nt ord(:red la,1)ell(:d trees.
This shows (;lintwe h:w(: mfi(lUe r(widal)ility fi)r l)ags and sin(:(:every ZC.A4?
~ string (:ira 1)(: mfiquely de(:()m-posed into its milts we may sl;;~|;(~ the followingl)rol)osition.Proposi t ion 6.
Let ~ bc a signature.
Then ev-ery ZC2vf?
~ strinfl is 'aniq'acly readable.2.3 Pmnpabi l i ty  and Semi l inear i tyWe will first consider the prol)erty of beingfinitely pumpabh,, its detined in (Oroenink, 1997).Def init ion 7.
A hm, g'aage L is f in i te lypumpab le  'ill there is a constant c such th, atfor any w C L with, \['w\[ > c, there arc a finitenumber k and strings uo , .
.
.
~'tt k and v t , .
.
.
,'oks?tclt that w -- uov\]u\] ?J2?t2""Ok'lt k and for eachi, l < Iv/\[ < (: and for any p > 0 the stringP P P'aoV 1 'll d ' t )2 'a 2 ?
?
?
'Dh'u,t; belongs to L.Proposi t ion 8.
Let ~ bc a signature.
ThenZC.Ad?
~ is not finitely \])'alttpabld.251Pry@ It is easy to observe that the puml)ableparts cannot contain a functor since that wouldlead to I)mnt)ed strings containing the sameunits more than once.
Hence the number ofunits cannot be increased by pumping and allpumpable parts must consist of case markerssolely?
But since the length of an ZC.Ad/2 f~ stringconsisting of a fixed munber of units is l)oundedeach pumpable string could be pumped up suchthat it exceeds this bound.
Thus ZC.M?
a is notfinitely 1)umpable at all.
\[\]Now we are concerned with semilinearity.Def in i t ion  9.
Let M C N n. Then M is a1.
l inear  set, {f for some k C N there areu0, .
.
.
,u~ ~ N '~, such, that M = {u0 +k N}, ~i=i  niui \[ ni C2.
semi l ineav  set, if for" some t~: C N thereare linear sets M\], ?.
?
, Mk C _ N 'z , such th, atM=U i=1A lan.quage L over" an alphabet E = {wi I0 _< i < n} is called a semi l inear  l anguageif its image under the Par ikh  mapp ing  is asemil inear set, where the PariMt mapping ~IJ :E* ~ N n is defined as follows:<o,.
.
.
,o)wi ~ e (i) .fi)r O < i < nor/3 ~ vI,((~) -F'I'(fl) for all ~,f l  C E*wh, ere e (i) is the i + 1-ttL 'unit vector', wh, ich,consists of zeros except for the i-th component,wh, ich, is 1.Note that - given a term t - the Parikh imageof all A(t)-strings is the same since these arejust concatenations of difthrent permutations ofthe units in A(t).In the tbllowing we make use of a proof tech-nique used in (Michaelis and Kracht, 1997) toshow that Old Georgian is not a semilinear lan-guage.
We cite, a special instance of a proposi-tion given therein:Propos i t ion  10.M be a subset ofthe properties1.
For" any I~: El~)  1(k)Let P (k )  = ,~k 2 + 2~-----~-k andN n, where n > 2, which hasN+ there are some numbersE N for wh, ich the n-tuple(k, P(k), l~ k) I (k) \ belon(ls to M.~' ' "  ~ '~- -112.
For" any k C N+ th, e value P(k)  provides anupper bound .for th, e second component l\]of any n-tuple {k, l l , .
.
.
,l~z-1) E M (thatmeans ll _< P (k )  ./'or" any such n-tuple).Then M is not semilinear.In order to investigate the semilinearity ofZC,A'I/?
a we choose distinct symbols f,  x C F,such that f /( f)  = w and ~2(x) = 0.
We shallconstruct terms si by the following inductivedefinition:1. s0 :=x2.
Sn := f ( sn - l ,x , .
.
.
,:c) fbr n > 0It is easy to observe that by virtue of construc-tion sn consists of n leading functors f and thatin each iteration the number of x increases t)y- 1).Lemma 11.
Let F U C = { f , \ ] , : c ,2 , .
.
.
,w,f l , - .
.
,.flFI-2} be an enumeration of the alpha-bet underlying ZCA,4?
~, where f \ ] , .
.
.
,f1I,'1-2are the remainin.q fl, nctor's in F - {.f, z} Thenthe Parikh image of some A(sn)-str in9 5n is2- -60= (.,, 2n  2 + -5 - - "(w- -1 )n+l ,n , .
.
.
,n,O, .
.
.
,())~-1 IFI-2Furthermore, ~ 2 ' -  n  + ~n imposes a,n upperbound on the second component oof vIl(Sn).Proof.
The first part of the leunna can beproved in a straightforward way by inductionon n. The claim on the upper bound ibllowsii'om the observation that the nmnber of occur-rences of case marker 1 can be maximized t)yrepeated embedding of terms in the first argu-inent position.
\[\]P ropos i t ion  12.
Let ft be a signature.
Th, en27CAd?
f~ is not semilinear.Proof.
Let n = w + IF I and consider the linear,and hence semilinear, set R :=- 1) + 1)e (2) +w+2hie(0 I m c252Then (;lit fllll pre, iniage Lh> of 17, under theParikh niap consists of all strings which con-tain nu((w -1 )  + 1) occurrences of the symbolx (where 'n,2 is any number) and any number ofoccurrences of the symbols f, l , .
.
.
,w, and noother symbols.
We define the language Lj7 asthe set of all strings belonging to Lst and theideal case marking languages.
Then LM con-tains all A(s,)-strings.Considtring the Parikh iniage M of LAf wegel;M = ,I,\[CAd = m ,I,\[ZCaaC= cq ,I,\[IC54Z;because of the (lefinition of Llz as the flfll pre-image of 1{.
But then the set A// fultills theconditions of Prot)osition l 0 (tuc to \]xeillilla 1\].Hence M is not sere|linear.
Since 17, is sere|linear1)y definition and semilinearity is closed underintersection ZCAd?
t?
is not sere|linear.
\[\]2.4 Computat iona l  Complex i tyIn this sul)section the COml)utai;ional (:onll)lex-ity of ZCJ%4?
~ is (:onsidere(t. r\]Jh(', results areachieved by defining a 3-tat)e-rl)uring machineaccet)tor (det)ending on a given signature) thatrecognizes Zg3d?
ft.Propos i t ion  13.
Let  tt  be a ,sig'natv, rc.
7TurnI cM?
c #)TS ME(,.,v&7 log %ZCM?
~ C DSI 'ACE( 'n , ) .l'roo\]: In the following we lc, t 'n denote thehmgth of the inlmt string.
The 9~u:ing machilmalgoril;hln can be subdivided into three mainparts:1.
The intmt string is segmentext into its units:The algorithm steps through the input andadds set)aration markers in 1)etween twounits.
This can be done in O(n) time.2.
The llllits are sorted according to theircase stacks: More tbrmally a 2-way straightrnc,#c sort is pertbrnmd.
This sorting algo-rithm is known for its worst case optimalcomplexity: it peril)tins the sort of ti: keysin O(k logk)  steps.
In our case the keysare milts and thus their mnnl)er is clearlytmml(led by ~t.. Tim additional square rootfactor comes f rom the comparison stel).One can show tha|; the maximal length ofa (:ase sta('k occuring in an ZOJ~?
~I stringof Mlgth 'n is l)ounded above by O(v/77,).Hence a comparison of two units takes atmost O(v/77,) steps.
Thus the overall com-t)lexity of the sorting part is O(nv/77 log 'n).3.
The sorte<l stquen<:e of units is (:hecked:The algorithm successively generates casestacks according to the fimctors it has read.Each case stack is compared to the refit ofthe inlmt.
If they coincide the algorithmadvances to the next unit on the input andgenerates the next case stack.
After all casestacks have been gel/erated the whole int)utstring must have been worked through, inthis case the algorithm a(:cet)ts.
This (:anl)e done in O('n,) time.Summing u t) the COml)lexities of these tln'eel)arts shows that the time COml)lexity is asclaimed in the proposition.
1;'urthel'nmre, thealgorithm uses only the cells needed by the in-lint plus at most t;:- l (:ells tbr additional set)-aration markers (due to the first part), wheret,: is the nunlber of units the inlmt string con-sists of.
This shows thai; |;he space (:omph~xityix linenr.
\[\]2.5 Discuss ionA first ('on('lusion we lllay draw ix that casesbtve the ability to (:onstruct he context theyapl)em: in.
ZCML ~ strings encode the samestructural intbrmation as ordered labelled treesdo thereby allowing unconstrained order ofmilts.
Additionally each such string can be readunambigously.
This was shown by means ofa bijtction l)etween bags and ordered labelledtrees.The fact that ideal case marking hmguagesare neither finitely punq)at)le nor sere|linearmeans that they fall out of a lot of hierarchies offormal languages.
As (Weir, 1988) shows, multi-component trcc adjoining 9ramm, aTw a generateonly sere|linear languages.
Consequently, idealcase marking languages are not MCTALs.
How-ever, (Groenink, 1.997) defines a class of gram-mars, called simple literal movement  grammars,aand henc.c line.at con|ca;t-free r write systems, whichare shown to l)e weakly equivalent to MCTAGs in (Weir,1988)253which generate all and ouly the PTIME recog-nizable languages.
Ideal case marking languagesshould therefore be generated by some simpleliteral movement grammar.We note fltrthermore that the (theoretical)time complexity is significantly better than thebest known for recognizing context-free gram-mars.
In fact, we implemented a practically ap-plicable algorithm which constructs the corre-sponding tree out of a given IC .Ad?
n string inlinear time (in average).3 Semant icsWe are now going to propose a semmltics tbrlanguages with stacked cases.
The basic prin-ciple is rather easy: we are going to identifyvariables by case stacks thereby making use ofreferent systems.3.1 Referent SystemsThe semantics uses two levels: a DRS-level,which contains DRSs, and a referent level,which talks about the names of the refbrentsused l)y the DRS.
Referent systems were intro-duced in (Vermeulen, 1995).
We keep the ideaof a referent system as a device which adnfinis-trates the variables (or referents) under merge.Tile technical apparatus i however quite difli;r-ent.
In particular, the referent systems we usedefine exl)licit global string sul)stitutions overthe referent names.There is one additional symbol o.
It; is a vari-able over names of referents.
If we &SSUlne thata flmctor g has meaning a simple lexical entryfor g looks like this:/g /I o :o  Io - g(1 , a(g) o)Here, the upper part is the ret~rent system, andthe lower part an ordinary DRS, with a headsection, containing a set of referents, and a bodysection, containing a set of clauses.
This meansthat the semantics of a functor g is given bythe application of g to its arguments.
However,instead of variables z, !/, etc.
we find 1~o, 2~'o,etc.
The semantics of a 0-ary functor z and acase marker, say 2, are:/2 /\[o2-oWhen two such structures come together theywill be mcr.qcd.
The merge operation (9 takestwo structures and results in a new one therebyusing the retbrent systems to substitute thenmnes of referents if necessary and then tak-ing the union of the sets of clauses.
E.g.
theresult of the merge/g /  (9 /2 /  is/g2/I 0 :0- g(12 o,Tile meaning of o : 2r'o is as follows.
If somestructure A is merged with one bearing that ref-erent system, then all occurrences of the vari-able o in A are replaced by 2~o.
As the re-sulting rcti;rent system we get o : o.
This isexactly what is done in the merge shown above.We shall call a structure with referent systemo : o plain.
Merge is only defined if at least onstructure is t)lain.3.2 Semant ics  for .ZC.Ad?To see how the semantics works we shall repro-duce an earlier example ~md take the ZC3dZ; f~string g2x l fx l2 .
Motivated by the definition ofthe ideal case marking language we shall agreeto the conventions that1.
Case markers may only be suffixes2.
Case markers may only be attached toflmctors or case marked flmctorsBy these conventions the string under consid-eration must be parsed as (g2)(xl)(f)((xl)2).They force us to combine tile fimctors withtheir case stacks first and afterwards combinethe units.
We shall understand that this is asyntactic restriction and not due to any seman-tics.The composition of g and 2 was alreadyshown above and is repeated on the left handside, using that ft(g) = 1.
The result of com-posing x and 1 is shown to the right.254/g2/ /xl/o:o \] I o:o"-'O 2~o - -  g (12  ) 1~o - -  xMerging these two structures we get/g2~1/o:o~32~o -- g (12~o)1~o----" xTogether with f this gives/g2xl~/o:o2~o ---- g (12~o)l~o- -xo = f ( l~o,  2~o)By coml)osing the strucl;ures for x an(1 1 we get;the structm:e / x l / shown above.
We merge thisone with that for 2 and get/~12/o:ot ?
12~o - -  xThe merge of l;h(; two sl;rucl;ures abov(; tinallygives/g2~,fx12/0:012~o -- x2~o -- g(12~o)1~o----" xo ----" f (1~o,2~o)We shall verify that the wflue of o is a(:tuallythe same as the value of f(x, g(x)).
Notice firstthat in the body of the DRS we find that 12~oand 1~o have the same value as x.
We maytheretbre reduce the body of this structure to2~o - g(x)o - -  f(x, 2~o)Finally we m~\y replace 2~o by g(x) in the sec-ond line.
We gel; theno - f(x, g(x))whi(:h is the intended result.After |;lit semantics of the mdts has been com-lmted the order of merge is mdml)ortant.
If we(:hoose to merge these semantics in an order d i fti;r(;nt from the one above, we get the same re-sult.a.a An  example  f rom War lp i r iTo show how this proposal may work for naturMlanguages we give an example fi'om Warlt)iri 4in which (:as(; stacking oc(:urs.
We have todeal wit, h l;he t bur case markers ergative (ERe),past tense (PST), absolutive (ABS), and locative(Loc).,lapanangl;:a-rlu Iuwa-rnu marluJapanangka-ERg shoot-PST kangaroo-ABSpirli-v,.qka-rlurock-LOC-ERG,lat)anangka shot the kangaroo (while) on thero  ck\?e extend the t)roposal by taking into ac-count that cases may not only flmction as argu-mind; markers but have a semantics, too.
Thisactually does not make much of a diflhrencefor l;his calculus.
We propose the tbllowing se-mantics for the locative and the past tense casel l la rkerILocl /ps i /o : LOC~oI ?located (o, LOC o)o:opast'(o)St), when the locative is attached, it; says thatthe thing to which it; attaches is located some-where.
Here, o represents the thing that islocaLe(l, while I,OC~o is the location.
Thepast tense semantics simply says that the thingwhich it attaches to happened in the past.We construe the meaning of the ergative asbeing the actor and the meaning of the absolu-tive as being the theme s.dThis examl)h; istaken front (Nordlinger, 1997), p.171'~In fact, ergative and absolutive should mark forgrammatical flmctions, but since linking of grammati-cal functions and actants is quite a complicated matter(see (Kracht, 1999)) we make this simplification.255/ERe/o E I \ ] ,G~ oactor'(o) --" ERC~oAgain, we shall agree/ABS/o : ABS'-'o2~theme' (o )  - AB8~onl using the conventionsstated in subsection 3.2.
First we have to attachthe case markers to compose the resulting struc-tures afterwards.
The semantics of the propernoun Japanangka is taken to be a plain structurewith body o "-- japanangka'.
The composition ofthis structure and the ergative semantics yields/,Japanangka-ERG /o:oER.G~o ~ japanangka'actor'(o) -- En.G~oWe assmne that the nominals /pirli/ and/marlu/have the following lexical entries:/pirli/ /marlu/o-o{o}rock'(o)o:o  I{o}kangaroo'(o)Thus the semantic composition of pirli, LOGand ERG gives:/ pirli-LOC-ERG /o:orock'(LOC~ERC~o)actor'(o) -- EROdeIocated'(ERC~o, LOC~EnO~ o)Similarly we can compose marlu with the abso-lutive case:/marl'a-aBS/o:o{ABs o}kangaroo'(ABS~o)theme'(o) - -  ABS~oThe semantics of the verb is shown on the lefthand side and its composition with /PST/ onthe right hand side./ l'a alI o :o  I?1 sheet'(o)Iluwa-PST/o:oshoot'(o)past'(o)Finally by inerging tile structures/ Japanangka-ERe~, /ma,+a-*BS/, /pi 'li-LOC-ER,G/ ill rely order, we get tilt fo l low ingresult.o :o{ABS~o, LOC~ER.G~o}ERG~'o -- japanangka'shoot'(o)past'(o)actor'(o) ----" ERG~'otheme'(o) - -  ABS~okangaroo'(ABS~o)rock'(LOC~ERO~-'o)Iocated'(EI{C~o, LOC'-'Elm'-" o)It says that there was an event of shooting inthe past, whose actor is 3apanangka nd whosetheme ix something that ix a kangaroo, and thatthere is a rock, such that Japanangka is locatedon it.
Note that the only syntactic restrictionwere the conventions tated in subsection 3.2and thai; we (lid not make any fllrther assump-tions on syntactic structure or word order.ReferencesAnnius Groenink.
1997.
Surface without struc-ture.
Ph.D. thesis, Centrum veer Wiskundeen Intbrmatica, Amsterdam.Marcus Kracht.
1999.
Agreement inorphology,argmnent structure and syntax.
Course ma-terial ESSLLI '99.R,obert Mahmf.
1999.
A head-driven accountof long-distance case assignment.
Paper pre-sented on HPSG '99.aens Miehaelis and Marcus Kraeht.
1997.
Semi-linearity as a syntactic invariant.
In Chris-tian Retord, editor, Proceedings o.\[ the 1st In-ternational Conference on Logical Aspects ofComputational Linguistics (LACL-96), vol-ulne 1328 of LNCS, pages 329-345, Berlin,September 23-25.
Springer.Rachel Nordlinger.
1997.
Constructive Case.Dependent-Markinfl Nonconfigurah;ty in Aus-tralia.
Ph.D. thesis, Department of Linguis-tics, Stanford University, Stanford.Kees F. M. Vermeulen.
1995.
Merging withoutmystery or: Variables in dynamic smnantics.Journal of Philosoph, ical Logic, 24:405-450.David J. Weir.
1988.
Characterizing MildlyContext-Sensitive Grammar Formalisms.Ph.D.
thesis, University of Pennsylvania, PA.256
