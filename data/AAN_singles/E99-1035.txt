Proceedings ofEACL '99A Cascaded Finite-State Parserfor Syntactic Analysis of SwedishDimi t r ios  Kokk inak is  and  Sof ie Johansson  Kokk inak isDepartment  of Swedish/Spr?kdataBox 200, SE-405 30G6teborg University, GhteborgSWEDEN{svedk,svesj}@svenska.gu.seAbst rac tThis report describes the developmentof a parsing system for written Swedishand is focused on a grammar, themain component of the system, semi-automatically extracted from corpora.
Acascaded, finite-state algorithm is ap-plied to the grammar in which the inputcontains coarse-grained semantic lassinformation, and the output producedreflects not only the syntactic structureof the input, but grammatical functionsas well.
The grammar has been testedon a variety of random samples of dif-ferent text genres, achieving precisionand recall of 94.62% and 91.92% respec-tively, and average crossing rate of 0.04,when evaluated against manually disam-biguated, annotated texts.1 In t roduct ionThis report describes a parsing system for fastand accurate analysis of large bodies of writtenSwedish.
The grammar has been implementedin a modular fashion as finite-state, cascadedmachines, henceforth called Cass-SWE, a nameadopted from the parser used, Cascaded analy-sis of syntactic structure, (Abney, 1996).
Cass-SWE operates on part-of-speech annotated textsand is coupled with a pre-processing mechanism,which distinguishes thousands of phrasal verbs,idioms, and multi-word expressions.
Cass-SWEis designed in such a way that semantic informa-tion, inherited by named-entity (NE) identifica-tion software, is taken under consideration; andgrammatical functions are extracted heuristicallyusing finite-state transducers.
The grammar hasbeen manually acquired from open-source textsby observing legitimately adjacent, part-of-speechchains, and how and which function words sig-nal boundaries between phrasal constituents andclauses.2 Background2.1 Cascaded Finite-State AutomataFinite-state t chnology has had a great impact ona variety of Natural Language Processing applica-tions, as well as in industrial and academic Lan-guage Engineering.
Attractive properties, uch asconceptual simplicity, flexibility, and space andtime efficiency, have motivated researchers tocre-ate grammars for natural anguage using finite-state methods: Koskenniemi et al (1992); Ap-pelt et al (1993); Roche (1996); Roche & Schabes(1997).
The cascaded, finite-state mechanism weuse in this work is described in Abney (1997):"...a finite-state cascade consists of a se-quence of strata, each stratum being de-fined by a set of regular-expression pat-terns for recognizing phrases.
\[...\] Theoutput of stratum 0 consists of parts ofspeech.
The patterns at level l are appliedto the output of level I-1 in the mannerof a lexicaI analyzer \[...\] longest matchis selected (ties being resolved in favourof the first pattern listed), the matchedinput symbols are consumed from the in-put, the category of the matched patternis produced as output, and the cycle re-peats...", (p. 130).2.2 Swedish Finite-State GrammarsThere have been few attempts in the past to modelSwedish grammars using finite-state methods.
K.Church at MIT implemented a Swedish, regular-expression grammar, inspired by ideas from Ejer-hed & Church (1983).
Unfortunately, the lexiconand the rules were designed to parse a very lim-ited set of sentences.
In Ejerhed (1985), a very245Proceedings ofEACL '99general description of Swedish grammar was pre-sented.
Its algorithmic details were unclear, andwe are unaware of any descriptions in the liter-ature of large scale applications or implementa-tions of the models presented.
It seems to usthat Swedish language researchers are satisfiedwith the description and, apparently, the imple-mentation on a small scale of finite-state meth-ods for noun phrases only, (Cooper, 1984; Rauch,1993).
However, large scale grammars for Swedishdo exist, employing other approaches to parsing,either adically different, such as the Swedish CoreLanguage Engine, (Gamb?ck & Rayner, 1992), orslightly different, such as the Swedish ConstraintGrammar, (Birn, 1998).2.3 Pre-ProcessingBy pre-processing we mean: (i) the recognition ofmulti-word tokens, phrasal verbs and idioms; (ii)sentence segmentation; (iii) part-of-speech tag-ging using Brill's (1994) part-of-speech tagger,and the EAGLES tagset for Swedish, (Johansson-Kokkinakis & Kokkinakis, 1996).
The general ac-curacy of the tagger is at the 96% level, (98,7%for the evaluation presented in table (1)).
Taggingerrors do not influence critically the performanceof Cass-SWE 1 (cf.
Voutilainen, 1998); (iv) se-mantic inheritance in the form of NE labels: timesequences, locations, persons, organizations, com-munication and transportation means, money ex-pressions and body-part.
The recognition is per-formed using finite-state r cognizers based on trig-ger words, typical contexts, and typical predicatesassociated with the entities.
The performance ofthe NE recognition for Swedish is 97.4% preci-sion, and 93.5% recall, tested within the AVENTI-NUS 2 domain.
Cass-SWE has been integratedin the General Architecture for Text Engineering(GATE), Cunningham et al (1996).3 The  Grammar  F rameworkThe Swedish grammar has been semi-automatically extracted from written textcorpora by observing two phenomena: (i) whichpart-of-speech n-grams, are not allowed to beadjacent to each other in a constituent, and (ii)1The parser can be tolerant of the errofieous anno-tation returned by the tagger, e.g.
in the distinctionbetween Swedish adjective-participles in (:t).
This isaccomplished byconstructing rules that contain eitheradjective or participle in the following manner:np --+ AKTICLE(ADJECTIVEIPARTICIPLE) NOUN2AVENTINUS (LE-2238), Advanced Informa-tion System for Multilingual Drug Enforcement.
(http://svenska.gu.se/aventinus)how and which function words signal bound-aries between phrases and clauses.
(i) usesthe Mutual Information, statistics, based onthe n-grams.
Low n-gram frequencies, suchas verb/noun-determiner, gave reliable cuesfor clause boundary, while high values such asnumeral-noun did not, and thus rejected.
Obser-vation (i) is related to the notion of distituentgrammars, "...a distituent grammar is a listof tag pairs which cannot be adjacent within aconstituent...", Magerman & Marcus (1990); (ii)is a supplement of (i), which recognizes formalindicators of subordination/co-ordination, suchas conjunctions, ubjunctions, and punctuation.3.1 Syntactic Labelling and theUnderlying CorpusThe syntactic analysis is completed through therecognition of a variety of phrasal constituents,sentential clauses, and subclauses.
We followthe proposal defined by the EAGLES (1996),Syntactic Annotation Group, which recognizesa number of syntactic, metasymbolic categoriesthat are subsumed in most current categories ofconstituency-based yntactic annotation.
The la-belled bracketing consists of the syntactic ate-gory of the phrasal constituent enclosed betweenbrackets.
Unlabelled bracketing is only adoptedin cases of unrecognized syntactic onstructions.The corpora we used consisted of a variety ofdifferent sources, about 200,000 tokens, collectedin AVENTINUS.
The rules are divided into lev-els, with each level consisting of groups of pat-terns ordered according to their internal complex-ity and length.
A pattern consists of a categoryand a regular expression.
The regular expressionsare translated into finite-state automata, and theunion of the automata yields a single, determin-istic, finite-state, level recognizer, (Abney, 1996).Moreover, there is also the possibility of groupingwords and/or part-of-speech tags using morpho-logical and semantic riteria.3.2 Grammar  RulesSome of the most important groups include:?
Noun Phrases, Grammar0: the numberof patterns in grammar0 is 180, divided in sixdifferent groups, depending on the length andcomplexity of the patterns.
A large numberof (parallel) coordination rules are also imple-mented at this level, depending on the simi-larity of the conjuncts with respect to severaldifferent characteristics, (cf.
Nagao, 1992).?
Preposit ional Phrases, Grammar1: themajority of prepositional phrases are noun246Proceedings of EACL '99phrases preceded by a preposition.
Trappedadverbials, belonging to the noun phrase andnot identified while applying grammar0, aremerged within the np.
Both simple and multi-word prepositions are used.?
Verbal Groups, Grammar2: identifies andlabels phrasal, non-phrasal, and complex ver-bal formations.
The rules allow for any num-ber of auxiliary verbs, possible interveningadverbs, and end with a main verb or particle.A distinction is made between finite/infiniteactive/passive rbal groups.?
Clauses, Grammar3 and Grammar4: theclause resolution is based on surface crite-ria, outlined at the beginning of this chapter,and the rather fixed word order of Swedish.Grammar3 distinguishes different types ofsubordinate clauses; while Grammar4 recog-nizes main clauses.
A unique level is desig-nated for each type of clause3.3 Grammatical  FunctionsGrammatical functions are heuristically recog-nized using the topographical scheme, originallydeveloped for Danish, in which the relative po-sition of all functional elements in the clause ismapped in the sentence, (Diderichsen, 1966).3.4 An ExampleThe following short example illustrates the inputand output o Cass-SWE:'Under 1998 gick 8 799 fSretag i konkurs iSverige.
', i.e.
'During 1998, 8 799 companieswent bankrupt in Sweden.
'The input to Cass-SWE is an annotated versionof the text:'Under/S 1998/MC/tim gick/YMISh 8_799/MCf6retag/NCN(SP)NI/org i/S konkurs/NCUSNIi/S Sverige/NP/icg./F'.Output:\[main_clauseTIME=\[rp head=Under sem=timIS head=Under sem=n/a Under\]\[np head=1998 sem=tim\[MC head=f998 sem=tim 1998\]\]\]\[vg-active-finite head=gick sem=n/a\[VMISA head=gick sem=n/a gick\]\]SUBJ=\[np head=f~retag sem=org\[MC head=8_799 sem=n/a 8_799\]\[NCN(SP)NI head=f6retag sem=org foretag\]\]P-OBJ=\[pp head=i sem=n/a\[S head=i sem=n/a i\]\[np head=konkurs sem=n/a\[NCUSNI head=konkurs sem=n/a konkurs\] \] \]\[pp head=i sem=icgIS head=i sem=n/a i\]\[np head=Sverige sem=icg\[NP head=Sverige sem=icg Sverige\]\]\]IF .\]\]Here s: preposition; MC: numeral; VMISA: finite,active verb; NCUSNI/NCN(SP)NI: common nouns; NP:proper noun and F: punctuation; while tim: timesequence; org: organization and icg: geograph-ical location.
The output produced reflects thecoarse-grained semantics and part-of-speech usedin the input, as well as the head of each phraseand the grammatical functions: TIME, SUBJ(ect)and P-0BJ(ect).4 Eva luat ionThe performance of the parser partly depends onthe output of the tagger and the rest of the pre-processing software.
Our way of dealing with how"correct" the performance of the parser is, followsa practical, pragmatic approach, based on consul-tation of modern Swedish syntax literature.
Weuse the metrics: precision (P), recall (R), F-value(F) and cross-bracketed rate.
F = ($2+1) PR/$ 2P+R, where $ is a parameter encoding the rela-tive importance of (R) and (P); here $=1.
Eval-uation is performed automatically using the evalbevaluation software, (Sekine & Collins, 1997).4.1 'Gold Standard'  and Error AnalysisFor the evaluation of Cass-SWE we use threetypes of texts: (i) a sample taken from a man-ually annotated Swedish corpus of 100,000 wordswith grammatical information (SynTag, J?rborg,1990); (ii)-newspaper material; and (iii) a testsuite, for non-common constructions, by consult-ing Swedish syntax literature.
Texts (ii) and (iii)were annotated manually.
The total number oftokens was 1,500 and sentences 117.The evaluation results are given in Table (1), forboth noun phrases (NPs), and full chunk parsing(All).
The errors found can he divided into: (i)Table h Cass-SWE, PerformanceP R FNPs 97.82%All 94.62%Cross94.52% 96.17% 0.0391.92% 93.2%7 0.04errors in the texts themselves, which we cannotcontrol and are difficult to discover if the textsare not proofread prior to processing; (ii) errorsproduced by the tagger; and (iii) grammatical er-rors produced by the parser, caused mainly by thelack of an appropriate pattern in the rules, andalmost exclusively in higher order clauses due to247Proceedings of EACL '99structural ambiguity and coordination problems.None of the errors in (i) and (ii) have been man-ually corrected.
This was a conscious choice, sothat the evaluation of the parsing will be basedon unrestricted ata.5 Conc lus ionWe have described the implementation of a largecoverage parser for Swedish, following the cas-caded finite-state approach.
Our main guidancetowards the grammar development was the obser-vation of how and which function words behaveas delimiters between different phrases, as well aswhich other part-of-speech tags are not allowedto be adjacent within a constituent.
Cass-SWEoperates on part-of-speech annotated texts us-ing coarse-grained semantic information, and pro-duces output that reflects this information as wellas grammatical functions in the output.
A corpus,annotated syntactically, is a rich source of infor-mation which we intend to use for a number ofapplications, e.g.
information extraction; an inter-mediate step in the extraction of lexical semanticinformation; making valency lexicons more com-prehensive by extracting sub-categorization infor-mation, and syntactic relations.Re ferencesAbney, S. 1996.
Partial Parsing via Finite-StateCascades.
In Proceedings of the ESSLLI '96 Ro-bust Parsing Workshop, Prague, Czech Rep.Abney, S. 1997.
Part-of-Speech Tagging and Par-tial Parsing, In Corpus-Based Methods in Lan-guage and Speech Processing, Young S. andBloothooft G., editors, Kluwer Acad.
Publish-ers, Chap.
4, pp.
118-136.Appelt, D.E., J. Hobbs, J.
Bear, D. Israel, and M.Tyson.
1993.
FASTUS: A Finite-State Proces-sor for Information Extraction from Real-WorldText, In Proceedings of the IJCAI '93, France.Birn, J.
1998.
Swedish Constraint Grammar, Ling-soft Inc., Finland, forthcoming.Brill, E. 1994.
Some Advances In Rule-Based Partof Speech Tagging, In Proceedings of the 12thAAAI '94, Seattle, Washington.Cooper, R. 1984.
Svenska nominalfraser ochkontext-fri grammatik, In Nordic Journal ofLinguistics, Vol.
7:115-144, (in Swedish).Cunningham, H., R. Gaizauskas, and Y. Wilks.1995.
A General Architecture for Text Engineer-ing (GATE) - A New Approach to LanguageEngineering R~D, Technical report CS-95-21,University of Sheffield, UK.Diderichsen, P. 1966.
Helhed og Struktur, G.E.C.GADS Forlag, (in Danish).EAGLES.
1996.
Expert Advisory Group/or Lan-guage Engineering Standards, EAG-TCWG-SASG/1.8, http://www.ilc.pi.cnr.it/EAGLES/home.html.
Visited 01/08/1998.Ejerhed, E. and Church, K. 1983.
Finite StateParsing, In Papers from the 7th ScandinavianConference of Linguistics, Karlsson F., editor,University of Helsinki, Publ.
No.
10(2):410-431.Ejerhed, E. 1985.
En ytstruktur grammatik fSrsvenska, In Svenskans Beskrivning 15, All@n, S.,L-G. Andersson, J. LSfstrSm, K. Nordenstam,and B. Ralph, editors, GSteborg, (in Swedish).Gamb~ck, B. and Rayner, M. 1992.
TheSwedish Core Language Engine, CRC-025,http://www.cam.sri.com.
Visited 01/10/1998.Johansson-Kokkinakis, S. and Kokkinakis, D.1996.
Rule-Based Tagging in Spr~kbanken,Research Reports from the Department ofSwedish, GSteborg University, GU-ISS-96-5.J?rborg, J.
1990.
Anv~ndning av SynTag, Re-search Reports from the Department ofSwedish, GSteborg University, (in Swedish).Koskenniemi, K., P. Tapanainen, and A. Vouti-lainen.
1992.
Compiling and Using Finite -StateSyntactic Rules, In Proceedings of COLING '92,Nantes, France, Vol.
1:156-162.Magerman, D.M.
and Marcus, M.P.
1990.
Parsinga Natural Language Using Mutual InformationStatistics, In Proceedings of AAAI '90, Boston,Massachusetts.Nagao, M. 1992.
Are the Grammars o far Devel-oped Appropriate to Recognize the Real Struc-ture of a Sentence?, In Proceedings of ~th TMI,Montr@al, Canada, pp.
127-137.Rauch, B.
1993.
Automatisk igenk~nning av nom-inalfraser i 15pande text, In Proceedings of the9th NODALIDA, Eklund, R., editor, pp.
207-215, (in Swedish).Roche, E. 1996.
Parsing with Finite-State Trans-ducers, http://www.merl-com/reports/TR96-30.
Visited 12/03/99.Roche, E. and Schabes, Y., editors, 1997.
Finite-State Language Processing, MIT Press.Sekine, S. and Collins, M.J. 1997.
The evalb Soft-ware, http:/ cs.nyu.edu/cs/projects/proteus/evalb.
Visited 14/12/97.Voutilainen, A.
1998.
Does Tagging Help Parsing?A Case Study on Finite State Parsing, In Pro-ceedings of the FSMNLP '98, Ankara, Turkey.248
