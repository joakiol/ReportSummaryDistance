A Comparison of Speech and Typed InputAlexander G. Hauptmann and Alexander I. RudnickySchool of Computer ScienceCarnegie Mellon UniversityPittsburgh, Pennsylvania 15213Meaningful evaluation of spoken language interfaces must bebased on detailed comparisons with an alternate, well-understoodinput modality, such as the keyboard.
This paper presents anempirical study in which users were asked to enter digit stringsinto the computer by voice and by keyboard.
Two different waysof verifying and correcting the spoken input were also examinedusing either voice or keyboard.
Timing analyses were performedto determine which aspects of the interface were critical to speedycompletion of the task.
The results how that speech is preferablefor strings that require more than a few keystrokes.
The resultsemphasize the need for fast mad accurate speech recognition, butalso demonstrate how error correction and input validation arecrucial components of a speech interface.Although the performance of continuous peech recog-nizers has improved significantly in recent years \[6\], fewapplication programs using such technology have beenbuilt.
This discrepancy is based on the fallacy of equatingspeech recognition performance with the usability of aspoken language application.
Clearly, the accuracy of thespeech recognition component is a key factor in theusability of a spoken language system.
However other fac-tors come into play when we consider a recognition systemin the context of live use.For example, system response time has direct consequencesfor system usability.
Various studies have shown that theamount of delay introduced by a system significantly af-fects the characteristics of a task (such as throughput) aswell as human performance (such as choice of taskstrategy) \[3, 15\].
Less intuitive interface issues concern thecontrol of the interaction.
When does the system listen tothe speaker and when should it ignore speech as ex-traneous?
How can the system best signal to the speakerthat it is ready to listen?
How can a user verify that thesystem understood the utteraance orrectly?
How does theuser correct any recognition errors quickly and efficiently?These and other questions are currently unanswered.While some researchers have found speech to be the bestcommunication mode in human-human problem solving\[1\], results from evaluations of computer speech recog-nizers point in the opposite direction \[10, 11, 16, 9\], withthe exception of a few, contrived, exceptions \[14\].
Thecommunity has become aware that speech applicationsneed more than good recognition to function adequately\[13, 4, 8\], but no systematic solutions have been offered.Our objectives in this paper are to clarify some of thetradeoffs involved when users are given the option of usingeither speech or typing as an input to an applicationprogram.
We deliberately chose the simplest possible taskto avoid confusing task-related cognitive factors with theinherent advantages and disadvantages of the interfacemodes.Experimental ProcedureA study was conducted at Carnegie Mellon to contrast theinput of numeric data through speech with data entrythrough a conventional keyboard.
The study consisted oftwo essentially identical experiments and differed only inthe method of stimulus presentation.
Both experiments re-quired the subjects to enter three lists of 66 digit stringsinto the computer, using three different data entry modes.In the first experiment, the digit strings were presented onthe screen, two lines above the area where either the speechrecognition result or the typed input was displayed.
In thesecond experiment, the subjects had to read the digit stringsfrom a sheet of paper placed next to the keyboard andmonitor.
We will refer to the first experiment as the screenexperiment and to the second experiment as the paper ex-periment throughout this report.There were 3 lists of 66 digit strings to be entered.
Eachdata set contained exactly 11 randomly generated igitstrings of length 1, 3, 5, 7, 9, and 11.
The first six digitstrings included one string of each length and were iden-tical for all data sets.
These first six digit strings wereincluded for the purpose of familiarizing the subject with aparticular condition and were consequently removed fromthe transcripts before data analysis.
Three lists of ran-domized igit string were generated once at the start of theexperiment and used throughout.Three data entry modes were included in the experiment.?
In the first mode voice only, subjects could only usespeech to enter a digit string.
They read the digitstring out loud into a head-mounted, close-talkingmicrophone.
The speech recognizer would thenanalyze the speech signal and display the recognitionas a digit string.
The subject was asked to verify theresult of the recognition.
If the result was not correct,the subject was instructed to repeat he digit stringinto the microphone.
This procedure was repeateduntil the number displayed as the recognition was cor-rect.
If the displayed recognition result was correct,the subject would then say the word "OK" or"ENTER".
The system running the experiment wouldthen store the number that was entered and the subjectcould proceed to the next number on his/her list.219?
In the voice with keyboard correction mode, thesubject would again read the digit string into the sys-tem.
If the recognirion was not correct, the subjectwas instructed to use the keyboard to enter the correctdigit sUing terminated by a carriage return.
If therecognition string was correct, or after the keyboardcorrection was performed, the subject hit the enter keyto store the number in the system.In the keyboard only mode, subjects typed in thedigit siring, which was then also displayed for confir-marion and correcrion.
If they had miskeyed the stringthey could correct it again using the keyboard.
Oncethe correct digit string was displayed on the screen,subjects would hit the enter key to store the number inthe system and proceed to the next number.Each subject entered the different lists using each of thedifferent input modes (voice only, voice with keyboard cor-rection and keyboard only).
Both experiments used repli-cated 3x3 Greco-Latin square designs \[12\].SubjectsEighteen (18) subjects were recruited at Carnegie Mellonfor an experiment in speech recoguirion.
All subjectsclaimed to be casual typists; examination of typing speedsindicated that this was true, with the exception of one fasttouch typist.
Nine subjects participated in the fwst experi-ment (on-screen presentarion of each stimulus) and 9 sub-jects participated in the second experiment (where the listof digit strings was presented on paper).ApparatusSubjects were seated in front of a SUN-3/280 computerworkstation with a high-resolution monitor.
The operatingsystem was MACH/UNIX.
The keyboard for this worksta-tion does not have a numeric keypad and all numbers hadto be typed in using keys on the top row of the keyboard.The SPHINX system \[6\] was used to perform recognition.SPHINX is a large-vocabulary, speaker-independent, con-rinuous speech recognition system developed at CarnegieMellon.
The speech recognition vocabulary consisted ofthe words ZERO through NINE, OH, ENTER and OK. Thegrammar allowed either an arbitrary length digit string tobe spoken or the words OK or ENTER.
When a spokendigit string was recognized, the system displayed the resultas a single digit string (with appropriate conversions, i.e.ZERO, OH => 0; ONE => 1; TWO => 2; ... NINE => 9).Typed input was displayed without alteration on the sameline as the spoken input.To minimize variations in system response, the workstationwas running a dedicated program to control the experiment.No other processes were running and the system was iso-lated from the department's network.
The program con-trolling the experiment recorded a log consisting of timestamped inputs and corresponding recognirions.
The actualutterances were also captured.ResultsThis section presents the results of the experiment, cover-ing recognition system performance and time to comple-tion.
All statistical analyses were performed using linearmodeling, as implemented in the GLIM system \[2\].
Allstatistical comparisons reported at significant at p<0.01 orbetter.AccuracyOverall, typing accuracy was quite high, indicaring thatsubjects performed the experimental task more or lessdiligently.
For the Keyboard mode, digit accuracy was97.1% for paper presentarion and 98.7% for screen presen-tation.
While subjects appear to have been able to typestrings more accurately when these were shown on thescreen, this difference isnot stadstcally significant.Recognition word accuracy was significantly higher forscreen presentarion (95.8%) than for paper presentarion(87.6%).
It is not clear whether this difference is due to thepresentarion mode or whether it reflects a sample dif-ference between the two groups of subjects.
Given the lackof other evidence, it is not possible to further interpret hisdifference.
It should be also noted that, given the task,these word accuracies are rather low.
This can be at-tributed to the lack of any attempt to tune models for a digittask and the absence of any strategies for dealing with ex-traneous acoustic events.
Were such precaurions to betaken, accuracy would be higher.Aggregate cycle timeTo determine the efficiency of data entry under the dif-ferent conditions, we measured the total time a subjectneeded to enter a number correctly.
This aggregate cyclerime includes the time elapsed before the subject beganspeaking after the system had displayed its prompt, thetime required to produce the utterance or to type the digitstring and (for speech) any system recognition time untilthe recognirion result was displayed.
The number com-puted is the result of adding these rimes for each initialrecognition attempt, each correcrion attempt and the finalconfirmation cycle.
Thus this rime reflects the average timeto enter a digit string correctly, including all correction andverification time.Table 1 shows the aggregate completion rimes for the dif-ferent combinarions of presentarion and input mode.Figure 1 shows the aggregate completion rimes for dif-ferent string lengths.
The paper / screen difference is sig-nificant, F(1,3151) = 138, with paper taking longer to com-plete than screen.
Aggregate time to completion for thedifferent input modes is also significantly different,F(2,3151) = 127, as is the interaction between presentationand input mode, F(2,3151) = 3.08.To better understand the effects of presentation and inputmode, we analyzed aggregate cycle time in terms of itscomponent times, factoring out the time for the initial at-tempt o enter the digit string, the rime for the correcrioncycles and the time necessary for the confirmation.220Figure 1: The aggregate cycle time to input one numbercorrectly for both presentations18 PAPER:~ICEI i PAPER:aCE?TYPINGi14 \ [  SC.REEN:TYPn4G 8 gEN NCII E.TYPINGAOi i i i i / i0 1 3 5 7 9 11 AVGDIGIT STRING LENGIHtime, though more time is required for this in the paperpresentation, F(1,3151) = 80.2.
In sum, it would appearthat both correction and verification is more difficult withpaper presentation, apparently due to the lesser acces-sibility of the reference materials in that condition.Figure 3: The aggregate cycle time broken down by com-ponents for the screen experimenttn~9 ?The aggregate cycle time is shown for each input condition(voice, voice with typing and typing) for both experiments.
Theplot includes each digit string length plotted separately; AVGdenotes the overall average for a condition.Tab le  1: Mean aggregate cycle times (in seconds)Modality paper screenVoiceVoice + KeyboardKeyboard12.59.68.810.17.75.6Figure 2: The aggregate cycle time broken down by com-ponents for the paper experiment 29 18zW ~i ,10 V V&T T V V&T T V V&T T V V&T T V V&T T V V&T T V V&T T1 3 $ 7 II 11 AVGThe components are composed of the initial attempt to enter astring, any corrections and the final confirmation that he string iscorrect.
The modes are abbreviated as V=Voice, V&T=Voicewith typing, T=Typing.
Each digit string length is plottedseparately; AVG denotes the overall averages for a condition.Correction times are significantly longer for paper presen-tation, F(1,3151) = 21.9, and there is an interaction be-tween presentation and input mode, F(2,3151) = 8.8.
Asmight be expected, correction time increases ignificantlywith string length, F(5,3151) = 30.0, but there is no inter-action with either presentation r input mode.
Verificationtimes are also significantly longer for paper presentation,F(1,3151) = 487.
Longer strings require longer verification0 V V&T T V V&T T V V&T T V V&T T V V&T T V V&T T V V&T T1 3 S 7 9 '11 AVGThe components are composed of the initial attempt to enter astring, any corrections and the final cortfirmation that he string iscorrect.
The modes are abbreviated as V=Voice, V&T=Volcewith typing, T=Typing.
Each digit string length is plottedseparately; AVG denotes the overall averages for a condition.Input Duration timeSince the aggregate cycle times reflect system delays thatwere much longer for the voice conditions than for thetyping condition, we also measured simple input time.
Thatis, the time required by the subjects to type in the digitstring or to speak the utterance when they tried to enter adigit string for the first time.
This time is a reflection ofthe actual typing speed or the speech rate, and ignores allinfluences of reaction time or system processing delays.
Italso ignores any correction time.In the paper experiment, we found that speaking theaverage digit string time took 2.49 seconds in the voicecondition, 2.45 seconds in the voice with typing conditionwhile typing time was 4.35 seconds from the first to thelast keystroke.
In the screen experiment, he voice con-dition averaged 2.42 seconds from the beginning of thefirst word to the end of the utterance.
The voice withkeyboard correction mode required 2.44 seconds of speech,while typing lasted 3.12 seconds.
Figure 4 shows the com-parison between the typing and speaking rate for both ex-periments, plotted by string length.
The interaction be-tween presentation and length is significant, F(5,3151) =8.7, as is the interaction between input mode and length,F(10,3151) = 89.9.
The time it takes to type a string takesprogressively onger than saying it the longer the string.This effect is mort pronounced for paper presentation thanfor screen presentation.
In contrast, he time to speak ap-pears to be a linear function of string length.221F igure  4: The raw speech and typing rates for both experi-mentsI --I PA.qER:VO(CE+T'YFqNG PAPER:TANG SCREEN:VOIC4E SC,,I~EE N .VOICJE+I~PIN G SC.REEN :T'YI~ING!A~01~ $11t1~ LE~- l l tThe speech or typing rate measures only the time required to sayor type the string, excluding all reaction time.
The rates areploued for all 3 conditions in both experiments.
Data are plottedby string length as well as overall averages.DiscussionWe should note that the circumstances of this study werebiased against speech recognition.
One bias was intro-duced with speech recognition equipment hat workedmuch slower than real time.
When subjects had to waltseveral seconds for a response, their attention wanderedand they were more likely to produce utterances that werenot task related.
We must also assume that their response-time profile is somewhat different, most likely slower thanit would be otherwise.
In future experiments, a speechinterface with better hardware is likely to perform betterthan in these baseline comparisons.Another bias came from the use of digits as the basic dataunit of the task.
Each digit is equivalent to one monosyl-labic spoken word (except "seven" and "zero") or one typedcharacter.
In most tasks, except those concerned ex-clusively with alphabets and digits, we find that a monosyl-labic word is more equivalent to four or five typed charac-ters.
Thus, in other kinds of tasks, the advantage of speechover typing may be more significant because of a greatertyping effort involved (see \[14\]).Utterance AccuracyThe utterance accuracy results show that speech requiresmany more interactions to complete the task than typing.This is in part due to the inadequate performance of thespeech recognizer involved, which was not well suited tothe digit recognition task.
A better digit recognition system,properly tuned to this task, has been described by \[7\].Speech had a strong disadvantage, specially for longerstrings that needed many corrections.
Even though it is notnovel to assert he need for higher accuracy speech recog-nition, these numbers provide a reference for comparisonwith future, higher accuracy spoken language systems.Aggregate Cycle TimeThe basic comparisons in this study involves the time toenter a number correctly, including all corrections and con-firmations that are required.
This time was measured aswall clock time, which therefore also included system over-head time.
System processing time was much longer forthe speech conditions.
The speech recognizer we used hasreported recognition speeds of 1.5 times real time.
Severalhundred extra milliseconds per utterance were also neededto capture and store the speech signal and for reinitializa-tion of the recognition hardware.Our results show that speech is almost comparable totyping for the longer digit strings, but typing has a clearadvantage for shorter digit strings.
The cycle times for thescreen experiment were quite a bit faster than those for thepaper experiment.
This can be attributed to the closeproximity of the stimulus and the system display in thesame area of the screen.
In the paper experiment, hetyping condition was slower than speaking, especially forlonger digit strings.
We attribute this effect o the need tolook at the digit string on the paper and then looking backat the keyboard and monitor to type it in.
The longer stringsrequire more alternations of looking at the string and typinga part of it, then looking again, etc.
Reading the stringswas conceptually simpler.
There was no need to changethe eye position until the complete final result was dis-played, which only occurred once after the complete digitslIing was read.Considering the components of the aggregate cycle time inFigures 2 and 3, we find relatively fast initial entry timesfor voice, comparable to or better than the equivalent timefor typing.
The voice mode loses the race due to correctiontime.
Typing accuracy avoids almost any correction, andspeech loses most of its ground.
In the confirmation trans-action, typing is again very fast, but speech is about a con-stant amount slower.
For paper presentation, confirmationtimes also increase with string length, indicating the extraeffort involved to verify long strings.
One lesson that be-comes clear from these data is the need to obtain betteraccuracy and response time for speech input.
We espe-cially need to have faster correction mechanisms, andideally, a better system would totally avoid the need formultiple corrections in the voice-only conditions.Effective speech interface design requires that it be pos-sible to correct or bypass the speech modality.
The effec-tiveness of this is shown in the improved throughput ob-served for the voice + keyboard condition.
More generally,appropriate error-correction facilities need to be provided.Input Duration TimeThe input duration times measure the typing speed and thespeech rate.
These times give a lower bound on what canbe done by casual users.
Note, however, that these timeswere obtained using a standard keyboard, not numerickeypads and that they are not characteristic for expert ouchtypists.222Speech input is fast.
This is evident if we compare averagespeech rate, which is estimated at about 200 words perminute with typing; even good typists cannot normallyachieve this rate of input \[5\].
Our data confirm these find-ings.The input duration times in our experiments also show thatreal time response and accurate speech recognition are es-sential if a clear advantage is to be shown for speech.
Theaverage difference between pronouncing a digit string andtyping one was less than 2 seconds in both experiments.Thus, if the speech recognizer has more than a 2 seconddelay or if the recognizer has a significant error rate (as itdid in our experiments) or the interface introduces otherartificial delays, speech would cease to be a desirable com-munication mode.The results showed that the raw typing rate in the paperexperiment was much slower than typing rote for the screenexperiment.
This difference can only be attributed to theextra load imposed on the users when they divide theirattention between the keyboard, the screen and the papercontaining the data to be entered.
If a task has these charac-teristics, sometimes more vaguely described as 'eyes-busy',then speech would be a preferable input channel for dataentry.
In our experiment even a relatively small increase inthe work load for the eyes substantially changed the perfor-mance in the typing rate.
Other, more demanding tasks canbe expected to degrade performance in the typing modeeven more.SummaryIn this study we have examined how speech compares withtyping for a digit entry task.
We found that properties ofthe input, such as string length affect the relative ad-vantages of each modality.
System response cgharacteds-tics, however, ultimately dominate throughput.
Based onour data, we believe that more complex materials, requiringmore keystrokes per syllable, would demonstrate the super-iority of speech.Depending on the task, as demonstrated by our com-parisons of screen vs paper presentation, speech can havetremendous advantages for casual users.
The paper taskrequired a certain visual effort, because the subject wasglancing back and forth between the paper containing theinput data, the keyboard and the screen result.
The more atask requires visual monitoring of input (or most otherkinds of cognitive distractions), the more preferable speechwill become as an input medium.
Of course, thevocabulary of the task must lie within the range of thespeech recognizers that are available.Screen presentation demonstrates that speech can providean advantage despite adverse circumstances.
Even whenthe subject has all relevant ask information present in asmall visual area of the screen, speech still helps out byeliminating the time spent locating keys on the keyboard.Speech allows the user achieve a cleaner separation ofmodalities and allows data input functions to be localizedin a single channel, thus eliminating the interferenceproduced by having to share the visual channel.In tasks that require no visual monitoring, have very shortwords (e.g., digits) or when using skilled typists, speechwill probably not demonstrate an advantage.
This is par-ticularly true when data is entered from specific, cus-tomized evices uch as a numeric keypad or a specializedtypewriter.
We do not feel, however, that such situationsare typical of the environments in which the availablilityspeech input will have its greatest impact.The key to building improved spoken language applica-tions lies in better speech recognition speed and accuracy,as well as effective strategies for correcting errors and con-firming correct recognitions.
Improving recognition ac-curacy and speed lies in the domain of chip designers andspeech researchers.
The challenge to spoken language in-terface builders is to find effective strategies for managinga communication channel that is prone to errors and re-quires ongoing validation of inputs.References1.
Chapanis, A. Interactive Human Communication: Somelessons learned from laboratory experiments.
In Shackel,B., Ed., Man-Computer Interaction: Human FactorsAspects of Computers and People, Sijthoff and Noordhoff,Rockville, Md, 1981, pp.
65-114.2.
Healy, M.J.R.
GLIM: An introduction.
Oxford Univer-sity Press, New York, 1988.3.
Grossberg, M. and Wiesen, R.A. and Yntema, D.B.
"An experiment on problem solving with delayed computerresponses.".
IEEE Transactions on Systems, Man andCybernetics SMC-6, 3 (March 1976), 219-222.4.
Holmgren, J.E.
"Toward Bell System Applications ofAutomatic Speech Recognition".
Bell System TechnicalJournal 62, 6 (July - August 1983), 1865 - 1880.5.
Jusczyk, P. Speech Perception.
In Handbook of Per-ception and Human Performance, Boff, K.R., Kaufman,L.
and Thomas, J.P., Eds., Wiley, New York, 1986.6.
Lee, K.-F. Automatic Speech Recognition: TheDevelopment of the SPHINX System.
Kluwer AcademicPublishers, Boston, 1989.7.
Lee,C.-H., Juang,B.-H., Soong,F.K.. and Rabiner, L.R.Word recognition using whole word and subword models.ICASSP-89, Proceedings of the International Conferenceon Acoustics, Speech and Signal Processing, Glasgow,Scotland, May, 1989, pp.
683 - 686.8.
Leggett, J. and Williams, G. "An empirical investiga-tion of voice as an input modality for computer program-ming".
International Journal of Man-Machine Studies 21,6 (December 1984), 493 - 520.2239.
Martin, G.L.
"The utility of speech input in user-computer interfaces".
International Journal of Man-Machine Studies 29 (1889), 355-376.10.
Martin, T.B.
and Welch, J.R.
Practical speech recog-nizers and some performance effectiveness parameters.
InLea, W.A., Ed., Trends in speech recognition, Prentice-Hall, Englewood Cliffs, 1980, pp.
24-38.11.
Morrison, D.L., Green, T.R.G., Shaw, A.C. and Payne,S.J.
"Speech Controlled Text-editing: effects of inputmodality and of command structure".
International Jour-nal of Man-Machine Studies 21, 1 (June 1984), 49 - 64.12.
Myers, J.L.
Fundamentals ofExperimental Design.AUyn and Bacon, Boston, MA, 1972.13.
Nye, J.M.
"Human Factors Analysis of Speech Recog-nition Systems".
Speech Technology 1, 2 (April 1982), 50 -57.14.
Poock, G.K. "Voice Recognition boosts CommandTerminal Throughput".
Speech Technology 1, 2 (April1982), 36 - 39.15.
Rudnicky, A.I.
System response delay and userstrategy selection i  a spreadsheet task.
, April, 1990.CHI'90, invited poster.16.
Rudnicky, A.I., M. H. Sakamoto and J. H.
Polifroni.
"Spoken language interaction i a goal-directed task".Proceedings of the ICASSP (April 1990), 45-48.224
