From Informat ion Retr ieval  to Informat ion Extract ionDav id  M i lward  and  James  ThomasSR I  In ternat iona lSu i te  23 Mi l lers YardMil l  LaneCambr idgeCB2 1RQmilward@cam, sri.
com, j rt lO03@cam, sri.
comAbst ractThis paper describes a system which en-ables users to create on-the-fly querieswhich involve not just keywords, butalso sortal constraints and linguistic on-straints.
The user can specify how theresults should be presented e.g.
in termsof links to documents, or as table en-tries.
The aim is to bridge the gap be-tween keyword based Information Re-trieval and pattern based InformationExtraction.1 In t roduct ionThe amount of information available lectronicallyin a free-text format is ever increasing.
People re-quire tools that give them the best possible answerto their queries even when a full answer may notbe available.Current web Information Retrieval (IR) enginesstandardly retrieve URLs to whole documents,and typical user queries are just an unorderedset of keywords.
This is robust and allows un-restricted queries, but precision can be poor, andthe output is not particularly convenient for manyqueries.
For example, ff we are interested in e.g.companies associated with Mr. Jones, we are likelyto prefer an output in terms of an alphabeticallyordered list of companies (with links to the sen-tences in which they appear) rather than a list ofURLs.Information Extraction (IE) systems pro-vide better presentation of results (e.g.
tables,database records etc.
), and tend to include moreprecise searches which depend upon not just find-ing keywords but finding them in particular posi-tions or in particular grammatical relationships.However, current IE systems typically requirequeries to be programmed beforehand, so are suit-able only for cases where the same query is to beused time and again e.g.
in the processing of anewsfeed.Customisation ofan IE system involves two ma-jor tasks:?
adapting the information extraction systemto a new domain, e.g.
adding vocabulary, newgrammatical constructions and domain ontol-og:y.?
creating new patterns for extraction in thenew domain.Customising current IE systems is thus expensive.A domain expert and a linguist with knowledge ofthe IE system will generally be required to specifythe task, manually mark-up or categorise domaindata, perhaps build a domain ontology, write ex-traction patterns and fine-tune them for the bestcompromise of precision and recall.There are thus pressing reasons for automatingthe customisation task and reducing the involve-ment of linguists as much as possible.
Severalmethods of automatically inferring patterns andsemantic dictionaries from annotated texts havebeen suggested, e.g.
(Riloff, 1993; Riloff, 1996;Sonderland et al, 1995; Yangarber and Grishman,1997).
Pierce and Cardie (Cardie and Pierce,1998) suggest hat the use of annotated texts canbe replaced by an interactive approach in whichan end-user assists the system in bootstrappingpatterns from a set of example results.
Howevereven this method is ill suited to one-off queries,where the user is unlikely to start from exampleresults, but needs to be able to interactively homein on a set of answers.In this paper we describe a system which en-ables users to build advanced on-the-fly queries.The interface is intended to be intuitive for usersalready familiar with keyword IR but adds the ex-tra functionality of sortal, linguistic and positionalconstraints that are more common in IE.
Addingextra linguistic onstraints may improve precision,and cause a drop in recall, in exactly the same wayas adding an extra non-optional keyword.The approach is less ambitious than provid-ing full Natural Language querying, but allows85professional users of search technology (e.g.
an-alysts or research scientists) to get most of theadvantages of IE without having to program pat-terns.
We assume that retraining of linguisticcomponents ( uch as the tokeniser and tagger) fora new domain will still be performed by a lin-guist/programmer, and that end-users will be sup-plied with libraries of useful sorts such as personnames, companies, locations, protein names etc.which are appropriate for their domain.2 IR  and  NLPOur key interest in this work was to provide a sys-tem which allowed users to get answers: not justdocuments or sub-documents.
We have not ad-dressed the question of whether or not these tech-niques would also be useful for more traditional IRin the sense of finding the most relevant documentfor a particular query.
There is some potentialsince there are extra options to refine or expanda query e.g.
using sortal constraints such as com-pany and location, and restrictive constraints suchas subject_of or same sentence.
Since the linguis-tic constraints are under user control the query ismore likely to be accurate than in systems wherelinguistic constraints are derived from a naturallanguage query (though at the expense of usabil-ity).The system was designed to deal with multipleanswer queries such as "which protein interactswith TAF-2?'.
This differs somewhat from theTREC question answering track ((TREC), 2000),where the emphasis is on questions which havea single answer, and systems attempt o providethe most relevant sub-document.
To attempt heTREC task we would need to extend the sys-tem with a relevance weighting mechanism, andprovide further techniques for query expansion.We would then expect the system to do well,since (Srihari and Li, 1999) show that the use ofsortal constraints such as company, location andtime plus constraints uch as same sentence givegood results, even with a relatively simple rankingmechanism.How much extra cost is involved in using lin-guistic information?
There is obviously some ini-tial cost in parsing and analysing the texts, how-ever this can largely be hidden by preprocessingthe documents.
In addition there is a space costin having a much larger index: this is necessarysince we are keeping more information about thedocument's structure.
Finally, there is the cost ofevaluating more complex constraints.
The cost ofusing sortal constraints i negligible: we can indexthem in exactly the same way as words.
However,i l :  Pi2 :  ai3 :  bi4 : i1 ( i2 , i3 )Figure 1: Distributed representation f P(a, b)relational constraints such as same sentence do in-troduce extra processing.
The figures we presentat the end of this paper show that this first im-plementation of the system is fast enough to beusable for some real applications (and very fastby Information Extraction standards), but is notyet in the same league as standard IR engines.3 HighlightHighlight (Thomas et al, 2000) is a general-purpose IE engine for use in commercial appli-cations.
The work described in the current pa-per extends Highlight by building an interface ontop of it and replacing the internal representationof linguistically analysed texts with a representa-tion based on distributed representations c.f.
(Mil-ward, 2000).
Demos of the Highlight System areaccessible from the SRI Cambridge web site athttp://www.cam.sri.com3.1 Distributed RepresentationThe inspiration for the approach taken here wasthe work in (Milward, 2000) on interpretation ofdialogue utterances.
This uses distributed seman-tic representations (based on indexing individualparts of a semantic structure) to encode both fulland partial semantic analyses.
For example, thelogical form P(a,b) is represented by the set ofconstraints given in Figure 1.This approach aims to combine the advantagesof shallow pattern-matching approaches (whichare fast and robust) with those of deeper analysiswhich tends to do better for phenomena which in-volve scope.
For example, consider the utterance"The 2.10 flight to Boston will not stop at NewYork".
A simple pattern matching approach look-ing for \[flight 1 to \[location/via \[location\] would ex-tract the wrong information since it has no notionof the scope of the negation.In this work we take the same idea, but applyit to Information Extraction.
Sets of indexed con-straints (which are themselves partial descriptionsof semantic structure) are used directly as searchexpressions.
Since the indexed constraints can en-code full semantic structures, the search terms canbe more or less specific: we can start with just con-straints on lexical items, and then build up to afull semantic structure by adding structural con-86obligatoryI:J(K,L),J:at,M:leave,L:T,time(T)optional(I) K>H, H:M(N)(2) K:M(N) => departure_time(T)Figure 2: Extracting a departure timestraints.Search is now a question of expressing the ap-propriate constraints on the information to be ex-tracted.
For example, Figure 2 is a sketch ruleto extract departure time from a sentence suchas "I leave at 3pm."
The rule subsumes a rangeof rules which vary in the specificity with whichthey apply.
For example, applying only the oblig-atory conditions will result in the extraction of3pro as departure time from sentences such as "Ileave Cambridge to arrive at 3pm" since in theobligatory component there is no restriction onM with respect o T, i.e.
the leave event and thetime.
Adding the optional constraints in (1) givesus the restriction that the leaving must be domi-nated by the preposition at, e.g.
"I leave from thestation at 3pm," and (2) requires immediate domi-nance: "I leave at 3pm."
This ranges from patternmatching to almost full semantics.
Any particu-lar application of a rule can be scored according tothe number of optional conditions which are ful-filled, thereby using linguistic constraints if theyare available.In practice, the system described here departsfrom this approach in several respects.
Firstly, wewere working with the pre-existing Highlight sys-tem which uses shallow syntactic processing basedon cascaded patterns (similar to (Hobbs et al,1996)).
Deriving semantic relationships from thisis not particularly reliable, so it is preferable to usesearch terms which rely more on positional clues.We therefore used a distributed syntactic repre-sentation to provide more reliable syntactic on-straints (e.g.
head word of, subject of, same sen-tence) augmented by positional constraints (e.g.precedes, immediately precedes).
Secondly, wewanted an intuitive user interface so constraintssuch as 'dominates' were not appropriate.3.2 User  In ter faceGiven the underlying representation describedabove, the user's task in building a query is topropose a set of constraints which can be matchedagainst he representation f a text or set of texts.The interface attempts to preserve the conve-nience of keyword based IR but also enable morerefined searches, and control over the presenta-tion of results.
Keyword based search is a specialcase where the user specifies one or more keywordswhich they want to find in a document.
However,users can also specify that they want to find a classof item (e.g.
companies) and refine the search foritems within the same sentence, not just the samedocument.For example, to find 'Esso' and a location in thesame sentence we need the set of constraints givenbelow:J : Essolocation (T)same_sentence (J,T)The interface emphasises the items the user wantsto search for.
Consider Figure 3.
The user islooking for two items, the first including the wordEsso (this could be e.g.
"Esso Corp.", "Esso Hold-ings" etc.
), and the second item of sort 'location'.The effect of pressing ~Add' is to include the posi-tional constraint that the two items must appearin the same sentence.
In later parts of this paperwe provide examples of more sophisticated querieswhich imitate what is currently achieved by pat-tern matching in more standard IE systems (e.g.Fastus (Hobbs et al, 1996)).In our approach IE is a seamless extension ofIR.
This can be contrasted with some more typi-cal ways of tying together IE and IR by performingan IR search followed by IE.
In that approach, l i tis used first to select a limited set of documents,then IE is applied.
This is fine if the queries andthe keywords are fixed (and appropriate for eachother).
It is not ideal otherwise.
For example,suppose you are interested in Esso's profits.
Toachieve your query you might use IR to find doc-uments containing Esso, then use an IE systemwhich has been customised to look for companyprofits.
However, some of the results are likelyto be unexpected, for example, you would obtainShell's profits if there were a document describingShell's profits which just happens to mention Essoin passing.Items can be constrained to have a particularhead word, to include a particular word or to be of87Intelligent Search and Extraction of InformationFigure 3: User interface88a particular sort.
Multiple constraints on a singleitem are possible, as shown in Figure 5.
Positionalconstraints can include any kind of inter-item con-straints e.g.
precedes, same sentence.
There arefurther option buttons which concern the files tobe queried and the layout of the output.
The de-fault is to provide a table which includes each itemfound plus the sentence in which it appears in thedocument.Two levels of user expertise (novice and expert)allow more or less control over the technical detailsof the query.
Expert mode (accessed by clickingthe button at the top right) looks much the samebut has facilities such as altering the template out-put, naming the items and more options on thepull-down menus.
For instance, in expert modethe user may specify which items are optional inthe query, and what their syntactic lass might be.There are also additional extra parameters for theexpert user for the output templates.A typical user query is given in Figure 4.
Herethe user is looking for appositives in the pat-tern Person Noun o.f Company, for example JohnSmith, chairman of X-Corp. 1 Note that the queryis not particularly linguistically sophisticated: thePosition item is glossed as a noun group and thesingle preposition of is specified when a looser re-striction (perhaps to be any preposition) wouldcertainly turn up more results.
However, thisquery is quick and simple to construct and canbe used as a diagnostic for a more detailed query.A more complex query is shown in Figure 5 fora protein interaction task.
The sort interactionin Figure 5 could be defined as a disjunction ofthe constraints head word = interact, head word= bind, head word = associate).3.3 One-o f f  Query  vs Pat tern  BaseHighlight can operate in two distinct modes: in-teractive and batch.
The interactive mode suitsone-off queries as seen but can also be used toprototype queries on a subset of a corpus.
Oncea user is satisfied with the accuracy of a query,this user-defined 'pattern'  can be stored for lateruse.
Batch mode is used when a query is to berun over a large amount of text and requires nointervention from the user other than the initialset-up.3.4 P reprocess ing  Fi les and  ScalabiHtyIf a user makes two queries over the same set ofdocuments it does not make sense to do all the lin-guistic processing twice.
To avoid this, documents1We currently do not index commas but a posi-tional constraint representing separation by a commacould easily be added.can be preprocessed.
Preprocessing involves tag-ging, chunking, recognition of sorts, and conver-sion of the results into a set of constraints.
Atquery time, there is no further linguistic process-ing to be done, just constraint satisfaction.The system has a relatively simple outer loopwhich considers a query for each document in turn(rather than e.g.
using a single cross-document i -dex).
If a document has not been preprocessed,it is processed, then tested against he query.
Ifa document has been preprocessed, the results ofpreprocessing are loaded, and tested against thequery.
Preprocessing produces a worthwhile in-crease in speed.
Loading the preprocessed filesready for constraint satisfaction takes (on aver-age) less than a tenth of the time it takes to pro-cess the files to get to the same stage.
However,preprocessed files do take around 60 times morefilespace than the source files from which they arederived 2.Although loading a preprocessed file is muchfaster than processing from scratch, the loadingis still a significant factor in the total processingtime.
In fact for simple queries the loading ac-counts for over 90% of processing time.
We weretherefore keen to load only those files where therewas a chance of success for a query.
One way todo this is to split the query into an IR and anIE component and to use IR to pre filter the setof documents.
If we only have to load one tenthof the documents then again we can expect a 10times speed up (assuming the time to do IR isrelatively trivial relative to the time as a whole).A simple way to achieve IR filtering is to extractout any non-optional keywords from the query,and then only process those documents that con-tain the keywords.
However, many of the querieswhich we use do not contain keywords at all, onlysorts.
In these cases, we cannot run IR over thesource documents, since these do not contain thesortal information.
Instead we search over a sum-mary file which is created during preprocessing.This contains a set of all the sorts and words foundin the file.
The II:t stage consists of selecting justthose files which match the sorts and keywordsin the query.
This set is then passed to the IEcomponent which deals with relational constraintssuch as same sentence, and interactions betweenconstraints which have to be calculated on the flysuch as precedes which are not indexed during pre-processing.The IrE component satifies the constraints in the2This is worse than it need be: we have not yetattempted to rationalise the preprocessed files, or useencoding schemes to reduce redundancy.89Intelligent Search and Extraction of InformationFigure 4: A typical one-off query for case: John Smith, chairman of X-Corp90Intelligent Search and Extraction of Information l~ ....................................... !
.Figure 5: Query for protein interactions e.g.
observe that Tar-1 binds TBP.91query against he constraints in the preprocessedfile.
The constraint solver tries to satisfy the mostspecific constraints in the query first.
Constraintsare indexed and reverse indexed for efficiency.The processing times we currently achieve arevery good by the standards of Information Ex-traction, and are adequate for the applications forwhich we have been using the system.
The cur-rent approach is similar to that of e.g.
Molla andHess (Aliod and Hess, 1999), who first partitionthe index space into separate documents, and usethe IR component of queries as a filter.Table 1 shows the difference in processing timeson two queries for two different datasets.
Timesfor processing each query on each dataset are la-belled Old for Highlight with no IR  and no prepro-cessed files, New for Highlight with preprocessedfiles and NewIR for Highlight with both an IRstage and preprocessed files.
3New% and NewIR% give New/Old andNewIR/Old respectively.
From the table wecan see that (for these queries) adding the pre-processed files reduces total processing time byaround 75%.
Adding the IR stage reduces it bya further couple of percent in the case of the FTfiles and by 10% for the WSJ  files.
The perfor-mance increase on FT  data is less dramatic be-cause the data provides more hits (i.e.
we extractmore templates per input file) but note that forboth datasets these improvements are at the worseend of the spectrum: both the WSJ and FT  filesstand a very good chance of containing both per-son and company (the sorts in our test queries)and so the IR component will propose a large num-ber of each set for IE treatment, and we can alsoexpect several hits per file, which tends to slowquery processing.
In other queries, e.g.
a searchfor a company name, we would expect things tobe much quicker as borne out by the results inTable 2.4 Per fo rmanceFigures 6, 7 correspond to the queries in Figures 3and 4 respectively.
Figure 8 is the result of search-ing for protein interactions (a more general versionof the query in Figure 5.)
4 Table 2 contrasts theseresults.
FilesIR and FilesIE refer to the number3The WSJ dataset consists of 100 Wall Street Jour-nal articles, the FT set comes from 60 Financial Timesdocuments.
Query 1 looks for a person and companyin the same sentence while Query 2 is for Person, Xof/at/in Company.
All tests were carried out on aSun Ultra 2200 (200MHz, 256Mb RAM) r~mning Sic-stus Prolog 3.7.1 under Solaris 7.4For space reasons we have only presented a sampleof our query results.of files input to each stage of the system, i.e.
thequery in Figure 6 was run over 500 news articles,only one of them was selected by our IR  compo-nent and was thus input to the IE component.Hits denotes how many of the files passed to IEactually had at least one template in them andTemplates hows how many templates were ex-tracted as a result of the query.
Time is the totaltime for the query in seconds.The query in Figure 6 looks for documents con-taining Esso and a location, s Because Esso issuch a good discriminator in this document set,appearing in only one out of 500 documents, theIE query only considers one document and thewhole query succeeds in 0.5sec.Figure 7 takes longer than this because 218 of500 files contain the common sorts person andcompany.
Figure 8 is similar but has the addi-tional overhead of around 2/3 of all files havinghits where Figure 7 has only 1/20.Factors affect the total amount of t ime that  aquery takes include:?
specificity of the query?
complexity of the query?
size of the source file?
whether or not there is a hit in the fileWith the addition of the IR  stage, the specificityof the query has the potential to impact greatly ontotal query time as already seen.
Having a hit inthe file can also significantly affect timings sincethere is no chance of an early failure of constraintsatisfaction.
For example, taking a file from eachof the queries in Figures 7 and 8 which each take270msec to load (i.e.
are of the same size) we findthat the one in which there is no hit takes 10msecto process but the one is which there is a hit takes6.5sec (of which just l l0msec is spent writ.rag re-sults to file.
)The lessons from these results are not partic-ularly surprising: queries should use the mostspecific words and sorts possible to get goodvalue from the IR  component.
If there are manysolutions--and remember that this system aimsto extract specific information rather than a rele-vant document or document passagc then therewill be a time penalty.5Because there is no sentential restriction on thesetwo items, they do not appear on the same row inthe output.
This is an option available to the userwhich means that in queries of this kind, the outputis a summary of the "true" output (a cross product ofeach item with each other item) which can obviouslyresult in very large output tables.92DatasetWSJWSJFTFTQuery12Old (msec) New (msec) \[ New% NewIR (msec) NewIR133880 32890 25 19120 14135840 33610 25 19540 1494830 21300 22 18850 2092240 21590 23 18960 21Table 1: Comparison of IR and non-lR preprocessing%Figure678FflesIR FilesIE500 1500 218100 59Hits11142Templates Time (s)19 0.511 2744 66Table 2: Comparison of query timesOur expectation is that complex queries whichalso involve a lot of hits are more likely for batchmode operation, so the time penalty will not beso crucial.
One-off queries will tend to be simpler,involving searches for less frequent information.However, we are also investigating further waysto improve processing speed, in particular duringconstraint satisfaction.5 Eva luat ionWe have not yet performed a large-scale valua-tion of the user-customisable version of Highlight.The earlier version of Highlight was evaluated forthe task of extracting protein interactions, obtain-ing a recall of 55-58% and precision of 77%.
Forthis particular task we would not expect he re-sults for the new system to differ significantly: theunderlying engine is the same and we can use theinterface to generate sets of constraints which areequivalent to the previous patterns.
For example,Figures 5 (above) and 9 show how an old patterncan be generated in the new interface.
Both lookfor phrases uch as .
.
.
observed that TAF bindsTBP, the old pattern places an in teract ion  tagaround the relevant ext while in the new inter-face the user selects which items will be output(in this case, the ones which have names ratherthan numbers.
)For other tasks, there are some factors whichmight affect the relative recall and precision fig-ures between the original Highlight system andthe customisable version.
Firstly, the originalHighlight system can use cascades of patternmatching rules to perform 'blocking tactics' i.e.one rule fires for the sole purpose of preventinganother from firing.
To achieve a similar abilityin customisable Highlight we need to introduce away of choosing between alternative queries whenmore than one can apply e.g.
by always choos-ing the most specific.
Secondly, the original High-light sometimes resorted to external program callswhich is no longer possible.6 ApplicationsThe system described in this paper is still underdevelopment but is already being used in pilotprojects with commercial clients.
Areas in whichit has been deployed include:?
expertise database: extracting relationshipsbetween employees and the projects in whichthey are involved from internal company doc-uments.
The relationships degrade fromthose which represent certain involvement(e.g.
writing a report) to those that repre-sent possible involvement (e.g.
mentioned inthe same sentence).?
competitor database: extracting informationabout companies from Financial Times doc-uments.
Here, we were after in particular thechairman, chief executive and so on of anycompanies in the texts.
Again, sets of rela-tionships howed the degree of certainty withwhich a person was related to a company.?
conference database: extracting informationsuch as conference title, location, date andcost from conference calls downloaded fromthe web.
This task was particularly interest-ing because it required the gathering of in-formation from a variety of locations in eachdocument rather than the more usual singlesentence.In order to test the flexibility of the new system,we have also been recoding previous applicationsof the Highlight system.93Query rcm\]I Sentence iUnkitThepr0clueers include Shell Canada Ltd., aunit ofiRoya\] Dutch t Shell Group; Emo Resources Canada iILtd., a unit of Imperial Oil Ltd., which is 71l%-owned by Exxon Corp.; and Gulf Canada iResources Ltd., a unit of Olympia & York,Developments Ltd. ISource 1 I tI 1 ii- Canada Ltd. i I \[i!wsj 0473-i -I I .
.
.
.fiwsj_0473!- l ' l l, J i !i~s j J )473\ [ -iJI i-i li ' ii-i !i1itlIII the ArcticliCanadaHoustonthe Mackenzie\[River deltaAlbertaithe Prudhoe Bayarea*Alaska"Foothills wants to make it clear to other pipelineicompanies that it's on first insofar as transportingigas from the Arctic to southern markets ," Mr.\[Hillary said.At least wo rival applications are expected toiemerge in coming months, including one fromTransCCanada PipeLines Ltd., Canada's largest\[natural gas pipeline operator.?
The Toronto-based company, together with.Tenneco Inc. of Houston, has had an incompleteiproposal filed with Canadian regulators since 1984!that it is now updating.Like Foothills, TransCanada's Polar Gas!consortium plans to build a pipeline directly southfrom the Mackenzie River delta in Canada's~?estorn Arctic with an initial capacity to transporti I.
2 billion cubic feet of gas daily.ilndustry sources aid they expect afierce battle to\[emerge b tween TransCanada, which has aimonopoly on Canadian gas transportation east of!Alberta, and Nova and Westcoast, which controlIthe pipelines within and running west of Alberta,irespectiv .i\[linkilinkilink\[linklinklinkEi U- S. gas buyers must also decide whether they Want i ito enter firm contracts for Mackenzie delta gas or \[develop Alaskan reserves in the Pmdhoe Bay area llink tifn'st, a project hat has been on hold for more than , iI a decade- I ii But Foothills aid it plans to seek regulatory t 8 \[approval to build an alternativeline, the Alaska ll'mk IiNatural Gas Transportation System further north \[itoward Alaska.Figure 6: Sample of results from query for keyword Esso and sort location94Source \[ Person \[ Position!?
\[Robert L r~s3_O111IBe~iI \[II i ~,,~ 0209 iMurray.... ' -  \[Robinsonchairman andvresidentIpresidentIiiiIforrner presidentexecutive officerQuery results\[ Company i Sentence il'Ink, .4 START Robert U Bernstein,' .....IR?dom House iof chairman and P resident ?f Rand?mHouse Inc., announced his ilin__Xi " i resignation from the publishing \[\] \] house he has mn for 23 years.
I\[ " ) )  { I The devdopmemt could have a \[I i dramatic effect on farm \[!
i iproduction, especiailycotton ,)' said i I !
.iDdta & Pine !of\[Murray Robinson, president of \[ ...-link \[Land Co. i \[Ddta & Pine Land Co., a\[ \[Southwide Inc. subsidiary that is i\[ \]one of the largest cotton seed Ii \[producers in the U.S. Ii iSTART Michael Blair, former i :) ipresident and chief executive !i \[ FEnfield Corp. iof officer of Enfield Corp., failed to i' win election to the company's i I~i i " ~ board at a special shareholder I!
i imee~ng,  iI !"
David Rockefeller, chairman of " I iRockefeller Group, said the i iIRockefeller Group !of company talked with many ilink ipotential investors In Japan, thei i United States and Europe.
.
..... i 'i .
.
.
.
.
.
i i E Among the other alumni areI ii " i t\[wsj_0276\[Michael Blair and chiefL i!
i"d , .
jDavl!wsJ_0391 {Rockefeller chairman: iI !
t i ..... .I .............. ji iwsj 0509 Stephen Wolf \[chairmanl I ~chairman i .
.
.
.
.
!Joseph L and o>~J !Dionne chief executivei i ' o~cerL .. .
.
.
.
.
.
.
.
!
iIiUAL Inc. lofi )i McGraw-Hill Inc. !ofStephen Wolf, now chairman ofUAL Inc., and Thomas Haskett,president of Pan Am Corp| t!link ,It !START Joseph L Dionne, !chairman and chief executive I\[officer of McGraw-Hill Inc.,was llink \[\[dected to the board of directors ofthis eleclzonics manufacturer, i tFigure 7: Sample of results from query for Person, X of Company95Query resultsdomain Rhe E2F 1 tramactivation domain.
~-~l i i "' lln yeast, Cdilinteracts withi t cyelin-deptmdeat kinases, including \[human CDC2 (I16940), CDK2 Ili~k \[bio_1014 iiCdil \[interacts, cyclin-.-dependent kinases i(116953), and CDK3 (123828), but n?tI I ........... i .... ~'with CI)K4 (12~29) .
iI i \ [~sa~t~a.
(~s)d~omt~.~that  !!
iPtrf interacts with both TTF1 and Pol I, i , -~- \[ interacts and binds to transcripts containing the I l~J-K bio 101871Ptrf both TTF1 and Pol I}t i( \[3-prime end of pre-rRNA in vitro.
{\[CNK physically interacts with RAF and *bio_10261iCNK RAF  ia.pl~ears tolocalize to cell-cell contact!re~om.
ibio 10~R iThe SGT itheparvovil'm irecord (603419) The SGT protein i.
_ .__iprotein imerac~ inol~rucmralprotein !mteractswith eparvovirm ilink?
, iNS1 inomtmcmral protein NS1.
iI i ............... Vlnohara et al (1998) demonstrated that i f i "bio 10444\[RICK interacts \[CLARP iRICKphysieallyinteraetswith CLARP' i lh~- .
- \[a caspase-like molecule known to bind ,\] iSangoram et al (1998) demomtxated i!
?
iunR bio_10876 an iin acts Drosophila that human TIM interacts with ~.
.
.
?
, Drosophila per, mouse PER1, and mouse i ii i ~ i PER2 (see 603426) in vitro.
~ ' i I,, \[ i .
.
.
.
.
:i \[MIZ1 interacts peeificallywith MYC ilink i bio_l1073iMIZl lintel'acts \[MYC and NMYC land NMYC (164840).Figure 8: Sample of results from query for X interacts with Ybio_relation :sp:\[ VG1/ tag(vg ,VGType,Word l ) ,tha~/ThatTag ,NP1/ tag(np ,N1,N1Sor t ,UL l , Id l ) ,VG/ tag(vg ,headed_vg ,Word) ,NP2/~ag(np,N2,N2Sort,UL2,Id2)\]==>\[ VG1/tag(vg,VGType,Wordl),that/ThatTag,\[ NP1/~ag(np,N1,NISort,OLl,Idl),VG/tag(vg,headed_vg,Word)\],NP2/tag(np,N2,N2Sort,UL2,Id2)\]/interaction(Id)\]ifbio_transitive_relation(Word),observation_vord(Wordl),malte_new_id(Id)Figure 9: Pattern from basic Highlight for case: observe that Tar-1 binds TBP.967 SummaryThis paper has given a brief outline of a sys-tem which may be used for one-off queries inthe style of current Information Retrieval systemsbut with the advantages of Information Extrac-tion technology.
The same interface can be usedto build queries" appropriate for more traditionalbatch mode Information Extraction tasks.Text Retrieval Conferences (TREC).
2000.http: //trec.
nist.
gov/.Roman Yangarber and Ralph Grishman.
1997.Customization of Information Extraction sys-tems.
In Proceedings of the International Work-shop on Lexically Driven Information Extrac-tion.ReferencesDiego Molla Aliod and Micheal Hess.
1999.
Onthe scalability of the answer extraction system"extrans".
In Applications of Natural Languageto Information Systems (NLDB'99), pages 219--224.Claire Cardie and David Pierce.
1998.
Proposalfor an interactive nvironment for InformationExtraction.
Technical Report TR98-1702, De-partment of Computer Science, Cornell Univer-sity.Jerry R. Hobbs, Douglas Appelt, David IsraelJohn Bear, Megumi Kameyama, Mark Stickel,and Mabry Tyson.
1996.
Fastus: A cascadedfinite-state transducer for extracting informa-tion from natural-language text.
In E. Rocheand Y. Schabes, editors, Finite State Devicesfor Natural Language Processing.
MIT Press.David Milward.
2000.
Distributing representationfor robust interpretation f dialogue utterances.In Proceedings of the 38th A CL Conference.Ellen Riloff.
1993.
Automatically constructinga dictionary for Information Extraction tasks.In Proceedings of the 11th National Confer-ence on Artificial Intelligence , pages 811-816.AAAI/MIT Press.Ellen Riloff.
1996.
Automatically generating ex-traction patterns from untagged text.
In Pro-ceedings of the 13th National Conference on Ar-tificial Intelligence, pages 1044-1049.Stephen Sonderland, David Fisher, JonathanAseltine, and Wendy Lehnert.
1995.
CRYS-TAL:inducing a conceptual dictionary.
In Pro-ceedings off the 14th International Joinct Con-ference on Artificial Intelligence.Rohini Srihari and Wei Li.
1999.
Information ex-traction supported question answering.
In Pro-ceedings of the Eighth Text Retrieval Conference(TREC-8).James Thomas, David Milward, Christos Ouzou-his, Stephen Pulman, and Mark Carroll.
2000.Automatic extraction of protein interactionsfrom scientific abstracts.
In Pacific Symposiumon Biocomputing.97
