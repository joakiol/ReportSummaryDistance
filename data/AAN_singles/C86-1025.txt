TRANSFER AND MT MODULARITYPierre Isabeile & t"~J.l.iott MacklovltchCanadian Workplace Automation Research Centre1575 Chomedey BoulevardLaval, QuebecCanada H7V 2X2ABSTRACTThe t cansfer components of typ ica l  secondgeneration (G2) MT systems do not fully conform tothe principles o~ G2 modularity, incorporatingextensive target language information while failingto separate translation facts from linguistic theory.The exclusion from transfer of all non-contrastiveinformation \[eads us to a system design in which thethree major components operate in parallel, ratherthan in seqnence.
We also propose that MT systems bedesigned to allow translators to express theirknowledge in natural metalanguage statements.I.
Modularity: a Basic Principle of G2 S~stemsModularity is a defining characteristic ofsecond genera ti.on mach ine  t rans la t ion  systems(hereafter C2 MT).
G2 systems are claimed to bebased on a mode\] in which linguistic descriptions areclearly separated from the algorithms and programsthat actually produce translations.
Moreover, inthis mode\]., the linguistic facts that pertain solelyto the source language (SL) are supposed to beclearly separated from the facts that pertain solelyto the target language (TL), and from those factsthat concern the lexlcai and structural contrastsbetween TL and S \ ] , .
Such, at Least, are theprinciples of G2 design, as set fortb for example inVauquois \[i \] .
This conception of MT gives rise tosystems composed of three distinct and successivephases : a monolingual analysis component, whichproduces a SL-dependent structural description (SD)of the input text; a transfer component, which mapsthat SD onto a TL-dependent SD; and a monolingualsynthesis component, which transforms that SD into aTL output text.As pointed out by Kay \[2\], this classical G2 designoffers a number of advantages.
Ideally, it shouldallow the formal\[ description of a given language toserve  the needs  of ana lys i s  and synthes isindifferently.
As well, it should allow a givenanalysis or synthesis component to be coupled ontoother MT systems of simi.lar design to producetranslations for other language pairs.
And finally,because the a lgor i thms are independent  of theparticular linguistic descriptions, they too shouldbe reusable in other MT applications.il.
Transfer in T_yj~ical G2 SystemsTransl!er in G2 systems like TAUM-AVIATION \[3\],ARIANE-78 \[4\] and METAL \[511 is essentially a tree-transformation system, relating the SDs of twocomplete translation unlts (generally sentences).Lexieal units (LUs) are not translated in isolation;rather, transfer rules typically test the structuralenvironment of each SL LU and, after inserting theappropriate TL equivalent, may rearrange that struc-ture to accord with contextual\[ constraints imposed bythe TL LU.
Details of formalization aside, transferrules ia these systems will encode facts like thefollowing :(,.a>  fP\s =+ /v:\,' V Sl Iknow savo i rV NP V NP1 Iknow conna2treSuch transfer rules are usually deterministic:each input tree (or subtree) is mapped onto one andonly one output tree.
Consequently, corresponding toeach SL SD produced by the analysis component, thesynthesis component will receive one and only one TLSD.
In order for a correct TL sentence to beproduced, this unique structure has to be correct inall respects.This conception makes it necessary for thetransfer component to encode a lot of knowledge aboutTL grammar.
\]for example, if the input tree requiredby synthesis is an Aspects-type deep structure,transfer will need to include the equivalent of thecomplete base component of the TL grammar, including\ ] .ex icaL  insertion mechanisms.A close examination of the transfer componentsof the three systems mentioned above shows that thisis indeed the ease.
Rules such as (la-b) clearlystate facts that belong to a description of TL:namely, strict subcategorizatLon conditions on theinsertion of savoir and connaltre.
A sizable portionof the so-called transfer rules in these systemsactually deals with TL strict subcategori zationrequirements.In addition to incorporating TL linguisticdescriptions within transfer, these systems also makeuse of impoverished TL grammars for synthesis.
Forexample, none of the systems mentioned accesses afull-fledged TL dictionary during synthesis.
It haslong been a truism in MT circles that synthesis ismuch easier  that analys is .
This is hardlysurprising, when so nmch of tile work of synthesis hasbeen passed over to transfer.
This move has at least115two unfortunate consequences: (a) the burden placedon the translator/lexicographer is greatly increased;and (b) the translation relation is implemented in ahighly directional fashion.
Analysis and synthesisbecome totally different tasks, each standing in adifferent relationship to transfer.In order to remedy these defects, we favour amore rigourous adherence to the principles of G2modularity: all information which is not strictlycontrastive should be removed from the transfercomponent  and returned to synthesis ,  where itbelongs.
This would allow G2 systems to fullybenefit from the advantages of modularity that Kayhas noted.
It would also ease the burden on thosewho must write the transfer rules.On the other hand, such a move would make thetransfer phase non-deterministic, and this may leadto severe efficiency problems.
If, as in typical G2systems, transfer and synthesis are applied insequence, communication between the two componentswill be effected through tree structures representingcomplete translation units.
The use of non-determin-istic rules at transfer would mean that local trans-lation ambiguities would then generalize to thesecomplete units.
For exalaple, if tranfer no longerselects between savoir and connagtre for the transla-tion of know, or between cheveux and ~ for thetranslation of hair, then at least four differentFrench SDs will be transmitted to the synthesiscomponent for any SL SD containing both know andhair.One possible solution to this problem is tohave analysis, transfer and synthesis operate inparallel rather than in sequence, while providing thethree components with the means to exchange partiallyspecified tree structures at each stage of theprocessing.
This is probably what Arnold et al\[6\]have in mind when they suggest that transfer shouldbe viewed as a relation between two generatingdevices.We have recently begun developing a system thatseeks to implement such an approach.
We have chosenPROLOG II (Univers i t~ d 'A ix -Marse i l le )  as theimplementation language, in order to take advantageof the handling of partial information in a time-independent manner that is offered by unification-based formalisms (cf Kay \[2\]).
PROLOG II also hasbuilt-in facilities for parallel processing.
Thoughour system is still in the embryonic stage, it canalready translate in both directions between Englishand French, or simply enumerate pairs of sentencesthat are translationally equivalent.III.
Transfer Rules as Metalanguage StatementsAssuming that the scheme outlined in the prece-ding paragraphs takes us somewhat closer to theideals of G2 modularity, we can now ask what contentis left for transfer rules to express.Since a good measure of compositionality is aprerequisite for transfer to be possible at all~ thetranfer relation (trf) has to be recurslvely definedin terms of relations between progressively smallersubparts of the SDs representing complete translationunits, up to the level of basic LUs.
Depending onthe degree of compositionallty involved, threeclasses of rules can be distinguished.116F i rs t ,  there  w i l l  be ru les  of pure lycompositional translation, ie rules which define thetranslation of some type of unit as a function of thetranslation of its parts.
Rule (2), for example,states that the translation of an NP is a function ofthe translation of its components.
(2) trf(np(Det, Adj, N), np(Det', N', Adj')):- trf(Det, Det')trf(Adj, Adj')trf(N, N').Second, there will be rules dealing with purelynon-compositional cases, such as those of (3):(3) a) trf(n(chair), n(chaise))b) trf(v(know), v(savoir))trf(v(know), v(connaltre))c) trf(nom(n(pressure), n(gauge)),nom(n(manom~tre))).Example (3a) states a simple correspondence betweenbasic LUs.
(3b) illustrates a case where transferleaves a choice for synthesis, as discussed above.Example (3c) is meant to illustrate the possibilityof purely non-compositional translation involving anSL phrase.
From the translator's point of view,pressure gauge is a unit; SL-internally, however, wesee no reason to consider it an idiom (cf the possi-bility of conjunction, as in pressure and temperatnre~) .We need a third type of rule to handle partlycompositional translation, " ie cases in which thetranslation of some but not all of the sub-phrasesare required for the translation of the wholeexpression.
To express the restructuring that takesplace when miss is translated as manquer ~, forexample, we would need a rule like (4):(4) trf(s(Subj, vp(v(miss), Obj)),s(Subj', vp(v(manquer), pp(p(~), Obj')):- trf(Subj, Obj'),trf(Obj, Subj').Notice that in the transfer rules given in(2)-(4), just as in those of G2 systems in general,translation facts are cast in terms of the specificlinguistic theories embodied in the analysis andsynthesis modules.
This has a number of seriousdisadvantages: (a) in order to be able to directlycont r ibute  to the deve lopment  of the t ransfercomponent ,  the t rans la tor / lex icographer  mustassimilate all the details of the specific linguistictheories on which analysis and synthesis are based;(b) descr ip t ions  of t rans la t ion  facts have noindependent status with respect to the analysis andsynthes is  modules:  changes to the l ingu is t icdescriptions of SL and TL will likely force changesto the transfer rules, creating potential consistencyproblems; and (c) translation rules are unlikely tobe portable to other systems.Natura l  b i l ingua l  d ic t ionar ies  s ta tetranslation facts in an altogether different manner.The information they contain is expressed in whatessentially amounts to metalanguage statements, likethe following:(5) a) "chair" translates as "chaise" in Frenchb) "pressure gauge" translates as "manom~tre"c) "sb misses sth" translates as "qqch manqueqqn"Translators obviously manage to express a good dealof translation knowledge in terms of such statements.One way to ease the burden of the translator involvedin MT would be to build into the system a capabilityto automatically interpret statements like those of(5) in terms of rules like those of (3)-(4).
Infact, G2 MT systems already possess much of theknowledge required to build SDs out of the quotedexpressions in (5).
For (5a), little more than SLand TL dictionary lookups are needed to produce (3a).To handle cases such as (5b) the system wouid onlyhave to access its regular grammar rules.
Obviously,other cases will arise where such a simple schemewould lead to the generation of spurious rules.
Forexample~ if not supplemented by additional cons-traints, an equivalence might be created between theEnglish adjective ~ and the French noun lumi~re.However, it does not seem difficult to imagine moti-vated principles that would automatically take careof such incorrect equivalences.Cases of partly compositional translation raisemore interesting problems.
In order to produce (4)from (5e), relations must be established between thesub-parts of the two quoted expressions.
Sb, stl!,~ and j~ l  are clearly meant to be interpreted asmeta-variables.
Sl!)
must be linked to ihg~ , so that ifthe first takes some expression as its value, thenthe second takes tile translation of that expressionas its value.
The clue to this link, of course, isthe fact that ~ is itself the translation of sb.We are currently working on a scheme that willinterpret translation rules expressed as simply asthose in (5), and allow them to be fed into thetransfer component of the MT system mentioned at theend of section II.
Though many difficulties remainto be resolved,  the research program we havedescribed does have the merit of addressing theshortcomings that result from the insufficientmodularity of G2 systems.
At the very least, we hopeto s t imulate  theoret ica l  re f lect ion  upon thetranslation component of MT systems, which has notuntil recently received the attention it deserves.IV.
References\[I\] Vauquois ,  B., La t raduct ion  automat ic~__~Grenoble, Documents de linguist:Lque quantitative29, Paris, Dunod, 1975.\[2\] Kay M., Functional Unification Grammar: a Forma-lism for Machine Translation, P roceed i~ ofCOLING-84, 75-78, 1984.\[3\] Isabelle P., Bourbeau L., TAUM-AVIATION: ItsTechnical Features and some Experimental Results,Computational Linguistics , ii:i, 18-27, 1985.\[4\] Vauquois B., Boitet C., Automated Translation atGrenoble University, Computational\[ Linguistics,ii:I, 28-36, 1985.\[5\] Bennett W., Sloeum J., The LRC Machine Transla-tion System, Computational Linguistics , 1\]:2-3,111-121, 1985.\[6\] Arnold D., & a\].
A MU 1 View of the ~C,A>,  TFramework in EUROTRA, Proceedings of the Con-ference on Theoretical Issues in Mac|line Transla-tion of Natural Lansuages, Colgate University,1-14, 1985.117
