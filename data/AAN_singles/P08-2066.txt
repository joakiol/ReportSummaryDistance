Proceedings of ACL-08: HLT, Short Papers (Companion Volume), pages 261?264,Columbus, Ohio, USA, June 2008. c?2008 Association for Computational LinguisticsEvaluating Word Prediction: Framing Keystroke SavingsKeith Trnka and Kathleen F. McCoyUniversity of DelawareNewark, DE 19716trnka@cis.udel.eduAbstractResearchers typically evaluate word predic-tion using keystroke savings, however, thismeasure is not straightforward.
We presentseveral complications in computing keystrokesavings which may affect interpretation andcomparison of results.
We address this prob-lem by developing two gold standards as aframe for interpretation.
These gold standardsmeasure the maximum keystroke savings un-der two different approximations of an ideallanguage model.
The gold standards addition-ally narrow the scope of deficiencies in a wordprediction system.1 IntroductionWord prediction is an application of language mod-eling to speeding up text entry, especially to enteringutterances to be spoken by an Augmentative and Al-ternative Communication (AAC) device.
AAC de-vices seek to address the dual problem of speech andmotor impairment by attempting to optimize text in-put.
Even still, communication rates with AAC de-vices are often below 10 words per minute (Newellet al, 1998), compared to the common 130-200words per minute speech rate of speaking people.Word prediction addresses these issues by reducingthe number of keystrokes required to produce a mes-sage, which has been shown to improve communi-cation rate (Trnka et al, 2007).
The reduction inkeystrokes also translates into a lower degree of fa-tigue from typing all day (Carlberger et al, 1997).Word prediction systems present multiple com-pletions of the current word to the user.
Systemsgenerate a list of W predictions on the basis of theword being typed and a language model.
The vo-cabulary is filtered to match the prefix of the currentword and the language model ranks the words ac-cording to their likelihood.
In the case that no lettersof the current word have been entered, the languagemodel is the sole factor in generating predictions.Systems often use a touchscreen or function/numberkeys to select any of the predicted words.Because the goal of word prediction systems isto reduce the number of keystrokes, the primaryevaluation for word prediction is keystroke savings(Garay-Vitoria and Abascal, 2006; Newell et al,1998; Li and Hirst, 2005; Trnka and McCoy, 2007;Carlberger et al, 1997).
Keystroke savings (KS)measures the percentage reduction in keys pressedcompared to letter-by-letter text entry.KS =keysnormal ?
keyswith predictionkeysnormal?
100%A word prediction system that offers higher savingswill benefit a user more in practice.However, the equation for keystroke savings hastwo major deficiencies.
Firstly, the equation aloneis not enough to compute keystroke savings ?
actu-ally computing keystroke savings requires a precisedefinition of a keystroke and also requires a methodfor determining howmany keystrokes are used whenpredictions are available, discussed in Section 2.
Be-yond simply computing keystroke savings, the equa-tion alone does not provide much in the way of inter-pretation?
is 60% keystroke savings good?
Can wedo better?
Section 3 will present two gold standardsto allow better interpretation of keystroke savings.2612 Computing Keystroke SavingsWe must have a way to determine how manykeystrokes a user would take under both letter-by-letter entry and word prediction to computekeystroke savings.
The common trend in researchis to simulate a ?perfect?
user that will never maketyping mistakes and will select a word from the pre-dictions as soon as it appears.Implementation of perfect utilization of the pre-dictions is not always straightforward.
For exam-ple, consider the predictive interface in MicrosoftWordTM: a single prediction is offered as an inlinecompletion.
If the prediction is selected, the usermay backspace and edit the word.
However, thisfreedom makes finding the minimum sequence ofkeys more difficult ?
now the user may select aprediction with the incorrect suffix and correct thesuffix as the optimal action.
We feel that a more in-tuitive interface would allow a user to undo the pre-diction selection by pressing backspace, an interfacewhich does not support backspace-editing.
In addi-tion to backspacing, future research in multi-wordprediction will face a similar problem, analogous tothe garden-path problem in parsing, where a greedyapproach does not always give the optimal result.The keystrokes used for training and testing wordprediction systems can affect the results.
We at-tempt to evaluate word prediction as realistically aspossible.
Firstly, many corpora have punctuationmarks, but an AAC user in a conversational settingis unlikely to use punctuation due to the high costof each key press.
Therefore, we remove punctua-tion on the outside of words, such as commas andperiods, but leave word-internal punctuation intact.Also, we treat capital letters as a single key press,reflecting the trend of many AAC users to avoid cap-italization.
Another problem occurs for a newline or?speak key?, which the user would press after com-pleting an utterance.
In pilot studies, including thesimulation of a speak key lowered keystroke savingsby 0.8?1.0% for window sizes 1?10, because new-lines are not able to be predicted in the system.
How-ever, we feel that the simulation of a speak key willproduce an evaluation metric that is closer to the ac-tual user?s experience, therefore we include a speakkey in our evaluations.An evaluation of word prediction must addressthese issues, if only implicitly.
The effect of thesepotentially implicit decisions on keystroke savingscan make comparison of results difficult.
However,if results are presented in reference to a gold stan-dard under the same assumptions, we can draw morereliable conclusions from results.3 Towards a Gold StandardIn trying to improve the state of word prediction,several researchers have noted that it seems ex-tremely difficult to improve keystroke savings be-yond a certain point.
Copestake (1997) discussedthe entropy of English to conclude that 50?60%keystroke savings may be the most we can expectin practice.
Lesher et al (2002) replaced the lan-guage model in a word prediction system with ahuman to try and estimate the limit of keystrokesavings.
They found that humans could achieve59% keystroke savings with access to their ad-vanced language model and that their advanced lan-guage model alone achieved 54% keystroke savings.They noted that one subject achieved nearly 70%keystroke savings on one particular text, and con-cluded that further improvements on current meth-ods are possible.
Garay-Vitoria and Abascal (2006)survey many prediction systems, showing a widespectrum of savings, but no system offers more than70% keystroke savings.We investigated the problem of the limitationsof keystroke savings first from a theoretical per-spective, seeking a clearly defined upper boundary.Keystroke savings can never reach 100%?
it wouldmean that the system divined the entire text they in-tended without a single key.3.1 Theoretical keystroke savings limitThe minimum amount of input required correspondsto a perfect system ?
one that predicts every wordas soon as possible.
In a word completion sys-tem, the predictions are delayed until after the firstcharacter of the word is entered.
In such a sys-tem, the minimum amount of input using a perfectlanguage model is two keystrokes per word ?
onefor the first letter and one to select the prediction.The system would also require one keystroke persentence.
In a word prediction system, the predic-tions are available immediately, so the minimal in-262put for a perfect system is one keystroke per word(to select the prediction) and one keystroke per sen-tence.
We added the ability to measure the minimumnumber of keystrokes and maximum savings to oursimulation software, which we call the theoreticalkeystroke savings limit.We evaluated a baseline trigram model under twoconditions with different keystroke requirements onthe Switchboard corpus.
The simulation softwarewas modified to output the theoretical limit in ad-dition to actual keystroke savings at various windowsizes.
To demonstrate the effect of the theoreticalkeystroke savings limit on actual savings, we eval-uated the trigram model under conditions with twodifferent limits ?
word prediction and word com-pletion.
The evaluation of the trigram model usingword completion is shown in Figure 1.
The actualkeystroke savings is graphed by window size in ref-erence to the theoretical limit.
As noted by other re-searchers, keystroke savings increases with windowsize, but with diminishing returns (this is the effectof placing the most probable words first).
One of0%10%20%30%40%50%60%1 2 3 4 5 6 7 8 9 10KeystrokesavingsWindow sizeWord completionTheoretical limitFigure 1: Keystroke savings and the limit vs. windowsize for word completion.the problems with word completion is that the the-oretical limit is so close to actual performance ?around 58.5% keystroke savings compared to 50.8%keystroke savings with five predictions.
At only fivepredictions, the system has already realized 87% ofthe possible keystroke savings.
Under these circum-stances, it would take a drastic change in the lan-guage model to impact keystroke savings.We repeated this analysis for word prediction,shown in Figure 2 alongside word completion.
Wordprediction is much higher than completion, both the-oretically (the limit) and in actual keystroke savings.0%10%20%30%40%50%60%70%80%1 2 3 4 5 6 7 8 9 10KeystrokesavingsWindow sizeWord predictionWord prediction limitWord completionWord completion limitFigure 2: Keystroke savings and the limit vs. windowsize for word prediction compared to word completion.Word prediction offers much more headroom interms of improvements in keystroke savings.
There-fore our ongoing research will focus on word pre-diction over word completion.This analysis demonstrates a limit to keystrokesavings, but this limit is slightly different thanCopestake (1997) and Lesher et al (2002) seek todescribe ?
beyond the limitations of the user in-terface, there seems to be a limitation on the pre-dictability of English.
Ideally, we would like to havea gold standard that is a closer estimate of an ideallanguage model.3.2 Vocabulary limitWe can derive a more practical limit by simulatingword prediction using a perfect model of all wordsthat occur in the training data.
This gold standardwill predict the correct word immediately so long asit occurs in the training corpus.
Words that never oc-curred in training require letter-by-letter entry.
Wecall this measure the vocabulary limit and apply it toevaluate whether the difference between training andtesting vocabulary is significant.
Previous researchhas focused on the percentage of out-of-vocabulary(OOV) terms to explain changes in keystroke sav-ings (Trnka and McCoy, 2007; Wandmacher andAntoine, 2006).
In contrast, the vocabulary limitgives more guidance for research by translating theproblem of OOVs into keystroke savings.Expanding the results from the theoretical limit,the vocabulary limit is 77.6% savings, compared to78.4% savings for the theoretical limit and 58.7%actual keystroke savings with 5 predictions.
Thepractical limit is very close to the theoretical limit263in the case of Switchboard.
Therefore, the remain-ing gap between the practical limit and actual per-formance must be due to other differences betweentesting and training data, limitations of the model,and limitations of language modeling.3.3 Application to corpus studiesWe applied the gold standards to our corpus study, inwhich a trigram model was individually trained andtested on several different corpora (Trnka and Mc-Coy, 2007).
In contrast to the actual trigram modelCorpus Trigram Vocab.limitTheor.limitAAC Email 48.92% 61.94% 84.83%Callhome 43.76% 54.62% 81.38%Charlotte 48.30% 65.69% 83.74%SBCSAE 42.30% 60.81% 79.86%Micase 49.00% 69.18% 84.08%Switchboard 60.35% 80.33% 82.57%Slate 53.13% 81.61% 85.88%Table 1: A trigram model compared to the limits.performance, the theoretical limits all fall within arelatively narrow range, suggesting that the achiev-able keystroke savings may be similar even acrossdifferent domains.
The more technical and formalcorpora (Micase, Slate, AAC) show higher limits, asthe theoretical limit is based on the length of wordsand sentences in each corpus.
The practical limitexhibits much greater variation.
Unlike the Switch-board analysis, many other corpora have a substan-tial gap between the theoretical and practical limits.Although the practical measure seems to match theactual savings similarly to OOVs testing with cross-validation (Trnka and McCoy, 2007), this measuremore concretely illustrates the effect of OOVs onactual keystroke savings ?
60% keystroke savingswhen training and testing on AAC Email would beextraordinary.4 ConclusionsAlthough keystroke savings is the predominant eval-uation for word prediction, this evaluation is notstraightforward, exacerbating the problem of inter-preting and comparing results.
We have presenteda novel solution ?
interpreting results alongsidegold standards which capture the difficulty of theevaluation.
These gold standards are also applica-ble to drive future research ?
if actual performanceis very close to the theoretical limit, then relaxingthe minimum keystroke requirements should be themost beneficial (e.g., multi-word prediction).
Sim-ilarly, if actual performance is very close to thevocabulary limit, then the vocabulary of the lan-guage model must be improved (e.g., cache mod-eling, adding general-purpose training data).
In thecase that keystroke savings is far from either limit,then research into improving the language model islikely to be the most beneficial.AcknowledgmentsThis work was supported by US Department of Ed-ucation grant H113G040051.ReferencesAlice Carlberger, John Carlberger, Tina Magnuson,M.
Sharon Hunnicutt, Sira Palazuelos-Cagigas, andSantiago Aguilera Navarro.
1997.
Profet, a new gen-eration of word prediction: An evaluation study.
InACL-97 workshop on Natural Language Processingfor Communication Aids.Ann Copestake.
1997.
Augmented and alternative NLPtechniques for augmentative and alternative commu-nication.
In ACL-97 workshop on Natural LanguageProcessing for Communication Aids, pages 37?42.Nestor Garay-Vitoria and Julio Abascal.
2006.
Text pre-diction systems: a survey.
Univ Access Inf Soc, 4:183?203.Gregory W. Lesher, Bryan J. Moulton, D Jeffery Higgin-botham, and Brenna Alsofrom.
2002.
Limits of hu-man word prediction performance.
In CSUN.Jianhua Li and Graeme Hirst.
2005.
Semantic knowl-edge in word completion.
In ASSETS, pages 121?128.Alan Newell, Stefan Langer, andMarianne Hickey.
1998.The ro?le of natural language processing in alternativeand augmentative communication.
Natural LanguageEngineering, 4(1):1?16.Keith Trnka and Kathleen F. McCoy.
2007.
Corpus Stud-ies in Word Prediction.
In ASSETS, pages 195?202.Keith Trnka, Debra Yarrington, JohnMcCaw, Kathleen F.McCoy, and Christopher Pennington.
2007.
The Ef-fects of Word Prediction on Communication Rate forAAC.
In NAACL-HLT; Companion Volume: Short Pa-pers, pages 173?176.Tonio Wandmacher and Jean-Yves Antoine.
2006.Training Language Models without Appropriate Lan-guage Resources: Experiments with an AAC Systemfor Disabled People.
In Eurospeech.264
