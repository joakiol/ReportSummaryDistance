NAACL-HLT 2012 Workshop on Future directions and needs in the Spoken Dialog Community: Tools and Data, pages 21?22,Montre?al, Canada, June 7, 2012. c?2012 Association for Computational LinguisticsBridging Gaps for Spoken Dialog System Frameworks in InstructionalSettingsGina-Anne LevowDepartment of LinguisticsUniversity of WashingtonSeattle, WA 98195 USAlevow@u.washington.eduAbstractSpoken dialog systems frameworks fill a cru-cial role in the spoken dialog systems com-munity by providing resources to lower bar-riers to entry.
However, different user groupshave different requirements and expectationsfor such systems.
Here, we consider the par-ticular needs for spoken dialog systems toolk-its within an instructional setting.
We discussthe challenges for existing systems in meet-ing these needs and propose strategies to over-come them.1 IntroductionA key need in the spoken dialog systems communityis a spoken dialog system development framework.Such systems fulfill fundamental roles in loweringbarriers to entry for development of spoken dialogsystems, providing baseline systems for comparabil-ity, and supporting novel experimental extensions.There are many characteristics that are desirable fora shared spoken dialog system resource, including:?
Availability: Systems should be provided onan on-going basis, with continuing support, up-dates, and maintenance.?
Ease-of-use: Systems should be easy to use andprovide an environment in which systems areeasy to develop.?
Platform-independence: Systems be usable ona wide variety of architectures, if installed, orprovided on an accessible platform, such as awebsite.?
Application access: Systems should providea range of exemplar applications within theframework.?
Flexibility and extensibility: Systems shouldenable integration of diverse technology com-ponents and facilitate a wide range of experi-mental configurations.?
Robustness: Systems should enable state-of-the-art performance for diverse applications.?
Affordability: Systems should be free if possi-ble, or provided at pricing that is not prohibitivefor different user groups.However, these systems also serve diverse groupsof users, from senior research developers to studentsbuilding their first spoken dialog systems.
Whilethese users share many requirements, their relativeimportance naturally varies.
Research developerswill likely place greater emphasis on system robust-ness, extensibility, and flexibility, for example toincorporate alternative speech recognizers, speechsynthesizers, or dialog managers.
Those using suchsystems in an instructional setting will place greaterimportance on ease-of-use, platform portability orindependence, availability, affordability, and accessto reference applications.
Below, we will discusssome of the challenges for systems trying to meetthese needs.
Then we will describe two popular cur-rent solutions and how they satisfy the needs of thesedifferent groups.
Lastly we will present some addi-tional needs for spoken dialog systems frameworksto bridge gaps in dialog systems for instructionaluse.A variety of systems have been developed that ad-dress many of these needs, but all suffer from signif-21icant limitations.
Availability and affordability haveposed some of the knottiest problems.
For example,many of the Galaxy Communicator research sys-tems, such as those by University of Colorado (Pel-lom et al, 2001), MIT, and CMU, were made avail-able to the research community.
However, many ofthe systems are no longer available, usable, or sup-ported, as research groups have disbanded and sys-tems architectures have changed.
Maintaining sys-tems over time requires group and community com-mitment, facilitated by an open-source framework.Other toolkits and frameworks have become prob-lematic due to conflicts between availability and af-fordability.
The long-popular CSLU toolkit (Suttonand Cole, 1997) has recently shifted to a commercialfooting.
Similarly, several industry platforms haveprovided free non-commercial VoiceXML hosting,as a simple spoken dialog development environ-ment.
However, at least one of these systems hasrecently shifted to a paid-only status.
The environ-ment changes rapidly.
Of three freely available aca-demic systems and five VoiceXML platforms listedin a 2009 survey (Jokinen and McTear, 2009), twohave already gone to paid status as of late 2011.Two frameworks have emerged in recent years aspopular SDS frameworks: the Ravenclaw/Olympusframework (Bohus et al, 2007) and VoiceXML,hosted on one of the industrial platforms, such asNuance?s Cafe or Voxeo1.
However, they do seemto address the needs of different user groups.
Raven-claw/Olympus has been more widely adopted in theresearch community: it is robust, flexible, exten-sible, open-source, provides diverse use cases, andhas an active support and development community.In contrast, the VoiceXML platforms have provenpopular in an instructional setting, as attested by thelarge number of online homework assignments em-ploying VoiceXML.
These VoiceXML frameworksoffer very simple, easy-to-use environments that arelargely platform-independent, include basic supportand tutorials, and provide simple baseline applica-tions.
Given VoiceXML?s extensive role in indus-try settings, they also provide an advantage in termsof direct practical experience for students and interms of broad resources and support.
In an instruc-tional setting, Ravenclaw/Olympus?
relative com-1http://cafe.bevocal.com; http://www.voxeo.complexity, Windows platform and software dependencein instructional environments where linux has be-come predominant, and smaller resource base rep-resent hurdles.
While the VoiceXML platforms ex-cel in these dimensions, their very simplicity andease-of-use are limiting.
Students are often look-ing for existing applications of moderate interestingcomplexity as a basis for extension and experimenta-tion.
Most typical example applications are simplerthan those given for Olympus, and the platform isseverely limiting for more advanced users and tasks.For example, many VoiceXML frameworks do noteven support user-defined pronunciations.
Lastly,these VoiceXML platforms rely on the generosity ofthe industrial teams, which can readily evaporate ashas already happened with Tellme Studio.Ideally, for instructional use, we would like tobridge the gap between the too-simple, restrictiveVoiceXML frameworks and the more challengingbut more flexible and powerful Ravenclaw/Olympusframework, to allow students and instructors totransition more smoothly from one to the other.On the VoiceXML side, a community-supportedVoiceXML platform would reduce dependence onindustry platforms.
Access to VoiceXML applica-tions of greater complexity, comparable to Let?s Go!or Communicator tasks, would allow more inter-esting experiments within a course?s limited span.Lastly, porting Ravenclaw/Olympus to linux wouldallow easier adoption in a wider range of academicprograms.ReferencesD.
Bohus, Antoine Raux, Thomas K. Harris, Maxine Es-kenazi, and Alexander I. Rudnicky.
2007.
Olympus:an open-source framework for conversational spokenlanguage interface research.
In Bridging the Gap:Academic and Industrial Research in Dialog Technol-ogy workshop at HLT/NAACL 2007.Kristiina Jokinen and Michael F. McTear.
2009.
SpokenDialogue Systems.
Morgan & Claypool Publishers.B.
Pellom, W. Ward, J. Hansen, K. Hacioglu, J. Zhang,X.
Yu, and S. Pradhan.
2001.
University of Coloradodialog systems for travel and navigation.Stephen Sutton and Ronald Cole.
1997.
The cslu toolkit:rapid prototyping of spoken language systems.
In Pro-ceedings of the 10th annual ACM symposium on Userinterface software and technology, UIST ?97, pages85?86, New York, NY, USA.
ACM.22
