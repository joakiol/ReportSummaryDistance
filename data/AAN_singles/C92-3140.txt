PARTIAL SYNTHESIS OF SENTENCES BY COROUT1NINGCONSTRAINTS ON DIFFERENT LEVELS OF WELL-FORMEDNESSGERARD MILHAUD ROBERT PASERO PAUL SABATIERGroupe Intelligence ArtificielleCNRS UA 816Facult6 des Sciences de Luminy163 Avenue de Luminy Case 90113288 Marseille Cedex 9FranceABSTRACTWe show how the two main characteristics ofthe ILLICO natural language interface - -guided composition mode by partial synthesis,and the modularity of the encoding of li,aguisticknowledge specifying the lexical, syntactic,semantic and conceptual evels of well-formedness - -  have lead us to develop anapproach and a system in which all theconstraints on the different levels of well-formedness are coroutined when the systemanalyzes a given sentence or synthesizes apartial one.
We describe the principle of thegeneral coroutining process and the associatedProlog program.KEYWORDSNatural Language Interface, Analysis,Synthesis, Guided Composition, PartialSynthesis, Coroutine, Prolog.1.
INTRODUCTIONThe objective of the ILLICO project, is thedevelopment of a generator of natural languageinterfaces for the consultation of different kindsof knowledge bases in French.
The mainexternal characteristic of the ILLICO interfacelies in the fact that it can guide, if necessary,the user while he/she composes sentences.Guided composition is done according to theprinciple of partial synthesis of a sentence.
Themain internal characteristic of an ILLICOinterface is the modularity of its linguisticknowledge specifying the lexical, syntactic,semantic and conceptual evels of well-formedness.
In order to take the consequencesof these two main characteristics into account,we have developped an approach and a systemin which all the constraints on the differentlevels of well-formedness are coroutined whenthe system analyzes a given sentence orsynthesizes a partial one.
In this paper, wedescribe the external and internal characteristicsof the ILLICO interface, and theirconsequences onsentence processing.
Then wedescribe the principle of coroutining constraintson different levels of well-formedness and theassociated Prolog program.2.
PARTIAL SYNTHESIS FORGUIDED COMPOSITIONUsing the ILLICO interface, one can composesentences in a "free" mode or by means ofvarious kind linguistic and conceptualinformation dynamically synthesized by theinterface.
This last situation, called the "guidedcomposition" mode, occurs when the userdirectly asks the interface for help, or as soonas the interface has detected an unexpectedexpression typed by the user.
Guidedcomposition is done by partial synthesis ofsentences, a principle discussed in \[Sabatier1989\], \[Rincel and Sabatier 1990\].
The samesystem is used both for analyzing a givensentence and for providing partial synthesis ofa sentence.According to a general point of view, weassume that a sentence is correct if it is well-formed at different levels : the lexical,syntactic, conceptual and contextual levels, inAcrEs DE COLING-92, NANTES, 23-28 AO~" 1992 9 2 6 PROC.
OF COLING-92, NANTES, AUG. 23-28, 1992particular.
A sentence is lexically well-formedif all the words and expressions it containsbelong to the lexicon.
It is syntactically well-formed if its structure is described by thegrammar.
A sentence is conceptually well-formed if the relations and the objects itdescribes are compatible.
It is contextuailywell-formed if the conceptual situation itdescribes agrees with the discourse context, hipractice, a given sentence may be analyzed indifferent manners.
One way is to process it viasuccessive stages.
Each analysis produces aresult with respect to which the next analysistakes place.
The ordered stages and analysesare the following: the lexical, syntactic,conceptual nd contextual nalyses.
A processwith successive stages is not efficient if onewants the system to stop the analysis of a(complete or unc0mplete) sentence as soon as alexical, a syntactical or a conceptual error isdetected.
In order to halt the process as soon aspossible, the process must be done in one passand must take all the levels into account at thesame time.
It is the same problem in theframework of a partial synthesis process.
Arealistic manner to ensure that a partiallysynthesized sentence is well-formed is toproduce it in one pass by taking all the levels ofwell-formedness into account sinmhaneously.3.
MODULAR I,INGUISTICKNOWLEDGEOne could take all the levels of well-formedness into account simuhaneously bymerging them into one fommlism as is done forinstance in "semantic grammars".
We do notfollow such an approach because it leads to thedevelopment of interfaces not easily portable todifferent application domains.
When we haveto port an interface to a different applicationdomain, we must modify at least lexical andconceptual knowledge.
One could develop agrammar with symbols reflecting linguisticproperties, and associate to particular symbolsgeneral conditions for processing, for example,conceptual constraints, as described in \[Rinceland Sabatier 199011.
Our approach is differentWithin an ILLICO interface, knowledge thatcomes under different levels is clearly separatedinto distinct modules.
Four modules areavailable :?
A lexicou (lexical level) containingexpected words and expressions?
A grammar (syntactic level) specifyingexpected structnres of sentences andgrammatical greement.
Syntactic rules areexpressed in the Metamorphosis Grammarformalism.?
A set of compositional semantic rulesexpressed by lambda-expressions forproducing semantic representations from thesyntactic rules of the grammar.?
A conceptual model (conceptual level)specifying, in terms of domains andrelations, the lexical presuppositionsassociated with expected word andexpressions \[Milhaud 1990\], \[Godbert1991\].Formalisms in which this linguistic knowledgeis expressed are independant of anyprogramming language.4.
COROUTINING CONSTRAINTS :THE CORE PROLOG PROGRAMThe reversibility of certain Prolog programs iwell known.
So, in order to facilitate theimplementation f a system running both illanalysis and in synthesis, the run time of theILLICO interface is a Prolog program.
Lexicalrules (the lexicon), syntactic rules (thegrammar) and compositional semantic rules aretranslated into a Prolog program according tothe following schema :Lexical rules Syntactic rules Semantic rulesI I I$Translator$Prolog Program : ~entence (D,R)The top call of the Prolog program produced bytim translator is sentence (D, R) .
From theaxiom sentence of the grammar, it generatesall the couples (D,a~ where D is a derivationtree and a its associated semanticrepresentation.
Derivation trees are generatedaccording to a top-down, depth-first, left-to-right and non-deterministic strategy.
Accordingto this method, a sentence s is lexically andsyntactically well-formed if s is the list ofleaves of a derivation tree D generated bysentence  (D ,R) .
We have the followingProlog program :wel l  fo rmed(S)  :-l i s t  of leaves(D,S) ,sentence  (D, R) .This program is used both for analyzing andsynthesizing sentences.
In the analysis modeACRES DE COL1NG-92, NANTES, 23-28 AO~I 1992 9 2 7 I'ROC.
OV COLING-92, NAI'CrEs.
AUG. 23-28, 1992(i.e.
when s is bound), for reasons ofefficiency, as soon as a leaf of a derivation treeis generated, one must verify that this leaf isidentical to the current word (or expression) tobe analyzed in tile sentence.
If they areidentical, the generation of the currentderivation tree goes on ; else backtrackingautomatically occurs in the process of thederivation tree generation.
In order to do that,the call to the predicate l ist  of leaves  isplaced before the call to sentence.
AS definedm \[Giannesini et al 1985\], it is coroutined byusing the built-in predicate f reeze.l i s t  of leaves  (D, S) :-f reeze  (D, leaf  (D, \[\],S) ) .l ea f (Leaf ,L ,  \ [WordlL\] )  :-a tom(Leaf )  ,Leaf  = Word.leaf  (Root (Tree) , LI, L2) :-f reeze  (Tree, leaf  (Tree, LI, L2) ) .leaf  (Root (Treel, Tree2) , LI, L2 ) :-f reeze  (Treel, leaf  (Treel, L3, L2) ) ,f reeze  (Tree2, leaf  (Tree2, LI, L3) ) .leaf  (Root (Treel, Tree2,  Tree3) , LI, 12).
.
.
etc.The first clause lea f  tests if unification ispossible between the current leaf of thederivation tree (Leaf) and the current word ofthe sentence (Word).
If unification succeeds,the process goes on, else backtrackingautomatically occurs in tile generation of thederivation tree.
This process runs both tbranalysis (Word is bound) and for synthesis(word is free).
In order to do partial synthesisin one pass, one must record the generated setof leaves as possible current words for thesentence.
Current leaves must be recorded assoon as a current word is unexpected (analysis)or absent (synthesis) in the sentence.
In orderto do that, we must modify the first clause ofleaf .
We now describe the algorithm.The process associates with each word aninteger corresponding to its position in thesentence.
The algorithm needs two countersRightmost and Current .
The value ofRightmost is tile integer associated to tiler ightmost expected word in the sentence.Rightmost increases according to the wordsaccepted, but never decreases : backtracking inthe generation of tile derivation tree has noeffect on it.
The value of cur rent  is the integerassociated to the current word of the sentence.It increases and decreases according to theevolution of the derivation tree generation.
Thefirst clause leaf is now as follows :l ea f (Leaf ,L , \ [Word lL \ ] )  :-a tom(Leaf ) ,tes t (Leaf ,Word) .The test procedure is based on the followingalgorithm :?
Cur rent  < R ightmostif Leaf  = Wordthen  cont inuee l se  backt rack ing?
Cur rent  = R ightmostif Word  is f reethen  record  Leafbackt rack ingif Word  is boundthen if Leaf  = Wordthenerase  recorded  leavesR ightmost  : =R ightmost+lcont inuee l se  record  Leafbackt rack ingIn order to verify (in analysis mode) or tospecify (in synthesis mode) that a sentence s isconceptually well-formed, one coroutines aninitial constraint conceptually_well_formedon the semantic representation R associated tos.
This condition is a call to the rulesspecifying the conceptual model related to theapplication domain of the system.
Thecorrectness of a semantic representation R(associated with a sentence s) is verified duringits composition.Finally, The core Prolog program ensuring thata sentence is well-formed is the following :wel l  formed(S)  : -conceptua l lywe l l _ fo rmed (R) ,l ist  of leaves(D,S)  ,sentence  (D, R) .Here, the two last calls l ist of leaves andsentence  xpress the constraint lexically andsyntactically well-formed efined above.5.
CONCLUSIONMastering the control of  partial synthesis inorder to avoid dead ends is an interestingchallenge in natural anguage processing.
Theapproach consisting in coroutining constraintson different levels of well-formedness (lexical,syntactical and conceptual ones) is a technicalAc'tv~ DE COLING-92.
NANTES.
23-28 ^ Otn" 1992 9 2 8 PRec.
OF COLING-92, NANTES, AUG. 23-28, 1992solution, as the first stage of our ILLICOproject illustrates.
The next stage will consist inintegrating constraints on contextual well-formedness.6.
ACKNOWLEDGMENTSThe ILLICO project is funded by theCommission of the European Communities(TIDE Project :Nr.
158 : KOMBE), the FrenchMinist~re de le Recherche t de la Technologieand the French Conseil R6gional Provence-Alpes-C6te d'Azur.7, REFERENCESGiannesini F., Kanoui H., Pasero R., VanCaneghem M., Prolog, InterEditions1985, Addison-Wesley 1986.Godbert E., Les contraintes de domaines dansun moddle conceptuel associd duneinterface en langage naturel, RapportInterne, Groupe Intelligence ArtificieUe,1991.Milhaud G., D~finition et intdgration decontraintes conceptuelles dans unsystdme d'analyse de phrases, Mfmoirede Diplome d'Etudes Approfondies,Facult6 des Sciences de Luminy, GroupeIntelligence Artificielle 1990.Rincel Ph., Sabatier P., Using the SameSystem for Analyzing and SynthesizingSentences, Proceedings of the 13 thInternat ional  Conference  onComputational Linguistics, COLING-90, Helsinki, Finland, August 1990, pp.440-442.Sabatier P., lt, terfaces en langage naturel : dutraitement du non-attendu d lacomposition de phrases assistde,Annales des T616communications,CNET, 1989.ACtES DE COLING-92, NANTES, 23-28 Aou'r 1992 9 2 9 PROC.
OF COLING-92.
N^I~'ES, AUG. 23-28, 1992
