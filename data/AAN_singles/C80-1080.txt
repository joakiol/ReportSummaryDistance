TRANSLATING INTERACTIVE COMPUTER DIALOGUESFROM IDEOGRAPHIC TO ALPHABETIC LANGUAGESIan H. WittenMan-Machine Systems LaboratoryDepartment of Electrical Engineering ScienceUniversity of EssexColchester CO4 3SQU.K.Su~rvA scheme is described which enables usersto interact with a timesharing computer in anideographic language such as Chinese.
The hostcomputer runs a completely unmodified English-based operating system?
the necessarytranslation being performed by a preprocessingmicrocomputer which constitutes the ideographicterminal.
The two systems communicate through aserial line, and the host sees the preprocessoras an ordinary (English) terminal.
Although theexamples are all drawn from Chinese, the schemecould equally well serve other ideographiclanguages like Japanese and Korean.After brief consideration of the terminal'skeyboard and display, we examine the softwareproblems of translation for six examplesubsystems ~ two interpreted programminglanguages, text editor, document preparationsystem, interactive database management system,and the command level of the operating systemitself.The investigation shows that fewlimitations need be placed on the user'sactions.
For example, a suitabletransliteration to alphabetics allowsideographic filenames to be used and manipulatedquite naturally by operating system commands(which are themselved transliterated).
The sametransliteration allows ideographic text to beentered, edited, stored, displayed, and printedwithout difficulty.
If text to be altered islocated and specified by context (as is commonwith most modern text editors), rather than bycharacter offsets, the transliteration must bedesigned to yield unambiguous pattern matching.Existing document-preparation software can beused for ideographic text, although there is adifficulty if English and ideographics areinterspersed within the same document.
The mostdifficult subsystem to handle is the BASIClanguage, with its baroque syntax and non-contextual string-matching operations: however,the paper shows how suitable action by thepreprocessor can overcome all problems ofstandard BASIC except for operations whichdepend explicitly on ASCII codes.Recent advances in technology enableconsiderable improvements to be made overprevious attempts to construct an ideographicterminal.
1,2 High-quality raster-based graphicssystems provide an economical means of output.Hard copy can be obtained with high-resolutionmatrix printers 3 and laser-drivenphototypesetters.
4 Character generationrequires a fast read-only store for frequently-occurring ideographs, backed up by a slowerstore for the rest ~ this approach isencouraged by language statistics.5, 6Furthermore, large read-only memories will soonbecome available which are suitable for storingpicturegrams of thousands of characters.
Forexample, at the recent International Solid-StateCircuits conference in San Francisco, NTT'sMusashino Electrical Communication Laboratoryannounced a 4 Mbit read-only memory, arranged astwo duplicate halves of 2 Mbit each to reducethe effect of single-bit errors.
7 This couldaccomodate up to ~000 picturegrams, each storedas a 16 x 16 dot matrix.
The major computercompanies in the West have no product lineswhich include ideographic terminals, althoughIBM recently introduced a Katakana VDU.
8However, their appearance can only be a matterof time.Input of ideographic text is somewhat moredifficult than output.
Chinese typewriters havea table-sized keyboard with 2400 ideographs,supplemented by a library of extra characterswhich are inserted into the machine whenrequired.
The problems of inexperienced userswith such a large keyboard are exacerbated bythe difficulty of finding a particularcharacter, for ideographic languages have nosimple and universally-accepted "alphabeticordering".
Although novel keyboards andcomputer-based retrieval methods have beendesigned, 9.1 they do not appear to have met anygreat degree of acceptance.However, a new scheme which employs 238keys shows promise as a computer input devicefor Chinese ideographs.
I0 The method originallycovered a basic lexicon of 3260 characters, buthas recently been extended to over twice thisnumber without increasing the keyboard size.
Itis based on an analysis of characters intoradicals, which corresponds to the way thatChinese children are taught to write in school.With 346 radicals, between I and 6 keystrokesare required for each character, the averagebeing 2.7.
(Compare this with the average of 6--526alphabetic characters per English word.
*) These346 radicals are placed on the 23~ keys in sucha way that although some keys correspond to tworadicals, no ambiguity is created when actualChinese words are entered because ofrestrictions on valid combinations of radicals.Note incidentally that this simple technique hasbeen used in situations where alphabetic ~nglishwords are keyed on a 12-key touch-tone telephonepad.
11Taking these considerations into account,we envisage an ideographic computer terminalcomprising a small microcomputer system withkeyboard, display, and hardware charactergenerator, possibly supplemented by a writeablecharacter store which is maintained by theprocessor from a floppy disk holding theremaining, rarer, characters.Given such a microcomputer-basedideographic terminal, it is clearly possible towrite a specialized operating system andapplication software for it on a general-purposetimesharing system.
However, the effortrequired is enormous, and the approach deniesrapid access to new computer developments in theWest.
This paper explores an alternative,namely, the use of the terminal as a front-endprocessor for accessing English computersystems.
Such a scheme is not without itsdisadvantages, for much data-processing dependsupon an alphabetic structure of language.However, we presuppose no modification whateverof the host computer software and examine theextent to which the scheme can be made to work,and what facilities must be forfeit.Semiotics of interactive computer systemsWhen users speaking other alphabeticlanguages, like French or German, interact withEnglish-based computer systems, relatively fewproblems arise.
Much interactive dialogueinvolves ~ text, which is not interpretedor constrained by the system at all.
Forexample, files can be edited or used for data-base retrieval, and comments can be included inprogramming languages, irrespective of theparticular language used m providing it isalphabetic.
String decomposition by characterposition, as is common in older text editors,creates no problem.
Syntactic constraints areplaced by the system on certain signs, which wecall neutral.
Examples are file names and otheridentifiers.
However, there is no reason to~Of course, the information in a singlekeystroke is much higher in the Chinesecase.
Using a naive zero-orderapproximation which does not take intoaccount character or radical frequencies,the entropy of a keystroke is 6.4 bits,while for English with a 27-key board it isonly 4.8 bits.
Multiplying these by themean lengths we obtain surprisingly similarfigures of 23 bits/ideographs for Chineseand 28 bits/word for English.believe that this causes any more difficulty inother alphabetic language~ than it does inEnglish.
Symbols for constructs which havesemantic import in the system, like keywords inprogramming languages and operating systemcommands, constitute active signs which mustagree exactly with the representation storedinternally in the computer system.
Often,foreign users are content to write keywords inEnglish, because of its predominance in thecomputer world B international computerlanguage standards usually use English, mostprogramming-language primers are written inEnglish, and so on.
However, altering thekeyword representations stored in the computersystem is not a difficult task, at least intheory: they will appear as character stringsin the source code and editing and recompilingit is all that is necessary.
Hence the issue oflanguage-translation preprocessors which istackled in this paper does not arise foralphabetic-language users.With ideographs, the situation is not sosimple.
Certainly an ideographic computerterminal could interface to a standard serialline, emitting ASCII code sequences whichrepresent ideographs and accepting them togenerate an ideograph on the screen.
Then theoperating system tables which store keywordsinternally could be adjusted to hold the ASCIIsequences which represent the particularideographs used as keywords.
Although thiscopes correctly with active signs, difficultieswould still arise with passive and neutral ones.For example, string editing based on characterpositions would fail, unless the user was keenlyaware of the internal representation ofideographs.
It would be difficult to accomodatethe syntactic constraints for neutral signs.BASIC identifiers, for example, must contain atmost two characters, the first being a letterand the second, if any, a digit.
Resolution ofthese problems requires a more radicalmodification of the system software than simplyaltering tables.
Another, simpler, alternativeis to leave the system unchanged and to try toincorporate the necessary intelligence in apreprocessor.The kind of signs that must be dealt with,then, are as follows.e   ?These constitute text that is not interpreted bythe system.
Certain special characters, whichare interpreted at device driver level ~ likeinterrupt signals, rubouts, and line-erasecharacters ~ must not appear by accident in thepassive text.
The possibility of editing bycharacter offset must be noted.These symbols must conform to syntacticconstraints imposed by the system.
Examples arefilenamesidentifiers in programming languages.Most systems insist that neutral symbols containonly ~ n ~  characters (and not control--527characters), and in many cases only alphabeticsand numerals are allowed (ie not "/", "I",etc.).
Certain characters sometimes havespecial meaning in certain contexts.
Forexample, many operating systems allow wild-cardspecification in filenames, either of a singlecharacter (often indicated by "?")
or a stringof characters (by "*").
Programming languagesusually prohibit identifiers beginning with adigit, and some (eg BASIC) restrict their lengthto two characters.These symbols must agree exactly withinternally-stored keywords.
Hence they must betranslated by the preprocessor, if operating-system modifications are forsworn.One serious difficulty arises when text isentered in one mode and subsequently used inanother.
This happens, for example, when acommand file is entered using the editor (aspassive text) and is subsequently interpreted byanother subsystem which normally accepts inputfrom the keyboard.
The keyboard input typicallycontains a mixture of active, neutral, andpassive text (say keywords, filenames, andcomments), and whenever a subsystem is beingentered the preprocessor must obviously ensurethat these elements are converted appropriately.However, when a previously-entered text file isused for input, the conversion cannot be done bythe preprocessor becausem when the file was entered originally, thepreprocessor could not know that it wasdestined for use by the particular subsystemas a command file,andm when the subsystem reads the command file,its contents do not pass through thepreprocessor and so there is no opportunityfor conversion.For a more concrete example, considerinteracting with the BASIC language subsystemvia an ideographic preprocessor.
BASIC keywordsare typed as ideographs, and converted by thepreprocessor to English ~ PRINT, IF, GOTO,etc..
Furthermore, BASIC identifiers are alsotyped as ideographs, and must be converted toBASIC variable names ~ A0, AI, A2, etc.
- -butlet us ignore this at present.
The preprocessormust maintain tables to effect the conversion.Now if the BASIC program is SAVEd, what shouldthe resulting computer file look like?
If it isto be reLOADed by the BASIC subsystem, thekeywords in the program should be in Englishform, so that they are recognized by BASIC onreloading.
If, however, it is destined to beprinted on a lineprinter by a standard systemutility, it should have been SAVEd as text, withkeywords represented as the passive encoding ofthe ideographs which were typed originally.For the preprocessor to work transparently,it must invoke mode-conversion programsautomatically whenever the user issues certaincommands (like SAVE a BASIC program).
Thevirtue of our semiotic classification intopassive, neutral, and active signs is that itallows us to see clearly the need for this.For an ideographic terminal to interactwith English computer systems, all ideographsmust be converted to English pseudonyms.
It ispossible to identify several desirableproperties that the translation should have.The requirements for passive text are:I.
An ideograph's English pseudonym should beas short as possible, for the sake ofstorage economy on the host computer.2.
The translation should be fixed-length, sothat every ideograph is represented by thesame number of ASCII characters.Requirement 2 will assist in stringdecomposition by character offset, for then onlya fixed scale factor is needed to translate froman ideographic offset to the equivalent one onthe host computer.
It also simplifies theproblem of document preparation, for a fixed-length representation means that existingsoftware for line splitting and Justificationwill work on ideographic text.
However, itrules out the rather attractive proposition ofdirectly encoding the radicals forming acharacter.3.
Given two strings of ideographs, it shouldbe possible to tell from the translations ifone is a substring of the other withoutfalse matches being caused by incorrectalignment.This allows matching by context, as used in mosteditor programs.4.
True English should never masquerade astranslated ideographs.It will often be necessary to mix English andideographic text.
For example, programmers maywish to use some English variable names, formathematical symbols like x, y, sin, and cos areused in their Western form in most Chinesemathematics.
Clearly, requirement 4 can neverbe fully satisfied, for any sequence of ASCIIcharacters can be entered directly if desired.However, we wish to minimize the likelihood thatthe kind of text normally entered willmasquerade as translated ideographs.
It wouldseem sensible to include a little-used controlcharacter to flag each translated ideograph, butwe will see below that this introducesdifficulties.
?528For neutral text, requirement I has evenmore force, for filenames and identifiers areusually heavily restricted in length.
Clearly,in the case of BASIC identifiers no universalideographic encoding will suffice, for only 26 +26wi0 = 286 different combinations are allowed,and this is far less than the number ofideographs.
Leaving aside this special case,which must be treated as an exception by thepreprocessor, neutral text presents anotherrequirement:5.
Translations of ideographic strings shouldnot violate any restrictions that the hostcomputer places on filenames, and shouldconform with the syntax of variable names inas many programming languages as possible.additional advantage of satisfying the syntax ofvariable names for most computer languages(except BASIC, and upper-case-only languages).Requirement (6) indicates that the codeshould be based on the address of thepicturegram for the ideograph in thepreprocessor, so that although translation fromthe ideograph keystrokes to the pseudonym may beslow (Uecause a table of radicals, which mayreside on backing store, must be consulted),reconstruction of an ideograph from itstranslation requires access to the charactergenerator only.Translatin~ interactive languagesThis requirement is rather stringent, becausefor most systems it rules out all charactersexcept letters and digits.
Furthermore, thefact that most languages prohibit identifierswhich begin with a digit means that we cannotuse the standard 4-digit telecode,* as employed,for example, in some standard characterindices.
12 However, we will present a simplecoding scheme which can reDresent 27.000ideographs as three-character strings, with thecharacters chosen from the digits and upper- andlower-case alphabetics.
This allows twoideographs to serve as a 6-character filename,provided that the host distinguishes upper- andlower-case characters.Another requirement is6.
Although the translation from ideographs toEnglish may be slow (because ideographictext is entered slowly on the keyboard), itsinverse should be fast so that the host'soutput can be displayed on the terminalquickly.Requirement 3 implies the use of adelimiter to ensure correct alignment ofideograph boundaries when English translationsare matched.
This is difficult to accomodatewithin a three-character translation, since withone reserved for the delimiter insufficientcombinations of alphabetics and digits exist.To solve this, more than one character isemployed as a delimiter.
With N possiblecharacters out of which n are reserved fordelimiters, n(N-n) 2 different triples exist.Examination of this function, where N has value62 (26+26+10), shows that the obvious choice ofa single delimiter gives a paltry 3,700combinations compared with the maximum of 35,300when n = N/3.
We choose an easily-recognizableencoding with a digit in one fixed position andalphabetics filling the other two.
This gives27,000 combinations.
To minimize the likelihoodof mistaking genuine English for ideographictranslations, the digit occupies the centralposition, flanked by alphabetics.
This has the*A brief account of the fascinating historyof telecodes is given in reference 2.As a prelude to our examination of thetranslation process for BASIC, the mostcommonly-used interactive language, let usconsider a simpler, although somewhat moreesoteric, interpreted language m LISp.13k~The fundamental entity in LISP is an atQ~.
andis represented by a string of up to 30 lettersand digits.
The indivisibility of atoms, thegenerous maximum character length, and thestarkness of the LISP syntax make translating anideographic version an easy proposition.
Allnames in LISP are atoms, including functions andthe built-in functions which comprise the LISPsystem itself.
Atoms are combined into listsusing a handful of special characters likeparentheses, full stops, and quotation marks.These special characters are all commonly usedin Chinese text, and so there is no need totranslate them.An ideographic LISP preprocessor musttranslate each ideograph into a unique sequenceof English characters as described above.Translations of the system-defined atoms, ofwhich there are somewhat over 100, need to bestored in a table in the preprocessor with theirEnglish equivalents, so that they are convertedinto the correct character strings,With the encoding developed in the previoussection, 30-1etter atoms permit up to 10ideographs to be concatenated to make a name,and this should be quite sufficient to allowmnemonic identifiers to be used.
The onlyproblems with the scheme are the atomdecomposition functions EXPLODE and IMPLODE,which do not appear in "pure" LISP but are oftenprovided in specific implementations to break anatom into its constituent characters and reformit.
They must be handled by writing specialideographic EXPLODE and IMPLODE functions, whichtake into account the structure of the codes anduse the primitive EXPLODE and IMPLODE todecompose an atom into 3-character pieces.Digits and operator symbols will need to havetheir single-character representation, and thenew atomic decomposition functions shoulddistinguish genuine ideograph translations fromordinary text, using 3-character decomposition--529--for the first and single characters for thesecond.BASICThe baroque syntax of the BASIC language givesrise to many more problems than with LISP.There are four syntactic categories in BASICthat may be presented as ideographs: keywords,identifiers, character strings, and comments(REMarks).
14 Other elements of the language,namely numbers, arithmetic operators, andspecial punctuation symbols such as commas andquotation marks, are used in the Chineselanguage in the same way as in English,Furthermore, the Chinese use ordinary Westernmathematical language, so we do not envisagetranslating the names of mathematical libraryfunctions like sin and cos.Keywords are stored in a Chinese-Englishtranslation table in the preprocessing computer.Single ideographs are used for keywords, andalthough this imposes a degree of unnaturalnesson the Chinese representation, the resultingeconomy of keystrokes in entering programs wasjudged to outweigh any artificiality.
In fact,multi-ideograph keywords could be acceptedequally well if so desired.Identifiers in BASIC comprise an alphabeticletter which may be followed by a decimal digit.In Chinese, identifiers must comprise a singleideograph.
Whenever an ideographic identifieris entered in a BASIC program, it is checkedagainst the translation table.
If it does notappear, it is added to the table with a2-character translation.
Thus the firstideograph which is not a keyword will translateto "AO".
the second to "AI", and so on.Numerals, operators, and punctuation passthrough the processor without translation.
Soalso do English letters: this makes the filtertransparent to English BASIC.If English and ideographics are mixed in aBASIC program, confusion may occur.
The usercannot tell what English pseudonyms have beenassigned to his ideographs, and so cannotguarantee to avoid variable name clashes.
Theambiguity could be removed by translatingEnglish identifiers to a name selected by thepreprocessor, in the same way that ideographicones are.
An easier possibility is simply toforbid mixed-language programming.Some English letters appear in Chineseprograms m we have already mentionedmathematical functions.
It is important toensure that no parts of legal English stringscan masquerade as translated identifiers; thisis indeed the case for the 2-characteridentifiers AO, AI .
.
.
.
.
Z9.Character strings are the most difficultitems to translate, because BASIC containsstring-processing functions such as LEN()(length of a string), LEFTS(), RIGHTS(), MID$()(substrings), and INSTRS() (searches one stringfor the first occurrence of another).
It is notfeasible to encode a sequence of ideographs as asingle unit, for this would preventdecomposition.
Instead we translate theideographs individually into fixed-lengthEnglish strings.
The 3-character encodingoutlined above is quite suitable, and has theadvantage that the English representation is asshort as possible.
This is important becauseotherwise string overflows will occur oftenwithin the BASIC interpreter.The BASIC string-processing operationsspecify offsets in a string as character counts.Since strings now contain a fixed number ofEnglish characters per ideograph, all of thesefigures must be adjusted to account for the newunit of measurement.
Thus, since ideographs areconverted into three English characters each,~LEN (the ideograph for LEN) is translated into(I/3)*LEN, @LEFTS(..., <expression>) intoLEFTS( .... 3~(<expression>)), and so on ~.Identifying <expression>s when translatingLEFTS, RIGHTS, and MID$ is the closest thepreprocessor gets to the syntax of the BASIClanguage.Note that this scheme will not work ifEnglish and ideographics are mixed withinstrings.
In a simple system, one might chooseto outlaw this.
However, since symbols such aspunctuation and digits count as English, thisrequirement may be too stringent.
The onlyalternative, if strin~ decomposition is to workproperly, is to pad each English character thatappears within a string to the length of theideograph translations.
If the pad character ischosen as a control character which would nototherwise appear in strings, it will be easy toremove when translating character stringsreceived from the host on output; however, sinceone use of strings in BASIC is as filenames, andthe host operating system will probably notwelcome control characters in these, it isbetter to pad with a printing character instead.String operations which involve ASCIIcharacter codes, for example CHR$() whichreturns the character corresponding to a givenASCII code, and CHANGE() which transfers astring to an array of ASCII codes, are notimplemented.
The most sensible interpretationwould be to return the 4-digit telecodementioned earlier.
This would involvecommunicating with the ideographic preprocessor,and so would need a non-standard implementationof BASIC on the host.As for program comments, any ideograph in aBASIC REM statement is converted to an Englishpseudonym using the same translation as forstrings.
There is no need to pad Englishcharacters, but it may be best to do so for thesake of uniformity.
*The "@" prefix indicates that an ideographis typed; thus "@LEN" should be read as theideograph whose meaning is LEN.- 530Lastly, it shOuld not be forgotten thaterror messages originating from the hostcomputer will have to be translated before beingpresented on the terminal.
Some BASICimplementations simply return an error number,like "?16", which does not need altering.
(Notethat our aim is not to ~ l~g~ the programminglanguage, but to preserve it ~ warts and allwherever possible.)
If error messages are used,they should appear in full in the translationtable ~ a word-for-word translation wouldprobably be too confusing in most cases.Fortunately, BASIC implementations do notinclude user-defined variable names or parts ofprogram statements in error messages.Implementations.
With the aboveconsiderations in mind, we sketch the working ofboth a simple preprocessor and a moresophisticated one.
The first maintains a singletranslation table, which is initialized to holdthe keywords of BASIC.
Every ideograph input istranslated via this table, which is augmented ifthe ideograph is absent with the next unusedmember of the sequence AO, AI, ..., A9, BO, ...as its English translation.
Anything receivedfrom the host computer is inverse-translatedusing the table.
Digits, operators, andpunctuation pass transparently through thepreprocessing filter in both directions.English characters do too, unless they appear astranslations of ideographs in the table, inwhich case they are transformed back toideographs on output.
The only syntacticchecking of the BASIC program by thepreprocessor is in detecting, bracketting, andhalving expressions which form the secondargument of a LEFTS(), MID$()0 or RIGHTS()function, and the expressions can be detectedeasily by stacking parentheses.This simple system will work correctly forall-Chinese BASIC, providing punctuation isavoided in strings which are decomposed.
Themaximum number of different ideographs which canbe used in any one interactive session is 260.It will work for all-English BASIC and ChineseBASIC with English identifiers and strings,provided the string decomposition functions aretyped in English.
It will work for mixedEnglish and Chinese if English is avoided indecomposable strings, unless name clashes occur.These can be avoided by using single-lettervariables and ensuring that numbers are notadjacent with letters in strings.The more sophisticated preprocessor usesBASIC syntax to distinguish strings and commentsfrom identifiers.
A table is maintained foridentifiers as described above.
Englishidentifiers are translated, as well as Chineseones, to avoid name clashes in mixed programs.Ideographs in strings and comments aretranslated to a fixed-length characterrepresentation, like the one developed above,which cannot clash with keywords, identifiers,or numbers.
English characters, punctuation,and digits, occurring in strings, are padded tothe same length.
Note that an ideograph mayoccur both in a string or comment and as anidentifier.
This causes no special difficulty.What inadequacies still appear in thissecond preprocessor?
Juxtaposition ofcharacters on output cannot masquerade asideograph translations because characters instrings are always padded.
(The padding is, ofcourse, removed before final output.)
If theuser types English, punctuation, or Chinese asinput to his program it will all be translatedbefore going to the BASIC program on the host.There is only one difficulty.
If numbers aretyped as input, there is no way that thepreprocessor can tell whether they are destinedfor string input:INPUT AS,when they must be padded so that they canparticipate sensibly in string comparisons; orfor numeric input:INPUT A,when padding would cause a BASIC error.
Thus wemust rule that ~ must never be read into~ .
Punctuation and operators thataccompany numbers ("+", "-", "E", ",") must berecognized through context analysis by thepreprocessor, and padded only in non-numericcontexts.
To remove this restriction wouldrequire interpolating a hidden subroutine callwhenever a number is read, to transfer it into acharacter string, process it to remove padding,and return the numeric result.
If this weredone at BASIC level by the preprocessor problemswould occur when listing the program, and highlyconfusing error messages may appear.Text ~nooessin~ and databaseThe handling of unstructured text is rathereasier than programming languages for thepreprocessor, because of the uniformity of datarepresentation and the syntactic simplicity ofeditor commands.
Ideographs are translated intothe universal byte representation describedearlier.Text~The variety of text editors is so great that itis difficult to say anything about ideographicconversion which is generally applicable.
Asimple editor is discussed in some detail inreference 15.
It poses very few problems forideographic conversion.
The preprocessor mustdistinguish several different kinds ofinformation.
Editor commands are translatedfrom Chinese according to a pre-defined table.It is possible to determine whether typed inputis a command or not by mimicing the editor andentering text mode on the appropriate commands;but a more robust alternative is to examine theprompt sent by the host system and decide onthat basis whether a command or text isexpected.
Another kind of input is the numberswhich follow certain commands.
Where theserefer to line numbers, they pass directlythrough the preprocessor.
If intra-line editingis by character offset, such offsets must beadjusted to allow for the three-character per--531--ideograph representation of passive text, butunfortunately this precludes editing of mixedEnglish and Chinese files.
Character stringsspecified in contextual search and changecommands are treated as text, the ideographdelimiters ensuring unambiguous matching.Another information type used in text editing isthe filename, but this causes no specialproblems because the coding scheme forideographs does not use English characters thatare unacceptable in filenames.Text files are frequently used as input todocument preparation software.
In this case,the text will be interspersed with formattingcommands, which are identifiable in some way bythe formatter program.
(For example, a commonconvention is to place formatting commands aloneon a line beginning with a full stop.)
Suchcommands could be made known to the preprocessorwhen entering or editing the file and translatedaccordingly to their English equivalents, butthe modularity of the system is enhanced if theyare placed in the file as passive text andconverted to their active form by a specialprogram on the host Just prior to formatting.This can be invoked automatically by thepreprocessor whenever the document preparationprogram is run, in a manner which is transparentto the user.Little difficulty is foreseen in takingadvantage of many of the features of Englishdocument preparation systems which may exist onthe host.
In order that filling will workproperly, ideographic translations should beseparated by white space, and this can be doneby the above-mentioned conversion program.Furthermore, ideograph representations shouldhave a fixed length.
Any English which appearsin the text should not be padded, or else itwill occur in the output with ideograph spacing.Automatic hyphenation should of course besuppressed.Specification of line lengths, vertical andhorizontal spacing, centering, and paragraphingwill all be effective.
It may be desired toconvert numerical specifications of characterpositions so that ideographs rather thancharacters are measured.
Sections of Englishtext will be formatted with a different paperwidth than Chinese, for in reality eachideograph occupies less width than its Englishpseudonym: this can be corrected by the userinserting line length commands before and afterthe English text.
Footnotes, superscripts, andsubscripts cause no special difficulty.
As withEnglish text, underlining and alternative typefonts are allowable only if the output deviceand its handler permit.The output of the document preparationprogram will be a new version of the input withmodified line breaks and some space charactersinserted for padding (for example, at thebeginning of paragraphs).
Conversion of thisfile to paper form is a Job for a specialisedChinese application program with knowledge ofthe character representations.~ to databas~Like editors and document preparation systems,database systems vary so much thatgeneralizations about the feasibility ofideographic translation are impossible.
Anexample system 16 has been considered in somedetail, 15 and indicates that no specialdifficulty should occur.~ ~ a  ~ th~ ho~ o ~  ~The host operating system itself is treatedby the preprocessor simply as anotherinteractive subsystem.
The keywords, with theirideographic translations, are tabulated in thepreprocessor.
Wild-card specification ofcharacters in filenames is easily handled bydefining a "wild-ideograph" character andexpanding it into three adjacent copies of thehost operating system's wild-card character.A distinction must be made between commandswhich enter an interactive subsystem and thosewhich do not.
The latter class compriseslogging in and out and the file maintenancecommands, including that which invokes the(non-interactive) document preparation system.Because file names and text files arerepresented on the host system according to thestandard translation method described earlier,no special action need be taken by thepreprocessor for most of these commands.
In thecase of the command which sends a file to thehost's printer (as opposed to the one whichlists it on the terminal) the appropriateideograph should translate to the name of aspecial application program designed forideographic printing.
We saw earlier thatexecution of the document preparation systemshould be preceded by passing the file through asoftware filter which translates ideographicformatting commands into English: this actionis performed automatically when the document-preparation command is received by thepreprocessor.Whenever an interactive subsystem isentered, information appropriate to it needs tobe installed in the preprocessor.
This willcertainly include a translation table for thekeywords of the subsystem, and for mostsubsystems certain keywords require specialaction which is specified as code executable bythe preprocessor.
Since the amount of code isnot great, it can be permanently resident in thepreprocessor and accessed symbolically fromtranslation tables.Translation tables for subsystems caneither be stored locally on the preprocessor'sdisk, or centrally in the host.
If manyideographic terminals are attached to atimesharing host, there are advantages incentral storage ~ especially if subsystems arebeing updated or new ones added.
Tables are--532sent from host to preprocessor by executing aspecially-written host application program withan argument which specifies the host's filenameof the appropriate translation table.
Whenevera subsystem is left, the preprocessor reverts toits table for operating system commands.All the subsystems we have encountered usethe standard method for ideographic translationthroughout, except BASIC which builds a table ofidentifiers dynamically.
For this, the table ofidentifiers must be saved on the host whenever aprogram is SAVEd, and loaded into thepreprocessor whenever one is LOADed.
Localstorage cannot be used in case another terminaluser wishes to run the same BASIC program.
Itseems that the most generally useful way tostore BASIC programs is in the form of passivetext, with identifiers and keywords in theirordinary ideograph encoding.
This will involvefile conversion prior to each LOAD and SAVEcommand.
Part of the table entry for the BASICLOAD and SAVE keywords will invoke thismechanism automatically, so that the user neednever be aware of the process.This paper has outlined designconsiderations for an ideographic preprocessorwhich acts as a timesharing terminal~to a hostcomputer, working in English.
To the host, itis just an ordinary terminal.
None of theoperating system needs modifying in any way.
Asmal} number of special utility programs andtranslation tables must be stored by the host:the programs perform such jobs as fileconversion and sending translation tables to thepreprocessor.
They are invoked by thepreprocessor when needed, without explicitrequests being made by the user.Six important subsystems have beenexamined: the operating system itself, and twointerpreted languages, which were analysed insome detail; a text editor, document preparationsoftware, and an interactive database managementsystem.
Very few limitations need be placed onthe user's actions.
The most difficultsubsystem to handle is BASIC, with itsrestrictive syntax and non-contextual string-matching operations.The chief shortcomings of the system areits commitment to half-duplex operation, and theneed to forego any processing of characters asnumbers.
These are both inherent in the natureof the translation process, and cannot beovercome without modifying the host software.It is felt that they are a small price to payfor the convenience of an easily-implementable,modular, ideographic terminal for accessingEnglish host computers.Acknowledgement sIt is a pleasure to acknowledge thecontributions of John Brazier, Rod Cuff, BrianGaines, and Y.H.
Ng through interesting andstimulating conversations on the subject of theideographic preprocessor.
This research wassupported by GWITS.ReferencesI.
Chang, S.K., "An interactive system forChinese character generation andretrieval," IEEE Trans.
~_V_~J~, Man andCvbernetics, SMC-\], pp 257-265, May 1973.2.
Walker, G.L., Kuno, S., Smith, B.N.
andHolt, R.B., "Chinese mathematical textanalysis," IEEE Trans.
En~ineerin~ ~and ~ ,  EWS-11, pp 118-128, August1968.3.
For example, the Mullard 11SSDR.
Also,Ideographics Inc., Sunnyvale, Californiamake a special printer intended forideographic output (IPX Model 1800).4.
For example.
Monotype International'sLasercomp 4000.5.
Hsieh.
Hwang and Lin.
"Analysis of Chineseradicals," ~.
Nat iona l~-~3AI lgUniversity.
December 1972.6.
Kwok, P.C.K.
and Lai, J.P.K., "Dual-modetransmission technique for Chineseideographs in a teletext system,"~ Le~,  15, pp 268-269, May1979.7.
Posa, J.G.
and Allan, R., "ISSCC: a galleryof gigantic memories, gigabit logic, andsingle-chip systems," Electronig~, 52, pp13~-151, February 14, 1980.~.
~BM~/!4978- !d~so lavst~t~on,Kevboar~=~ feature  manual, IBM,1979.9.
Caldwell) S.H., "The Sinotype m a machinefor the composition of Chinese from akeyboard," ~.
Franklin Institute, pp471-502, June 1959.10.
Kong, L. and Tu, J., "User manual for Loh'sChinese keyboard," Hung On-To ResearchCentre for Machine Translation, March 1979.11.
Witten, I.H.
and Madams, P.H.C., "TheTelephone Enquiry Service: a man-machinesystem using synthetic speech,"International ~.
M a n - M a ~ ~ .
~.
pp449-464, July 1977.12.
Dougherty, C.Y.. Lamb, S.M.
and Martin,S.E., ~ character ~ .University of California Press, 1963.13.
McCarthy, J., Abrahams, P.W., Edwards,D.J., Hart, T.P.
and Levin, M.I~, L I~  !.~pj~O.g~_mm.~'~ ~ .
M.I.T.
Press, 1962.14.
Forsyth.
R., T_~\ ]~Jk~!~\ ]~,  London:Chapman and Hall, 1978.15.
Witten, I.H.
and Ng, Y.H., "Anideographic-language front-end processor,"~omouter ~., in press.16.
Held, G.D., Stonebreaker, M.R.
and Wong,E., "INGRES ~ a relational data basesystem," ~J~O~q.
Nat~Q~l~Co~C_~f~.
4_~4.
pp 409-416, 1975.--533--
