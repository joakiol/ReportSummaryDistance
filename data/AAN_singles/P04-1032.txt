Minimal Recursion Semantics as Dominance Constraints:Translation, Evaluation, and AnalysisRuth Fuchss,1 Alexander Koller,1 Joachim Niehren,2 and Stefan Thater11 Dept.
of Computational Linguistics, Saarland University, Saarbr?cken, Germany ?2 INRIA Futurs, Lille, France{fuchss,koller,stth}@coli.uni-sb.deAbstractWe show that a practical translation of MRS de-scriptions into normal dominance constraints is fea-sible.
We start from a recent theoretical translationand verify its assumptions on the outputs of the En-glish Resource Grammar (ERG) on the Redwoodscorpus.
The main assumption of the translation?that all relevant underspecified descriptions arenets?is validated for a large majority of cases; allnon-nets computed by the ERG seem to be system-atically incomplete.1 IntroductionUnderspecification is the standard approach to deal-ing with scope ambiguity (Alshawi and Crouch,1992; Pinkal, 1996).
The readings of underspecifiedexpressions are represented by compact and concisedescriptions, instead of being enumerated explic-itly.
Underspecified descriptions are easier to de-rive in syntax-semantics interfaces (Egg et al, 2001;Copestake et al, 2001), useful in applications suchas machine translation (Copestake et al, 1995), andcan be resolved by need.Two important underspecification formalisms inthe recent literature are Minimal Recursion Seman-tics (MRS) (Copestake et al, 2004) and dominanceconstraints (Egg et al, 2001).
MRS is the under-specification language which is used in large-scaleHPSG grammars, such as the English ResourceGrammar (ERG) (Copestake and Flickinger, 2000).The main advantage of dominance constraints isthat they can be solved very efficiently (Althaus etal., 2003; Bodirsky et al, 2004).Niehren and Thater (2003) defined, in a theo-retical paper, a translation from MRS into normaldominance constraints.
This translation clarified theprecise relationship between these two related for-malisms, and made the powerful meta-theory ofdominance constraints accessible to MRS. Theirgoal was to also make the large grammars for MRS?
Supported by the CHORUS project of the SFB 378 of theDFG.and the efficient constraint solvers for dominanceconstraints available to the other formalism.However, Niehren and Thater made three techni-cal assumptions:1. that EP-conjunction can be resolved in a pre-processing step;2. that the qeq relation in MRS is simply domi-nance;3. and (most importantly) that all linguisticallycorrect and relevant MRS expressions belongto a certain class of constraints called nets.This means that it is not obvious whether theirresult can be immediately applied to the output ofpractical grammars like the ERG.In this paper, we evaluate the truth of these as-sumptions on the MRS expressions which the ERGcomputes for the sentences in the Redwoods Tree-bank (Oepen et al, 2002).
The main result of ourevaluation is that 83% of the Redwoods sentencesare indeed nets, and 17% aren?t.
A closer analysisof the non-nets reveals that they seem to be sys-tematically incomplete, i. e. they predict more read-ings than the sentence actually has.
This supportsthe claim that all linguistically correct MRS expres-sions are indeed nets.
We also verify the other twoassumptions, one empirically and one by proof.Our results are practically relevant because dom-inance constraint solvers are much faster and havemore predictable runtimes when solving nets thanthe LKB solver for MRS (Copestake, 2002), as wealso show here.
In addition, nets might be useful asa debugging tool to identify potentially problematicsemantic outputs when designing a grammar.Plan of the Paper.
We first recall the definitionsof MRS (?2) and dominance constraints (?3).
Wepresent the translation from MRS-nets to domi-nance constraints (?4) and prove that it can be ex-tended to MRS-nets with EP-conjunction (?5).
Fi-nally we evaluate the net hypothesis and the qeqassumption on the Redwoods corpus, and compareruntimes (?6).2 Minimal Recursion SemanticsThis section presents a definition of Minimal Re-cursion Semantics (MRS) (Copestake et al, 2004)including EP-conjunctions with a merging seman-tics.
Full MRS with qeq-semantics, top handles, andevent variables will be discussed in the last para-graph.MRS Syntax.
MRS constraints are conjunctiveformulas over the following vocabulary:1.
An infinite set of variables ranged over by h.Variables are also called handles.2.
An infinite set of constants x,y,z denoting in-divual variables of the object language.3.
A set of function symbols ranged over by P,and a set of quantifier symbols ranged over byQ.
Pairs Qx are further function symbols.4.
The binary predicate symbol ?=q?.MRS constraints have three kinds of literals, twokinds of elementary predications (EPs) in the firsttwo lines and handle constraints in the third line:1. h : P(x1, .
.
.
,xn,h1, .
.
.
,hm), where n,m ?
02. h : Qx(h1,h2)3. h1 =q h2In EPs, label positions are on the left of ?:?
and argu-ment positions on the right.
Let M be a set of literals.The label set lab(M) contains all handles of M thatoccur in label but not in argument position, and theargument handle set arg(M) contains all handles ofM that occur in argument but not in label position.Definition 1 (MRS constraints).
An MRS con-straint (MRS for short) is a finite set M of MRS-literals such that:M1 every handle occurs at most once in argumentposition in M,M2 handle constraints h =q h?
always relate argu-ment handles h to labels h?, andM3 for every constant (individual variable) x in ar-gument position in M there is a unique literalof the form h : Qx(h1,h2) in M.We say that an MRS M is compact if every han-dle h in M is either a label or an argument handle.Compactness simplifies the following proofs, but itis no serious restriction in practice.We usually represent MRSs as directed graphs:the nodes of the graph are the handles of the MRS,EPs are represented as solid lines, and handle con-straints are represented as dotted lines.
For instance,the following MRS is represented by the graph onthe left of Fig.
1.
{h5 : somey(h6,h8),h7 : book(y),h1 : everyx(h2,h4),h3 : student(x),h9 : read(x,y),h2 =q h3,h6 =q h7}everyx someystudentx bookyreadx,yeveryxsomeystudentxbookyreadx,yeveryxsomeystudentxbooky readx,yFigure 1: An MRS and its two configurations.Note that the relation between bound variablesand their binders is made explicit by binding edgesdrawn as dotted lines (cf.
C2 below); transitively re-dundand binding edges (e. g., from somey to booky)however are omited.MRS Semantics.
Readings of underspecified rep-resentations correspond to configurations of MRSconstraints.
Intuitively, a configuration is an MRSwhere all handle constraints have been resolved byplugging the ?tree fragments?
into each other.Let M be an MRS and h,h?
be handles in M. Wesay that h immediately outscopes h?
in M if thereis an EP in M with label h and argument handle h?,and we say that h outscopes h?
in M if the pair (h,h?
)belongs to the reflexive transitive closure of the im-mediate outscope relation of M.Definition 2 (MRS configurations).
An MRS M isa configuration if it satisfies conditions C1 and C2:C1 The graph of M is a tree of solid edges: (i) allhandles are labels i. e., arg(M) = /0 and M con-tains no handle constraints, (ii) handles don?tproperly outscope themselve, and (iii) all han-dles are pairwise connected by EPs in M.C2 If h : Qx(h1,h2) and h?
: P(.
.
.
,x, .
.
.)
belong toM, then h outscopes h?
in M i. e., binding edgesin the graph of M are transitively redundant.We say that a configuration M is configuration ofan MRS M?
if there exists a partial substitution ?
:lab(M?
) arg(M?)
that states how to identify labelswith argument handles of M?
so that:C3 M = {?
(E) | E is an EP in M?
}, andC4 for all h =q h?
in M?, h outscopes ?(h?)
in M.The value ?
(E) is obtained by substituting all la-bels in dom(?)
in E while leaving all other handelsunchanged.The MRS on the left of Fig.
1, for instance, hastwo configurations given to the right.EP-conjunctions.
Definitions 1 and 2 generalizethe idealized definition of MRS of Niehren andThater (2003) by EP-conjunctions with a mergingsemantics.
An MRS M contains an EP-conjunctionif it contains different EPs with the same label h.Theintuition is that EP-conjunctions are interpreted byobject language conjunctions.P1, P2P3{h1 : P1(h2),h1 : P2(h3),h4 : P3h2 =q h4,h3 =q h4}Figure 2: An unsolvable MRS with EP-conjunctionP1P3P2P1P2, P3configuresFigure 3: A solvable MRS without merging-freeconfigarationFig.
2 shows an MRSwith an EP-conjunction andits graph.
The function symbols of both EPs are con-joined and their arguments are merged into a set.The MRS does not have configurations since the ar-gument handles of the merged EPs cannot jointlyoutscope the node P4.We call a configuration merging if it contains EP-conjunctions, and merging-free otherwise.
Mergingconfigurations are needed to solve EP-conjuctionssuch as {h : P1, h : P2}.
Unfortunately, they can alsosolve MRSs without EP-conjunctions, such as theMRS in Fig.
3.
The unique configuration of thisMRS is a merging configuration: the labels of P1and P2 must be identified with the only available ar-gument handle.
The admission of merging configu-rations may thus have important consequences forthe solution space of arbitrary MRSs.Standard MRS. Standard MRS requires threefurther extensions: (i) qeq-semantics, (ii) top-handles, and (iii) event variables.
These extensionsare less relevant for our comparision.The qeq-semantics restricts the interpretation ofhandle constraints beyond dominance.
Let M be anMRS with handles h,h?.
We say that h is qeq h?
in Mif either h = h?, or there is an EP h : Qx(h0,h1) in Mand h1 is qeq h?
in M. Every qeq-configuration is aconfiguration as defined above, but not necessarilyvice versa.
The qeq-restriction is relevant in theorybut will turn out unproblematic in practice (see ?6).Standard MRS requires the existence of tophandles in all MRS constraints.
This conditiondoesn?t matter for MRSs with connected graphs (see(Bodirsky et al, 2004) for the proof idea).
MRSswith unconnected graphs clearly do not play anyrole in practical underspecified semantics.Finally, MRSs permit events variables e,e?
as asecond form of constants.
They are treated equallyto individual variables except that they cannot bebound by quantifiers.3 Dominance ConstraintsDominance constraints are a general framework fordescribing trees.
For scope underspecification, theyare used to describe the syntax trees of object lan-guage formulas.
Dominance constraints are the corelanguage underlying CLLS (Egg et al, 2001) whichadds parallelism and binding constraints.Syntax and semantics.
We assume a possibly in-finite signature ?
= { f ,g, .
.
.}
of function symbolswith fixed arities (written ar( f )) and an infinite setof variables ranged over by X ,Y,Z.A dominance constraint ?
is a conjunction ofdominance, inequality, and labeling literals of thefollowing form, where ar( f ) = n:?
::= X ?
Y | X = Y | X : f (X1, .
.
.
,Xn) | ???
?Dominance constraints are interpreted over fi-nite constructor trees i. e., ground terms constructedfrom the function symbols in ?.
We identify groundterms with trees that are rooted, ranked, edge-ordered and labeled.
A solution for a dominanceconstraint ?
consists of a tree ?
and an assign-ment ?
that maps the variables in ?
to nodes of ?such that all constraints are satisfied: labeling lit-erals X : f (X1, .
.
.
,Xn) are satisfied iff ?
(X) is la-beled with f and its daughters are ?
(X1), .
.
.
,?
(Xn)in this order; dominance literals X ?
Y are satisfiediff ?
(X) dominates ?
(Y ) in ?
; and inequality literalsX = Y are satisfied iff ?
(X) and ?
(Y ) are distinctnodes.Solved forms.
Satisfiable dominance constraintshave infinitely many solutions.
Constraint solversfor dominance constraints therefore do not enumer-ate solutions but solved forms i. e., ?tree shaped?constraints.
To this end, we consider (weakly) nor-mal dominance constraints (Bodirsky et al, 2004).We call a variable a hole of ?
if it occurs in argu-ment position in ?
and a root of ?
otherwise.Definition 3.
A dominance constraint ?
is normalif it satisfies the following conditions.N1 (a) each variable of ?
occurs at most once inthe labeling literals of ?.
(b) each variable of ?
occurs at least once inthe labeling literals of ?.N2 for distinct roots X and Y of ?, X =Y is in ?.N3 (a) if X ?
Y occurs in ?, Y is a root in ?.
(b) if X ?
Y occurs in ?, X is a hole in ?.We call ?
weakly normal if it satisfies the aboveproperties except for N1 (b) and N3 (b).Note that Definition 3 imposes compactness: theheight of tree fragments is always one.
This is noteveryx someystudentx bookyreadx,yeveryxsomeystudentxbooky readx,yeveryxsomeystudentxbookyreadx,yFigure 4: A normal dominance constraint (left) andits two solved forms (right).a serious restriction, as weakly normal dominanceconstraints can be compactified, provided that dom-inance links relate either roots or holes with roots.Weakly normal dominance constraints ?
can berepresented by dominance graphs.
The dominancegraph of ?
is a directed graph G = (V,ET unionmultiED) de-fined as follows.
The nodes of G are the variables of?.
Labeling literals X : f (X1, .
.
.
,Xk) are representedby tree edges (X ,Xi) ?
ET , for 1?
i?
k, and domi-nance literals X ?
X ?
are represented by dominanceedges (X ,X ?)
?
ED.
Inequality literals are not repre-sented in the graph.
In pictures, labeling literals aredrawn with solid lines and dominance edges withdotted lines.We say that a constraint ?
is in solved form if itsgraph is in solved form.
A graph G is in solved formiff it is a forest.
The solved forms of G are solvedforms G?
which are more specific than G i. e., theydiffer only in their dominance edges and the reacha-bility relation of G extends the reachability of G?.
Aminimal solved form is a solved form which is min-imal with respect to specificity.
Simple solved formsare solved forms where every hole has exactly oneoutgoing dominance edge.
Fig.
4 shows as a con-crete example the translation of the MRS descrip-tion in Fig.
1 together with its two minimal solvedforms.
Both solved forms are simple.4 Translating Merging-Free MRS-NetsThis section defines MRS-nets without EP-conjunctions, and sketches their translation tonormal dominance constraints.
We define netsequally for MRSs and dominance constraints.
Thekey semantic property of nets is that differentnotions of solutions coincide.
In this section, weshow that merging-free configurations coincidesto minimal solved forms.
?5 generalizes the trans-lation by adding EP-conjunctions and permittingmerging semantics.Pre-translation.
An MRS constraint M can berepresented as a corresponding dominance con-straint ?M as follows: The variables of ?M are thehandles of M, and the literals of ?M correspond... ... ...... ...(a) strong (b) weak (c) islandFigure 5: Fragment Schemata of Netsthose of M in the following sence:h : P(x1, .
.
.
,xn,h1, .
.
.
,hk) 	?
h : Px1,...,xn(h1, .
.
.
,hk)h : Qx(h1,h2) 	?
h : Qx(h1,h2)h =q h??
h ?
h?Additionally, dominance literals h ?
h?
are added to?M for all h,h?
s. t. h :Qx(h1,h2) and h?
:P(.
.
.
,x, .
.
.
)belong to M (cf.
C2), and literals h = h?
are addedto ?M for all h,h?
in distinct label position in M.Lemma 1.
If a compact MRS M does not containEP-conjunctions then ?M is weakly normal, and thegraph of M is the transitive reduction of the graphof ?M.Nets.
A hypernormal path (Althaus et al, 2003)in a constraint graph is a path in the undirectedgraph that contains for every leaf X at most one in-cident dominance edge.Let ?
be a weakly normal dominance constraintand let G be the constraint graph of ?.
We say that?
is a dominance net if the transitive reduction G?of G is a net.
G?
is a net if every tree fragment Fof G?
satisfies one of the following three conditions,illustrated in Fig.
5:Strong.
Every hole of F has exactly one outgoingdominance edge, and there is no weak root-to-rootdominance edge.Weak.
Every hole except for the last one has ex-actly one outgoing dominance edge; the last holehas no outgoing dominance edge, and there is ex-actly one weak root-to-root dominance edge.Island.
The fragment has one hole X , and all vari-ables which are connected to X by dominance edgesare connected by a hypernormal path in the graphwhere F has been removed.We say that an MRS M is an MRS-net if the pre-translation of its literals results in a dominance net?M.
We say that an MRS-net M is connected if ?Mis connected; ?M is connected if the graph of ?M isconnected.Note that this notion of MRS-nets implies thatMRS-nets cannot contain EP-conjunctions as other-wise the resulting dominance constraint would notbe weakly normal.
?5 shows that EP-conjunctionscan be resolved i. e., MRSs with EP-conjunctionscan be mapped to corresponding MRSs without EP-conjunctions.If M is an MRS-net (without EP-conjunctions),then M can be translated into a corresponding dom-inance constraint ?
by first pre-translating M intoa ?M and then normalizing ?M by replacing weakroot-to-root dominance edges in weak fragments bydominance edges which start from the open lasthole.Theorem 1 (Niehren and Thater, 2003).
Let M bean MRS and ?M be the translation of M. If M is aconnected MRS-net, then the merging-free configu-rations of M bijectively correspond to the minimalsolved forms of the ?M.The following section generalizes this result toMRS-nets with a merging semantics.5 Merging and EP-ConjunctionsWe now show that if an MRS is a net, then all itsconfigurations are merging-free, which in particularmeans that the translation can be applied to the moregeneral version of MRS with a merging semantics.Lemma 2 (Niehren and Thater, 2003).
All mini-mal solved forms of a connected dominance net aresimple.Lemma 3.
If all solved forms of a normal domi-nance constraint are simple, then all of its solvedforms are minimal.Theorem 2.
The configurations of an MRS-net Mare merging-free.Proof.
Let M?
be a configuration of M and let ?
bethe underlying substitution.
We construct a solvedform ?M?
as follows: the labeling literals of ?M?
arethe pre-translations of the EPs in M, and ?M?
has adominance literal h?
?
h iff (h,h?)
?
?, and inequal-ity literals X = Y for all distinct roots in ?M?
.By condition C1 in Def.
2, the graph of M?
is atree, hence the graph of ?M?
must also be a tree i. e.,?M?
is a solved form.
?M?
must also be more spe-cific than the graph of ?M because the graph of M?satisfies all dominance requirements of the handleconstraints in M, hence ?M?
is a solved form of ?M.M clearly solved ?M?
.
By Lemmata 2 and 3, ?M?must be simple and minimal because ?M is a net.But then M?
cannot contain EP-conjunctions i. e.,M?is merging-free.The merging semantics of MRS is needed tosolve EP-conjunctions.
As we have seen, the merg-ing semantics is not relevant for MRS constraintswhich are nets.
This also verifies Niehren andThater?s (2003) assumption that EP-conjunctionsare ?syntactic sugar?
which can be resolved in a pre-processing step: EP-conjunctions can be resolvedby exhaustively applying the following rule whichadds new literals to make the implicit conjunctionexplicit:h : E1(h1, .
.
.
,hn),h : E2(h?1, .
.
.
,h?m)?h : ?E1&E2?
(h1, .
.
.
,hn,h?1, .
.
.
,h?m),where E(h1, .
.
.
,hn) stands for an EP with argumenthandles h1, .
.
.
,hn, and where ?E1&E2?
is a complexfunction symbol.
If this rule is applied exhaustivelyto an MRS M, we obtain an MRS M?
without EP-conjunctions.
It should be intuitively clear that theconfigurations of M and M?
correspond; Therefore,the configurations of M also correspond to the min-imal solved forms of the translation of M?.6 EvaluationThe two remaining assumptions underlying thetranslation are the ?net-hypothesis?
that all lin-guistically relevant MRS expressions are nets, andthe ?qeq-hypothesis?
that handle constraints can begiven a dominance semantics practice.
In this sec-tion, we empirically show that both assumptions aremet in practice.As an interesting side effect, we also compare therun-times of the constraint-solvers we used, and wefind that the dominance constraint solver typicallyoutperforms the MRS solver, often by significantmargins.Grammar and Resources.
We use the EnglishResource Grammar (ERG), a large-scale HPSGgrammar, in connection with the LKB system, agrammar development environment for typed fea-ture grammars (Copestake and Flickinger, 2000).We use the system to parse sentences and outputMRS constraints which we then translate into domi-nance constraints.
As a test corpus, we use the Red-woods Treebank (Oepen et al, 2002) which con-tains 6612 sentences.
We exclude the sentences thatcannot be parsed due to memory capacities or wordsand grammatical structures that are not included inthe ERG, or which produce ill-formed MRS expres-sions (typically violating M1) and thus base ourevaluation on a corpus containing 6242 sentences.In case of syntactic ambiguity, we only use the firstreading output by the LKB system.To enumerate the solutions of MRS constraintsand their translations, we use the MRS solver builtinto the LKB system and a solver for weakly nor-mal dominance constraints (Bodirsky et al, 2004),...(a) open hole (b) ill-formed islandFigure 6: Two classes of non-netswhich is implemented in C++ and uses LEDA, aclass library for efficient data types and algorithms(Mehlhorn and N?her, 1999).6.1 Relevant Constraints are NetsWe check for 6242 constraints whether they consti-tute nets.
It turns out that 5200 (83.31%) constitutenets while 1042 (16.69%) violate one or more net-conditions.Non-nets.
The evaluation shows that the hypoth-esis that all relevant constraints are nets seems tobe falsified: there are constraints that are not nets.However, a closer analysis suggests that these con-straints are incomplete and predict more readingsthan the sentence actually has.
This can also be il-lustrated with the average number of solutions: Forthe Redwoods corpus in combination with the ERG,nets have 1836 solutions on average, while non-netshave 14039 solutions, which is a factor of 7.7.
Thelarge number of solutions for non-nets is due to the?structural weakness?
of non-nets; often, non-netshave only merging configurations.Non-nets can be classified into two categories(see Fig.
6): The first class are violated ?strong?fragments which have holes without outgoing dom-inance edge and without a corresponding root-to-root dominance edge.
The second class are violated?island?
fragments where several outgoing domi-nance edges from one hole lead to nodes whichare not hypernormally connected.
There are twomore possibilities for violated ?weak?
fragments?having more than one weak dominance edge or hav-ing a weak dominance edge without empty hole?,but they occur infrequently (4.4%).
If those weakfragments were normalized, they would constituteviolated island fragments, so we count them as such.124 (11.9%) of the non-nets contain empty holes,762 (73.13%) contain violated island fragments,and 156 (14.97%) contain both.
Those constraintsthat contain only empty holes and no violated is-land fragments cannot be configured, as in configu-rations, all holes must be filled.Fragments with open holes occur frequently, butnot in all contexts, for constraints representing forexample time specifications (e. g., ?from nine totwelve?
or ?a three o?clock flight?)
or intensionalexpressions (e. g., ?Is it??
or ?I suppose?).
Ill-availablee, axaycafeteriaxsaunay ande,x,ypropaxaycafeteriaxsaunay,ande,x,yavailableepropax aycafeteriax saunayande,x,yavailableeprop?1 ?2Figure 7: An MRS for ?A sauna and a cafeteria areavailable?
(top) and two of sixteen merging config-urations (below).ax aycafeteriax saunayande,x,yavailableepropFigure 8: The ?repaired?
MRS from Fig.
7formed island fragments are often triggered by somekind of coordination, like ?a restaurant and/or asauna?
or ?a hundred and thirty Marks?, also im-plicit ones like ?one hour thirty minutes?
or ?onethirty?.
Constraints with both kinds of violated frag-ments emerge when there is some input that yieldsan open hole and another part of the input yields aviolated island fragment (for example in construc-tions like ?from nine to eleven thirty?
or ?the teno?clock flight Friday or Thursday?, but not neces-sarily as obviously as in those examples).The constraint on the left in Fig.
7 gives a con-crete example for violated island fragments.
Thetopmost fragment has outgoing dominance edgesto otherwise unconnected subconstraints ?1 and ?2.Under the merging-free semantics of the MRS di-alect used in (Niehren and Thater, 2003) where ev-ery hole has to be filled exactly once, this constraintcannot be configured: there is no hole into which?available?
could be plugged.
However, standardMRS has merging configuration where holes can befilled more than once.
For the constraint in Fig.
7this means that ?available?
can be merged in almosteverywhere, only restricted by the ?qeq-semantics?which forbids for instance ?available?
to be mergedwith ?sauna.?
In fact, the MRS constraint solver de-rives sixteen configurations for the constraint, twoof which are given in Fig.
7, although the sentencehas only two scope readings.We conjecture that non-nets are semantically ?in-complete?
in the sense that certain constraints aremissing.
For instance, an alternative analysis for theabove constraint is given in Fig.
8.
The constraintadds an additional argument handle to ?and?
andplaces a dominance edge from this handle to ?avail-able.?
In fact, the constraint is a net; it has exactlytwo readings.6.2 Qeq is dominanceFor all nets, the dominance constraint solver cal-culates the same number of solutions as the MRSsolver does, with 3 exceptions that hint at problemsin the syntax-semantics interface.
As every config-uration that satisfies proper qeq-constraints is alsoa configuration if handle constraints are interpretedunder the weaker notion of dominance, the solutionscomputed by the dominance constraint solver andthe MRS solver must be identical for every con-straint.
This means that the additional expressivityof proper qeq-constraints is not used in practice,which in turn means that in practice, the translationis sound and correct even for the standard MRS no-tion of solution, given the constraint is a net.6.3 Comparison of RuntimesThe availability of a large body of underspecifieddescriptions both in MRS and in dominance con-straint format makes it possible to compare thesolvers for the two underspecification formalisms.We measured the runtimes on all nets using a Pen-tium III CPU at 1.3 GHz.
The tests were run in amulti-user environment, but as the MRS and domi-nance measurements were conducted pairwise, con-ditions were equal for every MRS constraint andcorresponding dominance constraint.The measurements for all MRS-nets with lessthan thirty dominance edges are plotted in Fig.
9.Inputs are grouped according to the constraint size.The filled circles indicate average runtimes withineach size group for enumerating all solutions us-ing the dominance solver, and the empty circles in-dicate the same for the LKB solver.
The bracketsaround each point indicate maximum and minimumruntimes in that group.
Note that the vertical axis islogarithmic.We excluded cases in which one or both of thesolvers did not return any results: There were 173sentences (3.33% of all nets) on which the LKBsolver ran out of memory, and 1 sentence (0.02%)that took the dominance solver more than two min-utes to solve.The graph shows that the dominance constraintsolver is generally much faster than the LKB solver:The average runtime is less by a factor of 50 forconstraints of size 10, and this grows to a factorof 500 for constraints of size 25.
Our experimentsshow that the dominance solver outperforms theLKB solver on 98% the cases.
In addition, its run-times are much more predictable, as the brackets inthe graph are also shorter by two or three ordersof magnitude, and the standard deviation is muchsmaller (not shown).7 ConclusionWe developed Niehren and Thater?s (2003) theoret-ical translation into a practical system for translat-ing MRS into dominance constraints, applied it sys-tematically to MRSs produced by English ResourceGrammar for the Redwoods treebank, and evaluatedthe results.
We showed that:1. most ?real life?
MRS expressions are MRS-nets, which means that the translation is correctin these cases;2. for nets, merging is not necessary (or even pos-sible);3. the practical translation works perfectly for allMRS-nets from the corpus; in particular, the=q relation can be taken as synonymous withdominance in practice.Because the translation works so well in practice,we were able to compare the runtimes of MRS anddominance constraint solvers on the same inputs.This evaluation shows that the dominance constraintsolver outperforms the MRS solver and displaysmore predictable runtimes.
A researcher workingwith MRS can now solve MRS nets using the ef-ficient dominance constraint solvers.A small but significant number of the MRS con-straints derived by the ERG are not nets.
We haveargued that these constraints seem to be systemati-cally incomplete, and their correct completions areindeed nets.
A more detailed evaluation is an impor-tant task for future research, but if our ?net hypoth-esis?
is true, a system that tests whether all outputsof a grammar are nets (or a formal ?safety criterion?that would prove this theoretically) could be a use-ful tool for developing and debugging grammars.From a more abstract point of view, our evalua-tion contributes to the fundamental question of whatexpressive power an underspecification formalismneeds.
It turned out that the distinction between qeq1101001000100001000001e+060  5  10  15  20  25  30Time(ms)Size (number of dominance edges)DC solver (LEDA)MRS solverFigure 9: Comparison of runtimes for the MRS and dominance constraint solvers.and dominance hardly plays a role in practice.
If thenet hypothesis is true, it also follows that merging isnot necessary because EP-conjunctions can be con-verted into ordinary conjunctions.
More researchalong these lines could help unify different under-specification formalisms and the resources that areavailable for them.Acknowledgments We are grateful to AnnCopestake for many fruitful discussions, and to ourreviewers for helpful comments.ReferencesH.
Alshawi and R. Crouch.
1992.
Monotonic se-mantic interpretation.
In Proc.
30th ACL, pages32?39.Ernst Althaus, Denys Duchier, Alexander Koller,Kurt Mehlhorn, Joachim Niehren, and SvenThiel.
2003.
An efficient graph algorithm fordominance constraints.
Journal of Algorithms,48:194?219.Manuel Bodirsky, Denys Duchier, Joachim Niehren,and Sebastian Miele.
2004.
An efficient algo-rithm for weakly normal dominance constraints.In ACM-SIAM Symposium on Discrete Algo-rithms.
The ACM Press.Ann Copestake and Dan Flickinger.
2000.
Anopen-source grammar development environmentand broad-coverage english grammar usingHPSG.
In Conference on Language Resourcesand Evaluation.Ann Copestake, Dan Flickinger, Rob Malouf, Su-sanne Riehemann, and Ivan Sag.
1995.
Transla-tion using Minimal Recursion Semantics.
Leu-ven.Ann Copestake, Alex Lascarides, and DanFlickinger.
2001.
An algebra for semanticconstruction in constraint-based grammars.
InProceedings of the 39th Annual Meeting of theAssociation for Computational Linguistics, pages132?139, Toulouse, France.Ann Copestake, Dan Flickinger, Carl Pollard, andIvan Sag.
2004.
Minimal recursion semantics:An introduction.
Journal of Language and Com-putation.
To appear.Ann Copestake.
2002.
Implementing Typed FeatureStructure Grammars.
CSLI Publications, Stan-ford, CA.Markus Egg, Alexander Koller, and JoachimNiehren.
2001.
The Constraint Language forLambda Structures.
Logic, Language, and Infor-mation, 10:457?485.K.
Mehlhorn and S. N?her.
1999.
The LEDA Plat-form of Combinatorial and Geometric Comput-ing.
Cambridge University Press, Cambridge.See also http://www.mpi-sb.mpg.de/LEDA/.Joachim Niehren and Stefan Thater.
2003.
Bridg-ing the gap between underspecification for-malisms: Minimal recursion semantics as dom-inance constraints.
In Proceedings of the 41stAnnual Meeting of the Association for Computa-tional Linguistics.Stephan Oepen, Kristina Toutanova, Stuart Shieber,Christopher Manning, Dan Flickinger, andThorsten Brants.
2002.
The LinGO Redwoodstreebank: Motivation and preliminary applica-tions.
In Proceedings of the 19th InternationalConference on Computational Linguistics(COLING?02), pages 1253?1257.Manfred Pinkal.
1996.
Radical underspecification.In 10th Amsterdam Colloquium, pages 587?606.
